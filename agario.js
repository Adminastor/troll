(function(jb, bD, mL) {
    bD.promhx = bD.promhx || {};
    bD.openfl = bD.openfl || {};
    bD.lime = bD.lime || {};
    var nt = {},
        ea = function() {
            return n0.__string_rec(this, "")
        };
		window.libs = nt;
    function lP(js, i) {
        function q() {}
        q.prototype = js;
        var i2 = new q();
        for (var i1 in i) {
            i2[i1] = i[i1]
        }
        if (i.toString !== Object.prototype.toString) {
            i2.toString = i.toString
        }
        return i2
    }
    var cb = function() {};
    nt.ApplicationMain = cb;
    cb.__name__ = ["ApplicationMain"];
    cb.config = null;
    cb.preloader = null;
    cb.create = function() {
        var q1 = new cC();
        q1.create(cb.config);
        var qZ = new gP();
        cb.preloader = new ik(qZ);
        q1.setPreloader(cb.preloader);
        cb.preloader.onComplete.add(cb.init);
        cb.preloader.create(cb.config);
        var qY = [];
        var i2 = [];
        qY.push("core-assets/Close_disabled.png");
        i2.push("IMAGE");
        qY.push("core-assets/oaktree.png");
        i2.push("IMAGE");
        qY.push("core-assets/Close.png");
        i2.push("IMAGE");
        qY.push("atlas/main_shop.xml");
        i2.push("TEXT");
        qY.push("atlas/main_shop.png");
        i2.push("IMAGE");
        qY.push("img/Twitter_Share_BTN.png");
        i2.push("IMAGE");
        qY.push("img/FB_Arrow.png");
        i2.push("IMAGE");
        qY.push("img/massboost_2x_shop.png");
        i2.push("IMAGE");
        qY.push("img/currency_icon.png");
        i2.push("IMAGE");
        qY.push("img/back_button.png");
        i2.push("IMAGE");
        qY.push("img/xpboost_3x_shop.png");
        i2.push("IMAGE");
        qY.push("img/profilepic_guest.png");
        i2.push("IMAGE");
        qY.push("img/incentive_android+iphone.png");
        i2.push("IMAGE");
        qY.push("img/arrow.png");
        i2.push("IMAGE");
        qY.push("img/Close_disabled.png");
        i2.push("IMAGE");
        qY.push("img/massboost_3x_shop.png");
        i2.push("IMAGE");
        qY.push("img/Close.png");
        i2.push("IMAGE");
        qY.push("img/xpboost_2x_shop.png");
        i2.push("IMAGE");
        qY.push("img/Facebook_Share_BTN.png");
        i2.push("IMAGE");
        qY.push("img/giant_coin.png");
        i2.push("IMAGE");
        qY.push("img/incentive_iphone_button.png");
        i2.push("IMAGE");
        qY.push("img/not_for_guests.png");
        i2.push("IMAGE");
        qY.push("img/fast_play.png");
        i2.push("IMAGE");
        qY.push("img/incentive_android.png");
        i2.push("IMAGE");
        qY.push("img/incentive_android_button.png");
        i2.push("IMAGE");
        qY.push("img/Close_old.png");
        i2.push("IMAGE");
        qY.push("img/Facebook_Symbol.png");
        i2.push("IMAGE");
        qY.push("img/Close_disabled_old.png");
        i2.push("IMAGE");
        qY.push("img/hint.png");
        i2.push("IMAGE");
        qY.push("img/Exp_Star.png");
        i2.push("IMAGE");
        qY.push("img/sticker.png");
        i2.push("IMAGE");
        qY.push("img/multiplier_stamp.png");
        i2.push("IMAGE");
        qY.push("img/play.png");
        i2.push("IMAGE");
        qY.push("img/purchase_plus.png");
        i2.push("IMAGE");
        qY.push("img/Login_Play.png");
        i2.push("IMAGE");
        qY.push("particle/Daily_Quest_Sparkles_1a.plist");
        i2.push("TEXT");
        qY.push("particle/LevelUpSlotBarParticle.png");
        i2.push("IMAGE");
        qY.push("particle/Sparkle_1a.png");
        i2.push("IMAGE");
        qY.push("particle/Sparkle_2c.png");
        i2.push("IMAGE");
        qY.push("particle/Daily_Quest_Sparkles_2.plist");
        i2.push("TEXT");
        qY.push("particle/Sparkle_1.png");
        i2.push("IMAGE");
        qY.push("particle/Daily_Quest_Sparkles_1c.plist");
        i2.push("TEXT");
        qY.push("particle/Daily_Quest_Chest.plist");
        i2.push("TEXT");
        qY.push("particle/Daily_Quest_Sparkles_2a.plist");
        i2.push("TEXT");
        qY.push("particle/Daily_Quest_Sparkles_1.plist");
        i2.push("TEXT");
        qY.push("particle/Sparkle_2.png");
        i2.push("IMAGE");
        qY.push("particle/Daily_Quest_Sparkles_2c.plist");
        i2.push("TEXT");
        qY.push("particle/Daily_Quest_Sparkles_2b.plist");
        i2.push("TEXT");
        qY.push("particle/Sparkle_2b.png");
        i2.push("IMAGE");
        qY.push("particle/Sparkle_1b.png");
        i2.push("IMAGE");
        qY.push("particle/Sparkle_2a.png");
        i2.push("IMAGE");
        qY.push("particle/Sparkle_1c.png");
        i2.push("IMAGE");
        qY.push("particle/Daily_Quest_Sparkles_1b.plist");
        i2.push("TEXT");
        qY.push("particle/LevelUpSlotBar-ipadhd.plist");
        i2.push("TEXT");
        if (cb.config.assetsPrefix != null) {
            var js = 0;
            var q0 = qY.length;
            while (js < q0) {
                var i1 = js++;
                if (i2[i1] != "FONT") {
                    qY[i1] = cb.config.assetsPrefix + qY[i1]
                }
            }
        }
        cb.preloader.load(qY, i2);
        var q = q1.exec()
    };
    cb.init = function() {
        var i = 0;
        var i1 = 0;
        var q = function(i2) {
            i++;
            if (i == i1) {
                cb.start()
            }
        };
        cb.preloader = null;
        if (i1 == 0) {
            cb.start()
        }
    };
    cb.main = function() {
        cb.config = {
            build: "1",
            company: "Miniclip",
            file: "agario",
            fps: 60,
            name: "Agario",
            orientation: "",
            packageName: "agario",
            version: "1.1.2",
            windows: [{
                antialiasing: 0,
                background: 0,
                borderless: false,
                depthBuffer: false,
                display: 0,
                fullscreen: false,
                hardware: false,
                height: 1024,
                parameters: "{}",
                resizable: true,
                stencilBuffer: true,
                title: "Agario",
                vsync: false,
                width: 1280,
                x: null,
                y: null
            }]
        }
    };
    cb.start = function() {
        var i1 = false;
        var qY = kX.resolveClass("Main");
        var js = 0;
        var i2 = kX.getClassFields(qY);
        while (js < i2.length) {
            var q = i2[js];
            ++js;
            if (q == "main") {
                i1 = true;
                break
            }
        }
        bY.initialize();
        if (i1) {
            ar.callMethod(qY, ar.field(qY, "main"), [])
        } else {
            var i = kX.createInstance(ac, [])
        }
        if (ns.current.stage.window.__fullscreen) {
            ns.current.stage.dispatchEvent(new f8("fullScreen", false, false, true, true))
        }
        ns.current.stage.dispatchEvent(new hM("resize", false, false))
    };
    var iE = function() {};
    nt["openfl.events.IEventDispatcher"] = iE;
    iE.__name__ = ["openfl", "events", "IEventDispatcher"];
    iE.prototype = {
        addEventListener: null,
        dispatchEvent: null,
        hasEventListener: null,
        removeEventListener: null,
        willTrigger: null,
        __class__: iE
    };
    var lR = function(i) {
        if (i != null) {
            this.__targetDispatcher = i
        }
    };
    nt["openfl.events.EventDispatcher"] = lR;
    lR.__name__ = ["openfl", "events", "EventDispatcher"];
    lR.__interfaces__ = [iE];
    lR.__sortByPriority = function(q, i) {
        if (q.priority == i.priority) {
            return 0
        } else {
            if (q.priority > i.priority) {
                return -1
            } else {
                return 1
            }
        }
    };
    lR.prototype = {
        __dispatching: null,
        __targetDispatcher: null,
        __eventMap: null,
        __newEventMap: null,
        addEventListener: function(q1, i1, q, q4, q3) {
            if (q3 == null) {
                q3 = false
            }
            if (q4 == null) {
                q4 = 0
            }
            if (q == null) {
                q = false
            }
            if (this.__eventMap == null) {
                this.__dispatching = new io();
                this.__eventMap = new io();
                this.__newEventMap = new io()
            }
            if (!this.__eventMap.exists(q1)) {
                var qZ = [];
                qZ.push(new lD(i1, q, q4));
                this.__eventMap.set(q1, qZ)
            } else {
                var q2;
                if (this.__dispatching.get(q1) == true) {
                    if (!this.__newEventMap.exists(q1)) {
                        var qY = this.__eventMap.get(q1);
                        q2 = qY.slice();
                        this.__newEventMap.set(q1, q2)
                    } else {
                        q2 = this.__newEventMap.get(q1)
                    }
                } else {
                    q2 = this.__eventMap.get(q1)
                }
                var q0 = 0;
                var js = q2.length;
                while (q0 < js) {
                    var i2 = q0++;
                    if (ar.compareMethods(q2[i2].callback, i1)) {
                        return
                    }
                }
                q2.push(new lD(i1, q, q4));
                q2.sort(lR.__sortByPriority)
            }
        },
        dispatchEvent: function(i) {
            if (this.__targetDispatcher != null) {
                i.target = this.__targetDispatcher
            } else {
                i.target = this
            }
            return this.__dispatchEvent(i)
        },
        hasEventListener: function(i) {
            if (this.__eventMap == null) {
                return false
            }
            if (this.__dispatching.get(i) == true && this.__newEventMap.exists(i)) {
                return this.__newEventMap.get(i).length > 0
            } else {
                return this.__eventMap.exists(i)
            }
        },
        removeEventListener: function(q2, i2, i1) {
            if (i1 == null) {
                i1 = false
            }
            if (this.__eventMap == null) {
                return
            }
            var q0 = this.__eventMap.get(q2);
            if (q0 == null) {
                return
            }
            var q = this.__dispatching.get(q2) == true;
            if (q) {
                if (!this.__newEventMap.exists(q2)) {
                    var qZ = this.__eventMap.get(q2);
                    q0 = qZ.slice();
                    this.__newEventMap.set(q2, q0)
                } else {
                    q0 = this.__newEventMap.get(q2)
                }
            }
            var q1 = 0;
            var qY = q0.length;
            while (q1 < qY) {
                var js = q1++;
                if (q0[js].match(i2, i1)) {
                    q0.splice(js, 1);
                    break
                }
            }
            if (!q) {
                if (q0.length == 0) {
                    this.__eventMap.remove(q2)
                }
                if (!this.__eventMap.iterator().hasNext()) {
                    this.__eventMap = null;
                    this.__newEventMap = null
                }
            }
        },
        toString: function() {
            var i = kX.getClassName(n0.getClass(this));
            var q = i.split(".").pop();
            return "[object " + q + "]"
        },
        willTrigger: function(i) {
            return this.hasEventListener(i)
        },
        __dispatchEvent: function(js) {
            if (this.__eventMap == null || js == null) {
                return false
            }
            var i2 = js.type;
            var qZ;
            if (this.__dispatching.get(i2) == true) {
                qZ = this.__newEventMap.get(i2);
                if (qZ == null) {
                    return false
                }
                qZ = qZ.slice()
            } else {
                qZ = this.__eventMap.get(i2);
                if (qZ == null) {
                    return false
                }
                this.__dispatching.set(i2, true)
            }
            if (js.target == null) {
                if (this.__targetDispatcher != null) {
                    js.target = this.__targetDispatcher
                } else {
                    js.target = this
                }
            }
            js.currentTarget = this;
            var q = js.eventPhase == 1;
            var i1 = 0;
            var qY;
            while (i1 < qZ.length) {
                qY = qZ[i1];
                if (qY.useCapture == q) {
                    qY.callback(js);
                    if (js.__isCanceledNow) {
                        break
                    }
                }
                if (qY == qZ[i1]) {
                    i1++
                }
            }
            if (this.__newEventMap != null && this.__newEventMap.exists(i2)) {
                var i = this.__newEventMap.get(i2);
                if (i.length > 0) {
                    this.__eventMap.set(i2, i)
                } else {
                    this.__eventMap.remove(i2)
                }
                if (!this.__eventMap.iterator().hasNext()) {
                    this.__eventMap = null;
                    this.__newEventMap = null
                } else {
                    this.__newEventMap.remove(i2)
                }
            }
            this.__dispatching.set(js.type, false);
            return true
        },
        __class__: lR
    };
    var py = function() {};
    nt["openfl.display.IBitmapDrawable"] = py;
    py.__name__ = ["openfl", "display", "IBitmapDrawable"];
    py.prototype = {
        __worldTransform: null,
        __worldColorTransform: null,
        __blendMode: null,
        __cacheAsBitmap: null,
        __renderCairo: null,
        __renderCairoMask: null,
        __renderCanvas: null,
        __renderCanvasMask: null,
        __renderGL: null,
        __updateChildren: null,
        __updateTransforms: null,
        __updateMask: null,
        __class__: py
    };
    var eH = function() {
        this.__cacheAsBitmapSmooth = true;
        this.__cacheAsBitmap = false;
        this.__maskCached = false;
        lR.call(this);
        this.__alpha = 1;
        this.__transform = new qd();
        this.__visible = true;
        this.__rotation = 0;
        this.__rotationSine = 0;
        this.__rotationCosine = 1;
        this.__renderTransform = new qd();
        this.__offset = new pp();
        this.__worldOffset = new pp();
        this.__worldAlpha = 1;
        this.__worldTransform = new qd();
        this.__worldColorTransform = new n();
        this.set_name("instance" + ++eH.__instanceCount)
    };
    nt["openfl.display.DisplayObject"] = eH;
    eH.__name__ = ["openfl", "display", "DisplayObject"];
    eH.__interfaces__ = [py];
    eH.__super__ = lR;
    eH.prototype = lP(lR.prototype, {
        blendMode: null,
        cacheAsBitmapBounds: null,
        loaderInfo: null,
        mouseX: null,
        mouseY: null,
        opaqueBackground: null,
        parent: null,
        root: null,
        scale9Grid: null,
        shader: null,
        stage: null,
        __renderTransform: null,
        __worldColorTransform: null,
        __worldOffset: null,
        __worldTransform: null,
        __alpha: null,
        __blendMode: null,
        __cairo: null,
        __children: null,
        __filters: null,
        __graphics: null,
        __interactive: null,
        __isMask: null,
        __mask: null,
        __maskGraphics: null,
        __maskCached: null,
        __name: null,
        __objectTransform: null,
        __offset: null,
        __renderable: null,
        __renderDirty: null,
        __rotation: null,
        __rotationCosine: null,
        __rotationSine: null,
        __scrollRect: null,
        __shader: null,
        __transform: null,
        __transformDirty: null,
        __visible: null,
        __worldAlpha: null,
        __worldAlphaChanged: null,
        __worldClip: null,
        __worldClipChanged: null,
        __worldTransformCache: null,
        __worldTransformChanged: null,
        __worldVisible: null,
        __worldVisibleChanged: null,
        __worldZ: null,
        __cacheAsBitmap: null,
        __cacheAsBitmapMatrix: null,
        __cacheAsBitmapSmooth: null,
        __forceCacheAsBitmap: null,
        __updateCachedBitmap: null,
        __cachedBitmap: null,
        __cachedBitmapBounds: null,
        __cachedFilterBounds: null,
        __cacheGLMatrix: null,
        __updateFilters: null,
        __canvas: null,
        __context: null,
        __style: null,
        getBounds: function(i1) {
            var i;
            if (i1 != null) {
                i = this.__getWorldTransform().clone();
                i.concat(i1.__getWorldTransform().clone().invert())
            } else {
                i = qd.__temp;
                i.identity()
            }
            var q = new gn();
            this.__getBounds(q, i);
            return q
        },
        getRect: function(i) {
            return this.getBounds(i)
        },
        globalToLocal: function(i) {
            i = i.clone();
            this.__getWorldTransform().__transformInversePoint(i);
            return i
        },
        hitTestObject: function(i1) {
            if (i1 != null && i1.parent != null && this.parent != null) {
                var i = this.getBounds(this);
                var q = i1.getBounds(this);
                return i.intersects(q)
            }
            return false
        },
        hitTestPoint: function(i, i2, q) {
            if (q == null) {
                q = false
            }
            if (this.parent != null) {
                var i1 = new gn();
                this.__getBounds(i1, this.__getWorldTransform());
                return i1.containsPoint(new pp(i, i2))
            }
            return false
        },
        localToGlobal: function(i) {
            return this.__getWorldTransform().transformPoint(i)
        },
        __broadcast: function(q, i1) {
            if (this.__eventMap != null && this.hasEventListener(q.type)) {
                var i = lR.prototype.__dispatchEvent.call(this, q);
                if (q.__isCanceled) {
                    return true
                }
                return i
            }
            return false
        },
        __dispatchEvent: function(q) {
            var i = lR.prototype.__dispatchEvent.call(this, q);
            if (q.__isCanceled) {
                return true
            }
            if (q.bubbles && this.parent != null && this.parent != this) {
                q.eventPhase = 3;
                if (q.target == null) {
                    q.target = this
                }
                this.parent.__dispatchEvent(q)
            }
            return i
        },
        __enterFrame: function(i) {},
        __getBounds: function(q, i) {
            if (this.__graphics != null) {
                this.__graphics.__getBounds(q, i)
            }
        },
        __getCursor: function() {
            return null
        },
        __getInteractive: function(i) {
            return false
        },
        __getLocalBounds: function(i) {
            this.__getBounds(i, this.__transform)
        },
        __getRenderBounds: function(i1, i) {
            if (this.__scrollRect == null) {
                this.__getBounds(i1, i)
            } else {
                var q = gn.__temp;
                q.copyFrom(this.__scrollRect);
                q.__transform(q, i);
                i1.__expand(i.tx, i.ty, q.width, q.height)
            }
        },
        __getWorldTransform: function() {
            if (this.__transformDirty || eH.__worldTransformDirty > 0) {
                var i2 = [];
                var js = this;
                var i1 = this.__transformDirty;
                if (this.parent == null) {
                    if (i1) {
                        this.__update(true, false)
                    }
                } else {
                    while (js.parent != null) {
                        i2.push(js);
                        js = js.parent;
                        if (js.__transformDirty) {
                            i1 = true
                        }
                    }
                }
                if (i1) {
                    var q = i2.length;
                    while (--q >= 0) {
                        i2[q].__update(true, false)
                    }
                }
            }
            return this.__worldTransform
        },
        __hitTest: function(q, qY, i1, i, js, i2) {
            if (this.__graphics != null) {
                if (!i2.get_visible() || this.__isMask) {
                    return false
                }
                if (this.get_mask() != null && !this.get_mask().__hitTestMask(q, qY)) {
                    return false
                }
                if (this.__graphics.__hitTest(q, qY, i1, this.__getWorldTransform())) {
                    if (i != null && !js) {
                        i.push(i2)
                    }
                    return true
                }
            }
            return false
        },
        __hitTestMask: function(i, q) {
            if (this.__graphics != null) {
                if (this.__graphics.__hitTest(i, q, true, this.__getWorldTransform())) {
                    return true
                }
            }
            return false
        },
        __renderCairo: function(i) {
            if (this.__graphics != null) {
                fc.render(this, i)
            }
        },
        __renderCairoMask: function(i) {
            if (this.__graphics != null) {
                qy.renderMask(this.__graphics, i)
            }
        },
        __renderCanvas: function(i) {
            if (this.__graphics != null) {
                cc.render(this, i)
            }
        },
        __renderCanvasMask: function(i) {
            if (this.__graphics != null) {
                aB.renderMask(this.__graphics, i)
            }
        },
        __renderDOM: function(i) {
            if (this.__graphics != null) {
                l.render(this, i)
            }
        },
        __renderGL: function(i) {
            if (!this.__renderable || this.__worldAlpha <= 0) {
                return
            }
            if (this.__cacheAsBitmap) {
                this.__cacheGL(i);
                return
            }
            if (this.__scrollRect != null) {
                i.maskManager.pushRect(this.__scrollRect, this.__renderTransform)
            }
            if (this.__mask != null && this.__maskGraphics != null && this.__maskGraphics.__commands.get_length() > 0) {
                i.maskManager.pushMask(this)
            }
            if (this.__graphics != null) {
                if (this.__graphics.__hardware) {
                    fW.render(this, i)
                } else {
                    aB.render(this.__graphics, i);
                    mA.renderBitmap(this, i)
                }
            }
            if (this.__mask != null && this.__maskGraphics != null && this.__maskGraphics.__commands.get_length() > 0) {
                i.maskManager.popMask()
            }
            if (this.__scrollRect != null) {
                i.maskManager.popRect()
            }
        },
        __drawGraphicsGL: function(i) {
            if (this.__graphics != null) {
                if (this.__graphics.__hardware) {
                    fW.render(this, i)
                } else {
                    aB.render(this.__graphics, i);
                    mA.renderBitmap(this, i)
                }
            }
        },
        __preRenderGL: function(i) {
            if (this.__scrollRect != null) {
                i.maskManager.pushRect(this.__scrollRect, this.__renderTransform)
            }
            if (this.__mask != null && this.__maskGraphics != null && this.__maskGraphics.__commands.get_length() > 0) {
                i.maskManager.pushMask(this)
            }
        },
        __postRenderGL: function(i) {
            if (this.__mask != null && this.__maskGraphics != null && this.__maskGraphics.__commands.get_length() > 0) {
                i.maskManager.popMask()
            }
            if (this.__scrollRect != null) {
                i.maskManager.popRect()
            }
        },
        __cacheGL: function(qZ) {
            var i = this.__cacheAsBitmapMatrix != null;
            var qY = this.__cachedBitmapBounds.x;
            var js = this.__cachedBitmapBounds.y;
            var q1 = this.__cachedBitmapBounds.width;
            var i1 = this.__cachedBitmapBounds.height;
            if (this.__cacheGLMatrix == null) {
                this.__cacheGLMatrix = new qd()
            }
            if (i) {
                var q0 = gn.__temp;
                this.__cachedBitmapBounds.__transform(q0, this.__cacheAsBitmapMatrix);
                qY = q0.x;
                js = q0.y;
                q1 = q0.width;
                i1 = q0.height;
                this.__cacheGLMatrix = this.__cacheAsBitmapMatrix.clone()
            } else {
                this.__cacheGLMatrix.identity()
            }
            if (q1 <= 0 && i1 <= 0) {
                return
            }
            if (this.__updateCachedBitmap || this.__updateFilters) {
                if (this.__cachedFilterBounds != null) {
                    q1 += Math.abs(this.__cachedFilterBounds.x) + Math.abs(this.__cachedFilterBounds.width);
                    i1 += Math.abs(this.__cachedFilterBounds.y) + Math.abs(this.__cachedFilterBounds.height)
                }
                if (this.__cachedBitmap == null) {
                    this.__cachedBitmap = f0.__asRenderTexture()
                }
                this.__cachedBitmap.__resize(Math.ceil(q1), Math.ceil(i1));
                var q = this.__cacheGLMatrix.clone();
                q.translate(-qY, -js);
                var i2 = this.__shader;
                this.__shader = null;
                this.__cachedBitmap.__drawGL(qZ, this, q, null, null, null, true, false, true);
                this.__shader = i2;
                this.__updateCachedBitmap = false
            }
            if (this.__updateFilters) {
                a7.__applyFilters(this.__filters, qZ, this.__cachedBitmap, this.__cachedBitmap, null, null);
                this.__updateFilters = false
            }
            this.__cacheGLMatrix.invert();
            this.__cacheGLMatrix.__translateTransformed(qY, js);
            this.__cacheGLMatrix.concat(this.__renderTransform);
            this.__cacheGLMatrix.translate(this.__offset.x, this.__offset.y);
            qZ.spriteBatch.renderBitmapData(this.__cachedBitmap, this.__cacheAsBitmapSmooth, this.__cacheGLMatrix, this.__worldColorTransform, this.__worldAlpha, this.blendMode, this.__shader, 0)
        },
        __setStageReference: function(i) {
            if (this.stage != i) {
                if (this.stage != null) {
                    if (this.stage.get_focus() == this) {
                        this.stage.set_focus(null)
                    }
                    this.dispatchEvent(new hM("removedFromStage", false, false))
                }
                this.stage = i;
                if (i != null) {
                    this.dispatchEvent(new hM("addedToStage", false, false))
                }
            }
        },
        __setRenderDirty: function() {
            if (!this.__renderDirty) {
                this.__updateCachedBitmap = true;
                this.__updateFilters = this.get_filters() != null && this.get_filters().length > 0;
                this.__renderDirty = true;
                eH.__worldRenderDirty++
            }
        },
        __setTransformDirty: function() {
            if (!this.__transformDirty) {
                this.__transformDirty = true;
                eH.__worldTransformDirty++
            }
        },
        __update: function(i1, q, i) {
            this.__renderable = this.get_visible() && this.get_scaleX() != 0 && this.get_scaleY() != 0 && !this.__isMask;
            this.__updateTransforms();
            if (this.parent != null && this.__isMask) {
                this.__maskCached = false
            }
            if (q && this.__transformDirty) {
                this.__transformDirty = false;
                eH.__worldTransformDirty--
            }
            if (!i1 && this.__mask != null && !this.__mask.__maskCached) {
                if (this.__maskGraphics == null) {
                    this.__maskGraphics = new e3()
                }
                this.__maskGraphics.clear();
                this.__mask.__update(true, true, this.__maskGraphics);
                this.__mask.__maskCached = true
            }
            if (i != null) {
                this.__updateMask(i)
            }
            if (!i1 && this.__cacheAsBitmap) {
                if (this.__updateCachedBitmap || this.__updateFilters) {
                    if (this.__cachedBitmapBounds == null) {
                        this.__cachedBitmapBounds = new gn()
                    }
                    if (this.cacheAsBitmapBounds != null) {
                        this.__cachedBitmapBounds.copyFrom(this.cacheAsBitmapBounds)
                    } else {
                        this.__cachedBitmapBounds.setEmpty();
                        this.__getRenderBounds(this.__cachedBitmapBounds, qd.__identity)
                    }
                    if (this.__filters != null) {
                        if (this.__cachedFilterBounds == null) {
                            this.__cachedFilterBounds = new gn()
                        }
                        this.__cachedFilterBounds.setEmpty();
                        a7.__expandBounds(this.__filters, this.__cachedFilterBounds, qd.__identity);
                        this.__cachedBitmapBounds.x += this.__cachedFilterBounds.x;
                        this.__cachedBitmapBounds.y += this.__cachedFilterBounds.y
                    }
                }
            }
            if (!i1) {
                if (!this.__worldColorTransform.__equals(this.get_transform().get_colorTransform())) {
                    this.__worldColorTransform = this.get_transform().get_colorTransform().__clone()
                }
                if (this.parent != null) {
                    this.__worldAlpha = this.get_alpha() * this.parent.__worldAlpha;
                    this.__worldColorTransform.__combine(this.parent.__worldColorTransform);
                    if (this.blendMode == null || this.blendMode == 10) {
                        this.__blendMode = this.parent.__blendMode
                    }
                    if (this.shader == null) {
                        this.__shader = this.parent.__shader
                    }
                } else {
                    this.__worldAlpha = this.get_alpha()
                }
                if (q && this.__renderDirty) {
                    this.__renderDirty = false
                }
            }
        },
        __updateChildren: function(i) {
            this.__renderable = this.get_visible() && this.get_scaleX() != 0 && this.get_scaleY() != 0 && !this.__isMask;
            if (!this.__renderable && !this.__isMask) {
                return
            }
            this.__worldAlpha = this.get_alpha();
            if (this.__transformDirty) {
                this.__transformDirty = false;
                eH.__worldTransformDirty--
            }
        },
        __updateMask: function(i) {
            if (this.__graphics != null) {
                i.__commands.overrideMatrix(this.__worldTransform);
                i.__commands.append(this.__graphics.__commands);
                i.set___dirty(true);
                i.__visible = true;
                if (i.__bounds == null) {
                    i.__bounds = new gn()
                }
                this.__graphics.__getBounds(i.__bounds, qd.__identity)
            }
        },
        __updateTransforms: function(i2) {
            var q = i2 != null;
            var i1;
            if (q) {
                i1 = i2.clone()
            } else {
                i1 = this.__transform
            }
            if (this.__worldTransform == null) {
                this.__worldTransform = new qd()
            }
            if (!q && this.parent != null) {
                var i = this.parent.__worldTransform;
                this.__worldTransform.a = i1.a * i.a + i1.b * i.c;
                this.__worldTransform.b = i1.a * i.b + i1.b * i.d;
                this.__worldTransform.c = i1.c * i.a + i1.d * i.c;
                this.__worldTransform.d = i1.c * i.b + i1.d * i.d;
                this.__worldTransform.tx = i1.tx * i.a + i1.ty * i.c + i.tx;
                this.__worldTransform.ty = i1.tx * i.b + i1.ty * i.d + i.ty;
                this.__worldOffset.copyFrom(this.parent.__worldOffset)
            } else {
                this.__worldTransform.copyFrom(i1);
                this.__worldOffset.setTo(0, 0)
            }
            if (this.__scrollRect != null) {
                this.__offset = this.__worldTransform.deltaTransformPoint(this.__scrollRect.get_topLeft());
                this.__worldOffset.offset(this.__offset.x, this.__offset.y)
            } else {
                this.__offset.setTo(0, 0)
            }
            this.__renderTransform.copyFrom(this.__worldTransform);
            this.__renderTransform.translate(-this.__worldOffset.x, -this.__worldOffset.y)
        },
        get_alpha: function() {
            return this.__alpha
        },
        set_alpha: function(i) {
            if (i > 1) {
                i = 1
            }
            if (i != this.__alpha) {
                if (!this.__renderDirty) {
                    this.__updateCachedBitmap = true;
                    this.__updateFilters = this.get_filters() != null && this.get_filters().length > 0;
                    this.__renderDirty = true;
                    eH.__worldRenderDirty++
                }
            }
            return this.__alpha = i
        },
        set_blendMode: function(i) {
            this.__blendMode = i;
            return this.blendMode = i
        },
        set_shader: function(i) {
            this.__shader = i;
            return this.shader = i
        },
        get_cacheAsBitmap: function() {
            return this.__cacheAsBitmap
        },
        set_cacheAsBitmap: function(i) {
            if (!this.__renderDirty) {
                this.__updateCachedBitmap = true;
                this.__updateFilters = this.get_filters() != null && this.get_filters().length > 0;
                this.__renderDirty = true;
                eH.__worldRenderDirty++
            }
            return this.__forceCacheAsBitmap ? this.__cacheAsBitmap = true : this.__cacheAsBitmap = i
        },
        get_cacheAsBitmapMatrix: function() {
            return this.__cacheAsBitmapMatrix
        },
        set_cacheAsBitmapMatrix: function(i) {
            if (!this.__renderDirty) {
                this.__updateCachedBitmap = true;
                this.__updateFilters = this.get_filters() != null && this.get_filters().length > 0;
                this.__renderDirty = true;
                eH.__worldRenderDirty++
            }
            return this.__cacheAsBitmapMatrix = i.clone()
        },
        get_cacheAsBitmapSmooth: function() {
            return this.__cacheAsBitmapSmooth
        },
        set_cacheAsBitmapSmooth: function(i) {
            return this.__cacheAsBitmapSmooth = i
        },
        get_filters: function() {
            if (this.__filters == null) {
                return []
            } else {
                return this.__filters.slice()
            }
        },
        set_filters: function(i) {
            if (i != null && i.length > 0) {
                this.__filters = i;
                this.__forceCacheAsBitmap = true;
                this.__cacheAsBitmap = true;
                this.__updateFilters = true
            } else {
                this.__filters = null;
                this.__forceCacheAsBitmap = false;
                this.__cacheAsBitmap = false;
                this.__updateFilters = false
            }
            if (!this.__renderDirty) {
                this.__updateCachedBitmap = true;
                this.__updateFilters = this.get_filters() != null && this.get_filters().length > 0;
                this.__renderDirty = true;
                eH.__worldRenderDirty++
            }
            return i
        },
        get_height: function() {
            var i = new gn();
            this.__getBounds(i, this.__transform);
            return i.height
        },
        set_height: function(i1) {
            var q = new gn();
            var i = qd.__temp;
            i.identity();
            this.__getBounds(q, i);
            if (i1 != q.height) {
                this.set_scaleY(i1 / q.height)
            } else {
                this.set_scaleY(1)
            }
            return i1
        },
        get_mask: function() {
            return this.__mask
        },
        set_mask: function(i) {
            if (i != this.__mask) {
                if (!this.__transformDirty) {
                    this.__transformDirty = true;
                    eH.__worldTransformDirty++
                }
                if (!this.__renderDirty) {
                    this.__updateCachedBitmap = true;
                    this.__updateFilters = this.get_filters() != null && this.get_filters().length > 0;
                    this.__renderDirty = true;
                    eH.__worldRenderDirty++
                }
            }
            if (this.__mask != null) {
                this.__mask.__isMask = false;
                this.__mask.__maskCached = false;
                this.__mask.__setTransformDirty();
                this.__mask.__setRenderDirty();
                this.__maskGraphics = null
            }
            if (i != null) {
                i.__isMask = true
            }
            return this.__mask = i
        },
        get_mouseX: function() {
            var q;
            if (this.stage != null) {
                q = this.stage.__mouseX
            } else {
                q = ns.current.stage.__mouseX
            }
            var i;
            if (this.stage != null) {
                i = this.stage.__mouseY
            } else {
                i = ns.current.stage.__mouseY
            }
            return this.__getWorldTransform().__transformInverseX(q, i)
        },
        get_mouseY: function() {
            var q;
            if (this.stage != null) {
                q = this.stage.__mouseX
            } else {
                q = ns.current.stage.__mouseX
            }
            var i;
            if (this.stage != null) {
                i = this.stage.__mouseY
            } else {
                i = ns.current.stage.__mouseY
            }
            return this.__getWorldTransform().__transformInverseY(q, i)
        },
        get_name: function() {
            return this.__name
        },
        set_name: function(i) {
            return this.__name = i
        },
        get_root: function() {
            if (this.stage != null) {
                return ns.current
            }
            return null
        },
        get_rotation: function() {
            return this.__rotation
        },
        set_rotation: function(i1) {
            if (i1 != this.__rotation) {
                this.__rotation = i1;
                var i2 = this.__rotation * (Math.PI / 180);
                this.__rotationSine = Math.sin(i2);
                this.__rotationCosine = Math.cos(i2);
                var q = this.get_scaleX();
                var i = this.get_scaleY();
                this.__transform.a = this.__rotationCosine * q;
                this.__transform.b = this.__rotationSine * q;
                this.__transform.c = -this.__rotationSine * i;
                this.__transform.d = this.__rotationCosine * i;
                if (!this.__transformDirty) {
                    this.__transformDirty = true;
                    eH.__worldTransformDirty++
                }
            }
            return i1
        },
        get_scaleX: function() {
            if (this.__transform.b == 0) {
                return this.__transform.a
            } else {
                return Math.sqrt(this.__transform.a * this.__transform.a + this.__transform.b * this.__transform.b)
            }
        },
        set_scaleX: function(i1) {
            if (this.__transform.c == 0) {
                if (i1 != this.__transform.a) {
                    if (!this.__transformDirty) {
                        this.__transformDirty = true;
                        eH.__worldTransformDirty++
                    }
                }
                this.__transform.a = i1
            } else {
                var q = this.__rotationCosine * i1;
                var i = this.__rotationSine * i1;
                if (this.__transform.a != q || this.__transform.b != i) {
                    if (!this.__transformDirty) {
                        this.__transformDirty = true;
                        eH.__worldTransformDirty++
                    }
                }
                this.__transform.a = q;
                this.__transform.b = i
            }
            return i1
        },
        get_scaleY: function() {
            if (this.__transform.c == 0) {
                return this.__transform.d
            } else {
                return Math.sqrt(this.__transform.c * this.__transform.c + this.__transform.d * this.__transform.d)
            }
        },
        set_scaleY: function(i) {
            if (this.__transform.c == 0) {
                if (i != this.__transform.d) {
                    if (!this.__transformDirty) {
                        this.__transformDirty = true;
                        eH.__worldTransformDirty++
                    }
                }
                this.__transform.d = i
            } else {
                var i1 = -this.__rotationSine * i;
                var q = this.__rotationCosine * i;
                if (this.__transform.d != q || this.__transform.c != i1) {
                    if (!this.__transformDirty) {
                        this.__transformDirty = true;
                        eH.__worldTransformDirty++
                    }
                }
                this.__transform.c = i1;
                this.__transform.d = q
            }
            return i
        },
        get_scrollRect: function() {
            if (this.__scrollRect == null) {
                return null
            }
            return this.__scrollRect.clone()
        },
        set_scrollRect: function(i) {
            if (i != this.__scrollRect) {
                if (!this.__transformDirty) {
                    this.__transformDirty = true;
                    eH.__worldTransformDirty++
                }
            }
            return this.__scrollRect = i
        },
        get_transform: function() {
            if (this.__objectTransform == null) {
                this.__objectTransform = new iA(this)
            }
            return this.__objectTransform
        },
        set_transform: function(i) {
            if (i == null) {
                throw new nM(new qk("Parameter transform must be non-null."))
            }
            if (this.__objectTransform == null) {
                this.__objectTransform = new iA(this)
            }
            if (!this.__transformDirty) {
                this.__transformDirty = true;
                eH.__worldTransformDirty++
            }
            this.__objectTransform.set_matrix(i.get_matrix());
            this.__objectTransform.set_colorTransform(i.get_colorTransform().__clone());
            return this.__objectTransform
        },
        get_visible: function() {
            return this.__visible
        },
        set_visible: function(i) {
            if (i != this.__visible) {
                if (!this.__renderDirty) {
                    this.__updateCachedBitmap = true;
                    this.__updateFilters = this.get_filters() != null && this.get_filters().length > 0;
                    this.__renderDirty = true;
                    eH.__worldRenderDirty++
                }
            }
            return this.__visible = i
        },
        get_width: function() {
            var i = new gn();
            this.__getBounds(i, this.__transform);
            return i.width
        },
        set_width: function(i1) {
            var q = new gn();
            var i = qd.__temp;
            i.identity();
            this.__getBounds(q, i);
            if (i1 != q.width) {
                this.set_scaleX(i1 / q.width)
            } else {
                this.set_scaleX(1)
            }
            return i1
        },
        get_x: function() {
            return this.__transform.tx
        },
        set_x: function(i) {
            if (i != this.__transform.tx) {
                if (!this.__transformDirty) {
                    this.__transformDirty = true;
                    eH.__worldTransformDirty++
                }
            }
            return this.__transform.tx = i
        },
        get_y: function() {
            return this.__transform.ty
        },
        set_y: function(i) {
            if (i != this.__transform.ty) {
                if (!this.__transformDirty) {
                    this.__transformDirty = true;
                    eH.__worldTransformDirty++
                }
            }
            return this.__transform.ty = i
        },
        __class__: eH,
        __properties__: {
            set_y: "set_y",
            get_y: "get_y",
            set_x: "set_x",
            get_x: "get_x",
            set_width: "set_width",
            get_width: "get_width",
            set_visible: "set_visible",
            get_visible: "get_visible",
            set_transform: "set_transform",
            get_transform: "get_transform",
            set_shader: "set_shader",
            set_scrollRect: "set_scrollRect",
            get_scrollRect: "get_scrollRect",
            set_scaleY: "set_scaleY",
            get_scaleY: "get_scaleY",
            set_scaleX: "set_scaleX",
            get_scaleX: "get_scaleX",
            set_rotation: "set_rotation",
            get_rotation: "get_rotation",
            get_root: "get_root",
            set_name: "set_name",
            get_name: "get_name",
            get_mouseY: "get_mouseY",
            get_mouseX: "get_mouseX",
            set_mask: "set_mask",
            get_mask: "get_mask",
            set_height: "set_height",
            get_height: "get_height",
            set_filters: "set_filters",
            get_filters: "get_filters",
            set_cacheAsBitmapSmooth: "set_cacheAsBitmapSmooth",
            get_cacheAsBitmapSmooth: "get_cacheAsBitmapSmooth",
            set_cacheAsBitmapMatrix: "set_cacheAsBitmapMatrix",
            get_cacheAsBitmapMatrix: "get_cacheAsBitmapMatrix",
            set_cacheAsBitmap: "set_cacheAsBitmap",
            get_cacheAsBitmap: "get_cacheAsBitmap",
            set_blendMode: "set_blendMode",
            set_alpha: "set_alpha",
            get_alpha: "get_alpha"
        }
    });
    var ey = function() {
        eH.call(this);
        this.doubleClickEnabled = false;
        this.mouseEnabled = true;
        this.needsSoftKeyboard = false;
        this.__tabEnabled = false;
        this.tabIndex = -1
    };
    nt["openfl.display.InteractiveObject"] = ey;
    ey.__name__ = ["openfl", "display", "InteractiveObject"];
    ey.__super__ = eH;
    ey.prototype = lP(eH.prototype, {
        doubleClickEnabled: null,
        focusRect: null,
        mouseEnabled: null,
        needsSoftKeyboard: null,
        softKeyboardInputAreaOfInterest: null,
        tabIndex: null,
        __tabEnabled: null,
        requestSoftKeyboard: function() {
            ns.notImplemented("InteractiveObject.requestSoftKeyboard");
            return false
        },
        __getInteractive: function(i) {
            if (i != null) {
                i.push(this);
                if (this.parent != null) {
                    this.parent.__getInteractive(i)
                }
            }
            return true
        },
        __hitTest: function(q, qY, i1, i, js, i2) {
            if (!i2.get_visible() || this.__isMask || js && !this.mouseEnabled) {
                return false
            }
            return eH.prototype.__hitTest.call(this, q, qY, i1, i, js, i2)
        },
        get_tabEnabled: function() {
            return this.__tabEnabled
        },
        set_tabEnabled: function(i) {
            return this.__tabEnabled = i
        },
        __class__: ey,
        __properties__: lP(eH.prototype.__properties__, {
            set_tabEnabled: "set_tabEnabled",
            get_tabEnabled: "get_tabEnabled"
        })
    });
    var bG = function() {
        ey.call(this);
        this.mouseChildren = true;
        this.__children = [];
        this.__removedChildren = []
    };
    nt["openfl.display.DisplayObjectContainer"] = bG;
    bG.__name__ = ["openfl", "display", "DisplayObjectContainer"];
    bG.__super__ = ey;
    bG.prototype = lP(ey.prototype, {
        mouseChildren: null,
        numChildren: null,
        tabChildren: null,
        __removedChildren: null,
        addChild: function(q) {
            if (q != null) {
                if (q.parent != null) {
                    q.parent.removeChild(q)
                }
                this.__children.push(q);
                q.parent = this;
                if (this.stage != null) {
                    q.__setStageReference(this.stage)
                }
                if (!q.__transformDirty) {
                    q.__transformDirty = true;
                    eH.__worldTransformDirty++
                }
                if (!q.__renderDirty) {
                    q.__updateCachedBitmap = true;
                    q.__updateFilters = q.get_filters() != null && q.get_filters().length > 0;
                    q.__renderDirty = true;
                    eH.__worldRenderDirty++
                }
                if (!this.__renderDirty) {
                    this.__updateCachedBitmap = true;
                    this.__updateFilters = this.get_filters() != null && this.get_filters().length > 0;
                    this.__renderDirty = true;
                    eH.__worldRenderDirty++
                }
                var i = new hM("added", true);
                i.target = q;
                q.__dispatchEvent(i)
            }
            return q
        },
        addChildAt: function(i1, i) {
            if (i > this.__children.length || i < 0) {
                throw new nM("Invalid index position " + i)
            }
            if (i1.parent == this) {
                cj.remove(this.__children, i1)
            } else {
                if (i1.parent != null) {
                    i1.parent.removeChild(i1)
                }
                i1.parent = this;
                if (this.stage != null) {
                    i1.__setStageReference(this.stage)
                }
                if (!i1.__transformDirty) {
                    i1.__transformDirty = true;
                    eH.__worldTransformDirty++
                }
                if (!i1.__renderDirty) {
                    i1.__updateCachedBitmap = true;
                    i1.__updateFilters = i1.get_filters() != null && i1.get_filters().length > 0;
                    i1.__renderDirty = true;
                    eH.__worldRenderDirty++
                }
                if (!this.__renderDirty) {
                    this.__updateCachedBitmap = true;
                    this.__updateFilters = this.get_filters() != null && this.get_filters().length > 0;
                    this.__renderDirty = true;
                    eH.__worldRenderDirty++
                }
                var q = new hM("added", true);
                q.target = i1;
                i1.__dispatchEvent(q)
            }
            this.__children.splice(i, 0, i1);
            return i1
        },
        areInaccessibleObjectsUnderPoint: function(i) {
            return false
        },
        contains: function(i) {
            while (i != this && i != null) {
                i = i.parent
            }
            return i == this
        },
        getChildAt: function(i) {
            if (i >= 0 && i < this.__children.length) {
                return this.__children[i]
            }
            return null
        },
        getChildByName: function(i) {
            var i1 = 0;
            var q = this.__children;
            while (i1 < q.length) {
                var i2 = q[i1];
                ++i1;
                if (i2.get_name() == i) {
                    return i2
                }
            }
            return null
        },
        getChildIndex: function(js) {
            var i1 = 0;
            var i2 = this.__children.length;
            while (i1 < i2) {
                var q = i1++;
                if (this.__children[q] == js) {
                    return q
                }
            }
            return -1
        },
        getObjectsUnderPoint: function(q) {
            var i = [];
            this.__hitTest(q.x, q.y, false, i, false, this);
            i.reverse();
            return i
        },
        removeChild: function(i) {
            if (i != null && i.parent == this) {
                i.__dispatchEvent(new hM("removed", true));
                if (this.stage != null) {
                    i.__setStageReference(null)
                }
                i.parent = null;
                cj.remove(this.__children, i);
                this.__removedChildren.push(i);
                if (!i.__transformDirty) {
                    i.__transformDirty = true;
                    eH.__worldTransformDirty++
                }
                if (!i.__renderDirty) {
                    i.__updateCachedBitmap = true;
                    i.__updateFilters = i.get_filters() != null && i.get_filters().length > 0;
                    i.__renderDirty = true;
                    eH.__worldRenderDirty++
                }
                if (!this.__renderDirty) {
                    this.__updateCachedBitmap = true;
                    this.__updateFilters = this.get_filters() != null && this.get_filters().length > 0;
                    this.__renderDirty = true;
                    eH.__worldRenderDirty++
                }
            }
            return i
        },
        removeChildAt: function(i) {
            if (i >= 0 && i < this.__children.length) {
                return this.removeChild(this.__children[i])
            }
            return null
        },
        removeChildren: function(i, q) {
            if (q == null) {
                q = 2147483647
            }
            if (i == null) {
                i = 0
            }
            if (q == 2147483647) {
                q = this.__children.length - 1;
                if (q < 0) {
                    return
                }
            }
            if (i > this.__children.length - 1) {
                return
            } else {
                if (q < i || i < 0 || q > this.__children.length) {
                    throw new nM(new dN("The supplied index is out of bounds."))
                }
            }
            var i1 = q - i;
            while (i1 >= 0) {
                this.removeChildAt(i);
                i1--
            }
        },
        resolve: function(i2) {
            if (this.__children == null) {
                return null
            }
            var q = 0;
            var i = this.__children;
            while (q < i.length) {
                var i1 = i[q];
                ++q;
                if (i1.get_name() == i2) {
                    return i1
                }
            }
            return null
        },
        setChildIndex: function(q, i) {
            if (i >= 0 && i <= this.__children.length && q.parent == this) {
                cj.remove(this.__children, q);
                this.__children.splice(i, 0, q)
            }
        },
        swapChildren: function(q, i) {
            if (q.parent == this && i.parent == this) {
                var i2 = cj.indexOf(this.__children, q, 0);
                var i1 = cj.indexOf(this.__children, i, 0);
                this.__children[i2] = i;
                this.__children[i1] = q
            }
        },
        swapChildrenAt: function(i1, q) {
            var i = this.__children[i1];
            this.__children[i1] = this.__children[q];
            this.__children[q] = i;
            i = null
        },
        __broadcast: function(q, qY) {
            if (q.target == null) {
                q.target = this
            }
            var i = ey.prototype.__broadcast.call(this, q, qY);
            if (!q.__isCanceled && qY) {
                var i2 = 0;
                var i1 = this.__children;
                while (i2 < i1.length) {
                    var js = i1[i2];
                    ++i2;
                    js.__broadcast(q, true);
                    if (q.__isCanceled) {
                        return true
                    }
                }
            }
            return i
        },
        __enterFrame: function(i) {
            var i1 = 0;
            var q = this.__children;
            while (i1 < q.length) {
                var i2 = q[i1];
                ++i1;
                i2.__enterFrame(i)
            }
        },
        __getBounds: function(q, i) {
            ey.prototype.__getBounds.call(this, q, i);
            if (this.__children.length == 0) {
                return
            }
            if (i != null) {
                this.__updateTransforms(i);
                this.__updateChildren(true)
            }
            var i2 = 0;
            var i1 = this.__children;
            while (i2 < i1.length) {
                var js = i1[i2];
                ++i2;
                if (js.get_scaleX() == 0 || js.get_scaleY() == 0) {
                    continue
                }
                js.__getBounds(q, js.__worldTransform)
            }
            if (i != null) {
                this.__updateTransforms();
                this.__updateChildren(true)
            }
        },
        __getRenderBounds: function(q, i) {
            if (this.__scrollRect != null) {
                ey.prototype.__getRenderBounds.call(this, q, i);
                return
            } else {
                ey.prototype.__getBounds.call(this, q, i)
            }
            if (this.__children.length == 0) {
                return
            }
            if (i != null) {
                this.__updateTransforms(i);
                this.__updateChildren(true)
            }
            var i2 = 0;
            var i1 = this.__children;
            while (i2 < i1.length) {
                var js = i1[i2];
                ++i2;
                if (js.get_scaleX() == 0 || js.get_scaleY() == 0 || js.__isMask) {
                    continue
                }
                js.__getRenderBounds(q, js.__worldTransform)
            }
            if (i != null) {
                this.__updateTransforms();
                this.__updateChildren(true)
            }
        },
        __hitTest: function(q3, q0, i1, q1, i2, qY) {
            if (!qY.get_visible() || this.__isMask || i2 && !this.mouseEnabled && !this.mouseChildren) {
                return false
            }
            if (this.get_mask() != null && !this.get_mask().__hitTestMask(q3, q0)) {
                return false
            }
            if (this.get_scrollRect() != null && !this.get_scrollRect().containsPoint(this.globalToLocal(new pp(q3, q0)))) {
                return false
            }
            var js = this.__children.length;
            if (i2) {
                if (q1 == null || !this.mouseChildren) {
                    while (--js >= 0) {
                        if (this.__children[js].__hitTest(q3, q0, i1, null, true, this.__children[js])) {
                            if (q1 != null) {
                                q1.push(qY)
                            }
                            return true
                        }
                    }
                } else {
                    if (q1 != null) {
                        var q = q1.length;
                        var q2 = false;
                        var qZ = false;
                        while (--js >= 0) {
                            q2 = this.__children[js].__getInteractive(null);
                            if (q2 || this.mouseEnabled && !qZ) {
                                if (this.__children[js].__hitTest(q3, q0, i1, q1, true, this.__children[js])) {
                                    qZ = true;
                                    if (q2) {
                                        break
                                    }
                                }
                            }
                        }
                        if (qZ) {
                            q1.splice(q, 0, qY);
                            return true
                        }
                    }
                }
            } else {
                while (--js >= 0) {
                    this.__children[js].__hitTest(q3, q0, i1, q1, false, this.__children[js])
                }
            }
            return false
        },
        __hitTestMask: function(q, i2) {
            var i1 = this.__children.length;
            while (--i1 >= 0) {
                if (this.__children[i1].__hitTestMask(q, i2)) {
                    return true
                }
            }
            return false
        },
        __renderCairo: function(q) {
            if (!this.__renderable || this.__worldAlpha <= 0) {
                return
            }
            ey.prototype.__renderCairo.call(this, q);
            if (this.get_scrollRect() != null) {
                q.maskManager.pushRect(this.get_scrollRect(), this.__worldTransform)
            }
            if (this.__mask != null) {
                q.maskManager.pushMask(this.__mask)
            }
            var i1 = 0;
            var i = this.__children;
            while (i1 < i.length) {
                var i2 = i[i1];
                ++i1;
                i2.__renderCairo(q)
            }
            if (this.__removedChildren.length > 0) {
                this.__removedChildren.splice(0, this.__removedChildren.length)
            }
            if (this.__mask != null) {
                q.maskManager.popMask()
            }
            if (this.get_scrollRect() != null) {
                q.maskManager.popRect()
            }
        },
        __renderCairoMask: function(q) {
            if (this.__graphics != null) {
                qy.renderMask(this.__graphics, q)
            }
            var i1 = 0;
            var i = this.__children;
            while (i1 < i.length) {
                var i2 = i[i1];
                ++i1;
                i2.__renderCairoMask(q)
            }
        },
        __renderCanvas: function(q) {
            if (!this.__renderable || this.__worldAlpha <= 0) {
                return
            }
            ey.prototype.__renderCanvas.call(this, q);
            if (this.get_scrollRect() != null) {
                q.maskManager.pushRect(this.get_scrollRect(), this.__worldTransform)
            }
            if (this.__mask != null) {
                q.maskManager.pushMask(this.__mask)
            }
            var i1 = 0;
            var i = this.__children;
            while (i1 < i.length) {
                var i2 = i[i1];
                ++i1;
                i2.__renderCanvas(q)
            }
            if (this.__removedChildren.length > 0) {
                this.__removedChildren.splice(0, this.__removedChildren.length)
            }
            if (this.__mask != null) {
                q.maskManager.popMask()
            }
            if (this.get_scrollRect() != null) {
                q.maskManager.popRect()
            }
        },
        __renderCanvasMask: function(q) {
            if (this.__graphics != null) {
                aB.renderMask(this.__graphics, q)
            }
            var i = new gn();
            this.__getBounds(i, this.__transform);
            q.context.rect(0, 0, i.width, i.height)
        },
        __renderDOM: function(js) {
            ey.prototype.__renderDOM.call(this, js);
            if (this.__mask != null) {
                js.maskManager.pushMask(this.__mask)
            }
            var qY = 0;
            var i2 = this.__children;
            while (qY < i2.length) {
                var qZ = i2[qY];
                ++qY;
                qZ.__renderDOM(js)
            }
            var i1 = 0;
            var i = this.__removedChildren;
            while (i1 < i.length) {
                var q = i[i1];
                ++i1;
                if (q.stage == null) {
                    q.__renderDOM(js)
                }
            }
            if (this.__removedChildren.length > 0) {
                this.__removedChildren.splice(0, this.__removedChildren.length)
            }
            if (this.__mask != null) {
                js.maskManager.popMask()
            }
        },
        __renderGL: function(q) {
            if (!this.__renderable || this.__worldAlpha <= 0) {
                return
            }
            if (this.__cacheAsBitmap) {
                this.__cacheGL(q);
                return
            }
            if (this.__scrollRect != null) {
                q.maskManager.pushRect(this.__scrollRect, this.__renderTransform)
            }
            if (this.__mask != null && this.__maskGraphics != null && this.__maskGraphics.__commands.get_length() > 0) {
                q.maskManager.pushMask(this)
            }
            if (this.__graphics != null) {
                if (this.__graphics.__hardware) {
                    fW.render(this, q)
                } else {
                    aB.render(this.__graphics, q);
                    mA.renderBitmap(this, q)
                }
            }
            var i1 = 0;
            var i = this.__children;
            while (i1 < i.length) {
                var i2 = i[i1];
                ++i1;
                i2.__renderGL(q)
            }
            if (this.__mask != null && this.__maskGraphics != null && this.__maskGraphics.__commands.get_length() > 0) {
                q.maskManager.popMask()
            }
            if (this.__scrollRect != null) {
                q.maskManager.popRect()
            }
            if (this.__removedChildren.length > 0) {
                this.__removedChildren.splice(0, this.__removedChildren.length)
            }
        },
        __setStageReference: function(i) {
            if (this.stage != i) {
                if (this.stage != null) {
                    this.__dispatchEvent(new hM("removedFromStage", false, false))
                }
                this.stage = i;
                if (i != null) {
                    this.__dispatchEvent(new hM("addedToStage", false, false))
                }
                if (this.__children != null) {
                    var i1 = 0;
                    var q = this.__children;
                    while (i1 < q.length) {
                        var i2 = q[i1];
                        ++i1;
                        i2.__setStageReference(i)
                    }
                }
            }
        },
        __update: function(i1, q, i) {
            ey.prototype.__update.call(this, i1, q, i);
            if (!this.__renderable && !this.__isMask) {
                return
            }
            if (q) {
                var js = 0;
                var i2 = this.__children;
                while (js < i2.length) {
                    var qY = i2[js];
                    ++js;
                    qY.__update(i1, true, i)
                }
            }
        },
        __updateChildren: function(i) {
            ey.prototype.__updateChildren.call(this, i);
            var i1 = 0;
            var q = this.__children;
            while (i1 < q.length) {
                var i2 = q[i1];
                ++i1;
                i2.__update(i, true)
            }
        },
        get_numChildren: function() {
            return this.__children.length
        },
        __class__: bG,
        __properties__: lP(ey.prototype.__properties__, {
            get_numChildren: "get_numChildren"
        })
    });
    var cY = function() {
        bG.call(this);
        this.buttonMode = false;
        this.useHandCursor = true;
        this.loaderInfo = iN.create(null)
    };
    nt["openfl.display.Sprite"] = cY;
    cY.__name__ = ["openfl", "display", "Sprite"];
    cY.__super__ = bG;
    cY.prototype = lP(bG.prototype, {
        buttonMode: null,
        graphics: null,
        hitArea: null,
        useHandCursor: null,
        startDrag: function(i, q) {
            if (i == null) {
                i = false
            }
            if (this.stage != null) {
                this.stage.__startDrag(this, i, q)
            }
        },
        stopDrag: function() {
            if (this.stage != null) {
                this.stage.__stopDrag(this)
            }
        },
        __getCursor: function() {
            if (this.buttonMode && this.useHandCursor) {
                return hL.POINTER
            } else {
                return null
            }
        },
        __hitTest: function(q, qZ, i1, i, qY, js) {
            if (this.hitArea != null) {
                if (!this.hitArea.mouseEnabled) {
                    this.hitArea.mouseEnabled = true;
                    var i2 = this.hitArea.__hitTest(q, qZ, i1, null, true, js);
                    this.hitArea.mouseEnabled = false;
                    if (i2) {
                        i[i.length] = js
                    }
                    return i2
                }
            } else {
                if (!js.get_visible() || this.__isMask || qY && !this.mouseEnabled && !this.mouseChildren) {
                    return false
                }
                if (this.get_mask() != null && !this.get_mask().__hitTestMask(q, qZ)) {
                    return false
                }
                if (bG.prototype.__hitTest.call(this, q, qZ, i1, i, qY, js)) {
                    return qY
                } else {
                    if ((!qY || this.mouseEnabled) && this.__graphics != null && this.__graphics.__hitTest(q, qZ, i1, this.__getWorldTransform())) {
                        if (i != null) {
                            i.push(js)
                        }
                        return true
                    }
                }
            }
            return false
        },
        __hitTestMask: function(i, q) {
            if (bG.prototype.__hitTestMask.call(this, i, q)) {
                return true
            } else {
                if (this.__graphics != null && this.__graphics.__hitTest(i, q, true, this.__getWorldTransform())) {
                    return true
                }
            }
            return false
        },
        get_graphics: function() {
            if (this.__graphics == null) {
                this.__graphics = new e3();
                this.__graphics.__owner = this
            }
            return this.__graphics
        },
        get_tabEnabled: function() {
            return this.__tabEnabled || this.buttonMode
        },
        __class__: cY,
        __properties__: lP(bG.prototype.__properties__, {
            get_graphics: "get_graphics"
        })
    });
    var ef = function(i) {
        if (i == null) {
            i = 30
        }
        this._deltaStepTimeMS = 0;
        this._deltaTimeMS = 0;
        this._lastTimeMS = 0;
        this._lastStepTimeMS = 0;
        this._currentTimeMS = 0;
        this._timeStepMS = 0;
        this._timeStepS = 0;
        this.onUpdate = new oY();
        cY.call(this);
        this._scheduledTasks = new oI();
        px.init();
        this._targetFPS = i;
        this._currentTimeMS = 0;
        this._lastTimeMS = this._lastStepTimeMS = 0;
        this._deltaTimeMS = 0;
        this._currentDate = new Date();
        this._creationTime = ns.getTimer();
        this.entities = new hn();
        this.keyboard = new bX();
        this.scheduler = new bI(1000 / i * 0.5);
        this.addEventListener("addedToStage", oT(this, this.onAddedToStage))
    };
    nt["oaktree.core.Engine"] = ef;
    ef.__name__ = ["oaktree", "core", "Engine"];
    ef.__super__ = cY;
    ef.prototype = lP(cY.prototype, {
        states: null,
        scenes: null,
        entities: null,
        keyboard: null,
        scheduler: null,
        onUpdate: null,
        baseContainer: null,
        _targetFPS: null,
        _currentDate: null,
        _creationTime: null,
        _timeStepS: null,
        _timeStepMS: null,
        _currentTimeMS: null,
        _lastStepTimeMS: null,
        _lastTimeMS: null,
        _deltaTimeMS: null,
        _deltaStepTimeMS: null,
        _scheduledTasks: null,
        onAddedToStage: function(i) {
            this.removeEventListener("addedToStage", oT(this, this.onAddedToStage));
            px.onEngineAddedToStage(this, this.stage);
            this.states = new iI({
                name: "MainStateStack"
            });
            this.states.createOnGet = true;
            this.baseContainer = new cY();
            this.addChild(this.baseContainer);
            this.scenes = new oM(this.baseContainer);
            this._timeStepMS = 1000 / this._targetFPS;
            this._timeStepS = this._timeStepMS / 1000;
            this._lastTimeMS = this._currentTimeMS = ns.getTimer();
            this.stage.addEventListener("keyDown", (c3 = this.keyboard, oT(c3, c3.HandleKeyDown)));
            this.stage.addEventListener("keyUp", (c3 = this.keyboard, oT(c3, c3.HandleKeyUp)));
            this.addEventListener("enterFrame", oT(this, this.onEnterFrame));
            this.initialize()
        },
        onEnterFrame: function(i) {
            this._currentTimeMS = ns.getTimer();
            this._deltaTimeMS = this._currentTimeMS - this._lastStepTimeMS;
            this._deltaStepTimeMS += this._deltaTimeMS;
            this.processScheduledTasks(this._deltaTimeMS);
            this.scheduler.update();
            if (this._deltaStepTimeMS >= this._timeStepMS) {
                this.keyboard.Update();
                this._deltaStepTimeMS -= this._timeStepMS;
                this.entities.update(this._timeStepS);
                this.scenes.update(this._timeStepS);
                this._lastStepTimeMS = this._currentTimeMS;
                this.onUpdate.emit(this._timeStepS)
            }
            this.scenes.lateUpdate();
            this._lastStepTimeMS = this._currentTimeMS
        },
        processScheduledTasks: function(q) {
            var i1 = this._scheduledTasks.h;
            var i2 = null;
            while (i1 != null) {
                var i;
                i = (function(qY) {
                    var js;
                    i2 = i1[0];
                    i1 = i1[1];
                    js = i2;
                    return js
                }(this));
                i.due_in -= q;
                if (i.due_in <= 0) {
                    i.callback();
                    this._scheduledTasks.remove(i)
                }
            }
        },
        initialize: function() {},
        setStartDate: function(i) {
            if (i != null) {
                this._currentDate = i
            }
        },
        time: null,
        get_time: function() {
            return this._currentDate.getTime() + (ns.getTimer() - this._creationTime)
        },
        scheduleTask: function(q, i) {
            var i1 = {
                id: (function(qY) {
                    var js;
                    var i2 = ++ef._scheduleCount;
                    js = kr["int"](fq.toFloat(i2) % fq.toFloat(2147483647));
                    return js
                }(this)),
                due_in: q,
                callback: i
            };
            this._scheduledTasks.push(i1);
            return i1.id
        },
        __class__: ef,
        __properties__: lP(cY.prototype.__properties__, {
            get_time: "get_time"
        })
    });
    var la = function() {
        ef.call(this, 30)
    };
    nt.Main = la;
    la.__name__ = ["Main"];
    la.instance = null;
    la.__super__ = ef;
    la.prototype = lP(ef.prototype, {
        shopDialog: null,
        initialize: function() {
            nK.init(this.stage);
            this.resize(this.stage.stageWidth, this.stage.stageHeight)
        },
        resize: function(q, i) {
            nK.views.onResize(q, i)
        },
        onStageResize: function(i) {
            this.resize(this.stage.stageWidth, this.stage.stageHeight)
        },
        __class__: la
    });
    var ac = function() {
        ns.current.addChild(this);
        la.call(this);
        this.dispatchEvent(new hM("addedToStage", false, false))
    };
    nt.DocumentClass = ac;
    ac.__name__ = ["DocumentClass"];
    ac.__super__ = la;
    ac.prototype = lP(la.prototype, {
        __class__: ac
    });
    var go = function(i) {
        if (i == null) {
            i = []
        }
        this.valueClasses = i;
        this.slots = ox.NIL;
        this.priorityBased = false
    };
    nt["msignal.Signal"] = go;
    go.__name__ = ["msignal", "Signal"];
    go.prototype = {
        valueClasses: null,
        numListeners: null,
        slots: null,
        priorityBased: null,
        add: function(i) {
            return this.registerListener(i)
        },
        addOnce: function(i) {
            return this.registerListener(i, true)
        },
        addWithPriority: function(q, i) {
            if (i == null) {
                i = 0
            }
            return this.registerListener(q, false, i)
        },
        addOnceWithPriority: function(q, i) {
            if (i == null) {
                i = 0
            }
            return this.registerListener(q, true, i)
        },
        remove: function(i) {
            var q = this.slots.find(i);
            if (q == null) {
                return null
            }
            this.slots = this.slots.filterNot(i);
            return q
        },
        removeAll: function() {
            this.slots = ox.NIL
        },
        registerListener: function(i1, q, i) {
            if (i == null) {
                i = 0
            }
            if (q == null) {
                q = false
            }
            if (this.registrationPossible(i1, q)) {
                var i2 = this.createSlot(i1, q, i);
                if (!this.priorityBased && i != 0) {
                    this.priorityBased = true
                }
                if (!this.priorityBased && i == 0) {
                    this.slots = this.slots.prepend(i2)
                } else {
                    this.slots = this.slots.insertWithPriority(i2)
                }
                return i2
            }
            return this.slots.find(i1)
        },
        registrationPossible: function(q, i) {
            if (!this.slots.nonEmpty) {
                return true
            }
            var i1 = this.slots.find(q);
            if (i1 == null) {
                return true
            }
            if (i1.once != i) {
                throw new nM("You cannot addOnce() then add() the same listener without removing the relationship first.")
            }
            return false
        },
        createSlot: function(i1, q, i) {
            if (i == null) {
                i = 0
            }
            if (q == null) {
                q = false
            }
            return null
        },
        get_numListeners: function() {
            return this.slots.get_length()
        },
        __class__: go,
        __properties__: {
            get_numListeners: "get_numListeners"
        }
    };
    var qt = function(i) {
        go.call(this, [i])
    };
    nt["msignal.Signal1"] = qt;
    qt.__name__ = ["msignal", "Signal1"];
    qt.__super__ = go;
    qt.prototype = lP(go.prototype, {
        dispatch: function(i) {
            var q = this.slots;
            while (q.nonEmpty) {
                q.head.execute(i);
                q = q.tail
            }
        },
        createSlot: function(i1, q, i) {
            if (i == null) {
                i = 0
            }
            if (q == null) {
                q = false
            }
            return new de(this, i1, q, i)
        },
        __class__: qt
    });
    var ox = function(q, i) {
        this.nonEmpty = false;
        if (q == null && i == null) {
            if (ox.NIL != null) {
                throw new nM("Parameters head and tail are null. Use the NIL element instead.")
            }
            this.nonEmpty = false
        } else {
            if (q == null) {
                throw new nM("Parameter head cannot be null.")
            } else {
                this.head = q;
                if (i == null) {
                    this.tail = ox.NIL
                } else {
                    this.tail = i
                }
                this.nonEmpty = true
            }
        }
    };
    nt["msignal.SlotList"] = ox;
    ox.__name__ = ["msignal", "SlotList"];
    ox.NIL = null;
    ox.prototype = {
        head: null,
        tail: null,
        nonEmpty: null,
        length: null,
        get_length: function() {
            if (!this.nonEmpty) {
                return 0
            }
            if (this.tail == ox.NIL) {
                return 1
            }
            var i = 0;
            var q = this;
            while (q.nonEmpty) {
                ++i;
                q = q.tail
            }
            return i
        },
        prepend: function(i) {
            return new ox(i, this)
        },
        append: function(i2) {
            if (i2 == null) {
                return this
            }
            if (!this.nonEmpty) {
                return new ox(i2)
            }
            if (this.tail == ox.NIL) {
                return new ox(i2).prepend(this.head)
            }
            var q = new ox(this.head);
            var i1 = q;
            var i = this.tail;
            while (i.nonEmpty) {
                i1 = i1.tail = new ox(i.head);
                i = i.tail
            }
            i1.tail = new ox(i2);
            return q
        },
        insertWithPriority: function(js) {
            if (!this.nonEmpty) {
                return new ox(js)
            }
            var i = js.priority;
            if (i >= this.head.priority) {
                return this.prepend(js)
            }
            var i1 = new ox(this.head);
            var i2 = i1;
            var q = this.tail;
            while (q.nonEmpty) {
                if (i > q.head.priority) {
                    i2.tail = q.prepend(js);
                    return i1
                }
                i2 = i2.tail = new ox(q.head);
                q = q.tail
            }
            i2.tail = new ox(js);
            return i1
        },
        filterNot: function(i) {
            if (!this.nonEmpty || i == null) {
                return this
            }
            if (ar.compareMethods(this.head.listener, i)) {
                return this.tail
            }
            var i1 = new ox(this.head);
            var i2 = i1;
            var q = this.tail;
            while (q.nonEmpty) {
                if (ar.compareMethods(q.head.listener, i)) {
                    i2.tail = q.tail;
                    return i1
                }
                i2 = i2.tail = new ox(q.head);
                q = q.tail
            }
            return this
        },
        contains: function(i) {
            if (!this.nonEmpty) {
                return false
            }
            var q = this;
            while (q.nonEmpty) {
                if (ar.compareMethods(q.head.listener, i)) {
                    return true
                }
                q = q.tail
            }
            return false
        },
        find: function(i) {
            if (!this.nonEmpty) {
                return null
            }
            var q = this;
            while (q.nonEmpty) {
                if (ar.compareMethods(q.head.listener, i)) {
                    return q.head
                }
                q = q.tail
            }
            return null
        },
        __class__: ox,
        __properties__: {
            get_length: "get_length"
        }
    };
    var qv = function() {
        go.call(this)
    };
    nt["msignal.Signal0"] = qv;
    qv.__name__ = ["msignal", "Signal0"];
    qv.__super__ = go;
    qv.prototype = lP(go.prototype, {
        dispatch: function() {
            var i = this.slots;
            while (i.nonEmpty) {
                i.head.execute();
                i = i.tail
            }
        },
        createSlot: function(i1, q, i) {
            if (i == null) {
                i = 0
            }
            if (q == null) {
                q = false
            }
            return new dg(this, i1, q, i)
        },
        __class__: qv
    });
    var nK = function() {};
	window.core2 = nK;
    nt.Core = nK;
    nK.__name__ = ["Core"];
    nK.__properties__ = {
        get_fontName: "get_fontName",
        get_assets: "get_assets",
        get_states: "get_states",
        get_events: "get_events",
        get_height: "get_height",
        get_width: "get_width"
    };
    nK.stage = null;
    nK.width = null;
    nK.height = null;
    nK.events = null;
    nK.environment = null;
    nK.ui = null;
    nK.services = null;
    nK.views = null;
    nK.models = null;
    nK.remoteAssets = null;
    nK.user = null;
    nK.states = null;
    nK._assets = null;
    nK.assets = null;
    nK.fontName = null;
    nK.fontFile = null;
    nK.storage = null;
    nK.autoLogin = null;
    nK.gifts = null;
    nK.quests = null;
    nK.init = function(js) {
        nK.stage = js;
        nK.storage = new gg("agar_settings");
        nK.storage.load();
        px.commands.initialize(ag.list);
        nK.environment = new iM();
        nK.environment.initialize();
        var q = nK.getQueryString("delorean");
        if (q != null) {
            var i;
            var i1 = parseFloat(q);
            var i2 = new Date();
            i2.setTime(i1);
            i = i2;
            px.engine.setStartDate(i)
        }
//        nK.get_states().enable("state_main_screen");
        l4.initialize(kh.getModelList());
        nK._assets = new fx(hy.INGAME_ATLAS);
        nK.services = new fh();
        nK.views = new lc();
        nK.models = l4.getService(o7);
        nK.remoteAssets = new pA();
        nK.user = new oC("", "");
        nK.gifts = new jU();
        nK.quests = new K();
        nK.ui = new lL();
        nK.ui.network.params = nK.getAllQueryStrings();
        nK.get_assets().onInit.connect(nK.checkIfReady, null, 1);
        nK.models.onConfigurationLoaded.add(nK.onConfigurationLoaded);
        nK.get_events().listen(m0.START_GAME, nK.onStartGame);
        nK.checkIfReady();
        nK.services.promo.updateSignal.add(nK.onUpdate_Promos)
    };
    nK.onUpdate_Promos = function() {
        if (!nK.user.isGuest && nK.user.userInfo.isNewUser) {
            nK.processUpgradeReward();
            nK.services.promo.updateSignal.remove(nK.onUpdate_Promos)
        }
    };
    nK.onConfigurationLoaded = function() {
        nK.initialized = true;
        aQ.CONFIG_NUMBER = kd.configID;
        aQ.updateTag();
        nK.onReady.dispatch();
        if (nK.getQueryString("fb_source") == "notification") {
            nK.openGiftCenterInbox()
        }
        nK.user.dispatchPromoEvents();
        nK.get_events().fire("shop_event::configComplete")
    };
    nK.onStartGame = function(i) {
        if (i.data != null && i.data.mode != null) {
            nK.ui.state.questOpen = true;
            nK.ui.mainUI.setGameMode(i.data.mode)
        }
        nK.startGame()
    };
    nK.startGame = function() {
        nK.ui.mainUI.startGame()
    };
    nK.showGifting = function() {
        if (nK.user.isGuest) {
            nK.services.gameui.showContainer();
            nK.get_events().dispatchEventWith("ShopEvent::show_guest_conversion", false)
        } else {
            if (nK.hasUserFriendsPermissions()) {
                nK.services.gameui.showContainer();
                nK.get_events().dispatchEventWith("shop_event::showGiftCenter")
            } else {
                nK.requestExtraPermissions()
            }
        }
    };
    nK.checkQuestActive = function() {
        return nK.quests.getActiveQuest() != null
    };
    nK.requestExtraPermissions = function() {
        var i = window.requestExtraPermissions("user_friends")
    };
    nK.hasUserFriendsPermissions = function() {
        var i = false;
        if (window.checkFacebookPermissions) {
            i = window.checkFacebookPermissions("user_friends")
        }
        return i
    };
    nK.openGiftCenter = function() {
        nK.get_events().fire("shop_event::showGiftCenter")
    };
    nK.openGiftCenterInbox = function() {
        nK.get_events().fire("agario.module.gift.events.ViewEvent.open_gift_inbox")
    };
    nK.openQuestsDialog = function() {
        if (nK.user.isGuest) {
            nK.services.gameui.showContainer();
            nK.get_events().dispatchEventWith("ShopEvent::show_guest_conversion")
        } else {
            nK.get_events().fire("shop_event::openQuestsDialog")
        }
    };
    nK.get_width = function() {
        return nK.stage.stageWidth
    };
    nK.get_height = function() {
        return nK.stage.stageHeight
    };
    nK.resetStageFocus = function() {
        ns.current.stage.set_focus(ns.current.stage)
    };
    nK.getTime = function() {
        return px.engine.get_time()
    };
    nK.notifyToken = function(i) {
        nK.ui.notifyToken(i)
    };
    nK.getQuestProgress = function(qY, js, i1, q, i, i2) {
        return nK.quests.getProgress(qY, js, i1, q, i, i2)
    };
    nK.getQuestProgressLabel = function(i) {
        nK.get_events().fire("shop_event::on_quest_progress_label_update", i);
        return nK.progressLabel
    };
    nK.setProgressLabel = function(i) {
        nK.progressLabel = i
    };
    nK.checkQuestComplete = function(i1) {
        var q = nK.quests.getActiveQuest();
        if (q != null) {
            if (q.get_type() == "top_position") {
                return i1 <= n0.__cast(q.get_goal(), a)
            } else {
                if (q.get_type() == "time_total") {
                    var i = q.get_goal();
                    return i1 / 1000 >= fq.toFloat(i)
                } else {
                    return i1 >= n0.__cast(q.get_goal(), a)
                }
            }
        }
        return false
    };
    nK.facebookLogin = function(i) {
        nK.disableHUD();
        window.facebookLogin(function(q) {
            if (q) {
                nK.onFbLoginComplete(q.authResponse != null);
                i(q.authResponse != null)
            } else {
                nK.onFbLoginComplete(false);
                i(false)
            }
        })
    };
    nK.disableHUD = function() {
        nK.services.gameui.lockContainer()
    };
    nK.enableHUD = function() {
        nK.services.gameui.unlockContainer();
        nK.get_events().dispatchEventWith("deactivate");
        nK.get_events().dispatchEventWith("ShopEvent::ENABLE_SHOP")
    };
    nK.showIncentive = function() {
        nK.services.gameui.showContainer();
        nK.get_events().fire("ShopEvent::show_guest_conversion")
    };
    nK.onFbLoginComplete = function(i) {
        nK.enableHUD()
    };
    nK.checkIfReady = function() {
        var i = nK._assets.get_initialized();
        if (!i) {
            return
        }
        nK.onReady.dispatch()
    };
    nK.get_assets = function() {
        return nK._assets
    };
    nK.get_fontName = function() {
        return "_sans"
    };
    nK.get_events = function() {
        return px.events
    };
    nK.get_states = function() {
//        return px.engine.states
    };
    nK.getQueryString = function(i) {
        if (nK.environment.webEnv.hasParameter(i)) {
            return nK.environment.webEnv.getParameter(i)
        } else {
            return null
        }
    };
    nK.getAllQueryStrings = function() {
        var i = "";
        var i2 = nK.environment.webEnv.getQueryString();
        var i1 = i2.keys();
        while (i1.hasNext()) {
            var q = i1.next();
            if (q != "undefined" && q != "") {
                i += q + "=" + nK.getQueryString(q) + "&"
            }
        }
        return i
    };
    nK.processUpgradeReward = function() {
        var q = nK.models.getIncentiveBundleId();
        var i2 = nK.models.walletProductBundlesModel.getProductsByBundleId(q);
        var i1 = nK.models.findProductsOnWallet(i2);
        if (i1) {
            nK.services.gameui.showContainer();
            var i = new kS(q);
            nK.views.openView(i, {
                priority: 1,
                animate: true,
                allowClickClose: true
            })
        } else {
            null
        }
    };
    var iS = function() {};
    nt.DateTools = iS;
    iS.__name__ = ["DateTools"];
    iS.__format_get = function(i2, i1) {
        switch (i1) {
            case "%":
                return "%";
            case "C":
                return cP.lpad(kr.string(kr["int"](i2.getFullYear() / 100)), "0", 2);
            case "d":
                return cP.lpad(kr.string(i2.getDate()), "0", 2);
            case "D":
                return iS.__format(i2, "%m/%d/%y");
            case "e":
                return kr.string(i2.getDate());
            case "F":
                return iS.__format(i2, "%Y-%m-%d");
            case "H":
            case "k":
                return cP.lpad(kr.string(i2.getHours()), i1 == "H" ? "0" : " ", 2);
            case "I":
            case "l":
                var i = i2.getHours() % 12;
                return cP.lpad(kr.string(i == 0 ? 12 : i), i1 == "I" ? "0" : " ", 2);
            case "m":
                return cP.lpad(kr.string(i2.getMonth() + 1), "0", 2);
            case "M":
                return cP.lpad(kr.string(i2.getMinutes()), "0", 2);
            case "n":
                return "\n";
            case "p":
                if (i2.getHours() > 11) {
                    return "PM"
                } else {
                    return "AM"
                }
                break;
            case "r":
                return iS.__format(i2, "%I:%M:%S %p");
            case "R":
                return iS.__format(i2, "%H:%M");
            case "s":
                return kr.string(kr["int"](i2.getTime() / 1000));
            case "S":
                return cP.lpad(kr.string(i2.getSeconds()), "0", 2);
            case "t":
                return "\t";
            case "T":
                return iS.__format(i2, "%H:%M:%S");
            case "u":
                var q = i2.getDay();
                if (q == 0) {
                    return "7"
                } else {
                    if (q == null) {
                        return "null"
                    } else {
                        return "" + q
                    }
                }
                break;
            case "w":
                return kr.string(i2.getDay());
            case "y":
                return cP.lpad(kr.string(i2.getFullYear() % 100), "0", 2);
            case "Y":
                return kr.string(i2.getFullYear());
            default:
                throw new nM("Date.format %" + i1 + "- not implemented yet.")
        }
    };
    iS.__format = function(js, q) {
        var i = new jT();
        var i2 = 0;
        while (true) {
            var i1 = q.indexOf("%", i2);
            if (i1 < 0) {
                break
            }
            i.addSub(q, i2, i1 - i2);
            i.add(iS.__format_get(js, cj.substr(q, i1 + 1, 1)));
            i2 = i1 + 2
        }
        i.addSub(q, i2, q.length - i2);
        return i.b
    };
    iS.format = function(q, i) {
        return iS.__format(q, i)
    };
    iS.getMonthDays = function(i2) {
        var i1 = i2.getMonth();
        var i = i2.getFullYear();
        if (i1 != 1) {
            return iS.DAYS_OF_MONTH[i1]
        }
        var q = i % 4 == 0 && i % 100 != 0 || i % 400 == 0;
        if (q) {
            return 29
        } else {
            return 28
        }
    };
    var nl = function() {
        this.onChange = new nO()
    };
    nt["lime.AssetLibrary"] = nl;
    nl.__name__ = ["lime", "AssetLibrary"];
    nl.prototype = {
        onChange: null,
        exists: function(q, i) {
            return false
        },
        getAudioBuffer: function(i) {
            return null
        },
        getBytes: function(i) {
            return null
        },
        getFont: function(i) {
            return null
        },
        getImage: function(i) {
            return null
        },
        getPath: function(i) {
            return null
        },
        getText: function(q) {
            var i = this.getBytes(q);
            if (i == null) {
                return null
            } else {
                return i.getString(0, i.length)
            }
        },
        isLocal: function(q, i) {
            return true
        },
        list: function(i) {
            return null
        },
        load: function() {
            var i = this;
            return new kL(function() {
                return i
            })
        },
        loadAudioBuffer: function(q) {
            var i = this;
            return new kL(function() {
                return i.getAudioBuffer(q)
            })
        },
        loadBytes: function(q) {
            var i = this;
            return new kL(function() {
                return i.getBytes(q)
            })
        },
        loadFont: function(q) {
            var i = this;
            return new kL(function() {
                return i.getFont(q)
            })
        },
        loadImage: function(q) {
            var i = this;
            return new kL(function() {
                return i.getImage(q)
            })
        },
        loadText: function(i) {
            return this.loadBytes(i).then(function(q) {
                return new kL(function() {
                    if (q == null) {
                        return null
                    } else {
                        return q.getString(0, q.length)
                    }
                })
            })
        },
        unload: function() {},
        __class__: nl
    };
    var bp = function() {
        this.type = new io();
        this.path = new io();
        this.className = new io();
        nl.call(this);
        var js;
        js = "core-assets/Close_disabled.png";
        this.path.set(js, js);
        this.type.set(js, "IMAGE");
        js = "core-assets/oaktree.png";
        this.path.set(js, js);
        this.type.set(js, "IMAGE");
        js = "core-assets/Close.png";
        this.path.set(js, js);
        this.type.set(js, "IMAGE");
        js = "atlas/main_shop.xml";
        this.path.set(js, js);
        this.type.set(js, "TEXT");
        js = "atlas/main_shop.png";
        this.path.set(js, js);
        this.type.set(js, "IMAGE");
        js = "img/Twitter_Share_BTN.png";
        this.path.set(js, js);
        this.type.set(js, "IMAGE");
        js = "img/FB_Arrow.png";
        this.path.set(js, js);
        this.type.set(js, "IMAGE");
        js = "img/massboost_2x_shop.png";
        this.path.set(js, js);
        this.type.set(js, "IMAGE");
        js = "img/currency_icon.png";
        this.path.set(js, js);
        this.type.set(js, "IMAGE");
        js = "img/back_button.png";
        this.path.set(js, js);
        this.type.set(js, "IMAGE");
        js = "img/xpboost_3x_shop.png";
        this.path.set(js, js);
        this.type.set(js, "IMAGE");
        js = "img/profilepic_guest.png";
        this.path.set(js, js);
        this.type.set(js, "IMAGE");
        js = "img/incentive_android+iphone.png";
        this.path.set(js, js);
        this.type.set(js, "IMAGE");
        js = "img/arrow.png";
        this.path.set(js, js);
        this.type.set(js, "IMAGE");
        js = "img/Close_disabled.png";
        this.path.set(js, js);
        this.type.set(js, "IMAGE");
        js = "img/massboost_3x_shop.png";
        this.path.set(js, js);
        this.type.set(js, "IMAGE");
        js = "img/Close.png";
        this.path.set(js, js);
        this.type.set(js, "IMAGE");
        js = "img/xpboost_2x_shop.png";
        this.path.set(js, js);
        this.type.set(js, "IMAGE");
        js = "img/Facebook_Share_BTN.png";
        this.path.set(js, js);
        this.type.set(js, "IMAGE");
        js = "img/giant_coin.png";
        this.path.set(js, js);
        this.type.set(js, "IMAGE");
        js = "img/incentive_iphone_button.png";
        this.path.set(js, js);
        this.type.set(js, "IMAGE");
        js = "img/not_for_guests.png";
        this.path.set(js, js);
        this.type.set(js, "IMAGE");
        js = "img/fast_play.png";
        this.path.set(js, js);
        this.type.set(js, "IMAGE");
        js = "img/incentive_android.png";
        this.path.set(js, js);
        this.type.set(js, "IMAGE");
        js = "img/incentive_android_button.png";
        this.path.set(js, js);
        this.type.set(js, "IMAGE");
        js = "img/Close_old.png";
        this.path.set(js, js);
        this.type.set(js, "IMAGE");
        js = "img/Facebook_Symbol.png";
        this.path.set(js, js);
        this.type.set(js, "IMAGE");
        js = "img/Close_disabled_old.png";
        this.path.set(js, js);
        this.type.set(js, "IMAGE");
        js = "img/hint.png";
        this.path.set(js, js);
        this.type.set(js, "IMAGE");
        js = "img/Exp_Star.png";
        this.path.set(js, js);
        this.type.set(js, "IMAGE");
        js = "img/sticker.png";
        this.path.set(js, js);
        this.type.set(js, "IMAGE");
        js = "img/multiplier_stamp.png";
        this.path.set(js, js);
        this.type.set(js, "IMAGE");
        js = "img/play.png";
        this.path.set(js, js);
        this.type.set(js, "IMAGE");
        js = "img/purchase_plus.png";
        this.path.set(js, js);
        this.type.set(js, "IMAGE");
        js = "img/Login_Play.png";
        this.path.set(js, js);
        this.type.set(js, "IMAGE");
        js = "particle/Daily_Quest_Sparkles_1a.plist";
        this.path.set(js, js);
        this.type.set(js, "TEXT");
        js = "particle/LevelUpSlotBarParticle.png";
        this.path.set(js, js);
        this.type.set(js, "IMAGE");
        js = "particle/Sparkle_1a.png";
        this.path.set(js, js);
        this.type.set(js, "IMAGE");
        js = "particle/Sparkle_2c.png";
        this.path.set(js, js);
        this.type.set(js, "IMAGE");
        js = "particle/Daily_Quest_Sparkles_2.plist";
        this.path.set(js, js);
        this.type.set(js, "TEXT");
        js = "particle/Sparkle_1.png";
        this.path.set(js, js);
        this.type.set(js, "IMAGE");
        js = "particle/Daily_Quest_Sparkles_1c.plist";
        this.path.set(js, js);
        this.type.set(js, "TEXT");
        js = "particle/Daily_Quest_Chest.plist";
        this.path.set(js, js);
        this.type.set(js, "TEXT");
        js = "particle/Daily_Quest_Sparkles_2a.plist";
        this.path.set(js, js);
        this.type.set(js, "TEXT");
        js = "particle/Daily_Quest_Sparkles_1.plist";
        this.path.set(js, js);
        this.type.set(js, "TEXT");
        js = "particle/Sparkle_2.png";
        this.path.set(js, js);
        this.type.set(js, "IMAGE");
        js = "particle/Daily_Quest_Sparkles_2c.plist";
        this.path.set(js, js);
        this.type.set(js, "TEXT");
        js = "particle/Daily_Quest_Sparkles_2b.plist";
        this.path.set(js, js);
        this.type.set(js, "TEXT");
        js = "particle/Sparkle_2b.png";
        this.path.set(js, js);
        this.type.set(js, "IMAGE");
        js = "particle/Sparkle_1b.png";
        this.path.set(js, js);
        this.type.set(js, "IMAGE");
        js = "particle/Sparkle_2a.png";
        this.path.set(js, js);
        this.type.set(js, "IMAGE");
        js = "particle/Sparkle_1c.png";
        this.path.set(js, js);
        this.type.set(js, "IMAGE");
        js = "particle/Daily_Quest_Sparkles_1b.plist";
        this.path.set(js, js);
        this.type.set(js, "TEXT");
        js = "particle/LevelUpSlotBar-ipadhd.plist";
        this.path.set(js, js);
        this.type.set(js, "TEXT");
        var q = null;
        if (cb.config != null && Object.prototype.hasOwnProperty.call(cb.config, "assetsPrefix")) {
            q = cb.config.assetsPrefix
        }
        if (q != null) {
            var i2 = this.path.keys();
            while (i2.hasNext()) {
                var i = i2.next();
                var i1 = q + this.path.get(i);
                this.path.set(i, i1)
            }
        }
    };
    nt.DefaultAssetLibrary = bp;
    bp.__name__ = ["DefaultAssetLibrary"];
    bp.__super__ = nl;
    bp.prototype = lP(nl.prototype, {
        className: null,
        path: null,
        type: null,
        lastModified: null,
        timer: null,
        exists: function(i2, q) {
            var i1;
            if (q != null) {
                i1 = n0.__cast(q, String)
            } else {
                i1 = null
            }
            var i = this.type.get(i2);
            if (i != null) {
                if (i == i1 || (i1 == "SOUND" || i1 == "MUSIC") && (i == "MUSIC" || i == "SOUND")) {
                    return true
                }
                if (i1 == "BINARY" || i1 == null || i == "BINARY" && i1 == "TEXT") {
                    return true
                }
            }
            return false
        },
        getAudioBuffer: function(i) {
            return null
        },
        getBytes: function(i2) {
            var i;
            var i1 = this.path.get(i2);
            i = p5.loaders.get(i1);
            if (i == null) {
                return null
            }
            var q = i.bytes;
            if (q != null) {
                return q
            } else {
                return null
            }
        },
        getFont: function(i) {
            return n0.__cast(kX.createInstance(this.className.get(i), []), gK)
        },
        getImage: function(i) {
            return nv.fromImageElement((function(i2) {
                var q;
                var i1 = i2.path.get(i);
                q = p5.images.get(i1);
                return q
            }(this)))
        },
        getPath: function(i) {
            return this.path.get(i)
        },
        getText: function(i2) {
            var i;
            var i1 = this.path.get(i2);
            i = p5.loaders.get(i1);
            if (i == null) {
                return null
            }
            var q = i.bytes;
            if (q != null) {
                return q.getString(0, q.length)
            } else {
                return null
            }
        },
        isLocal: function(i1, i) {
            var q;
            if (i != null) {
                q = n0.__cast(i, String)
            } else {
                q = null
            }
            return true
        },
        list: function(q) {
            var i2;
            if (q != null) {
                i2 = n0.__cast(q, String)
            } else {
                i2 = null
            }
            var i = [];
            var i1 = this.type.keys();
            while (i1.hasNext()) {
                var js = i1.next();
                if (i2 == null || this.exists(js, q)) {
                    i.push(js)
                }
            }
            return i
        },
        loadAudioBuffer: function(i1) {
            var q = this;
            var i = new oJ();
            i.completeWith(new kL(function() {
                return q.getAudioBuffer(i1)
            }));
            return i.future
        },
        loadBytes: function(i1) {
            var q = new oJ();
            if (this.path.exists(i1)) {
                var i = new gY();
                q.completeWith(i.load(this.path.get(i1) + "?" + bY.cache.version))
            } else {
                q.complete(this.getBytes(i1))
            }
            return q.future
        },
        loadImage: function(i1) {
            var q = new oJ();
            if (this.path.exists(i1)) {
                var i = new Image();
                i.onload = function(i2) {
                    q.complete(nv.fromImageElement(i))
                };
                i.onerror = oT(q, q.error);
                i.src = this.path.get(i1) + "?" + bY.cache.version
            } else {
                q.complete(this.getImage(i1))
            }
            return q.future
        },
        loadText: function(i2) {
            var i1 = new oJ();
            if (this.path.exists(i2)) {
                var q = new gY();
                var i = q.load(this.path.get(i2) + "?" + bY.cache.version);
                i.onProgress(function(js) {
                    i1.progress(js)
                });
                i.onError(function(js) {
                    i1.error(js)
                });
                i.onComplete(function(js) {
                    i1.complete(js.getString(0, js.length))
                })
            } else {
                i1.complete(this.getText(i2))
            }
            return i1.future
        },
        __class__: bp
    });
    var gF = function(q, i) {
        i = i.split("u").join("");
        this.r = new RegExp(q, i)
    };
    nt.EReg = gF;
    gF.__name__ = ["EReg"];
    gF.prototype = {
        r: null,
        match: function(i) {
            if (this.r.global) {
                this.r.lastIndex = 0
            }
            this.r.m = this.r.exec(i);
            this.r.s = i;
            return this.r.m != null
        },
        matched: function(i) {
            if (this.r.m != null && i >= 0 && i < this.r.m.length) {
                return this.r.m[i]
            } else {
                throw new nM("EReg::matched")
            }
        },
        replace: function(i, q) {
            return i.replace(this.r, q)
        },
        __class__: gF
    };
    var cj = function() {};
    nt.HxOverrides = cj;
    cj.__name__ = ["HxOverrides"];
    cj.dateStr = function(i1) {
        var i = i1.getMonth() + 1;
        var qY = i1.getDate();
        var js = i1.getHours();
        var q = i1.getMinutes();
        var i2 = i1.getSeconds();
        return i1.getFullYear() + "-" + (i < 10 ? "0" + i : "" + i) + "-" + (qY < 10 ? "0" + qY : "" + qY) + " " + (js < 10 ? "0" + js : "" + js) + ":" + (q < 10 ? "0" + q : "" + q) + ":" + (i2 < 10 ? "0" + i2 : "" + i2)
    };
    cj.strDate = function(i1) {
        var qY = i1.length;
        switch (qY) {
            case 8:
                var i = i1.split(":");
                var js = new Date();
                js.setTime(0);
                js.setUTCHours(i[0]);
                js.setUTCMinutes(i[1]);
                js.setUTCSeconds(i[2]);
                return js;
            case 10:
                var q0 = i1.split("-");
                return new Date(q0[0], q0[1] - 1, q0[2], 0, 0, 0);
            case 19:
                var i2 = i1.split(" ");
                var qZ = i2[0].split("-");
                var q = i2[1].split(":");
                return new Date(qZ[0], qZ[1] - 1, qZ[2], q[0], q[1], q[2]);
            default:
                throw new nM("Invalid date format : " + i1)
        }
    };
    cj.cca = function(i1, q) {
        var i = i1.charCodeAt(q);
        if (i != i) {
            return undefined
        }
        return i
    };
    cj.substr = function(q, i1, i) {
        if (i1 != null && i1 != 0 && i != null && i < 0) {
            return ""
        }
        if (i == null) {
            i = q.length
        }
        if (i1 < 0) {
            i1 = q.length + i1;
            if (i1 < 0) {
                i1 = 0
            }
        } else {
            if (i < 0) {
                i = q.length + i - i1
            }
        }
        return q.substr(i1, i)
    };
    cj.indexOf = function(i1, js, i2) {
        var q = i1.length;
        if (i2 < 0) {
            i2 += q;
            if (i2 < 0) {
                i2 = 0
            }
        }
        while (i2 < q) {
            if (i1[i2] === js) {
                return i2
            }
            i2++
        }
        return -1
    };
    cj.lastIndexOf = function(i1, js, i2) {
        var q = i1.length;
        if (i2 >= q) {
            i2 = q - 1
        } else {
            if (i2 < 0) {
                i2 += q
            }
        }
        while (i2 >= 0) {
            if (i1[i2] === js) {
                return i2
            }
            i2--
        }
        return -1
    };
    cj.remove = function(q, i2) {
        var i1 = cj.indexOf(q, i2, 0);
        if (i1 == -1) {
            return false
        }
        q.splice(i1, 1);
        return true
    };
    cj.iter = function(i) {
        return {
            cur: 0,
            arr: i,
            hasNext: function() {
                return this.cur < this.arr.length
            },
            next: function() {
                return this.arr[this.cur++]
            }
        }
    };
    var jN = function() {};
    nt.Lambda = jN;
    jN.__name__ = ["Lambda"];
    jN.has = function(i1, q) {
        var i2 = mH(i1)();
        while (i2.hasNext()) {
            var i = i2.next();
            if (i == q) {
                return true
            }
        }
        return false
    };
    jN.exists = function(q, i2) {
        var i1 = mH(q)();
        while (i1.hasNext()) {
            var i = i1.next();
            if (i2(i)) {
                return true
            }
        }
        return false
    };
    jN.fold = function(q, i2, js) {
        var i1 = mH(q)();
        while (i1.hasNext()) {
            var i = i1.next();
            js = i2(i, js)
        }
        return js
    };
    jN.count = function(i2, q) {
        var qZ = 0;
        if (q == null) {
            var qY = mH(i2)();
            while (qY.hasNext()) {
                var i1 = qY.next();
                qZ++
            }
        } else {
            var js = mH(i2)();
            while (js.hasNext()) {
                var i = js.next();
                if (q(i)) {
                    qZ++
                }
            }
        }
        return qZ
    };
    var oI = function() {
        this.length = 0
    };
    nt.List = oI;
    oI.__name__ = ["List"];
    oI.prototype = {
        h: null,
        q: null,
        length: null,
        add: function(q) {
            var i = [q];
            if (this.h == null) {
                this.h = i
            } else {
                this.q[1] = i
            }
            this.q = i;
            this.length++
        },
        push: function(q) {
            var i = [q, this.h];
            this.h = i;
            if (this.q == null) {
                this.q = i
            }
            this.length++
        },
        first: function() {
            if (this.h == null) {
                return null
            } else {
                return this.h[0]
            }
        },
        last: function() {
            if (this.q == null) {
                return null
            } else {
                return this.q[0]
            }
        },
        pop: function() {
            if (this.h == null) {
                return null
            }
            var i = this.h[0];
            this.h = this.h[1];
            if (this.h == null) {
                this.q = null
            }
            this.length--;
            return i
        },
        isEmpty: function() {
            return this.h == null
        },
        clear: function() {
            this.h = null;
            this.q = null;
            this.length = 0
        },
        remove: function(q) {
            var i1 = null;
            var i = this.h;
            while (i != null) {
                if (i[0] == q) {
                    if (i1 == null) {
                        this.h = i[1]
                    } else {
                        i1[1] = i[1]
                    }
                    if (this.q == i) {
                        this.q = i1
                    }
                    this.length--;
                    return true
                }
                i1 = i;
                i = i[1]
            }
            return false
        },
        iterator: function() {
            return new d0(this.h)
        },
        __class__: oI
    };
    var d0 = function(i) {
        this.head = i;
        this.val = null
    };
    nt["_List.ListIterator"] = d0;
    d0.__name__ = ["_List", "ListIterator"];
    d0.prototype = {
        head: null,
        val: null,
        hasNext: function() {
            return this.head != null
        },
        next: function() {
            this.val = this.head[0];
            this.head = this.head[1];
            return this.val
        },
        __class__: d0
    };
    Math.__name__ = ["Math"];
    var lp = bD.MiniclipAPI = function(i, q) {
        if (q == null) {
            q = ""
        }
        this._inGame = false;
        this.coreWasLoaded = false;
        this.gamepadSupportActive = false;
        lp.instance = this;
        this.overlay = q;
        this.container = i;
        if (this.overlay != "") {
            $("#" + this.overlay).click(function(i1) {
                nK.views.closeTopView()
            })
        }
//        nK.onReady.addOnce(oT(this, this.dispatchOnReady))
    };
	
	
	
    nt.MiniclipAPI = lp;
    lp.__name__ = ["MiniclipAPI"];
    lp.instance = null;
    lp.prototype = {
        onReady: null,
        container: null,
        overlay: null,
        shopDialog: null,
        gamepadSupportActive: null,
        coreWasLoaded: null,
        questProgress: null,
        _inGame: null,
        serverVersion: null,
        _server: null,
        dispatchOnReady: function() {
            if (this.onReady != null) {
                this.onReady()
            }
            this.setInGameState(this._inGame)
        },
        loadEnvironment: function(i1) {
            var i = ar.fields(i1);
            var i2 = 0;
            while (i2 < i.length) {
                var q = i[i2];
                ++i2;
                d5.setProperty(q, ar.getProperty(i1, q))
            }
        },
        openShop: function(q, i) {
            if (q == null) {
                q = ""
            }
            if (nK.services.shop.isOpen) {
                return
            }
            nK.services.shop.isOpen = true;
            if (!nK.initialized) {
                return null
            }
            nK.services.gameui.showContainer();
            this.shopDialog = new qm();
            this.shopDialog.allowDisableClose = false;
            this.shopDialog.openCategory(q, true, i);
            this.shopDialog.addEventListener("close", oT(this, this.onShopClose), false, 0, true);
            nK.views.openView(this.shopDialog, {
                priority: 1,
                animate: true,
                allowClickClose: false
            })
        },
        onShopClose: function(i) {
            nK.services.shop.isOpen = false;
            if (nK.get_states().isTopState("state_main_screen")) {
                nK.services.gameui.hideContainer()
            }
        },
        retryConnection: function() {
            var i = l4.getService(oF);
            i.login();
            nK.services.gameui.disableShop()
        },
        onVideoClose: function() {
            nK.views.enableViews();
            nK.get_states().disable("state_video_window")
        },
        checkVideoAds: function() {
            nK.get_events().dispatchEventWith("ShopEvent::checkVideos")
        },
        showProfile: function() {
            if (nK.views == null) {
                return
            }
            var i = l4.getService(hk);
            if (i != null && !i.isConnected()) {
                return
            }
            nK.services.gameui.showContainer();
            if (nK.user != null && nK.user.isGuest || nK.user.isConnecting) {
                nK.get_events().fire("ShopEvent::show_guest_conversion")
            } else {
                var q = new lV();
                nK.views.openView(q, {
                    priority: 1,
                    animate: true,
                    allowClickClose: true
                });
                q.addEventListener("close", oT(this, this.onShopClose))
            }
        },
        showLevelUp: function(i, q, i1) {
            nK.services.gameui.showContainer();
            var i2 = new a0(i, q, i1);
            nK.views.openView(i2, {
                priority: 1,
                animate: true,
                allowClickClose: true
            });
            i2.addEventListener("close", oT(this, this.onShopClose))
        },
        showGuestView: function() {
            nK.services.gameui.showContainer();
            nK.get_events().dispatchEventWith("ShopEvent::show_guest_conversion")
        },
        showFreeCoins: function() {
            var i1 = this;
            if (nK.get_states().isEnabled("state_free_coins_dialog")) {
                return
            }
            if (nK.environment.get_isInFacebook() && nK.get_states().isEnabled("stateFreeCoinsCollect")) {
                return
            }
            nK.services.gameui.showContainer();
            if (nK.user.userInfo == null) {
                nK.get_events().dispatchEventWith("ShopEvent::show_guest_conversion");
                return
            }
            if (nK.environment.platform == bb.Facebook) {
                var i = nK.user.freeCoinTimeLeft();
                bg.openCollectDialog(i == 0, function() {
                    i1.onShopClose(null)
                }, false);
                bg.triggerFreeCoins()
            } else {
                var i2 = window.TRModule.hasSurveyData();
                var q = new bg(i2);
                nK.views.openView(q, {
                    priority: 1,
                    animate: true,
                    allowClickClose: false
                });
                q.addEventListener("close", oT(this, this.onShopClose))
            }
        },
        showGifting: function() {
            nK.showGifting()
        },
        showQuests: function() {
            nK.openQuestsDialog()
        },
        isUserLoggedIn: function() {
            if (nK.user.userInfo == null) {
                return false
            } else {
                return true
            }
        },
        overlayClick: function() {
            nK.get_events().dispatchEventWith("deactivate")
        },
        isShopAvailable: function() {
            if (!nK.initialized) {
                return false
            }
            return nK.services.shop.isShopAvailable
        },
        isConnecting: function() {
            if (!nK.initialized) {
                return true
            }
            return nK.user.isConnecting
        },
        facebookLogin: function() {
            nK.facebookLogin(function(i) {})
        },
        doLoginWithFB: function(i, q) {
            if (q == null) {
                q = false
            }
            var i1 = this;
            if (nK.initialized) {
                nK.environment.authenticationProvider = N.Facebook;
                this.performLogin(i, q)
            } else {
                nK.onReady.addOnce(function() {
                    i1.doLoginWithFB(i, q)
                })
            }
        },
        googleLogin: function() {
            nK.disableHUD()
        },
        doLoginWithGPlus: function(i, q) {
            if (q == null) {
                q = false
            }
            var i1 = this;
            if (nK.initialized) {
                nK.environment.authenticationProvider = N.Google;
                this.performLogin(i, q);
                $("#giftsPanel").hide()
            } else {
                nK.onReady.addOnce(function() {
                    i1.doLoginWithGPlus(i, q)
                })
            }
        },
        onGoogleLoginComplete: function() {
            nK.enableHUD()
        },
        performLogin: function(q, i1) {
            if (i1 == null) {
                i1 = false
            }
            var i = l4.getService(oF);
            if (i.get_loggedIn()) {
                return
            }
            i.set_authToken(q);
            i.login();
            nK.user.set_isConnecting(true);
            nK.services.gameui.disableShop()
        },
        doLogout: function() {
            var i = l4.getService(oF);
            i.logout();
            nK.views.closeAllViews();
            nK.models.resetModels();
            nK.services.gameui.clearTimers();
            if (this.shopDialog != null) {
                this.shopDialog.destroy()
            }
            this.shopDialog = null;
            if (window.core) {
                window.core.loadSkin("")
            }
            nK.services.gameui.setGuestInfo();
            $("#giftsPanel").show()
        },
        getQuestProgressLabel: function() {
            return nK.getQuestProgressLabel(this.questProgress)
        },
        checkQuestComplete: function() {
            return nK.checkQuestComplete(this.questProgress)
        },
        setProfilePicture: function(i) {
            if (nK.user != null) {
                nK.user.avatarUrl = i
            }
        },
        setSocialId: function(i) {
            if (nK.user != null) {
                nK.user.set_socialId(i)
            }
        },
        hideContainer: function() {
            nK.services.gameui.hideContainer()
        },
        updateServerVersion: function(i) {
            aQ.SERVER_VERSION = i;
            aQ.updateTag()
        },
        updateConfigurationID: function(i) {
            kd.setConfigID(i)
        },
        getSkinInfo: function(i) {
            if (!nK.initialized) {
                return null
            }
            var i2 = i;
            if (i2 == "skin_starball1") {
                i2 = "skin_starball"
            }
            var i1 = nK.models.shopSkinsModel.getItemById(i2);
            if (i1 == null) {
                return null
            }
            var q = {
                url: i1.gamePlayInfo.get_gamePlayImage(),
                color: i1.gamePlayInfo.get_cellColor()
            };
            if (i == "skin_starball1") {
                q.url = "Starball1.png"
            }
            return q
        },
        onOffwerwallClose: function() {
            nK.get_states().disable("state_offerwall_window")
        },
        onMobileData: function(i1) {
			//console.log("onmobiledata");
            if (i1 == null) {
                return
            }
            var q = i1.buffer.slice(i1.byteOffset, i1.byteOffset + i1.byteLength);
            var i = op.fromArrayBuffer(q);
            if (this._server == null) {
                this._server = l4.getService(hk)
            }
            this._server.injectPacket(op.toBytes(i))
        },
        onAgarioCoreLoaded: function() {
            this.coreWasLoaded = true;
            if (nK.ui != null) {
                nK.ui.initAgario()
            }
        },
        onPlayerDeath: function(qY, js, i1, q, i, i2) {
            nK.ui.state.inGame = false;
            nK.ui.state.isPlayerAlive = false;
            nK.ui.state.setGameResults(qY, js, i1, q, i, i2);
            nK.ui.stats.onPlayerDeath();
          //  nK.services.promo.postEvent("PROMO_FINISHED_MATCH")
		  console.log("R.I.P ME");
        },
        onPlayerStatsUpdate: function(qY, js, i1, q, i, i2) {
            this.questProgress = nK.getQuestProgress(qY, js, i1, q, i, i2)
        },
        onPlayerSpawn: function() {
            nK.ui.state.isPlayerAlive = true;
            nK.ui.stats.onPlayerSpawn()
			console.log("PLAYER SPAWED !")
			
        },
        onPlayerBanned: function(i) {
            nK.ui.onPlayerBanned(i)
			console.log("I GOT A BAD. FUCKING AGAR.IO")
        },
        activateGamepadSupport: function() {
            this.gamepadSupportActive = true
        },
        deactivateGamepadSupport: function() {
            this.gamepadSupportActive = false
        },
        onGamepadUpdate: function(q) {
            var i = l4.getService(oD);
            i.gamepadAxisUpdate = q
        },
        registerSplitFunction: function(q) {
            var i = l4.getService(oD);
            i.sendMitosisCallback = q
        },
        registerEjectFunction: function(q) {
            var i = l4.getService(oD);
            i.ejectMassCallback = q
        },
        setInGameState: function(i) {
            this._inGame = i;
            if (!nK.initialized) {
                return
            }
            if (this._inGame) {
                nK.get_states().disable("state_main_screen")
            } else {
                nK.get_states().enable("state_main_screen")
            }
        },
        notifyFullscreenAdFinished: function() {
            nK.get_states().disable("state_fullscreen_ad");
            nK.ui.stats.onFullscreenAd()
        },
        notifyToken: function(i) {
            nK.notifyToken(i)
        },
        onDisconnect: function() {
            nK.ui.onDisconnect()
        },
        onConnect: function() {
            //nK.ui.doLogin();
            //nK.ui.partyMode.createPartyToken()
        },
        showInstructionsPanel: function(i) {
            nK.ui.mainUI.showInstructionsPanel(i)
        },
        findServer: function(q, i) {
            nK.ui.network.findServer(q, i)
        },
        setGameMode: function(q, i) {
            if (i == null) {
                i = true
            }
            nK.ui.mainUI.setGameMode(q, i)
        },
        wasInitialized: function() {
            nK.ui.state.isInitialized = true
        },
        reconnect: function() {
            nK.ui.network.reconnect()
        },
        getPartyToken: function() {
            return nK.ui.state.partyToken
        },
        setPartyToken: function(i) {
            nK.ui.state.set_partyToken(i)
        },
        getRegion: function() {
            return nK.ui.state.region
        },
        setRegion: function(i) {
            nK.ui.network.setRegion(i)
        },
        checkRegion: function() {
            nK.ui.network.checkRegion()
        },
        refreshRegionInfo: function() {
            nK.ui.network.refreshRegionInfo()
        },
        getLastGameStats: function() {
            return nK.ui.state.lastGameResults
        },
        showStatsDialog: function() {
            nK.ui.stats.showStatsDialog()
        },
        isInGame: function() {
            return nK.ui.state.inGame
        },
        showAds: function(i) {
            nK.ui.mainUI.showAds(i)
        },
        showNickDialog: function(i) {
            nK.ui.mainUI.showAds(0);
            nK.ui.mainUI.showNickDialog(i)
        },
        hideMetaUI: function() {
            nK.ui.mainUI.hideMetaUI()
        },
        setNick: function(i) {
            nK.ui.mainUI.setNick(i)
        },
        getLatestConfigurationID: function() {
            nK.ui.network.getLatestConfigurationId()
        },
        setQuality: function(i) {
            nK.ui.canvas.setQuality(i)
        },
        corePendingReload: function() {
            nK.ui.handleAgarioCoreReload()
        },
        joinParty: function(i) {
            nK.ui.partyMode.joinParty(i)
        },
        sessionRejected: function() {
            nK.ui.onSessionRejected()
        },
        recaptchaRequested: function() {
            nK.ui.onRecaptchaRequested()
        },
        facebook: null,
        getProfilePicture: function(i1) {
            var i = "";
            if (!nK.user.isGuest && nK.user.facebookId != null) {
                var q = this.findFBFriendById(i1);
                if (q != null) {
                    i = q.picture
                }
            }
            return i
        },
        findFBFriendById: function(js) {
            if (this.facebook == null) {
                this.facebook = new no("");
                this.facebook.getAllFriends()
            }
            if (this.facebook.allFriends != null) {
                var i1 = js.split(":")[1];
                var i2 = 0;
                var q = this.facebook.allFriends;
                while (i2 < q.length) {
                    var i = q[i2];
                    ++i2;
                    if (i.id == i1) {
                        return i
                    }
                }
            }
            return null
        },
        __class__: lp
    };
	window.MC = new lp;
    var gP = function() {
        cY.call(this);
        var q2 = this.getBackgroundColor();
        var i = q2 >> 16 & 255;
        var js = q2 >> 8 & 255;
        var qZ = q2 & 255;
        var i2 = 0.299 * i + 0.587 * js + 0.114 * qZ;
        var i1 = 0;
        if (i2 < 70) {
            i1 = 16777215
        }
        var q1 = 30;
        var q3 = 7;
        var qY = this.getHeight() / 2 - q3 / 2;
        var q = this.getWidth() - q1 * 2;
        var q0 = 2;
        this.outline = new cY();
        this.outline.get_graphics().beginFill(i1, 0.07);
        this.outline.get_graphics().drawRect(0, 0, q, q3);
        this.outline.set_x(q1);
        this.outline.set_y(qY);
        this.addChild(this.outline);
        this.progress = new cY();
        this.progress.get_graphics().beginFill(i1, 0.35);
        this.progress.get_graphics().drawRect(0, 0, q - q0 * 2, q3 - q0 * 2);
        this.progress.set_x(q1 + q0);
        this.progress.set_y(qY + q0);
        this.progress.set_scaleX(0);
        this.addChild(this.progress)
    };
    nt.NMEPreloader = gP;
    gP.__name__ = ["NMEPreloader"];
    gP.__super__ = cY;
    gP.prototype = lP(cY.prototype, {
        outline: null,
        progress: null,
        getBackgroundColor: function() {
            return 0
        },
        getHeight: function() {
            var i = 1024;
            if (i > 0) {
                return i
            } else {
                return ns.current.stage.stageHeight
            }
        },
        getWidth: function() {
            var i = 1280;
            if (i > 0) {
                return i
            } else {
                return ns.current.stage.stageWidth
            }
        },
        onInit: function() {},
        onLoaded: function() {
            this.dispatchEvent(new hM("complete"))
        },
        onUpdate: function(i1, q) {
            var i = i1 / q;
            if (i > 1) {
                i = 1
            }
            this.progress.set_scaleX(i)
        },
        __class__: gP
    });
    var ar = function() {};
    nt.Reflect = ar;
    ar.__name__ = ["Reflect"];
    ar.hasField = function(q, i) {
        return Object.prototype.hasOwnProperty.call(q, i)
    };
    ar.field = function(i1, q) {
        try {
            return i1[q]
        } catch (i) {
            lF.lastException = i;
            if (i instanceof nM) {
                i = i.val
            }
            return null
        }
    };
    ar.setField = function(i1, q, i) {
        i1[q] = i
    };
    ar.getProperty = function(i1, q) {
        var i;
        if (i1 == null) {
            return null
        } else {
            if (i1.__properties__ && (i = i1.__properties__["get_" + q])) {
                return i1[i]()
            } else {
                return i1[q]
            }
        }
    };
    ar.setProperty = function(i2, i1, q) {
        var i;
        if (i2.__properties__ && (i = i2.__properties__["set_" + i1])) {
            i2[i](q)
        } else {
            i2[i1] = q
        }
    };
    ar.callMethod = function(i1, q, i) {
        return q.apply(i1, i)
    };
    ar.fields = function(i2) {
        var i = [];
        if (i2 != null) {
            var i1 = Object.prototype.hasOwnProperty;
            for (var q in i2) {
                if (q != "__id__" && q != "hx__closures__" && i1.call(i2, q)) {
                    i.push(q)
                }
            }
        }
        return i
    };
    ar.isFunction = function(i) {
        return typeof(i) == "function" && !(i.__name__ || i.__ename__)
    };
    ar.compare = function(q, i) {
        if (q == i) {
            return 0
        } else {
            if (q > i) {
                return 1
            } else {
                return -1
            }
        }
    };
    ar.compareMethods = function(i, q) {
        if (i == q) {
            return true
        }
        if (!ar.isFunction(i) || !ar.isFunction(q)) {
            return false
        }
        return i.scope == q.scope && i.method == q.method && i.method != null
    };
    ar.isEnumValue = function(i) {
        return i != null && i.__enum__ != null
    };
    ar.deleteField = function(q, i) {
        if (!Object.prototype.hasOwnProperty.call(q, i)) {
            return false
        }
        delete(q[i]);
        return true
    };
    ar.copy = function(js) {
        var i = {};
        var i2 = 0;
        var i1 = ar.fields(js);
        while (i2 < i1.length) {
            var q = i1[i2];
            ++i2;
            ar.setField(i, q, ar.field(js, q))
        }
        return i
    };
    ar.makeVarArgs = function(i) {
        return function() {
            var q = Array.prototype.slice.call(arguments);
            return i(q)
        }
    };
    var kr = function() {};
    nt.Std = kr;
    kr.__name__ = ["Std"];
    kr.is = function(i, q) {
        return n0.__instanceof(i, q)
    };
    kr.string = function(i) {
        return n0.__string_rec(i, "")
    };
    kr["int"] = function(i) {
        return i | 0
    };
    kr.parseInt = function(i) {
        var q = parseInt(i, 10);
        if (q == 0 && (cj.cca(i, 1) == 120 || cj.cca(i, 1) == 88)) {
            q = parseInt(i)
        }
        if (isNaN(q)) {
            return null
        }
        return q
    };
    kr.parseFloat = function(i) {
        return parseFloat(i)
    };
    var jT = function() {
        this.b = ""
    };
    nt.StringBuf = jT;
    jT.__name__ = ["StringBuf"];
    jT.prototype = {
        b: null,
        add: function(i) {
            this.b += kr.string(i)
        },
        addSub: function(q, i1, i) {
            if (i == null) {
                this.b += cj.substr(q, i1, null)
            } else {
                this.b += cj.substr(q, i1, i)
            }
        },
        __class__: jT
    };
    var cP = function() {};
    nt.StringTools = cP;
    cP.__name__ = ["StringTools"];
    cP.urlEncode = function(i) {
        return encodeURIComponent(i)
    };
    cP.urlDecode = function(i) {
        return decodeURIComponent(i.split("+").join(" "))
    };
    cP.htmlEscape = function(q, i) {
        q = q.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
        if (i) {
            return q.split('"').join("&quot;").split("'").join("&#039;")
        } else {
            return q
        }
    };
    cP.startsWith = function(i, q) {
        return i.length >= q.length && cj.substr(i, 0, q.length) == q
    };
    cP.endsWith = function(i1, i) {
        var q = i.length;
        var i2 = i1.length;
        return i2 >= q && cj.substr(i1, i2 - q, q) == i
    };
    cP.isSpace = function(i, i1) {
        var q = cj.cca(i, i1);
        return q > 8 && q < 14 || q == 32
    };
    cP.ltrim = function(q) {
        var i = q.length;
        var i1 = 0;
        while (i1 < i && cP.isSpace(q, i1)) {
            i1++
        }
        if (i1 > 0) {
            return cj.substr(q, i1, i - i1)
        } else {
            return q
        }
    };
    cP.rtrim = function(q) {
        var i = q.length;
        var i1 = 0;
        while (i1 < i && cP.isSpace(q, i - i1 - 1)) {
            i1++
        }
        if (i1 > 0) {
            return cj.substr(q, 0, i - i1)
        } else {
            return q
        }
    };
    cP.trim = function(i) {
        return cP.ltrim(cP.rtrim(i))
    };
    cP.lpad = function(q, i1, i) {
        if (i1.length <= 0) {
            return q
        }
        while (q.length < i) {
            q = i1 + q
        }
        return q
    };
    cP.replace = function(q, i, i1) {
        return q.split(i).join(i1)
    };
    cP.hex = function(i2, q) {
        var i = "";
        var i1 = "0123456789ABCDEF";
        do {
            i = i1.charAt(i2 & 15) + i;
            i2 >>>= 4
        } while (i2 > 0);
        if (q != null) {
            while (i.length < q) {
                i = "0" + i
            }
        }
        return i
    };
    cP.fastCodeAt = function(q, i) {
        return q.charCodeAt(i)
    };
    var bu = nt.ValueType = {
        __ename__: ["ValueType"],
        __constructs__: ["TNull", "TInt", "TFloat", "TBool", "TObject", "TFunction", "TClass", "TEnum", "TUnknown"]
    };
    bu.TNull = ["TNull", 0];
    bu.TNull.toString = ea;
    bu.TNull.__enum__ = bu;
    bu.TInt = ["TInt", 1];
    bu.TInt.toString = ea;
    bu.TInt.__enum__ = bu;
    bu.TFloat = ["TFloat", 2];
    bu.TFloat.toString = ea;
    bu.TFloat.__enum__ = bu;
    bu.TBool = ["TBool", 3];
    bu.TBool.toString = ea;
    bu.TBool.__enum__ = bu;
    bu.TObject = ["TObject", 4];
    bu.TObject.toString = ea;
    bu.TObject.__enum__ = bu;
    bu.TFunction = ["TFunction", 5];
    bu.TFunction.toString = ea;
    bu.TFunction.__enum__ = bu;
    bu.TClass = function(q) {
        var i = ["TClass", 6, q];
        i.__enum__ = bu;
        i.toString = ea;
        return i
    };
    bu.TEnum = function(q) {
        var i = ["TEnum", 7, q];
        i.__enum__ = bu;
        i.toString = ea;
        return i
    };
    bu.TUnknown = ["TUnknown", 8];
    bu.TUnknown.toString = ea;
    bu.TUnknown.__enum__ = bu;
    var kX = function() {};
    nt.Type = kX;
    kX.__name__ = ["Type"];
    kX.getClass = function(i) {
        if (i == null) {
            return null
        } else {
            return n0.getClass(i)
        }
    };
    kX.getEnum = function(i) {
        if (i == null) {
            return null
        }
        return i.__enum__
    };
    kX.getSuperClass = function(i) {
        return i.__super__
    };
    kX.getClassName = function(q) {
        var i = q.__name__;
        if (i == null) {
            return null
        }
        return i.join(".")
    };
    kX.getEnumName = function(q) {
        var i = q.__ename__;
        return i.join(".")
    };
    kX.resolveClass = function(q) {
        var i = nt[q];
        if (i == null || !i.__name__) {
            return null
        }
        return i
    };
    kX.resolveEnum = function(i) {
        var q = nt[i];
        if (q == null || !q.__ename__) {
            return null
        }
        return q
    };
    kX.createInstance = function(i, q) {
        var i1 = q.length;
        switch (i1) {
            case 0:
                return new i();
            case 1:
                return new i(q[0]);
            case 2:
                return new i(q[0], q[1]);
            case 3:
                return new i(q[0], q[1], q[2]);
            case 4:
                return new i(q[0], q[1], q[2], q[3]);
            case 5:
                return new i(q[0], q[1], q[2], q[3], q[4]);
            case 6:
                return new i(q[0], q[1], q[2], q[3], q[4], q[5]);
            case 7:
                return new i(q[0], q[1], q[2], q[3], q[4], q[5], q[6]);
            case 8:
                return new i(q[0], q[1], q[2], q[3], q[4], q[5], q[6], q[7]);
            default:
                throw new nM("Too many arguments")
        }
        return null
    };
    kX.createEmptyInstance = function(i) {
        function q() {}
        q.prototype = i.prototype;
        return new q()
    };
    kX.createEnum = function(i1, i, i2) {
        var q = ar.field(i1, i);
        if (q == null) {
            throw new nM("No such constructor " + i)
        }
        if (ar.isFunction(q)) {
            if (i2 == null) {
                throw new nM("Constructor " + i + " need parameters")
            }
            return ar.callMethod(i1, q, i2)
        }
        if (i2 != null && i2.length != 0) {
            throw new nM("Constructor " + i + " does not need parameters")
        }
        return q
    };
    kX.createEnumIndex = function(q, i, i1) {
        var i2 = q.__constructs__[i];
        if (i2 == null) {
            throw new nM(i + " is not a valid enum constructor index")
        }
        return kX.createEnum(q, i2, i1)
    };
    kX.getInstanceFields = function(i2) {
        var q = [];
        for (var i1 in i2.prototype) {
            q.push(i1)
        }
        cj.remove(q, "__class__");
        cj.remove(q, "__properties__");
        return q
    };
    kX.getClassFields = function(q) {
        var i = ar.fields(q);
        cj.remove(i, "__name__");
        cj.remove(i, "__interfaces__");
        cj.remove(i, "__properties__");
        cj.remove(i, "__super__");
        cj.remove(i, "__meta__");
        cj.remove(i, "prototype");
        return i
    };
    kX.getEnumConstructs = function(q) {
        var i = q.__constructs__;
        return i.slice()
    };
    kX["typeof"] = function(i) {
        var i1 = typeof(i);
        switch (i1) {
            case "boolean":
                return bu.TBool;
            case "string":
                return bu.TClass(String);
            case "number":
                if (Math.ceil(i) == i % 2147483648) {
                    return bu.TInt
                }
                return bu.TFloat;
            case "object":
                if (i == null) {
                    return bu.TNull
                }
                var q = i.__enum__;
                if (q != null) {
                    return bu.TEnum(q)
                }
                var i2 = n0.getClass(i);
                if (i2 != null) {
                    return bu.TClass(i2)
                }
                return bu.TObject;
            case "function":
                if (i.__name__ || i.__ename__) {
                    return bu.TObject
                }
                return bu.TFunction;
            case "undefined":
                return bu.TNull;
            default:
                return bu.TUnknown
        }
    };
    kX.enumEq = function(i1, q) {
        if (i1 == q) {
            return true
        }
        try {
            if (i1[0] != q[0]) {
                return false
            }
            var js = 2;
            var q0 = i1.length;
            while (js < q0) {
                var i2 = js++;
                if (!kX.enumEq(i1[i2], q[i2])) {
                    return false
                }
            }
            var qY = i1.__enum__;
            if (qY != q.__enum__ || qY == null) {
                return false
            }
        } catch (qZ) {
            lF.lastException = qZ;
            if (qZ instanceof nM) {
                qZ = qZ.val
            }
            return false
        }
        return true
    };
    kX.enumIndex = function(i) {
        return i[1]
    };
    var fq = {};
    nt["_UInt.UInt_Impl_"] = fq;
    fq.__name__ = ["_UInt", "UInt_Impl_"];
    fq.gt = function(i1, i) {
        var q = i1 < 0;
        var i2 = i < 0;
        if (q != i2) {
            return q
        } else {
            return i1 > i
        }
    };
    fq.toFloat = function(i) {
        var q = i;
        if (q < 0) {
            return 4294967296 + q
        } else {
            return q + 0
        }
    };
    var ky = function(i) {
        this.nodeType = i;
        this.children = [];
        this.attributeMap = new io()
    };
    nt.Xml = ky;
    ky.__name__ = ["Xml"];
    ky.parse = function(i) {
        return nx.parse(i)
    };
    ky.createElement = function(q) {
        var i = new ky(ky.Element);
        if (i.nodeType != ky.Element) {
            throw new nM("Bad node type, expected Element but found " + i.nodeType)
        }
        i.nodeName = q;
        return i
    };
    ky.createPCData = function(q) {
        var i = new ky(ky.PCData);
        if (i.nodeType == ky.Document || i.nodeType == ky.Element) {
            throw new nM("Bad node type, unexpected " + i.nodeType)
        }
        i.nodeValue = q;
        return i
    };
    ky.createCData = function(q) {
        var i = new ky(ky.CData);
        if (i.nodeType == ky.Document || i.nodeType == ky.Element) {
            throw new nM("Bad node type, unexpected " + i.nodeType)
        }
        i.nodeValue = q;
        return i
    };
    ky.createComment = function(q) {
        var i = new ky(ky.Comment);
        if (i.nodeType == ky.Document || i.nodeType == ky.Element) {
            throw new nM("Bad node type, unexpected " + i.nodeType)
        }
        i.nodeValue = q;
        return i
    };
    ky.createDocType = function(q) {
        var i = new ky(ky.DocType);
        if (i.nodeType == ky.Document || i.nodeType == ky.Element) {
            throw new nM("Bad node type, unexpected " + i.nodeType)
        }
        i.nodeValue = q;
        return i
    };
    ky.createProcessingInstruction = function(q) {
        var i = new ky(ky.ProcessingInstruction);
        if (i.nodeType == ky.Document || i.nodeType == ky.Element) {
            throw new nM("Bad node type, unexpected " + i.nodeType)
        }
        i.nodeValue = q;
        return i
    };
    ky.createDocument = function() {
        return new ky(ky.Document)
    };
    ky.prototype = {
        nodeType: null,
        nodeName: null,
        nodeValue: null,
        parent: null,
        children: null,
        attributeMap: null,
        get_nodeName: function() {
            if (this.nodeType != ky.Element) {
                throw new nM("Bad node type, expected Element but found " + this.nodeType)
            }
            return this.nodeName
        },
        get_nodeValue: function() {
            if (this.nodeType == ky.Document || this.nodeType == ky.Element) {
                throw new nM("Bad node type, unexpected " + this.nodeType)
            }
            return this.nodeValue
        },
        get: function(i) {
            if (this.nodeType != ky.Element) {
                throw new nM("Bad node type, expected Element but found " + this.nodeType)
            }
            return this.attributeMap.get(i)
        },
        set: function(i, q) {
            if (this.nodeType != ky.Element) {
                throw new nM("Bad node type, expected Element but found " + this.nodeType)
            }
            this.attributeMap.set(i, q)
        },
        exists: function(i) {
            if (this.nodeType != ky.Element) {
                throw new nM("Bad node type, expected Element but found " + this.nodeType)
            }
            return this.attributeMap.exists(i)
        },
        attributes: function() {
            if (this.nodeType != ky.Element) {
                throw new nM("Bad node type, expected Element but found " + this.nodeType)
            }
            return this.attributeMap.keys()
        },
        iterator: function() {
            if (this.nodeType != ky.Document && this.nodeType != ky.Element) {
                throw new nM("Bad node type, expected Element or Document but found " + this.nodeType)
            }
            return cj.iter(this.children)
        },
        elements: function() {
            if (this.nodeType != ky.Document && this.nodeType != ky.Element) {
                throw new nM("Bad node type, expected Element or Document but found " + this.nodeType)
            }
            var i;
            var i2 = [];
            var i1 = 0;
            var q = this.children;
            while (i1 < q.length) {
                var js = q[i1];
                ++i1;
                if (js.nodeType == ky.Element) {
                    i2.push(js)
                }
            }
            i = i2;
            return cj.iter(i)
        },
        elementsNamed: function(q) {
            if (this.nodeType != ky.Document && this.nodeType != ky.Element) {
                throw new nM("Bad node type, expected Element or Document but found " + this.nodeType)
            }
            var i;
            var js = [];
            var i2 = 0;
            var i1 = this.children;
            while (i2 < i1.length) {
                var qY = i1[i2];
                ++i2;
                if (qY.nodeType == ky.Element && (function(q0) {
                        var qZ;
                        if (qY.nodeType != ky.Element) {
                            throw new nM("Bad node type, expected Element but found " + qY.nodeType)
                        }
                        qZ = qY.nodeName;
                        return qZ
                    }(this)) == q) {
                    js.push(qY)
                }
            }
            i = js;
            return cj.iter(i)
        },
        firstElement: function() {
            if (this.nodeType != ky.Document && this.nodeType != ky.Element) {
                throw new nM("Bad node type, expected Element or Document but found " + this.nodeType)
            }
            var q = 0;
            var i = this.children;
            while (q < i.length) {
                var i1 = i[q];
                ++q;
                if (i1.nodeType == ky.Element) {
                    return i1
                }
            }
            return null
        },
        addChild: function(i) {
            if (this.nodeType != ky.Document && this.nodeType != ky.Element) {
                throw new nM("Bad node type, expected Element or Document but found " + this.nodeType)
            }
            if (i.parent != null) {
                i.parent.removeChild(i)
            }
            this.children.push(i);
            i.parent = this
        },
        removeChild: function(i) {
            if (this.nodeType != ky.Document && this.nodeType != ky.Element) {
                throw new nM("Bad node type, expected Element or Document but found " + this.nodeType)
            }
            if (cj.remove(this.children, i)) {
                i.parent = null;
                return true
            }
            return false
        },
        __class__: ky,
        __properties__: {
            get_nodeValue: "get_nodeValue",
            get_nodeName: "get_nodeName"
        }
    };
    var m0 = function() {};
    nt["agario.AgarioEvents"] = m0;
    m0.__name__ = ["agario", "AgarioEvents"];
    var c9 = function() {};
    nt["agario.atlas.MainShop"] = c9;
    c9.__name__ = ["agario", "atlas", "MainShop"];
    var kM = function() {};
    nt["agario.atlas.Menuscommonui"] = kM;
    kM.__name__ = ["agario", "atlas", "Menuscommonui"];
    var pJ = function() {};
    nt["agario.atlas.Menusshopui"] = pJ;
    pJ.__name__ = ["agario", "atlas", "Menusshopui"];
    var jQ = function() {};
    nt["oaktree.ext.commands.ICommand"] = jQ;
    jQ.__name__ = ["oaktree", "ext", "commands", "ICommand"];
    jQ.prototype = {
        execute: null,
        __class__: jQ
    };
    var bQ = function() {};
    nt["agario.commands.DebugCommand"] = bQ;
    bQ.__name__ = ["agario", "commands", "DebugCommand"];
    bQ.__interfaces__ = [jQ];
    bQ.prototype = {
        execute: function(i) {},
        __class__: bQ
    };
    var bj = function() {};
    nt["agario.commands.OpenLoginElsewhereDialogCommand"] = bj;
    bj.__name__ = ["agario", "commands", "OpenLoginElsewhereDialogCommand"];
    bj.__interfaces__ = [jQ];
    bj.prototype = {
        execute: function(i) {
            nK.services.gameui.doLogout();
            nK.get_events().fire(m0.OPEN_VIEW, {
                view: bk
            })
        },
        __class__: bj
    };
    var kc = function() {};
    nt["agario.commands.OpenViewCommand"] = kc;
    kc.__name__ = ["agario", "commands", "OpenViewCommand"];
    kc.__interfaces__ = [jQ];
    kc.prototype = {
        className: null,
        execute: function(qZ) {
            var i1;
            if (n0.__instanceof(qZ.data, hC)) {
                i1 = qZ.data;
                if (i1 == null) {
                    return
                }
            } else {
                var qY = qZ.data;
                var js = qY.view;
                var i2 = qY.args;
                if (i2 == null) {
                    i2 = []
                }
                var i = typeof(js) == "string";
                if (i) {
                    this.className = js;
                    var q = this.resolveClassName(this.className);
                    if (q == null) {
                        return
                    }
                    i1 = kX.createInstance(q, i2)
                } else {
                    i1 = kX.createInstance(js, i2)
                }
            }
            nK.services.gameui.showContainer();
            nK.views.openView(i1, {
                priority: 1,
                animate: true,
                allowClickClose: false
            })
        },
        resolveClassName: function(i1) {
            var i = kX.resolveClass(i1);
            if (i == null) {
                var js = 0;
                var i2 = kc.lookupPackages;
                while (js < i2.length) {
                    var q = i2[js];
                    ++js;
                    i = kX.resolveClass("" + q + "." + i1);
                    if (i != null) {
                        break
                    }
                }
            }
            return i
        },
        __class__: kc
    };
    var hy = function() {};
    nt["agario.config.Assets"] = hy;
    hy.__name__ = ["agario", "config", "Assets"];
    var pD = function() {};
    nt["agario.config.EchoCommand"] = pD;
    pD.__name__ = ["agario", "config", "EchoCommand"];
    pD.__interfaces__ = [jQ];
    pD.prototype = {
        execute: function(i) {
            eM.trace(i.data, {
                fileName: "CommandMap.hx",
                lineNumber: 31,
                className: "agario.config.EchoCommand",
                methodName: "execute"
            })
        },
        __class__: pD
    };
    var nP = function(i, i1, q) {
        if (q == null) {
            q = false
        }
        this.event = i;
        this.command = i1;
        this.oneTime = q
    };
    nt["oaktree.ext.commands.Command"] = nP;
    nP.__name__ = ["oaktree", "ext", "commands", "Command"];
    nP.prototype = {
        event: null,
        command: null,
        oneTime: null,
        __class__: nP
    };
    var gC = function() {};
    nt["oaktree.core.IEntityContainer"] = gC;
    gC.__name__ = ["oaktree", "core", "IEntityContainer"];
    gC.prototype = {
        removeEntity: null,
        addEntity: null,
        __class__: gC
    };
    var fw = function() {};
    nt["oaktree.core.IEntity"] = fw;
    fw.__name__ = ["oaktree", "core", "IEntity"];
    fw.prototype = {
        getId: null,
        onAddedToScene: null,
        onRemovedFromScene: null,
        addComponent: null,
        removeComponent: null,
        removeAllComponents: null,
        update: null,
        dispose: null,
        __class__: fw
    };
    var oK = function(i) {
        if (i == null) {
            i = false
        }
        cY.call(this);
        this._entity = new oa(i)
    };
    nt["oaktree.core.VisualEntity"] = oK;
    oK.__name__ = ["oaktree", "core", "VisualEntity"];
    oK.__interfaces__ = [gC, fw];
    oK.__super__ = cY;
    oK.prototype = lP(cY.prototype, {
        _entity: null,
        getId: function() {
            return this._entity.getId()
        },
        onAddedToScene: function(i) {
            this._entity.onAddedToScene(i)
        },
        onRemovedFromScene: function() {
            this._entity.onRemovedFromScene()
        },
        addComponent: function(i) {
            return this._entity.addComponent(i)
        },
        removeComponent: function(i) {
            return this._entity.removeComponent(i)
        },
        removeAllComponents: function() {
            this._entity.removeAllComponents()
        },
        addEntity: function(i) {
            return this._entity.addEntity(i)
        },
        removeEntity: function(i) {
            return this._entity.removeEntity(i)
        },
        update: function(i) {
            this._entity.update(i)
        },
        dispose: function() {
            this._entity.dispose()
        },
        get_standalone: function() {
            return this._entity.standalone
        },
        set_standalone: function(i) {
            return this._entity.set_standalone(i)
        },
        __class__: oK,
        __properties__: lP(cY.prototype.__properties__, {
            set_standalone: "set_standalone",
            get_standalone: "get_standalone"
        })
    });
    var aY = function() {};
    nt["oaktree.core.scene.IScene"] = aY;
    aY.__name__ = ["oaktree", "core", "scene", "IScene"];
    aY.prototype = {
        update: null,
        lateUpdate: null,
        dispose: null,
        onAdded: null,
        onRemoved: null,
        __class__: aY
    };
    var gm = function() {
        oK.call(this);
        this._entity.scene = this
    };
    nt["oaktree.core.scene.Scene"] = gm;
    gm.__name__ = ["oaktree", "core", "scene", "Scene"];
    gm.__interfaces__ = [aY];
    gm.__super__ = oK;
    gm.prototype = lP(oK.prototype, {
        dispose: function() {
            oK.prototype.dispose.call(this)
        },
        update: function(i) {
            oK.prototype.update.call(this, i)
        },
        lateUpdate: function() {},
        onAdded: function() {},
        onRemoved: function() {
            this.dispose()
        },
        __class__: gm
    });
    var hC = function() {
        this.debugui = false;
        this.allowDisableClose = true;
        this.isLoading = false;
        this.maxHeight = 0;
        this.maxWidth = 0;
        this._initialized = false;
        gm.call(this);
        this.addEventListener("addedToStage", oT(this, this.onAddedToStage))
    };
    nt["oaktree.ext.ui.View"] = hC;
    hC.__name__ = ["oaktree", "ext", "ui", "View"];
    hC.__super__ = gm;
    hC.prototype = lP(gm.prototype, {
        _initialized: null,
        caller: null,
        maxWidth: null,
        maxHeight: null,
        isLoading: null,
        allowDisableClose: null,
        debugui: null,
        disable: function() {},
        enable: function() {},
        resize: function(i, q) {},
        open: function(i) {
            if (i == null) {
                i = false
            }
        },
        close: function(i) {
            if (i == null) {
                i = false
            }
        },
        removeFromParent: function() {
            this.parent.removeChild(this)
        },
        updateView: function() {},
        onAddedToStage: function(i) {
            this.removeEventListener("addedToStage", oT(this, this.onAddedToStage));
            this.addEventListener("removedFromStage", oT(this, this.onRemovedFromStage));
            if (!this._initialized) {
                this.initialize();
                this._initialized = true;
                this.postInit()
            }
        },
        onRemovedFromStage: function(i) {
            this.removeEventListener("removedFromStage", oT(this, this.onRemovedFromStage));
            this.addEventListener("addedToStage", oT(this, this.onAddedToStage));
            this.deinitialize()
        },
        initialize: function() {
            if (this.debugui) {
                this.get_graphics().beginFill(16711680, 0.5);
                this.get_graphics().drawRect(0, 0, this.maxWidth, this.maxHeight);
                this.get_graphics().endFill()
            }
        },
        postInit: function() {},
        deinitialize: function() {},
        dispose: function() {
            this.removeEventListener("removedFromStage", oT(this, this.onRemovedFromStage));
            this.removeEventListener("addedToStage", oT(this, this.onAddedToStage))
        },
        __class__: hC
    });
    var ol = function(i) {
        this.openAsapAnimateParam = false;
        this.openAsap = false;
        this.closeAnimationDuration = 1;
        this.animateOnClose = true;
        this.openAnimationDuration = 1;
        this.animateOnOpen = true;
        this.parentAnchorY = 0.5;
        this.parentAnchorX = 0.5;
        this.anchorY = 0.5;
        this.anchorX = 0.5;
        this.animate = false;
        this.closeOnEscape = false;
        hC.call(this);
        this._viewState = i;
        this.onClose = new qv();
        this.onLateClose = new qv();
        this.closeButton = new fI()
    };
    nt["oaktree.ext.ui.views.GenericDialog"] = ol;
    ol.__name__ = ["oaktree", "ext", "ui", "views", "GenericDialog"];
    ol.__super__ = hC;
    ol.prototype = lP(hC.prototype, {
        closeOnEscape: null,
        animate: null,
        anchorX: null,
        anchorY: null,
        parentAnchorX: null,
        parentAnchorY: null,
        onClose: null,
        onLateClose: null,
        animateOnOpen: null,
        openAnimationDuration: null,
        animateOnClose: null,
        closeAnimationDuration: null,
        disableShape: null,
        container: null,
        background: null,
        closeButton: null,
        loadingLabel: null,
        openAsap: null,
        openAsapAnimateParam: null,
        _viewState: null,
        initialize: function() {
            this.container = new cY();
            this.resizeBackground(this.maxWidth, this.maxHeight);
            this.container.addChild(this.background);
            this.container.addChild(this.closeButton);
            this.closeButton.addEventListener("click", oT(this, this.onCloseButtonClick));
            this.container.set_visible(false);
            hC.prototype.addChild.call(this, this.container);
            this.disableShape = new cY();
            this.disableShape.addEventListener("click", oT(this, this.onDisableClick));
            this.disableShape.set_visible(false);
            hC.prototype.addChild.call(this, this.disableShape);
            this.updateBaseUI();
            if (this.openAsap) {
                this.open(this.openAsapAnimateParam)
            }
            ns.current.stage.addEventListener("keyDown", oT(this, this.onKeyDown))
        },
        onKeyDown: function(q) {
            if (q.keyCode == 27) {
                var i = this.onEscapePress();
                if (!i && this.closeOnEscape && this.isTopState()) {
                    this.close()
                }
            }
        },
        isTopState: function() {
            return this._viewState == "" || px.engine.states.isTopState(this._viewState)
        },
        onEscapePress: function() {
            return false
        },
        updateBaseUI: function() {
            if (this.closeButton != null) {
                this.closeButton.set_x(this.maxWidth - this.closeButton.get_width() - 8);
                this.closeButton.set_y(8)
            }
            if (this.disableShape != null) {
                this.disableShape.get_graphics().clear();
                this.disableShape.get_graphics().beginFill(0, 0.4);
                this.disableShape.get_graphics().drawRoundRect(0, 0, this.maxWidth, this.maxHeight, 20, 20);
                this.disableShape.get_graphics().endFill()
            }
        },
        resizeBackground: function(i, q, i1, js) {
            if (i1 == null) {
                i1 = false
            }
            var i2 = this;
            if (this.background == null) {
                this.background = new cY()
            }
            if (i1) {
                d3.update(oT(this, this.resizeLoop), 0.5, [this.get_width(), this.get_height()], [i, q]).onComplete(function() {
                    i2.maxWidth = i;
                    i2.maxHeight = q;
                    i2.updateBaseUI();
                    if (js != null) {
                        js()
                    }
                })
            } else {
                this.maxWidth = i;
                this.maxHeight = q;
                this.background.get_graphics().clear();
                this.background.get_graphics().beginFill(16777215, 1);
                this.background.get_graphics().drawRoundRect(0, 0, i, q, 20, 20);
                this.background.get_graphics().endFill();
                this.updateBaseUI();
                this.resize(px.stage.stageWidth, px.stage.stageHeight);
                if (js != null) {
                    js()
                }
            }
        },
        resizeLoop: function(i, q) {
            if (this.background == null) {
                this.background = new cY()
            }
            this.background.get_graphics().clear();
            this.background.get_graphics().beginFill(16777215, 1);
            this.background.get_graphics().drawRoundRect(0, 0, i, q, 20, 20);
            this.background.get_graphics().endFill();
            this.maxWidth = this.background.get_width();
            this.maxHeight = this.background.get_height();
            this.resize(px.stage.stageWidth, px.stage.stageHeight)
        },
        dispose: function() {
            ns.current.stage.removeEventListener("keyDown", oT(this, this.onKeyDown));
            this.onClose.removeAll();
            this.onLateClose.removeAll();
            if (this.disableShape != null) {
                this.disableShape.removeEventListener("click", oT(this, this.onDisableClick))
            }
            if (this.closeButton != null) {
                this.closeButton.removeEventListener("click", oT(this, this.onCloseButtonClick));
                this.closeButton.dispose()
            }
            hC.prototype.dispose.call(this)
        },
        enable: function() {
            this.disableShape.set_visible(false);
            hC.prototype.enable.call(this)
        },
        disable: function() {
            this.addChild(this.closeButton);
            this.disableShape.set_visible(true);
            hC.prototype.disable.call(this)
        },
        onDisableClick: function(i) {
            if (this.allowDisableClose) {
                px.events.dispatchEventWith("ShopEvent::DISABLE_CLOSED");
                this.enable()
            }
        },
        open: function(i) {
            if (i == null) {
                i = false
            }
            ns.current.stage.set_focus(ns.current.stage);
            if (this.container == null) {
                this.openAsap = true;
                this.openAsapAnimateParam = i;
                return
            }
            if (i || this.animateOnOpen) {
                this.container.set_y(-this.container.get_height());
                this.container.set_visible(true);
                this.container.set_alpha(0);
                d3.tween(this.container, this.openAnimationDuration, {
                    y: 0,
                    alpha: 1
                }).onComplete(oT(this, this.dialogReady));
                this.set_visible(true)
            } else {
                this.container.set_visible(true);
                this.dialogReady()
            }
            this.onShow();
            hC.prototype.open.call(this)
        },
        dialogReady: function() {},
        onShow: function() {
            if (this._viewState != null) {
                px.engine.states.enable(this._viewState)
            }
        },
        onHide: function() {
            if (this._viewState != null) {
                px.engine.states.disable(this._viewState)
            }
        },
        close: function(i) {
            if (i == null) {
                i = false
            }
            hC.prototype.close.call(this);
            this.onHide();
            if (this.container != null && (i || this.animateOnOpen)) {
                d3.tween(this.container, this.closeAnimationDuration, {
                    y: -this.container.get_height(),
                    alpha: 0
                }).onComplete(oT(this, this.postClose))
            } else {
                this.postClose()
            }
        },
        postClose: function() {
            this.deinitialize();
            this.onClose.dispatch();
            this.dispatchEvent(new oy(ol.CLOSE, this));
            this.onLateClose.dispatch();
            this.dispose();
            px.get_scenes().remove(this)
        },
        onCloseButtonClick: function(i) {
            this.close();
            ns.current.stage.set_focus(ns.current.stage)
        },
        removeChild: function(i) {
            if (this.container.contains(i)) {
                return this.container.removeChild(i)
            }
            return hC.prototype.removeChild.call(this, i)
        },
        contains: function(i) {
            if (this.container != null && this.container.contains(i)) {
                return true
            }
            return hC.prototype.contains.call(this, i)
        },
        addChild: function(i) {
            if (n0.__instanceof(i, fw)) {
                this.addEntity(i)
            }
            return this.container.addChild(i)
        },
        setChildIndex: function(q, i) {
            this.container.setChildIndex(q, i);
            return
        },
        showLoading: function(i) {
            if (i == null) {
                i = "Loading..."
            }
            if (this.loadingLabel == null) {
                this.loadingLabel = new m1({
                    text: i,
                    fontSize: 28,
                    bold: true
                });
                this.loadingLabel.set_x((this.maxWidth - this.loadingLabel.get_width()) / 2);
                this.loadingLabel.set_y((this.maxHeight - this.loadingLabel.get_height()) / 2);
                this.loadingLabel.set_alpha(0)
            }
            this.loadingLabel.set_visible(true);
            this.addChild(this.loadingLabel);
            d3.tween(this.loadingLabel, 0.5, {
                alpha: 1
            });
            this.closeButton.set_visible(false)
        },
        hideLoading: function() {
            var i = this;
            if (this.loadingLabel != null && this.loadingLabel.parent != null) {
                d3.tween(this.loadingLabel, 0.5, {
                    alpha: 0
                }, true).onComplete(function() {
                    i.removeChild(i.loadingLabel)
                })
            }
            if (this.closeButton != null && this.container != null) {
                this.closeButton.set_visible(true);
                this.setChildIndex(this.closeButton, this.get_numChildren())
            }
        },
        resize: function(i, q) {
            this.set_x(i * this.parentAnchorX - this.maxWidth * this.anchorX);
            this.set_y(q * this.parentAnchorY - this.maxHeight * this.anchorY)
        },
        __class__: ol
    });
    var bk = function() {
        ol.call(this, "loginElsewhereDialog");
        this.maxWidth = 420;
        this.maxHeight = 400
    };
    nt["agario.views.LoginElsewhereDialog"] = bk;
    bk.__name__ = ["agario", "views", "LoginElsewhereDialog"];
    bk.__super__ = ol;
    bk.prototype = lP(ol.prototype, {
        disconnectDialog: null,
        okButton: null,
        titleLabel: null,
        textLabel: null,
        icon: null,
        _container: null,
        initialize: function() {
            ol.prototype.initialize.call(this);
            this._container = new cY();
            this.addChild(this._container);
            nK.get_events().addEventListener("ShopEvent::connectionLost", oT(this, this.onConnectionLost));
            this.buildUI()
        },
        buildUI: function() {
            var i = this;
            this._container.get_graphics().beginFill(16119285, 1);
            this._container.get_graphics().drawRect(25, 80, this.maxWidth - 50, this.maxHeight - 160);
            this._container.get_graphics().endFill();
            this.titleLabel = new m1({
                text: dk.text("web_menu_login_elsewhere_header"),
                fontSize: 30,
                color: 3421236,
                width: this.maxWidth - 20,
                autoSize: 1,
                align: 0
            });
            this.titleLabel.set_height(this.titleLabel.get_textHeight());
            this.titleLabel.set_x((this.maxWidth - this.titleLabel.get_width()) * 0.5);
            this.titleLabel.set_y(20);
            this.titleLabel.set_selectable(false);
            this._container.addChild(this.titleLabel);
            this.textLabel = new m1({
                text: dk.text("web_menu_login_elsewhere_footer"),
                fontSize: 17,
                color: 3421236,
                width: this.maxWidth - 100,
                autoSize: 0,
                align: 0,
                multiline: true
            });
            this.textLabel.set_height(this.textLabel.get_textHeight() + 5);
            this.textLabel.set_x((this.maxWidth - this.textLabel.get_width()) * 0.5);
            this.textLabel.set_y(250);
            this.textLabel.set_selectable(false);
            this._container.addChild(this.textLabel);
            this.okButton = new hv({
                labelUp: {
                    text: dk.text("menu_login_elsewhere_button"),
                    color: 16777215,
                    fontSize: 15
                },
                width: 130,
                height: 35,
                colorUp: 5880408,
                colorOver: 4496708
            });
            this.okButton.set_x((this.maxWidth - this.okButton.get_width()) * 0.5);
            this.okButton.set_y(this.maxHeight - 20 - this.okButton.get_height());
            this.okButton.addEventListener("click", oT(this, this.onCloseButtonClick));
            this._container.addChild(this.okButton);
            this.icon = new el(nK.get_assets().getTexture("alert_icon", "main_shop").get_bitmapData());
            this.icon.set_x((this.maxWidth - this.icon.get_width()) * 0.5);
            this.icon.set_y(110);
            this._container.addChild(this.icon);
            nK.get_events().addEventListener("ShopEvent::ENABLE_SHOP", oT(this, this.enableDialog));
            nK.get_events().addEventListener("ShopEvent::DISABLE_SHOP", oT(this, this.disableDialog));
            nK.get_events().addEventListener("shop_event::allow_disable_close", oT(this, this.handleAllowDisableCloseEvent));
            this.addEventListener("close", function(q) {
                nK.get_events().dispatchEventWith("ShopEvent::SHOP_ENABLED");
                i.enable();
                i.closeButton.set_enabled(true)
            }, false, 0, true)
        },
        onConnectionLost: function(i) {
            nK.views.closeAllViews(qm);
            this.disable();
            this.disconnectDialog = new oo();
            nK.views.openView(this.disconnectDialog, {
                priority: 5,
                animate: true,
                allowClickClose: false,
                callerView: this
            });
            nK.get_events().removeEventListener("ShopEvent::connectionLost", oT(this, this.onConnectionLost));
            this.disconnectDialog.addEventListener("close", oT(this, this.closeDisconnect))
        },
        closeDisconnect: function(i) {
            nK.views.closeTopView()
        },
        enableDialog: function(i) {
            this.enable()
        },
        enable: function() {
            ol.prototype.enable.call(this);
            this.closeButton.set_enabled(true)
        },
        disableDialog: function(i) {
            this.closeButton.set_enabled(false);
            this.disable()
        },
        handleAllowDisableCloseEvent: function(q) {
            var i = q.data;
            this.allowDisableClose = i
        },
        onCloseHandler: function() {
            this.enableDialog()
        },
        dispose: function() {
            this.destroy();
            nK.get_events().removeEventListener("ShopEvent::connectionLost", oT(this, this.onConnectionLost));
            ol.prototype.dispose.call(this)
        },
        destroy: function() {
            var i = nK.services.shop;
            nK.get_events().removeEventListener("ShopEvent::ENABLE_SHOP", oT(this, this.enableDialog));
            nK.get_events().removeEventListener("ShopEvent::DISABLE_SHOP", oT(this, this.disableDialog));
            nK.get_events().removeEventListener("ShopEvent::connectionLost", oT(this, this.onConnectionLost));
            if (this.disconnectDialog != null) {
                this.disconnectDialog.removeEventListener("close", oT(this, this.closeDisconnect))
            }
            this.okButton.removeEventListener("click", oT(this, this.onCloseButtonClick))
        },
        __class__: bk
    });
    var ag = function() {};
    nt["agario.config.CommandMap"] = ag;
    ag.__name__ = ["agario", "config", "CommandMap"];
    var d5 = function() {};
    nt["agario.config.Configs"] = d5;
    d5.__name__ = ["agario", "config", "Configs"];
    d5.setProperty = function(q, i) {
        d5.properties.set(q, i)
    };
    d5.getProperty = function(i) {
        if (d5.properties.exists(i)) {
            return d5.properties.get(i)
        }
        return d5.NOT_FOUND
    };
    var ob = function() {};
    nt["agario.config.GameStates"] = ob;
    ob.__name__ = ["agario", "config", "GameStates"];
    var kh = function() {};
    nt["agario.config.Services"] = kh;
    kh.__name__ = ["agario", "config", "Services"];
    kh.getModelList = function() {
        var i = [new ab(kd), new ab(hk, {}), new ab(cl, {
            maxReconnect: 5,
            retryTimeout: 5000
        }), new ab(fR), new ab(f4), new ab(o7), new ab(qz), new ab(qe), new ab(jP), new ab(lg), new ab(g8), new ab(oD), new ab(fJ)];
        if (nK.environment.platform == bb.Facebook) {
            i.push(new ab(fE, {
                endpoint: d5.getProperty("fb_endpoint")
            }))
        } else {
            i.push(new ab(ec, {
                endpoint: d5.getProperty("xsolla_endpoint")
            }))
        }
        return i
    };
    var h7 = function(i1, q, i2, i) {
        if (i == null) {
            i = 1
        }
        if (i2 == null) {
            i2 = 0
        }
        if (q == null) {
            q = 0
        }
        if (i1 == null) {
            i1 = 0
        }
        this.set(i1, q, i2, i)
    };
    nt["agario.display.Color"] = h7;
    h7.__name__ = ["agario", "display", "Color"];
    h7.prototype = {
        r: null,
        g: null,
        b: null,
        a: null,
        set: function(i1, q, i2, i) {
            if (i == null) {
                i = 1
            }
            if (i2 == null) {
                i2 = 0
            }
            if (q == null) {
                q = 0
            }
            if (i1 == null) {
                i1 = 0
            }
            this.r = i1;
            this.g = q;
            this.b = i2;
            this.a = i;
            return this
        },
        rgb: function(i) {
            if (i == null) {
                i = 16777215
            }
            this.from_int(i);
            return this
        },
        clone: function() {
            return new h7(this.r, this.g, this.b, this.a)
        },
        from_int: function(i) {
            this.r = i >> 16;
            this.g = i >> 8 & 255;
            this.b = i & 255
        },
        __class__: h7
    };
    var jS = function(i) {
        this.anchorY = 0.5;
        this.anchorX = 0.5;
        oK.call(this);
        this.content = i;
        this.addChild(this.content);
        this._update()
    };
    nt["agario.display.ImageNode"] = jS;
    jS.__name__ = ["agario", "display", "ImageNode"];
    jS.__super__ = oK;
    jS.prototype = lP(oK.prototype, {
        userData: null,
        anchorX: null,
        anchorY: null,
        originX: null,
        originY: null,
        content: null,
        _update: function() {
            this.content.set_x(-this.anchorX * this.get_width());
            this.content.set_y(-this.anchorY * this.get_height())
        },
        setAnchorPoint: function(i) {
            this.anchorX = i.x;
            this.anchorY = i.y;
            this._update()
        },
        setPosition: function(i) {
            this.set_x(i.x);
            this.set_y(i.y);
            this._update()
        },
        getScale: function() {
            return this.content.get_scaleX()
        },
        setScale: function(i) {
            this.content.set_scaleX(i);
            this.content.set_scaleY(i);
            this._update()
        },
        setColor: function(i) {
            eM.trace("ImageNode.setColor isn't implemented", {
                fileName: "ImageNode.hx",
                lineNumber: 89,
                className: "agario.display.ImageNode",
                methodName: "setColor"
            })
        },
        get_width: function() {
            return this.content.get_width()
        },
        get_height: function() {
            return this.content.get_height()
        },
        get_originX: function() {
            return this.get_width() * this.anchorX
        },
        get_originY: function() {
            return this.get_height() * this.anchorY
        },
        __class__: jS,
        __properties__: lP(oK.prototype.__properties__, {
            get_originY: "get_originY",
            get_originX: "get_originX"
        })
    });
    var aj = function(i) {
        this._label = new af(i);
        jS.call(this, this._label)
    };
    nt["agario.display.LabelNode"] = aj;
    aj.__name__ = ["agario", "display", "LabelNode"];
    aj.__super__ = jS;
    aj.prototype = lP(jS.prototype, {
        _label: null,
        label: null,
        get_label: function() {
            return this._label
        },
        initialize: function(i) {
            this._label.initialize(i)
        },
        setText: function(q, i) {
            if (i == null) {
                i = false
            }
            this._label.setText(q, i);
            return this._label.get_text()
        },
        setOutline: function(i, q) {
            this._label.setOutline(i, q)
        },
        _update: function() {
            this.content.set_x(-this.anchorX * this._label.get_width());
            this.content.set_y(-this.anchorY * this._label.get_textHeight())
        },
        __class__: aj,
        __properties__: lP(jS.prototype.__properties__, {
            get_label: "get_label"
        })
    });
    var dV = function(i) {
        this.childrenList = [];
        if (i == null) {
            i = new cY();
            i.set_name("spritenode_root")
        }
        jS.call(this, i)
    };
    nt["agario.display.SpriteNode"] = dV;
    dV.__name__ = ["agario", "display", "SpriteNode"];
    dV.__super__ = jS;
    dV.prototype = lP(jS.prototype, {
        childrenList: null,
        numNodes: null,
        get_numNodes: function() {
            return (n0.__cast(this.content, bG)).get_numChildren()
        },
        getNodeAt: function(i) {
            return (n0.__cast(this.content, bG)).getChildAt(i)
        },
        setNodeIndex: function(q, i) {
            (n0.__cast(this.content, bG)).setChildIndex(q, i)
        },
        addNode: function(i) {
            return (n0.__cast(this.content, bG)).addChild(i)
        },
        addNodeAt: function(i1, i, q) {
            if (q == null) {
                q = 0
            }
            this.childrenList.push({
                child: n0.__cast(i1, jS),
                order: q,
                insertOrder: i
            });
            this.addNode(i1);
            this.sortChildren();
            return i1
        },
        removeNode: function(i) {
            return (n0.__cast(this.content, bG)).addChild(i)
        },
        sortChildren: function() {
            this.childrenList.sort(function(qY, i) {
                var qZ = 0;
                if (qY.order == i.order) {
                    qZ = qY.insertOrder - i.insertOrder
                }
                qZ += (qY.order - i.order) * 1000;
                return qZ
            });
            var i2 = 0;
            var js = this.childrenList.length;
            while (i2 < js) {
                var q = i2++;
                var i1 = this.childrenList[q];
                this.setNodeIndex(i1.child, this.get_numNodes() - 1)
            }
        },
        __class__: dV,
        __properties__: lP(jS.prototype.__properties__, {
            get_numNodes: "get_numNodes"
        })
    });
    var mx = function() {
        ey.call(this);
        this.__caretIndex = -1;
        this.__graphics = new e3();
        this.__textEngine = new oO(this);
        this.__layoutDirty = true;
        this.__tabEnabled = true;
        if (mx.__defaultTextFormat == null) {
            mx.__defaultTextFormat = new mC("Times New Roman", 12, 0, false, false, false, "", "", 3, 0, 0, 0, 0);
            mx.__defaultTextFormat.blockIndent = 0;
            mx.__defaultTextFormat.bullet = false;
            mx.__defaultTextFormat.letterSpacing = 0;
            mx.__defaultTextFormat.kerning = false
        }
        this.__textFormat = mx.__defaultTextFormat.clone();
        this.__textEngine.textFormatRanges.push(new lm(this.__textFormat, 0, 0));
        this.addEventListener("mouseDown", oT(this, this.this_onMouseDown))
    };
    nt["openfl.text.TextField"] = mx;
    mx.__name__ = ["openfl", "text", "TextField"];
    mx.__defaultTextFormat = null;
    mx.__super__ = ey;
    mx.prototype = lP(ey.prototype, {
        bottomScrollV: null,
        caretIndex: null,
        length: null,
        maxScrollH: null,
        maxScrollV: null,
        numLines: null,
        selectionBeginIndex: null,
        selectionEndIndex: null,
        textHeight: null,
        textWidth: null,
        __bounds: null,
        __caretIndex: null,
        __cursorTimer: null,
        __dirty: null,
        __inputEnabled: null,
        __isHTML: null,
        __layoutDirty: null,
        __selectionIndex: null,
        __showCursor: null,
        __textEngine: null,
        __textFormat: null,
        __div: null,
        appendText: function(i) {
            this.__textEngine.text += i;
            this.__textEngine.textFormatRanges[this.__textEngine.textFormatRanges.length - 1].end = this.__textEngine.text.length;
            this.__dirty = true;
            this.__layoutDirty = true
        },
        getCharBoundaries: function(q1) {
            if (q1 < 0 || q1 > this.__textEngine.text.length - 1) {
                return null
            }
            this.__updateLayout();
            var q0 = 0;
            var qY = this.__textEngine.layoutGroups;
            while (q0 < qY.length) {
                var qZ = qY[q0];
                ++q0;
                if (q1 >= qZ.startIndex && q1 <= qZ.endIndex) {
                    var q = qZ.offsetX;
                    var i2 = 0;
                    var js = q1 - qZ.startIndex;
                    while (i2 < js) {
                        var i1 = i2++;
                        q += qZ.advances[i1]
                    }
                    return new gn(q, qZ.offsetY, qZ.advances[q1 - qZ.startIndex], qZ.ascent + qZ.descent)
                }
            }
            return null
        },
        getCharIndexAtPoint: function(q4, q3) {
            if (q4 <= 2 || q4 > this.get_width() + 4 || q3 <= 0 || q3 > this.get_height() + 4) {
                return -1
            }
            this.__updateLayout();
            q4 += this.get_scrollH();
            var q2 = 0;
            var qZ = this.get_scrollV() - 1;
            while (q2 < qZ) {
                var js = q2++;
                q3 += this.__textEngine.lineHeights[js]
            }
            var q1 = 0;
            var qY = this.__textEngine.layoutGroups;
            while (q1 < qY.length) {
                var q6 = qY[q1];
                ++q1;
                if (q3 >= q6.offsetY && q3 <= q6.offsetY + q6.height) {
                    if (q4 >= q6.offsetX && q4 <= q6.offsetX + q6.width) {
                        var q5 = 0;
                        var q0 = 0;
                        var q = q6.advances.length;
                        while (q0 < q) {
                            var i2 = q0++;
                            q5 += q6.advances[i2];
                            if (q4 <= q6.offsetX + q5) {
                                return q6.startIndex + i2
                            }
                        }
                        return q6.endIndex
                    }
                }
            }
            return -1
        },
        getFirstCharInParagraph: function(i1) {
            if (i1 < 0 || i1 > this.__textEngine.text.length - 1) {
                return 0
            }
            var i = this.__textEngine.text.indexOf("\n");
            var q = 0;
            while (i > -1) {
                if (i <= i1) {
                    q = i + 1
                } else {
                    if (i > i1) {
                        break
                    }
                }
                i = this.__textEngine.text.indexOf("\n", i + 1)
            }
            return q
        },
        getLineIndexAtPoint: function(i1, q1) {
            this.__updateLayout();
            if (i1 <= 2 || i1 > this.get_width() + 4 || q1 <= 0 || q1 > this.get_height() + 4) {
                return -1
            }
            var qY = 0;
            var q0 = this.get_scrollV() - 1;
            while (qY < q0) {
                var i2 = qY++;
                q1 += this.__textEngine.lineHeights[i2]
            }
            var js = 0;
            var q = this.__textEngine.layoutGroups;
            while (js < q.length) {
                var qZ = q[js];
                ++js;
                if (q1 >= qZ.offsetY && q1 <= qZ.offsetY + qZ.height) {
                    return qZ.lineIndex
                }
            }
            return -1
        },
        getLineIndexOfChar: function(i2) {
            if (i2 < 0 || i2 > this.__textEngine.text.length - 1) {
                return -1
            }
            this.__updateLayout();
            var i1 = 0;
            var i = this.__textEngine.layoutGroups;
            while (i1 < i.length) {
                var q = i[i1];
                ++i1;
                if (q.startIndex <= i2 && q.endIndex >= i2) {
                    return q.lineIndex
                }
            }
            return -1
        },
        getLineLength: function(qY) {
            this.__updateLayout();
            if (qY < 0 || qY > this.__textEngine.numLines - 1) {
                return 0
            }
            var js = -1;
            var q = -1;
            var i2 = 0;
            var i = this.__textEngine.layoutGroups;
            while (i2 < i.length) {
                var i1 = i[i2];
                ++i2;
                if (i1.lineIndex == qY) {
                    if (js == -1) {
                        js = i1.startIndex
                    }
                } else {
                    if (i1.lineIndex == qY + 1) {
                        q = i1.startIndex;
                        break
                    }
                }
            }
            if (q == -1) {
                q = this.__textEngine.text.length
            }
            return q - js
        },
        getLineMetrics: function(q0) {
            this.__updateLayout();
            var q = this.__textEngine.lineAscents[q0];
            var js = this.__textEngine.lineDescents[q0];
            var qZ = this.__textEngine.lineLeadings[q0];
            var i1 = this.__textEngine.lineHeights[q0];
            var i = this.__textEngine.lineWidths[q0];
            var i2;
            var qY = this.__textFormat.align;
            switch (qY) {
                case 3:
                case 2:
                case 5:
                    i2 = 2;
                    break;
                case 4:
                case 1:
                    i2 = this.__textEngine.width - i - 2;
                    break;
                case 0:
                    i2 = (this.__textEngine.width - i) / 2;
                    break
            }
            return new J(i2, i, i1, q, js, qZ)
        },
        getLineOffset: function(i2) {
            this.__updateLayout();
            if (i2 < 0 || i2 > this.__textEngine.numLines - 1) {
                return -1
            }
            var i1 = 0;
            var i = this.__textEngine.layoutGroups;
            while (i1 < i.length) {
                var q = i[i1];
                ++i1;
                if (q.lineIndex == i2) {
                    return q.startIndex
                }
            }
            return 0
        },
        getLineText: function(qY) {
            this.__updateLayout();
            if (qY < 0 || qY > this.__textEngine.numLines - 1) {
                return null
            }
            var js = -1;
            var q = -1;
            var i2 = 0;
            var i = this.__textEngine.layoutGroups;
            while (i2 < i.length) {
                var i1 = i[i2];
                ++i2;
                if (i1.lineIndex == qY) {
                    if (js == -1) {
                        js = i1.startIndex
                    }
                } else {
                    if (i1.lineIndex == qY + 1) {
                        q = i1.startIndex;
                        break
                    }
                }
            }
            if (q == -1) {
                q = this.__textEngine.text.length
            }
            return this.__textEngine.text.substring(js, q)
        },
        getParagraphLength: function(i1) {
            if (i1 < 0 || i1 > this.__textEngine.text.length - 1) {
                return 0
            }
            var q = this.getFirstCharInParagraph(i1);
            var i = this.__textEngine.text.indexOf("\n", i1) + 1;
            if (i == 0) {
                i = this.__textEngine.text.length
            }
            return i - q
        },
        getTextFormat: function(i, i1) {
            if (i1 == null) {
                i1 = 0
            }
            if (i == null) {
                i = 0
            }
            var js = null;
            var qY = 0;
            var q = this.__textEngine.textFormatRanges;
            while (qY < q.length) {
                var i2 = q[qY];
                ++qY;
                if (i2.start <= i && i2.end >= i || i2.start <= i1 && i2.end >= i1) {
                    if (js == null) {
                        js = i2.format.clone()
                    } else {
                        if (i2.format.font != js.font) {
                            js.font = null
                        }
                        if (i2.format.size != js.size) {
                            js.size = null
                        }
                        if (i2.format.color != js.color) {
                            js.color = null
                        }
                        if (i2.format.bold != js.bold) {
                            js.bold = null
                        }
                        if (i2.format.italic != js.italic) {
                            js.italic = null
                        }
                        if (i2.format.underline != js.underline) {
                            js.underline = null
                        }
                        if (i2.format.url != js.url) {
                            js.url = null
                        }
                        if (i2.format.target != js.target) {
                            js.target = null
                        }
                        if (i2.format.align != js.align) {
                            js.align = null
                        }
                        if (i2.format.leftMargin != js.leftMargin) {
                            js.leftMargin = null
                        }
                        if (i2.format.rightMargin != js.rightMargin) {
                            js.rightMargin = null
                        }
                        if (i2.format.indent != js.indent) {
                            js.indent = null
                        }
                        if (i2.format.leading != js.leading) {
                            js.leading = null
                        }
                        if (i2.format.blockIndent != js.blockIndent) {
                            js.blockIndent = null
                        }
                        if (i2.format.bullet != js.bullet) {
                            js.bullet = null
                        }
                        if (i2.format.kerning != js.kerning) {
                            js.kerning = null
                        }
                        if (i2.format.letterSpacing != js.letterSpacing) {
                            js.letterSpacing = null
                        }
                        if (i2.format.tabStops != js.tabStops) {
                            js.tabStops = null
                        }
                    }
                }
            }
            return js
        },
        replaceSelectedText: function(q) {
            if (q == "" && this.__selectionIndex == this.__caretIndex) {
                return
            }
            var i1;
            if (this.__caretIndex < this.__selectionIndex) {
                i1 = this.__caretIndex
            } else {
                i1 = this.__selectionIndex
            }
            var i;
            if (this.__caretIndex > this.__selectionIndex) {
                i = this.__caretIndex
            } else {
                i = this.__selectionIndex
            }
            this.replaceText(i1, i, q);
            this.__caretIndex = i1 + q.length;
            this.__selectionIndex = this.__caretIndex
        },
        replaceText: function(i2, qY, js) {
            if (qY < i2 || i2 < 0 || qY > this.__textEngine.text.length || js == null) {
                return
            }
            this.__textEngine.text = this.__textEngine.text.substring(0, i2) + js + this.__textEngine.text.substring(qY);
            var qZ = js.length - (qY - i2);
            var i1 = 0;
            var q;
            while (i1 < this.__textEngine.textFormatRanges.length) {
                q = this.__textEngine.textFormatRanges[i1];
                if (q.start <= i2 && q.end >= qY) {
                    q.end += qZ;
                    i1++
                } else {
                    if (q.start >= i2 && q.end <= qY) {
                        this.__textEngine.textFormatRanges.splice(i1, 1);
                        qZ -= q.end - q.start
                    } else {
                        if (q.start > i2 && q.start <= qY) {
                            q.start += qZ;
                            i1++
                        } else {
                            i1++
                        }
                    }
                }
            }
            this.__dirty = true;
            this.__layoutDirty = true
        },
        setSelection: function(i, q) {
            this.__selectionIndex = i;
            this.__caretIndex = q
        },
        setTextFormat: function(i1, i, q) {
            if (q == null) {
                q = 0
            }
            if (i == null) {
                i = 0
            }
            if (i1.font != null) {
                this.__textFormat.font = i1.font
            }
            if (i1.size != null) {
                this.__textFormat.size = i1.size
            }
            if (i1.color != null) {
                this.__textFormat.color = i1.color
            }
            if (i1.bold != null) {
                this.__textFormat.bold = i1.bold
            }
            if (i1.italic != null) {
                this.__textFormat.italic = i1.italic
            }
            if (i1.underline != null) {
                this.__textFormat.underline = i1.underline
            }
            if (i1.url != null) {
                this.__textFormat.url = i1.url
            }
            if (i1.target != null) {
                this.__textFormat.target = i1.target
            }
            if (i1.align != null) {
                this.__textFormat.align = i1.align
            }
            if (i1.leftMargin != null) {
                this.__textFormat.leftMargin = i1.leftMargin
            }
            if (i1.rightMargin != null) {
                this.__textFormat.rightMargin = i1.rightMargin
            }
            if (i1.indent != null) {
                this.__textFormat.indent = i1.indent
            }
            if (i1.leading != null) {
                this.__textFormat.leading = i1.leading
            }
            if (i1.blockIndent != null) {
                this.__textFormat.blockIndent = i1.blockIndent
            }
            if (i1.bullet != null) {
                this.__textFormat.bullet = i1.bullet
            }
            if (i1.kerning != null) {
                this.__textFormat.kerning = i1.kerning
            }
            if (i1.letterSpacing != null) {
                this.__textFormat.letterSpacing = i1.letterSpacing
            }
            if (i1.tabStops != null) {
                this.__textFormat.tabStops = i1.tabStops
            }
            this.__dirty = true;
            this.__layoutDirty = true
        },
        __getBounds: function(i1, i) {
            this.__updateLayout();
            var q = gn.__temp;
            this.__textEngine.bounds.__transform(q, i);
            i1.__expand(q.x, q.y, q.width, q.height)
        },
        __getCursor: function() {
            if (this.__textEngine.selectable) {
                return hL.TEXT
            } else {
                return null
            }
        },
        __getPosition: function(q8, q6) {
            this.__updateLayout();
            q8 += this.get_scrollH();
            var q5 = 0;
            var q2 = this.get_scrollV() - 1;
            while (q5 < q2) {
                var q1 = q5++;
                q6 += this.__textEngine.lineHeights[q1]
            }
            if (q6 > this.__textEngine.textHeight) {
                q6 = this.__textEngine.textHeight
            }
            var qZ = true;
            var ra;
            var q7;
            var q0 = 0;
            var q4 = this.__textEngine.layoutGroups.length;
            while (q0 < q4) {
                var qY = q0++;
                ra = this.__textEngine.layoutGroups[qY];
                if (qY < this.__textEngine.layoutGroups.length - 1) {
                    q7 = this.__textEngine.layoutGroups[qY + 1]
                } else {
                    q7 = null
                }
                if (qZ) {
                    if (q6 < ra.offsetY) {
                        q6 = ra.offsetY
                    }
                    if (q8 < ra.offsetX) {
                        q8 = ra.offsetX
                    }
                    qZ = false
                }
                if (q6 >= ra.offsetY && q6 <= ra.offsetY + ra.height || q7 == null) {
                    if (q8 >= ra.offsetX && q8 <= ra.offsetX + ra.width || (q7 == null || q7.lineIndex != ra.lineIndex)) {
                        var q9 = 0;
                        var q3 = 0;
                        var q = ra.advances.length;
                        while (q3 < q) {
                            var js = q3++;
                            q9 += ra.advances[js];
                            if (q8 <= ra.offsetX + q9) {
                                if (q8 <= ra.offsetX + (q9 - ra.advances[js]) + ra.advances[js] / 2) {
                                    return ra.startIndex + js
                                } else {
                                    if (ra.startIndex + js < ra.endIndex) {
                                        return ra.startIndex + js + 1
                                    } else {
                                        return ra.endIndex
                                    }
                                }
                            }
                        }
                        return ra.endIndex
                    }
                }
            }
            return this.__textEngine.text.length
        },
        __hitTest: function(q, q0, i1, i, qZ, qY) {
            if (!qY.get_visible() || this.__isMask || qZ && !this.mouseEnabled) {
                return false
            }
            if (this.get_mask() != null && !this.get_mask().__hitTestMask(q, q0)) {
                return false
            }
            this.__getWorldTransform();
            this.__updateLayout();
            var js = this.__worldTransform.__transformInverseX(q, q0);
            var i2 = this.__worldTransform.__transformInverseY(q, q0);
            if (this.__textEngine.bounds.contains(js, i2)) {
                if (i != null) {
                    i.push(qY)
                }
                return true
            }
            return false
        },
        __hitTestMask: function(i, i2) {
            this.__getWorldTransform();
            this.__updateLayout();
            var i1 = this.__worldTransform.__transformInverseX(i, i2);
            var q = this.__worldTransform.__transformInverseY(i, i2);
            if (this.__textEngine.bounds.contains(i1, q)) {
                return true
            }
            return false
        },
        __renderCairo: function(i) {
            lO.render(this, i);
            ey.prototype.__renderCairo.call(this, i)
        },
        __renderCanvas: function(q) {
            oQ.render(this, q);
            if (this.__textEngine.antiAliasType == 0 && this.__textEngine.gridFitType == 1) {
                var i = q.context.imageSmoothingEnabled;
                if (i) {
                    q.context.mozImageSmoothingEnabled = false;
                    q.context.msImageSmoothingEnabled = false;
                    q.context.imageSmoothingEnabled = false
                }
                ey.prototype.__renderCanvas.call(this, q);
                if (i) {
                    q.context.mozImageSmoothingEnabled = true;
                    q.context.msImageSmoothingEnabled = true;
                    q.context.imageSmoothingEnabled = true
                }
            } else {
                ey.prototype.__renderCanvas.call(this, q)
            }
        },
        __renderDOM: function(i) {
            kW.render(this, i)
        },
        __renderGL: function(i) {
            if (this.__cacheAsBitmap) {
                this.__cacheGL(i);
                return
            }
            if (this.__scrollRect != null) {
                i.maskManager.pushRect(this.__scrollRect, this.__renderTransform)
            }
            if (this.__mask != null && this.__maskGraphics != null && this.__maskGraphics.__commands.get_length() > 0) {
                i.maskManager.pushMask(this)
            }
            oQ.render(this, i);
            mA.renderBitmap(this, i, this.__textEngine.antiAliasType != 0 || this.__textEngine.gridFitType != 1);
            if (this.__mask != null && this.__maskGraphics != null && this.__maskGraphics.__commands.get_length() > 0) {
                i.maskManager.popMask()
            }
            if (this.__scrollRect != null) {
                i.maskManager.popRect()
            }
        },
        __startCursorTimer: function() {
            this.__cursorTimer = og.delay(oT(this, this.__startCursorTimer), 600);
            this.__showCursor = !this.__showCursor;
            this.__dirty = true
        },
        __startTextInput: function() {
            if (this.__caretIndex < 0) {
                this.__caretIndex = this.__textEngine.text.length;
                this.__selectionIndex = this.__caretIndex
            }
            if (this.stage != null) {
                this.stage.window.backend.setEnableTextEvents(true);
                if (!this.__inputEnabled) {
                    this.stage.window.backend.setEnableTextEvents(true);
                    if (!this.stage.window.onTextInput.has(oT(this, this.window_onTextInput))) {
                        this.stage.window.onTextInput.add(oT(this, this.window_onTextInput));
                        this.stage.window.onKeyDown.add(oT(this, this.window_onKeyDown))
                    }
                    this.__inputEnabled = true;
                    this.__startCursorTimer()
                }
            }
        },
        __stopCursorTimer: function() {
            if (this.__cursorTimer != null) {
                this.__cursorTimer.stop();
                this.__cursorTimer = null
            }
            if (this.__showCursor) {
                this.__showCursor = false;
                this.__dirty = true
            }
        },
        __stopTextInput: function() {
            if (this.__inputEnabled && this.stage != null) {
                this.stage.window.backend.setEnableTextEvents(false);
                this.stage.window.onTextInput.remove(oT(this, this.window_onTextInput));
                this.stage.window.onKeyDown.remove(oT(this, this.window_onKeyDown));
                this.__inputEnabled = false;
                this.__stopCursorTimer()
            }
        },
        __updateLayout: function() {
            if (this.__layoutDirty) {
                this.__textEngine.update();
                if (this.__textEngine.autoSize != 2) {
                    var i2 = this.__textEngine.width;
                    var q = this.__textEngine.height;
                    var js = this.__textEngine.autoSize;
                    switch (js) {
                        case 1:
                        case 3:
                        case 0:
                            if (!this.__textEngine.wordWrap) {
                                this.__textEngine.width = this.__textEngine.textWidth + 4
                            }
                            this.__textEngine.height = this.__textEngine.textHeight + 4;
                            break;
                        default:
                    }
                    if (this.__textEngine.width != i2) {
                        var i1 = this.__textEngine.autoSize;
                        switch (i1) {
                            case 3:
                                var i = this;
                                i.set_x(i.get_x() + (i2 - this.__textEngine.width));
                                break;
                            case 0:
                                var qY = this;
                                qY.set_x(qY.get_x() + (i2 - this.__textEngine.width) / 2);
                                break;
                            default:
                        }
                    }
                    this.__textEngine.getBounds()
                }
                this.__layoutDirty = false
            }
        },
        get_antiAliasType: function() {
            return this.__textEngine.antiAliasType
        },
        set_antiAliasType: function(i) {
            if (i != this.__textEngine.antiAliasType) {}
            return this.__textEngine.antiAliasType = i
        },
        get_autoSize: function() {
            return this.__textEngine.autoSize
        },
        set_autoSize: function(i) {
            if (i != this.__textEngine.autoSize) {
                this.__dirty = true;
                this.__layoutDirty = true
            }
            return this.__textEngine.autoSize = i
        },
        get_background: function() {
            return this.__textEngine.background
        },
        set_background: function(i) {
            if (i != this.__textEngine.background) {
                this.__dirty = true
            }
            return this.__textEngine.background = i
        },
        get_backgroundColor: function() {
            return this.__textEngine.backgroundColor
        },
        set_backgroundColor: function(i) {
            if (i != this.__textEngine.backgroundColor) {
                this.__dirty = true
            }
            return this.__textEngine.backgroundColor = i
        },
        get_border: function() {
            return this.__textEngine.border
        },
        set_border: function(i) {
            if (i != this.__textEngine.border) {
                this.__dirty = true
            }
            return this.__textEngine.border = i
        },
        get_borderColor: function() {
            return this.__textEngine.borderColor
        },
        set_borderColor: function(i) {
            if (i != this.__textEngine.borderColor) {
                this.__dirty = true
            }
            return this.__textEngine.borderColor = i
        },
        get_bottomScrollV: function() {
            this.__updateLayout();
            return this.__textEngine.bottomScrollV
        },
        get_caretIndex: function() {
            return this.__caretIndex
        },
        get_defaultTextFormat: function() {
            return this.__textFormat.clone()
        },
        set_defaultTextFormat: function(i) {
            this.__textFormat.__merge(i);
            this.__layoutDirty = true;
            this.__dirty = true;
            return i
        },
        get_displayAsPassword: function() {
            return this.__textEngine.displayAsPassword
        },
        set_displayAsPassword: function(i) {
            if (i != this.__textEngine.displayAsPassword) {
                this.__dirty = true;
                this.__layoutDirty = true
            }
            return this.__textEngine.displayAsPassword = i
        },
        get_embedFonts: function() {
            return this.__textEngine.embedFonts
        },
        set_embedFonts: function(i) {
            return this.__textEngine.embedFonts = i
        },
        get_gridFitType: function() {
            return this.__textEngine.gridFitType
        },
        set_gridFitType: function(i) {
            return this.__textEngine.gridFitType = i
        },
        get_height: function() {
            this.__updateLayout();
            return this.__textEngine.height
        },
        set_height: function(i) {
            if (this.get_scaleY() != 1 || i != this.__textEngine.height) {
                if (!this.__transformDirty) {
                    this.__transformDirty = true;
                    eH.__worldTransformDirty++
                }
                this.__dirty = true;
                this.__layoutDirty = true
            }
            this.set_scaleY(1);
            return this.__textEngine.height = i
        },
        get_htmlText: function() {
            return this.__textEngine.text
        },
        set_htmlText: function(q5) {
            if (!this.__isHTML || this.__textEngine.text != q5) {
                this.__dirty = true;
                this.__layoutDirty = true
            }
            this.__isHTML = true;
            if (this.__div == null) {
                q5 = new gF("<br>", "g").replace(q5, "\n");
                q5 = new gF("<br/>", "g").replace(q5, "\n");
                var qY = q5.split("<font");
                if (qY.length == 1) {
                    q5 = new gF("<.*?>", "g").replace(q5, "");
                    if (this.__textEngine.textFormatRanges.length > 1) {
                        this.__textEngine.textFormatRanges.splice(1, this.__textEngine.textFormatRanges.length - 1)
                    }
                    var qZ = this.__textEngine.textFormatRanges[0];
                    qZ.format = this.__textFormat;
                    qZ.start = 0;
                    qZ.end = q5.length;
                    return this.__textEngine.text = q5
                } else {
                    this.__textEngine.textFormatRanges.splice(0, this.__textEngine.textFormatRanges.length);
                    q5 = "";
                    var js = 0;
                    while (js < qY.length) {
                        var q0 = qY[js];
                        ++js;
                        if (q0 == "") {
                            continue
                        }
                        var q6 = q0.indexOf("</font>");
                        if (q6 > -1) {
                            var q = q0.indexOf(">") + 1;
                            var i1 = q6;
                            var q4 = this.__textFormat.clone();
                            var q3 = q0.indexOf("face=");
                            var q2 = q0.indexOf("color=");
                            var i2 = q0.indexOf("size=");
                            if (q3 > -1 && q3 < q) {
                                var q1 = q0.indexOf('"', q3);
                                q4.font = cj.substr(q0, q3 + 6, q1)
                            }
                            if (q2 > -1 && q2 < q) {
                                q4.color = kr.parseInt("0x" + cj.substr(q0, q2 + 8, 6))
                            }
                            if (i2 > -1 && i2 < q) {
                                q4.size = kr.parseInt((function(q9) {
                                    var q7;
                                    var q8 = q0.indexOf('"', i2);
                                    q7 = cj.substr(q0, i2 + 6, q8);
                                    return q7
                                }(this)))
                            }
                            var i = q0.substring(q, i1);
                            i = new gF("<.*?>", "g").replace(i, "");
                            this.__textEngine.textFormatRanges.push(new lm(q4, q5.length, q5.length + i.length));
                            q5 += i;
                            if (q6 + 7 < q0.length) {
                                i = cj.substr(q0, q6 + 7, null);
                                this.__textEngine.textFormatRanges.push(new lm(this.__textFormat, q5.length, q5.length + i.length));
                                q5 += i
                            }
                        } else {
                            this.__textEngine.textFormatRanges.push(new lm(this.__textFormat, q5.length, q5.length + q0.length));
                            q5 += q0
                        }
                    }
                }
            }
            return this.__textEngine.text = q5
        },
        get_length: function() {
            if (this.__textEngine.text != null) {
                return this.__textEngine.text.length
            }
            return 0
        },
        get_maxChars: function() {
            return this.__textEngine.maxChars
        },
        set_maxChars: function(i) {
            if (i != this.__textEngine.maxChars) {
                this.__dirty = true;
                this.__layoutDirty = true
            }
            return this.__textEngine.maxChars = i
        },
        get_maxScrollH: function() {
            this.__updateLayout();
            return this.__textEngine.maxScrollH
        },
        get_maxScrollV: function() {
            this.__updateLayout();
            return this.__textEngine.maxScrollV
        },
        get_multiline: function() {
            return this.__textEngine.multiline
        },
        set_multiline: function(i) {
            if (i != this.__textEngine.multiline) {
                this.__dirty = true;
                this.__layoutDirty = true
            }
            return this.__textEngine.multiline = i
        },
        get_numLines: function() {
            this.__updateLayout();
            return this.__textEngine.numLines
        },
        get_restrict: function() {
            return this.__textEngine.restrict
        },
        set_restrict: function(i) {
            return this.__textEngine.restrict = i
        },
        get_scrollH: function() {
            return this.__textEngine.scrollH
        },
        set_scrollH: function(i) {
            if (i > this.__textEngine.maxScrollH) {
                i = this.__textEngine.maxScrollH
            }
            if (i < 0) {
                i = 0
            }
            if (i != this.__textEngine.scrollH) {
                this.__dirty = true
            }
            return this.__textEngine.scrollH = i
        },
        get_scrollV: function() {
            return this.__textEngine.scrollV
        },
        set_scrollV: function(i) {
            if (i > this.__textEngine.maxScrollV) {
                i = this.__textEngine.maxScrollV
            }
            if (i < 1) {
                i = 1
            }
            if (i != this.__textEngine.scrollV) {
                this.__dirty = true
            }
            return this.__textEngine.scrollV = i
        },
        get_selectable: function() {
            return this.__textEngine.selectable
        },
        set_selectable: function(i) {
            if (i != this.__textEngine.selectable && this.get_type() == 1) {
                if (this.stage != null && this.stage.get_focus() == this) {
                    this.__startTextInput()
                } else {
                    if (!i) {
                        this.__stopTextInput()
                    }
                }
            }
            return this.__textEngine.selectable = i
        },
        get_selectionBeginIndex: function() {
            return kr["int"](Math.min(this.__caretIndex, this.__selectionIndex))
        },
        get_selectionEndIndex: function() {
            return kr["int"](Math.max(this.__caretIndex, this.__selectionIndex))
        },
        get_sharpness: function() {
            return this.__textEngine.sharpness
        },
        set_sharpness: function(i) {
            if (i != this.__textEngine.sharpness) {
                this.__dirty = true
            }
            return this.__textEngine.sharpness = i
        },
        get_text: function() {
            return this.__textEngine.text
        },
        set_text: function(q) {
            if (this.__isHTML || this.__textEngine.text != q) {
                this.__dirty = true;
                this.__layoutDirty = true
            } else {
                return q
            }
            if (this.__textEngine.textFormatRanges.length > 1) {
                this.__textEngine.textFormatRanges.splice(1, this.__textEngine.textFormatRanges.length - 1)
            }
            var i = this.__textEngine.textFormatRanges[0];
            i.format = this.__textFormat;
            i.start = 0;
            i.end = q.length;
            this.__isHTML = false;
            return this.__textEngine.text = q
        },
        get_textColor: function() {
            return this.__textFormat.color
        },
        set_textColor: function(i1) {
            if (i1 != this.__textFormat.color) {
                this.__dirty = true
            }
            var i2 = 0;
            var q = this.__textEngine.textFormatRanges;
            while (i2 < q.length) {
                var i = q[i2];
                ++i2;
                i.format.color = i1
            }
            return this.__textFormat.color = i1
        },
        get_textWidth: function() {
            this.__updateLayout();
            return this.__textEngine.textWidth
        },
        get_textHeight: function() {
            this.__updateLayout();
            return this.__textEngine.textHeight
        },
        get_type: function() {
            return this.__textEngine.type
        },
        set_type: function(i) {
            if (i != this.__textEngine.type) {
                if (i == 1) {
                    this.addEventListener("focusIn", oT(this, this.this_onFocusIn));
                    this.addEventListener("focusOut", oT(this, this.this_onFocusOut));
                    this.addEventListener("addedToStage", oT(this, this.this_onAddedToStage));
                    this.this_onFocusIn(null)
                } else {
                    this.removeEventListener("focusIn", oT(this, this.this_onFocusIn));
                    this.removeEventListener("focusOut", oT(this, this.this_onFocusOut));
                    this.removeEventListener("addedToStage", oT(this, this.this_onAddedToStage));
                    this.__stopTextInput()
                }
                this.__dirty = true
            }
            return this.__textEngine.type = i
        },
        get_width: function() {
            this.__updateLayout();
            return this.__textEngine.width
        },
        set_width: function(i) {
            if (this.get_scaleX() != 1 || this.__textEngine.width != i) {
                if (!this.__transformDirty) {
                    this.__transformDirty = true;
                    eH.__worldTransformDirty++
                }
                this.__dirty = true;
                this.__layoutDirty = true
            }
            this.set_scaleX(1);
            return this.__textEngine.width = i
        },
        get_wordWrap: function() {
            return this.__textEngine.wordWrap
        },
        set_wordWrap: function(i) {
            if (i != this.__textEngine.wordWrap) {
                this.__dirty = true;
                this.__layoutDirty = true
            }
            return this.__textEngine.wordWrap = i
        },
        stage_onMouseMove: function(q) {
            if (this.stage == null) {
                return
            }
            if (this.__textEngine.selectable && this.__selectionIndex >= 0) {
                this.__updateLayout();
                var i = this.__getPosition(this.get_mouseX(), this.get_mouseY());
                if (i != this.__caretIndex) {
                    this.__caretIndex = i;
                    this.__dirty = true
                }
            }
        },
        stage_onMouseUp: function(js) {
            if (this.stage == null) {
                return
            }
            this.stage.removeEventListener("mouseMove", oT(this, this.stage_onMouseMove));
            this.stage.removeEventListener("mouseUp", oT(this, this.stage_onMouseUp));
            if (this.stage.get_focus() == this) {
                this.__getWorldTransform();
                this.__updateLayout();
                var i1 = this.__worldTransform.__transformInverseX(this.get_x(), this.get_y());
                var i = this.__worldTransform.__transformInverseY(this.get_x(), this.get_y());
                var qY = this.__getPosition(this.get_mouseX(), this.get_mouseY());
                var q;
                var i2;
                q = kr["int"](Math.min(this.__selectionIndex, qY));
                i2 = kr["int"](Math.max(this.__selectionIndex, qY));
                this.__selectionIndex = q;
                this.__caretIndex = i2;
                if (this.__inputEnabled) {
                    this.this_onFocusIn(null);
                    this.__stopCursorTimer();
                    this.__startCursorTimer()
                }
            }
        },
        this_onAddedToStage: function(i) {
            this.this_onFocusIn(null)
        },
        this_onFocusIn: function(i) {
            if (this.get_selectable() && this.get_type() == 1 && this.stage != null && this.stage.get_focus() == this) {
                this.__startTextInput()
            }
        },
        this_onFocusOut: function(i) {
            this.__stopTextInput()
        },
        this_onMouseDown: function(i) {
            if (!this.get_selectable()) {
                return
            }
            this.__updateLayout();
            this.__caretIndex = this.__getPosition(this.get_mouseX(), this.get_mouseY());
            this.__selectionIndex = this.__caretIndex;
            this.__dirty = true;
            this.stage.addEventListener("mouseMove", oT(this, this.stage_onMouseMove));
            this.stage.addEventListener("mouseUp", oT(this, this.stage_onMouseUp))
        },
        window_onKeyDown: function(q, i) {
            switch (q) {
                case 8:
                    if (this.__selectionIndex == this.__caretIndex && this.__caretIndex > 0) {
                        this.__selectionIndex = this.__caretIndex - 1
                    }
                    if (this.__selectionIndex != this.__caretIndex) {
                        this.replaceSelectedText("");
                        this.__selectionIndex = this.__caretIndex;
                        this.dispatchEvent(new hM("change", true))
                    }
                    break;
                case 127:
                    if (this.__selectionIndex == this.__caretIndex && this.__caretIndex < this.__textEngine.text.length) {
                        this.__selectionIndex = this.__caretIndex + 1
                    }
                    if (this.__selectionIndex != this.__caretIndex) {
                        this.replaceSelectedText("");
                        this.__selectionIndex = this.__caretIndex;
                        this.dispatchEvent(new hM("change", true))
                    }
                    break;
                case 1073741904:
                    if (dW.get_shiftKey(i)) {
                        if (this.__caretIndex > 0) {
                            this.__caretIndex--
                        }
                    } else {
                        if (this.__selectionIndex == this.__caretIndex) {
                            if (this.__caretIndex > 0) {
                                this.__caretIndex--
                            }
                        } else {
                            this.__caretIndex = kr["int"](Math.min(this.__caretIndex, this.__selectionIndex))
                        }
                        this.__selectionIndex = this.__caretIndex
                    }
                    this.__stopCursorTimer();
                    this.__startCursorTimer();
                    break;
                case 1073741903:
                    if (dW.get_shiftKey(i)) {
                        if (this.__caretIndex < this.__textEngine.text.length) {
                            this.__caretIndex++
                        }
                    } else {
                        if (this.__selectionIndex == this.__caretIndex) {
                            if (this.__caretIndex < this.__textEngine.text.length) {
                                this.__caretIndex++
                            }
                        } else {
                            this.__caretIndex = kr["int"](Math.max(this.__caretIndex, this.__selectionIndex))
                        }
                        this.__selectionIndex = this.__caretIndex
                    }
                    this.__stopCursorTimer();
                    this.__startCursorTimer();
                    break;
                case 99:
                    if (i == 64 || i == 128) {
                        oc.set_text(this.__textEngine.text.substring(this.__caretIndex, this.__selectionIndex))
                    }
                    break;
                case 120:
                    if (i == 64 || i == 128) {
                        oc.set_text(this.__textEngine.text.substring(this.__caretIndex, this.__selectionIndex));
                        if (this.__caretIndex != this.__selectionIndex) {
                            this.replaceSelectedText("");
                            this.dispatchEvent(new hM("change", true))
                        }
                    }
                    break;
                case 118:
                    if (i == 64 || i == 128) {
                        var i1 = oc.get_text();
                        if (i1 != null) {
                            this.replaceSelectedText(i1)
                        } else {
                            this.replaceSelectedText("")
                        }
                        this.dispatchEvent(new hM("change", true))
                    } else {
                        this.__textEngine.textFormatRanges[this.__textEngine.textFormatRanges.length - 1].end = this.__textEngine.text.length
                    }
                    break;
                default:
            }
        },
        window_onTextInput: function(i) {
            this.replaceSelectedText(i);
            this.dispatchEvent(new hM("change", true))
        },
        __class__: mx,
        __properties__: lP(ey.prototype.__properties__, {
            set_wordWrap: "set_wordWrap",
            get_wordWrap: "get_wordWrap",
            set_type: "set_type",
            get_type: "get_type",
            get_textWidth: "get_textWidth",
            get_textHeight: "get_textHeight",
            set_textColor: "set_textColor",
            get_textColor: "get_textColor",
            set_text: "set_text",
            get_text: "get_text",
            set_sharpness: "set_sharpness",
            get_sharpness: "get_sharpness",
            get_selectionEndIndex: "get_selectionEndIndex",
            get_selectionBeginIndex: "get_selectionBeginIndex",
            set_selectable: "set_selectable",
            get_selectable: "get_selectable",
            set_scrollV: "set_scrollV",
            get_scrollV: "get_scrollV",
            set_scrollH: "set_scrollH",
            get_scrollH: "get_scrollH",
            set_restrict: "set_restrict",
            get_restrict: "get_restrict",
            get_numLines: "get_numLines",
            set_multiline: "set_multiline",
            get_multiline: "get_multiline",
            get_maxScrollV: "get_maxScrollV",
            get_maxScrollH: "get_maxScrollH",
            set_maxChars: "set_maxChars",
            get_maxChars: "get_maxChars",
            get_length: "get_length",
            set_htmlText: "set_htmlText",
            get_htmlText: "get_htmlText",
            set_gridFitType: "set_gridFitType",
            get_gridFitType: "get_gridFitType",
            set_embedFonts: "set_embedFonts",
            get_embedFonts: "get_embedFonts",
            set_displayAsPassword: "set_displayAsPassword",
            get_displayAsPassword: "get_displayAsPassword",
            set_defaultTextFormat: "set_defaultTextFormat",
            get_defaultTextFormat: "get_defaultTextFormat",
            get_caretIndex: "get_caretIndex",
            get_bottomScrollV: "get_bottomScrollV",
            set_borderColor: "set_borderColor",
            get_borderColor: "get_borderColor",
            set_border: "set_border",
            get_border: "get_border",
            set_backgroundColor: "set_backgroundColor",
            get_backgroundColor: "get_backgroundColor",
            set_background: "set_background",
            get_background: "get_background",
            set_autoSize: "set_autoSize",
            get_autoSize: "get_autoSize",
            set_antiAliasType: "set_antiAliasType",
            get_antiAliasType: "get_antiAliasType"
        })
    });
    var dH = function() {
        mx.call(this);
        this.__textEngine = new kV(this);
        this.__textEngine.textFormatRanges.push(new lm(this.__textFormat, 0, 0))
    };
    nt["oaktree.text.TextFieldOutline"] = dH;
    dH.__name__ = ["oaktree", "text", "TextFieldOutline"];
    dH.__super__ = mx;
    dH.prototype = lP(mx.prototype, {
        get_outline: function() {
            return (n0.__cast(this.__textEngine, kV)).outline
        },
        set_outline: function(i) {
            return (n0.__cast(this.__textEngine, kV)).outline = i
        },
        get_outlineColor: function() {
            return (n0.__cast(this.__textEngine, kV)).outlineColor
        },
        set_outlineColor: function(i) {
            return (n0.__cast(this.__textEngine, kV)).outlineColor = i
        },
        get_outlineWidth: function() {
            return (n0.__cast(this.__textEngine, kV)).outlineWidth
        },
        set_outlineWidth: function(i) {
            return (n0.__cast(this.__textEngine, kV)).outlineWidth = i
        },
        __class__: dH,
        __properties__: lP(mx.prototype.__properties__, {
            set_outlineWidth: "set_outlineWidth",
            get_outlineWidth: "get_outlineWidth",
            set_outlineColor: "set_outlineColor",
            get_outlineColor: "get_outlineColor",
            set_outline: "set_outline",
            get_outline: "get_outline"
        })
    });
    var m1 = function(i) {
        this._baseFontSize = -1;
        dH.call(this);
        if (i != null) {
            this.initialize(i)
        }
    };
    nt["oaktree.ext.ui.Label"] = m1;
    m1.__name__ = ["oaktree", "ext", "ui", "Label"];
    m1.registerTextGroup = function(i, q) {
        if (!m1._textGroups.exists(i)) {
            var i1 = new iB(i);
            m1._textGroups.set(i, i1)
        }
        var i2 = m1._textGroups.get(i);
        i2.add(q);
        return i2
    };
    m1.unregisterTextGroup = function(i, q) {
        var i1 = m1._textGroups.get(i);
        if (i1 != null) {
            i1.remove(q)
        }
    };
    m1.getTextGroup = function(i) {
        return m1._textGroups.get(i)
    };
    m1.clearTextGroup = function(i) {
        m1._textGroups.remove(i)
    };
    m1.__super__ = dH;
    m1.prototype = lP(dH.prototype, {
        textGroup: null,
        _format: null,
        options: null,
        _baseFontSize: null,
        _multiline: null,
        initialize: function(i) {
            if (i.font == null) {
                i.font = px.get_fontName()
            }
            i.font;
            if (i.text == null) {
                i.text = ""
            }
            i.text;
            if (i.fontSize == null) {
                i.fontSize = 11
            }
            i.fontSize;
            if (i.color == null) {
                i.color = 0
            }
            i.color;
            if (i.bold == null) {
                i.bold = true
            }
            i.bold;
            if (i.align == null) {
                i.align = 3
            }
            i.align;
            if (i.wordWrap == null) {
                i.wordWrap = true
            }
            i.wordWrap;
            if (i.autoSize == null) {
                i.autoSize = 2
            }
            i.autoSize;
            if (i.maxWidth == null) {
                i.maxWidth = -1
            }
            i.maxWidth;
            if (i.maxHeight == null) {
                i.maxHeight = -1
            }
            i.maxHeight;
            if (i.leading == null) {
                i.leading = null
            }
            i.leading;
            if (i.multiline == null) {
                i.multiline = false
            }
            i.multiline;
            this.options = i;
            this._format = new mC(i.font, i.fontSize, i.color, i.bold);
            this._format.align = i.align;
            this._format.leading = i.leading;
            this.set_defaultTextFormat(this._format);
            this.set_autoSize(i.autoSize);
            this.set_text(cP.replace(i.text, "\\n", "\n"));
            this.set_multiline(i.multiline);
            if (i.width != null) {
                this.set_autoSize(2);
                this.set_width(i.width);
                this.set_multiline(true);
                this.set_wordWrap(this.options.wordWrap)
            } else {
                this.set_width(this.get_textWidth() + 5)
            }
            this.set_height(this.get_textHeight() + 5);
            if (this.options.height != null) {
                this.set_height(this.options.height)
            }
            this._multiline = this.get_multiline()
        },
        setText: function(q1, q0) {
            if (q0 == null) {
                q0 = false
            }
            dH.prototype.set_text.call(this, cP.replace(q1, "\\n", "\n"));
            this.set_height(this.get_textHeight() + 5);
            if (this.options.height != null) {
                this.set_height(this.options.height)
            }
            var qZ = this.get_defaultTextFormat();
            if (!q0 && (this.options.maxWidth != -1 || this.options.maxHeight != -1)) {
                if (this._baseFontSize < 0) {
                    this._baseFontSize = n0.__cast(qZ.size, a)
                }
                qZ.size = this._baseFontSize;
                this.setTextFormat(qZ);
                if (this.get_textWidth() >= this.options.maxWidth - 10 && this.options.maxWidth > 0) {
                    var i1 = q1.indexOf(" ") > 0;
                    if (this._multiline && i1) {
                        var js = "";
                        var qY = new mx();
                        qY.set_autoSize(1);
                        qY.set_text(q1);
                        qY.setTextFormat(qZ);
                        var q = "";
                        var i = 1;
                        while (true) {
                            if (qY.get_textWidth() >= this.options.maxWidth) {
                                var i2 = qY.get_text().lastIndexOf(" ");
                                if (i2 > 0) {
                                    if (q == "") {
                                        q = qY.get_text().substring(i2 + 1);
                                        i++
                                    } else {
                                        q = qY.get_text().substring(i2 + 1) + " " + q
                                    }
                                    qY.set_text(qY.get_text().substring(0, i2));
                                    qY.setTextFormat(qZ)
                                } else {
                                    qZ.size = n0.__cast(qZ.size - 1, a);
                                    qY.set_text(q1);
                                    qY.setTextFormat(qZ);
                                    q = "";
                                    js = "";
                                    i = 1
                                }
                            } else {
                                if (this.options.maxHeight > 0 && qY.get_textHeight() * i > this.options.maxHeight) {
                                    qZ.size = n0.__cast(qZ.size - 1, a);
                                    qY.set_text(q1);
                                    qY.setTextFormat(qZ);
                                    q = "";
                                    js = "";
                                    i = js.split("\n").length + 1;
                                    continue
                                }
                                if (js == "") {
                                    js = qY.get_text()
                                } else {
                                    js = js + "\n" + qY.get_text()
                                }
                                if (q == "") {
                                    break
                                }
                                qY.set_text(q);
                                qY.setTextFormat(qZ);
                                q = ""
                            }
                        }
                        dH.prototype.set_text.call(this, js);
                        this.setTextFormat(qZ);
                        this.set_defaultTextFormat(qZ)
                    } else {
                        while (this.get_textWidth() > 0 && this.get_textWidth() >= this.options.maxWidth - 10 && this.options.maxWidth - 10 > 0) {
                            dH.prototype.set_text.call(this, q1);
                            qZ.size = n0.__cast(qZ.size - 1, a);
                            this.setTextFormat(qZ)
                        }
                        if (this.options.maxHeight != -1) {
                            while (this.get_textHeight() > this.options.maxHeight) {
                                dH.prototype.set_text.call(this, q1);
                                qZ.size = n0.__cast(qZ.size - 1, a);
                                this.setTextFormat(qZ)
                            }
                            this.set_height(this.options.maxHeight)
                        }
                    }
                } else {
                    if (this.options.maxHeight != -1) {
                        while (this.get_textHeight() > this.options.maxHeight) {
                            dH.prototype.set_text.call(this, q1);
                            qZ.size = n0.__cast(qZ.size - 1, a);
                            this.setTextFormat(qZ)
                        }
                    }
                }
                if (this.options.maxHeight != -1) {
                    this.set_height(this.options.maxHeight)
                } else {
                    this.set_height(this.get_textHeight() + 5)
                }
                this.set_width(this.options.maxWidth)
            } else {
                this.set_height(this.get_textHeight() + 5)
            }
            this.set_defaultTextFormat(qZ);
            if (this.options.width == null) {
                this.set_width(this.get_textWidth() + 5)
            }
            if (this.options.height == null) {
                this.set_height(this.get_textHeight() + 5)
            }
            return q1
        },
        set_text: function(i) {
            return this.setText(i)
        },
        set_textGroup: function(i) {
            if (i == "") {
                m1.unregisterTextGroup(this.textGroup, this)
            }
            this.textGroup = i;
            if (i != "") {
                m1.registerTextGroup(i, this)
            }
            return i
        },
        destroy: function() {
            if (this.textGroup != "") {
                m1.unregisterTextGroup(this.textGroup, this)
            }
        },
        get_baseFontSize: function() {
            return this._baseFontSize
        },
        set_baseFontSize: function(i) {
            return this._baseFontSize = i
        },
        __class__: m1,
        __properties__: lP(dH.prototype.__properties__, {
            set_baseFontSize: "set_baseFontSize",
            get_baseFontSize: "get_baseFontSize",
            set_textGroup: "set_textGroup"
        })
    });
    var af = function(i) {
        m1.call(this, i)
    };
    nt["agario.display.LabelOutline"] = af;
    af.__name__ = ["agario", "display", "LabelOutline"];
    af.__super__ = m1;
    af.prototype = lP(m1.prototype, {
        setOutline: function(i, q) {
            this.set_outline(true);
            this.set_outlineColor("#" + this.getRgb(i));
            this.set_outlineWidth(this.getOutlineWidth(q))
        },
        getOutlineWidth: function(i) {
            if (i <= 1) {
                return i * 2.5
            } else {
                if (i <= 2) {
                    return i * 2
                } else {
                    if (i <= 3) {
                        return i * 1.5
                    } else {
                        return i
                    }
                }
            }
        },
        getRgb: function(i) {
            var q = cP.hex(i, 16);
            return q.substring(q.length - 6)
        },
        __class__: af
    });
    var c8 = function() {};
    nt["oaktree.ext.services.IService"] = c8;
    c8.__name__ = ["oaktree", "ext", "services", "IService"];
    c8.prototype = {
        create: null,
        initialize: null,
        __class__: c8
    };
    var cl = function() {
        this.gotDisconnectMsg = false;
        this.retryAttempt = 0;
        this.retryTimeout = 2500;
        this.maxReconnect = 5;
        lR.call(this, this)
    };
    nt["agario.game.server.GameConnectionService"] = cl;
    cl.__name__ = ["agario", "game", "server", "GameConnectionService"];
    cl.__interfaces__ = [c8];
    cl.__super__ = lR;
    cl.prototype = lP(lR.prototype, {
        _serverModel: null,
        maxReconnect: null,
        retryTimeout: null,
        retryAttempt: null,
        delayTimer: null,
        gotDisconnectMsg: null,
        create: function() {},
        initialize: function() {
            this._serverModel = l4.getService(pu);
            this._serverModel.register(20, oT(this, this.onDisconnectMessage));
            this._serverModel.onDisconnect.add(oT(this, this.onSocketDisconnect))
        },
        close: function() {
            if (this.delayTimer != null) {
                this.delayTimer.stop()
            }
            this.retryAttempt = this.maxReconnect + 1;
            this._serverModel.disconnect();
            this.dispatchEvent(new ny("retryAttemptsEnded"))
        },
        onSocketDisconnect: function(i) {
            if (i) {
                return
            }
            this.gotDisconnectMsg = false;
            if (this.retryAttempt <= this.maxReconnect) {
                this.delayTimer = og.delay(oT(this, this.performRetryAttempt), this.retryTimeout);
                this.retryAttempt++
            } else {
                this.dispatchEvent(new ny("retryAttemptsEnded"));
                this.retryAttempt = 0
            }
        },
        performRetryAttempt: function() {
            nK.ui.network.reconnect()
        },
        onDisconnectMessage: function(q, js) {
            var i = js;
            var i1 = "";
            var i2 = i.get_reason();
            switch (i2) {
                case 1:
                    i1 = "incompatible_client";
                    break;
                case 3:
                    i1 = "invalid_login";
                    break;
                case 2:
                    i1 = "not authorized";
                    break;
                case 4:
                    i1 = "logged in elsewhere";
                    this.retryAttempt = this.maxReconnect + 1;
                    nK.get_events().fire(bk.OPEN);
                    break;
                case 5:
                    i1 = "server is going offline";
                    break;
                default:
                    i1 = "undefined"
            }
            this.gotDisconnectMsg = true;
            null
        },
        __class__: cl
    });
    var o7 = function() {
        this.shopReadyToShow = false;
        this.I18nLoaded = false;
        this.userInfoLoaded = false;
        this.shopLoaded = false
    };
    nt["agario.models.DataManager"] = o7;
    o7.__name__ = ["agario", "models", "DataManager"];
    o7.__interfaces__ = [c8];
    o7.prototype = {
        onConfigurationLoaded: null,
        shopCoins: null,
        shopItems: null,
        priceMatrixModel: null,
        shopBoostItems: null,
        shopSkinsModel: null,
        walletProductBundlesModel: null,
        walletProductsModel: null,
        shopPurchasesModel: null,
        defaultSettings: null,
        defaultCommunicationSettings: null,
        defaultGiftingSettings: null,
        giftingFakeUser: null,
        defaultPromoSettings: null,
        xpModel: null,
        shopData: null,
        shopLoaded: null,
        userInfoLoaded: null,
        I18nLoaded: null,
        shopReadyToShow: null,
        _shopService: null,
        _payModel: null,
        create: function() {
            this.onConfigurationLoaded = new qv()
        },
        initialize: function() {
            this._shopService = l4.getService(f4);
            this._payModel = l4.getService(hB);
            nK.get_events().addEventListener("UserEvent::USER_LOGGED", oT(this, this.onUserLogged));
            nK.get_events().addEventListener("ShopEvent::CONFIGURATION_LOADED", oT(this, this.handleShopInit));
            nK.get_events().addEventListener("payment_event::got_currency_code", oT(this, this.handleReceiveCurrencyCode));
            dk.onInit.add(oT(this, this.handleLocalizationInit))
        },
        handleReceiveCurrencyCode: function(i) {
            this.validateCurrencyCode()
        },
        handleLocalizationInit: function() {
            this.I18nLoaded = true;
            this.checkUserItems()
        },
        onUserLogged: function(i) {
            this.userInfoLoaded = true;
            this.checkUserItems()
        },
        onUserFbId: function(i) {},
        checkUserItems: function() {
            if (this.shopLoaded && this.userInfoLoaded && this.I18nLoaded) {
                nK.user.evaluateWallet();
                var q = this.shopSkinsModel.getItemById(nK.user.get_selectedSkin());
                if (q != null) {
                    var i = q.gamePlayInfo.get_shopImage();
                    nK.services.gameui.setUserSkin(i, q.gamePlayInfo.get_cellColor(), q.skinType);
                    if (window.core) {
                        window.core.loadSkin(q.gamePlayInfo.get_skinName())
                    }
                } else {
                    nK.services.gameui.setUserSkin("")
                }
            }
        },
        handleShopInit: function(i) {
            this.shopLoaded = true;
            this.shopItems = new eW();
            if (i.data != null) {
                this.shopData = n0.__cast(i.data, fn)
            } else {
                null
            }
            this.createDefaultSettings();
            this.createXPSettings();
            this.createPriceModel();
            this.createShopPurchasesModel();
            this.createWalletProducts();
            this.createWalletBundles();
            this.createCoinsModel();
            this.createBoostsModel();
            this.createSkinsModel();
            this.checkUserItems();
            this.onConfigurationLoaded.dispatch()
        },
        registerSkinsInGameCore: function() {
            if (this.shopLoaded) {
                var q0 = 0;
                var q2 = this.shopSkinsModel.skinList;
                while (q0 < q2.length) {
                    var q = q2[q0];
                    ++q0;
                    var i1 = 2;
                    var qY = q.gamePlayInfo.get_gamePlayImage();
                    var js = q.gamePlayInfo.productId;
                    if (cP.startsWith(js, "skin_")) {
                        js = cj.substr(js, 5, null)
                    }
                    js = "%" + js;
                    var i2 = kr.parseInt(q.gamePlayInfo.get_cellColor());
                    if (window.core) {
                        window.core.registerSkin(null, js, qY, i1, i2)
                    }
                }
                if (this.shopData.freeSkins != null) {
                    var q1 = 0;
                    var qZ = this.shopData.freeSkins;
                    while (q1 < qZ.length) {
                        var i = qZ[q1];
                        ++q1;
                        var q4;
                        if (i.showName) {
                            q4 = 0
                        } else {
                            q4 = 1
                        }
                        var q3 = i.get_gamePlayImage();
                        if (window.core) {
                            window.core.registerSkin("" + i.id, null, q3, q4, null)
                        }
                    }
                }
            }
        },
        createXPSettings: function() {
            this.xpModel = new oL();
            this.xpModel.updateXpList(this.shopData.xpList)
        },
        createDefaultSettings: function() {
            this.defaultSettings = new fs(this.shopData.userSettings);
            this.defaultSettings.concat(this.shopData.localizationSettings);
            nK.user.selectedLanguage = this.defaultSettings.getSettingByKey("defaultLanguage");
            this.defaultCommunicationSettings = fs.createMap(this.shopData.defaultCommunicationSettings);
            this.defaultGiftingSettings = fs.createMap(this.shopData.defaultGiftingSettings);
            this.giftingFakeUser = fs.createMap(this.shopData.giftingFakeUser);
            this.defaultPromoSettings = new fs(this.shopData.defaultPromoSettings)
        },
        createShopPurchasesModel: function() {
            this.shopPurchasesModel = new cD();
            this.shopPurchasesModel.walletSoftPurchases = this.shopData.walletSoftPurchases;
            this.shopPurchasesModel.walletInappPurchases = this.shopData.walletInappPurchases
        },
        getSoftPurchaseById: function(i) {
            return this.shopPurchasesModel.getSoftPurchaseByPurchaseId(i)
        },
        createWalletBundles: function() {
            this.walletProductBundlesModel = new lv();
            var i1 = 0;
            var js = this.shopData.walletProductBundles.length;
            while (i1 < js) {
                var q = i1++;
                var i2 = [this.shopData.walletProductBundles[q]];
                i2[0].visual = this.shopData.visualBundles.filter((function(i) {
                    return function(qY) {
                        return qY.bundleId == i[0].id
                    }
                })(i2))[0];
                this.walletProductBundlesModel.add(i2[0])
            }
        },
        getVisualProduct: function(i) {
            var q = this.shopData.visualProducts.filter(function(i1) {
                return i1.productId == i
            })[0];
            return q
        },
        createWalletProducts: function() {
            this.walletProductsModel = new lx();
            var i2 = 0;
            var js = this.shopData.walletProducts.length;
            while (i2 < js) {
                var i1 = i2++;
                var q = [this.shopData.walletProducts[i1]];
                q[0].visual = this.shopData.visualProducts.filter((function(i) {
                    return function(qY) {
                        return qY.productId == i[0].id
                    }
                })(q))[0];
                this.walletProductsModel.add(q[0])
            }
        },
        createSkinsModel: function() {
            this.shopSkinsModel = new mK();
            var q0 = 0;
            var q2 = this.shopData.shopSkins.length;
            while (q0 < q2) {
                var js = q0++;
                var i2 = this.shopData.shopSkins[js];
                this.setPurchaseInfo(i2);
                i2.gamePlayInfo = this.getGameplayInfoForSkin(i2.productIdToQuantify);
                this.shopSkinsModel.addSkin(i2);
                this.shopItems.add(i2)
            }
            var q = 0;
            var qZ = this.shopData.shopSkinTabs.length;
            while (q < qZ) {
                var qY = q++;
                var q1 = this.shopData.shopSkinTabs[qY];
                this.shopSkinsModel.addTab(q1)
            }
        },
        getProductIdByShopSkin: function(js) {
            var i1 = null;
            var qY = js.referenceSheet;
            switch (qY) {
                case "Wallet - Soft Purchases":
                    var i = this.shopData.walletProductBundles.filter(function(q0) {
                        return ar.getProperty(q0, js.referenceKey) == js.referenceValue
                    })[0];
                    if (i != null) {
                        i1 = i.productId
                    }
                    break;
                case "Wallet - Offerable Bundles":
                    null;
                    break;
                case "Gameplay - XP to Level":
                    var i2 = this.shopData.xpList.filter(function(q0) {
                        return ar.getProperty(q0, js.referenceKey) == js.referenceValue
                    })[0];
                    if (i2 != null) {
                        var qZ = this.shopData.walletBonusRewards.filter(function(q0) {
                            return q0.bonusId == i2.levelUpBonusId
                        })[0];
                        if (qZ != null) {
                            var q = this.shopData.walletProductBundles.filter(function(q0) {
                                return q0.id == qZ.bundleId
                            })[0];
                            if (q != null) {
                                i1 = q.productId
                            }
                        }
                    }
                    break;
                case "none":
                    break;
                default:
                    throw new nM("DataManager:::getReferencedSkinObject(), Unhandled '" + js.referenceSheet + "' object!")
            }
            return i1
        },
        createPriceModel: function() {
            this.priceMatrixModel = new bL();
            var i1 = 0;
            var i2 = this.shopData.shopPriceMatrix.length;
            while (i1 < i2) {
                var q = i1++;
                this.priceMatrixModel.add(this.shopData.shopPriceMatrix[q])
            }
            this.validateCurrencyCode()
        },
        createCoinsModel: function() {
            this.shopCoins = new ka();
            var i2 = 0;
            var js = this.shopData.shopCoins.length;
            while (i2 < js) {
                var i1 = i2++;
                var q = this.shopData.shopCoins[i1];
                this.setPurchaseInfo(q);
                this.shopCoins.add(q);
                this.shopItems.add(q)
            }
        },
        createBoostsModel: function() {
            this.shopBoostItems = new mY();
            var js = 0;
            var qY = this.shopData.shopBoostItems.length;
            while (js < qY) {
                var i2 = js++;
                var q = this.shopData.shopBoostItems[i2];
                this.setPurchaseInfo(q);
                q.category = this.getBoostCategory(q.categoryShopId, q.categoryPosition);
                q.gameplayInfo = this.getGameplayInfoForBoost(q.purchaseId);
                q.name = q.category.title;
                var i1 = q.gameplayInfo.durationMins;
                if (i1 == 1) {
                    q.description = "menu_shop_1_hour"
                } else {
                    q.description = "menu_shop_n_hour"
                }
                this.shopBoostItems.add(q);
                this.shopItems.add(q)
            }
        },
        getGameplayInfoForBoost: function(i) {
            var q = this.shopPurchasesModel.getPurchaseByPurchaseId(i).bundleId;
            var i1 = this.walletProductBundlesModel.getBundleByBundleId(q).productId;
            return this.shopData.gamePlayBoosts.filter(function(i2) {
                return i2.productId == i1
            })[0]
        },
        getGameplayInfoForSkin: function(i) {
            return this.shopData.gamePlaySkins.filter(function(q) {
                return q.productId == i
            })[0]
        },
        getBoostCategory: function(js, q) {
            var i2 = 0;
            var qY = this.shopData.shopBoostCategories.length;
            while (i2 < qY) {
                var i1 = i2++;
                if (this.shopData.shopBoostCategories[i1].shopId == js && this.shopData.shopBoostCategories[i1].position == q) {
                    return this.shopData.shopBoostCategories[i1]
                }
            }
            return new bx()
        },
        setPurchaseInfo: function(i) {
            if (i.type == "SOFT") {
                if (n0.__instanceof(i, gM)) {
                    i.purchaseInfo = this.shopPurchasesModel.getSoftPurchaseByPurchaseId((n0.__cast(i, gM)).referenceValue);
                    i.purchaseId = (n0.__cast(i, gM)).referenceValue
                } else {
                    i.purchaseInfo = this.shopPurchasesModel.getSoftPurchaseByPurchaseId(i.purchaseId)
                }
                if (i.purchaseInfo != null) {
                    i.price = i.purchaseInfo.currencyAmount
                }
            } else {
                if (i.type == "INAPP") {
                    if (n0.__instanceof(i, gM)) {
                        i.purchaseId = (n0.__cast(i, gM)).referenceValue
                    }
                    i.purchaseInfo = this.shopPurchasesModel.getPurchaseByPurchaseId(i.purchaseId);
                    i.price = this.priceMatrixModel.getPriceForTier(i.purchaseInfo.priceTier, this._payModel.getCurrencyCode())
                } else {
                    if (i.type == "REWARD") {
                        var i1 = "";
                        i.price = 0;
                        i.isReward = true;
                        if (n0.__instanceof(i, gM)) {
                            var q = i;
                            if (q.skinType == "VETERAN") {
                                this.checkLevelSkins(q)
                            }
                        } else {
                            null
                        }
                    } else {
                        null
                    }
                }
            }
        },
        checkLevelSkins: function(i) {
            i.availableAtLevel = 0;
            if (this.xpModel.getLevelForReward(i.referenceValue) != null) {
                i.availableAtLevel = this.xpModel.getLevelForReward(i.referenceValue).level + 1
            }
        },
        refreshShopItems: function() {
            var i1 = 0;
            var q = this.shopItems.shopItemsList;
            while (i1 < q.length) {
                var i = q[i1];
                ++i1;
                this.setPurchaseInfo(i)
            }
        },
        resetModels: function() {
            if (this.shopItems == null) {
                return
            }
            var i1 = 0;
            var q = this.shopItems.shopItemsList;
            while (i1 < q.length) {
                var i = q[i1];
                ++i1;
                if (n0.__instanceof(i, gM) || n0.__instanceof(i, bt)) {
                    i.set_inUse(false);
                    i.set_owned(false)
                }
            }
        },
        getBonusById: function(q) {
            var i = this.shopData.walletBonusRewards.filter(function(i1) {
                return i1.bonusId == q
            });
            if (i.length > 0) {
                return i[0]
            } else {
                return null
            }
        },
        getWalletInappPurchaseById: function(i) {
            return this.shopPurchasesModel.getInappPurchaseByPurchaseId(i)
        },
        getIncentiveBundleId: function() {
            var i = this.getBonusById("webIncentive");
            return i.bundleId
        },
        findProductsOnWallet: function(q0) {
            var i = q0.length > 0;
            var js = q0.h;
            var qY = null;
            while (js != null) {
                var i1;
                i1 = (function(q3) {
                    var q2;
                    qY = js[0];
                    js = js[1];
                    q2 = qY;
                    return q2
                }(this));
                var q = false;
                var i2 = 0;
                var qZ = nK.user.wallet;
                while (i2 < qZ.length) {
                    var q1 = qZ[i2];
                    ++i2;
                    if (q1.productId == i1.productId) {
                        q = true;
                        continue
                    }
                }
                i = i && q;
                if (!q) {
                    null
                }
            }
            return i
        },
        validateCurrencyCode: function() {
            if (this.priceMatrixModel != null && !this.priceMatrixModel.hasCurrency(this._payModel.getCurrencyCode())) {
                this._payModel.overrideCurrencyCode("USD")
            }
        },
        getVisualQuestByType: function(q) {
            var i2 = 0;
            var i1 = this.shopData.visualQuests;
            while (i2 < i1.length) {
                var i = i1[i2];
                ++i2;
                if (i.questType == q) {
                    return i
                }
            }
            return null
        },
        getQuestAchievementByTypeLevel: function(i1, qY) {
            var q = null;
            var js = 0;
            var i2 = this.shopData.achievements;
            while (js < i2.length) {
                var i = i2[js];
                ++js;
                if (i1 == i.type && qY > i.goal) {
                    q = i
                }
            }
            return q
        },
        __class__: o7
    };
    var aQ = function() {};
    nt["agario.models.VersionModel"] = aQ;
    aQ.__name__ = ["agario", "models", "VersionModel"];
    aQ.getVersionPaddedAsString = function() {
        return cP.lpad("2", "0", 3) + cP.lpad("5", "0", 3) + cP.lpad("1", "0", 3)
    };
    aQ.updateTag = function() {
        if (nK.initialized) {
            nK.services.gameui.setVersionTag("" + aQ.SERVERS_VERSION + " - " + aQ.SERVER_VERSION + " - " + aQ.VERSION + ".845 - (CFG: " + aQ.CONFIG_NUMBER + ")")
        }
    };
    var er = function(i) {
        this._manager = i
    };
    nt["agario.module.dom.AdsManager"] = er;
    er.__name__ = ["agario", "module", "dom", "AdsManager"];
    er.prototype = {
        _manager: null,
        refreshAds: function(i) {
            window.refreshAd(window.adSlots[i])
        },
        destroyAds: function(i) {
            window.destroyAd(window.adSlots[i])
        },
        __class__: er
    };
    var h3 = function(i) {
        this.lastSyncTime = 0;
        this._manager = i;
        this.initialize()
    };
	window.position_manager = h3;
	
	h3.prototype.handleMouseMove2 = function(a){
		this.handleMouseMove(a);
	}
	
	h3.prototype.gameupdate2 = function(a){
		this.gameupdate(a);
	};
	
    nt["agario.module.dom.CanvasManager"] = h3;
    h3.__name__ = ["agario", "module", "dom", "CanvasManager"];
    h3.prototype = {
        _manager: null,
        targetMouseX: null,
        targetMouseY: null,
        lastSyncTime: null,
        initialize: function() {
            var i;
            if (window.localStorage.quality_setting) {
                i = window.localStorage.quality_setting
            } else {
                i = "Retina"
            }
            this.setQuality(i);
            this.updateQualitySetting(i);
            window.onresize = oT(this, this.handleWindowResize);
//            nK.stage.addEventListener("enterFrame", oT(this, this.gameupdate));
            this.handleWindowResize(null)
        },
        setScale: function(q1) {
            this._manager.state.canvasScale = q1;
            var q0 = window.innerWidth;
            var i = window.innerHeight;
            var i1 = window.document.getElementById("canvas");
            i1.width = q0 * this._manager.state.canvasScale;
            i1.height = i * this._manager.state.canvasScale;
            i1.onmousemove = oT(this, this.handleMouseMove);
            i1.onkeydown = oT(this, this.handleKeyDown);
          
            var q2 = 800;
            var qY = Math.min(1, i / q2);
            var q = q2 * qY;
            if (q0 > 0) {
             
            }
           
        },
        updateQualitySetting: function(i) {
//            $("#quality").val(i)
        },
        setQuality: function(i1) {
           q = 0;
        },
        gamepadAxisUpdate: function(i2, qY) {
            var i1 = window.document.getElementById("canvas");
            var i = i1.width;
            var q = i1.height;
            var js = qY * qY < 0.1;
            if (i2 == 0) {
                this.targetMouseX = i / 2;
                if (!js) {
                    this.targetMouseX = (qY + 1) / 2 * i
                }
            }
            if (i2 == 1) {
                this.targetMouseY = q / 2;
                if (!js) {
                    this.targetMouseY = (qY + 1) / 2 * q
                }
            }
            this.updateMouseTarget(this.targetMouseX, this.targetMouseY)
        },
        updateMouseTarget: function(q, i) {
            if (window.core) {
				//console.log(q * this._manager.state.canvasScale, i * this._manager.state.canvasScale);
                window.core.setTarget(q * this._manager.state.canvasScale, i * this._manager.state.canvasScale)
            }
        },
        gameupdate: function(a) {
            if (!this._manager.state.inGame) {
                return
            }
          //  var i = px.engine.get_time();
           // if (i - this.lastSyncTime > 25) {
                this.updateMouseTarget(this.targetMouseX, this.targetMouseY);
                this.lastSyncTime = a;
           // }
        },
        handleMouseMove: function(i) {
            this.targetMouseX = i.clientX;
            this.targetMouseY = i.clientY;
        },
        handleKeyDown: function(i) {
            eM.trace("key down:", {
                fileName: "CanvasManager.hx",
                lineNumber: 172,
                className: "agario.module.dom.CanvasManager",
                methodName: "handleKeyDown",
                customParams: [i.keyCode, i.charCode]
            })
        },
        handleWindowResize: function(i) {
            this.setScale(this._manager.state.canvasScale)
        },
        __class__: h3
    };
    var a8 = function(i) {
        this._manager = i
    };
    nt["agario.module.dom.GAnalytics"] = a8;
    a8.__name__ = ["agario", "module", "dom", "GAnalytics"];
    a8.prototype = {
        _manager: null,
        sendEvent: function(i, q) {
            if (window.ga) {
                window.ga("send", "event", i, q)
            }
        },
        __class__: a8
    };
    var mb = function() {
        this.windowHasFocus = true;
        this.doCoreReload = false;
        this.canvasScale = 1;
        this.pendingNick = null;
        this.firstNickDialog = true;
        this.inGame = false;
        this.isPlayerAlive = false;
        this.statsOpen = false;
        this.dialogOpen = false;
        this.questOpen = false;
        this.region = "";
        this.partyToken = "";
        this.gameMode = "";
        this.isInitialized = false;
        this.lastGameResults = {
            foodEaten: 0,
            highestMass: 0,
            timeAlive: 0,
            leaderboardTime: 0,
            cellsEaten: 0,
            topPosition: 0
        };
        this.addGameTime(0)
    };
    nt["agario.module.dom.GameState"] = mb;
    mb.__name__ = ["agario", "module", "dom", "GameState"];
    mb.prototype = {
        isInitialized: null,
        gameMode: null,
        partyToken: null,
        region: null,
        lastGameResults: null,
        questOpen: null,
        dialogOpen: null,
        statsOpen: null,
        isPlayerAlive: null,
        inGame: null,
        firstNickDialog: null,
        pendingNick: null,
        canvasScale: null,
        doCoreReload: null,
        hasLoginIntent: null,
        windowHasFocus: null,
        set_partyToken: function(i) {
            return this.partyToken = i
        },
        get_hasLoginIntent: function() {
            return window.hasLoginIntent();
            return false
        },
        setGameResults: function(qY, i2, q, js, i, i1) {
            if (i1 == null) {
                i1 = 0
            }
            if (i == null) {
                i = 0
            }
            if (js == null) {
                js = 0
            }
            if (q == null) {
                q = 0
            }
            if (i2 == null) {
                i2 = 0
            }
            if (qY == null) {
                qY = 0
            }
            this.lastGameResults = {
                foodEaten: qY,
                highestMass: i2,
                timeAlive: q,
                leaderboardTime: js,
                cellsEaten: i,
                topPosition: i1
            };
            this.addGameTime(q)
        },
        addGameTime: function(i2) {
            if (i2 == 0) {
                return
            }
            var js;
            if (nK.user.loggedIn) {
                js = "" + nK.user.name
            } else {
                js = "guest"
            }
            var i1 = "" + js + "_GAME_TIME_KEY";
            var q = kr.parseFloat(nK.storage.get(i1, "0"));
           
        },
        __class__: mb,
        __properties__: {
            get_hasLoginIntent: "get_hasLoginIntent",
            set_partyToken: "set_partyToken"
        }
    };
    var ft = function() {};
    nt["agario.module.dom.GameMode"] = ft;
    ft.__name__ = ["agario", "module", "dom", "GameMode"];
    var ch = function() {};
    nt["agario.module.dom.IMainUI"] = ch;
    ch.__name__ = ["agario", "module", "dom", "IMainUI"];
    ch.prototype = {
        showAds: null,
        showNickDialog: null,
        hideMetaUI: null,
        showPromoBadge: null,
        hidePromotionBadge: null,
        __class__: ch
    };
    var kq = function(i) {
        this._tooltipCounter = 0;
        this._checkTimer = 0;
        this._manager = i;
        this.initialize()
    };
    nt["agario.module.dom.MainUI"] = kq;
    kq.__name__ = ["agario", "module", "dom", "MainUI"];
    kq.__interfaces__ = [ch];
    kq.prototype = {
        _checkTimer: null,
        _tooltipCounter: null,
        _manager: null,
        _activeAds: null,
        _promoBadge: null,
        gameMode: null,
        get_gameMode: function() {
            if (this.gameMode == null) {
                this.gameMode = $("#gamemode")
            }
            return this.gameMode
        },
        initialize: function() {
            var i = nK.environment.get_isInFacebook();
            this._activeAds = new io();
            if (i) {
                $("#gplusLogin").hide();
                $(".btn-logout").hide();
                $("footer.tosBox.left").hide();
                $("#showOnlineStatus").parent().show()
            }
            this.initButtonTriggers();
            this.initButtonTooltips();
            this.initWindowEvents();
            this.setGameMode("")
        },
        initWindowEvents: function() {
            window.addEventListener("focus", oT(this, this.handleWindowFocus));
            window.addEventListener("blur", oT(this, this.handleWindowBlur))
        },
        handleWindowBlur: function(i) {
            this._manager.state.windowHasFocus = false
        },
        handleWindowFocus: function(i) {
            this._manager.state.windowHasFocus = true
        },
        initButtonTriggers: function() {
            var i = this;
//            
            
        },
        initButtonTooltips: function() {
            
        },
        showTooltip: function(i) {
            this._tooltipCounter++;
            this.checkTooltip()
        },
        hideTooltip: function(i) {
            this._tooltipCounter--;
            this.checkTooltip()
        },
        checkTooltip: function() {
           
        },
        handleGPlusClick: function(i) {
           
        },
        isChromeBrowser: function() {
            return /chrome/.test(navigator.userAgent)
        },
        showInstructionsPanel: function(q) {
           
           
        },
        showAds: function(i) {
            
        },
        refreshAd: function(i) {
           
            true
        },
        destroyAd: function(i) {
            
        },
        handleNewConfigLoaded: function() {
           
        },
        showNickDialog: function(i1, i) {
           
        },
        startGame: function() {
            this.setNick("HistoryBots.tk")
        },
        hideMetaUI: function() {
            
        },
        setNick: function(i) {
            if (!nK.ui.network.connected || nK.user.isConnecting) {
                return
            }
            nK.user.nickName = i;
            this.hideMetaUI();
            this._manager.state.pendingNick = i;
            this._manager.settings.set_lastNick(i);
            if (window.core) {
                window.core.sendNick(i)
            }
            this._manager.state.inGame = true;
            window.addKeyListeners();
            this._manager.state.pendingNick = null;
            if (window.core) {
                window.core.setFadeout(false)
            }
        },
        spectate: function() {
            this.hideMetaUI();
            this._manager.state.inGame = true;
            window.addKeyListeners();
            if (window.core) {
                window.core.setFadeout(false)
            }
            if (window.core) {
                window.core.sendSpectate()
            }
        },
        applyGameMode: function(i) {
           
        },
        resetGameMode: function() {
            
        },
        setGameMode: function(q, i) {
            if (i == null) {
                i = true
            }
            this.applyGameMode(q);
            if (q == this._manager.state.gameMode) {
                return
            }
            this._manager.state.gameMode = q;
            if (i) {
                this._manager.state.dialogOpen = true;
                this._manager.network.reconnect()
            }
            
            if (q == ":party") {
                nK.ui.partyMode.hideTryNowBanner()
            } else {
                nK.ui.partyMode.showTryNowBanner();
                nK.ui.partyMode.hideHtmlPartyCode()
            }
        },
        showPromoBadge: function(i1) {
           
        },
        updateButtonsState: function() {
          
        },
        changeSettingVisibility: function(q, i) {
         
        },
        enableButtons: function() {
           
        },
        playGameSelected: function() {
           
        },
        disableButtons: function() {
          
        },
        updatePromoBadge: function() {
          
        },
        hidePromotionBadge: function() {
           
        },
        slideFromTop: function(i1, q, i) {
            
        }
    };
    var kO = function(i) {
        this._findingServer = 0;
        this._backoffPeriod = 5000;
        this._regionsNames = null;
        this._curValidFindServer = 0;
        this.params = "";
        this.connected = false;
        this._manager = i;
        this.initialize()
    };
    nt["agario.module.dom.NetworkUI"] = kO;
    kO.__name__ = ["agario", "module", "dom", "NetworkUI"];
    kO.prototype = {
        connected: null,
        set_connected: function(i) {
            this.connected = i;
            nK.ui.mainUI.updateButtonsState();
            return i
        },
        params: null,
        _serverIP: null,
        _integrityChecksActive: null,
        _masterUrl: null,
        _curValidFindServer: null,
        _isSecure: null,
        _regionsNames: null,
        _backoffPeriod: null,
        _manager: null,
        _ignoreReconnect: null,
        initialize: function() {
            var q = window.location.protocol;
            this._isSecure = q == "https:";
            var i = d5.getProperty("master_url");
            if (nK.environment.webEnv.hasParameter("master")) {
                i = nK.environment.webEnv.getParameter("master")
            }
            this._masterUrl = "" + q + "//" + i;
            d5.setProperty("full_master_url", this._masterUrl)
        },
        _findingServer: null,
        findServer: function(js, i2) {
            if (i2 == null) {
                i2 = ""
            }
            if (js == null) {
                js = ""
            }
            var qY = this;
            var i1 = new Date().getTime();
            if (i1 - this._findingServer < 500) {
                return
            }
            if (window.core) {
                window.core.disconnect()
            }
            var i = ++this._curValidFindServer;
            var q = js + i2;
            if (q == "") {
                q = "?"
            }
            this._findingServer = i1;
            $.ajax(this._masterUrl + "/findServer", {
                beforeSend: function(qZ) {
                    qZ.setRequestHeader("x-support-proto-version", "6.2.0");
                    return true
                },
                error: function() {
                    qY._backoffPeriod *= 2;
                    setTimeout(function() {
                        var qZ = js;
                        var q0 = i2;
                        qY.findServer(qZ, q0)
                    }, qY._backoffPeriod)
                },
                success: function(qZ) {
                    if (i != qY._curValidFindServer) {
                        return
                    }
                    if (qZ.alert != null) {
                        alert(qZ.alert)
                    }
                    qY._serverIP = qZ.ip;
                    if (window.core) {
                        window.core.disableIntegrityChecks(false)
                    }
                    qY._integrityChecksActive = true;
                    if (nK.environment.webEnv.hasParameter("ip")) {
                        qY._serverIP = nK.environment.webEnv.getParameter("ip");
                        if (window.core) {
                            window.core.disableIntegrityChecks(true)
                        }
                        qY._integrityChecksActive = false
                    }
                    if (nK.environment.webEnv.hasParameter("sip")) {
                        qY._serverIP = nK.environment.webEnv.getParameter("sip")
                    }
                    nK.ui.state.set_partyToken(qZ.token);
                    qY._backoffPeriod = 5000;
                    qY.connect(qY._serverIP, qY._isSecure, qY._integrityChecksActive)
                },
                dataType: "json",
                method: "POST",
                cache: false,
                crossDomain: true,
                data: q
            })
        },
        connect: function(i2, q2, q0, q3) {
            if (q0 == null) {
                q0 = true
            }
            if (q2 == null) {
                q2 = false
            }
            this._ignoreReconnect = false;
            var i;
            if (nK.environment.webEnv.hasParameter("env_development")) {
                i = nK.environment.webEnv.getParameter("env_development") == "true"
            } else {
                i = false
            }
            var qZ;
            if (nK.environment.webEnv.hasParameter("env_local")) {
                qZ = nK.environment.webEnv.getParameter("env_local") == "true"
            } else {
                qZ = false
            }
            var q = "ws://" + i2;
            if (!i && !qZ && q0) {
                var js = i2.split(":");
                var i1 = new gF("\\.", "g");
                var qY = new gF("/", "g");
                var q5 = i1.replace(js[0], "-");
                q5 = qY.replace(q5, "");
                var q4;
                if (q2) {
                    q4 = "wss"
                } else {
                    q4 = "ws"
                }
                q = q4 + "://ip-" + q5 + ".tech.agar.io:" + js[1]
            }
            var q1 = "";
            q1 = this.addParamToQueryString(q1, "recaptcha_token", q3);
            q1 = this.addParamToQueryString(q1, "party_id", nK.ui.state.partyToken);
            if (q1 == "") {
                q1 = "?"
            } else {
                q1 += "&"
            }
            q += q1 + this.params;
            if (window.core) {
                window.core.connect(q)
            }
        },
        addParamToQueryString: function(i1, i, q) {
            if (q == null || q == "") {
                return i1
            }
            if (i1 == "") {
                i1 += "?"
            } else {
                i1 += "&"
            }
            i1 += i + "=" + encodeURIComponent(q);
            return i1
        },
        getLatestConfigurationId: function() {
           
        },
        setConfiguration: function(q) {
           
        },
        reconnect: function(i) {
            var q = this;
            if (this._ignoreReconnect) {
                return
            }
            if (!this._manager.state.isInitialized) {
                return
            }
            if (this._manager.state.region == "" || this._manager.state.region == null) {
                return
            }
            if (i != null) {
                this.connect(this._serverIP, this._isSecure, this._integrityChecksActive, i)
            }
            if (this._manager.state.doCoreReload) {
                this._manager.reloadAgarioCore(function() {
                    q.findServer(q._manager.state.region, q._manager.state.gameMode);
                    nK.models.registerSkinsInGameCore()
                })
            } else {
                this.findServer(this._manager.state.region, this._manager.state.gameMode)
            }
        },
        stopReconnect: function() {
            this._ignoreReconnect = true
        },
        allowReconnect: function(i) {
            this._ignoreReconnect = false;
            this.reconnect(i)
        },
        sendRecaptchaResponse: function(i) {
            if (window.core) {
                window.core.recaptchaResponse(i)
            }
        },
        setRegion: function(i) {
            if (i == null || i == "") {
                return
            }
            if (i == this._manager.state.region) {
                $(".btn-needs-server").prop("disabled", false);
                return
            }
            if ($("#region").val() != i) {
                $("#region").val(i)
            }
            window.localStorage.setItem("location", i);
            this._manager.state.region = i;
            $(".region-message").hide();
            $(".region-message." + i).show();
            $(".btn-needs-server").prop("disabled", false);
            if (this._manager.state.isInitialized) {
                this.reconnect()
            }
        },
        checkRegion: function() {
            var i1 = $("#region");
            var q = i1.val();
            if (q != null && q != "") {
                window.localStorage.setItem("location", q)
            } else {
                var i = window.localStorage.getItem("location");
                if (i != null && i != "") {
                    $("#region").val(i)
                }
            }
            q = i1.val();
            if (q != null && q != "") {
                $("#locationKnown").append(i1)
            } else {
                $("#locationUnknown").append(i1)
            }
        },
        refreshRegionInfo: function() {
            var i = this;
            this.initializeRegionNames();
            $.ajax(this._masterUrl + "/info", {
                beforeSend: function(q) {
                    q.setRequestHeader("x-support-proto-version", "6.2.0");
                    return true
                },
                success: function(i1) {
                    var q = new dB(i1).parseRec();
                    i.handleRegionInfo(q.regions);
                    i.handleVersionsInfo(q.versionsInfo)
                },
                dataType: "text",
                method: "GET",
                cache: false,
                crossDomain: true
            })
        },
        handleRegionInfo: function(js) {
            var i = new io();
            var i2 = ar.fields(js);
            var qY = 0;
            while (qY < i2.length) {
                var q1 = i2[qY];
                ++qY;
                var q3 = q1.split(":")[0];
                if (!(pN[q3] != null ? i.existsReserved(q3) : i.h.hasOwnProperty(q3))) {
                    if (pN[q3] != null) {
                        i.setReserved(q3, 0)
                    } else {
                        i.h[q3] = 0
                    }
                }
                var qZ = ar.field(js, q1);
                i.set(q3, (pN[q3] != null ? i.getReserved(q3) : i.h[q3]) + qZ.numPlayers)
            }
            var q5 = this._regionsNames.keys();
            while (q5.hasNext()) {
                var i1 = q5.next();
                var q = $('#region option[value="' + i1 + '"]');
                q.hide()
            }
            var q4 = i.keys();
            while (q4.hasNext()) {
                var q0 = q4.next();
                var q2 = $('#region option[value="' + q0 + '"]');
                q2.text(this._regionsNames.get(q0) + (" (" + (pN[q0] != null ? i.getReserved(q0) : i.h[q0]) + ")"));
                q2.show()
            }
        },
        handleVersionsInfo: function(i1) {
            var i = "";
            var i2 = 0;
            while (i2 < i1.length) {
                var q = i1[i2];
                ++i2;
                i += q + " "
            }
            aQ.SERVERS_VERSION = i;
            aQ.updateTag()
        },
        initializeRegionNames: function() {
            var i = this;
            if (this._regionsNames == null) {
                this._regionsNames = new io();
                $("#region").children().each(function(q, i2) {
                    var qY = $(i2);
                    qY.hide();
                    var i1 = qY.val();
                    if (i1 == null || i1 == "") {
                        return
                    }
                    var js = qY.text();
                    i._regionsNames.set(i1, js)
                })
            }
        },
        getPartyToken: function(i1, q, i) {
            this.makeMasterRequest("getToken", i1, q, i)
        },
        createPartyToken: function(i1, q, i) {
            this.makeMasterRequest("createToken", i1, q, i)
        },
        makeMasterRequest: function(i2, q, i1, i) {
            $.ajax(this._masterUrl + "/" + i2, {
                beforeSend: function(js) {
                    js.setRequestHeader("x-support-proto-version", "6.2.0");
                    return true
                },
                error: function() {
                    i1()
                },
                success: function(js) {
                    i(js)
                },
                dataType: "text",
                method: "POST",
                cache: false,
                crossDomain: true,
                data: q
            })
        },
        __class__: kO,
        __properties__: {
            set_connected: "set_connected"
        }
    };
    var jM = function(i) {
        this._justCreatedParty = false;
        this._manager = i;
        this.initialize()
    };
    nt["agario.module.dom.PartyModeUI"] = jM;
    jM.__name__ = ["agario", "module", "dom", "PartyModeUI"];
    jM.prototype = {
        _manager: null,
        _justCreatedParty: null,
        initialize: function() {
            var i = this;
            
        },
        createPartyToken: function() {
           
        },
        createParty: function() {
           
        },
        hideTryNowBanner: function() {
         
        },
        showTryNowBanner: function() {
          
        },
        joinParty: function(i2) {

        },
        cancelParty: function(i) {
            
        },
        replaceHistoryState: function(i) {
          
        },
        receivedPartyToken: function(i1) {
          
        },
        showPartyCode: function() {
          
        },
        hideCancelButton: function() {
           
        },
        showCancelButton: function() {
          
        },
        setPartyState: function(i) {
           
        },
        connectCallback: function() {
           
        },
        isSafariBrowser: function() {
            return /^((?!chrome|android).)*safari/i.test(navigator.userAgent)
        },
        encodeURI: function(i) {
            return window.encodeURIComponent(pToken)
        },
        decodeURI: function(i) {
            return window.decodeURIComponent(i)
        },
        updateHtmlPartyCode: function(i) {
           
        },
        showHtmlPartyCode: function() {
           
        },
        hideHtmlPartyCode: function() {
          
        },
        showContinueMode: function() {
           
        },
        hidePartyMode: function() {
            
        },
        showPartyLeaveConfirmation: function() {
            
        },
        animatePartyMode: function() {
          
        },
        pulse: function(i1, i) {
         
        },
        copyToken: function(i) {
          
        },
        getGameModeTitle: function() {
            var i = this._manager.state.gameMode;
            switch (i) {
                case "":
                    return "FFA";
                case ":team":
                    return "TEAM";
                case ":experimental":
                    return "EXPERIMENTAL";
                case ":party":
                    return "PARTY";
                default:
                    return "-"
            }
        },
        __class__: jM
    };
    var pX = function(i) {
        this._defaultSettings = {
            skinsEnabled: true,
            namesEnabled: true,
            noColors: false,
            blackTheme: false,
            showMass: false,
            lastNick: "",
            statsEnabled: true,
            showQuest: true,
            matches: 0,
            showOnlineStatus: true,
            skinId: ""
        };
        this._manager = i;
        this._settings = ar.copy(this._defaultSettings);
        this._gameServer = l4.getService(hk);
        this._gameServer.register(81, oT(this, this.onUpdateUserSettingsResponse));
        this.readStorageSettings()
    };
    nt["agario.module.dom.SettingsPanel"] = pX;
    pX.__name__ = ["agario", "module", "dom", "SettingsPanel"];
    pX.prototype = {
        values: null,
        _defaultSettings: null,
        _manager: null,
        _settings: null,
        _gameServer: null,
        initialize: function() {
            var i = this;
           
        },
        storeSettings: function() {
            this.saveLocal();
            this.save()
        },
        hasStoredSettings: function() {
            return window.localStorage.settings != null
        },
        getBoolValue: function(q, i1, i) {
            if (i == null) {
                i = false
            }
            if (Object.prototype.hasOwnProperty.call(q, i1)) {
                return ar.field(q, i1)
            } else {
                return i
            }
        },
        getStringValue: function(q, i1, i) {
            if (i == null) {
                i = ""
            }
            if (Object.prototype.hasOwnProperty.call(q, i1)) {
                return ar.field(q, i1)
            } else {
                return i
            }
        },
        getIntValue: function(q, i1, i) {
            if (i == null) {
                i = 0
            }
            if (Object.prototype.hasOwnProperty.call(q, i1)) {
                return ar.field(q, i1)
            } else {
                return i
            }
        },
        readStorageSettings: function() {
            var i = ar.copy(this._defaultSettings);
            if (window.localStorage.settings != null) {
                i = cu.parse(window.localStorage.getItem("settings"))
            }
            this.set_namesEnabled(this.getBoolValue(i, "namesEnabled", this._defaultSettings.namesEnabled));
            this.set_noColors(this.getBoolValue(i, "noColors", this._defaultSettings.noColors));
            this.set_statsEnabled(this.getBoolValue(i, "statsEnabled", this._defaultSettings.statsEnabled));
            this.set_skinsEnabled(this.getBoolValue(i, "skinsEnabled", this._defaultSettings.skinsEnabled));
            this.set_lastNick(this.getStringValue(i, "lastNick", this._defaultSettings.lastNick));
            this.set_matches(this.getIntValue(i, "matches", this._defaultSettings.matches))
        },
        applyStorageSettings: function() {
            $("#showMass").prop("checked", this._settings.showMass);
            $("#showQuest").prop("checked", this._settings.showQuest);
            $("#noSkins").prop("checked", !this._settings.skinsEnabled);
            $("#skipStats").prop("checked", !this._settings.statsEnabled);
            $("#noColors").prop("checked", this._settings.noColors);
            $("#noNames").prop("checked", !this._settings.namesEnabled);
            $("#darkTheme").prop("checked", this._settings.blackTheme);
            $("#showOnlineStatus").prop("checked", this._settings.showOnlineStatus);
            $("#nick").val(this._settings.lastNick)
        },
        get_skinsEnabled: function() {
            return this._settings.skinsEnabled
        },
        set_skinsEnabled: function(i) {
            this._settings.skinsEnabled = i;
            if (window.core) {
                window.core.setSkins(i)
            }
            return i
        },
        get_namesEnabled: function() {
            return this._settings.namesEnabled
        },
        set_namesEnabled: function(i) {
            this._settings.namesEnabled = i;
            if (window.core) {
                window.core.setNames(i)
            }
            return i
        },
        get_blackTheme: function() {
            return this._settings.blackTheme
        },
        set_blackTheme: function(i) {
            this._settings.blackTheme = i;
            if (window.core) {
                window.core.setDarkTheme(i)
            }
            return i
        },
        get_noColors: function() {
            return this._settings.noColors
        },
        set_noColors: function(i) {
            this._settings.noColors = i;
            if (window.core) {
                window.core.setColors(!i)
            }
            return i
        },
        get_showMass: function() {
            return this._settings.showMass
        },
        set_showMass: function(i) {
            this._settings.showMass = i;
            if (window.core) {
                window.core.setShowMass(i)
            }
            return i
        },
        get_statsEnabled: function() {
            return this._settings.statsEnabled
        },
        set_statsEnabled: function(i) {
            this._settings.statsEnabled = i;
            return i
        },
        get_lastNick: function() {
            return this._settings.lastNick
        },
        set_lastNick: function(i) {
            if (this._settings.lastNick != i) {
                this._settings.lastNick = i;
                this.saveLocal()
            }
            return i
        },
        get_showQuest: function() {
            return this._settings.showQuest
        },
        set_showQuest: function(i) {
            this._settings.showQuest = i;
            if (window.core) {
                window.core.setShowQuest(i)
            }
            return i
        },
        get_skinId: function() {
            return this._settings.skinId
        },
        set_skinId: function(i) {
            this._settings.skinId = i;
            return i
        },
        get_matches: function() {
            return this._settings.matches
        },
        set_matches: function(i) {
            if (this._settings.matches != i) {
                this._settings.matches = i;
                this.saveLocal()
            }
            return i
        },
        get_showOnlineStatus: function() {
            return this._settings.showOnlineStatus
        },
        set_showOnlineStatus: function(i) {
            this._settings.showOnlineStatus = i;
            return i
        },
        get_values: function() {
            return this._settings
        },
        onUpdateUserSettingsResponse: function(q, i1) {
            var i;
            i = n0.__cast(i1, jz);
            this.load(i.get_updatedUserSettings());
            this.saveLocal()
        },
        createUserSetting: function(i, i1) {
            var q = new lG();
            q.set_type(typeof(i1) == "string" ? 1 : 2);
            q.set_key(i);
            if (typeof(i1) == "string") {
                q.set_valueString(kr.string(i1))
            } else {
                q.set_valueInt32(kr["int"](i1))
            }
            return q
        },
        toggleSettings: function() {
            $("#settings").toggle();
            $("#socialLoginContainer").hide();
            $("#instructions").hide();
            this._manager.mainUI.showInstructionsPanel()
        },
        load: function(i1) {
            if (i1 != null && i1.length > 0) {
                var i2 = 0;
                while (i2 < i1.length) {
                    var i = i1[i2];
                    ++i2;
                    var q = i.get_key();
                    switch (q) {
                        case 1:
                            this.set_skinId(i.get_valueString());
                            break;
                        case 5:
                            this.set_showMass(i.get_valueInt32() == 1);
                            break;
                        case 12:
                            this.set_showQuest(i.get_valueInt32() == 1);
                            break;
                        case 7:
                            this.set_blackTheme(i.get_valueInt32() == 1);
                            break;
                        case 13:
                            this.set_showOnlineStatus(i.get_valueInt32() == 1);
                            break;
                        default:
                            j7.debug("Ignored setting with key:" + i.get_key(), {
                                fileName: "SettingsPanel.hx",
                                lineNumber: 317,
                                className: "agario.module.dom.SettingsPanel",
                                methodName: "load"
                            })
                    }
                }
            }
            this.applyStorageSettings()
        },
        save: function() {
            j7.debug("Save settings to server!", {
                fileName: "SettingsPanel.hx",
                lineNumber: 327,
                className: "agario.module.dom.SettingsPanel",
                methodName: "save"
            });
            var i = new jE();
            i.get_userSettingsUpdates().push(this.createUserSetting(1, this.get_skinId()));
            i.get_userSettingsUpdates().push(this.createUserSetting(7, this.get_blackTheme() ? 1 : 0));
            i.get_userSettingsUpdates().push(this.createUserSetting(12, this.get_showQuest() ? 1 : 0));
            i.get_userSettingsUpdates().push(this.createUserSetting(5, this.get_showMass() ? 1 : 0));
            i.get_userSettingsUpdates().push(this.createUserSetting(13, this.get_showOnlineStatus() ? 1 : 0));
            this._gameServer.sendMessage(80, i)
        },
        saveLocal: function() {
            j7.debug("Save settings locally!", {
                fileName: "SettingsPanel.hx",
                lineNumber: 341,
                className: "agario.module.dom.SettingsPanel",
                methodName: "saveLocal"
            });
            var i = s.print(this._settings, null, null);
            window.localStorage.setItem("settings", i)
        },
        __class__: pX,
        __properties__: {
            get_values: "get_values",
            set_showOnlineStatus: "set_showOnlineStatus",
            get_showOnlineStatus: "get_showOnlineStatus",
            set_matches: "set_matches",
            get_matches: "get_matches",
            set_skinId: "set_skinId",
            get_skinId: "get_skinId",
            set_showQuest: "set_showQuest",
            get_showQuest: "get_showQuest",
            set_lastNick: "set_lastNick",
            get_lastNick: "get_lastNick",
            set_statsEnabled: "set_statsEnabled",
            get_statsEnabled: "get_statsEnabled",
            set_showMass: "set_showMass",
            get_showMass: "get_showMass",
            set_blackTheme: "set_blackTheme",
            get_blackTheme: "get_blackTheme",
            set_noColors: "set_noColors",
            get_noColors: "get_noColors",
            set_namesEnabled: "set_namesEnabled",
            get_namesEnabled: "get_namesEnabled",
            set_skinsEnabled: "set_skinsEnabled",
            get_skinsEnabled: "get_skinsEnabled"
        }
    };
    var ml = function(i) {
        this.fadeoutTime = 500;
        this.deaths = 0;
        this._manager = i;
        this.initialize()
    };
    nt["agario.module.dom.StatsUI"] = ml;
    ml.__name__ = ["agario", "module", "dom", "StatsUI"];
    ml.prototype = {
        deaths: null,
        _manager: null,
        fadeoutTime: null,
        initialize: function() {},
        updateStatsTexts: function() {
            var i = this._manager.state.lastGameResults;
            $(".stats-food-eaten").text(i.foodEaten);
            $(".stats-time-alive").text(this.formatSeconds(Math.max(0, i.timeAlive / 1000)));
            $(".stats-leaderboard-time").text(this.formatSeconds(Math.max(0, i.leaderboardTime / 1000)));
            $(".stats-highest-mass").text(Math.floor(i.highestMass));
            $(".stats-cells-eaten").text(i.cellsEaten);
            $(".stats-top-position").text(i.topPosition == 0 ? ":(" : i.topPosition)
        },
        showStatsDialog: function() {
            var js = this;
            var i1 = false;
            if (this._manager.state.dialogOpen || this._manager.state.statsOpen) {
                return
            }
            if (!this._manager.settings.get_statsEnabled()) {
                this._manager.mainUI.showNickDialog(this.fadeoutTime);
                return
            }
            this.updateStatsTexts();
            this.showAdsStats(0);
            var q = nK.user.isGuest || nK.user.userInfo != null && !nK.user.userInfo.isPayingUser;
            if (q && this.deaths >= 1 && this.isAgarioDomain()) {
                i1 = true;
                nK.get_states().enable("state_fullscreen_ad")
            } else {
                null
            }
            this.deaths++;
            var i2 = this._manager.settings;
            var i = i2.get_matches();
            i2.set_matches(i + 1);
            i;
            og.delay(function() {
                js.showInterstitial(i1)
            }, 1500)
        },
        showInterstitial: function(q) {
            if (q) {
                requestAds()
            } else {
                this.showStats(this.fadeoutTime)
            }
            var i = this.getStatsString("g_plus_share_stats");
            window.fillSocialValues(i, "externalGShare")
        },
        isAgarioDomain: function() {
            var i = this.getDomain();
            return i == "agar.io" || i == "staging-web.agar.io" || i == "localhost";
            return false
        },
        getDomain: function() {
            var q;
            var i = window;
            if (i != i.top || i != i.parent) {
                q = "iframe?"
            } else {
                q = i.location.host
            }
            return q
        },
        onFullscreenAd: function() {
            this.showStats(this.fadeoutTime)
        },
        closeStats: function() {
            this.hideStats()
        },
        showStats: function(i) {
            if (this._manager.state.statsOpen) {
                return
            }
            this._manager.state.statsOpen = true;
            $("#overlays").fadeIn(i, null, function() {
                window.animateAccountData()
            });
            $("#mainPanel").hide();
            $("#updatingPanel").hide();
            $("#stats").show();
            $("#leftPanel").stop();
            $("#rightPanel").show();
            $(".agario-promo-container").hide();
            $(".agario-web-incentive").hide();
            $(".diep-cross").hide();
            nK.ui.partyMode.showPartyCode();
            this.showInvisible("#leftPanel");
            this.slideFromTop("#stats", 0, -63);
            this.slideFromTop("#rightPanel", 0, -63)
        },
        hideStats: function() {
            var i = this;
            this._manager.state.dialogOpen = false;
            this.slideUp("#rightPanel", 1000, 0, null);
            this.slideUp("#stats", 1000, 0, function() {
                i._manager.mainUI.showNickDialog(0, true)
            });
            this._manager.mainUI.showAds(0);
            this._manager.state.statsOpen = false
        },
        onPlayerSpawn: function() {
//            $("#overlays").hide()
        },
        onPlayerDeath: function() {
            //if (window.storageInfo == null) {
            //    window.createDefaultStorage()
            //}
            //this.showStatsDialog()
        },
        getStatsString: function(i) {
            var q = $(".stats-time-alive").text();
            var js = q.split(":");
            var i1 = js[0];
            var i2 = js[1];
            return dk.text(i, [i1, i2, this._manager.state.lastGameResults.highestMass])
        },
        formatSeconds: function(i1) {
            i1 = Math.floor(i1);
            var q = "" + i1 % 60;
            var i = "" + Math.floor(i1 / 60);
            if (q.length < 2) {
                q = "0" + q
            }
            return i + ":" + q
        },
        showAdsStats: function(i) {
            $("#g300x250").hide();
            $("#a300x250").hide();
            $("#s300x250").show();
            this._manager.mainUI.refreshAd("ab")
        },
        slideUp: function(js, i1, i, q) {
            if (i == null) {
                i = 0
            }
            var i2 = this;
            $(js).animate({
                opacity: 1
            }, 0, "linear");
            $(js).delay(i).animate({
                opacity: 0,
                top: "-500px"
            }, {
                duration: i1,
                queue: false,
                easing: "easeInQuart",
                complete: function() {
                    i2.onSlideUpComplete(js, q)
                }
            })
        },
        onSlideUpComplete: function(q, i) {
            eM.trace("onSlideUpComplete!", {
                fileName: "StatsUI.hx",
                lineNumber: 236,
                className: "agario.module.dom.StatsUI",
                methodName: "onSlideUpComplete"
            });
            $(q).animate({
                opacity: 1,
                top: "0px"
            }, 0, "linear").hide();
            if (i != null) {
                i()
            }
        },
        slideFromTop: function(i1, q, i) {
            if (i == null) {
                i = 0
            }
            if (q == null) {
                q = 0
            }
            $(i1).show();
            $(i1).animate({
                opacity: 0,
                top: "-500px"
            }, 0, "linear");
            $(i1).delay(q | 0).animate({
                opacity: 1,
                top: "0px"
            }, {
                duration: 1500,
                queue: false,
                easing: "easeOutQuart"
            })
        },
        showInvisible: function(i) {
            $(i).show();
            $(i).animate({
                opacity: 0
            }, 0, "linear").addClass("disable-mouse")
        },
        __class__: ml
    };
	
    var lL = function() {
        this._sessionRejected = false;
        this._coreLoadedCallback = null;
        this._coreReady = false;
        this.initialize()
    };
	
    nt["agario.module.dom.UIManager"] = lL;
    lL.__name__ = ["agario", "module", "dom", "UIManager"];
    lL.prototype = {
        state: null,
        mainUI: null,
        partyMode: null,
        network: null,
        stats: null,
        ads: null,
        analytics: null,
        canvas: null,
        settings: null,
        _coreReady: null,
        _coreLoadedCallback: null,
        _sessionRejected: null,
        initialize: function() {
            nK.onReady.addOnce(oT(this, this.onCoreReady));
            this.state = new mb();
            this.canvas = new h3(this);
            this.mainUI = new kq(this);
            this.partyMode = new jM(this);
            this.network = new kO(this);
            this.stats = new ml(this);
            this.ads = new er(this);
            this.analytics = new a8(this);
            this.settings = new pX(this)
        },
        onCoreReady: function() {
            var q = this;
            var i = lp.instance;
            if (nK.environment.webEnv.hasParameter("gamepad") && i != null) {
                eM.trace("activated gamepad support", {
                    fileName: "UIManager.hx",
                    lineNumber: 68,
                    className: "agario.module.dom.UIManager",
                    methodName: "onCoreReady"
                });
                i.activateGamepadSupport();
                i.onGamepadUpdate((c3 = this.canvas, oT(c3, c3.gamepadAxisUpdate)));
                i.registerSplitFunction(function() {
                    if (window.core) {
                        window.core.split()
                    }
                });
                i.registerEjectFunction(function() {
                    if (window.core) {
                        window.core.eject()
                    }
                })
            }
            if (i != null) {
                i.hideContainer()
            }
            this._coreReady = true;
            this.mainUI.showAds(0);
            og.delay(function() {
                q.mainUI.showNickDialog(500)
            }, 2000);
            og.delay(function() {
                q.initAgario()
            }, 3000)
        },
        initAgario: function() {
            var q = lp.instance;
            if (!q.coreWasLoaded || !this._coreReady) {
                return
            }
            if (!this.state.isInitialized) {
                this.settings.initialize();
//                window.agarioInit();
                var i = l4.getService(hk)
            }
            if (this._coreLoadedCallback != null) {
                this._coreLoadedCallback()
            }
        },
        onDisconnect: function() {
            this.state.isPlayerAlive = false;
            this.network.set_connected(false);
            var i = l4.getService(hk);
            i.onDisconnect.dispatch(false);
            if (!this._sessionRejected) {
                this.network.reconnect()
            } else {
                this.network.stopReconnect()
            }
        },
        doLogin: function() {
            this.network.set_connected(true);
            var i = l4.getService(hk);
            i.onConnect.dispatch();
            if (!this.state.questOpen) {
                this.partyMode.connectCallback()
            } else {
                this.state.questOpen = false;
                return
            }
            if (this.state.pendingNick == null) {
                this.state.isPlayerAlive = false;
                return
            }
            if (window.core) {
                window.core.sendNick()
            }
        },
        reloadAgarioCore: function(i1) {
            if (!this.state.doCoreReload) {
                return
            }
            this._coreLoadedCallback = i1;
            var i = window.ASSETS_ROOT;
            if (i == undefined) {
                i = ""
            }
            if (window.core) {
                window.core.destroy()
            }
            var i2 = window.document.createElement("script");
            var q = Math.floor(new Date() / 1000 / 60);
            i2.setAttribute("src", "" + i + "agario.core.js?" + q);
            window.document.head.appendChild(i2);
            this.state.doCoreReload = false
        },
        handleAgarioCoreReload: function() {
            this.state.doCoreReload = true;
            null
        },
        onPlayerBanned: function(q) {
            var i1 = l4.getService(cl);
            i1.close();
            nK.services.gameui.showContainer();
            var i = new lf(q);
            nK.views.openView(i, {
                priority: 5,
                animate: true,
                allowClickClose: false,
                callerView: lp.instance.shopDialog
            })
        },
		
        onSessionRejected: function() {
			console.log("SESSION IS A RETARTS");
            this._sessionRejected = true;
            requestCaptcha()
        },
        onRecaptchaRequested: function() {
//            requestCaptcha()
console.log("CAPCHA... nobody will rage. CLAM DOWN AND PUT THIS KINIFE DOWN.");
		window.fukingcaptcha();
        },
        notifyToken: function(i) {
            if (this._sessionRejected) {
                this.network.allowReconnect(i)
            } else {
                this.network.sendRecaptchaResponse(i)
            }
            this._sessionRejected = false
        },
        __class__: lL
    };
	window.sendcaptcha = lL;
	
		window.fukingcaptcha = function() {
			
			console.log("CALLED CAPCHA REPONSE");
			lL.notifyToken("GAY");
			
		}
	
    var qi = function(i) {};
    nt["agario.module.dom.EmptyUI"] = qi;
    qi.__name__ = ["agario", "module", "dom", "EmptyUI"];
    qi.prototype = {
        skinId: null,
        save: function() {},
        load: function(i) {},
        __class__: qi
    };
    var j = nt["agario.module.gift.controller.ViewState"] = {
        __ename__: ["agario", "module", "gift", "controller", "ViewState"],
        __constructs__: ["GIFTS", "REQUESTS", "GIFTS_REQUESTS", "INBOX"]
    };
    j.GIFTS = ["GIFTS", 0];
    j.GIFTS.toString = ea;
    j.GIFTS.__enum__ = j;
    j.REQUESTS = ["REQUESTS", 1];
    j.REQUESTS.toString = ea;
    j.REQUESTS.__enum__ = j;
    j.GIFTS_REQUESTS = ["GIFTS_REQUESTS", 2];
    j.GIFTS_REQUESTS.toString = ea;
    j.GIFTS_REQUESTS.__enum__ = j;
    j.INBOX = ["INBOX", 3];
    j.INBOX.toString = ea;
    j.INBOX.__enum__ = j;
    var jU = function() {
        nK.get_events().listen("shop_event::configComplete", oT(this, this.onConfigComplete))
    };
    nt["agario.module.gift.controller.GiftsController"] = jU;
    jU.__name__ = ["agario", "module", "gift", "controller", "GiftsController"];
    jU.prototype = {
        model: null,
        giftDialog: null,
        gettingInboxItems: null,
        viewState: null,
        waitForLogin: null,
        updateTimer: null,
        init: function() {
            var q = nK.environment.get_environment();
            switch (q[1]) {
                case 0:
                    d5.setProperty("gift_object_id", "193179704439504");
                    break;
                case 1:
                    d5.setProperty("gift_object_id", "1572657209726044");
                    break;
                case 2:
                    d5.setProperty("gift_object_id", "1519379655032060");
                    break;
                case 3:
                    d5.setProperty("gift_object_id", nK.models.defaultGiftingSettings.get("giftObjectId"));
                    break
            }
            var i;
            i = n0.__cast(nK.models.defaultGiftingSettings.get("minFacebookFriendsUpdateInterval"), a);
            this.setUpdateInterval(i * 1000);
            this.model = new n8();
            this.giftDialog = new d4();
            this.giftDialog.addEventListener("open", oT(this, this.onOpen_Dialog));
            this.giftDialog.addEventListener("close", oT(this, this.onClose_Dialog));
            this.giftDialog.addEventListener("agario.module.gift.events.ViewEvent.request_gifts", oT(this, this.onRequestGifts_Handler));
            this.giftDialog.addEventListener("agario.module.gift.events.ViewEvent.request_friends", oT(this, this.onRequestFriends_Handler));
            this.giftDialog.addEventListener("agario.module.gift.events.ViewEvent.request_friends_to-send", oT(this, this.onRequestFriendsToSend_Handler));
            this.giftDialog.addEventListener("agario.module.gift.events.ViewEvent.accept_gifts", oT(this, this.onAcceptGifts_Handler));
            this.giftDialog.addEventListener("agario.module.gift.events.ViewEvent.accept_gifts_request", oT(this, this.onAcceptGiftsRequest_Handler));
            this.giftDialog.addEventListener("agario.module.gift.events.ViewEvent.send_gifts", oT(this, this.onSendGifts_Handler));
            this.giftDialog.addEventListener("agario.module.gift.events.ViewEvent.post_dispose_inbox", oT(this, this.onInboxElementDisposed));
            this.giftDialog.addEventListener("agario.module.gift.events.ViewEvent.post_dispose", oT(this, this.onFriendElementDispose));
            this.giftDialog.addEventListener("agario.module.gift.events.ViewEvent.animate_splash", oT(this, this.coinSplash));
            this.giftDialog.addEventListener("agario.module.gift.events.ViewEvent.animate_shower", oT(this, this.coinShower));
            nK.get_events().listen("shop_event::showGiftCenter", oT(this, this.onOpenGiftCenter));
            nK.get_events().listen("shop_event::showGiftUnavailable", oT(this, this.showGiftUnavailable));
            nK.get_events().listen("agario.module.gift.events.ViewEvent.open_gift_requests", oT(this, this.showRequestGifts));
            nK.get_events().listen("agario.module.gift.events.ViewEvent.open_gift_inbox", oT(this, this.showGiftsInbox));
            nK.user.onUserDataUpdate.add(oT(this, this.onUserLoggedIn));
            nK.get_events().listen("userLoggedOut", oT(this, this.onUserLoggedOut))
        },
        onOpenGiftCenter: function(i) {
            this.viewState = j.GIFTS;
            if (this.isUserLoggedIn()) {
                this.openGiftCenter()
            } else {
                this.waitForLogin = true
            }
        },
        openGiftCenter: function() {
            this.gettingInboxItems = false;
            this.requestOpenView(this.giftDialog)
        },
        showGiftUnavailable: function(q) {
            var i = new bZ();
            this.requestOpenView(i)
        },
        showRequestGifts: function(i) {
            this.viewState = j.REQUESTS;
            this.giftDialog.openRequestGifts()
        },
        showGiftsInbox: function(i) {
            this.viewState = j.INBOX;
            if (this.isUserLoggedIn()) {
                this.openGiftCenter()
            } else {
                this.waitForLogin = true
            }
        },
        isUserLoggedIn: function() {
            return nK.user.userInfo != null
        },
        requestOpenView: function(i) {
            if (i.parent != null) {
                i.parent.removeChild(i)
            }
            nK.services.gameui.showContainer();
            nK.views.openView(i, {
                priority: 1,
                animate: true,
                allowClickClose: true
            })
        },
        updateInbox: function() {
            var i = this;
            if (nK.user.facebookId != null && !this.gettingInboxItems) {
                this.gettingInboxItems = true;
                this.model.getInboxItems().then(function(q) {
                    i.gettingInboxItems = false;
                    i.giftDialog.updateInbox(q);
                    nK.services.gameui.setGiftInboxCounter(q.length == null ? "null" : "" + q.length)
                })
            }
        },
        onUserLoggedOut: function(i) {
            this.model.clearData();
            this.gettingInboxItems = false
        },
        onUserLoggedIn: function() {
            if (nK.user.get_realm() == N.Google) {
                var q = ne.JQuery("#giftButton");
                q.hide();
                return
            }
            if (nK.user.facebookId != null && nK.hasUserFriendsPermissions()) {
                this.model.init();
                this.model.get_claimGiftsResponseSignal().add(oT(this, this.onClaimGiftsResponse_Handler));
                this.updateInbox();
                if (this.waitForLogin) {
                    this.openGiftCenter()
                }
                this.waitForLogin = false
            }
            var i = ne.JQuery("#giftButton");
            i.show()
        },
        onConfigComplete: function(i) {
            nK.get_events().unlisten("shop_event::configComplete", oT(this, this.onConfigComplete));
            this.init()
        },
        onInboxElementDisposed: function(i) {
            this.updateInbox();
            this.giftDialog.reactivateInboxButton()
        },
        onOpen_Dialog: function(i) {
            this.giftDialog.reset()
        },
        onRequestFriends_Handler: function(i) {
            this.updateRequestableFriends()
        },
        updateRequestableFriends: function() {
            var i = this;
            this.viewState = j.REQUESTS;
            this.model.getRequestableFriends().then(function(q) {
                i.giftDialog.showRequestsView(q)
            })
        },
        onRequestGifts_Handler: function(i) {
            var q = this;
            this.enableFBBlocker();
            this.model.requestGifts(i.friends).then(function(i1) {
                if (i1) {
                    q.giftDialog.fadeOutFriendElements(i.friends)
                }
                q.disableFBBlocker()
            })
        },
        onAcceptGifts_Handler: function(i) {
            this.claimGifts(i.friends)
        },
        claimGifts: function(i) {
            this.model.claimGifts(i);
            this.giftDialog.confirmInboxElementDisable(i)
        },
        onClaimGiftsResponse_Handler: function(i) {
            nK.user.set_coins(i.get_userDataUpdate().get_productField().get_finalAmount());
            nK.services.gameui.setUserCoins(nK.user.get_coins());
            this.giftDialog.clearInboxAccepted()
        },
        onRequestFriendsToSend_Handler: function(i) {
            this.updateGiftableFriends()
        },
        updateGiftableFriends: function() {
            var i = this;
            this.viewState = j.GIFTS;
            this.model.getGiftableFriends().then(function(q) {
                i.giftDialog.showGiftableFriends(q)
            })
        },
        onSendGifts_Handler: function(i) {
            this.sendGifts(i.friends)
        },
        sendGifts: function(i) {
            var q = this;
            this.enableFBBlocker();
            this.model.sendGifts(i).then(function(i1) {
                if (i1) {
                    q.giftDialog.fadeOutFriendElements(i)
                }
                q.disableFBBlocker()
            })
        },
        onFriendElementDispose: function(i) {
            var q = this.viewState;
            switch (q[1]) {
                case 0:
                    this.updateGiftableFriends();
                    break;
                case 1:
                    this.updateRequestableFriends();
                    break;
                default:
                    null
            }
        },
        onAcceptGiftsRequest_Handler: function(i) {
            this.acceptRequests(i.friends)
        },
        acceptRequests: function(i) {
            var q = this;
            this.enableFBBlocker();
            this.model.sendGifts(i).then(function(i1) {
                if (i1) {
                    q.giftDialog.confirmInboxElementDisable(i)
                } else {
                    q.giftDialog.reactivateInboxButton()
                }
                q.disableFBBlocker()
            })
        },
        onClose_Dialog: function(q) {
            var i = nK.views.getTopView();
            if (i != null) {
                i.enable()
            }
            nK.get_events().dispatchEventWith("ShopEvent::SHOP_ENABLED")
        },
        coinSplash: function(i) {
            this.giftDialog.playCoinSplashAnimation(i.animationPosition)
        },
        coinShower: function(i) {
            this.giftDialog.playCoinShowerAnimation()
        },
        toggleKeyboard: function(i) {
            this.giftDialog.toggleKeyboard(i)
        },
        enableDialog: function(i) {
            this.giftDialog.enable()
        },
        disableDialog: function(i) {
            this.giftDialog.disable()
        },
        enableFBBlocker: function() {
            ne.JQuery("#fbBlocker").show();
            this.toggleKeyboard(false)
        },
        disableFBBlocker: function() {
            ne.JQuery("#fbBlocker").hide();
            this.toggleKeyboard(true)
        },
        handleAllowDisableCloseEvent: function(q) {
            var i = q.data;
            this.giftDialog.allowDisableClose = i
        },
        setUpdateInterval: function(i) {
            if (this.updateTimer != null) {
                this.updateTimer.stop()
            }
            this.updateTimer = new og(i);
            this.updateTimer.run = oT(this, this.updateData)
        },
        updateData: function() {
            this.model.clearData();
            this.gettingInboxItems = false;
            this.updateInbox()
        },
        __class__: jU
    };
    var hM = function(i1, q, i) {
        if (i == null) {
            i = false
        }
        if (q == null) {
            q = false
        }
        this.type = i1;
        this.bubbles = q;
        this.cancelable = i;
        this.eventPhase = 2
    };
    nt["openfl.events.Event"] = hM;
    hM.__name__ = ["openfl", "events", "Event"];
    hM.prototype = {
        bubbles: null,
        cancelable: null,
        currentTarget: null,
        eventPhase: null,
        target: null,
        type: null,
        __isCanceled: null,
        __isCanceledNow: null,
        __preventDefault: null,
        clone: function() {
            var i = new hM(this.type, this.bubbles, this.cancelable);
            i.eventPhase = this.eventPhase;
            i.target = this.target;
            i.currentTarget = this.currentTarget;
            return i
        },
        formatToString: function(q, qZ, qY, js, i2, i) {
            var i1 = [];
            if (qZ != null) {
                i1.push(qZ)
            }
            if (qY != null) {
                i1.push(qY)
            }
            if (js != null) {
                i1.push(js)
            }
            if (i2 != null) {
                i1.push(i2)
            }
            if (i != null) {
                i1.push(i)
            }
            return oT(this, this.__formatToString).apply(this, [q, i1])
        },
        isDefaultPrevented: function() {
            return this.__preventDefault
        },
        preventDefault: function() {
            if (this.cancelable) {
                this.__preventDefault = true
            }
        },
        stopImmediatePropagation: function() {
            this.__isCanceled = true;
            this.__isCanceledNow = true
        },
        stopPropagation: function() {
            this.__isCanceled = true
        },
        toString: function() {
            return this.__formatToString("Event", ["type", "bubbles", "cancelable"])
        },
        __formatToString: function(i1, i2) {
            var q = "[" + i1;
            var i = null;
            var qY = 0;
            while (qY < i2.length) {
                var js = i2[qY];
                ++qY;
                i = ar.field(this, js);
                if (typeof(i) == "string") {
                    q += " " + js + '="' + kr.string(i) + '"'
                } else {
                    q += " " + js + "=" + kr.string(i)
                }
            }
            q += "]";
            return q
        },
        __class__: hM
    };
    var dr = function(i1, q, i) {
        if (i == null) {
            i = false
        }
        if (q == null) {
            q = true
        }
        hM.call(this, i1, q, i)
    };
    nt["agario.module.gift.events.GiftEvent"] = dr;
    dr.__name__ = ["agario", "module", "gift", "events", "GiftEvent"];
    dr.__super__ = hM;
    dr.prototype = lP(hM.prototype, {
        friends: null,
        animationPosition: null,
        __class__: dr
    });
    var n8 = function() {};
    nt["agario.module.gift.model.GiftsModel"] = n8;
    n8.__name__ = ["agario", "module", "gift", "model", "GiftsModel"];
    n8.prototype = {
        loginResponseSignal: null,
        claimGiftsResponseSignal: null,
        facebook: null,
        server: null,
        get_claimGiftsResponseSignal: function() {
            return this.server.claimGiftsResponseSignal
        },
        get_loginResponseSignal: function() {
            return this.server.loginResponseSignal
        },
        init: function() {
            if (this.facebook == null) {
                this.facebook = new no(d5.getProperty("gift_object_id"));
                this.server = new ga()
            }
            if (nK.user.facebookId != null) {
                this.getFriends()
            }
        },
        getFriends: function() {
            var i1 = this;
            var q = new cN();
            var i = {
                agarioFriends: [],
                allFriends: []
            };
            ((function(qY) {
                var i2;
                var js = function(q1) {
                    var q0 = new gR();
                    var qZ = [i1.facebook.getAllFriends(), i1.facebook.getInvitableFriends()];
                    var q2 = gR.whenAll(qZ);
                    q2._update.push({
                        async: q0,
                        linkf: function(q3) {
                            q0.handleResolve(q1(qZ[0]._val, qZ[1]._val))
                        }
                    });
                    return q0
                };
                i2 = {
                    then: js
                };
                return i2
            }(this))).then(function(i2, js) {
                i.agarioFriends = i2;
                i.allFriends = js.concat(i2);
                q.resolve(i)
            }).catchError(function(i2) {
                q.handleError(i2)
            });
            return q.boundPromise
        },
        getRequestableFriends: function() {
            var q = this;
            var i = new cN();
            this.getFriends().then(function(i2) {
                var i1 = q.removeFriends(i2, nK.user.userInfo.userGifts.get_requestedTo());
                i.resolve(i1)
            });
            return i.boundPromise
        },
        getGiftableFriends: function() {
            var q = this;
            var i = new cN();
            this.getFriends().then(function(i2) {
                if (nK.user.userInfo != null) {
                    var i1 = q.removeFriends(i2, nK.user.userInfo.userGifts.get_sentTo());
                    i.resolve(i1)
                } else {
                    i.handleError("Not logged in!")
                }
            });
            return i.boundPromise
        },
        getInboxItems: function() {
            var i2 = this;
            var i1 = new cN();
            var i;
            var q;
            ((function(qZ) {
                var js;
                var qY = function(q2) {
                    var q1 = new gR();
                    var q0 = [i2.getFriends(), i2.facebook.getAppRequests()];
                    var q3 = gR.whenAll(q0);
                    q3._update.push({
                        async: q1,
                        linkf: function(q4) {
                            q1.handleResolve(q2(q0[0]._val, q0[1]._val))
                        }
                    });
                    return q1
                };
                js = {
                    then: qY
                };
                return js
            }(this))).then(function(q3, js) {
                var q0 = [];
                i = i2.getClaimableFakeUser();
                if (i != null) {
                    var q4 = i2.getClaimableFakeFriend();
                    q0.push(new cF({
                        friend: q4,
                        type: jW.GIFT,
                        gift: i
                    }))
                }
                var q2 = 0;
                var q1 = q3.allFriends;
                while (q2 < q1.length) {
                    var qY = q1[q2];
                    ++q2;
                    i = i2.getClaimableById(qY.id);
                    if (i != null) {
                        if (i2.getFacebookRequestFromUsers(i.get_facebookIdFrom()) != null) {
                            qY.canReceiveGift = !i2.giftSentTo(qY.id);
                            var q5 = new cF({
                                friend: qY,
                                type: jW.GIFT,
                                gift: i
                            });
                            q0.push(q5)
                        } else {
                            null
                        }
                    } else {
                        q = i2.getRequestedById(qY.id);
                        if (q && !i2.giftSentTo(qY.id)) {
                            if (i2.getFacebookRequestFromUsers(qY.id) != null) {
                                var qZ = new cF({
                                    friend: qY,
                                    type: jW.GIFT_REQUEST,
                                    gift: null
                                });
                                q0.push(qZ)
                            } else {
                                null
                            }
                        }
                    }
                }
                i1.resolve(q0)
            });
            return i1.boundPromise
        },
        claimGifts: function(i) {
            var q = this;
            this.facebook.getAppRequests().then(function(i1) {
                if (i1 != null) {
                    var qY = "";
                    var i2 = q.getClaimableFakeFriend();
                    var q1 = 0;
                    while (q1 < i.length) {
                        var q0 = i[q1];
                        ++q1;
                        if (q0.id == i2.id) {
                            var js = nK.models.giftingFakeUser.get("fictionalGiftRequestId");
                            qY += js
                        } else {
                            var qZ = q.getFacebookRequestFromUsers(q0.id);
                            if (qZ != null) {
                                qY += qZ.id
                            } else {
                                null
                            }
                        }
                        q.removeClaimable(q0.id)
                    }
                    q.server.claimGifts(qY)
                }
            })
        },
        sendGifts: function(q2) {
            var q0 = this;
            var q = new cN();
            var i1 = "";
            var q1 = 0;
            var qY = q2.length;
            while (q1 < qY) {
                var js = q1++;
                i1 += q2[js].id + (js < q2.length - 1 ? "," : "")
            }
            var qZ = dk.text("gift_facebook_popup_send_title");
            var i2 = dk.text("gift_facebook_popup_send_message");
            this.facebook.sendGifts(i1, qZ, i2).then(function(q3) {
                if (q3) {
                    var q7 = "";
                    var i = 0;
                    var q6 = q3.to.length;
                    while (i < q6) {
                        var q8 = i++;
                        q7 += q0.fullGiftToken(q3.to[q8], q3.request);
                        if (q8 < q3.to.length - 1) {
                            q7 += ","
                        } else {
                            q7 += ""
                        }
                    }
                    var q9 = 0;
                    var q4 = q2.length;
                    while (q9 < q4) {
                        var q5 = q9++;
                        q0.addSentTo(q2[q5].id)
                    }
                    q0.consumeRequests(q2);
                    q0.server.sendGifts(q7)
                }
                q.resolve(q3)
            });
            return q.boundPromise
        },
        requestGifts: function(i1) {
            var js = this;
            var q0 = new cN();
            var qY = dk.text("gift_facebook_popup_request_title");
            var q = dk.text("gift_facebook_popup_request_message");
            var i = "";
            var qZ = 0;
            while (qZ < i1.length) {
                var i2 = i1[qZ];
                ++qZ;
                if (i != "") {
                    i += ","
                }
                i += i2.id
            }
            this.facebook.sendGiftRequests(i, q, q).then(function(q1) {
                if (q1) {
                    var q6 = "";
                    var q7 = 0;
                    var q5 = q1.to.length;
                    while (q7 < q5) {
                        var q4 = q7++;
                        q6 += js.fullGiftToken(q1.to[q4], q1.request);
                        if (q4 < q1.to.length - 1) {
                            q6 += ","
                        } else {
                            q6 += ""
                        }
                    }
                    var q3 = 0;
                    while (q3 < i1.length) {
                        var q2 = i1[q3];
                        ++q3;
                        js.addRequestedTo(q2.id)
                    }
                    js.server.requestGifts(q6)
                }
                q0.resolve(q1)
            }).catchError(function(q1) {
                q0.resolve(false)
            });
            return q0.boundPromise
        },
        consumeRequests: function(i) {
            var q = this;
            this.facebook.getAppRequests().then(function(i2) {
                if (i2 != null) {
                    var js = "";
                    var q1 = 0;
                    while (q1 < i.length) {
                        var qZ = i[q1];
                        ++q1;
                        var q0 = i2.data;
                        var i1 = 0;
                        while (i1 < q0.length) {
                            var qY = q0[i1];
                            ++i1;
                            if (qY.from.id == qZ.id) {
                                if (js != "") {
                                    js += ","
                                }
                                js += kr.string(qY.id)
                            }
                        }
                    }
                    q.server.consumeRequests(js)
                }
            })
        },
        clearData: function() {
            if (this.facebook != null) {
                this.facebook.clearData()
            }
        },
        removeClaimable: function(i) {
            var i2 = 0;
            var i1 = nK.user.userInfo.userGifts.get_claimable();
            while (i2 < i1.length) {
                var q = i1[i2];
                ++i2;
                if (q.get_facebookIdFrom() == i) {
                    var js = nK.user.userInfo.userGifts.get_claimable();
                    cj.remove(js, q);
                    null
                }
            }
        },
        removeDuplicates: function() {
            this.facebook.removeDuplicateAppRequests()
        },
        clearPendingRequests: function() {
            var i = this;
            this.getFBAppRequests().then(function(q1) {
                var qZ = [];
                var qY = 0;
                while (qY < q1.length) {
                    var i2 = q1[qY];
                    ++qY;
                    var q = i.getClaimableById(i2.from.id);
                    var js = i.getRequestedById(i2.from.id);
                    if (!js && q == null && (i2.data == "gift" || i2.data == "gift_request")) {
                        qZ.push("/" + kr.string(i2.id))
                    }
                }
                var i1 = 0;
                while (i1 < qZ.length) {
                    var q0 = qZ[i1];
                    ++i1;
                    i.deleteFBAppRequest(q0)
                }
            })
        },
        getFBAppRequests: function() {
            var i = new cN();
            this.facebook.getAppRequests().then(function(q) {
                i.resolve(n0.__cast(q.data, Array))
            });
            return i.boundPromise
        },
        deleteFBAppRequest: function(i) {
            this.facebook.deleteAppRequest(i)
        },
        giftSentTo: function(i) {
            return (function(i1) {
                var q;
                var i2 = nK.user.userInfo.userGifts.get_sentTo();
                q = cj.indexOf(i2, i, 0);
                return q
            }(this)) > -1
        },
        addSentTo: function(i) {
            nK.user.userInfo.userGifts.get_sentTo().push(i)
        },
        addRequestedTo: function(i) {
            nK.user.userInfo.userGifts.get_requestedTo().push(i)
        },
        removeFriends: function(i1, q) {
            var i = {
                allFriends: i1.allFriends.slice(),
                agarioFriends: i1.agarioFriends.slice()
            };
            var i2 = 0;
            while (i2 < q.length) {
                var js = q[i2];
                ++i2;
                this.removeFriend(i, js)
            }
            return i
        },
        removeFriend: function(i2, q) {
            var q0 = 0;
            var qZ = i2.agarioFriends;
            while (q0 < qZ.length) {
                var qY = qZ[q0];
                ++q0;
                if (qY.id == q) {
                    cj.remove(i2.agarioFriends, qY)
                }
            }
            var js = 0;
            var i = i2.allFriends;
            while (js < i.length) {
                var i1 = i[js];
                ++js;
                if (i1.id == q) {
                    cj.remove(i2.allFriends, i1)
                }
            }
        },
        getFacebookRequestFromUsers: function(i) {
            var js = this.facebook.getAppRequestsObject();
            if (js == null) {
                return null
            }
            var i2 = 0;
            var i1;
            i1 = n0.__cast(js.data, Array);
            while (i2 < i1.length) {
                var q = i1[i2];
                ++i2;
                if (q.from.id == i) {
                    return q
                }
            }
            return null
        },
        getClaimableFakeFriend: function() {
            var q = nK.models.giftingFakeUser.get("fictionalPlayerFbId");
            var i = nK.models.giftingFakeUser.get("fictionalPlayerName");
            var i1 = nK.models.giftingFakeUser.get("fictionalGiftRequestId");
            var js = nK.models.giftingFakeUser.get("fictionalPlayerAvatarFilename");
            var i2 = new g7({
                id: q,
                name: i,
                picture: {
                    data: {
                        url: js
                    }
                },
                canReceiveGift: false
            });
            return i2
        },
        getClaimableFakeUser: function() {
            var q = nK.models.giftingFakeUser.get("fictionalPlayerFbId");
            var i = nK.models.giftingFakeUser.get("fictionalPlayerName");
            var i2 = nK.models.giftingFakeUser.get("fictionalGiftRequestId");
            var qZ = nK.models.giftingFakeUser.get("fictionalPlayerAvatarFilename");
            if (nK.user.userInfo == null || nK.user.userInfo.userGifts == null) {
                return null
            }
            var qY = 0;
            var js = nK.user.userInfo.userGifts.get_claimable();
            while (qY < js.length) {
                var i1 = js[qY];
                ++qY;
                if (i1.get_facebookIdFrom() == q) {
                    return i1
                }
            }
            return null
        },
        getClaimableById: function(i2) {
            if (nK.user.userInfo == null) {
                return null
            }
            var i1 = 0;
            var q = nK.user.userInfo.userGifts.get_claimable();
            while (i1 < q.length) {
                var i = q[i1];
                ++i1;
                if (i.get_facebookIdFrom() == i2) {
                    return i
                }
            }
            return null
        },
        getRequestedById: function(i2) {
            if (nK.user.userInfo == null) {
                return false
            }
            var i1 = 0;
            var q = nK.user.userInfo.userGifts.get_requestedFrom();
            while (i1 < q.length) {
                var i = q[i1];
                ++i1;
                if (i == i2) {
                    return true
                }
            }
            return false
        },
        fullGiftToken: function(q, i) {
            return i + "_" + q
        },
        __class__: n8,
        __properties__: {
            get_claimGiftsResponseSignal: "get_claimGiftsResponseSignal",
            get_loginResponseSignal: "get_loginResponseSignal"
        }
    };
    var g7 = function(i) {
        this.id = i.id;
        this.name = i.name;
        if (i.picture != null) {
            this.picture = i.picture.data.url
        } else {
            this.picture = null
        }
        this.canReceiveGift = i.canReceiveGift
    };
    nt["agario.module.gift.model.data.Friend"] = g7;
    g7.__name__ = ["agario", "module", "gift", "model", "data", "Friend"];
    g7.prototype = {
        id: null,
        name: null,
        picture: null,
        selected: null,
        canReceiveGift: null,
        __class__: g7
    };
    var jW = nt["agario.module.gift.model.data.GiftType"] = {
        __ename__: ["agario", "module", "gift", "model", "data", "GiftType"],
        __constructs__: ["GIFT", "FREE_GIFT", "GIFT_REQUEST"]
    };
    jW.GIFT = ["GIFT", 0];
    jW.GIFT.toString = ea;
    jW.GIFT.__enum__ = jW;
    jW.FREE_GIFT = ["FREE_GIFT", 1];
    jW.FREE_GIFT.toString = ea;
    jW.FREE_GIFT.__enum__ = jW;
    jW.GIFT_REQUEST = ["GIFT_REQUEST", 2];
    jW.GIFT_REQUEST.toString = ea;
    jW.GIFT_REQUEST.__enum__ = jW;
    var cF = function(i) {
        this.date = new Date();
        this.gift = i.gift;
        this.type = i.type;
        this.friend = i.friend
    };
    nt["agario.module.gift.model.data.InboxItem"] = cF;
    cF.__name__ = ["agario", "module", "gift", "model", "data", "InboxItem"];
    cF.prototype = {
        friend: null,
        gift: null,
        type: null,
        date: null,
        __class__: cF
    };
    var no = function(i) {
        this.cacheResults = true;
        this.giftObjectId = i
    };
    nt["agario.module.gift.model.proxies.FacebookProxy"] = no;
    no.__name__ = ["agario", "module", "gift", "model", "proxies", "FacebookProxy"];
    no.prototype = {
        cacheResults: null,
        allFriends: null,
        invitableFriends: null,
        giftObjectId: null,
        appRequests: null,
        getAllFriends: function() {
            var i1 = this;
            if (this.allFriends == null || !this.cacheResults) {
                var q = this.getFacebookFriends(this.allFriends, "me/friends");
                q.then(function(i2) {
                    i1.allFriends = i2
                });
                return q
            } else {
                var i = new cN();
                i.resolve(this.allFriends);
                return i.boundPromise
            }
        },
        getInvitableFriends: function() {
            var i1 = this;
            if (this.invitableFriends == null || !this.cacheResults) {
                var q = this.getFacebookFriends(this.invitableFriends, "me/invitable_friends");
                q.then(function(i2) {
                    i1.invitableFriends = i2
                });
                return q
            } else {
                var i = new cN();
                i.resolve(this.invitableFriends);
                return i.boundPromise
            }
        },
        sendGiftRequests: function(i, i1, q) {
            var i2 = new cN();
            this.callFacebookUI("askfor", i, i1, q).then(function(js) {
                if (js != null && !js.error_message) {
                    i2.resolve(js)
                } else {
                    i2.resolve(null)
                }
            });
            return i2.boundPromise
        },
        sendGifts: function(i, i2, q) {
            var i1 = new cN();
            this.callFacebookUI("send", i, i2, q).then(function(js) {
                if (js != null && !js.error_message) {
                    i1.resolve(js)
                } else {
                    i1.resolve(null)
                }
            });
            return i1.boundPromise
        },
        getAppRequests: function() {
            var i = new cN();
            if (this.appRequests != null) {
                i.resolve(this.appRequests)
            } else {
                return this.updateAppRequests()
            }
            return i.boundPromise
        },
        getAppRequestsObject: function() {
            return this.appRequests
        },
        removeDuplicateAppRequests: function() {
            if (this.appRequests == null) {
                return
            }
            var i = [];
            var qZ;
            qZ = n0.__cast(this.appRequests.data, Array);
            var js = [];
            var i2 = 0;
            while (i2 < qZ.length) {
                var q = qZ[i2];
                ++i2;
                if ((function(q2) {
                        var q1;
                        var q0 = q.from.id + q.data;
                        q1 = cj.indexOf(i, q0, 0);
                        return q1
                    }(this)) == -1) {
                    i.push(q.from.id + q.data)
                } else {
                    js.push("/" + kr.string(q.id))
                }
            }
            var i1 = 0;
            while (i1 < js.length) {
                var qY = js[i1];
                ++i1;
                this.deleteAppRequest(qY)
            }
        },
        deleteAppRequest: function(i) {
            FB.api(i, "DELETE", function(q) {
                null
            })
        },
        clearData: function() {
            this.allFriends = null;
            this.invitableFriends = null;
            this.appRequests = null
        },
        updateAppRequests: function() {
            var q = this;
            var i = new cN();
            var i1 = "undefined" === typeof FB;
            if (i1) {
                i.handleError("FB API Error!")
            } else {
                FB.api("/me/apprequests", "GET", {}, function(i2) {
                    if (i2 != null && !i2.error_message) {
                        q.appRequests = i2;
                        i.resolve(q.appRequests)
                    } else {
                        i.resolve(null)
                    }
                })
            }
            return i.boundPromise
        },
        getFacebookFriends: function(i, q) {
            var i1 = new cN();
            if (i == null) {
                i = [];
                this.callFacebookAPI(q, "GET", null, 0, 5000).then(function(i2) {
                    if (i2 != null && i2.data != null) {
                        var qY = i2.data;
                        var qZ = 0;
                        while (qZ < qY.length) {
                            var js = qY[qZ];
                            ++qZ;
                            i.push(new g7(js))
                        }
                    }
                    i1.resolve(i)
                }).catchError(function(i2) {
                    i1.handleError(i2)
                })
            } else {
                i1.resolve(i)
            }
            return i1.boundPromise
        },
        callFacebookAPI: function(i1, qZ, q, qY, i) {
            if (i == null) {
                i = 0
            }
            if (qY == null) {
                qY = 0
            }
            var i2 = new cN();
            var js = "undefined" === typeof FB;
            if (js) {
                i2.handleError("FB API Error!")
            } else {
                FB.api(i1 + "?limit=" + i, qZ, {
                    fields: "id, name, picture, canReceiveGift"
                }, function(q0) {
                    if (q0 != null) {
                        i2.resolve(q0)
                    } else {
                        i2.handleError("Error calling: FP.api('%apiCall%', '%method%', '%object%'")
                    }
                })
            }
            return i2.boundPromise
        },
        callFacebookUI: function(q, qY, js, i) {
            var i2 = new cN();
            var i1;
            if (q != null) {
                i1 = {
                    method: "apprequests",
                    to: qY,
                    action_type: q,
                    object_id: this.giftObjectId,
                    title: js,
                    message: i,
                    data: q == "send" ? "gift" : "gift_request"
                }
            } else {
                i1 = {
                    method: "apprequests"
                }
            }
            FB.ui(i1, function(qZ) {
                if (qZ != null) {
                    i2.resolve(qZ)
                } else {
                    i2.handleError("Error calling: FP.ui({method: 'apprequests', to:%to%, action_type:%action%, object_id:%object_id%, title:%title%, message:%message%});")
                }
            });
            return i2.boundPromise
        },
        __class__: no
    };
    var ga = function() {
        this.server = l4.getService(pu);
        this.server.register(101, oT(this, this.onClaimGiftsResponse_Handler));
        this.server.register(11, oT(this, this.onLoginResponse_Handler));
        this.claimGiftsResponseSignal = new qt();
        this.loginResponseSignal = new qv()
    };
    nt["agario.module.gift.model.proxies.GiftingServerProxy"] = ga;
    ga.__name__ = ["agario", "module", "gift", "model", "proxies", "GiftingServerProxy"];
    ga.prototype = {
        claimGiftsResponseSignal: null,
        loginResponseSignal: null,
        server: null,
        onClaimGiftsResponse_Handler: function(i, q) {
            this.claimGiftsResponseSignal.dispatch(n0.__cast(q, mP))
        },
        onLoginResponse_Handler: function(i, q) {},
        claimGifts: function(i) {
            var q = new aI();
            q.addGiftIds(i);
            this.server.sendMessage(100, q)
        },
        sendGifts: function(i) {
            var q = new jZ();
            q.set_giftIds(i.split(","));
            this.server.sendMessage(102, q)
        },
        requestGifts: function(i) {
            var q = new be();
            q.set_giftIds(i.split(","));
            this.server.sendMessage(104, q)
        },
        consumeRequests: function(q) {
            var i = new pl();
            i.set_requestIds(q.split(","));
            this.server.sendMessage(103, i)
        },
        __class__: ga
    };
    var d4 = function() {
        ol.call(this, "giftCenterDialog");
        this.maxWidth = 800;
        this.maxHeight = 550;
        this.createUIElements();
        this.buildUI()
    };
    nt["agario.module.gift.views.GiftCenterDialog"] = d4;
    d4.__name__ = ["agario", "module", "gift", "views", "GiftCenterDialog"];
    d4.__super__ = ol;
    d4.prototype = lP(ol.prototype, {
        sendFreeCoinsView: null,
        sendRequestView: null,
        shower: null,
        disconnectDialog: null,
        sendGiftView: null,
        inboxView: null,
        tabs: null,
        tabContainer: null,
        backButton: null,
        giftTab: null,
        inboxTab: null,
        disableKeyboard: null,
        enable: function() {
            ol.prototype.enable.call(this);
            this.closeButton.set_enabled(true)
        },
        showRequestsView: function(i) {
            this.sendRequestView.show(i);
            this.sendRequestView.selectFirstFriends(50)
        },
        showGiftableFriends: function(i) {
            this.sendFreeCoinsView.show(i)
        },
        reset: function() {
            this.updateCounter(this.inboxView.getTotalItems());
            if (this.inboxView.getTotalItems() > 0) {
                this.openInbox();
                return j.INBOX
            } else {
                this.showSendView();
                return j.GIFTS_REQUESTS
            }
        },
        updateInbox: function(i) {
            this.inboxView.updateData(i);
            this.updateCounter(i.length)
        },
        updateCounter: function(i) {
            if (this.inboxTab != null) {
                this.inboxTab.set_counter(i)
            }
        },
        confirmInboxElementDisable: function(i) {
            this.inboxView.confirmElementDisable(i);
            this.inboxView.clearAccepted();
            this.disableInboxButton()
        },
        reactivateInboxButton: function() {
            this.inboxView.activateButton()
        },
        disableInboxButton: function() {
            this.inboxView.disableButton()
        },
        clearInboxAccepted: function() {
            this.inboxView.clearAccepted()
        },
        playCoinShowerAnimation: function() {
            this.shower.play()
        },
        playCoinSplashAnimation: function(q) {
            var i = new a1(15);
            i.set_x(q.x);
            i.set_y(q.y);
            this.addChild(i);
            i.play()
        },
        openRequestGifts: function() {
            this.tabContainer.setTab(0);
            this.closeOnEscape = false;
            this.inboxView.set_visible(false);
            this.sendGiftView.set_visible(false);
            this.backButton.set_visible(true);
            this.tabContainer.set_visible(false);
            this.dispatchEvent(new dr("agario.module.gift.events.ViewEvent.request_friends"))
        },
        openInbox: function() {
            this.setInboxTab()
        },
        dispose: function() {},
        destroy: function() {
            if (this.disconnectDialog != null) {
                this.disconnectDialog.removeEventListener("close", oT(this, this.closeDisconnect))
            }
            this.sendGiftView.sendFreeCoinsBtn.removeEventListener("click", oT(this, this.handleSendFreeCoinsClick));
            this.sendGiftView.requestGiftsBtn.removeEventListener("click", oT(this, this.handleSendRequestClick));
            this.sendGiftView.dispose();
            this.inboxView.dispose();
            this.sendFreeCoinsView.dispose()
        },
        fadeOutFriendElements: function(i) {
            if (this.sendFreeCoinsView.get_visible()) {
                this.sendFreeCoinsView.fadeOutElements()
            } else {
                if (this.sendRequestView.get_visible()) {
                    this.sendRequestView.fadeOutElements()
                }
            }
        },
        initialize: function() {
            ol.prototype.initialize.call(this);
            this.closeOnEscape = true;
            nK.get_events().addEventListener("ShopEvent::connectionLost", oT(this, this.onConnectionLost));
            nK.get_events().addEventListener("userLoggedOut", oT(this, this.onConnectionLost));
            this.addUIelementsToStage()
        },
        createUIElements: function() {
            this.sendGiftView = new ig();
            this.inboxView = new n6(this.maxWidth | 0, this.maxHeight | 0);
            this.sendFreeCoinsView = new b0();
            this.sendRequestView = new Z()
        },
        addUIelementsToStage: function() {
            this.addChild(this.tabContainer);
            this.tabContainer.set_x((this.maxWidth - this.tabContainer.get_width()) / 2);
            this.tabContainer.set_y(75);
            this.giftTab = new cM("SendGift", dk.text("menu_gift_center_send_gift"));
            this.giftTab.maxWidth = 200;
            this.inboxTab = new c7("Inbox", dk.text("menu_gift_center_inbox"));
            this.inboxTab.maxWidth = 200;
            this.addTabPage(this.giftTab, this.sendGiftView);
            this.addTabPage(this.inboxTab, this.inboxView);
            this.addChild(this.sendGiftView);
            this.sendGiftView.sendFreeCoinsBtn.addEventListener("click", oT(this, this.handleSendFreeCoinsClick));
            this.sendGiftView.requestGiftsBtn.addEventListener("click", oT(this, this.handleSendRequestClick));
            this.addChild(this.inboxView);
            this.addChild(this.sendFreeCoinsView);
            this.addChild(this.sendRequestView);
            this.addChild(this.backButton);
            this.addChild(this.shower)
        },
        buildUI: function() {
            this.tabs = [];
            this.tabContainer = new lU();
            this.tabContainer.set_maxWidth(this.maxWidth);
            this.tabContainer.onChange.add(oT(this, this.onTabChange));
            this.sendGiftView.maxWidth = this.maxWidth;
            this.sendGiftView.maxHeight = this.maxHeight;
            this.sendGiftView.set_x((this.maxWidth - this.sendGiftView.maxWidth) / 2);
            this.inboxView.maxWidth = this.maxWidth;
            this.inboxView.maxHeight = this.maxHeight;
            this.inboxView.set_x((this.maxWidth - this.inboxView.maxWidth) / 2);
            this.inboxView.set_visible(false);
            this.sendFreeCoinsView.maxWidth = this.maxWidth;
            this.sendFreeCoinsView.maxHeight = this.maxHeight;
            this.sendFreeCoinsView.set_x((this.maxWidth - this.sendFreeCoinsView.maxWidth) / 2);
            this.sendFreeCoinsView.set_visible(false);
            this.sendRequestView.maxWidth = this.maxWidth;
            this.sendRequestView.maxHeight = this.maxHeight;
            this.sendRequestView.set_x((this.maxWidth - this.sendRequestView.maxWidth) / 2);
            this.sendRequestView.set_visible(false);
            this.backButton = new L();
            this.backButton.set_visible(false);
            this.backButton.addEventListener("click", oT(this, this.handleBackButton));
            this.backButton.set_x(30);
            this.backButton.set_y(15);
            this.shower = new il(300, this.maxWidth);
            this.dispatchEvent(new hM("open", true))
        },
        addTabPage: function(i, q) {
            this.tabContainer.addTab(i);
            this.tabs.push(q)
        },
        handleSendFreeCoinsClick: function(i) {
            this.closeOnEscape = false;
            this.sendGiftView.set_visible(false);
            this.sendFreeCoinsView.set_visible(false);
            this.backButton.set_visible(true);
            this.tabContainer.set_visible(false);
            this.dispatchEvent(new dr("agario.module.gift.events.ViewEvent.request_friends_to-send"))
        },
        handleSendRequestClick: function(i) {
            this.openRequestGifts()
        },
        handleBackButton: function(i) {
            this.showSendView()
        },
        onEscapePress: function() {
            if (this.disableKeyboard) {
                return true
            } else {
                if (!this.closeOnEscape) {
                    this.handleBackButton(null);
                    return true
                }
            }
            return false
        },
        showInbox: function() {
            this.closeOnEscape = true;
            this.inboxView.set_visible(true);
            this.sendGiftView.set_visible(false);
            this.sendFreeCoinsView.set_visible(false);
            this.sendRequestView.set_visible(false);
            this.backButton.set_visible(false);
            this.tabContainer.set_visible(true)
        },
        showSendView: function() {
            this.closeOnEscape = true;
            this.sendGiftView.set_visible(true);
            this.sendFreeCoinsView.set_visible(false);
            this.sendRequestView.set_visible(false);
            this.backButton.set_visible(false);
            this.inboxView.set_visible(false);
            this.tabContainer.set_visible(true);
            this.tabContainer.setTab(0)
        },
        onTabChange: function(i) {
            this.changeView()
        },
        setInboxTab: function() {
            this.tabContainer.setTab(1);
            this.changeView()
        },
        changeView: function() {
            var i;
            i = this.tabContainer.current.id;
            if (i == "SendGift") {
                this.showSendView()
            } else {
                this.showInbox()
            }
        },
        onConnectionLost: function(i) {
            nK.views.closeAllViews(qm);
            this.disable();
            this.disconnectDialog = new oo();
            nK.views.openView(this.disconnectDialog, {
                priority: 5,
                animate: true,
                allowClickClose: false,
                callerView: this
            });
            nK.get_events().removeEventListener("ShopEvent::connectionLost", oT(this, this.onConnectionLost));
            nK.get_events().removeEventListener("userLoggedOut", oT(this, this.onConnectionLost));
            this.disconnectDialog.addEventListener("close", oT(this, this.closeDisconnect))
        },
        closeDisconnect: function(i) {
            nK.views.closeTopView()
        },
        onAddedToStage: function(i) {
            ol.prototype.onAddedToStage.call(this, i);
            this.dispatchEvent(new hM("open"))
        },
        disable: function() {
            this.closeOnEscape = true;
            ol.prototype.disable.call(this)
        },
        toggleKeyboard: function(i) {
            this.disableKeyboard = !i;
            this.sendFreeCoinsView.disableKeyboard = this.disableKeyboard;
            this.sendRequestView.disableKeyboard = this.disableKeyboard
        },
        __class__: d4
    });
    var g1 = function() {
        this.currentPage = 0;
        hC.call(this)
    };
    nt["agario.module.gift.views.GiftFriendSelectorView"] = g1;
    g1.__name__ = ["agario", "module", "gift", "views", "GiftFriendSelectorView"];
    g1.__super__ = hC;
    g1.prototype = lP(hC.prototype, {
        friends: null,
        selectAllBtn: null,
        selectAllBox: null,
        selectAllLabel: null,
        friendsData: null,
        noFriendsContainer: null,
        hasFriendsContainer: null,
        titleLabel: null,
        noFriendsLabel: null,
        searchField: null,
        confirmBtn: null,
        leftButton: null,
        rightButton: null,
        paginationController: null,
        friendListContainer: null,
        tabContainer: null,
        giftingIcon: null,
        searchIcon: null,
        currentPage: null,
        amountOfFriends: null,
        titleText: null,
        noFriendsText: null,
        buttonText: null,
        disableKeyboard: null,
        initialize: function() {
            if (this._initialized) {
                return
            }
            hC.prototype.initialize.call(this);
            this.noFriendsContainer = new cY();
            this.hasFriendsContainer = new cY();
            this.addChild(this.noFriendsContainer);
            this.addChild(this.hasFriendsContainer);
            this.tabContainer = new lU();
            this.tabContainer.set_maxWidth(this.maxWidth);
            this.addChild(this.tabContainer);
            this.tabContainer.onChange.add(oT(this, this.onTabChange));
            var i2 = new cM("AllFriends", dk.text("menu_outbox_all_friends"));
            i2.maxWidth = 200;
            this.tabContainer.addTab(i2);
            var i = new cM("AgarioFriends", dk.text("menu_outbox_agar_friends"));
            i.maxWidth = 200;
            this.tabContainer.addTab(i);
            this.friendListContainer = new gw({
                w: 618,
                h: 320
            });
            this.addChild(this.friendListContainer);
            this.friendListContainer.rowsPerPage = 4;
            this.titleLabel = new m1({
                text: this.titleText,
                fontSize: 32,
                color: 3421236,
                width: 300,
                autoSize: 1,
                align: 0
            });
            this.titleLabel.set_height(this.titleLabel.get_textHeight() + 10);
            this.titleLabel.set_selectable(false);
            this.addChild(this.titleLabel);
            this.selectAllLabel = new m1({
                text: dk.text("menu_outbox_select_all"),
                fontSize: 15,
                color: 3421236,
                width: 100,
                autoSize: 1,
                align: 3
            });
            this.selectAllLabel.set_height(this.selectAllLabel.get_textHeight() + 10);
            this.selectAllLabel.set_selectable(false);
            this.hasFriendsContainer.addChild(this.selectAllLabel);
            this.noFriendsLabel = new m1({
                text: this.noFriendsText,
                fontSize: 20,
                color: 3421236,
                width: 600,
                autoSize: 0,
                align: 0
            });
            this.noFriendsLabel.set_height(this.noFriendsLabel.get_textHeight() + 10);
            this.noFriendsLabel.set_selectable(false);
            this.searchField = new ei();
            this.searchField.set_text(dk.text("filter_search_tag"));
            this.searchField.setTextFormat(new mC("Arial", 12, 3421236, true));
            this.searchField.set_height(this.searchField.get_textHeight() + 5);
            this.searchField.set_type(1);
            this.searchField.addEventListener("change", oT(this, this.focusOnSearch));
            this.addChild(this.searchField);
            this.paginationController = new kj();
            this.paginationController.gotoFirstButton = new jk();
            this.paginationController.gotoPreviousButton = new hg();
            this.paginationController.gotoNextButton = new hs();
            this.paginationController.gotoLastButton = new fU();
            this.paginationController.paginationItemClass = aM;
            this.hasFriendsContainer.addChild(this.paginationController);
            this.paginationController.set_currentPage(0);
            this.leftButton = new iC();
            this.hasFriendsContainer.addChild(this.leftButton);
            this.rightButton = new iC();
            this.rightButton.anchorCenter();
            this.rightButton.set_rotation(180);
            this.hasFriendsContainer.addChild(this.rightButton);
            this.leftButton.addEventListener("click", oT(this, this.onLeftButtonClick));
            this.rightButton.addEventListener("click", oT(this, this.onRightButtonClick));
            this.selectAllBtn = new n3();
            this.selectAllBtn.addEventListener("click", oT(this, this.onSelectAll));
            this.confirmBtn = new qK({
                labelUp: {
                    text: this.buttonText,
                    fontSize: 15
                },
                width: 130,
                height: 35
            });
            this.hasFriendsContainer.addChild(this.confirmBtn);
            this.giftingIcon = new el(nK.get_assets().getTexture("gifts_icon", "main_shop").get_bitmapData());
            this.addChild(this.giftingIcon);
            var i1 = this.giftingIcon;
            i1.set_scaleX(i1.get_scaleX() * 0.6);
            var q = this.giftingIcon;
            q.set_scaleY(q.get_scaleY() * 0.6);
            this.searchIcon = new el(nK.get_assets().getTexture("search_mini_icon", "main_shop").get_bitmapData());
            this.addChild(this.searchIcon);
            this.selectAllBox = new el(nK.get_assets().getTexture("checkbox", "main_shop").get_bitmapData());
            this.addChild(this.selectAllBox);
            this.noFriendsContainer.set_visible(false);
            this.addEventListener("agario.module.gift.events.ViewEvent.on_friend_selected", oT(this, this.changeSelectAllButton));
            this.friendListContainer.S_onChange.add(oT(this, this.onFriendListChange));
            this.paginationController.S_onChange.add(oT(this, this.onPaginationControllerChange));
            this.amountOfFriends = n0.__cast(nK.models.defaultGiftingSettings.get("amountOfFriendsDefaultSelected"), a)
        },
        show: function(i) {
            if (this.tabContainer != null && !this.get_visible()) {
                this.tabContainer.setTab(0)
            }
            this.friendsData = i;
            this.set_visible(true);
            if (this.searchField != null) {
                this.searchField.set_text(dk.text("filter_search_tag"))
            }
            this.resetContent()
        },
        position: function() {
            this.tabContainer.set_x((this.maxWidth - this.tabContainer.w) / 2);
            this.tabContainer.set_y(75);
            this.friendListContainer.set_x(Math.round((this.maxWidth - this.friendListContainer.w) * 0.5));
            this.friendListContainer.set_y(Math.round(this.tabContainer.get_y() + this.tabContainer.get_height() + 30));
            this.paginationController.set_y(Math.round(this.friendListContainer.get_y() + this.friendListContainer.get_height() - 10));
            this.paginationController.set_x(Math.round((this.maxWidth - this.paginationController.get_width()) * 0.5));
            this.leftButton.set_x(this.friendListContainer.get_x() - this.leftButton.get_width() - 10);
            this.rightButton.set_x(this.friendListContainer.get_x() + this.friendListContainer.w + 10);
            this.leftButton.set_y(this.friendListContainer.get_y() + (280 - this.leftButton.get_height()) * 0.5);
            this.rightButton.set_y(this.leftButton.get_y());
            this.selectAllBtn.set_x(30);
            this.selectAllBtn.set_y(Math.round(this.friendListContainer.get_y() + this.friendListContainer.get_height() - 15));
            this.selectAllBox.set_x(this.selectAllBtn.get_x());
            this.selectAllBox.set_y(this.selectAllBtn.get_y());
            this.hasFriendsContainer.addChild(this.selectAllBox);
            this.hasFriendsContainer.addChild(this.selectAllBtn);
            this.confirmBtn.set_x(this.maxWidth * 0.5 - this.confirmBtn.get_width() * 0.5);
            this.confirmBtn.set_y(this.maxHeight - this.confirmBtn.get_height() - 30);
            this.titleLabel.set_x((this.maxWidth - this.titleLabel.get_width()) * 0.5);
            this.titleLabel.set_y(15);
            this.selectAllLabel.set_x(this.selectAllBtn.get_x() + this.selectAllBtn.get_width() + 5);
            this.selectAllLabel.set_y(Math.round(this.friendListContainer.get_y() + this.friendListContainer.get_height() - 15));
            this.noFriendsLabel.set_x((this.maxWidth - this.noFriendsLabel.get_width()) * 0.5);
            this.noFriendsLabel.set_y(this.friendListContainer.get_y() + (this.friendListContainer.get_height() - this.noFriendsLabel.get_height()) * 0.5);
            this.searchField.set_x(this.maxWidth - this.searchField.get_width() - 50);
            this.searchField.set_y(this.tabContainer.get_y());
            this.giftingIcon.set_y(this.maxHeight - this.giftingIcon.get_height() - 20);
            this.giftingIcon.set_x(this.maxWidth - this.giftingIcon.get_width() - 40);
            this.searchIcon.set_y(this.searchField.get_y());
            this.searchIcon.set_x(this.searchField.get_x() + this.searchField.get_width() + 5);
            this.noFriendsContainer.get_graphics().clear();
            this.get_graphics().clear();
            this.noFriendsContainer.get_graphics().beginFill(16119285, 1);
            this.noFriendsContainer.get_graphics().drawRect(this.tabContainer.get_x(), this.friendListContainer.get_y(), this.tabContainer.get_width(), this.friendListContainer.get_height() + 50);
            this.noFriendsContainer.get_graphics().endFill();
            this.noFriendsContainer.addChild(this.noFriendsLabel);
            this.get_graphics().lineStyle(0.5, 3421236, 0.5);
            this.get_graphics().beginFill(0, 0);
            this.get_graphics().drawRoundRect(this.searchField.get_x() - 10, this.searchField.get_y() - 5, this.searchField.get_width() + 10, this.searchField.get_height() + 5, 15, 15);
            this.get_graphics().endFill();
            this.updateLayout()
        },
        _update: function() {
            this.rightButton.set_enabled(this.friendListContainer.currentPage < this.friendListContainer.totalPages - 1);
            this.leftButton.set_enabled(this.friendListContainer.currentPage > 0);
            this.leftButton.set_alpha(1);
            this.rightButton.set_alpha(1);
            if (!this.rightButton.get_enabled()) {
                this.rightButton.set_alpha(0.6)
            }
            if (!this.leftButton.get_enabled()) {
                this.leftButton.set_alpha(0.6)
            }
            return this
        },
        updateLayout: function() {
            if (this.friendListContainer.items.length == 0) {
                this.noFriendsContainer.set_visible(true);
                this.hasFriendsContainer.set_visible(false)
            } else {
                this.noFriendsContainer.set_visible(false);
                this.hasFriendsContainer.set_visible(true)
            }
        },
        loadContent: function() {
            if (this.currentCategory() == "AgarioFriends") {
                this.friends = this.friendsData.agarioFriends
            } else {
                this.friends = this.friendsData.allFriends
            }
            this.addFriendsToContainer(this.friends);
            this.currentPage = Math.round(l6.clamp(this.currentPage, 0, this.friendListContainer.totalPages - 1));
            this.friendListContainer.set_page(this.currentPage);
            this.onFriendListChange();
            this.position()
        },
        addFriendsToContainer: function(i) {
            this.friendListContainer.addArray(this.createItemsFromData(i))
        },
        currentCategory: function() {
            return this.tabContainer.current.id
        },
        createItemsFromData: function(js) {
            var q = [];
            if (js == null) {
                return q
            }
            var i2 = 0;
            var qY = js.length;
            while (i2 < qY) {
                var i1 = i2++;
                js[i1].selected = i1 < this.amountOfFriends;
                q.push(new ku(js[i1], {}))
            }
            return q
        },
        onRightButtonClick: function(i) {
            this.friendListContainer.next_page();
            this._update()
        },
        onLeftButtonClick: function(i) {
            this.friendListContainer.previous_page();
            this._update()
        },
        onTabChange: function(i) {
            this.loadContent();
            if (this.searchField.get_text() != dk.text("filter_search_tag")) {
                this.filterFriends()
            }
            this.friendListContainer.currentPage = 0
        },
        updateView: function() {
            this.currentPage = this.friendListContainer.currentPage;
            this.loadContent()
        },
        openTab: function(i) {
            this.paginationController.set_currentPage(0);
            this.tabContainer.setTabByName(i);
            this.loadContent()
        },
        resetContent: function() {
            this.paginationController.set_currentPage(0);
            this.currentPage = 0;
            this.friendListContainer.set_page(0)
        },
        onPaginationControllerChange: function() {
            this.friendListContainer.set_page(this.paginationController.currentPage);
            this._update()
        },
        onFriendListChange: function() {
            this.paginationController.set_totalPages(this.friendListContainer.totalPages);
            this.paginationController.set_currentPage(this.friendListContainer.currentPage);
            this._update()
        },
        selectFirstFriends: function(js) {
            var i2 = 0;
            var qY = this.friendListContainer.items.length;
            while (i2 < qY) {
                var q = i2++;
                var i1;
                i1 = n0.__cast(this.friendListContainer.items[q], ku);
                i1.toggleSelection(q < js)
            }
            this.dispatchEvent(new dr("agario.module.gift.events.ViewEvent.on_friend_selected"))
        },
        onSelectAll: function(q0) {
            var qY = !this.checkIfAllSelected();
            var qZ = this.friendListContainer.currentPage * this.friendListContainer.itemsPerPage;
            var i2 = qZ + this.friendListContainer.itemsPerPage - 1;
            var js = 0;
            var q1 = this.friendListContainer.items.length;
            while (js < q1) {
                var q = js++;
                var i1;
                i1 = n0.__cast(this.friendListContainer.items[q], ku);
                if (q >= qZ && q <= i2) {
                    i1.toggleSelection(qY)
                } else {
                    i1.toggleSelection(false)
                }
            }
            this.dispatchEvent(new dr("agario.module.gift.events.ViewEvent.on_friend_selected"))
        },
        changeSelectAllButton: function(i) {
            this.selectAllBtn.toggleBitmap(this.checkIfAllSelected())
        },
        checkIfAllSelected: function() {
            var q = true;
            var qY = this.friendListContainer.currentPage * this.friendListContainer.itemsPerPage;
            var js;
            if (this.friendListContainer.currentPage == this.friendListContainer.totalPages - 1) {
                if (this.friendListContainer.items.length % this.friendListContainer.itemsPerPage == 0) {
                    js = qY + this.friendListContainer.itemsPerPage
                } else {
                    js = qY + this.friendListContainer.items.length % this.friendListContainer.itemsPerPage
                }
            } else {
                js = qY + this.friendListContainer.itemsPerPage
            }
            var qZ = qY;
            while (qZ < js) {
                var i1 = qZ++;
                var i2;
                i2 = n0.__cast(this.friendListContainer.items[i1], ku);
                if (!i2.get_selected()) {
                    q = false
                }
            }
            return q
        },
        getSelected: function() {
            var q = [];
            var js = 0;
            var qY = this.friendListContainer.items.length;
            while (js < qY) {
                var i1 = js++;
                var i2;
                i2 = n0.__cast(this.friendListContainer.items[i1], ku);
                if (i2.get_selected()) {
                    q.push(i2)
                }
                if (q.length >= 50) {
                    break
                }
            }
            return q
        },
        getSelectedFriends: function() {
            var q = [];
            var i = this.getSelected();
            var i2 = 0;
            while (i2 < i.length) {
                var i1 = i[i2];
                ++i2;
                q.push(i1.friend)
            }
            return q
        },
        focusOnSearch: function(i) {
            eM.trace("text:", {
                fileName: "GiftFriendSelectorView.hx",
                lineNumber: 531,
                className: "agario.module.gift.views.GiftFriendSelectorView",
                methodName: "focusOnSearch",
                customParams: [this.searchField.get_text()]
            });
            if (this.searchField.get_text() == dk.text("filter_search_tag")) {
                this.searchField.set_text("")
            }
            this.filterFriends()
        },
        onSearch: function(i) {
            if (this.searchField.get_text() == dk.text("filter_search_tag")) {
                this.searchField.set_text("")
            }
            this.filterFriends()
        },
        filterFriends: function() {
            var q = this;
            if (this.friends == null) {
                return
            }
            if (this.searchField.get_text() == dk.text("filter_search_tag")) {
                this.searchField.set_text("")
            }
            eM.trace("Search:", {
                fileName: "GiftFriendSelectorView.hx",
                lineNumber: 573,
                className: "agario.module.gift.views.GiftFriendSelectorView",
                methodName: "filterFriends",
                customParams: [this.searchField.get_text()]
            });
            var i = this.friends.filter(function(i1) {
                return i1.name.toLowerCase().indexOf(q.searchField.get_text().toLowerCase()) >= 0
            });
            this.updateFriendListContent(this.createItemsFromData(i), false)
        },
        updateFriendListContent: function(i, q) {
            if (q == null) {
                q = true
            }
            this.friendListContainer.addArray(i);
            this.resetContent();
            if (q) {
                this.updateLayout()
            } else {
                this.paginationController.set_y(Math.round(this.friendListContainer.get_y() + this.friendListContainer.get_height() - 10));
                this.paginationController.set_x(Math.round((this.maxWidth - this.paginationController.get_width()) * 0.5))
            }
        },
        fadeOutElements: function() {
            var q = this.getSelected();
            var i1 = 0;
            while (i1 < q.length) {
                var i = q[i1];
                ++i1;
                i.fadeOut()
            }
        },
        dispose: function() {
            hC.prototype.dispose.call(this);
            this.removeEventListener("agario.module.gift.events.ViewEvent.on_friend_selected", oT(this, this.changeSelectAllButton));
            this.friendListContainer.S_onChange.remove(oT(this, this.onFriendListChange));
            this.paginationController.S_onChange.remove(oT(this, this.onPaginationControllerChange))
        },
        __class__: g1
    });
    var n6 = function(i, q) {
        this.currentPage = 0;
        hC.call(this);
        this._width = i;
        this._height = q
    };
    nt["agario.module.gift.views.GiftInboxView"] = n6;
    n6.__name__ = ["agario", "module", "gift", "views", "GiftInboxView"];
    n6.__super__ = hC;
    n6.prototype = lP(hC.prototype, {
        _width: null,
        _height: null,
        noItemsContainer: null,
        hasItemsContainer: null,
        titleLabel: null,
        noFriendsTitleLabel: null,
        noFriendsDescriptionLabel: null,
        _btnAcceptAll: null,
        _btnRequestGifts: null,
        leftButton: null,
        rightButton: null,
        _listContainer: null,
        paginationController: null,
        noGiftsIcon: null,
        giftsIcon: null,
        items: null,
        currentPage: null,
        show: function() {
            this.set_visible(true);
            this.updateItems()
        },
        hide: function() {
            this.set_visible(false)
        },
        updateData: function(i) {
            this.items = i;
            this.updateItems()
        },
        clearAccepted: function() {
            var js = 0;
            var i2 = this._listContainer.items;
            while (js < i2.length) {
                var i1 = i2[js];
                ++js;
                var q;
                q = n0.__cast(i1, Y);
                if (q.isAccepted) {
                    q.disableCell()
                }
            }
        },
        getTotalItems: function() {
            if (this.items == null) {
                return 0
            } else {
                return this.items.length
            }
        },
        initialize: function() {
            hC.prototype.initialize.call(this);
            this.noItemsContainer = new cY();
            this.hasItemsContainer = new cY();
            this.addChild(this.noItemsContainer);
            this.addChild(this.hasItemsContainer);
            this.titleLabel = new m1({
                text: dk.text("menu_gift_center_inbox"),
                fontSize: 32,
                color: 3421236,
                width: 300,
                autoSize: 1,
                align: 0
            });
            this.titleLabel.set_height(this.titleLabel.get_textHeight() + 10);
            this.titleLabel.set_selectable(false);
            this.addChild(this.titleLabel);
            this.noFriendsTitleLabel = new m1({
                text: dk.text("menu_gift_center_no_gifts_title"),
                fontSize: 24,
                color: 3421236,
                width: 500,
                autoSize: 0,
                align: 0
            });
            this.noFriendsTitleLabel.set_height(this.noFriendsTitleLabel.get_textHeight() + 10);
            this.noFriendsTitleLabel.set_selectable(false);
            this.noFriendsDescriptionLabel = new m1({
                text: dk.text("menu_gift_center_request_gift_message"),
                fontSize: 16,
                color: 3421236,
                width: 500,
                autoSize: 0,
                align: 0
            });
            this.noFriendsDescriptionLabel.set_height(this.noFriendsDescriptionLabel.get_textHeight() + 10);
            this.noFriendsDescriptionLabel.set_selectable(false);
            this._btnAcceptAll = new qK({
                labelUp: {
                    fontSize: 15,
                    text: dk.text("menu_gift_center_accept_all")
                },
                width: 130,
                height: 35
            });
            this._btnAcceptAll.set_x(this._width * 0.5 - this._btnAcceptAll.get_width() * 0.5);
            this._btnAcceptAll.set_y(this._height - this._btnAcceptAll.get_height() - 35);
            this.addChild(this._btnAcceptAll);
            this._btnRequestGifts = new qK({
                labelUp: {
                    fontSize: 15,
                    text: dk.text("menu_gift_center_request_gifts")
                },
                width: 130,
                height: 35
            });
            this._btnRequestGifts.set_x(this._btnAcceptAll.get_x());
            this._btnRequestGifts.set_y(this._btnAcceptAll.get_y());
            this.addChild(this._btnRequestGifts);
            this.paginationController = new kj();
            this.paginationController.gotoFirstButton = new jk();
            this.paginationController.gotoPreviousButton = new hg();
            this.paginationController.gotoNextButton = new hs();
            this.paginationController.gotoLastButton = new fU();
            this.paginationController.paginationItemClass = aM;
            this.hasItemsContainer.addChild(this.paginationController);
            this.paginationController.set_currentPage(0);
            this.leftButton = new iC();
            this.hasItemsContainer.addChild(this.leftButton);
            this.rightButton = new iC();
            this.rightButton.anchorCenter();
            this.rightButton.set_rotation(180);
            this.hasItemsContainer.addChild(this.rightButton);
            this.leftButton.addEventListener("click", oT(this, this.onLeftButtonClick));
            this.rightButton.addEventListener("click", oT(this, this.onRightButtonClick));
            this._listContainer = new gw({
                w: 712,
                h: 320
            });
            this.addChild(this._listContainer);
            this._listContainer.rowsPerPage = 4;
            this.giftsIcon = new el(nK.get_assets().getTexture("gifts_icon", "main_shop").get_bitmapData());
            this.hasItemsContainer.addChild(this.giftsIcon);
            var q = this.giftsIcon;
            q.set_scaleX(q.get_scaleX() * 0.6);
            var i = this.giftsIcon;
            i.set_scaleY(i.get_scaleY() * 0.6);
            this.noGiftsIcon = new el(nK.get_assets().getTexture("gift_big_icons", "main_shop").get_bitmapData());
            this.noItemsContainer.addChild(this.noGiftsIcon);
            this._btnAcceptAll.addEventListener("click", oT(this, this.onClick_AcceptAll));
            this._btnRequestGifts.addEventListener("click", oT(this, this.onClick_Request));
            this._listContainer.S_onChange.add(oT(this, this.onFriendListChange));
            this.paginationController.S_onChange.add(oT(this, this.onPaginationControllerChange));
            this.noItemsContainer.set_visible(false);
            this.updateItems()
        },
        position: function() {
            this._listContainer.set_x(Math.round((this._width - this._listContainer.w) * 0.5));
            this._listContainer.set_y(139);
            this.positionPageButtons();
            this.leftButton.set_x(this._listContainer.get_x() - this.leftButton.get_width() - 10);
            this.rightButton.set_x(this._listContainer.get_x() + this._listContainer.w + 10);
            this.leftButton.set_y(this._listContainer.get_y() + (280 - this.leftButton.get_height()) * 0.5);
            this.rightButton.set_y(this.leftButton.get_y());
            this.titleLabel.set_x((this._width - this.titleLabel.get_width()) * 0.5);
            this.titleLabel.set_y(15);
            this.noFriendsTitleLabel.set_x((this._width - this.noFriendsTitleLabel.get_width()) * 0.5);
            this.noFriendsTitleLabel.set_y(this._listContainer.get_y() + (this._listContainer.get_height() - this.noFriendsTitleLabel.get_height()) * 0.5 + 70);
            this.noFriendsDescriptionLabel.set_x((this._width - this.noFriendsDescriptionLabel.get_width()) * 0.5);
            this.noFriendsDescriptionLabel.set_y(this.noFriendsTitleLabel.get_y() + this.noFriendsTitleLabel.get_height());
            this.noItemsContainer.get_graphics().beginFill(16119285, 1);
            this.noItemsContainer.get_graphics().drawRect(44, this._listContainer.get_y(), 712, this._listContainer.get_height() - 10);
            this.noItemsContainer.get_graphics().endFill();
            this.noItemsContainer.addChild(this.noFriendsTitleLabel);
            this.noItemsContainer.addChild(this.noFriendsDescriptionLabel);
            this.giftsIcon.set_y(this._height - this.giftsIcon.get_height() - 20);
            this.giftsIcon.set_x(this._width - this.giftsIcon.get_width() - 40);
            this.noGiftsIcon.set_x((this._width - this.noGiftsIcon.get_width()) * 0.5);
            this.noGiftsIcon.set_y((this._height - this.noGiftsIcon.get_height()) * 0.5 - 20)
        },
        positionPageButtons: function() {
            this.paginationController.set_y(Math.round(this._listContainer.get_y() + this._listContainer.get_height() - 10));
            this.paginationController.set_x(Math.round((this._width - this.paginationController.get_width()) * 0.5))
        },
        initBtn: function() {
            this._btnAcceptAll.set_visible(this._listContainer.items.length > 1);
            this._btnRequestGifts.set_visible(this._listContainer.items.length <= 1)
        },
        updateLayout: function() {
            this.noItemsContainer.set_visible(this._listContainer.items.length <= 0);
            this.hasItemsContainer.set_visible(!this.noItemsContainer.get_visible())
        },
        updateBtn: function() {
            if (this._listContainer.items.length <= 1 && !this._btnRequestGifts.get_visible()) {
                this.fadeOutBtn()
            }
        },
        fadeOutBtn: function() {
            this._btnAcceptAll.removeEventListener("click", oT(this, this.onClick_AcceptAll));
            d3.tween(this._btnAcceptAll, 0.5, {
                alpha: 0
            }).onComplete(oT(this, this.fadeInBtn))
        },
        fadeInBtn: function() {
            this._btnAcceptAll.set_visible(false);
            this._btnRequestGifts.set_alpha(0);
            this._btnRequestGifts.set_visible(true);
            d3.tween(this._btnRequestGifts, 0.5, {
                alpha: 1
            })
        },
        loadContent: function(i) {
            this._listContainer.addArray(this.createItemsFromData(i));
            this.onFriendListChange();
            this.updateLayout();
            this.position();
            this._listContainer.set_page(0);
            this.initBtn()
        },
        updateItems: function() {
            if (this._listContainer == null) {
                return
            }
            var js = [];
            var q0 = 0;
            var q1 = this._listContainer.items.length;
            while (q0 < q1) {
                var i2 = q0++;
                if ((function(q2) {
                        var i1;
                        var q3 = q2.items;
                        var i;
                        i = (n0.__cast(q2._listContainer.items[i2], Y)).item;
                        i1 = cj.lastIndexOf(q3, i, q3.length - 1);
                        return i1
                    }(this)) == -1) {
                    js.push(n0.__cast(this._listContainer.items[i2], Y))
                }
            }
            var q = 0;
            var qZ = js.length;
            while (q < qZ) {
                var qY = q++;
                this._listContainer.removeItem(js[qY])
            }
            this.loadContent(this.items);
            this.updateLayout();
            this.positionPageButtons();
            this.updateBtn();
            this.position();
            if (this.paginationController.currentPage >= this.paginationController.totalPages - 1) {
                this.currentPage = this.paginationController.totalPages - 1
            } else {
                this.currentPage = this.paginationController.currentPage
            }
            this._listContainer.set_page(this.currentPage)
        },
        createItemsFromData: function(i1) {
            var i = [];
            if (i1 == null) {
                return i
            }
            var i2 = 0;
            while (i2 < i1.length) {
                var q = i1[i2];
                ++i2;
                i.push(new Y(q, 50, {}))
            }
            i.sort(oT(this, this.sortInboxByDate));
            return i
        },
        sortInboxByDate: function(q, i) {
            var i2;
            var i1;
            i2 = n0.__cast(q, Y);
            i1 = n0.__cast(i, Y);
            if (i2.item.date.getTime() < i1.item.date.getTime()) {
                return 1
            } else {
                if (i2.item.date.getTime() > i1.item.date.getTime()) {
                    return -1
                } else {
                    return 0
                }
            }
            return 0
        },
        onFriendListChange: function() {
            this.paginationController.set_totalPages(this._listContainer.totalPages);
            this.paginationController.set_currentPage(this._listContainer.currentPage);
            this._update()
        },
        onPaginationControllerChange: function() {
            this._listContainer.set_page(this.paginationController.currentPage);
            this._update()
        },
        onClick_AcceptAll: function(i2) {
            var q1 = [];
            var q0 = [];
            var js = 0;
            var i1 = this._listContainer.items.length;
            while (js < i1) {
                var q = js++;
                var q2;
                q2 = n0.__cast(this._listContainer.items[q], Y);
                if (q2.item.friend.canReceiveGift || q2.item.type == jW.GIFT_REQUEST) {
                    q1.push(q2.item.friend)
                }
                if (q2.item.type == jW.GIFT) {
                    var qZ = new dr("agario.module.gift.events.ViewEvent.accept_gifts");
                    qZ.friends = [q2.item.friend];
                    this.dispatchEvent(qZ);
                    q2.disableButton()
                }
            }
            if (q1.length > 0) {
                var qY = new dr("agario.module.gift.events.ViewEvent.accept_gifts_request");
                qY.friends = q1;
                this.dispatchEvent(qY)
            }
            this.dispatchEvent(new dr("agario.module.gift.events.ViewEvent.animate_shower", true))
        },
        onClick_Request: function(i) {
            this.set_visible(false);
            nK.get_events().dispatchEventWith("agario.module.gift.events.ViewEvent.open_gift_requests")
        },
        onRightButtonClick: function(i) {
            this._listContainer.next_page();
            this._update()
        },
        onLeftButtonClick: function(i) {
            this._listContainer.previous_page();
            this._update()
        },
        _update: function() {
            this.rightButton.set_enabled(this._listContainer.currentPage < this._listContainer.totalPages - 1);
            this.leftButton.set_enabled(this._listContainer.currentPage > 0);
            this.leftButton.set_alpha(1);
            this.rightButton.set_alpha(1);
            if (!this.rightButton.get_enabled()) {
                this.rightButton.set_alpha(0.6)
            }
            if (!this.leftButton.get_enabled()) {
                this.leftButton.set_alpha(0.6)
            }
        },
        confirmElementDisable: function(i2) {
            var qY = 0;
            var js = this._listContainer.items;
            while (qY < js.length) {
                var i1 = js[qY];
                ++qY;
                var q;
                q = n0.__cast(i1, Y);
                if (cj.indexOf(i2, q.item.friend, 0) >= 0) {
                    q.disableButton()
                }
            }
        },
        activateButton: function() {
            this._btnAcceptAll.addEventListener("click", oT(this, this.onClick_AcceptAll))
        },
        disableButton: function() {
            this._btnAcceptAll.removeEventListener("click", oT(this, this.onClick_AcceptAll))
        },
        __class__: n6
    });
    var Z = function() {
        g1.call(this)
    };
    nt["agario.module.gift.views.GiftRequestsView"] = Z;
    Z.__name__ = ["agario", "module", "gift", "views", "GiftRequestsView"];
    Z.__super__ = g1;
    Z.prototype = lP(g1.prototype, {
        show: function(i) {
            g1.prototype.show.call(this, i);
            this.updateList()
        },
        initialize: function() {
            if (this._initialized) {
                return
            }
            this.titleText = dk.text("menu_outbox_request_title");
            this.noFriendsText = dk.text("menu_outbox_empty_message_request");
            this.buttonText = dk.text("menu_outbox_request");
            g1.prototype.initialize.call(this);
            this.confirmBtn.addEventListener("click", oT(this, this.onSendRequest))
        },
        onSendRequest: function(js) {
            var q = [];
            var i1 = this.getSelected();
            if (i1.length == 0) {
                return
            }
            var qY = 0;
            while (qY < i1.length) {
                var i2 = i1[qY];
                ++qY;
                q.push(i2.friend)
            }
            var i = new dr("agario.module.gift.events.ViewEvent.request_gifts");
            i.friends = q;
            this.dispatchEvent(i)
        },
        updateList: function() {
            this.updateView()
        },
        dispose: function() {
            g1.prototype.dispose.call(this);
            this.confirmBtn.removeEventListener("click", oT(this, this.onSendRequest))
        },
        __class__: Z
    });
    var b0 = function() {
        g1.call(this)
    };
    nt["agario.module.gift.views.GiftSendFreeCoinsView"] = b0;
    b0.__name__ = ["agario", "module", "gift", "views", "GiftSendFreeCoinsView"];
    b0.__super__ = g1;
    b0.prototype = lP(g1.prototype, {
        show: function(i) {
            g1.prototype.show.call(this, i);
            this.updateList()
        },
        initialize: function() {
            if (this._initialized) {
                return
            }
            this.titleText = dk.text("menu_gift_center_send_free_coins");
            this.noFriendsText = dk.text("menu_outbox_empty_message_send");
            this.buttonText = dk.text("menu_gift_center_send");
            g1.prototype.initialize.call(this);
            this.confirmBtn.addEventListener("click", oT(this, this.onSendCoins))
        },
        onSendCoins: function(q) {
            if (this.getSelectedFriends().length == 0) {
                return
            }
            var i = new dr("agario.module.gift.events.ViewEvent.send_gifts");
            i.friends = this.getSelectedFriends();
            this.dispatchEvent(i)
        },
        updateList: function() {
            this.updateView()
        },
        dispose: function() {
            g1.prototype.dispose.call(this);
            this.confirmBtn.removeEventListener("click", oT(this, this.onSendCoins))
        },
        __class__: b0
    });
    var ig = function() {
        hC.call(this);
        this.set_name("Send Gifts")
    };
    nt["agario.module.gift.views.GiftSendView"] = ig;
    ig.__name__ = ["agario", "module", "gift", "views", "GiftSendView"];
    ig.__super__ = hC;
    ig.prototype = lP(hC.prototype, {
        atlas: null,
        titleLabel: null,
        descriptionLabel: null,
        sendFreeCoinsBtn: null,
        requestGiftsBtn: null,
        initialize: function() {
            hC.prototype.initialize.call(this);
            this.titleLabel = new m1({
                text: dk.text("menu_gift_center_send_gift"),
                fontSize: 32,
                color: 3421236,
                width: 300,
                autoSize: 1,
                align: 0
            });
            this.titleLabel.set_height(this.titleLabel.get_textHeight() + 10);
            this.titleLabel.set_x((this.maxWidth - this.titleLabel.get_width()) * 0.5);
            this.titleLabel.set_y(15);
            this.titleLabel.set_selectable(false);
            this.addChild(this.titleLabel);
            this.descriptionLabel = new m1({
                text: dk.text("menu_gift_center_send_gift_message"),
                fontSize: 18,
                color: 3421236,
                width: 500,
                autoSize: 1,
                align: 0
            });
            this.descriptionLabel.set_height(this.descriptionLabel.get_textHeight() + 10);
            this.descriptionLabel.set_x((this.maxWidth - this.descriptionLabel.get_width()) * 0.5);
            this.descriptionLabel.set_y(this.maxHeight - this.descriptionLabel.get_height() - 60);
            this.descriptionLabel.set_selectable(false);
            this.addChild(this.descriptionLabel);
            this.atlas = nK.get_assets().getAtlas("main_shop");
            this.sendFreeCoinsBtn = new aO(dk.text("menu_gift_center_send_free_coins"), this.atlas.get("coins_button").get_bitmapData(), 6349312, 3572736);
            this.sendFreeCoinsBtn.set_scaleX(this.sendFreeCoinsBtn.set_scaleY((this.maxWidth / 2 - 20 - 10) / this.sendFreeCoinsBtn.get_width()));
            this.sendFreeCoinsBtn.set_x(25);
            this.sendFreeCoinsBtn.set_y(180);
            this.addChild(this.sendFreeCoinsBtn);
            this.requestGiftsBtn = new aO(dk.text("menu_gift_center_request_gifts"), this.atlas.get("gifting_button").get_bitmapData(), 6349312, 3572736);
            this.requestGiftsBtn.set_scaleX(this.requestGiftsBtn.set_scaleY((this.maxWidth / 2 - 20 - 10) / this.requestGiftsBtn.get_width()));
            this.requestGiftsBtn.set_x(this.sendFreeCoinsBtn.get_x() + this.sendFreeCoinsBtn.get_width() + 10);
            this.requestGiftsBtn.set_y(180);
            this.addChild(this.requestGiftsBtn)
        },
        dispose: function() {
            hC.prototype.dispose.call(this)
        },
        __class__: ig
    });
    var bZ = function() {
        ol.call(this, "giftUnavailableDialog");
        this.closeOnEscape = true;
        this.maxWidth = 520;
        this.maxHeight = 450
    };
    nt["agario.module.gift.views.GiftUnavailableDialog"] = bZ;
    bZ.__name__ = ["agario", "module", "gift", "views", "GiftUnavailableDialog"];
    bZ.__super__ = ol;
    bZ.prototype = lP(ol.prototype, {
        grayArea: null,
        img: null,
        title: null,
        subTitle: null,
        appleButton: null,
        androidButton: null,
        initialize: function() {
            ol.prototype.initialize.call(this);
            this.title = new m1({
                text: dk.text("menu_main_gifts"),
                bold: true,
                color: 0,
                fontSize: 34,
                width: this.maxWidth - 25,
                align: 0
            });
            this.title.mouseEnabled = false;
            this.addChild(this.title);
            this.subTitle = new m1({
                text: dk.text("gifting_unavailable_subtitle"),
                bold: true,
                color: 0,
                fontSize: 21,
                width: this.maxWidth - 20,
                align: 0
            });
            this.addChild(this.subTitle);
            this.grayArea = new cY();
            this.grayArea.get_graphics().beginFill(16119285);
            this.grayArea.get_graphics().drawRect(0, 0, this.maxWidth - 40, 230);
            this.grayArea.get_graphics().endFill();
            this.addChild(this.grayArea);
            this.img = new el(nK.get_assets().getTexture("gifts_icon").get_bitmapData(), 1, true);
            this.addChild(this.img);
            this.appleButton = new fe(new el(nK.get_assets().getTexture("appstore").get_bitmapData(), 1, true));
            this.addChild(this.appleButton);
            this.androidButton = new fe(new el(nK.get_assets().getTexture("Google_Play").get_bitmapData(), 1, true));
            this.addChild(this.androidButton);
            this.doLayout()
        },
        doLayout: function() {
            this.title.set_x(20);
            this.title.set_y(20);
            this.subTitle.set_y(this.title.get_y() + this.title.get_height());
            this.subTitle.set_x(20);
            this.grayArea.set_x(20);
            this.grayArea.set_y(this.subTitle.get_y() + this.subTitle.get_height() + 10);
            this.img.set_x(this.grayArea.get_x() + (this.grayArea.get_width() - this.img.get_width()) / 2);
            this.img.set_y(this.grayArea.get_y() + 20);
            this.appleButton.set_y(this.androidButton.set_y(this.grayArea.get_y() + this.grayArea.get_height() + 20));
            this.appleButton.set_x(130);
            this.appleButton.addEventListener("click", oT(this, this.onAppleclick));
            this.androidButton.set_x(this.maxWidth - this.androidButton.get_width() - 130);
            this.androidButton.addEventListener("click", oT(this, this.onAndroidClick))
        },
        onAppleclick: function(i) {
            ns.getURL(new nT("https://itunes.apple.com/app/agar.io/id995999703?mt=8&at=1l3vajp"))
        },
        onAndroidClick: function(i) {
            ns.getURL(new nT("https://play.google.com/store/apps/details?id=com.miniclip.agar.io"))
        },
        __class__: bZ
    });
    var n7 = function(i) {
        cY.call(this);
        this.onClick = new qt();
        this.id = i
    };
    nt["oaktree.ext.ui.controls.TabItem"] = n7;
    n7.__name__ = ["oaktree", "ext", "ui", "controls", "TabItem"];
    n7.__super__ = cY;
    n7.prototype = lP(cY.prototype, {
        id: null,
        onVisual: null,
        offVisual: null,
        selected: null,
        onClick: null,
        reset: function() {
            this.set_selected(false);
            if (this.contains(this.onVisual)) {
                this.removeChild(this.onVisual)
            }
        },
        handleItemClick: function(i) {
            if (this.contains(this.offVisual) && !this.selected) {
                this.onClick.dispatch(this)
            }
        },
        set_onVisual: function(i) {
            if (this.onVisual != null && this.contains(this.onVisual)) {
                this.removeChild(this.onVisual)
            }
            if (i != null) {
                this.onVisual = i;
                this.addChild(this.onVisual)
            }
            this.set_selected(this.selected);
            return i
        },
        set_offVisual: function(i) {
            if (this.offVisual != null && this.contains(this.offVisual)) {
                this.offVisual.removeEventListener("click", oT(this, this.handleItemClick));
                this.removeChild(this.offVisual)
            }
            if (i != null) {
                this.offVisual = i;
                this.addChild(this.offVisual);
                this.offVisual.addEventListener("click", oT(this, this.handleItemClick))
            }
            this.set_selected(this.selected);
            return i
        },
        set_selected: function(i) {
            this.selected = i;
            if (this.onVisual != null) {
                this.onVisual.set_visible(this.selected)
            }
            if (this.offVisual != null) {
                this.offVisual.set_visible(!this.selected)
            }
            return this.selected
        },
        __class__: n7,
        __properties__: lP(cY.prototype.__properties__, {
            set_selected: "set_selected",
            set_offVisual: "set_offVisual",
            set_onVisual: "set_onVisual"
        })
    });
    var cM = function(q, i) {
        this.maxWidth = 0;
        n7.call(this, q);
        var qY = {
            labelUp: {
                text: i,
                fontSize: 14,
                align: 0,
                color: 5329233
            },
            labelOver: {
                text: i,
                fontSize: 14,
                align: 0,
                color: 5329233
            },
            colorUp: 16777215,
            colorOver: 16777215,
            colorDown: 16777215,
            width: 140,
            height: 30,
            bottomRightRadius: 0,
            bottomLeftRadius: 0
        };
        var i2 = {
            labelUp: {
                text: i,
                fontSize: 13,
                align: 0,
                color: 16777215
            },
            labelOver: {
                text: i,
                fontSize: 13,
                align: 0,
                color: 16777215
            },
            colorUp: 5685472,
            colorOver: 5685472,
            colorDown: 5685472,
            width: 140,
            height: 30,
            bottomRightRadius: 0,
            bottomLeftRadius: 0
        };
        var js = new cY();
        var i1 = new hv(qY);
        i1.set_name("button");
        i1.set_y(i1.set_x(1));
        js.addChild(i1);
        this.addOutline(js, 142);
        this.set_onVisual(js);
        this.set_offVisual(new hv(i2))
    };
    nt["agario.module.shop.components.CategoryTab"] = cM;
    cM.__name__ = ["agario", "module", "shop", "components", "CategoryTab"];
    cM.__super__ = n7;
    cM.prototype = lP(n7.prototype, {
        maxWidth: null,
        set_width: function(q) {
            if (q > this.maxWidth && this.maxWidth != 0) {
                q = this.maxWidth
            }
            var i;
            i = n0.__cast(this.onVisual, bG);
            i.getChildByName("button").set_width(q);
            this.addOutline(i, q);
            this.offVisual.set_width(q);
            return q
        },
        addOutline: function(q, i1) {
            var i = q.getChildByName("outline");
            if (i != null) {
                q.removeChild(i)
            }
            var i2 = new mR();
            i2.set_name("outline");
            i2.get_graphics().lineStyle(2, 12566463, 1);
            mr.drawRoundRectComplex(i2.get_graphics(), 0, 0, i1, 30, 4, 4, 0, 0);
            q.addChild(i2)
        },
        __class__: cM
    });
    var c7 = function(q, i) {
        cM.call(this, q, i);
        this.quantity = new kR(0);
        this.quantity.set_x(this.offVisual.get_width());
        this.quantity.set_y(0);
        this.addChild(this.quantity)
    };
    nt["agario.module.gift.views.component.CategoryCounterTab"] = c7;
    c7.__name__ = ["agario", "module", "gift", "views", "component", "CategoryCounterTab"];
    c7.__super__ = cM;
    c7.prototype = lP(cM.prototype, {
        counter: null,
        quantity: null,
        set_counter: function(i) {
            this.quantity.update(i);
            return i
        },
        set_width: function(i) {
            cM.prototype.set_width.call(this, i);
            this.quantity.set_x(this.offVisual.get_width());
            return i
        },
        __class__: c7,
        __properties__: lP(cM.prototype.__properties__, {
            set_counter: "set_counter"
        })
    });
    var m7 = function(i2, i1, i, q, js) {
        cY.call(this);
        this.lifetime = i;
        this.speed = q;
        this.angle = js;
        this.initialX = i2;
        this.initialY = i1;
        this.set_x(this.initialX);
        this.set_y(this.initialY);
        this.set_alpha(0);
        this.coinBitmap = new el(nK.get_assets().getTexture("currency_icon", "main_shop").get_bitmapData());
        this.addChild(this.coinBitmap)
    };
    nt["agario.module.gift.views.component.CoinParticle"] = m7;
    m7.__name__ = ["agario", "module", "gift", "views", "component", "CoinParticle"];
    m7.__super__ = cY;
    m7.prototype = lP(cY.prototype, {
        initialX: null,
        initialY: null,
        lifetime: null,
        speed: null,
        angle: null,
        coinBitmap: null,
        play: function() {
            this.set_alpha(1);
            this.set_x(this.initialX);
            this.set_y(this.initialY);
            d3.tween(this, this.lifetime, {
                x: this.get_x() + Math.cos(this.angle) * this.speed * this.lifetime,
                y: this.get_y() + Math.sin(this.angle) * this.speed * this.lifetime
            }).ease(gQ.get_easeNone()).onComplete(oT(this, this.makeInvisible))
        },
        makeInvisible: function() {
            this.set_alpha(0)
        },
        __class__: m7
    });
    var il = function(i1, qY) {
        cY.call(this);
        this.maxWidth = qY;
        this.coins = i1;
        this.maxDelay = 1000;
        this.lifetime = 1;
        this.timer = new og(this.lifetime * 1000);
        this.timer.stop();
        var js = 0;
        var qZ = this.coins;
        while (js < qZ) {
            var q = js++;
            var i2 = new m7(0, 0, this.lifetime, 1000, Math.PI * 0.5);
            this.addChild(i2)
        }
    };
    nt["agario.module.gift.views.component.CoinShower"] = il;
    il.__name__ = ["agario", "module", "gift", "views", "component", "CoinShower"];
    il.__super__ = cY;
    il.prototype = lP(cY.prototype, {
        maxDelay: null,
        lifetime: null,
        maxWidth: null,
        coins: null,
        timer: null,
        play: function() {
            this.timer.stop();
            this.set_alpha(1);
            var i2 = 0;
            var js = this.coins;
            while (i2 < js) {
                var i1 = i2++;
                (n0.__cast(this.getChildAt(i1), m7)).initialX = Math.random() * (this.maxWidth - m7.COIN_WIDTH);
                var q = kr["int"](Math.random() * this.maxDelay);
                og.delay((c3 = (n0.__cast(this.getChildAt(i1), m7)), oT(c3, c3.play)), q)
            }
            this.timer.run = oT(this, this.makeInvisible)
        },
        makeInvisible: function() {
            this.set_alpha(0)
        },
        __class__: il
    });
    var a1 = function(i1) {
        cY.call(this);
        this.lifetime = 1;
        this.coins = i1;
        var i2 = 0;
        var js = this.coins;
        while (i2 < js) {
            var q = i2++;
            this.addChild(new m7(0, 0, this.lifetime, Math.random() * 175 + 75, q * 1 / this.coins * (Math.PI * 2)))
        }
        og.delay(oT(this, this.fadeOut), this.lifetime * 250)
    };
    nt["agario.module.gift.views.component.CoinSplash"] = a1;
    a1.__name__ = ["agario", "module", "gift", "views", "component", "CoinSplash"];
    a1.__super__ = cY;
    a1.prototype = lP(cY.prototype, {
        lifetime: null,
        coins: null,
        play: function() {
            var i1 = 0;
            var i2 = this.coins;
            while (i1 < i2) {
                var q = i1++;
                (n0.__cast(this.getChildAt(q), m7)).play()
            }
        },
        fadeOut: function() {
            d3.tween(this, 0.5, {
                alpha: 0
            }).onComplete(oT(this, this.dispose))
        },
        dispose: function() {
            this.removeChildren(0, this.get_numChildren() - 1)
        },
        __class__: a1
    });
    var mG = function(i) {
        this.updating = false;
        this.maxHeight = 0;
        this.minHeight = 0;
        this.maxWidth = 0;
        this.minWidth = 0;
        cY.call(this);
        this._options = i;
        this.onCreate = new qv();
        this.onBounds = new qv();
        this.set_name((function(i1) {
            var q;
            if (i1._options.name == null) {
                i1._options.name = "control"
            }
            q = i1._options.name;
            return q
        }(this)));
        this.set_minWidth((function(i1) {
            var q;
            if (i1._options.minWidth == null) {
                i1._options.minWidth = 0
            }
            q = i1._options.minWidth;
            return q
        }(this)));
        this.set_maxWidth((function(i1) {
            var q;
            if (i1._options.maxWidth == null) {
                i1._options.maxWidth = 0
            }
            q = i1._options.maxWidth;
            return q
        }(this)));
        this.set_minHeight((function(i1) {
            var q;
            if (i1._options.minHeight == null) {
                i1._options.minHeight = 0
            }
            q = i1._options.minHeight;
            return q
        }(this)));
        this.set_maxHeight((function(i1) {
            var q;
            if (i1._options.maxHeight == null) {
                i1._options.maxHeight = 0
            }
            q = i1._options.maxHeight;
            return q
        }(this)));
        this.set_x((function(i1) {
            var q;
            if (i1._options.x == null) {
                i1._options.x = 0
            }
            q = i1._options.x;
            return q
        }(this)));
        this.set_y((function(i1) {
            var q;
            if (i1._options.y == null) {
                i1._options.y = 0
            }
            q = i1._options.y;
            return q
        }(this)));
        this.set_w((function(i1) {
            var q;
            if (i1._options.w == null) {
                i1._options.w = 0
            }
            q = i1._options.w;
            return q
        }(this)));
        this.set_h((function(i1) {
            var q;
            if (i1._options.h == null) {
                i1._options.h = 0
            }
            q = i1._options.h;
            return q
        }(this)));
        this.children_bounds = {
            x: 0,
            y: 0,
            right: 0,
            bottom: 0,
            real_x: 0,
            real_y: 0,
            real_w: 0,
            real_h: 0
        };
        this.onCreate.dispatch()
    };
    nt["oaktree.ext.ui.Control"] = mG;
    mG.__name__ = ["oaktree", "ext", "ui", "Control"];
    mG.__super__ = cY;
    mG.prototype = lP(cY.prototype, {
        w: null,
        h: null,
        minWidth: null,
        maxWidth: null,
        minHeight: null,
        maxHeight: null,
        children_bounds: null,
        updating: null,
        onCreate: null,
        onBounds: null,
        _options: null,
        set_size: function(q, i2) {
            this.updating = true;
            var i1 = q - this.get_x();
            var i = i2 - this.h;
            this.set_w(q);
            this.set_h(i2);
            this.updating = false;
            this.bounds_changed(0, 0, i1, i)
        },
        get_right: function() {
            return this.get_x() + this.w
        },
        get_bottom: function() {
            return this.get_y() + this.h
        },
        set_minWidth: function(i) {
            this.minWidth = i;
            if (this.w < this.minWidth) {
                this.set_w(this.minWidth)
            }
            return this.minWidth
        },
        set_minHeight: function(i) {
            this.minHeight = i;
            if (this.h < this.minHeight) {
                this.set_h(this.minHeight)
            }
            return this.minHeight
        },
        set_maxWidth: function(i) {
            this.maxWidth = i;
            if (this.w > this.maxWidth) {
                this.set_w(this.maxWidth)
            }
            return this.maxWidth
        },
        set_maxHeight: function(i) {
            this.maxHeight = i;
            if (this.h > this.maxHeight) {
                this.set_h(this.maxHeight)
            }
            return this.maxHeight
        },
        set_w: function(i) {
            if (i < this.minWidth) {
                i = this.minWidth
            }
            if (i > this.maxWidth && this.maxWidth != 0) {
                i = this.maxWidth
            }
            var q = i - this.w;
            this.w = i;
            this.bounds_changed(0, 0, q);
            return this.w
        },
        set_h: function(q) {
            if (q < this.minHeight) {
                q = this.minHeight
            }
            if (q > this.maxHeight && this.maxHeight != 0) {
                q = this.maxHeight
            }
            var i = q - this.h;
            this.h = q;
            this.bounds_changed(0, 0, 0, i);
            return this.h
        },
        get_children_bounds: function() {
            if (this.get_numChildren() == 0) {
                this.children_bounds.x = 0;
                this.children_bounds.y = 0;
                this.children_bounds.right = 0;
                this.children_bounds.bottom = 0;
                this.children_bounds.real_x = 0;
                this.children_bounds.real_y = 0;
                this.children_bounds.real_w = 0;
                this.children_bounds.real_h = 0;
                return this.children_bounds
            }
            var qZ = this.getChildAt(0);
            var i1 = qZ.get_x();
            var q = qZ.get_y();
            var js = qZ.get_x() + qZ.get_width();
            var i = qZ.get_y() + qZ.get_height();
            var q1 = qZ.get_x();
            var q0 = qZ.get_y();
            var q2 = 0;
            var qY = this.get_numChildren();
            while (q2 < qY) {
                var q3 = q2++;
                var i2 = this.getChildAt(q3);
                i1 = Math.min(i2.get_x(), i1);
                q = Math.min(i2.get_y(), q);
                js = Math.max(js, i2.get_x() + i2.get_width());
                i = Math.max(i, i2.get_y() + i2.get_height());
                q1 = Math.min(i2.get_x(), q1);
                q0 = Math.min(i2.get_y(), q0)
            }
            this.children_bounds.x = i1;
            this.children_bounds.y = q;
            this.children_bounds.right = js;
            this.children_bounds.bottom = i;
            this.children_bounds.real_x = q1;
            this.children_bounds.real_y = q0;
            this.children_bounds.real_w = js;
            this.children_bounds.real_h = i;
            return this.children_bounds
        },
        update_bounds: function() {
            var i = this.get_children_bounds();
            this.set_w(i.real_w);
            this.set_h(i.real_h)
        },
        bounds_changed: function(i1, q, i2, i) {
            if (i == null) {
                i = 0
            }
            if (i2 == null) {
                i2 = 0
            }
            if (q == null) {
                q = 0
            }
            if (i1 == null) {
                i1 = 0
            }
            if (this.updating) {
                return
            }
            this.onBounds.dispatch()
        },
        __class__: mG,
        __properties__: lP(cY.prototype.__properties__, {
            get_bottom: "get_bottom",
            get_right: "get_right",
            get_children_bounds: "get_children_bounds",
            set_maxHeight: "set_maxHeight",
            set_minHeight: "set_minHeight",
            set_maxWidth: "set_maxWidth",
            set_minWidth: "set_minWidth",
            set_h: "set_h",
            set_w: "set_w"
        })
    });
    var ku = function(q, i) {
        i.w = 200;
        i.h = 70;
        this.options = i;
        mG.call(this, i);
        this.friend = q;
        this.buildCheckbox();
        this.addEventListener("addedToStage", oT(this, this.initialize))
    };
    nt["agario.module.gift.views.component.FriendElement"] = ku;
    ku.__name__ = ["agario", "module", "gift", "views", "component", "FriendElement"];
    ku.__super__ = mG;
    ku.prototype = lP(mG.prototype, {
        friend: null,
        photo: null,
        nameLabel: null,
        check: null,
        options: null,
        selected: null,
        get_selected: function() {
            return this.friend.selected
        },
        initialize: function(i) {
            this.removeEventListener("addedToStage", oT(this, this.initialize));
            this.buildUI();
            this.addEventListener("click", oT(this, this.onClick));
            this.addEventListener("mouseOver", oT(this, this.onOver));
            this.addEventListener("mouseOut", oT(this, this.onOut))
        },
        buildCheckbox: function() {
            this.check = new el(nK.get_assets().getTexture("check", "main_shop").get_bitmapData());
            this.check.set_x(170);
            this.check.set_y(40);
            this.addChild(this.check);
            this.check.set_visible(this.friend.selected)
        },
        buildUI: function() {
            this.get_graphics().lineStyle(0.5, 3421236, 0.5);
            this.get_graphics().beginFill(0, 0);
            this.get_graphics().drawRoundRect(0, 0, 200, 70, 25, 25);
            this.get_graphics().endFill();
            this.nameLabel = new m1({
                text: this.friend.name,
                fontSize: 14,
                color: 3421236,
                maxHeight: 60,
                multiline: true
            });
            this.nameLabel.set_width(100);
            this.nameLabel.set_height(60);
            this.nameLabel.set_selectable(false);
            this.nameLabel.set_multiline(true);
            this.nameLabel.set_wordWrap(true);
            this.addChild(this.nameLabel);
            this.nameLabel.set_x(70);
            this.nameLabel.set_y(10);
            if (this.friend.id == nK.models.giftingFakeUser.get("fictionalPlayerFbId")) {
                this.photo = new el(nK.get_assets().getTexture("Avatar", "main_shop").get_bitmapData())
            } else {
                this.photo = new el(f0.fromFile(this.friend.picture))
            }
            this.addChild(this.photo);
            this.photo.set_x(10);
            this.photo.set_y(10);
            this.get_graphics().lineStyle(0.5, 3421236, 0.5);
            this.get_graphics().beginFill(0, 0);
            this.get_graphics().drawCircle(this.check.get_x() + this.check.get_width() / 2, this.check.get_y() + this.check.get_height() / 2, this.check.get_width() / 2 - 1);
            this.get_graphics().endFill()
        },
        toggleSelection: function(i) {
            this.friend.selected = i;
            this.check.set_visible(i)
        },
        onClick: function(i) {
            this.toggleSelection(!this.get_selected());
            this.dispatchEvent(new dr("agario.module.gift.events.ViewEvent.on_friend_selected"))
        },
        onOver: function(i) {
            this.set_alpha(0.8)
        },
        onOut: function(i) {
            this.set_alpha(1)
        },
        fadeOut: function() {
            var i = this;
            this.removeEventListener("click", oT(this, this.onClick));
            this.removeEventListener("mouseOver", oT(this, this.onOver));
            this.removeEventListener("mouseOut", oT(this, this.onOut));
            d3.tween(this, 1, {
                alpha: 0
            }).onComplete(function() {
                var q = new dr("agario.module.gift.events.ViewEvent.post_dispose", true);
                q.friends = [];
                q.friends.push(i.friend);
                i.dispatchEvent(q)
            })
        },
        __class__: ku,
        __properties__: lP(mG.prototype.__properties__, {
            get_selected: "get_selected"
        })
    });
    var bh = function() {
        this._rotation = 0;
        this.rotationAnchorY = 0;
        this.rotationAnchorX = 0;
        cY.call(this);
        this.mouseChildren = false;
        this.hasFocus = false;
        this.buttonMode = this.mouseEnabled = true;
        this.statesContainer = new cY();
        this.statesContainer.set_name("button_container");
        this.addChild(this.statesContainer);
        this.initializeState(this.upState);
        this.initializeState(this.overState);
        this.initializeState(this.downState);
        this.initializeState(this.disabledState);
        this.updateState();
        this.resize();
        this.addEventListener("addedToStage", oT(this, this.onAddedToStage))
    };
    nt["oaktree.ext.ui.controls.Button"] = bh;
    bh.__name__ = ["oaktree", "ext", "ui", "controls", "Button"];
    bh.__super__ = cY;
    bh.prototype = lP(cY.prototype, {
        rotationAnchorX: null,
        rotationAnchorY: null,
        _rotation: null,
        statesContainer: null,
        onClick: null,
        upState: null,
        downState: null,
        overState: null,
        disabledState: null,
        data: null,
        _currentState: null,
        get_currentState: function() {
            return this._currentState
        },
        set_currentState: function(i) {
            if (this._currentState != i) {
                if (this._currentState != null) {
                    this.statesContainer.removeChild(this._currentState)
                }
                this._currentState = i;
                if (i != null) {
                    this.statesContainer.addChild(i)
                }
            }
            this.update_layout();
            return i
        },
        get_enabled: function() {
            return this.mouseEnabled
        },
        set_enabled: function(i) {
            this.mouseEnabled = i;
            this.updateState();
            return i
        },
        selected: null,
        set_selected: function(i) {
            this.selected = i;
            this.updateState();
            return i
        },
        hasFocus: null,
        mouseIsDown: null,
        mouseIsOver: null,
        upOnMouseOut: null,
        initializeState: function(i) {
            if (i != null && i.parent != null && i != this._currentState) {
                i.parent.removeChild(i)
            }
        },
        updateState: function() {
            var i = null;
            if (!this.get_enabled()) {
                i = this.disabledState
            } else {
                if (this.selected) {
                    i = this.downState
                } else {
                    if (this.mouseIsDown && (this.mouseIsOver || !this.upOnMouseOut)) {
                        i = this.downState
                    } else {
                        if (this.hasFocus && this.mouseIsDown) {
                            i = this.overState
                        } else {
                            if (this.mouseIsOver) {
                                i = this.overState
                            }
                        }
                    }
                }
            }
            if (i == null) {
                i = this.upState
            }
            this.set_currentState(i)
        },
        resize: function() {
            if (this.upState != this.get_currentState()) {
                this.statesContainer.addChild(this.upState)
            }
            var i = this.upState.getBounds(this);
            if (this.upState != this.get_currentState()) {
                this.statesContainer.removeChild(this.upState)
            }
            this.update_layout()
        },
        setRotation: function(i) {
            this._rotation = i;
            cY.prototype.set_rotation.call(this, 0);
            this.statesContainer.set_rotation(i);
            this.update_layout();
            return i
        },
        set_rotation: function(i) {
            return this.setRotation(i)
        },
        set_rotationAnchorX: function(i) {
            this.rotationAnchorX = i;
            this.update_layout();
            return i
        },
        set_rotationAnchorY: function(i) {
            this.rotationAnchorY = i;
            this.update_layout();
            return i
        },
        setRotationAnchor: function(q, i) {
            this.set_rotationAnchorX(q);
            this.set_rotationAnchorY(i);
            this.update_layout()
        },
        anchorCenter: function() {
            this.setRotationAnchor(this.get_width() / 2, this.get_height() / 2)
        },
        update_layout: function() {
            if (this.upState != null) {
                this.upState.set_x(-this.rotationAnchorX);
                this.upState.set_y(-this.rotationAnchorY)
            }
            if (this.overState != null) {
                this.overState.set_x(-this.rotationAnchorX);
                this.overState.set_y(-this.rotationAnchorY)
            }
            if (this.downState != null) {
                this.downState.set_x(-this.rotationAnchorX);
                this.downState.set_y(-this.rotationAnchorY)
            }
            if (this.disabledState != null) {
                this.disabledState.set_x(-this.rotationAnchorX);
                this.disabledState.set_y(-this.rotationAnchorY)
            }
            this.statesContainer.set_x(this.rotationAnchorX);
            this.statesContainer.set_y(this.rotationAnchorY)
        },
        onRollOver: function(i) {
            this.mouseIsOver = !i.buttonDown || this.mouseIsDown;
            this.updateState()
        },
        onRollOut: function(i) {
            this.mouseIsOver = false;
            this.updateState()
        },
        onMouseDown: function(i) {
            this.mouseIsDown = true;
            this.updateState();
            this.stage.addEventListener("mouseUp", oT(this, this.onStageMouseUp))
        },
        onFocusIn: function(i) {
            this.hasFocus = true;
            this.updateState()
        },
        onFocusOut: function(i) {
            this.hasFocus = false;
            this.updateState()
        },
        onStageMouseUp: function(i) {
            this.mouseIsDown = false;
            this.updateState();
            this.stage.removeEventListener("mouseUp", oT(this, this.onStageMouseUp))
        },
        onAddedToStage: function(i) {
            this.removeEventListener("addedToStage", oT(this, this.onAddedToStage));
            this.addEventListener("removedFromStage", oT(this, this.onRemovedFromStage));
            this.addEventListener("mouseOver", oT(this, this.onRollOver));
            this.addEventListener("mouseOut", oT(this, this.onRollOut));
            this.addEventListener("mouseDown", oT(this, this.onMouseDown));
            this.addEventListener("focusIn", oT(this, this.onFocusIn));
            this.addEventListener("focusOut", oT(this, this.onFocusOut));
            this.mouseIsDown = this.mouseIsOver = this.hasFocus = false;
            this.addEventListener("click", oT(this, this.handleClick));
            this.updateState()
        },
        handleClick: function(i) {
            if (this.onClick != null) {
                this.onClick(this)
            }
        },
        onRemovedFromStage: function(i) {
            this.addEventListener("addedToStage", oT(this, this.onAddedToStage));
            this.removeEventListener("removedFromStage", oT(this, this.onRemovedFromStage));
            this.removeEventListener("rollOver", oT(this, this.onRollOver));
            this.removeEventListener("rollOut", oT(this, this.onRollOut));
            this.removeEventListener("mouseDown", oT(this, this.onMouseDown));
            this.addEventListener("focusIn", oT(this, this.onFocusIn));
            this.addEventListener("focusOut", oT(this, this.onFocusOut));
            this.removeEventListener("click", oT(this, this.handleClick));
            this.stage.removeEventListener("mouseUp", oT(this, this.onStageMouseUp))
        },
        dispose: function() {
            this.removeEventListener("addedToStage", oT(this, this.onAddedToStage));
            this.removeEventListener("removedFromStage", oT(this, this.onRemovedFromStage));
            this.removeEventListener("rollOver", oT(this, this.onRollOver));
            this.removeEventListener("rollOut", oT(this, this.onRollOut));
            this.removeEventListener("mouseDown", oT(this, this.onMouseDown));
            this.removeEventListener("focusIn", oT(this, this.onFocusIn));
            this.removeEventListener("focusOut", oT(this, this.onFocusOut));
            if (this.stage != null) {
                this.stage.removeEventListener("mouseUp", oT(this, this.onStageMouseUp))
            }
        },
        delayedEnable: function(i) {
            if (i == null) {
                i = 1
            }
            var q = this;
            d3.timer(i).onComplete(function() {
                q.set_enabled(true)
            })
        },
        __class__: bh,
        __properties__: lP(cY.prototype.__properties__, {
            set_selected: "set_selected",
            set_enabled: "set_enabled",
            get_enabled: "get_enabled",
            set_currentState: "set_currentState",
            get_currentState: "get_currentState",
            set_rotationAnchorY: "set_rotationAnchorY",
            set_rotationAnchorX: "set_rotationAnchorX"
        })
    });
    var hv = function(i2) {
        if (i2.labelOver == null) {
            i2.labelOver = i2.labelUp
        }
        i2.labelOver;
        if (i2.labelDown == null) {
            i2.labelDown = i2.labelUp
        }
        i2.labelDown;
        if (i2.labelDown.text == null) {
            i2.labelDown.text = i2.labelUp.text
        }
        i2.labelDown.text;
        if (i2.labelOver.text == null) {
            i2.labelOver.text = i2.labelUp.text
        }
        i2.labelOver.text;
        if (i2.topLeftRadius == null) {
            i2.topLeftRadius = 4
        }
        i2.topLeftRadius;
        if (i2.topRightRadius == null) {
            i2.topRightRadius = 4
        }
        i2.topRightRadius;
        if (i2.bottomLeftRadius == null) {
            i2.bottomLeftRadius = 4
        }
        i2.bottomLeftRadius;
        if (i2.bottomRightRadius == null) {
            i2.bottomRightRadius = 4
        }
        i2.bottomRightRadius;
        if (i2.colorUp == null) {
            i2.colorUp = 6343424
        }
        i2.colorUp;
        if (i2.colorDown == null) {
            i2.colorDown = 5748225
        }
        i2.colorDown;
        if (i2.colorOver == null) {
            i2.colorOver = 5748225
        }
        i2.colorOver;
        if (i2.borderWeight == null) {
            i2.borderWeight = 0
        }
        i2.borderWeight;
        if (i2.borderColor == null) {
            i2.borderColor = 0
        }
        i2.borderColor;
        if (i2.borderWeightOver == null) {
            i2.borderWeightOver = 0
        }
        i2.borderWeightOver;
        if (i2.borderColorOver == null) {
            i2.borderColorOver = 0
        }
        i2.borderColorOver;
        if (i2.borderWeightDown == null) {
            i2.borderWeightDown = 0
        }
        i2.borderWeightDown;
        if (i2.borderColorDown == null) {
            i2.borderColorDown = 0
        }
        i2.borderColorDown;
        this.opts = i2;
        var i = new cY();
        var q = new cY();
        var i1 = new cY();
        if (i2.radius != null) {
            i2.topLeftRadius = i2.topRightRadius = i2.bottomLeftRadius = i2.bottomRightRadius = i2.radius
        }
        this.labelUp = new m1(i2.labelUp);
        this.labelOver = new m1(i2.labelOver);
        this.labelDown = new m1(i2.labelDown);
        if (this.labelUp.get_textWidth() > i2.width) {
            this.labelUp.set_width(this.labelOver.set_width(this.labelDown.set_width(i2.width)))
        }
        i = this.getState(this.labelUp, i2.borderWeight, i2.borderColor, i2.colorUp, i2.width, i2.height, i2.topLeftRadius, i2.topRightRadius, i2.bottomLeftRadius, i2.bottomRightRadius);
        q = this.getState(this.labelOver, i2.borderWeightOver, i2.borderColor, i2.colorOver, i2.width, i2.height, i2.topLeftRadius, i2.topRightRadius, i2.bottomLeftRadius, i2.bottomRightRadius);
        i1 = this.getState(this.labelDown, i2.borderWeightDown, i2.borderColorDown, i2.colorDown, i2.width, i2.height, i2.topLeftRadius, i2.topRightRadius, i2.bottomLeftRadius, i2.bottomRightRadius);
        this.upState = this.disabledState = i;
        this.overState = q;
        this.downState = i1;
        this.labelOver.set_y(this.labelUp.set_y(this.labelDown.set_y((i2.height - this.labelUp.get_height()) / 2)));
        this.labelOver.set_x(this.labelUp.set_x(this.labelDown.set_x((i2.width - this.labelUp.get_width()) / 2)));
        bh.call(this)
    };
    nt["agario.views.controls.FlatButton"] = hv;
    hv.__name__ = ["agario", "views", "controls", "FlatButton"];
    hv.__super__ = bh;
    hv.prototype = lP(bh.prototype, {
        opts: null,
        labelUp: null,
        labelOver: null,
        labelDown: null,
        set_width: function(i) {
            this.updateStateBackground(n0.__cast(this.upState, bG), this.opts.borderWeight, this.opts.borderColor, this.opts.colorUp, i - 15, this.opts.height, this.opts.topLeftRadius, this.opts.topRightRadius, this.opts.bottomLeftRadius, this.opts.bottomRightRadius);
            this.updateStateBackground(n0.__cast(this.disabledState, bG), this.opts.borderWeight, this.opts.borderColor, this.opts.colorUp, i, this.opts.height, this.opts.topLeftRadius, this.opts.topRightRadius, this.opts.bottomLeftRadius, this.opts.bottomRightRadius);
            this.updateStateBackground(n0.__cast(this.overState, bG), this.opts.borderWeightOver, this.opts.borderColor, this.opts.colorOver, i, this.opts.height, this.opts.topLeftRadius, this.opts.topRightRadius, this.opts.bottomLeftRadius, this.opts.bottomRightRadius);
            this.updateStateBackground(n0.__cast(this.downState, bG), this.opts.borderWeightDown, this.opts.borderColorDown, this.opts.colorDown, i, this.opts.height, this.opts.topLeftRadius, this.opts.topRightRadius, this.opts.bottomLeftRadius, this.opts.bottomRightRadius);
            this.updateLabel(this.labelUp, i);
            this.updateLabel(this.labelOver, i);
            this.updateLabel(this.labelDown, i);
            return i
        },
        updateLabel: function(i, q) {
            if (i.get_width() / i.get_scaleX() > q) {
                i.set_scaleX(i.set_scaleY(q / i.get_width()))
            } else {}
            i.set_x((q - i.get_width()) / 2)
        },
        getState: function(q2, qZ, qY, i1, i2, q3, q1, q, js, q0) {
            var i = new cY();
            this.updateStateBackground(i, qZ, qY, i1, i2, q3, q1, q, js, q0);
            i.addChild(q2);
            return i
        },
        updateStateBackground: function(q, qZ, qY, i2, q4, q3, q2, i1, js, q0) {
            var q1 = q.getChildByName("background");
            if (q1 != null) {
                q.removeChild(q1)
            }
            var i = new mR();
            i.set_name("background");
            if (qZ > 0) {
                i.get_graphics().lineStyle(qZ, qY, 1)
            }
            i.get_graphics().beginFill(i2);
            mr.drawRoundRectComplex(i.get_graphics(), 0, 0, q4, q3, q2, i1, js, q0);
            i.get_graphics().endFill();
            q.addChildAt(i, 0)
        },
        __class__: hv
    });
    var qK = function(i) {
        i.colorUp = 7002880;
        if (i.labelUp != null && isNaN(i.labelUp.fontSize)) {
            i.labelUp.fontSize = 12
        }
        if (i.labelUp != null && isNaN(i.labelUp.color)) {
            i.labelUp.color = 16777215
        }
        hv.call(this, i)
    };
    nt["agario.module.gift.views.component.GiftButton"] = qK;
    qK.__name__ = ["agario", "module", "gift", "views", "component", "GiftButton"];
    qK.__super__ = hv;
    qK.prototype = lP(hv.prototype, {
        __class__: qK
    });
    var Y = function(i1, q, i) {
        this.buttonFontSize = 12;
        i.w = 350;
        i.h = 70;
        this.options = i;
        mG.call(this, i);
        this.item = i1;
        this.addEventListener("addedToStage", oT(this, this.initialize))
    };
    nt["agario.module.gift.views.component.InboxElement"] = Y;
    Y.__name__ = ["agario", "module", "gift", "views", "component", "InboxElement"];
    Y.__super__ = mG;
    Y.prototype = lP(mG.prototype, {
        item: null,
        isAccepted: null,
        options: null,
        photo: null,
        nameLabel: null,
        descriptionLabel: null,
        button: null,
        disabledButton: null,
        descriptionText: null,
        buttonFontSize: null,
        initialize: function(i) {
            this.removeEventListener("addedToStage", oT(this, this.initialize));
            this.buildUI();
            this.initButton()
        },
        buildUI: function() {
            this.get_graphics().lineStyle(0.5, 3421236, 0.5);
            this.get_graphics().beginFill(0, 0);
            this.get_graphics().drawRoundRect(0, 0, 350, 70, 25, 25);
            this.get_graphics().endFill();
            this.nameLabel = new m1({
                text: this.item.friend.name,
                fontSize: 14,
                color: 3421236,
                maxHeight: 60,
                multiline: true
            });
            this.nameLabel.set_width(165);
            this.nameLabel.set_height(40);
            this.nameLabel.set_selectable(false);
            this.nameLabel.set_multiline(true);
            this.nameLabel.set_wordWrap(true);
            this.addChild(this.nameLabel);
            this.nameLabel.set_x(70);
            this.nameLabel.set_y(10);
            if (this.item.gift != null) {
                this.descriptionText = dk.text("menu_gift_center_gift_description");
                this.descriptionText = this.descriptionText.split("%@")[0] + (function(i1) {
                    var q;
                    var i = i1.item.gift.get_amount();
                    q = kr.string(fq.toFloat(i));
                    return q
                }(this)) + this.descriptionText.split("%@")[1]
            } else {
                this.descriptionText = dk.text("menu_gift_center_request_description")
            }
            this.descriptionLabel = new m1({
                text: this.descriptionText,
                fontSize: 14,
                color: 3421236,
                width: 200,
                align: 3
            });
            this.descriptionLabel.set_height(this.descriptionLabel.get_textHeight() + 5);
            this.descriptionLabel.set_selectable(false);
            this.addChild(this.descriptionLabel);
            this.descriptionLabel.set_x(70);
            this.descriptionLabel.set_y(70 - this.descriptionLabel.get_height() - 5);
            if (this.item.friend.id == nK.models.giftingFakeUser.get("fictionalPlayerFbId")) {
                this.photo = new el(nK.get_assets().getTexture("Avatar", "main_shop").get_bitmapData())
            } else {
                this.photo = new el(f0.fromFile(this.item.friend.picture))
            }
            this.addChild(this.photo);
            this.photo.set_x(10);
            this.photo.set_y(10)
        },
        initButton: function() {
            if (this.item.type == jW.GIFT) {
                if (!this.item.friend.canReceiveGift) {
                    this.button = new qK({
                        labelUp: {
                            text: dk.text("menu_gift_center_accept")
                        },
                        width: 100,
                        height: 30
                    })
                } else {
                    this.button = new qK({
                        labelUp: {
                            text: dk.text("menu_gift_center_accept_return")
                        },
                        width: 100,
                        height: 30
                    })
                }
                this.disabledButton = new hv({
                    labelUp: {
                        text: dk.text("menu_gift_center_accepted"),
                        fontSize: this.buttonFontSize,
                        color: 16777215
                    },
                    width: 100,
                    height: 30,
                    colorUp: 13290186,
                    colorDown: 13290186,
                    colorOver: 13290186
                })
            } else {
                if (this.item.type == jW.GIFT_REQUEST) {
                    this.button = new qK({
                        labelUp: {
                            text: dk.text("menu_gift_center_send"),
                            fontSize: this.buttonFontSize
                        },
                        width: 100,
                        height: 30
                    });
                    this.disabledButton = new hv({
                        labelUp: {
                            text: dk.text("menu_gift_center_sent"),
                            fontSize: this.buttonFontSize,
                            color: 16777215
                        },
                        width: 100,
                        height: 30,
                        colorUp: 13290186,
                        colorDown: 13290186,
                        colorOver: 13290186
                    })
                }
            }
            this.button.set_x(350 - this.button.get_width() - 10);
            this.button.set_y((70 - this.button.get_height()) * 0.5);
            this.addChild(this.button);
            this.button.set_visible(true);
            this.button.addEventListener("click", oT(this, this.handleButton));
            this.disabledButton.set_x(350 - this.disabledButton.get_width() - 10);
            this.disabledButton.set_y((70 - this.disabledButton.get_height()) * 0.5);
            this.addChild(this.disabledButton);
            this.disabledButton.set_visible(false)
        },
        handleButton: function(qY) {
            if (this.item.type == jW.GIFT) {
                var js = new dr("agario.module.gift.events.ViewEvent.accept_gifts");
                js.friends = [this.item.friend];
                this.dispatchEvent(js);
                if (this.item.friend.canReceiveGift) {
                    var q = new dr("agario.module.gift.events.ViewEvent.accept_gifts_request");
                    q.friends = [this.item.friend];
                    this.dispatchEvent(q)
                }
                var i2 = this.get_x() + this.button.get_x() + (this.button.get_width() - m7.COIN_WIDTH) * 0.5 + 50;
                var i = this.get_y() + this.button.get_y() + (this.button.get_height() - m7.COIN_HEIGHT) * 0.5 + 140;
                var i1 = new dr("agario.module.gift.events.ViewEvent.animate_splash", true);
                i1.animationPosition = new pp(i2, i);
                this.dispatchEvent(i1);
                this.disableButton()
            } else {
                if (this.item.type == jW.GIFT_REQUEST) {
                    var qZ = new dr("agario.module.gift.events.ViewEvent.accept_gifts_request");
                    qZ.friends = [this.item.friend];
                    this.dispatchEvent(qZ)
                }
            }
        },
        disableButton: function() {
            this.isAccepted = true;
            this.button.set_visible(false);
            this.disabledButton.set_visible(true)
        },
        disableCell: function() {
            og.delay(oT(this, this.cellAnimation), 1000)
        },
        cellAnimation: function() {
            d3.tween(this, 1, {
                alpha: 0
            }).onComplete(oT(this, this.dispose))
        },
        dispose: function() {
            var i = new dr("agario.module.gift.events.ViewEvent.post_dispose_inbox", true);
            this.dispatchEvent(i);
            this.button.removeEventListener("click", oT(this, this.handleButton))
        },
        __class__: Y
    });
    var ei = function() {
        mx.call(this);
        this.addEventListener("addedToStage", oT(this, this.clone_onAddedToStage));
        this.addEventListener("removedFromStage", oT(this, this.clone_onRemovedFromStage))
    };
    nt["agario.module.gift.views.component.TextFieldHTMLClone"] = ei;
    ei.__name__ = ["agario", "module", "gift", "views", "component", "TextFieldHTMLClone"];
    ei.focusInstance = null;
    ei.__super__ = mx;
    ei.prototype = lP(mx.prototype, {
        htmlField: null,
        set_text: function(i) {
            if (this.get_htmlField().val() != i) {
                this.get_htmlField().val(i)
            }
            return mx.prototype.set_text.call(this, i)
        },
        removeFocus: function() {
            this.stage.removeEventListener("keyUp", oT(this, this.stage_onKeyPress));
            this.stage.removeEventListener("keyDown", oT(this, this.stage_onKeyPress));
            this.removeEventListener("enterFrame", oT(this, this.onEnterFrame))
        },
        get_htmlField: function() {
            var q = this;
            if (this.htmlField == null) {
                var i = Math.random() * 1000;
                this.htmlField = $("<input id='auxfield" + i + "' style='position:absolute;'></input>");
                $("body").prepend(this.htmlField);
                this.htmlField.change(function(i1) {
                    q.stage_onKeyPress(null)
                })
            }
            return this.htmlField
        },
        clone_onClick: function(i) {
            this.dispatchEvent(new hM("change"));
            this.get_htmlField().prop("selectionStart", this.get_selectionBeginIndex());
            this.get_htmlField().prop("selectionEnd", this.get_selectionEndIndex());
            this.get_htmlField().focus();
            if (ei.focusInstance == this) {
                return
            }
            if (ei.focusInstance != null) {
                ei.focusInstance.removeFocus()
            }
            ei.focusInstance = this;
            this.stage.addEventListener("keyUp", oT(this, this.stage_onKeyPress));
            this.stage.addEventListener("keyDown", oT(this, this.stage_onKeyPress));
            this.addEventListener("enterFrame", oT(this, this.onEnterFrame))
        },
        clone_onAddedToStage: function(i) {
            this.addEventListener("click", oT(this, this.clone_onClick));
            this.addEventListener("mouseDown", oT(this, this.clone_onClick));
            this.addEventListener("mouseUp", oT(this, this.clone_onClick))
        },
        clone_onRemovedFromStage: function(i) {
            this.removeEventListener("click", oT(this, this.clone_onClick));
            this.removeEventListener("mouseDown", oT(this, this.clone_onClick));
            this.removeEventListener("mouseUp", oT(this, this.clone_onClick));
            this.removeEventListener("addedToStage", oT(this, this.clone_onAddedToStage));
            this.removeEventListener("removedFromStage", oT(this, this.clone_onRemovedFromStage))
        },
        stage_onKeyPress: function(i) {
            this.get_htmlField().focus()
        },
        onEnterFrame: function(i) {
            if (this.get_htmlField() != null) {
                if (this.get_text() != this.get_htmlField().val()) {
                    this.set_text(this.get_htmlField().val());
                    this.setSelection(this.get_htmlField().prop("selectionStart"), this.get_htmlField().prop("selectionEnd"));
                    this.dispatchEvent(new hM("change"))
                }
                this.get_htmlField().focus()
            }
        },
        __class__: ei,
        __properties__: lP(mx.prototype.__properties__, {
            get_htmlField: "get_htmlField"
        })
    });
    var K = function() {
        nK.get_events().listen("shop_event::configComplete", oT(this, this.onConfigComplete));
        nK.user.onUserChange.add(oT(this, this.onUserDataUpdate_handler))
    };
    nt["agario.module.quests.controller.QuestsController"] = K;
    K.__name__ = ["agario", "module", "quests", "controller", "QuestsController"];
    K.prototype = {
        model: null,
        dialog: null,
        state: null,
        startTime: null,
        hasSeenQuest: null,
        getActiveQuest: function() {
            if (this.model.activeQuest != null && !this.model.activeQuestCompleted) {
                return this.model.activeQuest
            } else {
                return null
            }
        },
        getProgress: function(qY, js, i1, q, i, i2) {
            if (this.model != null && this.model.activeQuest != null) {
                var qZ = this.model.activeQuest.get_type();
                switch (qZ) {
                    case "food_eaten":
                        return qY;
                    case "normal_cells_eaten":
                        return i;
                    case "viruses_eaten":
                        return q;
                    case "top_position":
                        return i2;
                    case "time_total":
                        return i1;
                    case "highest_mass":
                        return js
                }
            }
            return 0
        },
        initialize: function() {
            if (nK.models.shopData.walletTimeVariablePrices == null || nK.models.shopData.walletTimeVariablePrices.length == 0) {
                return
            }
            this.model = new fM();
            this.model.get_activateQuestResponseSignal().add(oT(this, this.onActivateQuestResponse));
            this.model.get_wonQuestProductSignal().add(oT(this, this.onWonQuestProductResponse));
            this.model.get_softPurchaseResponseSignal().add(oT(this, this.onSoftPurchaseResponse));
            this.dialog = new B();
            this.dialog.addEventListener("agario.module.quests.events.QuestsEvent.on_play_quest", oT(this, this.onPlayQuest));
            this.dialog.addEventListener("agario.module.quests.events.QuestsEvent.on_show_reward", oT(this, this.onShowReward));
            this.dialog.addEventListener("agario.module.quests.events.QuestsEvent.on_collect_reward", oT(this, this.onCollectReward));
            this.dialog.addEventListener("agario.module.quests.events.QuestsEvent.on_purchase_quest", oT(this, this.onPurchaseQuest));
            this.dialog.addEventListener("agario.module.quests.events.QuestsEvent.update_request", oT(this, this.onUpdateRequest));
            nK.get_events().listen("shop_event::openQuestsDialog", oT(this, this.onOpenQuestsDialog));
            nK.get_events().listen("shop_event::on_quest_progress_label_update", oT(this, this.onProgressRequest_Handler))
        },
        onConfigComplete: function() {
            nK.get_events().unlisten("shop_event::configComplete", oT(this, this.onConfigComplete));
            this.initialize()
        },
        onUserDataUpdate_handler: function() {
            if (nK.user == null || nK.user.userInfo == null) {
                j7.debug("QuestsController:::No user info!", {
                    fileName: "QuestsController.hx",
                    lineNumber: 113,
                    className: "agario.module.quests.controller.QuestsController",
                    methodName: "onUserDataUpdate_handler"
                });
                this.showPanel();
                this.setQuestsWarning(false, false);
                return
            }
            if (nK.user.userInfo.isNewUser) {
                j7.debug("QuestsController:::New user!", {
                    fileName: "QuestsController.hx",
                    lineNumber: 124,
                    className: "agario.module.quests.controller.QuestsController",
                    methodName: "onUserDataUpdate_handler"
                });
                this.hidePanel();
                return
            }
            this.showPanel();
            this.model.set_activeQuest(nK.user.userInfo.quest);
            this.model.timedEvent = nK.user.userInfo.getTimedEvent("dailyQuest");
            this.startTime = new Date().getTime();
            this.setState(mc.INIT)
        },
        onWonQuestProductResponse: function(i) {
            if (i.get_productId() == "coin") {
                this.updateCoinsAmount(i.get_finalAmount())
            }
            this.state = mc.COMPLETE;
            this.updateRewardImage(i.get_productId(), i.get_deltaAmount());
            this.onOpenQuestsDialog(null)
        },
        onUpdateRequest: function(q) {
            if (this.state == mc.READY) {
                var i = this.getActiveQuestSeconds();
                if (i <= 0) {
                    j7.debug("QuestsController: Time out!", {
                        fileName: "QuestsController.hx",
                        lineNumber: 160,
                        className: "agario.module.quests.controller.QuestsController",
                        methodName: "onUpdateRequest"
                    });
                    this.state = mc.LOADING;
                    this.dialog.close()
                } else {
                    this.setCurrentQuestText();
                    this.updateTimeCounter(i)
                }
            } else {
                if (this.state == mc.WAITING) {
                    var i1 = this.getTimedEventSeconds();
                    if (i1 <= 0) {
                        j7.debug("QuestsController: Time out (2)! " + i1, {
                            fileName: "QuestsController.hx",
                            lineNumber: 176,
                            className: "agario.module.quests.controller.QuestsController",
                            methodName: "onUpdateRequest"
                        });
                        this.state = mc.LOADING;
                        this.dialog.close()
                    } else {
                        this.updateWaitView(i1)
                    }
                }
            }
        },
        getTimedEventSeconds: function() {
            if (this.model.timedEvent != null) {
                var i = new Date().getTime();
                return this.model.timedEvent.nextAvailableInSeconds - Math.round((i - this.startTime) / 1000)
            } else {
                return this.getActiveQuestSeconds()
            }
        },
        getActiveQuestSeconds: function() {
            if (this.model.activeQuest != null) {
                var i1 = new Date().getTime();
                var q = this.model.activeQuest.get_expiresInSeconds();
                var i = Math.round((i1 - this.startTime) / 1000);
                return q - i
            } else {
                return -1
            }
        },
        onOpenQuestsDialog: function(q) {
            var i;
            this.setState(this.state);
            if (this.model.activeQuest == null) {
                i = false
            } else {
                this.hasSeenQuest = true;
                i = !this.model.activeQuestCompleted
            }
            if (this.dialog.parent != null) {
                this.dialog.parent.removeChild(this.dialog)
            }
            nK.services.gameui.showContainer();
            nK.views.openView(this.dialog, {
                priority: 1,
                animate: true,
                allowClickClose: true
            })
        },
        setState: function(i) {
            if (i == null) {
                return
            }
            this.state = i;
            j7.debug("Quest state: " + kr.string(this.state), {
                fileName: "QuestsController.hx",
                lineNumber: 246,
                className: "agario.module.quests.controller.QuestsController",
                methodName: "setState"
            });
            var i1 = this.state;
            switch (i1[1]) {
                case 0:
                    if (this.model.activeQuest != null) {
                        if (this.model.activeQuestCompleted) {
                            this.setState(mc.WAITING)
                        } else {
                            this.setState(mc.READY)
                        }
                    } else {
                        var q = nK.user.getWalletItemById("quest_activation_24h");
                        if (this.model.timedEvent == null || q != null && q.get_balance() > 0) {
                            this.setState(mc.LOADING)
                        } else {
                            this.setState(mc.WAITING)
                        }
                    }
                    return;
                case 1:
                    this.model.set_activeQuest(null);
                    this.dialog.showLoadingView();
                    this.model.activateQuestRequest();
                    break;
                case 2:
                    this.dialog.showReadyView();
                    this.setQuestsWarning(true, !this.hasSeenQuest);
                    break;
                case 3:
                    this.model.activeQuestCompleted = true;
                    this.dialog.showCompletedView();
                    this.setQuestsWarning(false, false);
                    break;
                case 4:
                    this.dialog.showRewardView();
                    break;
                case 5:
                    this.model.timedEvent = nK.user.userInfo.getTimedEvent("dailyQuest");
                    this.dialog.showWaitView();
                    this.setQuestsWarning(false, false, this.getTimedEventSeconds());
                    break
            }
        },
        onPlayQuest: function(i) {
            if (this.model.activeQuest == null) {
                this.model.activateQuestRequest()
            } else {
                this.dialog.close();
                nK.get_events().fire(m0.START_GAME, {
                    mode: ""
                })
            }
        },
        onActivateQuestResponse: function(i) {
            this.model.set_activeQuest(i.get_userQuest());
            this.setCurrentQuestText();
            this.hasSeenQuest = false;
            this.startTime = new Date().getTime();
            this.setState(mc.READY);
            j7.debug("Quest Activated:" + this.model.activeQuest.get_productId(), {
                fileName: "QuestsController.hx",
                lineNumber: 338,
                className: "agario.module.quests.controller.QuestsController",
                methodName: "onActivateQuestResponse"
            })
        },
        onShowReward: function(i) {
            this.setState(mc.REWARD)
        },
        onCollectReward: function(i) {
            this.setState(mc.WAITING)
        },
        onPurchaseQuest: function(i) {
            this.model.waitForPurchase();
            nK.services.shop.S_notEnoughCoins.addOnce(oT(this, this.notEnoughCoins));
            nK.get_events().dispatchEventWith("ShopEvent::BUY", this.model.bundleId)
        },
        notEnoughCoins: function() {
            nK.services.gameui.showContainer();
            var i = new qm();
            i.addEventListener("addedToStage", oT(this, this.onAddedToStage_ShopDialog));
            nK.views.openView(i, {
                priority: 2,
                animate: false,
                allowClickClose: true
            })
        },
        onAddedToStage_ShopDialog: function(q) {
            var i = q.currentTarget;
            i.notEnoughCoins()
        },
        onSoftPurchaseResponse: function(i) {
            nK.services.shop.S_notEnoughCoins.remove(oT(this, this.notEnoughCoins));
            if (i.get_productUpdates() != null) {
                var i1 = 0;
                var q = i.get_productUpdates();
                while (i1 < q.length) {
                    var i2 = q[i1];
                    ++i1;
                    if (i2.get_productField().get_productId() == "coin") {
                        this.updateCoinsAmount(i2.get_productField().get_finalAmount())
                    }
                }
            }
            nK.get_events().dispatchEventWith("ShopEvent::softPurchaseComplete", "dailyQuest");
            this.setState(mc.LOADING)
        },
        setCurrentQuestText: function() {
            if (this.model.activeQuest != null) {
                var q = nK.models.getVisualQuestByType(this.model.activeQuest.get_type());
                var i1 = q.getDescriptionByGoal(this.model.activeQuest.get_goal());
                var i = this.model.activeQuest.get_goal();
                if (this.model.activeQuest.get_type() == "time_total") {
                    i = i / 60 | 0
                }
                this.dialog.updateQuestText(dk.text(i1), i)
            }
        },
        updateWaitView: function(q) {
            var i = this.model.getPriceForNextQuest(q);
            this.dialog.setPrice(i);
            this.updateTimeCounter(q);
            if (q <= 0) {
                this.dialog.close()
            }
        },
        updateRewardImage: function(i1, q) {
            var js = nK.models.getVisualProduct(i1);
            var i = nK.models.walletProductsModel.getProductById(i1);
            var qY = null;
            if (i.type == "skin") {
                qY = nK.models.shopSkinsModel.getItemById(i1)
            }
            var i2 = dk.text(js.description);
            i2 = cP.replace(i2, "%i", "" + q);
            this.dialog.updateReward(i2, js.visualSource, qY)
        },
        updateTimeCounter: function(i) {
            var q = this.getTimeString(i * 1000);
            this.dialog.updateTimer(q)
        },
        getTimeString: function(i) {
            return ez.getStringFromTimestamp(i)
        },
        onProgressRequest_Handler: function(q) {
            if (this.model.activeQuest != null && !this.model.activeQuestCompleted) {
                var i = nK.models.getVisualQuestByType(this.model.activeQuest.get_type());
                nK.setProgressLabel(i.getProgressByGoal(this.model.activeQuest.get_goal(), q.data))
            } else {
                nK.setProgressLabel("")
            }
        },
        showPanel: function() {
            var i = ne.JQuery("#dailyquests-panel");
            i.show()
        },
        hidePanel: function() {
            var i = ne.JQuery("#dailyquests-panel");
            i.hide()
        },
        setQuestsWarning: function(i, q, i1) {
            if (i1 == null) {
                i1 = 0
            }
            nK.services.gameui.setQuestsWarning(i, q, i1)
        },
        updateCoinsAmount: function(i) {
            nK.user.set_coins(i);
            nK.get_events().dispatchEventWith(o1.WALLET_UPDATED);
            nK.services.gameui.setUserCoins(i)
        },
        __class__: K
    };
    var jq = function(i1, q, i) {
        if (i == null) {
            i = false
        }
        if (q == null) {
            q = true
        }
        hM.call(this, i1, q, i)
    };
    nt["agario.module.quests.events.QuestsEvent"] = jq;
    jq.__name__ = ["agario", "module", "quests", "events", "QuestsEvent"];
    jq.__super__ = hM;
    jq.prototype = lP(hM.prototype, {
        __class__: jq
    });
    var fM = function() {
        var i2 = this;
        this.server = new jH();
        this.shopService = l4.getService(f4);
        var i1 = "dailyQuest";
        var js = nK.models.getBonusById(i1);
        this.bundleId = js.bundleId;
        var i = nK.models.walletProductBundlesModel.getBundleByBundleId(this.bundleId);
        this.productId = i.productId;
        var q = nK.models.shopData.walletTimeVariablePrices.filter(function(qY) {
            return qY.purchaseIdForTimedEvent == i2.bundleId
        });
        if (q.length > 0) {
            this.prices = q[0]
        }
    };
    nt["agario.module.quests.model.QuestsModel"] = fM;
    fM.__name__ = ["agario", "module", "quests", "model", "QuestsModel"];
    fM.prototype = {
        activateQuestResponseSignal: null,
        wonQuestProductSignal: null,
        softPurchaseResponseSignal: null,
        server: null,
        shopService: null,
        activeQuest: null,
        activeQuestCompleted: null,
        prices: null,
        productId: null,
        bundleId: null,
        timedEvent: null,
        get_activateQuestResponseSignal: function() {
            return this.server.activateQuestResponseSignal
        },
        get_wonQuestProductSignal: function() {
            return this.server.wonQuestProductSignal
        },
        get_softPurchaseResponseSignal: function() {
            return this.server.softPurchaseResponseSignal
        },
        set_activeQuest: function(i) {
            this.activeQuest = i;
            return i
        },
        activateQuestRequest: function() {
            j7.debug("Quest: activate timed event!", {
                fileName: "QuestsModel.hx",
                lineNumber: 86,
                className: "agario.module.quests.model.QuestsModel",
                methodName: "activateQuestRequest"
            });
            this.server.activateTimedEventResponseSignal.addOnce(oT(this, this.onActivateTimedEventResponse));
            this.shopService.activateTimedEvent("dailyQuest")
        },
        waitForPurchase: function() {
            this.server.waitForPurchase()
        },
        getPriceForNextQuest: function(js) {
            var i = nK.models.getSoftPurchaseById(this.bundleId).currencyAmount;
            var i1 = 86400 - js;
            var q = Math.floor(i1 / (this.prices.everyXMins * 60 * 60));
            var i2 = q * this.prices.decreaseCurrencyAmountBy;
            return i - i2
        },
        onActivateTimedEventResponse: function(i) {
            j7.debug("Quest: Request quest!", {
                fileName: "QuestsModel.hx",
                lineNumber: 111,
                className: "agario.module.quests.model.QuestsModel",
                methodName: "onActivateTimedEventResponse"
            });
            this.server.activateQuestRequest(this.productId)
        },
        onActivateQuestResponse: function(i) {},
        __class__: fM,
        __properties__: {
            set_activeQuest: "set_activeQuest",
            get_softPurchaseResponseSignal: "get_softPurchaseResponseSignal",
            get_wonQuestProductSignal: "get_wonQuestProductSignal",
            get_activateQuestResponseSignal: "get_activateQuestResponseSignal"
        }
    };
    var mc = nt["agario.module.quests.model.data.QuestState"] = {
        __ename__: ["agario", "module", "quests", "model", "data", "QuestState"],
        __constructs__: ["INIT", "LOADING", "READY", "COMPLETE", "REWARD", "WAITING"]
    };
    mc.INIT = ["INIT", 0];
    mc.INIT.toString = ea;
    mc.INIT.__enum__ = mc;
    mc.LOADING = ["LOADING", 1];
    mc.LOADING.toString = ea;
    mc.LOADING.__enum__ = mc;
    mc.READY = ["READY", 2];
    mc.READY.toString = ea;
    mc.READY.__enum__ = mc;
    mc.COMPLETE = ["COMPLETE", 3];
    mc.COMPLETE.toString = ea;
    mc.COMPLETE.__enum__ = mc;
    mc.REWARD = ["REWARD", 4];
    mc.REWARD.toString = ea;
    mc.REWARD.__enum__ = mc;
    mc.WAITING = ["WAITING", 5];
    mc.WAITING.toString = ea;
    mc.WAITING.__enum__ = mc;
    var jH = function() {
        this.server = l4.getService(pu);
        this.server.register(111, oT(this, this.onActivateTimedEventResponse));
        this.server.register(115, oT(this, this.onActivateQuestResponse));
        this.server.register(62, oT(this, this.onGameOver));
        this.activateQuestResponseSignal = new qt();
        this.activateTimedEventResponseSignal = new qt();
        this.wonQuestProductSignal = new qt();
        this.softPurchaseResponseSignal = new qt()
    };
    nt["agario.module.quests.model.proxies.QuestsServerProxy"] = jH;
    jH.__name__ = ["agario", "module", "quests", "model", "proxies", "QuestsServerProxy"];
    jH.prototype = {
        activateQuestResponseSignal: null,
        activateTimedEventResponseSignal: null,
        wonQuestProductSignal: null,
        softPurchaseResponseSignal: null,
        server: null,
        activateQuestRequest: function(i) {
            var q = new jd();
            q.set_productId(i);
            this.server.sendMessage(114, q)
        },
        waitForPurchase: function() {
            this.server.register(71, oT(this, this.onSoftPurchaseResponse))
        },
        onActivateQuestResponse: function(i, q) {
            this.activateQuestResponseSignal.dispatch(n0.__cast(q, bz))
        },
        onGameOver: function(i, qY) {
            var q = qY;
            var js = 0;
            var i2 = q.get_userDataUpdates();
            while (js < i2.length) {
                var i1 = i2[js];
                ++js;
                if (i1.get_type() == 20) {
                    if (i1.get_productField().get_origin() == 13) {
                        this.wonQuestProductSignal.dispatch(i1.get_productField());
                        return
                    }
                }
            }
        },
        onActivateTimedEventResponse: function(i, i1) {
            if (i != 111) {
                return
            }
            var q = i1;
            this.activateTimedEventResponseSignal.dispatch(q)
        },
        onSoftPurchaseResponse: function(i, i1) {
            this.server.unregister(71, oT(this, this.onSoftPurchaseResponse));
            var q = i1;
            this.softPurchaseResponseSignal.dispatch(q)
        },
        __class__: jH
    };
    var f1 = function(i) {
        if (i != null) {
            this.setValues(i)
        }
    };
    nt["oaktree.core.VO"] = f1;
    f1.__name__ = ["oaktree", "core", "VO"];
    f1.addFieldDeclaration = function(i1, js, q) {
        if (!f1.classCache.exists(i1)) {
            var i2 = new io();
            f1.classCache.set(i1, i2)
        }
        var i = f1.classCache.get(i1);
        i.set(js, q)
    };
    f1.classHasField = function(i, i1) {
        if (f1.classCache.exists(i)) {
            var q = f1.classCache.get(i);
            if (pN[i1] != null ? q.existsReserved(i1) : q.h.hasOwnProperty(i1)) {
                return true
            }
        }
        return false
    };
    f1.prototype = {
        handleSpecialTypes: function(i, q) {
            return false
        },
        hasField: function(q) {
            var i = kX.getInstanceFields(n0.getClass(this));
            var i2 = 0;
            while (i2 < i.length) {
                var i1 = i[i2];
                ++i2;
                if (i1 == q) {
                    return true
                }
            }
            return false
        },
        setValues: function(js) {
            var i = n0.getClass(this);
            var q2 = kX.getClassName(i);
            this.loadFieldInfo(true, q2, i);
            var q4 = at.getFields(i);
            var q6 = new io();
            var qY = 0;
            var q3 = ar.fields(q4);
            while (qY < q3.length) {
                var q8 = q3[qY];
                ++qY;
                var q = ar.field(q4, q8);
                if (Object.prototype.hasOwnProperty.call(q, "name")) {
                    var q7 = ar.field(q, "name")[0];
                    if (pN[q7] != null) {
                        q6.setReserved(q7, q8)
                    } else {
                        q6.h[q7] = q8
                    }
                }
            }
            var q1 = 0;
            var i2 = ar.fields(js);
            while (q1 < i2.length) {
                var q5 = i2[q1];
                ++q1;
                var i1 = q5;
                if (pN[q5] != null ? q6.existsReserved(q5) : q6.h.hasOwnProperty(q5)) {
                    i1 = pN[q5] != null ? q6.getReserved(q5) : q6.h[q5]
                }
                if (this.handleSpecialTypes(q5, js)) {} else {
                    if (f1.classHasField(q2, i1)) {
                        var qZ = this.getDeclaredTypeOfField(q2, i1);
                        var q0 = this._parse(qZ, ar.getProperty(js, q5));
                        if (q0 == "YES") {
                            q0 = true
                        } else {
                            if (q0 == "NO") {
                                q0 = false
                            }
                        }
                        ar.setProperty(this, i1, q0)
                    } else {}
                }
            }
        },
        _parse: function(i1, i) {
            switch (i1[1]) {
                case 0:
                    var q = i1[2];
                    return i;
                case 3:
                    var qY = i1[2];
                    var i2 = this.resolveVOType(qY);
                    return this._parseArray(i2, qY, i);
                case 1:
                    var js = i1[2];
                    return this._parseClass(js, i);
                default:
                    return null
            }
            return null
        },
        _parseClass: function(q, i) {
            var qY = 0;
            var i2 = ar.fields(i);
            while (qY < i2.length) {
                var qZ = i2[qY];
                ++qY;
                var js = ar.getProperty(i, qZ);
                if (js != null) {
                    var i1 = typeof(js) == "string" || ((js | 0) === js) || typeof(js) == "number";
                    if (!i1) {
                        if (js._value != null) {
                            ar.setProperty(i, qZ, js._value)
                        } else {
                            if (js._key != null) {
                                ar.setProperty(i, qZ, js._key)
                            }
                        }
                    }
                }
            }
            return kX.createInstance(kX.resolveClass(q), [i])
        },
        resolveVOType: function(i1) {
            switch (i1[1]) {
                case 0:
                    var i = i1[2];
                    var js = kX.resolveClass(i);
                    return js;
                case 1:
                    var i2 = i1[2];
                    var q = kX.resolveClass(i2);
                    return q;
                default:
                    return null
            }
            return null
        },
        _parseArray: function(i2, q0, i1) {
            var q = [];
            var i = i1;
            var qY = 0;
            var qZ = i.length;
            while (qY < qZ) {
                var js = qY++;
                q.push(this._parse(q0, i[js]))
            }
            return q
        },
        parseRTTIFields: function(q) {
            switch (q[1]) {
                case 7:
                    var js = q[3];
                    var i = q[2];
                    return this.parseFieldType(i, js);
                case 2:
                    var i1 = q[3];
                    var i2 = q[2];
                    return this.parseFieldType(i2, i1);
                default:
            }
            return mh.VT_Unknown
        },
        parseFieldType: function(i, i1) {
            switch (i) {
                case "String":
                case "Int":
                case "Float":
                case "Bool":
                case "Date":
                    return mh.VT_Native(i);
                case "Array":
                    var q = this.parseRTTIFields(i1.pop());
                    if (q != null) {
                        return mh.VT_Array(q)
                    }
                    break;
                default:
            }
            return mh.VT_Class(i)
        },
        loadFieldInfo: function(q4, q1, q) {
            if (q4 == null) {
                q4 = false
            }
            if (q4 && f1.classCache.exists(q1)) {
                return
            }
            var qZ = kg.getRtti(q);
            var qY = qZ.fields.h;
            var q0 = null;
            while (qY != null) {
                var q2;
                q2 = (function(q6) {
                    var q5;
                    q0 = qY[0];
                    qY = qY[1];
                    q5 = q0;
                    return q5
                }(this));
                if (q2.isPublic) {
                    var i2 = q2.type;
                    switch (i2[1]) {
                        case 7:
                            var i1 = i2[3];
                            var i = i2[2];
                            f1.addFieldDeclaration(q1, q2.name, this.parseFieldType(i, i1));
                            break;
                        case 2:
                            var q3 = i2[3];
                            var js = i2[2];
                            f1.addFieldDeclaration(q1, q2.name, this.parseFieldType(js, q3));
                            break;
                        default:
                    }
                }
            }
            if (qZ.superClass != null) {
                this.loadFieldInfo(false, q1, kX.resolveClass(qZ.superClass.path))
            }
        },
        getDeclaredTypeOfField: function(i, i1) {
            if (f1.classCache.exists(i)) {
                var q = f1.classCache.get(i);
                if (pN[i1] != null ? q.existsReserved(i1) : q.h.hasOwnProperty(i1)) {
                    return pN[i1] != null ? q.getReserved(i1) : q.h[i1]
                }
            }
            return mh.VT_Unknown
        },
        get_DEBUG: function() {
            return true
        },
        __class__: f1,
        __properties__: {
            get_DEBUG: "get_DEBUG"
        }
    };
    var aT = function(i) {
        f1.call(this, i)
    };
    nt["agario.module.quests.model.vo.VisualQuestVO"] = aT;
    aT.__name__ = ["agario", "module", "quests", "model", "vo", "VisualQuestVO"];
    aT.__super__ = f1;
    aT.prototype = lP(f1.prototype, {
        originId: null,
        productIdToQuantify: null,
        questType: null,
        questTypeDescriptionSingularTag: null,
        questTypeDescriptionPluralTag: null,
        questActiveImage: null,
        serverConversionDivisor: null,
        questProgressDescriptionTag: null,
        getProgressByGoal: function(i1, q) {
            if (this.questType == "time_total") {
                q = q / 1000 | 0
            }
            if (this.questType != "top_position" && q >= i1) {
                q = i1
            }
            var i = dk.text(this.questProgressDescriptionTag);
            if (this.questType == "time_total") {
                var js = i1 - q;
                var i2 = js / 60 | 0;
                js -= i2 * 60;
                i = i.split("%@")[0] + i2 + "m " + js + "s"
            } else {
                if (this.questType == "top_position") {
                    i = i.split("%i")[0] + i1
                } else {
                    i = i.split("%i")[0] + q + i.split("%i")[1] + i1
                }
            }
            return i
        },
        getDescriptionByGoal: function(q) {
            var i;
            if (q <= 1) {
                i = this.questTypeDescriptionSingularTag
            } else {
                i = this.questTypeDescriptionPluralTag
            }
            return cP.replace(i, "%i", q == null ? "null" : "" + q)
        },
        __class__: aT
    });
    var B = function() {
        ol.call(this, "quests_dialog");
        this.maxWidth = 450;
        this.maxHeight = 500;
        this.createViews()
    };
    nt["agario.module.quests.view.QuestsDialog"] = B;
    B.__name__ = ["agario", "module", "quests", "view", "QuestsDialog"];
    B.__super__ = ol;
    B.prototype = lP(ol.prototype, {
        activeView: null,
        readyView: null,
        completedView: null,
        rewardView: null,
        waitView: null,
        loadingView: null,
        enable: function() {
            ol.prototype.enable.call(this);
            this.closeButton.set_enabled(true)
        },
        disable: function() {
            this.closeOnEscape = true;
            ol.prototype.disable.call(this)
        },
        showLoadingView: function() {
            this.showView(this.loadingView, false);
            this.canClose(true)
        },
        showReadyView: function() {
            this.showView(this.readyView, false);
            this.canClose(true)
        },
        showCompletedView: function() {
            this.showView(this.completedView, true);
            this.canClose(false)
        },
        showRewardView: function() {
            this.showView(this.rewardView, false);
            this.canClose(false)
        },
        showWaitView: function(i) {
            if (i == null) {
                i = false
            }
            this.showView(this.waitView, i);
            this.canClose(true)
        },
        setAllViewsAlpha: function(i) {
            this.readyView.set_alpha(i);
            this.completedView.set_alpha(i);
            this.rewardView.set_alpha(i);
            this.waitView.set_alpha(i)
        },
        updateTimer: function(i) {
            this.readyView.updateTimer(i);
            this.waitView.updateTimer(i)
        },
        updateQuestText: function(q, i) {
            this.readyView.updateQuestText(q, i);
            this.completedView.updateQuestText(q, i)
        },
        updateReward: function(i, i1, q) {
            this.rewardView.updateReward(i, i1, q)
        },
        setPrice: function(i) {
            this.waitView.setPrice(i)
        },
        dispose: function() {},
        initialize: function() {
            ol.prototype.initialize.call(this);
            this.addViews();
            nK.get_events().addEventListener("ShopEvent::connectionLost", oT(this, this.onConnectionLost));
            nK.get_events().addEventListener("userLoggedOut", oT(this, this.onConnectionLost))
        },
        createViews: function() {
            this.loadingView = new cx();
            this.loadingView.maxHeight = 250;
            this.loadingView.maxWidth = this.maxWidth;
            this.readyView = new h();
            this.readyView.maxHeight = this.maxHeight;
            this.readyView.maxWidth = this.maxWidth;
            this.completedView = new ej();
            this.completedView.maxHeight = this.maxHeight;
            this.completedView.maxWidth = this.maxWidth;
            this.rewardView = new ki();
            this.rewardView.maxHeight = this.maxHeight;
            this.rewardView.maxWidth = this.maxWidth;
            this.waitView = new aC();
            this.waitView.maxHeight = this.maxHeight;
            this.waitView.maxWidth = this.maxWidth
        },
        addViews: function() {
            this.addChild(this.loadingView);
            this.addChild(this.readyView);
            this.addChild(this.completedView);
            this.addChild(this.rewardView);
            this.addChild(this.waitView)
        },
        showView: function(i, q) {
            if (this.activeView != null) {
                this.activeView.close()
            }
            this.activeView = i;
            i.open(q)
        },
        canClose: function(i) {
            this.closeOnEscape = i;
            this.closeButton.set_visible(i)
        },
        close: function(i) {
            if (i == null) {
                i = false
            }
            if (this.closeButton.get_visible()) {
                ol.prototype.close.call(this, i)
            }
        },
        onAddedToStage: function(i) {
            ol.prototype.onAddedToStage.call(this, i);
            this.dispatchEvent(new hM("open"))
        },
        onConnectionLost: function(q) {
            nK.views.closeAllViews(qm);
            this.disable();
            var i = new oo();
            nK.views.openView(i, {
                priority: 2,
                animate: true,
                allowClickClose: false,
                callerView: this
            });
            nK.get_events().removeEventListener("ShopEvent::connectionLost", oT(this, this.onConnectionLost));
            nK.get_events().removeEventListener("userLoggedOut", oT(this, this.onConnectionLost));
            i.addEventListener("close", oT(this, this.closeDisconnect))
        },
        closeDisconnect: function(i) {
            nK.views.closeTopView()
        },
        __class__: B
    });
    var ej = function() {
        this.questText = "";
        hC.call(this);
        this.particleSystem1 = [];
        this.particleSystem1.push(cA.load("particle/Daily_Quest_Sparkles_1.plist"));
        this.particleSystem1.push(cA.load("particle/Daily_Quest_Sparkles_1a.plist"));
        this.particleSystem1.push(cA.load("particle/Daily_Quest_Sparkles_1b.plist"));
        this.particleSystem1.push(cA.load("particle/Daily_Quest_Sparkles_1c.plist"));
        this.particleSystem2 = [];
        this.particleSystem2.push(cA.load("particle/Daily_Quest_Sparkles_2.plist"));
        this.particleSystem2.push(cA.load("particle/Daily_Quest_Sparkles_2a.plist"));
        this.particleSystem2.push(cA.load("particle/Daily_Quest_Sparkles_2b.plist"));
        this.particleSystem2.push(cA.load("particle/Daily_Quest_Sparkles_2c.plist"));
        this.set_visible(false);
        this.shakeTimer = new og(3000)
    };
    nt["agario.module.quests.view.QuestsViewCompleted"] = ej;
    ej.__name__ = ["agario", "module", "quests", "view", "QuestsViewCompleted"];
    ej.__super__ = hC;
    ej.prototype = lP(hC.prototype, {
        titleLabel: null,
        completedLabel: null,
        questLabel: null,
        openButton: null,
        chest: null,
        rectangle: null,
        questText: null,
        renderer: null,
        particleSystem1: null,
        particleSystem2: null,
        shakeTimer: null,
        updateQuestText: function(q, i) {
            q = cP.replace(q, "%i", "" + i);
            q = cP.replace(q, "%@", dk.text("daily_quests_ffa_match"));
            if (this.questLabel != null) {
                this.questLabel.set_text(q);
                this.positionUI()
            }
        },
        open: function(i) {
            if (i == null) {
                i = true
            }
            this.set_visible(true);
            this.showChest()
        },
        close: function(i) {
            if (i == null) {
                i = false
            }
            this.set_visible(false);
            this.shakeTimer.stop()
        },
        initialize: function() {
            hC.prototype.initialize.call(this);
            this.buildUI();
            this.positionUI();
            this.openButton.addEventListener("click", oT(this, this.onCollectReward))
        },
        buildUI: function() {
            this.rectangle = new cY();
            this.rectangle.get_graphics().beginFill(16119285, 1);
            this.rectangle.get_graphics().drawRect(25, 120, 400, 280);
            this.rectangle.get_graphics().endFill();
            this.addChild(this.rectangle);
            this.titleLabel = new m1({
                text: dk.text("menu_daily_quest_title"),
                fontSize: 32,
                color: 3421236,
                width: 300,
                align: 0
            });
            this.titleLabel.set_height(this.titleLabel.get_textHeight() + 10);
            this.titleLabel.set_selectable(false);
            this.addChild(this.titleLabel);
            this.completedLabel = new m1({
                text: dk.text("menu_daily_quest_complete_subtitle"),
                fontSize: 20,
                color: 3421236,
                width: 400,
                align: 0
            });
            this.completedLabel.set_height(this.completedLabel.get_textHeight() + 10);
            this.completedLabel.set_selectable(false);
            this.addChild(this.completedLabel);
            this.questLabel = new m1({
                text: this.questText,
                fontSize: 18,
                color: 3421236,
                width: 400,
                align: 0
            });
            this.questLabel.set_height(this.questLabel.get_textHeight() + 10);
            this.questLabel.set_selectable(false);
            this.addChild(this.questLabel);
            this.openButton = new hv({
                labelUp: {
                    text: dk.text("menu_daily_quest_complete_button"),
                    fontSize: 15,
                    color: 16777215
                },
                width: 130,
                height: 35
            });
            this.addChild(this.openButton);
            this.renderer = new oq();
            this.addChild(this.renderer);
            this.chest = new cY();
            var i = new el(nK.get_assets().getTexture("chest_bottom", "main_shop").get_bitmapData());
            i.set_x(-i.get_width() * 0.5);
            i.set_y(-i.get_height() * 0.5);
            var q = new cY();
            var i1 = new el(nK.get_assets().getTexture("chest_top", "main_shop").get_bitmapData());
            i1.set_x(-i1.get_width() * 0.5);
            q.addChild(i1);
            q.set_y(i.get_y() - 100);
            this.chest.addChild(i);
            this.chest.addChild(q);
            this.addChild(this.chest);
            this.addParticles(this.particleSystem1);
            this.addParticles(this.particleSystem2)
        },
        positionUI: function() {
            this.titleLabel.set_x((this.maxWidth - this.titleLabel.get_width()) * 0.5);
            this.titleLabel.set_y(30);
            this.completedLabel.set_x((this.maxWidth - this.completedLabel.get_width()) * 0.5);
            this.completedLabel.set_y(this.titleLabel.get_y() + this.titleLabel.get_height());
            this.questLabel.set_x((this.maxWidth - this.questLabel.get_width()) * 0.5);
            this.questLabel.set_y(120 + this.rectangle.get_y() + this.rectangle.get_height() - this.questLabel.get_height() - 10);
            this.openButton.set_x((this.maxWidth - this.openButton.get_width()) * 0.5);
            this.openButton.set_y(this.maxHeight - this.openButton.get_height() - 35);
            this.chest.set_x(this.maxWidth * 0.5);
            this.chest.set_y(120 + this.rectangle.get_y() + this.rectangle.get_height() * 0.5);
            this.chest.set_scaleX(this.chest.set_scaleY(0.5))
        },
        showChest: function() {
            this.chest.set_alpha(0);
            this.chest.set_scaleX(this.chest.set_scaleY(2));
            d3.tween(this.chest, 0.5, {
                alpha: 1,
                scaleX: 0.5,
                scaleY: 0.5
            }).delay(0.5).onComplete(oT(this, this.showChestComplete))
        },
        showChestComplete: function() {
            this.emitParticles(this.particleSystem1, this.maxWidth / 2, this.maxHeight / 2);
            this.emitParticles(this.particleSystem2, this.maxWidth / 2, this.maxHeight / 2);
            this.shakeTimer.run = oT(this, this.shakeChest)
        },
        shakeChest: function() {
            var i = this.chest.get_y();
            d3.tween(this.chest, 0.15, {
                y: i - 5
            }).delay(0.5);
            d3.tween(this.chest.getChildAt(1), 0.1, {
                rotation: -5
            }, false).delay(0.5);
            d3.tween(this.chest.getChildAt(1), 0.1, {
                rotation: 5
            }, false).delay(0.6);
            d3.tween(this.chest.getChildAt(1), 0.1, {
                rotation: 0
            }, false).delay(0.7);
            d3.tween(this.chest, 0.15, {
                y: i
            }, false).delay(0.65)
        },
        addParticles: function(js) {
            if (n0.__instanceof(js, hV)) {
                var i = js;
                this.renderer.addParticleSystem(i)
            } else {
                var i1 = js;
                var i2 = 0;
                while (i2 < i1.length) {
                    var q = i1[i2];
                    ++i2;
                    this.renderer.addParticleSystem(q)
                }
            }
        },
        emitParticles: function(qY, i, qZ) {
            if (n0.__instanceof(qY, hV)) {
                var q = qY;
                q.emit(i, qZ)
            } else {
                var i2 = qY;
                var js = 0;
                while (js < i2.length) {
                    var i1 = i2[js];
                    ++js;
                    i1.emit(i, qZ)
                }
            }
        },
        onCollectReward: function(i) {
            this.dispatchEvent(new jq("agario.module.quests.events.QuestsEvent.on_show_reward"))
        },
        __class__: ej
    });
    var cx = function() {
        hC.call(this);
        this.set_visible(false);
        this.animTimer = new og(500)
    };
    nt["agario.module.quests.view.QuestsViewLoading"] = cx;
    cx.__name__ = ["agario", "module", "quests", "view", "QuestsViewLoading"];
    cx.__super__ = hC;
    cx.prototype = lP(hC.prototype, {
        rectangle: null,
        titleLabel: null,
        incentiveLabel: null,
        questLabel: null,
        animTimer: null,
        questBitmap: null,
        count: null,
        open: function(i) {
            if (i == null) {
                i = false
            }
            this.set_visible(true);
            this.startAnimateText()
        },
        close: function(i) {
            if (i == null) {
                i = false
            }
            this.set_visible(false);
            this.stopAnimateText()
        },
        initialize: function() {
            hC.prototype.initialize.call(this);
            this.buildUI();
            this.positionUI()
        },
        buildUI: function() {
            this.rectangle = new cY();
            this.rectangle.get_graphics().beginFill(16119285, 1);
            this.rectangle.get_graphics().drawRect(25, 0, 400, 250);
            this.rectangle.get_graphics().endFill();
            this.rectangle.set_y(125);
            this.addChild(this.rectangle);
            this.titleLabel = new m1({
                text: dk.text("menu_daily_quest_title"),
                fontSize: 32,
                color: 3421236,
                width: 300,
                align: 0
            });
            this.titleLabel.set_height(this.titleLabel.get_textHeight() + 10);
            this.titleLabel.set_selectable(false);
            this.addChild(this.titleLabel);
            this.incentiveLabel = new m1({
                text: dk.text("menu_daily_quest_active_subtitle"),
                fontSize: 20,
                color: 3421236,
                width: 400,
                align: 0
            });
            this.incentiveLabel.set_height(this.incentiveLabel.get_textHeight() + 10);
            this.incentiveLabel.set_selectable(false);
            this.addChild(this.incentiveLabel);
            this.questLabel = new m1({
                text: dk.text("menu_daily_quest_active_loading"),
                fontSize: 28,
                color: 3421236,
                width: 300,
                align: 0
            });
            this.questLabel.set_height(this.titleLabel.get_textHeight() + 10);
            this.questLabel.set_selectable(false);
            this.addChild(this.questLabel);
            this.questBitmap = new el(nK.get_assets().getTexture("dailyquest_chestbudle", "main_shop").get_bitmapData());
            this.addChild(this.questBitmap)
        },
        positionUI: function() {
            this.titleLabel.set_x((this.maxWidth - this.titleLabel.get_width()) * 0.5);
            this.titleLabel.set_y(30);
            this.incentiveLabel.set_x((this.maxWidth - this.incentiveLabel.get_width()) * 0.5);
            this.incentiveLabel.set_y(this.titleLabel.get_y() + this.titleLabel.get_height());
            this.questLabel.set_x((this.maxWidth - this.questLabel.get_width()) * 0.5);
            this.questLabel.set_y(this.rectangle.get_y() + this.rectangle.get_height() - this.questLabel.get_height() - 10);
            this.questBitmap.set_x((this.maxWidth - this.questBitmap.get_width()) * 0.5);
            this.questBitmap.set_y(150)
        },
        startAnimateText: function() {
            this.count = 0;
            this.animTimer.run = oT(this, this.animBalls)
        },
        stopAnimateText: function() {
            if (this.animTimer != null) {
                this.animTimer.stop();
                this.animTimer.run = null
            }
        },
        animBalls: function() {
            if (this.rectangle == null) {
                return
            }
            this.count++;
            this.get_graphics().clear();
            this.get_graphics().beginFill(0);
            var js = this.rectangle.get_x() + this.rectangle.get_width() * 0.5 - 40;
            var i2 = this.rectangle.get_y() + this.rectangle.get_height() + 60;
            var i1 = 1;
            while (i1 < 6) {
                var q = i1++;
                this.get_graphics().drawCircle(js + q * 20, i2, (-this.count + q) % 5 == 0 ? 10 : 5)
            }
            this.get_graphics().endFill()
        },
        __class__: cx
    });
    var h = function() {
        this.questText = "";
        hC.call(this);
        this.set_visible(false)
    };
    nt["agario.module.quests.view.QuestsViewReady"] = h;
    h.__name__ = ["agario", "module", "quests", "view", "QuestsViewReady"];
    h.__super__ = hC;
    h.prototype = lP(hC.prototype, {
        titleLabel: null,
        incentiveLabel: null,
        nextQuestLabel: null,
        timerLabel: null,
        questLabel: null,
        playButton: null,
        questBitmap: null,
        rectangle: null,
        questText: null,
        updateRequestTimer: null,
        updateQuestText: function(q, i) {
            this.questText = cP.replace(q, "%@", dk.text("menu_daily_quest_active_quest_title"));
            this.questText = cP.replace(this.questText, "%i", i == null ? "null" : "" + i);
            this.questText = this.questText.split(":")[0] + ":\n" + this.questText.split(":")[1];
            if (this.questLabel != null) {
                this.questLabel.set_text(this.questText);
                this.positionUI()
            }
        },
        updateTimer: function(i) {
            if (this.timerLabel != null) {
                this.timerLabel.set_text(" " + i);
                this.positionTimer()
            }
        },
        open: function(i) {
            if (i == null) {
                i = false
            }
            this.set_visible(true);
            if (i) {
                this.set_alpha(0);
                d3.tween(this, 1, {
                    alpha: 1
                })
            }
            if (this.updateRequestTimer != null) {
                this.updateRequestTimer.stop()
            }
            this.updateRequestTimer = new og(200);
            this.updateRequestTimer.run = oT(this, this.onUpdateTimer)
        },
        close: function(i) {
            if (i == null) {
                i = false
            }
            this.set_visible(false);
            this.updateRequestTimer.stop()
        },
        initialize: function() {
            hC.prototype.initialize.call(this);
            this.buildUI();
            this.positionUI();
            this.playButton.addEventListener("click", oT(this, this.onPlayNow))
        },
        buildUI: function() {
            this.rectangle = new cY();
            this.rectangle.get_graphics().beginFill(16119285, 1);
            this.rectangle.get_graphics().drawRect(25, 150, 400, 250);
            this.rectangle.get_graphics().endFill();
            this.addChild(this.rectangle);
            this.titleLabel = new m1({
                text: dk.text("menu_daily_quest_title"),
                fontSize: 32,
                color: 3421236,
                width: 300,
                align: 0
            });
            this.titleLabel.set_height(this.titleLabel.get_textHeight() + 10);
            this.titleLabel.set_selectable(false);
            this.addChild(this.titleLabel);
            this.incentiveLabel = new m1({
                text: dk.text("menu_daily_quest_active_subtitle"),
                fontSize: 20,
                color: 3421236,
                width: 400,
                align: 0
            });
            this.incentiveLabel.set_height(this.incentiveLabel.get_textHeight() + 10);
            this.incentiveLabel.set_selectable(false);
            this.addChild(this.incentiveLabel);
            var i = cP.replace(dk.text("menu_daily_quest_active_timer"), "%@", "");
            this.nextQuestLabel = new m1({
                text: i,
                fontSize: 18,
                color: 3421236,
                width: 400,
                align: 0
            });
            this.nextQuestLabel.set_height(this.nextQuestLabel.get_textHeight() + 10);
            this.nextQuestLabel.set_selectable(false);
            this.addChild(this.nextQuestLabel);
            this.timerLabel = new m1({
                text: "",
                fontSize: 20,
                color: 13913668,
                width: 400,
                align: 0
            });
            this.timerLabel.set_height(this.timerLabel.get_textHeight() + 10);
            this.timerLabel.set_selectable(false);
            this.addChild(this.timerLabel);
            this.questLabel = new m1({
                text: this.questText,
                fontSize: 18,
                color: 3421236,
                width: 400,
                align: 0
            });
            this.questLabel.set_height(this.questLabel.get_textHeight() + 10);
            this.questLabel.set_selectable(false);
            this.addChild(this.questLabel);
            this.playButton = new hv({
                labelUp: {
                    text: dk.text("menu_daily_quest_active_play_button"),
                    fontSize: 15,
                    color: 16777215
                },
                width: 130,
                height: 35
            });
            this.addChild(this.playButton);
            this.questBitmap = new el(nK.get_assets().getTexture("dailyquest_chestbudle", "main_shop").get_bitmapData());
            this.addChild(this.questBitmap)
        },
        positionUI: function() {
            this.titleLabel.set_x((this.maxWidth - this.titleLabel.get_width()) * 0.5);
            this.titleLabel.set_y(30);
            this.incentiveLabel.set_x((this.maxWidth - this.incentiveLabel.get_width()) * 0.5);
            this.incentiveLabel.set_y(this.titleLabel.get_y() + this.titleLabel.get_height());
            this.positionTimer();
            this.questLabel.set_x((this.maxWidth - this.questLabel.get_width()) * 0.5);
            this.questLabel.set_y(this.rectangle.get_y() + this.rectangle.get_height() + 150 - this.questLabel.get_height() - 10);
            this.playButton.set_x((this.maxWidth - this.playButton.get_width()) * 0.5);
            this.playButton.set_y(this.maxHeight - this.playButton.get_height() - 35);
            this.questBitmap.set_x((this.maxWidth - this.questBitmap.get_width()) * 0.5);
            this.questBitmap.set_y(170)
        },
        positionTimer: function() {
            this.nextQuestLabel.set_x((this.maxWidth - this.nextQuestLabel.get_width() - this.timerLabel.get_textWidth()) * 0.5);
            this.nextQuestLabel.set_y(this.incentiveLabel.get_y() + this.incentiveLabel.get_height());
            this.timerLabel.set_x((this.maxWidth - this.nextQuestLabel.get_width() + this.nextQuestLabel.get_textWidth()) * 0.5);
            this.timerLabel.set_y(this.incentiveLabel.get_y() + this.incentiveLabel.get_height())
        },
        onPlayNow: function(i) {
            this.dispatchEvent(new jq("agario.module.quests.events.QuestsEvent.on_play_quest"))
        },
        onUpdateTimer: function() {
            this.dispatchEvent(new jq("agario.module.quests.events.QuestsEvent.update_request"))
        },
        __class__: h
    });
    var ki = function() {
        this.rewardText = "";
        hC.call(this);
        this.set_visible(false);
        this.particleSystem = cA.load("particle/Daily_Quest_Chest.plist")
    };
    nt["agario.module.quests.view.QuestsViewReward"] = ki;
    ki.__name__ = ["agario", "module", "quests", "view", "QuestsViewReward"];
    ki.__super__ = hC;
    ki.prototype = lP(hC.prototype, {
        titleLabel: null,
        congratulationsLabel: null,
        rewardLabel: null,
        rewardContainer: null,
        nextQuestButton: null,
        rectangle: null,
        chest: null,
        renderer: null,
        particleSystem: null,
        rewardText: null,
        updateReward: function(i1, js, i2) {
            if (this.rewardLabel != null) {
                this.rewardLabel.set_text(i1)
            }
            if (this.rewardContainer.get_numChildren() > 0) {
                this.rewardContainer.removeChildAt(0)
            }
            if (i2 != null) {
                var i = new lB({
                    bitmap: null,
                    imageSource: js,
                    w: 150,
                    h: 150,
                    borderColor: i2.gamePlayInfo.get_cellColor()
                });
                i.set_x(-75);
                i.set_y(-75);
                this.rewardContainer.addChild(i)
            } else {
                var q = new fN({
                    url: null,
                    image: js,
                    w: 150,
                    h: 150
                });
                q.set_x(-q.get_width() * 0.5);
                q.set_y(-q.get_height() * 0.5);
                this.rewardContainer.addChild(q)
            }
            this.rewardContainer.set_alpha(0)
        },
        open: function(q) {
            if (q == null) {
                q = false
            }
            var i2 = this;
            this.set_alpha(1);
            this.set_visible(true);
            var i = this.chest.getChildAt(0);
            i.set_alpha(1);
            i.set_scaleX(i.set_scaleY(1));
            i.set_x(0);
            i.set_y(-i.get_height() * 0.5);
            i.set_visible(true);
            var i1 = this.chest.getChildAt(1);
            i1.set_alpha(1);
            i1.set_rotation(0);
            i1.set_x(0);
            i1.set_y(i.get_y() - 100);
            i1.set_visible(true);
            this.rewardLabel.set_alpha(0);
            d3.timer(1).onComplete(function() {
                i2.particleSystem.emit(i2.chest.get_x(), i2.chest.get_y())
            });
            d3.tween(i1, 1, {
                y: i1.get_y() - 300,
                alpha: 0,
                rotation: -180
            }, true).delay(1);
            d3.tween(i, 1, {
                alpha: 0,
                scaleX: 0,
                scaleY: 0
            }, true).delay(1.25).onComplete(function() {
                i2.rewardContainer.set_x(i2.maxWidth * 0.5);
                i2.rewardContainer.set_y(-i2.rewardContainer.get_height());
                i2.rewardContainer.set_rotation(-360);
                i2.rewardContainer.set_scaleX(i2.rewardContainer.set_scaleY(0));
                d3.tween(i2.rewardContainer, 1, {
                    y: i2.maxHeight * 0.5,
                    alpha: 1,
                    rotation: 0,
                    scaleX: 1,
                    scaleY: 1
                })
            });
            d3.tween(this.rewardLabel, 0.5, {
                alpha: 1
            }, true).delay(2)
        },
        close: function(i) {
            if (i == null) {
                i = false
            }
            this.set_visible(false)
        },
        initialize: function() {
            hC.prototype.initialize.call(this);
            this.buildUI();
            this.positionUI();
            this.nextQuestButton.addEventListener("click", oT(this, this.onNextQuest))
        },
        buildUI: function() {
            this.rectangle = new cY();
            this.rectangle.get_graphics().beginFill(16119285, 1);
            this.rectangle.get_graphics().drawRect(25, 120, 400, 280);
            this.rectangle.get_graphics().endFill();
            this.addChild(this.rectangle);
            this.titleLabel = new m1({
                text: dk.text("menu_daily_quest_title"),
                fontSize: 32,
                color: 3421236,
                width: 300,
                align: 0
            });
            this.titleLabel.set_height(this.titleLabel.get_textHeight() + 10);
            this.titleLabel.set_selectable(false);
            this.addChild(this.titleLabel);
            this.congratulationsLabel = new m1({
                text: dk.text("menu_daily_quest_reward_subtitle"),
                fontSize: 20,
                color: 3421236,
                width: 400,
                align: 0
            });
            this.congratulationsLabel.set_height(this.congratulationsLabel.get_textHeight() + 10);
            this.congratulationsLabel.set_selectable(false);
            this.addChild(this.congratulationsLabel);
            this.rewardLabel = new m1({
                text: this.rewardText,
                fontSize: 18,
                color: 3421236,
                width: 400,
                align: 0
            });
            this.rewardLabel.set_height(this.rewardLabel.get_textHeight() + 10);
            this.rewardLabel.set_selectable(false);
            this.addChild(this.rewardLabel);
            this.renderer = new oq();
            this.renderer.addParticleSystem(this.particleSystem);
            this.addChild(this.renderer);
            this.chest = new cY();
            var i = new cY();
            var i2 = new el(nK.get_assets().getTexture("chest_bottom", "main_shop").get_bitmapData());
            i2.set_x(-i2.get_width() * 0.5);
            i.addChild(i2);
            i.set_y(-i.get_height() * 0.5);
            var i1 = new cY();
            var q = new el(nK.get_assets().getTexture("chest_top", "main_shop").get_bitmapData());
            q.set_x(-q.get_width() * 0.5);
            i1.addChild(q);
            i1.set_y(i.get_y() - 100);
            this.chest.addChild(i);
            this.chest.addChild(i1);
            this.addChild(this.chest);
            this.nextQuestButton = new hv({
                labelUp: {
                    text: dk.text("menu_daily_quest_reward_button"),
                    fontSize: 15,
                    color: 16777215
                },
                width: 130,
                height: 35
            });
            this.addChild(this.nextQuestButton);
            this.rewardContainer = new cY();
            this.addChild(this.rewardContainer)
        },
        positionUI: function() {
            this.titleLabel.set_x((this.maxWidth - this.titleLabel.get_width()) * 0.5);
            this.titleLabel.set_y(30);
            this.congratulationsLabel.set_x((this.maxWidth - this.congratulationsLabel.get_width()) * 0.5);
            this.congratulationsLabel.set_y(this.titleLabel.get_y() + this.titleLabel.get_height());
            this.nextQuestButton.set_x((this.maxWidth - this.nextQuestButton.get_width()) * 0.5);
            this.nextQuestButton.set_y(this.maxHeight - this.nextQuestButton.get_height() - 35);
            this.rewardLabel.set_x((this.maxWidth - this.rewardLabel.get_width()) * 0.5);
            this.rewardLabel.set_y(120 + this.rectangle.get_y() + this.rectangle.get_height() - this.rewardLabel.get_height() - 30);
            this.chest.set_x(this.maxWidth * 0.5);
            this.chest.set_y(120 + this.rectangle.get_y() + this.rectangle.get_height() * 0.5);
            this.chest.set_scaleX(this.chest.set_scaleY(0.5))
        },
        onNextQuest: function(i) {
            this.nextQuestButton.removeEventListener("click", oT(this, this.onNextQuest));
            this.fadeOut()
        },
        fadeOut: function() {
            var i = this;
            d3.tween(this, 1, {
                alpha: 0
            }).onComplete(function() {
                i.nextQuestButton.addEventListener("click", oT(i, i.onNextQuest));
                i.dispatchEvent(new jq("agario.module.quests.events.QuestsEvent.on_collect_reward"))
            })
        },
        fadeIn: function() {
            this.set_alpha(0);
            d3.tween(this, 1, {
                alpha: 1
            })
        },
        __class__: ki
    });
    var aC = function() {
        this.coinValue = 0;
        hC.call(this);
        this.set_visible(false)
    };
    nt["agario.module.quests.view.QuestsViewWait"] = aC;
    aC.__name__ = ["agario", "module", "quests", "view", "QuestsViewWait"];
    aC.__super__ = hC;
    aC.prototype = lP(hC.prototype, {
        titleLabel: null,
        nextQuestLabel: null,
        timerLabel: null,
        incentiveLabel1: null,
        incentiveLabel2: null,
        purchaseButton: null,
        chestBitmap: null,
        coinIcon: null,
        rectangle: null,
        coinValue: null,
        updateRequestTimer: null,
        updateCoinValue: function(i) {
            this.purchaseButton.set_text(i == null ? "null" : "" + i)
        },
        setPrice: function(i) {
            if (this.purchaseButton != null) {
                this.purchaseButton.set_text("" + i)
            }
        },
        updateTimer: function(i) {
            if (this.timerLabel != null) {
                this.timerLabel.set_text(" " + i);
                this.positionTimer()
            }
        },
        open: function(i) {
            if (i == null) {
                i = false
            }
            this.set_visible(true);
            if (i) {
                this.set_alpha(0);
                d3.tween(this, 1, {
                    alpha: 1
                })
            }
            if (this.updateRequestTimer != null) {
                this.updateRequestTimer.stop()
            }
            this.updateRequestTimer = new og(1000);
            this.updateRequestTimer.run = oT(this, this.onUpdateTimer)
        },
        close: function(i) {
            if (i == null) {
                i = false
            }
            this.set_visible(false);
            this.updateRequestTimer.stop()
        },
        initialize: function() {
            hC.prototype.initialize.call(this);
            this.buildUI();
            this.positionUI();
            this.purchaseButton.addEventListener("click", oT(this, this.onPurchaseQuest))
        },
        buildUI: function() {
            this.rectangle = new cY();
            this.rectangle.get_graphics().beginFill(16119285, 1);
            this.rectangle.get_graphics().drawRect(25, 120, 400, 280);
            this.rectangle.get_graphics().endFill();
            this.addChild(this.rectangle);
            this.titleLabel = new m1({
                text: dk.text("menu_daily_quest_title"),
                fontSize: 32,
                color: 3421236,
                width: 300,
                align: 0
            });
            this.titleLabel.set_height(this.titleLabel.get_textHeight() + 10);
            this.titleLabel.set_selectable(false);
            this.addChild(this.titleLabel);
            var i = cP.replace(dk.text("menu_daily_quest_waiting_remaining"), "%@", "");
            this.nextQuestLabel = new m1({
                text: i,
                fontSize: 20,
                color: 3421236,
                width: 400,
                align: 0
            });
            this.nextQuestLabel.set_height(this.nextQuestLabel.get_textHeight() + 10);
            this.nextQuestLabel.set_selectable(false);
            this.addChild(this.nextQuestLabel);
            this.timerLabel = new m1({
                text: "",
                fontSize: 20,
                color: 13913668,
                width: 400,
                align: 0
            });
            this.timerLabel.set_height(this.timerLabel.get_textHeight() + 10);
            this.timerLabel.set_selectable(false);
            this.addChild(this.timerLabel);
            this.incentiveLabel1 = new m1({
                text: dk.text("menu_daily_quest_description_1"),
                fontSize: 22,
                color: 3421236,
                width: 400,
                align: 0
            });
            this.incentiveLabel1.set_height(this.incentiveLabel1.get_textHeight() + 10);
            this.incentiveLabel1.set_selectable(false);
            this.addChild(this.incentiveLabel1);
            this.incentiveLabel2 = new m1({
                text: dk.text("menu_daily_quest_description_2"),
                fontSize: 24,
                color: 13913668,
                width: 400,
                align: 0
            });
            this.incentiveLabel2.set_height(this.incentiveLabel2.get_textHeight() + 10);
            this.incentiveLabel2.set_selectable(false);
            this.addChild(this.incentiveLabel2);
            this.chestBitmap = new el(nK.get_assets().getTexture("dailyquest_chest", "main_shop").get_bitmapData());
            this.addChild(this.chestBitmap);
            this.coinIcon = new el(nK.get_assets().getTexture("currency_icon", "main_shop").get_bitmapData());
            this.purchaseButton = new pa({
                color: 6343424,
                overColor: 5748225,
                text: kr.string(this.coinValue),
                fontSize: 15,
                bold: true,
                textColor: 16777215,
                textColorOver: 16777215,
                icon: this.coinIcon,
                w: 130,
                h: 35
            });
            this.addChild(this.purchaseButton)
        },
        positionUI: function() {
            this.titleLabel.set_x((this.maxWidth - this.titleLabel.get_width()) * 0.5);
            this.titleLabel.set_y(30);
            this.positionTimer();
            this.incentiveLabel1.set_x((this.maxWidth - this.incentiveLabel1.get_width()) * 0.5);
            this.incentiveLabel1.set_y(310);
            this.incentiveLabel2.set_x((this.maxWidth - this.incentiveLabel2.get_width()) * 0.5);
            this.incentiveLabel2.set_y(this.incentiveLabel1.get_y() + this.incentiveLabel1.get_height());
            this.purchaseButton.set_x((this.maxWidth - this.purchaseButton.get_width()) * 0.5);
            this.purchaseButton.set_y(this.maxHeight - this.purchaseButton.get_height() - 35);
            this.chestBitmap.set_x((this.maxWidth - this.chestBitmap.get_width()) * 0.5);
            this.chestBitmap.set_y(170)
        },
        positionTimer: function() {
            this.nextQuestLabel.set_x((this.maxWidth - this.nextQuestLabel.get_width() - this.timerLabel.get_textWidth()) * 0.5);
            this.nextQuestLabel.set_y(this.titleLabel.get_y() + this.titleLabel.get_height());
            this.timerLabel.set_x((this.maxWidth - this.nextQuestLabel.get_width() + this.nextQuestLabel.get_textWidth()) * 0.5);
            this.timerLabel.set_y(this.titleLabel.get_y() + this.titleLabel.get_height())
        },
        onPurchaseQuest: function(i) {
            this.dispatchEvent(new jq("agario.module.quests.events.QuestsEvent.on_purchase_quest"))
        },
        onUpdateTimer: function() {
            this.dispatchEvent(new jq("agario.module.quests.events.QuestsEvent.update_request"))
        },
        __class__: aC
    });
    var hU = function() {
        cY.call(this);
        this.spacing = 0
    };
    nt["agario.module.shop.components.AlignmentSprite"] = hU;
    hU.__name__ = ["agario", "module", "shop", "components", "AlignmentSprite"];
    hU.__super__ = cY;
    hU.prototype = lP(cY.prototype, {
        spacing: null,
        align: function() {
            var q6 = this.getChildrenWidth();
            var q5 = 0;
            var q4 = -q6 * 0.5;
            var q3 = 0;
            var q0 = this.get_numChildren();
            while (q3 < q0) {
                var qY = q3++;
                var i2 = this.getChildAt(qY);
                i2.set_x(q4);
                i2.set_y(-i2.get_height() * 0.5);
                q4 += i2.get_width() + this.spacing;
                if (i2.get_height() * 0.5 > q5) {
                    q5 = i2.get_height() * 0.5
                }
            }
            var qZ = 0;
            var q2 = this.get_numChildren();
            while (qZ < q2) {
                var js = qZ++;
                var q1 = this.getChildAt(js);
                var q = q1;
                q.set_y(q.get_y() + q5)
            }
        },
        getChildrenWidth: function() {
            var q = 0;
            var i2 = 0;
            var js = this.get_numChildren();
            while (i2 < js) {
                var i1 = i2++;
                q += this.getChildAt(i1).get_width() + this.spacing
            }
            return q
        },
        __class__: hU
    });
    var mj = function(qY) {
        var qZ = nK.get_assets().getTexture(qY).get_bitmapData();
        var q = qZ.clone();
        var i = qZ.clone();
        var i2 = 0.3333333333333333;
        var i1 = 0.3333333333333333;
        var js = 0.3333333333333333;
        i.applyFilter(i, i.rect, new pp(), new k6([i2, i1, js, 0, 0, i2, i1, js, 0, 0, i2, i1, js, 0, 0, 0, 0, 0, 1, 0]));
        this.upState = new el(qZ);
        this.overState = new el(q);
        this.downState = new el(qZ);
        this.disabledState = new el(i);
        this.upState.set_alpha(this.downState.set_alpha(0.8));
        bh.call(this)
    };
    nt["agario.module.shop.components.PaginationGotoButton"] = mj;
    mj.__name__ = ["agario", "module", "shop", "components", "PaginationGotoButton"];
    mj.__super__ = bh;
    mj.prototype = lP(bh.prototype, {
        __class__: mj
    });
    var jk = function() {
        mj.call(this, "fast_play")
    };
    nt["agario.module.shop.components.PaginationGotoFirstButton"] = jk;
    jk.__name__ = ["agario", "module", "shop", "components", "PaginationGotoFirstButton"];
    jk.__super__ = mj;
    jk.prototype = lP(mj.prototype, {
        __class__: jk
    });
    var fU = function() {
        mj.call(this, "fast_play");
        this.set_rotationAnchorX(this.get_width() / 2);
        this.set_rotationAnchorY(this.get_height() / 2);
        this.set_rotation(180)
    };
    nt["agario.module.shop.components.PaginationGotoLastButton"] = fU;
    fU.__name__ = ["agario", "module", "shop", "components", "PaginationGotoLastButton"];
    fU.__super__ = mj;
    fU.prototype = lP(mj.prototype, {
        __class__: fU
    });
    var hg = function() {
        mj.call(this, "play")
    };
    nt["agario.module.shop.components.PaginationGotoPreviousButton"] = hg;
    hg.__name__ = ["agario", "module", "shop", "components", "PaginationGotoPreviousButton"];
    hg.__super__ = mj;
    hg.prototype = lP(mj.prototype, {
        __class__: hg
    });
    var hs = function() {
        mj.call(this, "play");
        this.set_rotationAnchorX(this.get_width() / 2);
        this.set_rotationAnchorY(this.get_height() / 2);
        this.set_rotation(180)
    };
    nt["agario.module.shop.components.PaginationGotoNextButton"] = hs;
    hs.__name__ = ["agario", "module", "shop", "components", "PaginationGotoNextButton"];
    hs.__super__ = mj;
    hs.prototype = lP(mj.prototype, {
        __class__: hs
    });
    var gU = function() {};
    nt["oaktree.ext.ui.controls.IPaginationControl"] = gU;
    gU.__name__ = ["oaktree", "ext", "ui", "controls", "IPaginationControl"];
    gU.prototype = {
        set_selected: null,
        selected: null,
        setText: null,
        __class__: gU,
        __properties__: {
            set_selected: "set_selected"
        }
    };
    var aM = function() {
        var i = {
            labelUp: {
                text: "0",
                fontSize: 12,
                align: 0,
                color: 16777215
            },
            labelDown: {
                text: "0",
                fontSize: 12,
                align: 0,
                color: 2400453
            },
            colorUp: 5685472,
            colorOver: 2400453,
            colorDown: 16777215,
            width: 24,
            height: 20,
            radius: 5,
            borderWeightDown: 2,
            borderColorDown: 5685472
        };
        hv.call(this, i)
    };
    nt["agario.module.shop.components.PaginationPageButton"] = aM;
    aM.__name__ = ["agario", "module", "shop", "components", "PaginationPageButton"];
    aM.__interfaces__ = [gU];
    aM.__super__ = hv;
    aM.prototype = lP(hv.prototype, {
        setText: function(i) {
            this.labelUp.set_text(this.labelOver.set_text(this.labelDown.set_text(i)));
            this.labelUp.set_width(this.labelOver.set_width(this.labelDown.set_width(25)));
            this.labelUp.set_x(this.labelOver.set_x(this.labelDown.set_x(0)));
            this.labelUp.set_y(this.labelOver.set_y(this.labelDown.set_y(1)));
            this.labelUp.set_x(this.labelOver.set_x(this.labelDown.set_x(-1)));
            return i
        },
        __class__: aM
    });
    var iC = function() {
        var qY = nK.get_assets().getTexture("arrow").get_bitmapData();
        var q = qY.clone();
        var i = qY.clone();
        var i2 = 0.3333333333333333;
        var i1 = 0.3333333333333333;
        var js = 0.3333333333333333;
        i.applyFilter(i, i.rect, new pp(), new k6([i2, i1, js, 0, 0, i2, i1, js, 0, 0, i2, i1, js, 0, 0, 0, 0, 0, 1, 0]));
        this.upState = new el(qY);
        this.overState = new el(q);
        this.downState = new el(qY);
        this.disabledState = new el(i);
        this.upState.set_alpha(this.downState.set_alpha(0.8));
        bh.call(this)
    };
    nt["agario.module.shop.components.ShopNextArrow"] = iC;
    iC.__name__ = ["agario", "module", "shop", "components", "ShopNextArrow"];
    iC.__super__ = bh;
    iC.prototype = lP(bh.prototype, {
        __class__: iC
    });
    var A = function(i) {
        this.showPrice = true;
        if (i.name == null) {
            i.name = "skin_element." + i.model.purchaseId
        }
        i.name;
        i.w = 150;
        i.h = 360;
        this.item = i.model;
        this.options = i;
        mG.call(this, i);
        this.addEventListener("addedToStage", oT(this, this.initialize))
    };
    nt["agario.module.shop.components.SkinElement"] = A;
    A.__name__ = ["agario", "module", "shop", "components", "SkinElement"];
    A.__super__ = mG;
    A.prototype = lP(mG.prototype, {
        item: null,
        showPrice: null,
        options: null,
        title: null,
        data: null,
        skinCell: null,
        tooltipSpr: null,
        priceButton: null,
        initialize: function(q2) {
            this.removeEventListener("addedToStage", oT(this, this.initialize));
            this.data = this.item;
            var i = new mR();
            i.set_y(2);
            if (this.options.model.get_inUse()) {
                i.get_graphics().lineStyle(2, 12907007, 1);
                i.get_graphics().beginFill(12907007, 1)
            } else {
                i.get_graphics().lineStyle(2, 12566463, 1);
                i.get_graphics().beginFill(16777215, 1)
            }
            i.get_graphics().drawRoundRect(0, 0, this.w, this.h - 80, 15, 15);
            i.get_graphics().endFill();
            this.addChild(i);
            this.title = new m1({
                text: this.options.model.get_title(),
                fontSize: 14,
                multiline: true,
                wordWrap: true,
                height: 50,
                autoSize: 0
            });
            this.addChild(this.title);
            var i1 = this.title.get_defaultTextFormat();
            i1.align = 0;
            this.title.setTextFormat(i1);
            this.title.set_width(this.w - 5);
            this.title.set_height(50);
            this.title.set_wordWrap(true);
            this.title.set_x((this.w - this.title.get_width()) * 0.5);
            this.title.set_y(10);
            var i2;
            if (this.options.model.gamePlayInfo.image != null) {
                i2 = this.options.model.gamePlayInfo.image.source
            } else {
                i2 = null
            }
            this.skinCell = new lB({
                bitmap: null,
                imageSource: this.options.model.gamePlayInfo.image,
                w: this.options.w - 20,
                h: this.options.w - 20,
                borderColor: this.options.model.gamePlayInfo.get_cellColor()
            });
            this.addChild(this.skinCell);
            this.skinCell.set_x((this.w - this.skinCell.get_width()) * 0.5);
            this.skinCell.set_y((i.get_height() - this.skinCell.get_height()) / 2);
            var q3 = new el(nK.get_assets().getTexture("currency_icon", "main_shop").get_bitmapData());
            var q0 = [6349312, 16777215, 5685472, 12961221];
            var q5 = [5622016, 16777215, 4096417, 12961221];
            var q7 = [16777215, 5685472, 16777215, 10066329];
            var q1 = [16777215, 5685472, 16777215, 10066329];
            var q6 = 0;
            var qZ = kr.string(this.options.model.price);
            var qY = true;
            var q8 = false;
            if (this.options.model.get_owned() == true) {
                qY = false;
                q6 = 2;
                qZ = dk.text("menu_shop_use");
                if (this.options.model.get_inUse() == true) {
                    q6 = 1;
                    q8 = true;
                    qZ = dk.text("menu_shop_cancel")
                }
                if (nK.ui.state.isPlayerAlive) {
                    q6 = 3
                }
            }
            if (this.options.model.purchaseId == "") {
                qY = false;
                q6 = 2;
                qZ = dk.text("menu_shop_skins_node_placeholder")
            }
            if (this.showPrice) {
                this.priceButton = new pa({
                    color: q0[q6],
                    overColor: q5[q6],
                    text: qZ,
                    textColorOver: q1[q6],
                    textColor: q7[q6],
                    icon: qY ? q3 : null,
                    w: i.get_width() - 1,
                    h: 40,
                    fontSize: 14,
                    bold: true,
                    showOutline: q8,
                    outlineColor: q7[q6]
                });
                this.priceButton.buttonMode = true;
                this.priceButton.data = this.item;
                if (nK.ui.state.isPlayerAlive && this.options.model.get_owned()) {
                    this.priceButton.set_alpha(0.5)
                } else {
                    this.priceButton.addEventListener("click", oT(this, this.onClick))
                }
                this.addChild(this.priceButton);
                this.priceButton.set_y(i.get_y() + i.get_height() + 10);
                this.priceButton.addEventListener("mouseOver", oT(this, this.onOver));
                this.priceButton.addEventListener("mouseOut", oT(this, this.onOut));
                this.addChild(this.priceButton)
            } else {
                var q4 = new el(nK.get_assets().getTexture("locket").get_bitmapData());
                var js = {
                    text: "LEVEL " + this.options.model.availableAtLevel,
                    fontSize: 16,
                    align: 3,
                    color: 0,
                    bold: true
                };
                var q = new fT(js, q4, "left", 5, -2);
                this.addChild(q);
                q.set_y(i.get_y() + i.get_height() + 20);
                q.set_x((i.get_width() - q.get_width()) / 2);
                this.skinCell.set_alpha(0.35)
            }
            this.update_bounds()
        },
        onOver: function(i) {
            if (nK.ui.state.isPlayerAlive && this.item.get_owned()) {
                this.showTooltip()
            } else {
                this.skinCell.set_alpha(0.8)
            }
        },
        onOut: function(i) {
            if (nK.ui.state.isPlayerAlive && this.item.get_owned()) {
                this.hideTooltip()
            } else {
                this.skinCell.set_alpha(1)
            }
        },
        showTooltip: function() {
            this.tooltipSpr = new cY();
            var i = new m1({
                text: "Finish the match to change skin.",
                fontSize: 12,
                width: 120,
                align: 0,
                color: 16777215
            });
            this.tooltipSpr.addChild(i);
            i.set_x((this.tooltipSpr.get_width() - i.get_width()) / 2);
            i.set_y(10);
            this.tooltipSpr.get_graphics().beginFill(7851238);
            this.tooltipSpr.get_graphics().drawRoundRect(0, 0, 120, 50, 15, 15);
            this.tooltipSpr.get_graphics().endFill();
            this.addChild(this.tooltipSpr);
            var q = new cY();
            q.get_graphics().beginFill(7851238);
            q.get_graphics().moveTo(0, 0);
            q.get_graphics().lineTo(20, 0);
            q.get_graphics().lineTo(10, 15);
            q.get_graphics().lineTo(0, 0);
            q.get_graphics().endFill();
            q.set_x((this.tooltipSpr.get_width() - q.get_width()) / 2);
            q.set_y(this.tooltipSpr.get_height() - 2);
            this.tooltipSpr.addChild(q);
            this.tooltipSpr.set_x((this.priceButton.get_width() - this.tooltipSpr.get_width()) / 2);
            this.tooltipSpr.set_y(this.priceButton.get_y() - this.tooltipSpr.get_height() - 10)
        },
        hideTooltip: function() {
            this.removeChild(this.tooltipSpr)
        },
        onClick: function(i1) {
            var i = i1.currentTarget;
            i.set_enabled(false);
            if (nK.user.isGuest) {
                i.delayedEnable()
            }
            var q = i.data;
            if (q != null) {
                if (q.get_owned() == true && q.get_inUse() == false) {
                    this.dispatchEvent(new jG("ShopEvent::USE", q))
                } else {
                    if (q.get_owned() == false) {
                        this.dispatchEvent(new jG("ShopEvent::BUY", q))
                    } else {
                        if (q.get_owned() == true && q.get_inUse() == true) {
                            this.dispatchEvent(new jG("ShopEvent::UNEQUIP", q))
                        }
                    }
                }
            }
            ns.current.stage.set_focus(ns.current.stage)
        },
        __class__: A
    });
    var lB = function(i) {
        cY.call(this);
        if (i.borderSize == null) {
            i.borderSize = 4
        }
        i.borderSize;
        this.options = i;
        this.addEventListener("addedToStage", oT(this, this.onAddedToStage))
    };
    nt["agario.module.shop.components.SkinnedCell"] = lB;
    lB.__name__ = ["agario", "module", "shop", "components", "SkinnedCell"];
    lB.__super__ = cY;
    lB.prototype = lP(cY.prototype, {
        options: null,
        container: null,
        cellMask: null,
        onAddedToStage: function(i2) {
            this.removeEventListener("addedToStage", oT(this, this.onAddedToStage));
            this.container = new cY();
            this.addChild(this.container);
            var i = new cY();
            i.get_graphics().beginFill(16777215);
            i.get_graphics().drawRect(0, 0, this.options.w, this.options.h);
            i.get_graphics().endFill();
            this.container.addChild(i);
            this.cellMask = new mR();
            this.cellMask.get_graphics().beginFill(16777215, 1);
            this.cellMask.get_graphics().drawCircle(1, 0, this.get_width() / 2);
            this.cellMask.get_graphics().endFill();
            this.cellMask.set_x(this.options.w / 2);
            this.cellMask.set_y(this.options.h / 2);
            this.drawOutline(kr.parseInt(this.options.borderColor), this.options.borderSize);
            if (this.options.imageSource != null) {
                var i1 = new fN({
                    url: null,
                    image: this.options.imageSource,
                    w: this.options.w,
                    h: this.options.h
                });
                this.container.addChild(i1);
                this.container.addChild(this.cellMask);
                this.container.set_mask(this.cellMask);
                i1.addEventListener("complete", function(js) {
                    d3.tween(js.currentTarget, 0.6, {
                        alpha: 1
                    })
                })
            } else {
                if (this.options.bitmap != null) {
                    var q = new fN({
                        url: this.options.bitmap,
                        w: this.options.w,
                        h: this.options.h
                    });
                    this.container.addChild(q);
                    this.container.addChild(this.cellMask);
                    this.container.set_mask(this.cellMask);
                    q.addEventListener("complete", function(js) {
                        d3.tween(js.currentTarget, 0.6, {
                            alpha: 1
                        })
                    })
                }
            }
        },
        drawOutline: function(i, q) {
            var i1 = new mR();
            i1.get_graphics().lineStyle(this.options.borderSize, i, 1);
            i1.get_graphics().drawCircle(1, 0, this.get_width() / 2);
            i1.get_graphics().endFill();
            i1.set_x(this.options.w / 2);
            i1.set_y(this.options.h / 2);
            this.addChild(i1)
        },
        __class__: lB
    });
    var f3 = function(i, q) {
        this.S_slotFilled = new qt();
        this.S_slotsFull = new qv();
        this.paused = false;
        this.slotQueue = 0;
        this.highlightColor = 16777215;
        this.filledColor = 16507144;
        this.emptyColor = 14079702;
        mG.call(this, {
            w: 150,
            h: 360
        });
        this.filledArray = [];
        this.highlightArray = [];
        this.filled = q;
        this.totalSlots = i;
        this.addEventListener("addedToStage", oT(this, this.initialize))
    };
    nt["agario.module.shop.components.SlotControl"] = f3;
    f3.__name__ = ["agario", "module", "shop", "components", "SlotControl"];
    f3.__super__ = mG;
    f3.prototype = lP(mG.prototype, {
        totalSlots: null,
        filled: null,
        emptyColor: null,
        filledColor: null,
        highlightColor: null,
        filledArray: null,
        slotQueue: null,
        paused: null,
        highlightArray: null,
        hasFinished: null,
        get_hasFinished: function() {
            return this.slotQueue <= 0
        },
        S_slotsFull: null,
        S_slotFilled: null,
        setSlotActive: function() {
            this.filledArray[this.filled].set_visible(true);
            this.filledArray[this.filled].set_alpha(1);
            this.filled++
        },
        addSlotToQueue: function() {
            this.slotQueue++
        },
        pauseProcess: function() {
            this.paused = true
        },
        resumeProcess: function() {
            this.paused = false;
            this.process()
        },
        process: function() {
            if (!this.paused) {
                this.fillSlot()
            }
        },
        initialize: function(i) {
            this.slotQueue = 0;
            this.removeEventListener("addedToStage", oT(this, this.initialize));
            this.drawEmptySlots();
            this.drawHighlightSlots();
            this.drawFilledSlots()
        },
        fillSlot: function(i) {
            if (i == null) {
                i = 0
            }
            if (this.slotQueue > 0) {
                this.S_slotFilled.dispatch(this.filled);
                this.filledArray[this.filled].set_visible(true);
                this.filledArray[this.filled].set_alpha(0);
                d3.tween(this.highlightArray[this.filled], 0.5, {
                    alpha: 1
                }).delay(i).onComplete(oT(this, this.fillSlotResult));
                d3.tween(this.filledArray[this.filled], 0.5, {
                    alpha: 1
                }).delay(i + 0.3)
            }
        },
        drawEmptySlots: function() {
            var i2 = 0;
            var js = this.totalSlots;
            while (i2 < js) {
                var q = i2++;
                var i1 = this.createSlot(this.emptyColor);
                i1.set_x(20 * q);
                this.addChild(i1)
            }
        },
        drawFilledSlots: function() {
            var i2 = 0;
            var js = this.totalSlots;
            while (i2 < js) {
                var q = i2++;
                var i1 = this.createSlot(this.filledColor);
                i1.set_x(20 * q);
                this.addChild(i1);
                i1.set_visible(false);
                this.filledArray.push(i1)
            }
        },
        drawHighlightSlots: function() {
            var i2 = 0;
            var js = this.totalSlots;
            while (i2 < js) {
                var i1 = i2++;
                var q = this.createSlot(this.highlightColor);
                q.set_x(20 * i1);
                this.addChild(q);
                q.set_alpha(0);
                this.highlightArray.push(q)
            }
        },
        createSlot: function(q) {
            var i = new cY();
            i.get_graphics().beginFill(q);
            i.get_graphics().drawRoundRect(0, 0, 13, 20, 4, 4);
            i.get_graphics().endFill();
            return i
        },
        fillSlotResult: function() {
            if (!this.paused) {
                this.slotQueue--;
                this.filled++;
                if (this.filled > this.totalSlots - 1) {
                    this.S_slotsFull.dispatch();
                    this.clearAllSlots();
                    this.filled = 0
                }
                if (this.slotQueue > 0) {
                    this.process()
                } else {
                    this.slotQueue = 0
                }
            }
        },
        clearAllSlots: function() {
            var i1 = 0;
            var i2 = this.totalSlots;
            while (i1 < i2) {
                var q = i1++;
                this.filledArray[q].set_alpha(0);
                this.filledArray[q].set_visible(false);
                this.highlightArray[q].set_alpha(0)
            }
            this.filled = 0
        },
        __class__: f3,
        __properties__: lP(mG.prototype.__properties__, {
            get_hasFinished: "get_hasFinished"
        })
    });
    var oy = function(i1, i2, q, i) {
        if (i == null) {
            i = false
        }
        if (q == null) {
            q = false
        }
        this.data = i2;
        hM.call(this, i1, q, i)
    };
    nt["oaktree.core.events.GameEvent"] = oy;
    oy.__name__ = ["oaktree", "core", "events", "GameEvent"];
    oy.__super__ = hM;
    oy.prototype = lP(hM.prototype, {
        data: null,
        __class__: oy
    });
    var a9 = function(i1, i2, q, i) {
        if (i == null) {
            i = false
        }
        if (q == null) {
            q = false
        }
        oy.call(this, i1, i2, q, i)
    };
    nt["agario.module.shop.events.HintTooltipEvent"] = a9;
    a9.__name__ = ["agario", "module", "shop", "events", "HintTooltipEvent"];
    a9.__super__ = oy;
    a9.prototype = lP(oy.prototype, {
        __class__: a9
    });
    var jG = function(i1, i2, q, i) {
        if (i == null) {
            i = false
        }
        if (q == null) {
            q = false
        }
        oy.call(this, i1, i2, q, i)
    };
    nt["agario.module.shop.events.ShopEvent"] = jG;
    jG.__name__ = ["agario", "module", "shop", "events", "ShopEvent"];
    jG.__super__ = oy;
    jG.prototype = lP(oy.prototype, {
        __class__: jG
    });
    var o1 = function(i1, i2, q, i) {
        if (i == null) {
            i = false
        }
        if (q == null) {
            q = false
        }
        oy.call(this, i1, i2, q, i)
    };
    nt["agario.module.shop.events.WalletEvent"] = o1;
    o1.__name__ = ["agario", "module", "shop", "events", "WalletEvent"];
    o1.__super__ = oy;
    o1.prototype = lP(oy.prototype, {
        __class__: o1
    });
    var oP = function() {};
    nt["oaktree.ext.security.IUser"] = oP;
    oP.__name__ = ["oaktree", "ext", "security", "IUser"];
    oP.prototype = {
        id: null,
        name: null,
        __class__: oP
    };
    var mZ = function(q, i) {
        this.id = q;
        this.name = i
    };
    nt["oaktree.ext.security.User"] = mZ;
    mZ.__name__ = ["oaktree", "ext", "security", "User"];
    mZ.__interfaces__ = [oP];
    mZ.prototype = {
        id: null,
        name: null,
        __class__: mZ
    };
    var oC = function(q, i) {
        this.massBoostAmount = 0;
        this.xpBoostAmount = 0;
        this.socialId = "";
        this.realm = N.Guest;
        this.currencyCode = "";
        this.selectedLanguage = "";
        this.defaultSkin = "";
        this.isConnecting = false;
        this.isGuest = true;
        this.loggedIn = false;
        this.onUserChange = new qv();
        this.onUserDataUpdate = new qv();
        mZ.call(this, q, i);
        this._serverModel = l4.getService(pu);
        this._serverModel.register(62, oT(this, this.onGameOver));
        this._serverModel.register(116, oT(this, this.onUserTimedEventsUpdate));
        this.avatarUrl = nK.services.config.getRootUrl("mc/img/profilepic_guest.png")
    };
    nt["agario.module.shop.models.GameUser"] = oC;
    oC.__name__ = ["agario", "module", "shop", "models", "GameUser"];
    oC.__super__ = mZ;
    oC.prototype = lP(mZ.prototype, {
        loggedIn: null,
        isGuest: null,
        isConnecting: null,
        set_isConnecting: function(i) {
            this.isConnecting = i;
            nK.ui.mainUI.updateButtonsState();
            return i
        },
        stats: null,
        userInfo: null,
        serverInfo: null,
        userSettings: null,
        userWallet: null,
        userBoosts: null,
        wallet: null,
        facebookId: null,
        avatarUrl: null,
        nickName: null,
        defaultSkin: null,
        selectedLanguage: null,
        currencyCode: null,
        realm: null,
        socialId: null,
        selectedSkin: null,
        coins: null,
        onUserChange: null,
        onUserDataUpdate: null,
        xpBoostAmount: null,
        massBoostAmount: null,
        _serverModel: null,
        dataRealm: null,
        destroy: function() {
            if (this._serverModel != null) {
                this._serverModel.unregister(62, oT(this, this.onGameOver))
            }
            this.set_realm(N.Guest)
        },
        setGuest: function() {
            this.id = "";
            this.name = "";
            this.nickName = "";
            this.set_realm(N.Guest);
            this.userSettings = null;
            this.userWallet = null;
            this.userBoosts = null;
            this.userInfo = null;
            this.loggedIn = false;
            this.isGuest = true;
            this.facebookId = null;
            nK.ui.mainUI.changeSettingVisibility("showOnlineStatus", false);
            this.onUserChange.dispatch()
        },
        onUserTimedEventsUpdate: function(i, q) {
            if (i != 116) {
                return
            }
            if (q == null) {
                return
            }
            this.updateUserTimedEvents((n0.__cast(q, bH)).get_userTimedEvents())
        },
        onGameOver: function(i, i1) {
            if (i != 62) {
                return
            }
            var q = i1;
            this.setUserStats(q.get_userStats());
            this.handleUserUpdates(q.get_userDataUpdates())
        },
        handleUserData: function(js) {
            if (this.userInfo == null) {
                this.userInfo = new md(js.get_userInfo())
            }
            this.userInfo.userGifts = js.get_userGifts();
            this.userInfo.quest = js.get_userActiveQuests()[0];
            this.userInfo.userTimedEvents = [];
            this.id = js.get_userInfo().get_id();
            this.name = js.get_userInfo().get_displayName();
            this.wallet = [];
            this.stats = new pq(js.get_userStats());
            this.userInfo.setValues(js.get_userInfo());
            this.serverInfo = new bc(js.get_serverInfo());
            this.setUserStats(js.get_userStats());
            this.createFirstTimeEvent("hourlyBonus", js.get_userTimedEvents());
            this.updateUserTimedEvents(js.get_userTimedEvents());
            this.userSettings = js.get_userSettings();
            nK.ui.settings.load(this.userSettings);
            this.set_selectedSkin(nK.ui.settings.get_skinId());
            this.userWallet = js.get_userWallet();
            var i2 = 0;
            var qY = this.userWallet.length;
            while (i2 < qY) {
                var q = i2++;
                var i1 = new hH({
                    productId: this.userWallet[q].get_productId(),
                    balance: this.userWallet[q].get_quantity()
                });
                this.wallet.push(i1)
            }
            this.userBoosts = js.get_userBoosts();
            if (js.get_realm() == 2) {
                nK.services.gameui.getUserSocialId(oT(this, this.onUserFbId))
            } else {
                nK.ui.mainUI.changeSettingVisibility("showOnlineStatus", false)
            }
            this.evaluateWallet();
            this.loggedIn = true;
            this.isGuest = false;
            this.dataRealm = js.get_realm();
            this.onUserChange.dispatch()
        },
        dispatchPromoEvents: function() {
            var i = this;
            var q = new og(1000);
            q.run = function() {
                nK.services.promo.postEvent("PROMO_SESSION_STARTED", null);
                if (i.userInfo != null && i.userInfo.isPayingUser) {
                    nK.services.promo.postEvent("PROMO_IS_PAYING_USER")
                } else {
                    nK.services.promo.postEvent("PROMO_IS_NONPAYING_USER")
                }
                var i1 = i.dataRealm;
                switch (i1) {
                    case 2:
                        i.set_realm(N.Facebook);
                        nK.services.promo.postEvent("PROMO_USER_LOGGED_IN_FACEBOOK");
                        break;
                    case 3:
                        i.set_realm(N.Google);
                        nK.services.promo.postEvent("PROMO_USER_LOGGED_IN_GOOGLE");
                        break;
                    default:
                        null
                }
                q.stop();
                q = null
            }
        },
        onUserFbId: function(i) {
            this.facebookId = i;
            this.onUserDataUpdate.dispatch();
            nK.ui.mainUI.changeSettingVisibility("showOnlineStatus", true)
        },
        createFirstTimeEvent: function(q, i) {
            if (this.findTimedEvent(i, q) == null) {
                var i1 = new hE();
                i1.set_nextAvailableInSeconds(0);
                i1.set_eventId(q);
                this.userInfo.userTimedEvents.push(new df(i1))
            }
        },
        findTimedEvent: function(q, i) {
            if (q == null || q.length == 0) {
                return null
            }
            var i2 = 0;
            while (i2 < q.length) {
                var i1 = q[i2];
                ++i2;
                if (i1.get_eventId() == i) {
                    return i1
                }
            }
            return null
        },
        checkUsingBoosts: function() {
            var q8 = [];
            var q7 = 0;
            var q2 = this.userBoosts.length;
            while (q7 < q2) {
                var q1 = q7++;
                var i2 = this.userBoosts[q1];
                if (i2 == null) {
                    continue
                }
                var js = nK.models.shopBoostItems.getItemByProductId(i2.get_productId());
                if (js == null) {
                    continue
                }
                var q = nK.models.shopBoostItems.getItemsByType(js.categoryShopId);
                var q5 = 0;
                var q6 = q.length;
                while (q5 < q6) {
                    var qZ = q5++;
                    q[qZ].set_inUse(true)
                }
                var q3 = i2.get_expiresInSeconds();
                if (q3 > 0) {
                    nK.services.gameui.setTimerForBoost(js.categoryShopId, this.userBoosts[q1].get_expiresInSeconds(), oT(this, this.onBoostEnded), this.userBoosts[q1].get_productId());
                    nK.services.gameui.setIcon(js.categoryShopId, "img/" + js.category.image)
                } else {
                    q8.push(this.userBoosts[q1])
                }
            }
            var q0 = 0;
            var q4 = q8.length;
            while (q0 < q4) {
                var qY = q0++;
                cj.remove(this.userBoosts, q8[qY])
            }
        },
        getWalletItemById: function(i) {
            return this.wallet.filter(function(q) {
                return q.productId == i
            })[0]
        },
        handleUserUpdates: function(i) {
            var i2;
            var i1 = 0;
            while (i1 < i.length) {
                var q = i[i1];
                ++i1;
                if (q.get_type() == 20) {
                    this.handleProductUpdate(q.get_productField())
                } else {
                    if (q.get_type() == 10) {
                        this.handleXpLevelUpdate(q.get_xpLevelField())
                    }
                }
            }
        },
        handleXpLevelUpdate: function(q) {
            if (this.userInfo == null) {
                this.userInfo = new md()
            }
            var i = q.get_deltaLevel();
            if (i > 0) {
                if (lp.instance != null) {
                    lp.instance.showLevelUp(i * 50, this.userInfo.level, q.get_finalLevel())
                }
                nK.services.promo.postEvent("PROMO_LEVEL_UP");
                nK.services.promo.postEvent(j5.withFormat("PROMO_LEVEL_UP_%@", [q.get_finalLevel()]))
            }
            this.userInfo.level = q.get_finalLevel();
            this.userInfo.xp = q.get_finalXpForLevel();
            if (this.userInfo.level >= nK.models.xpModel.xpList.length + 1) {
                this.userInfo.xp = this.userInfo.xpNeeded;
                this.userInfo.level = nK.models.xpModel.xpList[nK.models.xpModel.xpList.length - 1].level + 1
            }
            nK.services.gameui.setAccountData({
                level: this.userInfo.level,
                xp: this.userInfo.xp,
                xpNeeded: nK.models.xpModel.getMaxXpForLevel(this.userInfo.level)
            }, true)
        },
        evaluateWallet: function() {
            if (!nK.models.shopLoaded) {
                return
            }
            this.checkUserSkin();
            this.checkWalletBoosts();
            this.checkUsingBoosts();
            this.checkUserGifts()
        },
        setUserStats: function(i) {
            if (this.stats == null) {
                this.stats = new pq()
            }
            this.stats.gamesPlayed = i.get_gamesPlayed();
            this.stats.massConsumed = i.get_massConsumed();
            this.stats.highestMass = i.get_highestMass();
            this.stats.longestTimeAlive = i.get_longestTimeAlive();
            this.stats.mostCellsEaten = i.get_mostCellsEaten();
            if (n0.__cast(i.get_gamesPlayed(), a) == 0) {
                this.stats.averageScore = 0
            } else {
                this.stats.averageScore = Math.floor((function(js) {
                    var i2;
                    var i1 = i.get_allTimeScore();
                    var q = i.get_gamesPlayed();
                    i2 = fq.toFloat(i1) / fq.toFloat(q);
                    return i2
                }(this)))
            }
        },
        checkWalletBoosts: function() {
            this.xpBoostAmount = 0;
            this.massBoostAmount = 0;
            var qZ = 0;
            var q0 = nK.models.shopBoostItems.boostList.length;
            while (qZ < q0) {
                var i2 = qZ++;
                var q = nK.models.shopBoostItems.boostList[i2];
                var js = 0;
                var qY = this.wallet.length;
                while (js < qY) {
                    var i1 = js++;
                    if (this.wallet[i1].productId == q.productIdToQuantify && this.wallet[i1].get_balance() > 0) {
                        nK.services.gameui.setIcon(q.categoryShopId, "img/" + q.category.image);
                        if (q.categoryShopId == bF.XP_BOOST) {
                            this.xpBoostAmount += this.wallet[i1].get_balance()
                        } else {
                            if (q.categoryShopId == bF.MASS_BOOST) {
                                this.massBoostAmount += this.wallet[i1].get_balance()
                            }
                        }
                    }
                }
            }
            nK.services.gameui.setUserXPBoost(kr.string(this.xpBoostAmount));
            nK.services.gameui.setUserMassBoost(kr.string(this.massBoostAmount))
        },
        checkUserSkin: function() {
            if (this.wallet.length > 0) {
                var i2 = 0;
                var js = this.wallet.length;
                while (i2 < js) {
                    var q = i2++;
                    var i1 = nK.models.shopSkinsModel.getItemById(this.wallet[q].productId);
                    if (i1 != null) {
                        i1.set_inUse(false);
                        if (i1.productIdToQuantify == this.get_selectedSkin()) {
                            i1.set_inUse(true)
                        }
                        i1.set_owned(true)
                    }
                }
            }
        },
        checkUserGifts: function() {},
        handleProductUpdate: function(i) {
            if (i.get_productId() == "coin") {
                nK.user.set_coins(i.get_finalAmount());
                nK.get_events().dispatchEventWith(o1.WALLET_UPDATED);
                nK.services.gameui.setUserCoins(nK.user.get_coins());
                return
            }
            var q = nK.user.getWalletItemById(i.get_productId());
            if (q == null) {
                this.wallet.push(new hH({
                    productId: i.get_productId(),
                    balance: i.get_finalAmount()
                }))
            } else {
                q.set_balance(i.get_finalAmount())
            }
            this.evaluateWallet()
        },
        onBoostEnded: function(q3) {
            var qZ = "";
            var q8 = 0;
            var q2 = this.wallet.length;
            while (q8 < q2) {
                var q0 = q8++;
                if (this.wallet[q0].productId == q3) {
                    qZ = nK.models.shopBoostItems.getItemByProductId(q3).categoryShopId;
                    var q7 = this.wallet[q0];
                    var q6 = q7.get_balance();
                    q7.set_balance(q6 - 1);
                    q6
                }
            }
            var q1 = 0;
            var q5 = this.userBoosts.length;
            while (q1 < q5) {
                var i2 = q1++;
                if (this.userBoosts[i2].get_productId() == q3) {
                    this.userBoosts[i2].set_expiresInSeconds(0)
                }
            }
            var qY = nK.models.shopBoostItems.getItemsByType(qZ);
            var js = 0;
            var q4 = qY.length;
            while (js < q4) {
                var q = js++;
                var q9 = qY[q];
                q9.set_inUse(false)
            }
            this.checkWalletBoosts()
        },
        freeCoinTimeLeft: function() {
            var i = this.userInfo.getTimedEvent("hourlyBonus");
            if (i != null) {
                var q = i.finalTimer - new Date().getTime();
                if (q < 0) {
                    q = 0
                }
                return q
            }
            return 0
        },
        updateUserTimedEvents: function(i) {
            var i2 = 0;
            while (i2 < i.length) {
                var i1 = i[i2];
                ++i2;
                var q = this.userInfo.getTimedEvent(i1.get_eventId());
                if (q == null) {
                    q = new df();
                    this.userInfo.userTimedEvents.push(q)
                }
                q.update(i1)
            }
        },
        get_realm: function() {
            return this.realm
        },
        set_realm: function(i) {
            this.realm = i;
            this.onUserDataUpdate.dispatch();
            return i
        },
        get_socialId: function() {
            return this.socialId
        },
        set_socialId: function(i) {
            this.socialId = i;
            this.onUserDataUpdate.dispatch();
            return i
        },
        get_selectedSkin: function() {
            return this.selectedSkin
        },
        set_selectedSkin: function(i) {
            return this.selectedSkin = i
        },
        get_coins: function() {
            if (this.isGuest) {
                return 100
            }
            if (this.userWallet == null) {
                return 0
            }
            var i1 = 0;
            var i2 = this.userWallet.length;
            while (i1 < i2) {
                var q = i1++;
                if (this.userWallet[q].get_productId() == "coin") {
                    return this.userWallet[q].get_quantity()
                }
            }
            return 0
        },
        set_coins: function(i2) {
            var i1 = 0;
            var js = this.userWallet.length;
            while (i1 < js) {
                var q = i1++;
                if (this.userWallet[q].get_productId() == "coin") {
                    this.userWallet[q].set_quantity(i2)
                }
            }
            return i2
        },
        __class__: oC,
        __properties__: {
            set_coins: "set_coins",
            get_coins: "get_coins",
            set_selectedSkin: "set_selectedSkin",
            get_selectedSkin: "get_selectedSkin",
            set_socialId: "set_socialId",
            get_socialId: "get_socialId",
            set_realm: "set_realm",
            get_realm: "get_realm",
            set_isConnecting: "set_isConnecting"
        }
    });
    var bL = function() {
        this.currencyList = []
    };
    nt["agario.module.shop.models.PriceMatrixModel"] = bL;
    bL.__name__ = ["agario", "module", "shop", "models", "PriceMatrixModel"];
    bL.prototype = {
        currencyList: null,
        add: function(i) {
            this.currencyList.push(i)
        },
        hasCurrency: function(i) {
            if (this.currencyList.length > 0) {
                return this.currencyList[0].currencies.exists(i)
            }
            return false
        },
        getPriceForTier: function(i1, q) {
            if (q == null) {
                q = "USD"
            }
            var js = 0;
            var qY = this.currencyList.length;
            while (js < qY) {
                var i2 = js++;
                if (this.currencyList[i2].tier == i1) {
                    return this.currencyList[i2].getPriceByCurrency(q)
                }
            }
            return 0
        },
        __class__: bL
    };
    var fs = function(i) {
        this.settingsList = i;
        if (this.settingsList == null) {
            this.settingsList = []
        }
    };
    nt["agario.module.shop.models.SettingsModel"] = fs;
    fs.__name__ = ["agario", "module", "shop", "models", "SettingsModel"];
    fs.createMap = function(i1) {
        var i = new io();
        if (i1 != null) {
            var i2 = 0;
            while (i2 < i1.length) {
                var q = i1[i2];
                ++i2;
                if (i.exists(q.key)) {
                    null
                }
                i.set(q.key, q.value)
            }
        }
        return i
    };
    fs.prototype = {
        settingsList: null,
        concat: function(i) {
            if (i != null) {
                this.settingsList = this.settingsList.concat(i)
            }
            return this
        },
        getSettingByKey: function(i) {
            if (this.settingsList == null) {
                return null
            }
            return this.settingsList.filter(function(q) {
                return q.key == i
            })[0].value
        },
        get: function(i) {
            return this.getSettingByKey(i)
        },
        exists: function(i) {
            return this.getSettingByKey(i) != null
        },
        __class__: fs
    };
    var mY = function() {
        this.itemsByType = new io();
        this.boostList = []
    };
    nt["agario.module.shop.models.ShopBoostsModel"] = mY;
    mY.__name__ = ["agario", "module", "shop", "models", "ShopBoostsModel"];
    mY.prototype = {
        boostList: null,
        itemsByType: null,
        add: function(i) {
            this.boostList.push(i);
            if (!this.itemsByType.exists(i.categoryShopId)) {
                var q = [];
                this.itemsByType.set(i.categoryShopId, q)
            }
            this.itemsByType.get(i.categoryShopId).push(i)
        },
        getItemByPurchaseId: function(js) {
            var i1 = 0;
            var i2 = this.boostList.length;
            while (i1 < i2) {
                var q = i1++;
                if (this.boostList[q].purchaseId == js) {
                    return this.boostList[q]
                }
            }
            return null
        },
        getItemByProductId: function(js) {
            var i1 = 0;
            var i2 = this.boostList.length;
            while (i1 < i2) {
                var q = i1++;
                if (this.boostList[q].productIdToQuantify == js) {
                    return this.boostList[q]
                }
            }
            return null
        },
        getItemsByType: function(i) {
            if (this.itemsByType.exists(i)) {
                return this.itemsByType.get(i)
            } else {
                return []
            }
        },
        __class__: mY
    };
    var ka = function() {
        this.shopCoinsList = []
    };
    nt["agario.module.shop.models.ShopCoinModel"] = ka;
    ka.__name__ = ["agario", "module", "shop", "models", "ShopCoinModel"];
    ka.prototype = {
        shopCoinsList: null,
        instance: null,
        add: function(i) {
            this.shopCoinsList.push(i)
        },
        getItemById: function(i1) {
            if (i1 == null) {
                return null
            }
            var i2 = 0;
            var js = this.shopCoinsList.length;
            while (i2 < js) {
                var q = i2++;
                if (this.shopCoinsList[q].purchaseId == i1) {
                    return this.shopCoinsList[q]
                }
            }
            return null
        },
        __class__: ka
    };
    var eW = function() {
        this.shopItemsList = [];
        this.itemsByType = new io()
    };
    nt["agario.module.shop.models.ShopItemsCollection"] = eW;
    eW.__name__ = ["agario", "module", "shop", "models", "ShopItemsCollection"];
    eW.prototype = {
        shopItemsList: null,
        itemsByType: null,
        instance: null,
        add: function(i) {
            this.shopItemsList.push(i);
            if (!this.itemsByType.exists(i.type)) {
                var q = [];
                this.itemsByType.set(i.type, q)
            }
            this.itemsByType.get(i.type).push(i)
        },
        getItemByPurchaseId: function(js) {
            var i1 = 0;
            var i2 = this.shopItemsList.length;
            while (i1 < i2) {
                var q = i1++;
                if (this.shopItemsList[q].purchaseId == js) {
                    return this.shopItemsList[q]
                }
            }
            return null
        },
        getItemsByPurchaseId: function(qY) {
            var q = [];
            var i2 = 0;
            var js = this.shopItemsList.length;
            while (i2 < js) {
                var i1 = i2++;
                if (this.shopItemsList[i1].purchaseId == qY) {
                    q.push(this.shopItemsList[i1])
                }
            }
            return q
        },
        getItemsByType: function(i) {
            if (this.itemsByType.exists(i)) {
                return this.itemsByType.get(i)
            } else {
                return []
            }
        },
        setSkinUse: function(js) {
            var i1 = 0;
            var i2 = nK.models.shopSkinsModel.skinList.length;
            while (i1 < i2) {
                var q = i1++;
                nK.models.shopSkinsModel.skinList[q].set_inUse(false);
                if (nK.models.shopSkinsModel.skinList[q].productIdToQuantify == js) {
                    nK.models.shopSkinsModel.skinList[q].set_inUse(true);
                    nK.user.set_selectedSkin(js)
                }
            }
        },
        __class__: eW
    };
    var fn = function(i) {
        f1.call(this, i)
    };
    nt["agario.module.shop.models.ShopModel"] = fn;
    fn.__name__ = ["agario", "module", "shop", "models", "ShopModel"];
    fn.__super__ = f1;
    fn.prototype = lP(f1.prototype, {
        countr_code: null,
        currency: null,
        achievements: null,
        userSettings: null,
        localizationSettings: null,
        defaultCommunicationSettings: null,
        defaultGiftingSettings: null,
        defaultPromoSettings: null,
        shopCoins: null,
        shopBoostCategories: null,
        shopBoostItems: null,
        shopSkins: null,
        shopPriceCurrency: null,
        shopPriceMatrix: null,
        visualBundles: null,
        visualProducts: null,
        visualQuests: null,
        shopSkinTabs: null,
        tabsAssociation: null,
        walletBonusRewards: null,
        walletInappPurchases: null,
        walletSoftPurchases: null,
        walletOfferableBundles: null,
        walletProductBundles: null,
        walletProducts: null,
        walletTimeVariablePrices: null,
        externalSocialStories: null,
        gamePlayBoosts: null,
        gamePlaySkins: null,
        freeSkins: null,
        xpList: null,
        giftingFakeUser: null,
        __class__: fn
    });
    var cD = function() {
        this.walletInappPurchases = []
    };
    nt["agario.module.shop.models.ShopPurchasesModel"] = cD;
    cD.__name__ = ["agario", "module", "shop", "models", "ShopPurchasesModel"];
    cD.prototype = {
        walletInappPurchases: null,
        walletSoftPurchases: null,
        getInappPurchaseByBundleId: function(i) {
            return this.walletInappPurchases.filter(function(q) {
                q.type = "INAPP";
                return q.bundleId == i
            })[0]
        },
        getSoftPurchaseByBundleId: function(i) {
            return this.walletSoftPurchases.filter(function(q) {
                q.type = "SOFT";
                return q.bundleId == i
            })[0]
        },
        getInappPurchaseByPurchaseId: function(i) {
            return this.walletInappPurchases.filter(function(q) {
                q.type = "INAPP";
                return q.id == i
            })[0]
        },
        getSoftPurchaseByPurchaseId: function(i) {
            return this.walletSoftPurchases.filter(function(q) {
                q.type = "SOFT";
                return q.id == i
            })[0]
        },
        getPurchaseByPurchaseId: function(i1) {
            var q = this.walletSoftPurchases.filter(function(i2) {
                return i2.id == i1
            });
            var i = this.walletInappPurchases.filter(function(i2) {
                return i2.id == i1
            });
            if (q.length > 0) {
                q[0].type = "SOFT";
                return q[0]
            } else {
                if (i.length > 0) {
                    i[0].type = "INAPP";
                    return i[0]
                } else {
                    return null
                }
            }
        },
        getPurchaseByBundleId: function(i1) {
            var q = this.walletSoftPurchases.filter(function(i2) {
                return i2.bundleId == i1
            });
            var i = this.walletInappPurchases.filter(function(i2) {
                return i2.bundleId == i1
            });
            if (q.length > 0) {
                q[0].type = "SOFT";
                return q[0]
            } else {
                if (i.length > 0) {
                    i[0].type = "INAPP";
                    return i[0]
                } else {
                    return null
                }
            }
        },
        __class__: cD
    };
    var mK = function() {
        this.skinList = [];
        this.skinTabs = [];
        this.tabsAssociation = []
    };
    nt["agario.module.shop.models.ShopSkinModel"] = mK;
    mK.__name__ = ["agario", "module", "shop", "models", "ShopSkinModel"];
    mK.prototype = {
        skinList: null,
        skinTabs: null,
        tabsAssociation: null,
        getItemById: function(i1) {
            if (i1 == null) {
                return null
            }
            var i2 = 0;
            var js = this.skinList.length;
            while (i2 < js) {
                var q = i2++;
                if (this.skinList[q].productIdToQuantify == i1) {
                    return this.skinList[q]
                }
            }
            return null
        },
        getLastRewardSkin: function(q) {
            var qY = null;
            var js = -1;
            var qZ = 0;
            var q0 = this.skinList.length;
            while (qZ < q0) {
                var i2 = qZ++;
                var i1 = this.skinList[i2];
                if (i1.availableAtLevel <= q && i1.isReward && i1.skinType == "VETERAN") {
                    if (qY == null || i1.availableAtLevel > js) {
                        qY = i1;
                        js = i1.availableAtLevel
                    }
                }
            }
            return qY
        },
        getNextRewardSkin: function(i) {
            var i2 = 0;
            var i1 = this.skinList;
            while (i2 < i1.length) {
                var q = i1[i2];
                ++i2;
                if (q.availableAtLevel > i) {
                    return q
                }
            }
            return null
        },
        getTabs: function() {
            return this.skinTabs
        },
        addSkin: function(i) {
            this.skinList.push(i)
        },
        addTab: function(q) {
            var i = this.getTabAssociationByDescription(q.tabDescription);
            if (i != null) {
                q.skinType = i.skinType
            }
            this.skinTabs.push(q)
        },
        getTabBySkinType: function(i) {
            var i1 = this.getTabAssociationBySkinType(i);
            if (i1 == null) {
                return null
            }
            var i2 = i1.tabDescription;
            var q = this.skinTabs.filter(function(js) {
                return js.tabDescription == i2
            });
            if (q != null && q.length > 0) {
                return q[0]
            } else {
                return null
            }
        },
        getTabAssociationByDescription: function(q) {
            var i = nK.models.shopData.tabsAssociation.filter(function(i1) {
                return i1.tabDescription == q
            });
            if (i == null || i.length == 0) {
                return null
            }
            return i[0]
        },
        getTabAssociationBySkinType: function(q) {
            var i = nK.models.shopData.tabsAssociation.filter(function(i1) {
                return i1.skinType == q
            });
            if (i == null || i.length == 0) {
                return null
            }
            return i[0]
        },
        getTabByDescription: function(q) {
            var i = this.skinTabs.filter(function(i1) {
                return i1.tabDescription == q
            });
            if (i != null && i.length > 0) {
                return i[0]
            } else {
                return null
            }
        },
        getOfferByBundleId: function(q) {
            if (nK.models.shopData.walletOfferableBundles == null) {
                return null
            }
            var i = nK.models.shopData.walletOfferableBundles.filter(function(i1) {
                return i1.bundleId == q
            });
            if (i != null && i.length > 0) {
                return i[0]
            } else {
                return null
            }
        },
        __class__: mK
    };
    var lv = function() {
        this.products = []
    };
    nt["agario.module.shop.models.WalletProductBundlesModel"] = lv;
    lv.__name__ = ["agario", "module", "shop", "models", "WalletProductBundlesModel"];
    lv.prototype = {
        products: null,
        add: function(i) {
            this.products.push(i)
        },
        getBundleByProductId: function(i2) {
            var i1 = 0;
            var q = this.products;
            while (i1 < q.length) {
                var i = q[i1];
                ++i1;
                if (i.productId == i2) {
                    return i
                }
            }
            return null
        },
        getBundleByBundleId: function(i2) {
            var i1 = 0;
            var q = this.products;
            while (i1 < q.length) {
                var i = q[i1];
                ++i1;
                if (i.id == i2) {
                    return i
                }
            }
            return null
        },
        getProductsByBundleId: function(js) {
            var i = new oI();
            var i2 = 0;
            var i1 = this.products;
            while (i2 < i1.length) {
                var q = i1[i2];
                ++i2;
                if (q.id == js) {
                    i.push(q)
                }
            }
            return i
        },
        __class__: lv
    };
    var lx = function() {
        this.walletProducts = []
    };
    nt["agario.module.shop.models.WalletProductsModel"] = lx;
    lx.__name__ = ["agario", "module", "shop", "models", "WalletProductsModel"];
    lx.prototype = {
        walletProducts: null,
        add: function(i) {
            this.walletProducts.push(i)
        },
        getProductById: function(i) {
            return this.walletProducts.filter(function(q) {
                return q.id == i
            })[0]
        },
        __class__: lx
    };
    var oL = function() {};
    nt["agario.module.shop.models.XPModel"] = oL;
    oL.__name__ = ["agario", "module", "shop", "models", "XPModel"];
    oL.prototype = {
        xpList: null,
        getMaxXpForLevel: function(i2) {
            if (i2 >= this.xpList.length) {
                return this.xpList[this.xpList.length - 1].xpToNextLevel
            } else {
                var i1 = 0;
                var q = this.xpList;
                while (i1 < q.length) {
                    var i = q[i1];
                    ++i1;
                    if (i.level == i2) {
                        return i.xpToNextLevel
                    }
                }
            }
            return 0
        },
        getPercentage: function(i, i1) {
            var q = this.getMaxXpForLevel(i1);
            return i / q
        },
        getLevelForReward: function(i) {
            return this.xpList.filter(function(q) {
                return q.levelUpBonusId == i
            })[0]
        },
        updateXpList: function(i) {
            this.xpList = i
        },
        __class__: oL
    };
    var bF = function() {};
    nt["agario.module.shop.models.types.BoostType"] = bF;
    bF.__name__ = ["agario", "module", "shop", "models", "types", "BoostType"];
    var ao = function() {};
    nt["agario.module.shop.models.types.CurrencyType"] = ao;
    ao.__name__ = ["agario", "module", "shop", "models", "types", "CurrencyType"];
    var iL = function() {};
    nt["agario.module.shop.models.types.ProductType"] = iL;
    iL.__name__ = ["agario", "module", "shop", "models", "types", "ProductType"];
    var ap = function() {};
    nt["agario.module.shop.models.types.ShopItemType"] = ap;
    ap.__name__ = ["agario", "module", "shop", "models", "types", "ShopItemType"];
    var iy = function() {};
    nt["agario.module.shop.models.types.ShopReferenceSheet"] = iy;
    iy.__name__ = ["agario", "module", "shop", "models", "types", "ShopReferenceSheet"];
    var km = function() {};
    nt["agario.module.shop.models.types.VisualBundlesPopupType"] = km;
    km.__name__ = ["agario", "module", "shop", "models", "types", "VisualBundlesPopupType"];
    var pt = function(i) {
        f1.call(this, i)
    };
    nt["agario.module.shop.models.vo.AchievementVO"] = pt;
    pt.__name__ = ["agario", "module", "shop", "models", "vo", "AchievementVO"];
    pt.__super__ = f1;
    pt.prototype = lP(f1.prototype, {
        playGamesId: null,
        goal: null,
        conversion: null,
        type: null,
        __class__: pt
    });
    var lb = function(i) {
        this.bonusQty = -1;
        f1.call(this, i)
    };
    nt["agario.module.shop.models.vo.BonusRewardVO"] = lb;
    lb.__name__ = ["agario", "module", "shop", "models", "vo", "BonusRewardVO"];
    lb.__super__ = f1;
    lb.prototype = lP(f1.prototype, {
        bonusId: null,
        bonusQty: null,
        bonusProductId: null,
        bundleId: null,
        productUpdateOrigin: null,
        __class__: lb
    });
    var cI = function(i) {
        this.inUse = false;
        this.owned = false;
        this.isReward = false;
        f1.call(this, i)
    };
    nt["agario.module.shop.models.vo.ShopItemVO"] = cI;
    cI.__name__ = ["agario", "module", "shop", "models", "vo", "ShopItemVO"];
    cI.__super__ = f1;
    cI.prototype = lP(f1.prototype, {
        purchaseId: null,
        price: null,
        purchaseType: null,
        type: null,
        isReward: null,
        purchaseInfo: null,
        owned: null,
        get_owned: function() {
            return this.owned
        },
        set_owned: function(i) {
            return this.owned = i
        },
        inUse: null,
        get_inUse: function() {
            return this.inUse
        },
        set_inUse: function(i) {
            return this.inUse = i
        },
        name: null,
        description: null,
        __class__: cI,
        __properties__: lP(f1.prototype.__properties__, {
            set_inUse: "set_inUse",
            get_inUse: "get_inUse",
            set_owned: "set_owned",
            get_owned: "get_owned"
        })
    });
    var fK = function(i) {
        cI.call(this, i)
    };
    nt["agario.module.shop.models.vo.CurrencyItemVO"] = fK;
    fK.__name__ = ["agario", "module", "shop", "models", "vo", "CurrencyItemVO"];
    fK.__super__ = cI;
    fK.prototype = lP(cI.prototype, {
        preAmount: null,
        finalAmount: null,
        banner: null,
        visibility: null,
        orderInShop: null,
        currency_code: null,
        percentage: null,
        __class__: fK
    });
    var fd = function(i) {
        f1.call(this, i)
    };
    nt["agario.module.shop.models.vo.ExchangeRateVO"] = fd;
    fd.__name__ = ["agario", "module", "shop", "models", "vo", "ExchangeRateVO"];
    fd.__super__ = f1;
    fd.prototype = lP(f1.prototype, {
        currency_offset: null,
        usd_exchange: null,
        usd_exchange_inverse: null,
        user_currency: null,
        __class__: fd
    });
    var li = function(i) {
        f1.call(this, i)
    };
    nt["agario.module.shop.models.vo.GamePlayBoostVO"] = li;
    li.__name__ = ["agario", "module", "shop", "models", "vo", "GamePlayBoostVO"];
    li.__super__ = f1;
    li.prototype = lP(f1.prototype, {
        productId: null,
        type: null,
        multiplier: null,
        durationMins: null,
        __class__: li
    });
    var cQ = function(i) {
        f1.call(this, i);
        if (this.image != null) {
            this.set_shopImage(this.image.source)
        }
    };
    nt["agario.module.shop.models.vo.GamePlaySkinVO"] = cQ;
    cQ.__name__ = ["agario", "module", "shop", "models", "vo", "GamePlaySkinVO"];
    cQ.__super__ = f1;
    cQ.prototype = lP(f1.prototype, {
        gameplayId: null,
        image: null,
        shopImage: null,
        get_shopImage: function() {
            var i = l4.getService(kd).getConfigUrl(this.image.source);
            return i
        },
        set_shopImage: function(i) {
            return this.shopImage = i
        },
        gamePlayImage: null,
        get_gamePlayImage: function() {
            var i = l4.getService(kd).getConfigUrl(this.image.sourceHigh);
            return i
        },
        set_gamePlayImage: function(i) {
            return this.gamePlayImage = i
        },
        cellColor: null,
        get_cellColor: function() {
            return this.cellColor
        },
        set_cellColor: function(i) {
            return this.cellColor = i.substring(0, 8)
        },
        productId: null,
        skinName: null,
        get_skinName: function() {
            var i = this.productId;
            if (cP.startsWith(i, "skin_")) {
                i = cj.substr(i, 5, null)
            }
            i = "%" + i;
            return i
        },
        __class__: cQ,
        __properties__: lP(f1.prototype.__properties__, {
            get_skinName: "get_skinName",
            set_cellColor: "set_cellColor",
            get_cellColor: "get_cellColor",
            set_gamePlayImage: "set_gamePlayImage",
            get_gamePlayImage: "get_gamePlayImage",
            set_shopImage: "set_shopImage",
            get_shopImage: "get_shopImage"
        })
    });
    var bV = function(i) {
        this.showName = false;
        f1.call(this, i)
    };
    nt["agario.module.shop.models.vo.FreeSkinVO"] = bV;
    bV.__name__ = ["agario", "module", "shop", "models", "vo", "FreeSkinVO"];
    bV.__super__ = f1;
    bV.prototype = lP(f1.prototype, {
        id: null,
        image: null,
        showName: null,
        gamePlayImage: null,
        get_gamePlayImage: function() {
            var i2 = this.image.substring(0, this.image.lastIndexOf("."));
            var i1 = this.image.substring(this.image.lastIndexOf("."), this.image.length);
            var i = i2 + "_hi" + i1;
            var q = l4.getService(kd).getConfigUrl(i);
            return q
        },
        __class__: bV,
        __properties__: lP(f1.prototype.__properties__, {
            get_gamePlayImage: "get_gamePlayImage"
        })
    });
    var au = function(i) {
        f1.call(this, i)
    };
    nt["agario.module.shop.models.vo.GiftingFakeUser"] = au;
    au.__name__ = ["agario", "module", "shop", "models", "vo", "GiftingFakeUser"];
    au.__super__ = f1;
    au.prototype = lP(f1.prototype, {
        key: null,
        value: null,
        __class__: au
    });
    var dF = function(i1) {
        f1.call(this, i1);
        if (this.spriteFilename == null) {
            if (this.source == null) {
                this.source = n0.__cast(i1, String)
            }
            this.id = this.source;
            var js = this.source.substring(0, this.source.lastIndexOf("."));
            var i2 = this.source.substring(this.source.lastIndexOf("."), this.source.length);
            this.sourceHigh = js + "_hi" + i2
        } else {
            this.plistFilename = this.plistFilename.split("plist").join("xml");
            var i = this.plistFilename.indexOf(".xml");
            this.id = cj.substr(this.plistFilename, 0, i);
            var q = this.frameName.indexOf(".png");
            this.textureName = cj.substr(this.frameName, 0, q)
        }
    };
    nt["agario.module.shop.models.vo.ImageSourceVO"] = dF;
    dF.__name__ = ["agario", "module", "shop", "models", "vo", "ImageSourceVO"];
    dF.__super__ = f1;
    dF.prototype = lP(f1.prototype, {
        id: null,
        spriteFilename: null,
        plistFilename: null,
        frameName: null,
        source: null,
        sourceHigh: null,
        textureName: null,
        isTextureAtlas: function() {
            return this.plistFilename != null
        },
        __class__: dF
    });
    var k1 = function(i) {
        f1.call(this, i)
    };
    nt["agario.module.shop.models.vo.PlayerInfoVO"] = k1;
    k1.__name__ = ["agario", "module", "shop", "models", "vo", "PlayerInfoVO"];
    k1.__super__ = f1;
    k1.prototype = lP(f1.prototype, {
        currentSkin: null,
        wallet: null,
        coinAmount: null,
        getWalletItemById: function(i) {
            return this.wallet.filter(function(q) {
                return q.productId == i
            })[0]
        },
        __class__: k1
    });
    var cn = function(i) {
        f1.call(this, i)
    };
    nt["agario.module.shop.models.vo.PriceCurrencyVO"] = cn;
    cn.__name__ = ["agario", "module", "shop", "models", "vo", "PriceCurrencyVO"];
    cn.__super__ = f1;
    cn.prototype = lP(f1.prototype, {
        id: null,
        __class__: cn
    });
    var aq = function(i2) {
        f1.call(this, null);
        this.currencies = new io();
        var i = ar.fields(i2);
        var js = 0;
        while (js < i.length) {
            var i1 = i[js];
            ++js;
            var q = ar.getProperty(i2, i1);
            this.currencies.set(i1, q)
        }
        this.tier = i2.tier
    };
    nt["agario.module.shop.models.vo.PriceTierVO"] = aq;
    aq.__name__ = ["agario", "module", "shop", "models", "vo", "PriceTierVO"];
    aq.__super__ = f1;
    aq.prototype = lP(f1.prototype, {
        tier: null,
        currencies: null,
        getPriceByCurrency: function(i) {
            if (this.currencies.exists(i)) {
                return this.currencies.get(i)
            } else {
                return this.currencies.get("USD")
            }
        },
        __class__: aq
    });
    var bc = function(i) {
        f1.call(this, i)
    };
    nt["agario.module.shop.models.vo.ServerInfoVO"] = bc;
    bc.__name__ = ["agario", "module", "shop", "models", "vo", "ServerInfoVO"];
    bc.__super__ = f1;
    bc.prototype = lP(f1.prototype, {
        host: null,
        tcpPort: null,
        udpPort: null,
        __class__: bc
    });
    var bx = function(i) {
        f1.call(this, i)
    };
    nt["agario.module.shop.models.vo.ShopBoostCategoryVO"] = bx;
    bx.__name__ = ["agario", "module", "shop", "models", "vo", "ShopBoostCategoryVO"];
    bx.__super__ = f1;
    bx.prototype = lP(f1.prototype, {
        shopId: null,
        position: null,
        title: null,
        description: null,
        image: null,
        spritesheet: null,
        __class__: bx
    });
    var bt = function(i) {
        cI.call(this, i);
        this.type = "SOFT"
    };
    nt["agario.module.shop.models.vo.ShopBoostItemVO"] = bt;
    bt.__name__ = ["agario", "module", "shop", "models", "vo", "ShopBoostItemVO"];
    bt.__super__ = cI;
    bt.prototype = lP(cI.prototype, {
        categoryShopId: null,
        title: null,
        bestDealSticker: null,
        position: null,
        categoryPosition: null,
        productIdToQuantify: null,
        category: null,
        gameplayInfo: null,
        __class__: bt
    });
    var gM = function(i) {
        this.availableAtLevel = -1;
        this.orderInOwnedTab = -1;
        this.orderInShop = -1;
        cI.call(this, i);
        var q = this.skinType;
        switch (q) {
            case "INAPP":
                this.type = "INAPP";
                break;
            case "VETERAN":
                this.type = "REWARD";
                break;
            default:
                this.type = "SOFT"
        }
    };
    nt["agario.module.shop.models.vo.ShopSkinItemVO"] = gM;
    gM.__name__ = ["agario", "module", "shop", "models", "vo", "ShopSkinItemVO"];
    gM.__super__ = cI;
    gM.prototype = lP(cI.prototype, {
        referenceSheet: null,
        referenceKey: null,
        referenceValue: null,
        productIdToQuantify: null,
        skinType: null,
        image: null,
        visibility: null,
        orderInShop: null,
        orderInOwnedTab: null,
        title: null,
        get_title: function() {
            return dk.text(this.title)
        },
        set_title: function(i) {
            return this.title = i
        },
        gamePlayInfo: null,
        availableAtLevel: null,
        isOfferable: function() {
            return this.referenceSheet == "Wallet - Offerable Bundles"
        },
        __class__: gM,
        __properties__: lP(cI.prototype.__properties__, {
            set_title: "set_title",
            get_title: "get_title"
        })
    });
    var pY = function(i) {
        cI.call(this, i)
    };
    nt["agario.module.shop.models.vo.ShopSkinTabVO"] = pY;
    pY.__name__ = ["agario", "module", "shop", "models", "vo", "ShopSkinTabVO"];
    pY.__super__ = cI;
    pY.prototype = lP(cI.prototype, {
        tabName: null,
        tabDescription: null,
        tabOrder: null,
        skinType: null,
        skins: null,
        __class__: pY
    });
    var hi = function(i) {
        f1.call(this, i)
    };
    nt["agario.module.shop.models.vo.SocialStoryVO"] = hi;
    hi.__name__ = ["agario", "module", "shop", "models", "vo", "SocialStoryVO"];
    hi.__super__ = f1;
    hi.prototype = lP(f1.prototype, {
        id: null,
        icon: null,
        iconURL: null,
        titleTag: null,
        subtitleTag: null,
        descriptionTag: null,
        twitterTag: null,
        googleTag: null,
        __class__: hi
    });
    var df = function(i) {
        this.finalTimer = 0;
        this.nextAvailableInSeconds = 0;
        this.update(i)
    };
    nt["agario.module.shop.models.vo.TimedEventVO"] = df;
    df.__name__ = ["agario", "module", "shop", "models", "vo", "TimedEventVO"];
    df.prototype = {
        eventId: null,
        nextAvailableInSeconds: null,
        finalTimer: null,
        update: function(q, i) {
            if (q == null) {
                return
            }
            if (i == null) {
                i = new Date().getTime()
            }
            this.eventId = q.get_eventId();
            this.nextAvailableInSeconds = q.get_nextAvailableInSeconds();
            if (this.nextAvailableInSeconds == 0) {
                this.finalTimer = 0
            } else {
                this.finalTimer = i + this.nextAvailableInSeconds * 1000
            }
        },
        __class__: df
    };
    var md = function(i) {
        f1.call(this, i)
    };
    nt["agario.module.shop.models.vo.UserInfoVO"] = md;
    md.__name__ = ["agario", "module", "shop", "models", "vo", "UserInfoVO"];
    md.__super__ = f1;
    md.prototype = lP(f1.prototype, {
        id: null,
        displayName: null,
        xp: null,
        level: null,
        hasLoggedIntoMobile: null,
        isPayingUser: null,
        isNewUser: null,
        xpNeeded: null,
        userTimedEvents: null,
        userGifts: null,
        quest: null,
        setTimedEvent: function(i) {
            if (this.userTimedEvents.length > 0) {
                this.userTimedEvents.splice(0, this.userTimedEvents.length)
            }
            this.userTimedEvents.push(i)
        },
        getTimedEvent: function(q) {
            var i = this.userTimedEvents.filter(function(i1) {
                return i1.eventId == q
            });
            if (i.length == 0) {
                return null
            }
            return i[0]
        },
        __class__: md
    });
    var po = function(i) {
        f1.call(this, i)
    };
    nt["agario.module.shop.models.vo.UserSettingVO"] = po;
    po.__name__ = ["agario", "module", "shop", "models", "vo", "UserSettingVO"];
    po.__super__ = f1;
    po.prototype = lP(f1.prototype, {
        key: null,
        value: null,
        __class__: po
    });
    var pq = function(i) {
        f1.call(this, i)
    };
    nt["agario.module.shop.models.vo.UserStatsVO"] = pq;
    pq.__name__ = ["agario", "module", "shop", "models", "vo", "UserStatsVO"];
    pq.__super__ = f1;
    pq.prototype = lP(f1.prototype, {
        gamesPlayed: null,
        massConsumed: null,
        averageScore: null,
        highestMass: null,
        longestTimeAlive: null,
        mostCellsEaten: null,
        __class__: pq
    });
    var c5 = function(i) {
        f1.call(this, i)
    };
    nt["agario.module.shop.models.vo.VisualBundleVO"] = c5;
    c5.__name__ = ["agario", "module", "shop", "models", "vo", "VisualBundleVO"];
    c5.__super__ = f1;
    c5.prototype = lP(f1.prototype, {
        bundleId: null,
        description: null,
        visualSource: null,
        imageType: null,
        popupType: null,
        getBitmap: function() {
            var i = new cN();
            b3.getBitmap(this.visualSource.source).then(function(q) {
                i.resolve(q)
            });
            return i.boundPromise
        },
        __class__: c5
    });
    var nF = function(i) {
        f1.call(this, i)
    };
    nt["agario.module.shop.models.vo.VisualProductVO"] = nF;
    nF.__name__ = ["agario", "module", "shop", "models", "vo", "VisualProductVO"];
    nF.__super__ = f1;
    nF.prototype = lP(f1.prototype, {
        productId: null,
        description: null,
        visualSource: null,
        imageType: null,
        getBitmap: function() {
            var i = new cN();
            b3.getBitmap(this.visualSource.source).then(function(q) {
                i.resolve(q)
            });
            return i.boundPromise
        },
        __class__: nF
    });
    var ax = function(i) {
        f1.call(this, i)
    };
    nt["agario.module.shop.models.vo.VisualTabsAssociationVO"] = ax;
    ax.__name__ = ["agario", "module", "shop", "models", "vo", "VisualTabsAssociationVO"];
    ax.__super__ = f1;
    ax.prototype = lP(f1.prototype, {
        skinType: null,
        tabDescription: null,
        __class__: ax
    });
    var z = function(i) {
        f1.call(this, i)
    };
    nt["agario.module.shop.models.vo.WalletPurchaseVO"] = z;
    z.__name__ = ["agario", "module", "shop", "models", "vo", "WalletPurchaseVO"];
    z.__super__ = f1;
    z.prototype = lP(f1.prototype, {
        bundleId: null,
        id: null,
        type: null,
        __class__: z
    });
    var mO = function(i) {
        z.call(this, i)
    };
    nt["agario.module.shop.models.vo.WalletInappPurchaseVO"] = mO;
    mO.__name__ = ["agario", "module", "shop", "models", "vo", "WalletInappPurchaseVO"];
    mO.__super__ = z;
    mO.prototype = lP(z.prototype, {
        priceTier: null,
        localizedName: null,
        localizedDescription: null,
        __class__: mO
    });
    var hH = function(i) {
        this.inUse = false;
        f1.call(this, i)
    };
    nt["agario.module.shop.models.vo.WalletItemVO"] = hH;
    hH.__name__ = ["agario", "module", "shop", "models", "vo", "WalletItemVO"];
    hH.__super__ = f1;
    hH.prototype = lP(f1.prototype, {
        productId: null,
        _balance: null,
        balance: null,
        get_balance: function() {
            return this._balance
        },
        set_balance: function(i) {
            if (i < 0) {
                i = 0
            }
            return this._balance = i
        },
        inUse: null,
        __class__: hH,
        __properties__: lP(f1.prototype.__properties__, {
            set_balance: "set_balance",
            get_balance: "get_balance"
        })
    });
    var pR = function(i) {
        f1.call(this, i)
    };
    nt["agario.module.shop.models.vo.WalletOfferableBundlesVO"] = pR;
    pR.__name__ = ["agario", "module", "shop", "models", "vo", "WalletOfferableBundlesVO"];
    pR.__super__ = f1;
    pR.prototype = lP(f1.prototype, {
        bundleId: null,
        availableFrom: null,
        availableTo: null,
        __class__: pR
    });
    var kN = function(i) {
        f1.call(this, i)
    };
    nt["agario.module.shop.models.vo.WalletProductBundleVO"] = kN;
    kN.__name__ = ["agario", "module", "shop", "models", "vo", "WalletProductBundleVO"];
    kN.__super__ = f1;
    kN.prototype = lP(f1.prototype, {
        id: null,
        productId: null,
        quantity: null,
        visual: null,
        __class__: kN
    });
    var hY = function(i) {
        f1.call(this, i)
    };
    nt["agario.module.shop.models.vo.WalletProductVO"] = hY;
    hY.__name__ = ["agario", "module", "shop", "models", "vo", "WalletProductVO"];
    hY.__super__ = f1;
    hY.prototype = lP(f1.prototype, {
        id: null,
        type: null,
        consumable: null,
        visual: null,
        __class__: hY
    });
    var iF = function(i) {
        z.call(this, i)
    };
    nt["agario.module.shop.models.vo.WalletSoftPurchaseVO"] = iF;
    iF.__name__ = ["agario", "module", "shop", "models", "vo", "WalletSoftPurchaseVO"];
    iF.__super__ = z;
    iF.prototype = lP(z.prototype, {
        currencyAmount: null,
        currencyProductId: null,
        __class__: iF
    });
    var by = function(i) {
        f1.call(this, i)
    };
    nt["agario.module.shop.models.vo.WalletTimeVariablePricesVO"] = by;
    by.__name__ = ["agario", "module", "shop", "models", "vo", "WalletTimeVariablePricesVO"];
    by.__super__ = f1;
    by.prototype = lP(f1.prototype, {
        purchaseIdForTimedEvent: null,
        timedEventId: null,
        everyXMins: null,
        decreaseCurrencyAmountBy: null,
        __class__: by
    });
    var pP = function(i) {
        f1.call(this, i)
    };
    nt["agario.module.shop.models.vo.XPItemVO"] = pP;
    pP.__name__ = ["agario", "module", "shop", "models", "vo", "XPItemVO"];
    pP.__super__ = f1;
    pP.prototype = lP(f1.prototype, {
        level: null,
        xpToNextLevel: null,
        levelUpBonusId: null,
        __class__: pP
    });
    var om = function(i) {
        f1.call(this, i)
    };
    nt["agario.module.shop.models.vo.XsollaShopItemsVO"] = om;
    om.__name__ = ["agario", "module", "shop", "models", "vo", "XsollaShopItemsVO"];
    om.__super__ = f1;
    om.prototype = lP(f1.prototype, {
        items: null,
        currency_code: null,
        __class__: om
    });
    var b9 = function(i) {
        f1.call(this, i)
    };
    nt["agario.module.shop.models.vo.XsollaShopItemVO"] = b9;
    b9.__name__ = ["agario", "module", "shop", "models", "vo", "XsollaShopItemVO"];
    b9.__super__ = f1;
    b9.prototype = lP(f1.prototype, {
        sku: null,
        description: null,
        price: null,
        __class__: b9
    });
    var f7 = function(i) {
        this.maxHeight = 65;
        this.maxWidth = 800;
        cY.call(this);
        this.item = i;
        this._payModel = l4.getService(hB)
    };
    nt["agario.module.shop.renderers.CurrencyShopItem"] = f7;
    f7.__name__ = ["agario", "module", "shop", "renderers", "CurrencyShopItem"];
    f7.__super__ = cY;
    f7.prototype = lP(cY.prototype, {
        maxWidth: null,
        maxHeight: null,
        item: null,
        background: null,
        plusLabel: null,
        stampIcon: null,
        percentage: null,
        price: null,
        amountLabel: null,
        multiplierLabel: null,
        finalAmountLabel: null,
        equalLabel: null,
        buy: null,
        currencyIcon: null,
        _payModel: null,
        onClick: function(i) {
            this.dispatchEvent(new jG("ShopEvent::BUY"))
        },
        render: function() {
            this.drawItem();
            this.doLayout()
        },
        update: function() {
            this.doLayout()
        },
        drawItem: function() {
            var i2 = 16768658;
            var js = 16742656;
            var i1 = 16775095;
            if (this.item.banner.toLowerCase() == "none") {
                i2 = 16775095;
                js = 16769024;
                i1 = 16768658
            }
            this.background = new cY();
            this.background.get_graphics().beginFill(i2, 1);
            this.background.get_graphics().drawRoundRect(0, 0, this.maxWidth, this.maxHeight, 5, 5);
            this.background.get_graphics().endFill();
            this.addChild(this.background);
            this.amountLabel = new m1({
                text: kr.string(this.item.preAmount),
                fontSize: 18,
                align: 3
            });
            this.amountLabel.set_autoSize(1);
            this.disableTextField(this.amountLabel);
            this.addChild(this.amountLabel);
            if (this.item.banner != "none") {
                this.stampIcon = new el(nK.get_assets().getTexture("multiplier_stamp", "main_shop").get_bitmapData());
                this.addChild(this.stampIcon);
                this.multiplierLabel = new m1({
                    text: dk.text(this.item.banner),
                    fontSize: 20,
                    color: 16777215,
                    wordWrap: true,
                    maxWidth: 55
                });
                this.addChild(this.multiplierLabel);
                this.multiplierLabel.set_textGroup(f7.MULTIPLIER_LABEL_TEXTGROUP)
            }
            this.plusLabel = new m1({
                text: "+",
                fontSize: 16,
                align: 3
            });
            this.plusLabel.set_autoSize(1);
            this.disableTextField(this.plusLabel);
            this.addChild(this.plusLabel);
            var q = {
                labelOptions: {
                    text: kr.string(this.item.percentage) + "%",
                    fontSize: 16,
                    align: 3,
                    color: 16777215
                },
                labelWidth: 90,
                labelHeight: this.maxHeight - 10,
                radius: 5,
                backgroundColor: js
            };
            this.percentage = new hJ(q);
            this.addChild(this.percentage);
            this.equalLabel = new m1({
                text: "=",
                fontSize: 16,
                align: 3,
                color: 16742656
            });
            this.equalLabel.set_autoSize(1);
            this.disableTextField(this.equalLabel);
            this.addChild(this.equalLabel);
            this.finalAmountLabel = new m1({
                text: kr.string(this.item.finalAmount),
                fontSize: 18,
                align: 4,
                color: 16742656
            });
            this.finalAmountLabel.set_autoSize(3);
            this.finalAmountLabel.set_selectable(false);
            this.finalAmountLabel.mouseEnabled = false;
            this.addChild(this.finalAmountLabel);
            q.labelOptions.fontSize = 14;
            q.labelWidth = 100;
            q.labelOptions.color = 0;
            q.labelOptions.text = na.getFormatedCurrencyPrice(this._payModel, this.item.price);
            q.backgroundColor = i1;
            this.price = new hJ(q);
            this.addChild(this.price);
            var i = nK.get_assets().getAtlas("main_shop");
            this.currencyIcon = new el(i.getTexture("currency_icon").get_bitmapData());
            this.addChild(this.currencyIcon);
            this.buy = new gr(dk.text("menu_shop_buy"), 80, this.maxHeight);
            this.addChild(this.buy);
            this.buttonMode = true;
            this.useHandCursor = true;
            this.addEventListener("click", oT(this, this.onClick));
            this.addEventListener("mouseOver", oT(this, this.onRollIOverItem));
            this.addEventListener("mouseOut", oT(this, this.onRollOutItem))
        },
        disableTextField: function(i) {
            i.set_selectable(false);
            i.mouseEnabled = false
        },
        onRollOutItem: function(i) {
            this.buy.set_currentState(this.buy.upState);
            this.background.set_alpha(1)
        },
        onRollIOverItem: function(i) {
            this.buy.set_currentState(this.buy.overState);
            this.background.set_alpha(0.5)
        },
        doLayout: function() {
            if (this.stampIcon != null) {
                while (this.stampIcon.get_height() > this.maxHeight) {
                    this.stampIcon.set_scaleX((function(q) {
                        var i;
                        var i1 = q.stampIcon;
                        i = i1.set_scaleY(i1.get_scaleY() - 0.001);
                        return i
                    }(this)))
                }
                this.stampIcon.smoothing = true;
                this.stampIcon.set_y((this.maxHeight - this.stampIcon.get_height()) / 2);
                this.stampIcon.set_x(0);
                this.multiplierLabel.set_x((this.stampIcon.get_width() - this.multiplierLabel.get_width()) / 2 + 5);
                this.multiplierLabel.set_y((this.maxHeight - this.multiplierLabel.get_height()) / 2)
            }
            this.background.set_x(70);
            this.background.set_y(0);
            this.amountLabel.set_x(90);
            this.amountLabel.set_y((this.maxHeight - this.amountLabel.get_height()) / 2);
            this.percentage.set_x(this.maxWidth / 3);
            this.percentage.set_y((this.maxHeight - this.percentage.get_height()) / 2);
            this.plusLabel.set_x(this.percentage.get_x() - 40);
            this.plusLabel.set_y((this.maxHeight - this.plusLabel.get_height()) / 2);
            this.equalLabel.set_x(this.percentage.get_x() + this.percentage.get_width() + 20);
            this.equalLabel.set_y((this.maxHeight - this.equalLabel.get_height()) / 2);
            this.buy.set_x(this.background.get_x() + this.maxWidth - this.buy.get_width());
            this.price.set_x(this.buy.get_x() - this.price.get_width() - 50);
            this.price.set_y((this.background.get_height() - this.price.get_height()) / 2);
            this.currencyIcon.set_x(this.price.get_x() - 60);
            this.currencyIcon.set_y((this.maxHeight - this.currencyIcon.get_height()) / 2);
            this.finalAmountLabel.set_x(this.currencyIcon.get_x() - this.finalAmountLabel.get_width() - 5);
            this.finalAmountLabel.set_y((this.maxHeight - this.finalAmountLabel.get_height()) / 2)
        },
        __class__: f7
    });
    var ex = function(i) {
        hC.call(this);
        this.itemDataList = i;
        this.maxWidth = 277;
        this.maxHeight = 331;
        this.pricesContainerWidth = this.maxWidth - 20;
        this.btnColors = [6349312, 16742401];
        this.btnOverColors = [5622016, 15166464];
        nK.get_events().addEventListener("ShopEvent::DISABLE_CLOSED", oT(this, this.onTooltipClose))
    };
    nt["agario.module.shop.renderers.ShopBoostItem"] = ex;
    ex.__name__ = ["agario", "module", "shop", "renderers", "ShopBoostItem"];
    ex.__super__ = hC;
    ex.prototype = lP(hC.prototype, {
        itemIcon: null,
        title: null,
        background: null,
        buyOptionsContainer: null,
        hint: null,
        itemDataList: null,
        pricesContainerWidth: null,
        btnColors: null,
        btnOverColors: null,
        originalPosition: null,
        onTooltipClose: function(i) {
            this.addChild(this.hint);
            this.hint.set_x(this.originalPosition.x);
            this.hint.set_y(this.originalPosition.y);
            this.hint.closeHint();
            nK.get_events().dispatchEventWith("ShopEvent::ENABLE_SHOP");
            nK.get_events().dispatchEventWith("shop_event::allow_disable_close", false)
        },
        onRemovedFromStage: function(i) {
            this.onTooltipClose();
            hC.prototype.onRemovedFromStage.call(this, i);
            this._initialized = false
        },
        initialize: function() {
            this.background = new mR();
            this.background.get_graphics().beginFill(16053492, 1);
            this.background.get_graphics().drawRoundRect(0, 0, this.maxWidth, this.maxHeight, 5, 5);
            this.background.get_graphics().endFill();
            this.addChild(this.background);
            this.title = new m1({
                text: dk.text(this.itemDataList[0].category.title),
                fontSize: 18,
                align: 0,
                bold: true
            });
            this.addChild(this.title);
            this.title.set_width(this.maxWidth - 20);
            this.title.mouseEnabled = false;
            var i1 = dk.text(this.itemDataList[0].category.description);
            this.hint = new kB(i1, this.maxWidth - 10 | 0, 50, "left");
            this.addChild(this.hint);
            nK.get_events().addEventListener("ShopEvent::SHOP_ENABLED", oT(this, this.handleShopEnabled));
            this.hint.addEventListener(a9.CLOSED, oT(this, this.onHintClosed));
            this.hint.addEventListener(a9.OPENED, oT(this, this.onHintOpened));
            var i = nK.get_assets().getAtlas("main_shop");
            var q = cP.replace(this.itemDataList[0].category.image, ".png", "");
            this.itemIcon = new el(i.getTexture(q).get_bitmapData());
            this.addChild(this.itemIcon);
            this.drawDynamicContent()
        },
        handleShopEnabled: function(i) {
            nK.get_events().dispatchEventWith("shop_event::allow_disable_close", false);
            this.addChild(this.hint);
            this.hint.set_x(this.originalPosition.x);
            this.hint.set_y(this.originalPosition.y);
            this.hint.closeHint()
        },
        onHintOpened: function(i) {
            nK.get_events().dispatchEventWith("ShopEvent::DISABLE_SHOP");
            nK.get_events().dispatchEventWith("shop_event::allow_disable_close", true);
            var q = this.localToGlobal(new pp(this.hint.get_x(), this.hint.get_y()));
            this.hint.set_x(q.x);
            this.hint.set_y(q.y);
            this.stage.addChild(this.hint)
        },
        onHintClosed: function(i) {
            this.addChild(this.hint);
            this.hint.set_x(this.originalPosition.x);
            this.hint.set_y(this.originalPosition.y);
            nK.get_events().dispatchEventWith("ShopEvent::ENABLE_SHOP");
            nK.get_events().dispatchEventWith("shop_event::allow_disable_close", false)
        },
        drawDynamicContent: function() {
            this.buyOptionsContainer = new cY();
            this.addChild(this.buyOptionsContainer);
            var q6 = 0;
            var js = 0;
            var q4 = 0;
            var q2 = this.itemDataList.length;
            while (q4 < q2) {
                var q1 = q4++;
                var q0 = [this.itemDataList[q1]];
                var i2 = new cY();
                this.buyOptionsContainer.addChild(i2);
                if (q6 > 0) {
                    var q7 = new mR();
                    q7.get_graphics().lineStyle(1, 13421772, 1);
                    q7.get_graphics().lineTo(this.pricesContainerWidth, 0);
                    i2.addChild(q7)
                }
                var q = new m1({
                    text: dk.text(q0[0].title),
                    align: 0
                });
                q.set_width(this.pricesContainerWidth);
                q.set_selectable(false);
                i2.addChild(q);
                q.set_x((this.pricesContainerWidth - q.get_width()) * 0.5);
                q.set_y(10);
                var q5 = new el(nK.get_assets().getTexture("currency_icon").get_bitmapData());
                var q3 = new pa({
                    color: this.btnColors[q6],
                    overColor: this.btnOverColors[q6],
                    text: "" + q0[0].price,
                    textColorOver: 16777215,
                    textColor: 16777215,
                    icon: q5,
                    w: 140,
                    h: 40,
                    fontSize: 14,
                    bold: true
                });
                i2.addChild(q3);
                q3.set_x((this.pricesContainerWidth - q3.get_width()) * 0.5);
                q3.set_y(q.get_y() + q.get_height() + 5);
                q3.data = nK.models.shopBoostItems.getItemByPurchaseId(q0[0].purchaseId);
                var i1 = null;
                if (!nK.user.isGuest) {
                    i1 = nK.user.wallet.filter((function(i) {
                        return function(q8) {
                            return q8.productId == i[0].gameplayInfo.productId
                        }
                    })(q0))[0]
                }
                if (i1 != null && i1.get_balance() > 0) {
                    var qZ = new kR(i1.get_balance());
                    i2.addChild(qZ);
                    qZ.set_x(q3.get_x() + q3.get_width());
                    qZ.set_y(q3.get_y());
                    if (this.itemDataList[q1].get_inUse() == false) {
                        q3.hideIcon();
                        q3.set_text(dk.text("menu_shop_use"));
                        q3.addEventListener("click", oT(this, this.onUseClick))
                    } else {
                        q3.addEventListener("click", oT(this, this.onClick))
                    }
                } else {
                    q3.addEventListener("click", oT(this, this.onClick))
                }
                if (this.itemDataList[q1].bestDealSticker) {
                    var qY = new ma(dk.text("menu_shop_coins_best"));
                    i2.addChild(qY);
                    qY.set_x(q3.get_x());
                    qY.set_y(q3.get_y())
                }
                i2.set_x((this.maxWidth - this.pricesContainerWidth) * 0.5);
                i2.set_y(js + 20 * q6);
                js += 25 * q6 + i2.get_height();
                q6++
            }
            this.doLayout()
        },
        updateView: function() {
            hC.prototype.updateView.call(this);
            while (this.buyOptionsContainer.get_numChildren() > 0) {
                this.buyOptionsContainer.removeChildAt(0)
            }
            this.removeChild(this.buyOptionsContainer);
            this.drawDynamicContent()
        },
        onUseClick: function(i1) {
            var i = i1.currentTarget;
            i.set_enabled(false);
            var q = i.data;
            if (q != null) {
                this.dispatchEvent(new jG("ShopEvent::USE", q))
            }
        },
        onClick: function(i1) {
            var i = i1.currentTarget;
            i.set_enabled(false);
            if (nK.user.isGuest) {
                i.delayedEnable()
            }
            var q = i.data;
            if (q != null) {
                this.dispatchEvent(new jG("ShopEvent::BUY", q))
            }
        },
        doLayout: function() {
            this.hint.set_x(this.maxWidth - this.hint.get_width() - 10);
            this.hint.set_y(10);
            this.originalPosition = new pp(this.hint.get_x(), this.hint.get_y());
            this.title.set_x(10);
            this.title.set_y(10);
            this.itemIcon.set_x((this.maxWidth - this.itemIcon.get_width()) * 0.5);
            this.itemIcon.set_y(80);
            this.buyOptionsContainer.set_y(this.itemIcon.get_y() + this.itemIcon.get_height() + 10)
        },
        dispose: function() {
            nK.get_events().removeEventListener("ShopEvent::SHOP_ENABLED", oT(this, this.handleShopEnabled));
            nK.get_events().removeEventListener("ShopEvent::DISABLE_CLOSED", oT(this, this.onTooltipClose));
            this.hint.removeEventListener(a9.CLOSED, oT(this, this.onHintClosed));
            this.hint.removeEventListener(a9.OPENED, oT(this, this.onHintOpened));
            hC.prototype.dispose.call(this)
        },
        __class__: ex
    });
    var aO = function(q, js, i, i1) {
        var i2 = new cY();
        this.sectionFace = new el(js);
        this.sectionFace.smoothing = true;
        i2.addChild(this.sectionFace);
        this.normalSubtitleArea = new mR();
        this.normalSubtitleArea.get_graphics().beginFill(i, 0.8);
        this.normalSubtitleArea.get_graphics().drawRoundRect(0, 0, this.sectionFace.get_width(), this.sectionFace.get_height() / 5, 5, 5);
        this.normalSubtitleArea.get_graphics().endFill();
        i2.addChild(this.normalSubtitleArea);
        this.overSubtitleArea = new mR();
        this.overSubtitleArea.get_graphics().beginFill(i, 1);
        this.overSubtitleArea.get_graphics().drawRoundRect(0, 0, this.sectionFace.get_width(), this.sectionFace.get_height() / 5, 5, 5);
        this.overSubtitleArea.get_graphics().endFill();
        i2.addChild(this.overSubtitleArea);
        this.overSubtitleArea.set_visible(false);
        this.normalSubtitleArea.set_y(this.overSubtitleArea.set_y(this.sectionFace.get_height() - this.normalSubtitleArea.get_height()));
        var qY = new mC(nK.get_fontName(), 23, 0, true);
        qY.align = 3;
        this.subtitleText = new mx();
        this.subtitleText.set_defaultTextFormat(qY);
        this.subtitleText.set_text(q);
        this.subtitleText.set_height(this.subtitleText.get_textHeight() + 5);
        this.subtitleText.set_autoSize(1);
        this.subtitleText.set_textColor(i1);
        this.subtitleText.set_x((this.sectionFace.get_width() - this.subtitleText.get_textWidth()) * 0.5);
        this.subtitleText.set_y(this.normalSubtitleArea.get_y() + (this.normalSubtitleArea.get_height() - this.subtitleText.get_textHeight()) * 0.5);
        i2.addChild(this.subtitleText);
        this.upState = this.downState = this.overState = i2;
        this.mouseChildren = false;
        bh.call(this)
    };
    nt["agario.module.shop.renderers.ShopSectionButton"] = aO;
    aO.__name__ = ["agario", "module", "shop", "renderers", "ShopSectionButton"];
    aO.__super__ = bh;
    aO.prototype = lP(bh.prototype, {
        sectionFace: null,
        subtitleText: null,
        normalSubtitleArea: null,
        overSubtitleArea: null,
        updateState: function() {
            bh.prototype.updateState.call(this);
            if (this.mouseIsOver) {
                this.overSubtitleArea.set_visible(true);
                this.normalSubtitleArea.set_visible(false)
            } else {
                this.overSubtitleArea.set_visible(false);
                this.normalSubtitleArea.set_visible(true)
            }
        },
        __class__: aO
    });
    var of = function() {
        hC.call(this);
        this.bundleItems = new oI();
        this.set_name(dk.text("menu_shop_coins_title"))
    };
    nt["agario.module.shop.screens.ShopCoinsScreen"] = of ; of .__name__ = ["agario", "module", "shop", "screens", "ShopCoinsScreen"]; of .__super__ = hC; of .prototype = lP(hC.prototype, {
        bundleItems: null,
        initialize: function() {
            hC.prototype.initialize.call(this);
            this.buildCoinShop()
        },
        sortByOrderInShop: function(q, i) {
            if (q.orderInShop < i.orderInShop) {
                return 1
            }
            if (q.orderInShop > i.orderInShop) {
                return -1
            }
            return 0
        },
        buildCoinShop: function() {
            var q2 = 645;
            var q0 = new hC();
            q0.set_y(30);
            q0.set_x(15);
            this.addChild(q0);
            nK.models.shopCoins.shopCoinsList.sort(oT(this, this.sortByOrderInShop));
            var q4 = 0;
            var i1 = 0;
            var q3 = nK.models.shopCoins.shopCoinsList;
            while (i1 < q3.length) {
                var q5 = q3[i1];
                ++i1;
                var js = q5;
                var q = l9.getConfigIdReplacement(q5.purchaseId);
                var qZ = nK.models.shopCoins.getItemById(q);
                if (qZ == null) {
                    if (l9.shouldSkipConfigEntry(js.purchaseId, js.visibility)) {
                        continue
                    }
                } else {
                    js = qZ
                }
                var q8 = new f7(js);
                q8.addEventListener("ShopEvent::BUY", oT(this, this.onBuyClick));
                q8.maxWidth = q2;
                q8.maxHeight = 60;
                q0.addChild(q8);
                q8.set_y(70 * q4);
                q8.render();
                q4++;
                this.bundleItems.push(q8)
            }
            var i = m1.getTextGroup(f7.MULTIPLIER_LABEL_TEXTGROUP);
            if (i != null) {
                i.useLowestFontSize(12, true)
            }
            m1.clearTextGroup(f7.MULTIPLIER_LABEL_TEXTGROUP);
            var qY = this.bundleItems.h;
            var q1 = null;
            while (qY != null) {
                var i2;
                i2 = (function(ra) {
                    var q9;
                    q1 = qY[0];
                    qY = qY[1];
                    q9 = q1;
                    return q9
                }(this));
                i2.update()
            }
            var q7 = new mR();
            q7.get_graphics().beginFill(16711680);
            mr.drawRoundRectComplex(q7.get_graphics(), 0, 0, 90, 25, 5, 5, 0, 0);
            q7.get_graphics().endFill();
            this.addChild(q7);
            q7.set_x(q0.get_x() + q2 / 3);
            q7.set_y(q0.get_y() - q7.get_height());
            var q6 = new m1({
                text: dk.text("menu_shop_coins_free"),
                fontSize: 16,
                align: 0,
                color: 16777215
            });
            q6.mouseEnabled = false;
            q6.set_selectable(false);
            this.addChild(q6);
            q6.set_x(q7.get_x() + (q7.get_width() - q6.get_width()) / 2);
            q6.set_y(q7.get_y() + (q7.get_height() - q6.get_height()) / 2)
        },
        onBuyClick: function(q) {
            var i = q.currentTarget;
            nK.get_events().dispatchEventWith("ShopEvent::BUY", i.item.purchaseId)
        },
        __class__: of
    });
    var nh = function() {
        hC.call(this)
    };
    nt["agario.module.shop.screens.ShopGenericBoostScreen"] = nh;
    nh.__name__ = ["agario", "module", "shop", "screens", "ShopGenericBoostScreen"];
    nh.__super__ = hC;
    nh.prototype = lP(hC.prototype, {
        initialize: function() {
            hC.prototype.initialize.call(this)
        },
        createBoostItems: function(js) {
            var q1 = new c6();
            var q3 = 0;
            var qZ = js.length;
            while (q3 < qZ) {
                var qY = q3++;
                var q4 = js[qY].categoryPosition;
                var q0 = q1.h[q4];
                if (q0 == null) {
                    q0 = []
                }
                q0.push(js[qY]);
                q1.h[q4] = q0
            }
            var q = 0;
            var q5 = q1.iterator();
            while (q5.hasNext()) {
                var q2 = q5.next();
                var i1 = new ex(q2);
                i1.maxWidth = this.maxWidth / 2 - 10;
                i1.maxHeight = this.maxHeight - 20;
                i1.addEventListener("ShopEvent::BUY", oT(this, this.onBuy));
                i1.addEventListener("ShopEvent::USE", oT(this, this.onUse));
                this.addChild(i1);
                var i2 = 0;
                if (q > 0) {
                    i2 = 20
                }
                i1.set_x(q * i1.maxWidth + i2);
                q++
            }
        },
        onBuy: function(q) {
            var i = q.data;
            if (i != null) {
                nK.get_events().dispatchEventWith("ShopEvent::BUY", i.purchaseId)
            }
        },
        onUse: function(q) {
            var i = q.data;
            if (i != null) {
                nK.get_events().dispatchEventWith("ShopEvent::USE", i)
            }
        },
        updateView: function() {
            hC.prototype.updateView.call(this);
            var i1 = 0;
            var i2 = this.get_numChildren();
            while (i1 < i2) {
                var q = i1++;
                if (kr.is(this.getChildAt(q), ex)) {
                    (n0.__cast(this.getChildAt(q), ex)).updateView()
                }
            }
        },
        onRemovedFromStage: function(i) {
            hC.prototype.onRemovedFromStage.call(this, i);
            this._initialized = false
        },
        __class__: nh
    });
    var e8 = function() {
        hC.call(this);
        this.set_name(dk.text("menu_main_shop"))
    };
    nt["agario.module.shop.screens.ShopMainScreen"] = e8;
    e8.__name__ = ["agario", "module", "shop", "screens", "ShopMainScreen"];
    e8.__super__ = hC;
    e8.prototype = lP(hC.prototype, {
        coinsSectionBtn: null,
        skinsSectionBtn: null,
        massSectionBtn: null,
        xpSectionBtn: null,
        initialize: function() {
            hC.prototype.initialize.call(this);
            var q = new cY();
            this.addChild(q);
            var i = nK.get_assets().getAtlas("main_shop");
            this.coinsSectionBtn = this.createSection(0, dk.text("menu_shop_button_coins"), i.get("coins_button").get_bitmapData(), 6349312, 3572736);
            q.addChild(this.coinsSectionBtn);
            this.skinsSectionBtn = this.createSection(1, dk.text("menu_shop_skins_title"), i.get("skins_button").get_bitmapData(), 16768001, 12285696);
            q.addChild(this.skinsSectionBtn);
            this.massSectionBtn = this.createSection(2, dk.text("menu_shop_button_mass"), i.get("mass_button").get_bitmapData(), 16742401, 11286528);
            q.addChild(this.massSectionBtn);
            this.xpSectionBtn = this.createSection(3, dk.text("menu_shop_button_boost"), i.get("xp_button").get_bitmapData(), 57087, 30889);
            q.addChild(this.xpSectionBtn);
            q.set_y(0);
            q.set_x((this.maxWidth - q.get_width()) * 0.5)
        },
        createSection: function(q0, i, js, i2, q1) {
            var q = new aO(i, js, i2, q1);
            var i1 = (this.maxWidth / 2 - 20 - 10) / q.get_width();
            q.set_scaleX(q.set_scaleY(i1));
            var qZ = q0 % 2;
            var qY = Math.floor(q0 / 2);
            q.set_x(qZ * (q.get_width() + 10));
            q.set_y(qY * (q.get_height() + 10));
            return q
        },
        dispose: function() {
            hC.prototype.dispose.call(this)
        },
        __class__: e8
    });
    var a4 = function() {
        nh.call(this);
        this.set_name(dk.text("menu_shop_mass_title"))
    };
    nt["agario.module.shop.screens.ShopMassScreen"] = a4;
    a4.__name__ = ["agario", "module", "shop", "screens", "ShopMassScreen"];
    a4.__super__ = nh;
    a4.prototype = lP(nh.prototype, {
        initialize: function() {
            nh.prototype.initialize.call(this);
            var i = nK.models.shopBoostItems.getItemsByType(bF.MASS_BOOST);
            this.createBoostItems(i)
        },
        __class__: a4
    });
    var dj = function() {
        hC.call(this);
        this.set_name(dk.text("menu_shop_skins_title"))
    };
    nt["agario.module.shop.screens.ShopSkinsScreen"] = dj;
    dj.__name__ = ["agario", "module", "shop", "screens", "ShopSkinsScreen"];
    dj.__super__ = hC;
    dj.prototype = lP(hC.prototype, {
        view: null,
        initialize: function() {
            if (this._initialized) {
                return
            }
            hC.prototype.initialize.call(this);
            this.view = new je();
            this.view.maxWidth = this.maxWidth;
            this.view.maxHeight = this.maxHeight;
            this.addChild(this.view)
        },
        updateView: function() {
            if (this.view == null) {
                return
            }
            this.view.updateView()
        },
        showTab: function(i) {
            if (this.view != null) {
                this.view.openTab(i);
                this.view.resetContent()
            }
        },
        __class__: dj
    });
    var jr = function() {
        nh.call(this);
        this.set_name(dk.text("menu_shop_button_boost"))
    };
    nt["agario.module.shop.screens.ShopXPScreen"] = jr;
    jr.__name__ = ["agario", "module", "shop", "screens", "ShopXPScreen"];
    jr.__super__ = nh;
    jr.prototype = lP(nh.prototype, {
        initialize: function() {
            nh.prototype.initialize.call(this);
            var i = nK.models.shopBoostItems.getItemsByType(bF.XP_BOOST);
            this.createBoostItems(i)
        },
        __class__: jr
    });
    var o5 = function(i, q) {
        ol.call(this);
        this.titleString = i;
        this.descriptionString = q;
        this.maxWidth = 420;
        this.maxHeight = 250
    };
    nt["agario.module.shop.view.TextDialog"] = o5;
    o5.__name__ = ["agario", "module", "shop", "view", "TextDialog"];
    o5.__super__ = ol;
    o5.prototype = lP(ol.prototype, {
        title: null,
        description: null,
        descriptionString: null,
        descriptionContainer: null,
        titleString: null,
        textMaxWidth: null,
        initialize: function() {
            ol.prototype.initialize.call(this);
            var i = 15658734;
            var q = 25;
            var i1 = 30;
            this.textMaxWidth = Math.round(this.maxWidth) - q * 2 - 20;
            this.title = new m1({
                text: "+",
                fontSize: 24,
                align: 0,
                bold: true
            });
            this.title.set_text(this.titleString);
            this.title.set_width(this.maxWidth);
            this.title.mouseEnabled = false;
            this.addChild(this.title);
            this.description = new m1({
                text: "+",
                fontSize: 14,
                align: 0,
                bold: true,
                multiline: true,
                wordWrap: true,
                width: this.textMaxWidth,
                maxWidth: this.textMaxWidth
            });
            this.description.set_text(this.descriptionString);
            this.descriptionContainer = new cY();
            this.descriptionContainer.get_graphics().beginFill(i);
            this.descriptionContainer.get_graphics().drawRect(0, 0, this.maxWidth - q * 2, this.description.get_textHeight() + i1);
            this.descriptionContainer.get_graphics().endFill();
            this.descriptionContainer.addChild(this.description);
            this.addChild(this.descriptionContainer);
            this.doLayout()
        },
        doLayout: function() {
            this.title.set_y(15);
            this.descriptionContainer.set_y(this.title.get_y() + this.title.get_height() + 25);
            this.descriptionContainer.set_x((this.maxWidth - this.descriptionContainer.get_width()) / 2);
            this.description.set_x((this.descriptionContainer.get_width() - this.textMaxWidth) / 2);
            this.description.set_y((this.descriptionContainer.get_height() - this.description.get_textHeight()) * 0.5)
        },
        __class__: o5
    });
    var oo = function() {
        o5.call(this, "Connection Lost!", "Shop not available at the moment,\n please come back later.");
        this._viewState = "connectionLostDialog";
        this.closeOnEscape = true
    };
    nt["agario.module.shop.view.ConnectionLostDialog"] = oo;
    oo.__name__ = ["agario", "module", "shop", "view", "ConnectionLostDialog"];
    oo.__super__ = o5;
    oo.prototype = lP(o5.prototype, {
        __class__: oo
    });
    var f = function(i, q, i2, qY, i1, js) {
        if (i1 == null) {
            i1 = ""
        }
        if (qY == null) {
            qY = ""
        }
        if (i2 == null) {
            i2 = ""
        }
        if (q == null) {
            q = ""
        }
        if (i == null) {
            i = ""
        }
        ol.call(this);
        this.set_bottomText(i1);
        this.set_titleText(i);
        this.set_subtitleText(qY);
        this.itemName = q;
        this.itemDescription = i2;
        this.productImage = js;
        this.maxWidth = 420;
        this.maxHeight = 240
    };
    nt["agario.module.shop.view.ProductActionDialog"] = f;
    f.__name__ = ["agario", "module", "shop", "view", "ProductActionDialog"];
    f.__super__ = ol;
    f.prototype = lP(ol.prototype, {
        title: null,
        subtitle: null,
        productImage: null,
        productBackground: null,
        bottomLabel: null,
        productDurationLabel: null,
        itemName: null,
        itemDescription: null,
        subtitleText: null,
        get_subtitleText: function() {
            return this.subtitleText
        },
        set_subtitleText: function(i) {
            if (this.subtitle != null) {
                this.subtitle.set_text(i)
            }
            return this.subtitleText = i
        },
        titleText: null,
        get_titleText: function() {
            return this.titleText
        },
        set_titleText: function(i) {
            if (this.title != null) {
                this.title.set_text(i)
            }
            return this.titleText = i
        },
        bottomText: null,
        get_bottomText: function() {
            return this.bottomText
        },
        set_bottomText: function(i) {
            if (this.bottomLabel != null) {
                this.bottomLabel.set_text(i)
            }
            return this.bottomText = i
        },
        draw: function() {
            if (this.productBackground == null) {
                this.productBackground = new mR();
                this.addChild(this.productBackground)
            }
            if (this.subtitle == null) {
                this.subtitle = new m1({
                    text: "+",
                    fontSize: 18,
                    align: 0,
                    bold: true
                });
                this.subtitle.set_autoSize(0);
                this.addChild(this.subtitle)
            }
            this.subtitle.set_text(this.get_subtitleText());
            if (this.productImage != null) {
                var i = 359;
                var i2 = 170;
                var q = new cY();
                var i1 = Math.min(i / this.productImage.get_width(), i2 / this.productImage.get_height());
                if (i1 < 1) {
                    this.productImage.set_scaleX(this.productImage.set_scaleY(i1))
                }
                q.addChild(this.productImage);
                this.addChild(q)
            }
            if (this.productDurationLabel == null) {
                this.productDurationLabel = new m1({
                    text: this.itemDescription,
                    fontSize: 16,
                    align: 0
                });
                this.productDurationLabel.set_autoSize(0);
                this.addChild(this.productDurationLabel)
            }
            this.productDurationLabel.set_text(this.itemDescription);
            if (this.bottomLabel == null) {
                this.bottomLabel = new m1({
                    text: "+",
                    fontSize: 14,
                    align: 0
                });
                this.bottomLabel.set_multiline(true);
                this.bottomLabel.set_height(50);
                this.addChild(this.bottomLabel)
            }
            this.bottomLabel.set_text(this.get_bottomText());
            this.doLayout()
        },
        onData: function(i) {
            this.closeButton.set_enabled(true);
            this.resizeBackground(this.maxWidth, this.maxHeight, true, oT(this, this.onDataReady))
        },
        onDataReady: function() {},
        initialize: function() {
            ol.prototype.initialize.call(this);
            this.title = new m1({
                text: "+",
                fontSize: 28,
                align: 0,
                bold: true
            });
            this.title.set_text(this.get_titleText());
            this.title.set_autoSize(0);
            this.addChild(this.title);
            this.closeButton.set_enabled(false)
        },
        doLayout: function() {
            this.title.set_x((this.maxWidth - this.title.get_width()) / 2);
            this.title.set_y(20);
            this.subtitle.set_x((this.maxWidth - this.subtitle.get_width()) / 2);
            this.subtitle.set_y(this.title.get_y() + this.title.get_height() + 10);
            if (this.productImage != null) {
                this.productBackground.get_graphics().beginFill(16053492, 1);
                this.productBackground.get_graphics().drawRoundRect(0, 0, this.maxWidth - 40, this.productImage.get_height() + 70, 5, 5);
                this.productBackground.get_graphics().endFill();
                this.productBackground.set_x((this.maxWidth - this.productBackground.get_width()) / 2);
                this.productBackground.set_y(this.subtitle.get_y() + this.subtitle.get_height() + 20);
                this.productImage.set_y(this.productBackground.get_y() + 20);
                this.productImage.set_x((this.maxWidth - this.productImage.get_width()) / 2);
                this.productDurationLabel.set_x((this.maxWidth - this.productDurationLabel.get_width()) / 2);
                this.productDurationLabel.set_y(this.productImage.get_y() + this.productImage.get_height() + 10)
            }
            this.bottomLabel.set_x((this.maxWidth - this.bottomLabel.get_width()) / 2);
            this.bottomLabel.set_y(this.productBackground.get_y() + this.productBackground.get_height() + 10)
        },
        resize: function(i, q) {
            this.set_x((i - this.maxWidth) * 0.5);
            this.set_y((q - this.maxHeight) * 0.5)
        },
        __class__: f,
        __properties__: lP(ol.prototype.__properties__, {
            set_bottomText: "set_bottomText",
            get_bottomText: "get_bottomText",
            set_titleText: "set_titleText",
            get_titleText: "get_titleText",
            set_subtitleText: "set_subtitleText",
            get_subtitleText: "get_subtitleText"
        })
    });
    var fp = function(i) {
        f.call(this);
        this._viewState = "productUseDialog";
        this.closeOnEscape = true
    };
    nt["agario.module.shop.view.ProductUseDialog"] = fp;
    fp.__name__ = ["agario", "module", "shop", "view", "ProductUseDialog"];
    fp.__super__ = f;
    fp.prototype = lP(f.prototype, {
        item: null,
        initialize: function() {
            f.prototype.initialize.call(this);
            this.isLoading = true;
            this.showLoading("Processing Transaction...");
            this.title.set_x((this.maxWidth - this.title.get_width()) / 2);
            this.title.set_y((this.maxHeight - this.title.get_height()) / 2);
            nK.get_events().addEventListener("ShopEvent::useProductResponse", oT(this, this.onData));
            nK.get_events().addEventListener("ShopEvent::useProductFailed", oT(this, this.onError));
            nK.get_events().addEventListener("ShopEvent::DISABLE_CLOSED", oT(this, this.onCloseButtonClick))
        },
        onError: function(i) {
            this.hideLoading();
            this.closeButton.set_enabled(true);
            this.set_titleText(dk.text("transaction_error"))
        },
        onData: function(i) {
            this.maxWidth = 420;
            this.maxHeight = 400;
            f.prototype.onData.call(this, i);
            this.item = i.data;
            this.itemName = this.item.name;
            this.itemDescription = this.item.description;
            this.hideLoading()
        },
        onDataReady: function() {
            this.isLoading = false;
            f.prototype.onDataReady.call(this);
            this.set_titleText(dk.text("menu_level_up_title"));
            this.drawData();
            this.doLayout()
        },
        drawData: function() {
            if (n0.__instanceof(this.item, gM)) {
                this.set_subtitleText(dk.text("menu_skin_activation_subtitle"));
                this.set_bottomText(dk.text("menu_skin_activation_info"));
                this.productImage = new lB({
                    bitmap: (n0.__cast(this.item, gM)).gamePlayInfo.image.source,
                    w: 140,
                    h: 140,
                    borderColor: (n0.__cast(this.item, gM)).gamePlayInfo.get_cellColor()
                })
            } else {
                if (n0.__instanceof(this.item, bt)) {
                    this.set_subtitleText(dk.text("menu_boost_activation_subtitle"));
                    this.set_bottomText(dk.text("menu_boost_activation_info"));
                    var q;
                    q = (n0.__cast(this.item, bt)).category.image;
                    q = cP.replace(q, ".png", "");
                    this.productImage = new el(nK.get_assets().getTexture(q).get_bitmapData());
                    var i;
                    i = (n0.__cast(this.item, bt)).gameplayInfo.durationMins;
                    if (i <= 1) {
                        this.itemDescription = dk.text("menu_shop_1_hour")
                    } else {
                        this.itemDescription = dk.text("menu_shop_n_hour", {
                            hours_value: i == null ? "null" : "" + i
                        })
                    }
                }
            }
            this.draw()
        },
        dispose: function() {
            f.prototype.dispose.call(this);
            nK.get_events().removeEventListener("ShopEvent::useProductResponse", oT(this, this.onData))
        },
        __class__: fp
    });
    var me = function() {
        ol.call(this);
        this.maxWidth = 420;
        this.maxHeight = 240;
        this._viewState = "purchaseCompleteDialog";
        this.closeOnEscape = true;
        nK.get_events().listen("ShopEvent::softPurchaseComplete", oT(this, this.onData));
        nK.get_events().listen("ShopEvent::INAPP_PURCHASE_COMPLETE", oT(this, this.onData));
        nK.get_events().listen("shopevent::soft_purchase_failed", oT(this, this.onError));
        nK.get_events().listen("ShopEvent::DISABLE_CLOSED", oT(this, this.onCloseButtonClick))
    };
    nt["agario.module.shop.view.PurchaseCompleteDialog"] = me;
    me.__name__ = ["agario", "module", "shop", "view", "PurchaseCompleteDialog"];
    me.__super__ = ol;
    me.prototype = lP(ol.prototype, {
        item: null,
        purchaseId: null,
        sm: null,
        bundle: null,
        purchase: null,
        title: null,
        subtitle: null,
        bottomLabel: null,
        productDescriptionLabel: null,
        productImage: null,
        productBackground: null,
        itemName: null,
        itemDescription: null,
        titleText: null,
        bottomText: null,
        subtitleText: null,
        _cachedEvent: null,
        initialize: function() {
            this.sm = l4.getService(qe);
            ol.prototype.initialize.call(this);
            this.itemName = "";
            this.itemDescription = "";
            this.titleText = "";
            this.bottomText = "";
            this.subtitleText = "";
            this.title = new m1({
                text: "+",
                fontSize: 28,
                align: 0,
                bold: true
            });
            this.title.set_text(this.titleText);
            this.title.set_autoSize(0);
            this.addChild(this.title);
            this.isLoading = true;
            this.showLoading(dk.text("transaction_in_progress"))
        },
        postInit: function() {
            if (this._cachedEvent != null) {
                this.onData(this._cachedEvent)
            }
        },
        onError: function(i) {
            var q = this;
            this.maxWidth = 420;
            this.maxHeight = 160;
            this.hideLoading();
            this.isLoading = false;
            this.resizeBackground(this.maxWidth, this.maxHeight, true, function() {
                q.enable();
                q.closeButton.set_enabled(true);
                q.titleText = dk.text("transaction_error");
                q.subtitleText = dk.text("transaction_error_desc");
                q.draw()
            })
        },
        onCloseButtonClick: function(i) {
            ol.prototype.onCloseButtonClick.call(this, i);
            nK.get_events().dispatchEventWith("ShopEvent::ENABLE_SHOP")
        },
        onData: function(i) {
            this.hideLoading();
            this.isLoading = false;
            if (!this._initialized) {
                this._cachedEvent = i;
                return
            }
            if (i.data == "dailyQuest") {
                this.close();
                return
            }
            this.maxWidth = 420;
            this.maxHeight = 400;
            if (n0.__instanceof(i.data, cI)) {
                this.item = i.data
            } else {
                this.purchaseId = i.data
            }
            this.resizeBackground(this.maxWidth, this.maxHeight, true, oT(this, this.onDataReady))
        },
        onDataReady: function() {
            this.isLoading = false;
            this.titleText = dk.text("menu_purchase_title");
            try {
                if (this.purchaseId != null) {
                    this.showPurchaseCompletePopupWithPurchaseId(this.purchaseId)
                } else {
                    this.showPurchaseCompleteSoftPurchase()
                }
            } catch (i) {
                lF.lastException = i;
                if (i instanceof nM) {
                    i = i.val
                }
                if (n0.__instanceof(i, String)) {
                    this.onError(null);
                    return
                } else {
                    throw (i)
                }
            }
            this.createShareButtons()
        },
        showPurchaseCompletePopupWithPurchaseId: function(i2) {
            var qY = nK.models.shopPurchasesModel.getInappPurchaseByPurchaseId(i2);
            if (qY == null) {
                this.onError(null);
                return
            }
            var q0 = qY.bundleId;
            var q1 = nK.models.walletProductBundlesModel.getBundleByBundleId(q0);
            if (q1 == null) {
                this.onError(null);
                return
            }
            if (q1.visual.popupType == "coins") {
                var i = nK.models.walletProductBundlesModel.getProductsByBundleId(q0);
                if (i.length > 0) {
                    var q = i.first();
                    var js = nK.models.walletProductsModel.getProductById(q.productId);
                    if (js.type == "currency") {
                        var i1 = "coin";
                        this.showPurchaseCompleteCurrency(qY, q0, i1, q.quantity, q.visual)
                    }
                }
            } else {
                if (q1.visual.popupType == "dna") {
                    throw new nM("DNA is not yet supported!")
                } else {
                    if (q1.visual.popupType == "promo") {
                        this.showPurchaseCompletePromo(q0);
                        this.maxHeight = 350;
                        this.resizeBackground(this.maxWidth, this.maxHeight, true)
                    } else {
                        if (q1.visual.popupType == "skin") {
                            var qZ = nK.models.shopSkinsModel.getItemById(i2);
                            this.showPurchaseCompleteSkins(qZ)
                        }
                    }
                }
            }
        },
        showPurchaseCompleteCurrency: function(q, js, i, i2, qZ) {
            var i1 = nK.models.walletProductBundlesModel.getBundleByBundleId(js);
            this.itemDescription = dk.text("coins_product_description");
            this.itemDescription = cP.replace(this.itemDescription, "%i", "" + i2);
            this.bottomText = dk.text(q.localizedName);
            var qY = new fN({
                url: null,
                image: qZ.visualSource,
                w: 130,
                h: 130
            });
            qY.set_x(-qY.get_width() * 0.5);
            this.productImage = new cY();
            (n0.__cast(this.productImage, cY)).addChild(qY);
            this.draw()
        },
        showPurchaseCompletePromo: function(q2) {
            var rc = new cY();
            var ra = nK.models.walletProductBundlesModel.getBundleByBundleId(q2);
            var qY = nK.models.walletProductBundlesModel.getProductsByBundleId(q2);
            var rd = qY.length;
            this.productImage = new hU();
            var q0;
            q0 = n0.__cast(this.productImage, hU);
            var q1 = "";
            var q8 = kr.parseInt(nK.models.defaultPromoSettings.getSettingByKey("dynamicPurchaseCompleteThreshold"));
            var rk = nK.models.getWalletInappPurchaseById(this.purchaseId);
            this.bottomText = "";
            if (rd >= q8) {
                var js = ra.visual;
                var i = ra.visual.imageType;
                var q5 = dk.text(ra.visual.description);
                if (q5 != null) {
                    q1 = q5
                }
                ra.visual.getBitmap().then(function(rm) {
                    rm.set_x(-rm.get_width() * 0.5);
                    q0.addChild(rm)
                })
            } else {
                var q = 1 + 0.1 * (rd - 2);
                var rj = qY.h;
                var q4 = null;
                while (rj != null) {
                    var rb;
                    rb = (function(rn) {
                        var rm;
                        q4 = rj[0];
                        rj = rj[1];
                        rm = q4;
                        return rm
                    }(this));
                    var rh = nK.models.walletProductsModel.getProductById(rb.productId);
                    var rl = dk.text(rh.visual.description);
                    var i1 = q0.get_numChildren();
                    if (q0.get_numChildren() > 0) {
                        var q7 = nK.get_assets().getTexture("purchase_plus");
                        if (q7 != null) {
                            q0.addChild(q7.asBitmap())
                        } else {
                            null
                        }
                    }
                    var qZ = rh.type;
                    switch (qZ) {
                        case "currency":
                            var ri = rh.id;
                            var re = rh.visual;
                            var q3 = new fN({
                                url: null,
                                image: re.visualSource,
                                w: 0,
                                h: 0
                            });
                            q3.addEventListener("complete", function(rm) {
                                q0.align()
                            });
                            q0.addChild(q3);
                            var q6 = rb.quantity;
                            rl = cP.replace(rl, "%i", "" + q6);
                            break;
                        case "skin":
                            var q9 = new lB({
                                bitmap: rh.visual.visualSource.source,
                                w: 130,
                                h: 130,
                                borderColor: "#ff0000"
                            });
                            q9.addEventListener("complete", function(rm) {
                                q0.align()
                            });
                            q0.addChild(q9);
                            this.useItem(nK.models.shopSkinsModel.getItemById(rh.id));
                            break;
                        case "boost":
                            var rf = rh.id;
                            var i2 = rh.visual;
                            var rg = new fN({
                                url: null,
                                image: i2.visualSource,
                                w: 130,
                                h: 130
                            });
                            q0.addChild(rg);
                            break
                    }
                    if (rl != "") {
                        if (this.itemDescription != "") {
                            this.itemDescription += " + "
                        }
                        this.itemDescription += rl
                    }
                }
                q0.spacing = 24;
                q0.align();
                q0.set_scaleX(q0.set_scaleY(1 - 0.1 * q0.get_numChildren()))
            }
            this.draw()
        },
        getItemsDescriptionSize: function() {
            var i = this.itemDescription.split(" + ");
            return i.length
        },
        getItemDescription: function(q) {
            var i = this.itemDescription.split(" + ");
            if (i.length > q) {
                return i[q]
            } else {
                return null
            }
        },
        showPurchaseCompleteSkins: function(i) {
            this.useItem(i)
        },
        createAmountLabel: function(i) {
            var q = i + " " + dk.text("menu_shop_coins_title");
            return new m1({
                text: q,
                fontSize: 16,
                align: 0
            })
        },
        showPurchaseCompleteSoftPurchase: function() {
            if (n0.__instanceof(this.item, fK)) {
                this.subtitleText = dk.text("menu_purchase_coins_awarded");
                var js = nK.models.shopPurchasesModel.getInappPurchaseByPurchaseId(this.item.purchaseId);
                this.itemName = dk.text(js.localizedName);
                this.itemDescription = (n0.__cast(this.item, fK)).finalAmount + " " + dk.text("menu_shop_coins_title");
                var qZ = new el(nK.get_assets().getTexture("giant_coin").get_bitmapData());
                qZ.set_x(-qZ.get_width() * 0.5);
                this.productImage = new cY();
                (n0.__cast(this.productImage, cY)).addChild(qZ)
            } else {
                if (n0.__instanceof(this.item, gM)) {
                    var qY = this.item;
                    this.item.name = qY.get_title();
                    var i2 = cP.replace(qY.gamePlayInfo.image.source, ".png", "");
                    var i = new lB({
                        bitmap: i2,
                        w: 130,
                        h: 130,
                        borderColor: qY.gamePlayInfo.get_cellColor()
                    });
                    i.set_x(-65);
                    this.productImage = new cY();
                    (n0.__cast(this.productImage, cY)).addChild(i);
                    this.itemDescription = this.item.name;
                    this.useItem(qY)
                } else {
                    if (n0.__instanceof(this.item, bt)) {
                        this.bottomText = dk.text("menu_boost_activation_info");
                        this.subtitleText = dk.text("menu_purchase_coins_awarded");
                        var i1;
                        i1 = (n0.__cast(this.item, bt)).category.image;
                        i1 = cP.replace(i1, ".png", "");
                        var q0 = new el(nK.get_assets().getTexture(i1).get_bitmapData());
                        q0.set_x(-q0.get_width() * 0.5);
                        this.productImage = new cY();
                        (n0.__cast(this.productImage, cY)).addChild(q0);
                        var q;
                        q = (n0.__cast(this.item, bt)).gameplayInfo.durationMins / 60;
                        if (q == 1) {
                            this.itemDescription = dk.text("menu_shop_1_hour")
                        } else {
                            this.itemDescription = dk.text("menu_shop_n_hour", {
                                hours_value: q == null ? "null" : "" + q
                            })
                        }
                        this.useItem(this.item)
                    } else {
                        this.onError(null);
                        return
                    }
                }
            }
            this.draw()
        },
        draw: function() {
            if (this.productBackground == null) {
                this.productBackground = new mR();
                this.addChild(this.productBackground)
            }
            if (this.subtitle == null) {
                this.subtitle = new m1({
                    text: "+",
                    fontSize: 18,
                    align: 0,
                    bold: true
                });
                this.subtitle.set_autoSize(0);
                this.addChild(this.subtitle)
            }
            this.title.set_text(this.titleText);
            this.subtitle.set_text(this.subtitleText);
            if (this.productImage != null) {
                var i = 359;
                var i1 = 170;
                var q = new cY();
                q.addChild(this.productImage);
                this.addChild(q)
            }
            if (this.productDescriptionLabel == null) {
                this.productDescriptionLabel = new m1({
                    text: this.itemDescription,
                    fontSize: 16,
                    align: 0,
                    width: this.maxWidth - 40,
                    height: 60
                });
                this.productDescriptionLabel.set_multiline(true);
                this.productDescriptionLabel.set_autoSize(0);
                this.addChild(this.productDescriptionLabel)
            }
            this.productDescriptionLabel.set_text(this.itemDescription);
            if (this.bottomLabel == null) {
                this.bottomLabel = new m1({
                    text: "+",
                    fontSize: 14,
                    align: 0
                });
                this.bottomLabel.set_multiline(true);
                this.bottomLabel.set_height(50);
                this.addChild(this.bottomLabel)
            }
            this.bottomLabel.set_text(this.bottomText);
            this.doLayout()
        },
        doLayout: function() {
            this.title.set_x((this.maxWidth - this.title.get_width()) / 2);
            this.title.set_y(20);
            this.subtitle.set_x((this.maxWidth - this.subtitle.get_width()) / 2);
            this.subtitle.set_y(this.title.get_y() + this.title.get_height() + 10);
            if (this.productImage != null) {
                var i;
                if (this.productImage.get_height() == 0) {
                    i = 135
                } else {
                    i = this.productImage.get_height()
                }
                this.productBackground.get_graphics().beginFill(16053492, 1);
                this.productBackground.get_graphics().drawRoundRect(0, 0, this.maxWidth - 40, i + 70, 5, 5);
                this.productBackground.get_graphics().endFill();
                this.productBackground.set_x((this.maxWidth - this.productBackground.get_width()) / 2);
                this.productBackground.set_y(this.subtitle.get_y() + this.subtitle.get_height() + 20);
                this.productImage.set_y(this.productBackground.get_y() + (this.productBackground.get_height() - i) * 0.5);
                this.productImage.set_x(this.maxWidth * 0.5);
                this.productDescriptionLabel.set_x((this.maxWidth - this.productDescriptionLabel.get_width()) / 2);
                this.productDescriptionLabel.set_y(this.productBackground.get_y() + this.productBackground.get_height() + 20)
            }
            this.bottomLabel.set_x((this.maxWidth - this.bottomLabel.get_width()) / 2);
            this.bottomLabel.set_y(this.maxHeight - this.bottomLabel.get_height() - 10)
        },
        createShareButtons: function() {
            if (!n0.__instanceof(this.item, gM)) {
                return
            }
            if (nK.environment.authenticationProvider == N.Google) {
                this.createGoogleButton()
            } else {
                this.createFbButton()
            }
            this.createTwitterButton()
        },
        createTwitterButton: function() {
            var i1 = this;
            var q = new el(nK.get_assets().getTexture("twitter_icon").get_bitmapData());
            var i = new pa({
                color: 110829,
                overColor: 110829,
                text: dk.text("social_share_tag"),
                textColorOver: 16777215,
                textColor: 16777215,
                icon: q,
                iconPosition: "left",
                iconPadding: 25,
                w: 140,
                h: 35,
                fontSize: 18,
                bold: true
            });
            this.addChild(i);
            i.addEventListener("click", function(i2) {
                i1.sm.shareTwitter("ss_skinpurchase", {
                    skin: cP.replace(i1.item.name, "\\n", " ")
                })
            });
            i.set_x(this.get_width() - i.get_width() - 60);
            i.set_y(this.maxHeight - i.get_height() - 10)
        },
        createGoogleButton: function() {
            var i1 = this;
            var i = new el(nK.get_assets().getTexture("gplus_icon").get_bitmapData());
            var q = new pa({
                color: 14699578,
                overColor: 14699578,
                text: dk.text("social_share_tag"),
                textColorOver: 16777215,
                textColor: 16777215,
                icon: i,
                iconPosition: "left",
                iconPadding: 25,
                w: 140,
                h: 35,
                fontSize: 18,
                bold: true
            });
            this.addChild(q);
            q.addEventListener("click", function(js) {
                var i2 = cP.replace(i1.item.name, "\\n", " ");
                i1.sm.prepareGoogleShare("ss_skinpurchase", {
                    skin: i2
                });
                i1.sm.shareGoogle("ss_skinpurchase", {
                    skin: i2
                })
            });
            q.set_x(60);
            q.set_y(this.maxHeight - q.get_height() - 10)
        },
        createFbButton: function() {
            var i1 = this;
            var q = new el(nK.get_assets().getTexture("fb_icon").get_bitmapData());
            var i = new pa({
                color: 3625371,
                overColor: 3625371,
                text: dk.text("social_share_tag"),
                textColorOver: 16777215,
                textColor: 16777215,
                icon: q,
                iconPosition: "left",
                iconPadding: 25,
                w: 140,
                h: 35,
                fontSize: 18,
                bold: true
            });
            this.addChild(i);
            i.addEventListener("click", function(qY) {
                var js = (n0.__cast(i1.item, gM)).gamePlayInfo.get_gamePlayImage();
                var i2 = cP.replace(i1.item.name, "\\n", " ");
                i1.sm.shareFB("ss_skinpurchase", {
                    skin: i2
                }, js)
            });
            i.set_x(60);
            i.set_y(this.maxHeight - i.get_height() - 10)
        },
        useItem: function(i) {
            nK.get_events().dispatchEventWith("ShopEvent::USE", i)
        },
        dispose: function() {
            ol.prototype.dispose.call(this);
            nK.get_events().unlisten("ShopEvent::softPurchaseComplete", oT(this, this.onData));
            nK.get_events().unlisten("ShopEvent::INAPP_PURCHASE_COMPLETE", oT(this, this.onData));
            nK.get_events().unlisten("ShopEvent::DISABLE_CLOSED", oT(this, this.onCloseButtonClick));
            nK.get_events().unlisten("shopevent::soft_purchase_failed", oT(this, this.onError))
        },
        onEscapePress: function() {
            return this.isLoading
        },
        __class__: me
    });
    var je = function() {
        this.getMoreTab = "";
        this.currentPage = 0;
        hC.call(this)
    };
    nt["agario.module.shop.view.ShopSkinsView"] = je;
    je.__name__ = ["agario", "module", "shop", "view", "ShopSkinsView"];
    je.__super__ = hC;
    je.prototype = lP(hC.prototype, {
        categoryTabs: null,
        tabSelected: null,
        skinListContainer: null,
        leftButton: null,
        rightButton: null,
        paginationController: null,
        ownedSkins: null,
        allSkins: null,
        availableSkins: null,
        currentPage: null,
        filteredSkins: null,
        getMoreTab: null,
        getSkinPacks: function() {
            var q0 = nK.models.shopSkinsModel.skinList;
            var i2 = [];
            var qZ = 0;
            while (qZ < q0.length) {
                var qY = q0[qZ];
                ++qZ;
                var js = qY;
                var i1 = qY.productIdToQuantify;
                var i = l9.getConfigIdReplacement(i1);
                var q = nK.models.shopSkinsModel.getItemById(i);
                if (q == null) {
                    if (!js.get_owned()) {
                        if (l9.shouldSkipConfigEntry(js.productIdToQuantify, js.visibility)) {
                            continue
                        }
                    }
                } else {
                    js = q
                }
                i2.push(js)
            }
            return i2
        },
        initialize: function() {
            if (this._initialized) {
                return
            }
            hC.prototype.initialize.call(this);
            this.allSkins = this.getSkinPacks();
            this.ownedSkins = this.allSkins.filter(function(i) {
                return i.get_owned() == true
            });
            this.availableSkins = this.allSkins.filter(function(i) {
                return i.get_owned() == false
            });
            this.categoryTabs = new cm();
            this.categoryTabs.set_maxWidth(this.maxWidth);
            this.addChild(this.categoryTabs);
            this.updateTabs();
            this.categoryTabs.onChange.add(oT(this, this.onTabChange));
            this.skinListContainer = new gw({
                w: 624,
                h: 370
            });
            this.addChild(this.skinListContainer);
            this.leftButton = new iC();
            this.addChild(this.leftButton);
            this.rightButton = new iC();
            this.rightButton.anchorCenter();
            this.rightButton.set_rotation(180);
            this.addChild(this.rightButton);
            this.leftButton.addEventListener("click", oT(this, this.onLeftButtonClick));
            this.rightButton.addEventListener("click", oT(this, this.onRightButtonClick));
            this.paginationController = new kj();
            this.paginationController.gotoFirstButton = new jk();
            this.paginationController.gotoPreviousButton = new hg();
            this.paginationController.gotoNextButton = new hs();
            this.paginationController.gotoLastButton = new fU();
            this.paginationController.paginationItemClass = aM;
            this.addChild(this.paginationController);
            this.skinListContainer.S_onChange.add(oT(this, this.onSkinListChange));
            this.paginationController.S_onChange.add(oT(this, this.onPaginationControllerChange));
            this.loadContent();
            this.position()
        },
        position: function() {
            this.categoryTabs.set_x((this.maxWidth - this.categoryTabs.w) / 2);
            this.categoryTabs.set_y(0);
            this.skinListContainer.set_x(Math.round((this.maxWidth - this.skinListContainer.w) * 0.5));
            this.skinListContainer.set_y(Math.round(this.categoryTabs.get_y() + this.categoryTabs.get_height() + 30));
            this.leftButton.set_x(this.skinListContainer.get_x() - this.leftButton.get_width() - 10);
            this.rightButton.set_x(this.skinListContainer.get_x() + this.skinListContainer.w + 10);
            this.leftButton.set_y(this.skinListContainer.get_y() + (280 - this.leftButton.get_height()) * 0.5);
            this.rightButton.set_y(this.leftButton.get_y());
            this.paginationController.set_y(Math.round(this.maxHeight - this.paginationController.get_height() - 10));
            this.paginationController.set_x(Math.round((this.maxWidth - this.paginationController.get_width()) * 0.5));
            return this
        },
        _update: function() {
            this.rightButton.set_enabled(this.skinListContainer.currentPage < this.skinListContainer.totalPages - 1);
            this.leftButton.set_enabled(this.skinListContainer.currentPage > 0);
            this.leftButton.set_alpha(1);
            this.rightButton.set_alpha(1);
            if (!this.rightButton.get_enabled()) {
                this.rightButton.set_alpha(0.6)
            }
            if (!this.leftButton.get_enabled()) {
                this.leftButton.set_alpha(0.6)
            }
            return this
        },
        updateTabs: function() {
            var q6 = this.categoryTabs.selectedId;
            this.categoryTabs.clear();
            var q5 = nK.models.shopSkinsModel.getTabs();
            q5.sort(function(rb, ra) {
                if (rb.tabOrder < ra.tabOrder) {
                    return -1
                } else {
                    if (rb.tabOrder > ra.tabOrder) {
                        return 1
                    } else {
                        return 0
                    }
                }
            });
            var js = 0;
            while (js < q5.length) {
                var q2 = q5[js];
                ++js;
                q2.skins = []
            }
            var q4 = 0;
            var i2 = this.allSkins;
            while (q4 < i2.length) {
                var q9 = i2[q4];
                ++q4;
                if (!q9.get_owned() || q9.skinType == "VETERAN") {
                    if (q9.isOfferable()) {
                        var q7 = nK.models.shopSkinsModel.getOfferByBundleId(q9.referenceValue);
                        var i = iS.format(new Date(), "%Y-%m-%dT%H:%M:%SZ");
                        if (q7 == null || i < q7.availableFrom || i > q7.availableTo) {
                            continue
                        }
                    }
                    var q0 = nK.models.shopSkinsModel.getTabBySkinType(q9.skinType);
                    if (q0 != null && q0.skinType != "MYSTERY") {
                        q0.skins.push(q9)
                    }
                }
            }
            var q = nK.models.shopSkinsModel.getTabByDescription("OWNED");
            var q3 = 0;
            var i1 = this.ownedSkins;
            while (q3 < i1.length) {
                var qZ = i1[q3];
                ++q3;
                if (qZ.skinType != "MYSTERY") {
                    q.skins.push(qZ)
                }
            }
            var q1 = 0;
            while (q1 < q5.length) {
                var qY = q5[q1];
                ++q1;
                if (qY.skins.length > 0) {
                    var q8 = new cM(qY.tabDescription, dk.text(qY.tabName));
                    this.categoryTabs.addTab(q8)
                }
            }
            this.categoryTabs.setTab(q6)
        },
        sortSkins: function(i, i2, q) {
            if (q == null) {
                q = ""
            }
            var i1 = dk.text("skins_owned_tag").toUpperCase();
            i2.sort(function(qY, js) {
                if (q == i1) {
                    if (qY.orderInOwnedTab < js.orderInOwnedTab) {
                        return -1
                    }
                    if (qY.orderInOwnedTab > js.orderInOwnedTab) {
                        return 1
                    }
                    if (qY.price > js.price) {
                        return -1
                    }
                    if (qY.price < js.price) {
                        return 1
                    }
                } else {
                    if (qY.orderInShop < js.orderInShop) {
                        return -1
                    }
                    if (qY.orderInShop > js.orderInShop) {
                        return 1
                    }
                    if (qY.price < js.price) {
                        return -1
                    }
                    if (qY.price > js.price) {
                        return 1
                    }
                }
                if (qY.referenceValue < js.referenceValue) {
                    return -1
                }
                if (qY.referenceValue > js.referenceValue) {
                    return 1
                }
                return 0
            });
            if (i == "des") {
                i2.reverse()
            }
            if (i == "level") {
                i2.sort(function(js, qY) {
                    if (js.availableAtLevel > qY.availableAtLevel) {
                        return 1
                    } else {
                        return -1
                    }
                    return 0
                })
            }
        },
        loadContent: function() {
            this.ownedSkins = this.allSkins.filter(function(q2) {
                return q2.get_owned() == true
            });
            this.filteredSkins = [];
            var q0;
            q0 = this.categoryTabs.current.id.toUpperCase();
            var qZ = true;
            var i = nK.models.shopSkinsModel.getTabByDescription(q0);
            if (q0 == dk.text("skins_owned_tag").toUpperCase()) {
                this.filteredSkins = i.skins;
                this.sortSkins("asc", this.filteredSkins, q0);
                this.applyVeteranRule();
                var i2 = this.allSkins.filter(function(q2) {
                    return q2.get_owned() == false && q2.isReward == false
                });
                if (i2.length == 0) {
                    qZ = false
                } else {
                    this.getMoreTab = i2[0].skinType
                }
            } else {
                if (q0.toUpperCase() == "VETERAN") {
                    this.filteredSkins = i.skins;
                    this.sortSkins("level", this.filteredSkins)
                } else {
                    this.filteredSkins = i.skins;
                    this.sortSkins("asc", this.filteredSkins)
                }
            }
            this.skinListContainer.empty();
            var q;
            var i1 = 0;
            var js = this.filteredSkins;
            while (i1 < js.length) {
                var q1 = js[i1];
                ++i1;
                q = new A({
                    model: q1
                });
                if (q1.isReward && (nK.user.isGuest || !q1.get_owned() && q1.availableAtLevel > nK.user.userInfo.level)) {
                    q.showPrice = false
                }
                this.skinListContainer.addItem(q);
                q.addEventListener("ShopEvent::USE", oT(this, this.onUseClick));
                q.addEventListener("ShopEvent::UNEQUIP", oT(this, this.onUnequip));
                q.addEventListener("ShopEvent::BUY", oT(this, this.onBuyClick))
            }
            if (q0.toUpperCase() == dk.text("skins_owned_tag").toUpperCase() && qZ) {
                var qY = this.skinListContainer.items.length % this.skinListContainer.itemsPerPage;
                if (qY != 0) {
                    while (qY != 0) {
                        this.addDummyElement();
                        qY = this.skinListContainer.items.length % this.skinListContainer.itemsPerPage
                    }
                }
            }
            this.currentPage = Math.round(l6.clamp(this.currentPage, 0, this.skinListContainer.totalPages - 1));
            this.skinListContainer.set_page(this.currentPage);
            this.onSkinListChange();
            this.position()
        },
        applyVeteranRule: function() {
            var i1 = this.filteredSkins.filter(function(i2) {
                return i2.availableAtLevel > 0
            });
            var q = this.filteredSkins.filter(function(i2) {
                return i2.availableAtLevel == -1
            });
            if (i1.length > 0) {
                var i = i1.splice(0, 1)[0];
                q = q.concat(i1);
                q.unshift(i)
            }
            this.filteredSkins = q
        },
        addDummyElement: function() {
            var q = new gM({});
            q.referenceValue = this.getMoreTab;
            q.set_title("");
            q.purchaseId = "";
            q.gamePlayInfo = new cQ();
            q.gamePlayInfo.set_cellColor("0x56c0e0");
            var i = new A({
                model: q
            });
            i.addEventListener("ShopEvent::BUY", oT(this, this.onBuyClick));
            this.skinListContainer.addItem(i)
        },
        onUnequip: function(i) {
            nK.get_events().dispatchEventWith("ShopEvent::UNEQUIP")
        },
        onBuyClick: function(i1) {
            var q = i1.currentTarget;
            var i = q.item;
            if (i.purchaseId == "") {
                if (i.referenceValue != "") {
                    this.categoryTabs.setTabByName(i.referenceValue.toUpperCase())
                } else {
                    this.categoryTabs.setTab(0)
                }
                this.loadContent()
            } else {
                nK.get_events().dispatchEventWith("ShopEvent::BUY", i.purchaseId)
            }
        },
        onUseClick: function(q) {
            var i;
            i = n0.__cast(q.currentTarget, A);
            nK.get_events().dispatchEventWith("ShopEvent::USE", n0.__cast(i.item, gM))
        },
        onPaginationControllerChange: function() {
            this.skinListContainer.set_page(this.paginationController.currentPage);
            this._update()
        },
        onSkinListChange: function() {
            this.paginationController.set_totalPages(this.skinListContainer.totalPages);
            this.paginationController.set_currentPage(this.skinListContainer.currentPage);
            this._update()
        },
        onRightButtonClick: function(i) {
            this.skinListContainer.next_page();
            this._update()
        },
        onLeftButtonClick: function(i) {
            this.skinListContainer.previous_page();
            this._update()
        },
        onTabChange: function(i) {
            this.currentPage = 0;
            this.skinListContainer.currentPage = 0;
            this.loadContent()
        },
        updateView: function() {
            this.currentPage = this.skinListContainer.currentPage;
            this.loadContent();
            this.updateTabs()
        },
        openTab: function(i) {
            this.paginationController.set_currentPage(0);
            this.categoryTabs.setTabByName(i);
            this.loadContent();
            this.updateTabs()
        },
        resetContent: function() {
            this.paginationController.set_currentPage(0);
            this.currentPage = 0;
            this.skinListContainer.set_page(0)
        },
        __class__: je
    });
    var kS = function(i) {
        this.bundleId = i;
        me.call(this);
        nK.get_events().unlisten("ShopEvent::softPurchaseComplete", oT(this, this.onData));
        nK.get_events().unlisten("ShopEvent::INAPP_PURCHASE_COMPLETE", oT(this, this.onData));
        nK.get_events().unlisten("shopevent::soft_purchase_failed", oT(this, this.onError))
    };
    nt["agario.module.shop.view.UpgradeRewardDialog"] = kS;
    kS.__name__ = ["agario", "module", "shop", "view", "UpgradeRewardDialog"];
    kS.__super__ = me;
    kS.prototype = lP(me.prototype, {
        bundleId: null,
        playButton: null,
        initialize: function() {
            me.prototype.initialize.call(this);
            this.isLoading = false;
            this.hideLoading();
            this.maxWidth = 420;
            this.maxHeight = 400;
            this.titleText = dk.text("account_upgrade_reward_title");
            this.subtitleText = dk.text("account_upgrade_reward_subtitle");
            this.resizeBackground(this.maxWidth, this.maxHeight, true, oT(this, this.onResize));
            this.playButton = new hv({
                labelUp: {
                    text: "Play",
                    fontSize: 15,
                    color: 16777215
                },
                width: 130,
                height: 35
            });
            this.playButton.set_x(this.maxWidth * 0.5 - this.playButton.get_width() * 0.5);
            this.playButton.set_y(this.maxHeight - this.playButton.get_height() - 20);
            this.playButton.addEventListener("click", oT(this, this.onPlayButton_Click));
            this.addChild(this.playButton)
        },
        onResize: function() {
            this.showPurchaseCompletePromo(this.bundleId)
        },
        onPlayButton_Click: function(i) {
            this.close();
            nK.get_events().fire(m0.START_GAME, {
                mode: ""
            })
        },
        close: function(i) {
            if (i == null) {
                i = false
            }
            me.prototype.close.call(this);
            this.playButton.removeEventListener("click", oT(this, this.onPlayButton_Click))
        },
        __class__: kS
    });
    var lf = function(i) {
        o5.call(this, dk.text("user_banned_title"), dk.text("user_banned_description", {
            userId: i
        }));
        this._userID = i;
        this._viewState = "userBannedDialog";
        this.closeOnEscape = true;
        this.maxWidth = 420;
        this.maxHeight = 270
    };
    nt["agario.module.shop.view.UserBannedDialog"] = lf;
    lf.__name__ = ["agario", "module", "shop", "view", "UserBannedDialog"];
    lf.__super__ = o5;
    lf.prototype = lP(o5.prototype, {
        supportBtn: null,
        _userID: null,
        initialize: function() {
            o5.prototype.initialize.call(this);
            this.supportBtn = new pa({
                color: 5880408,
                overColor: 4294721,
                text: dk.text("user_banned_button_label"),
                textColorOver: 16777215,
                textColor: 16777215,
                w: 160,
                h: 30,
                fontSize: 14,
                bold: true
            });
            this.addChild(this.supportBtn);
            this.supportBtn.addEventListener("click", oT(this, this.onClick));
            this.doLayout()
        },
        doLayout: function() {
            o5.prototype.doLayout.call(this);
            if (this.supportBtn != null) {
                this.supportBtn.set_x(this.maxWidth * 0.5 - this.supportBtn.get_width() * 0.5);
                this.supportBtn.set_y(this.maxHeight - this.supportBtn.get_height() - 15)
            }
            this.description.set_height(160);
            this.description.set_y(this.descriptionContainer.get_height() * 0.5 - this.description.get_height() * 0.5)
        },
        onClick: function(i1) {
            var q = "Agar.io banned account";
            var i = encodeURIComponent('My Agar.io ID is "' + this._userID + '" and I believe I just got banned. Can you give me more details about this? When will my account be unbanned?\n\nThank you.');
            var i2 = "mailto:support@miniclip.com?subject=" + q + "&body=" + i;
            ns.getURL(new nT(i2), "")
        },
        __class__: lf
    });
    var mp = function(q, i) {
        if (i == null) {
            i = true
        }
        if (q == null) {
            q = true
        }
        this.timeLeft = -1;
        this.showVideoOffers = false;
        f.call(this);
        this.waitForData = i;
        this._viewState = "stateFreeCoinsCollect";
        this.closeOnEscape = true;
        this.productImage = new el(nK.get_assets().getTexture("giant_coin").get_bitmapData(), 1, true);
        this.productImage.set_scaleX(this.productImage.set_scaleY(0.8));
        this.set_subtitleText(" ");
        this.set_bottomText("");
        this.showVideoOffers = q
    };
    nt["agario.module.user.view.FreeCoinsCollectDialog"] = mp;
    mp.__name__ = ["agario", "module", "user", "view", "FreeCoinsCollectDialog"];
    mp.__super__ = f;
    mp.prototype = lP(f.prototype, {
        showVideoOffers: null,
        videoBtn: null,
        hasEngagement: null,
        timeLeft: null,
        centerLabel: null,
        leftLabel: null,
        rightLabel: null,
        waitForData: null,
        initialize: function() {
            f.prototype.initialize.call(this);
            this.maxWidth = 420;
            this.hasEngagement = nK.services.gameui.getUserEngagement();
            this.resizeBackground(this.maxWidth, this.maxHeight);
            if (this.waitForData) {
                this.isLoading = true;
                this.showLoading("Processing transaction...");
                nK.get_events().addEventListener("ShopEvent::freeCoinsResponse", oT(this, this.onData))
            } else {
                this.onDataReady()
            }
        },
        onData: function(i) {
            this.timeLeft = nK.user.freeCoinTimeLeft();
            this.maxHeight = this.calculateDialogHeight();
            f.prototype.onData.call(this, i)
        },
        calculateDialogHeight: function() {
            var i = 450;
            if (!this.showVideoOffers || !this.hasEngagement) {
                i = 335
            }
            if (this.timeLeft <= 0) {
                if (!this.showVideoOffers || !this.hasEngagement) {
                    i = 360
                }
            }
            return i
        },
        onDataReady: function() {
            f.prototype.onDataReady.call(this);
            this.isLoading = false;
            this.closeButton.set_enabled(true);
            if (this.timeLeft < 0) {
                this.timeLeft = nK.user.freeCoinTimeLeft()
            }
            if (this.maxHeight != this.calculateDialogHeight()) {
                this.maxHeight = this.calculateDialogHeight();
                this.resizeBackground(this.maxWidth, this.maxHeight, true)
            }
            var i = nK.models.getBonusById("hourlyBonus");
            var qZ = nK.models.getBonusById("genericVideoAdReward");
            var q = this.getRewardQuantity(qZ);
            var i2 = this.getRewardQuantity(i);
            if (i == null || qZ == null) {
                if (i == null) {
                    null
                }
                if (qZ == null) {
                    null
                }
                this.close();
                return
            }
            if (this.timeLeft > 0) {
                this.set_titleText(dk.text("menu_hourly_title"));
                this.set_subtitleText(" ");
                if (this.showVideoOffers && this.hasEngagement) {
                    this.set_bottomText(dk.text("free_coins_incentivise_video", [q]))
                }
            } else {
                this.set_titleText(dk.text("menu_hourly_title_coins"));
                this.set_subtitleText("Welcome back, you have earned:");
                var qY = dk.text("menu_shop_1_hour");
                this.set_bottomText(dk.text("menu_hourly_not_ready", [qY, i2]));
                if (this.showVideoOffers && this.hasEngagement) {
                    var js = this;
                    js.set_bottomText(js.get_bottomText() + (",\n" + dk.text("free_coins_incentivise_video", [q])))
                }
            }
            this.itemDescription = 20 + " " + dk.text("menu_shop_coins_title");
            this.draw();
            if (this.timeLeft > 0) {
                this.leftLabel = new m1({
                    text: dk.text("menu_hourly_come_back_in"),
                    fontSize: 20,
                    color: 0,
                    bold: true
                });
                this.centerLabel = new m1({
                    text: "00m 00s",
                    fontSize: 24,
                    color: 16711680,
                    bold: true
                });
                this.rightLabel = new m1({
                    text: dk.text("menu_hourly_to_earn"),
                    fontSize: 20,
                    color: 0,
                    bold: true
                });
                this.addChild(this.leftLabel);
                this.addChild(this.centerLabel);
                this.addChild(this.rightLabel);
                var i1 = Math.round(this.timeLeft / 1000);
                this.centerLabel.set_text(Math.floor(i1 / 60) + "m " + (i1 % 60 >= 10 ? "" : "0") + i1 % 60 + "s");
                this.startTimedEvents();
                this.reArrange()
            }
            this.hideLoading();
            if (this.showVideoOffers) {
                this.checkVideoStatus()
            }
        },
        getRewardQuantity: function(i2) {
            if (i2.bonusQty != -1) {
                return i2.bonusQty
            }
            var q = i2.bundleId;
            var i = nK.models.walletProductBundlesModel.getBundleByBundleId(q);
            var i1 = 0;
            if (i != null) {
                i1 = i.quantity
            }
            return i1
        },
        checkVideoStatus: function() {
            if (!this.hasEngagement) {
                return
            }
            var i = new el(nK.get_assets().getTexture("freecoins_video").get_bitmapData());
            this.videoBtn = new pa({
                color: 5880408,
                overColor: 4294721,
                text: dk.text("menu_main_free_coins"),
                textColorOver: 16777215,
                textColor: 16777215,
                icon: i,
                iconPadding: 6,
                w: 140,
                h: 50,
                fontSize: 14,
                bold: true
            });
            this.addChild(this.videoBtn);
            this.videoBtn.set_x((this.maxWidth - this.videoBtn.get_width()) / 2);
            this.videoBtn.set_y(this.maxHeight - this.videoBtn.get_height() - 20);
            this.videoBtn.addEventListener("click", oT(this, this.onVideoClick))
        },
        startTimedEvents: function() {
            var i = this;
            var q = new og(1000);
            q.run = function() {
                var i1 = Math.round(i.timeLeft / 1000);
                i.centerLabel.set_text(Math.floor(i1 / 60) + "m " + (i1 % 60 >= 10 ? "" : "0") + i1 % 60 + "s");
                i.timeLeft -= 1000;
                if (i1 <= 0) {
                    i1 = 0;
                    q.stop();
                    i.onTimerComplete()
                }
                i.reArrange()
            }
        },
        onTimerComplete: function() {
            this.set_subtitleText("Your coins are ready to be collected!");
            this.removeChild(this.leftLabel);
            this.removeChild(this.centerLabel);
            this.removeChild(this.rightLabel)
        },
        reArrange: function() {
            this.leftLabel.set_x((this.maxWidth - (this.leftLabel.get_width() + this.centerLabel.get_width() + this.rightLabel.get_width())) / 2);
            this.leftLabel.set_y(this.rightLabel.set_y(this.subtitle.get_y()));
            this.centerLabel.set_y(this.leftLabel.get_y() - 4);
            this.centerLabel.set_x(this.leftLabel.get_x() + this.leftLabel.get_width() + 4);
            this.rightLabel.set_x(this.centerLabel.get_x() + this.centerLabel.get_width() + 5);
            this.productBackground.set_y(this.centerLabel.get_y() + this.centerLabel.get_height() + 10);
            this.productImage.set_y(this.productBackground.get_y() + 20);
            this.productDurationLabel.set_x((this.maxWidth - this.productDurationLabel.get_width()) / 2);
            this.productDurationLabel.set_y(this.productImage.get_y() + this.productImage.get_height() + 10);
            this.bottomLabel.set_x((this.maxWidth - this.bottomLabel.get_width()) / 2);
            this.bottomLabel.set_y(this.productBackground.get_y() + this.productBackground.get_height() + 10)
        },
        onVideoClick: function(i) {
            if (!this.hasEngagement) {
                return
            }
            nK.services.gameui.openVideoAd();
            this.close()
        },
        onEscapePress: function() {
            return this.isLoading
        },
        __class__: mp
    });
    var a0 = function(i, q, js) {
        this.shouldEarnSkin = false;
        ol.call(this, "levelUpDialog");
        this.currentLevel = js;
        this.previousLevel = q;
        this.deltaCoins = i;
        this.maxWidth = 420;
        this.maxHeight = 460;
        this.skinCellSize = 150;
        this.shareStoryId = a0.FB_LEVEL_UP_STORY;
        this.shareData = {
            level: js
        };
        var i1 = js - q;
        if (q % 5 + i1 >= 5) {
            var i2 = nK.models.shopSkinsModel.getLastRewardSkin(js);
            this.shouldEarnSkin = true;
            this.shareStoryId = a0.FB_SKIN_UNLOCK_STORY;
            this.shareData = {
                level: js,
                skin: i2.get_title()
            };
            this.nextSkinName = i2.get_title()
        }
    };
    nt["agario.module.user.view.LevelUpDialog"] = a0;
    a0.__name__ = ["agario", "module", "user", "view", "LevelUpDialog"];
    a0.__super__ = ol;
    a0.prototype = lP(ol.prototype, {
        title: null,
        subtitle: null,
        levelIcon: null,
        grayArea: null,
        lvlLabel: null,
        rewardLabel: null,
        sm: null,
        deltaCoins: null,
        slotControl: null,
        previousLevel: null,
        nextSkinCell: null,
        nextSkinLabel: null,
        skinCellSize: null,
        ps: null,
        renderer: null,
        starContainer: null,
        tempLevel: null,
        currentLevel: null,
        shouldEarnSkin: null,
        shareStoryId: null,
        shareData: null,
        nextSkinName: null,
        initialize: function() {
            ol.prototype.initialize.call(this);
            this.tempLevel = this.previousLevel;
            this.sm = l4.getService(qe);
            this.title = new m1({
                text: "+",
                fontSize: 32,
                align: 0,
                bold: true
            });
            this.title.set_text(dk.text("menu_level_up_title"));
            this.title.set_autoSize(0);
            this.addChild(this.title);
            this.subtitle = new m1({
                text: "+",
                fontSize: 24,
                align: 0,
                bold: true
            });
            this.subtitle.set_text(dk.text("menu_level_up_subtitle"));
            this.subtitle.set_autoSize(0);
            this.addChild(this.subtitle);
            this.grayArea = new cY();
            this.grayArea.get_graphics().beginFill(16119285);
            mr.drawRoundRectComplex(this.grayArea.get_graphics(), 1, 1, this.maxWidth - 40, 230, 8, 0, 8, 0);
            this.grayArea.get_graphics().endFill();
            this.addChild(this.grayArea);
            this.starContainer = new cY();
            this.addChild(this.starContainer);
            var i1 = new el(nK.get_assets().getTexture("Exp_Star").get_bitmapData(), 1, true);
            i1.set_x(-i1.get_width() / 2);
            i1.set_y(-i1.get_height() / 2);
            this.levelIcon = new cY();
            this.levelIcon.addChild(i1);
            this.starContainer.addChild(this.levelIcon);
            this.lvlLabel = new m1({
                text: "" + this.tempLevel,
                fontSize: 32,
                align: 0,
                bold: true,
                width: this.maxWidth
            });
            this.addChild(this.lvlLabel);
            var q = new el(nK.get_assets().getTexture("currency_icon").get_bitmapData());
            this.rewardLabel = new fT({
                text: "+",
                fontSize: 16,
                align: 3,
                bold: true
            }, q, "right", 2);
            this.slotControl = new f3(5, 0);
            this.slotControl.S_slotFilled.add(oT(this, this.onSlotFilled));
            this.slotControl.S_slotsFull.add(oT(this, this.onSkinEarn));
            this.addChild(this.slotControl);
            var js = 0;
            var qZ = this.previousLevel % 5;
            while (js < qZ) {
                var i2 = js++;
                this.slotControl.setSlotActive()
            }
            var qY = nK.models.shopSkinsModel.getNextRewardSkin(this.tempLevel);
            if (qY != null) {
                this.nextSkinCell = new lB({
                    bitmap: (n0.__cast(qY, gM)).gamePlayInfo.image.source,
                    w: this.skinCellSize,
                    h: this.skinCellSize,
                    borderColor: (n0.__cast(qY, gM)).gamePlayInfo.get_cellColor(),
                    borderSize: 6
                });
                this.addChild(this.nextSkinCell);
                this.nextSkinCell.set_scaleX(this.nextSkinCell.set_scaleY(0.2));
                this.nextSkinLabel = new m1({
                    text: dk.text("menu_level_up_next_skin", [qY.availableAtLevel]),
                    fontSize: 16,
                    align: 3,
                    bold: true
                });
                this.addChild(this.nextSkinLabel)
            }
            this.rewardLabel.set_text(dk.text("menu_level_up_reward", [this.deltaCoins]));
            this.addChild(this.rewardLabel);
            this.doLayout();
            this.renderer = new oq();
            this.addChild(this.renderer);
            this.ps = cA.load("particle/LevelUpSlotBar-ipadhd.plist");
            this.renderer.addParticleSystem(this.ps)
        },
        onSlotFilled: function(i) {
            this.explodeStar();
            this.ps.emit(this.slotControl.get_x() + 20 * i + 5, this.slotControl.get_y() + 15);
            this.tempLevel++;
            this.lvlLabel.set_text("" + this.tempLevel)
        },
        dialogReady: function() {
            this.animateDialog()
        },
        doLayout: function() {
            this.title.set_x((this.maxWidth - this.title.get_width()) / 2);
            this.title.set_y(10);
            this.subtitle.set_x((this.maxWidth - this.subtitle.get_width()) / 2);
            this.subtitle.set_y(this.title.get_y() + this.title.get_height() + 5);
            this.grayArea.set_x(20);
            this.grayArea.set_y(this.subtitle.get_y() + this.subtitle.get_height() + 10);
            this.levelIcon.set_x(this.grayArea.get_x() + this.grayArea.get_width() / 2);
            this.levelIcon.set_alpha(0);
            this.lvlLabel.set_x(this.levelIcon.get_x() - this.lvlLabel.get_width() / 2);
            this.lvlLabel.set_y(this.levelIcon.get_y() + this.levelIcon.get_height() / 2 - 15);
            this.lvlLabel.set_visible(false);
            this.rewardLabel.set_y(this.grayArea.get_y() + this.grayArea.get_height() - 30);
            this.rewardLabel.set_x(this.grayArea.get_x() + (this.grayArea.get_width() - this.rewardLabel.get_width()) / 2);
            this.slotControl.set_x(this.grayArea.get_x() + (this.grayArea.get_width() - this.slotControl.get_width()) / 2);
            this.slotControl.set_y(this.grayArea.get_y() + this.grayArea.get_height() + 15);
            if (this.nextSkinCell != null) {
                this.nextSkinCell.set_y(this.slotControl.get_y() + (this.slotControl.get_height() - this.nextSkinCell.get_height()) / 2);
                this.nextSkinCell.set_x(this.slotControl.get_x() + this.slotControl.get_width() + 5);
                this.nextSkinLabel.set_y(this.slotControl.get_y() + this.slotControl.get_height() + 10);
                this.nextSkinLabel.set_x(this.grayArea.get_x() + (this.grayArea.get_width() - this.nextSkinLabel.get_width()) / 2)
            }
        },
        animateDialog: function() {
            this.levelIcon.set_y(this.grayArea.get_y());
            var i = this.grayArea.get_y() + this.grayArea.get_height() / 2;
            d3.tween(this.levelIcon, 1, {
                alpha: 1,
                y: i
            }).ease(b6.get_easeOut()).onComplete(oT(this, this.onAnimationComplete));
            d3.tween(this.levelIcon, 0.5, {
                scaleY: 0.8
            });
            d3.tween(this.levelIcon, 1, {
                scaleY: 1
            }, false).delay(0.3).ease(b6.get_easeOut());
            this.lvlLabel.set_x(this.levelIcon.get_x() - this.lvlLabel.get_width() / 2);
            this.lvlLabel.set_y(i - 15)
        },
        onSkinEarn: function() {
            var js = this;
            if (this.nextSkinCell != null) {
                this.slotControl.pauseProcess();
                this.subtitle.set_text(dk.text("menu_level_up_subtitle_skin"));
                var q = this.grayArea.get_x() + (this.grayArea.get_width() - this.skinCellSize) / 2;
                var i = this.grayArea.get_y() + (this.grayArea.get_height() - this.skinCellSize) / 2;
                var i2 = new gA().bezier(q, i, q + 140, (this.nextSkinCell.get_y() - i) / 2, 2);
                d3.motionPath(this.nextSkinCell, 2, {
                    x: i2.get_x(),
                    y: i2.get_y()
                });
                d3.tween(this.nextSkinCell, 2, {
                    scaleX: 1,
                    scaleY: 1
                });
                if (this.slotControl.get_hasFinished() == false) {
                    d3.tween(this.nextSkinCell, 1, {
                        alpha: 0
                    }).delay(3).onComplete(function() {
                        d3.tween(js.starContainer, 0.5, {
                            alpha: 1
                        });
                        d3.tween(js.lvlLabel, 0.5, {
                            alpha: 1
                        });
                        js.slotControl.resumeProcess()
                    })
                }
                var i1 = nK.models.shopSkinsModel.getNextRewardSkin(this.tempLevel);
                if (i1 != null) {
                    this.nextSkinCell = new lB({
                        bitmap: (n0.__cast(i1, gM)).gamePlayInfo.image.source,
                        w: this.skinCellSize,
                        h: this.skinCellSize,
                        borderColor: (n0.__cast(i1, gM)).gamePlayInfo.get_cellColor(),
                        borderSize: 6
                    });
                    this.addChild(this.nextSkinCell);
                    this.nextSkinCell.set_scaleX(this.nextSkinCell.set_scaleY(0.2));
                    this.nextSkinLabel.set_text(dk.text("menu_level_up_next_skin", [i1.availableAtLevel]));
                    this.nextSkinCell.set_y(this.slotControl.get_y() + (this.slotControl.get_height() - this.nextSkinCell.get_height()) / 2);
                    this.nextSkinCell.set_x(this.slotControl.get_x() + this.slotControl.get_width() + 5)
                }
                d3.tween(this.starContainer, 1, {
                    alpha: 0
                });
                d3.tween(this.lvlLabel, 1, {
                    alpha: 0
                });
                nK.services.shop.setSkin(nK.models.shopSkinsModel.getNextRewardSkin(this.tempLevel - 1).productIdToQuantify)
            }
        },
        onAnimationComplete: function() {
            this.explodeStar();
            var q = this.currentLevel - this.previousLevel;
            var i2 = 0;
            while (i2 < q) {
                var i1 = i2++;
                this.slotControl.addSlotToQueue()
            }
            this.slotControl.process();
            this.lvlLabel.set_visible(true);
            this.createShareButtons()
        },
        explodeStar: function() {
            var qY = 0;
            while (qY < 6) {
                var i2 = qY++;
                var i1 = new cY();
                var q = new el(nK.get_assets().getTexture("Exp_Star").get_bitmapData(), 1, true);
                q.set_x(-q.get_width() / 2);
                q.set_y(-q.get_height() / 2);
                i1.addChild(q);
                i1.set_alpha(0.7);
                i1.set_x(this.levelIcon.get_x());
                i1.set_y(this.levelIcon.get_y());
                this.starContainer.addChild(i1);
                var js = Math.random() * 0.4;
                d3.tween(i1, 1, {
                    x: i1.get_x() - 120 + Math.random() * 200,
                    y: i1.get_y() - Math.random() * 100,
                    scaleX: js,
                    scaleY: js,
                    alpha: 0
                })
            }
        },
        createShareButtons: function() {
            if (nK.environment.authenticationProvider == N.Google) {
                this.createGoogleButton()
            } else {
                this.createFbButton()
            }
            this.createTwitterButton()
        },
        createTwitterButton: function() {
            var i1 = this;
            var q = new el(nK.get_assets().getTexture("twitter_icon").get_bitmapData());
            var i = new pa({
                color: 110829,
                overColor: 110829,
                text: dk.text("social_share_tag"),
                textColorOver: 16777215,
                textColor: 16777215,
                icon: q,
                iconPosition: "left",
                iconPadding: 25,
                w: 140,
                h: 35,
                fontSize: 18,
                bold: true
            });
            this.addChild(i);
            i.addEventListener("click", function(i2) {
                i1.sm.shareTwitter(i1.shareStoryId, i1.shareData)
            });
            i.set_x(this.maxWidth - i.get_width() - 60);
            i.set_y(this.nextSkinLabel.get_y() + this.nextSkinLabel.get_height() + 10)
        },
        createGoogleButton: function() {
            var i1 = this;
            var i = new el(nK.get_assets().getTexture("gplus_icon").get_bitmapData());
            var q = new pa({
                color: 14699578,
                overColor: 14699578,
                text: dk.text("social_share_tag"),
                textColorOver: 16777215,
                textColor: 16777215,
                icon: i,
                iconPosition: "left",
                iconPadding: 25,
                w: 140,
                h: 35,
                fontSize: 18,
                bold: true
            });
            this.addChild(q);
            q.addEventListener("click", function(i2) {
                i1.sm.shareGoogle(i1.shareStoryId, i1.shareData)
            });
            this.sm.prepareGoogleShare(this.shareStoryId, this.shareData);
            q.set_x(60);
            q.set_y(this.nextSkinLabel.get_y() + this.nextSkinLabel.get_height() + 10)
        },
        createFbButton: function() {
            var i1 = this;
            var q = new el(nK.get_assets().getTexture("fb_icon").get_bitmapData());
            var i = new pa({
                color: 3625371,
                overColor: 3625371,
                text: dk.text("social_share_tag"),
                textColorOver: 16777215,
                textColor: 16777215,
                icon: q,
                iconPosition: "left",
                iconPadding: 25,
                w: 140,
                h: 35,
                fontSize: 18,
                bold: true
            });
            this.addChild(i);
            i.addEventListener("click", function(qZ) {
                var qY = i1.sm.getStoryById(i1.shareStoryId);
                if (qY == null) {
                    return
                }
                var q1 = {
                    skin: i1.nextSkinName,
                    level: i1.currentLevel
                };
                var i2 = dk.text(qY.titleTag, q1);
                var q0 = dk.text(qY.subtitleTag, q1);
                var js = dk.text(qY.subtitleTag, q1);
                i1.sm.directShareFB(i1.shareStoryId, i2, q0, js)
            });
            i.set_x(60);
            i.set_y(this.nextSkinLabel.get_y() + this.nextSkinLabel.get_height() + 10)
        },
        __class__: a0
    });
    var lV = function() {
        this.progressComponent = new cY();
        this.currencyLabel = new fT({});
        this.profilePic = new cY();
        this.padding = 20;
        this.playerName = new m1({});
        this.statsTitle = new m1({});
        ol.call(this, "state_profile_dialog");
        this.closeOnEscape = true;
        this.maxWidth = 620;
        this.maxHeight = 420
    };
    nt["agario.module.user.view.ProfileDialog"] = lV;
    lV.__name__ = ["agario", "module", "user", "view", "ProfileDialog"];
    lV.__super__ = ol;
    lV.prototype = lP(ol.prototype, {
        titleLabel: null,
        contents: null,
        rightColumn: null,
        statsTitle: null,
        playerName: null,
        padding: null,
        profilePic: null,
        currencyLabel: null,
        progressComponent: null,
        initialize: function() {
            ol.prototype.initialize.call(this);
            this.contents = new cY();
            this.addChild(this.contents);
            if (nK.user.userInfo != null && nK.user.get_socialId() != "") {
                this.displayUserInfo()
            } else {
                this.loadingLabel = new m1({
                    text: "Loading your information...",
                    fontSize: 28,
                    bold: true
                });
                this.addChild(this.loadingLabel);
                this.loadingLabel.set_x((this.maxWidth - this.loadingLabel.get_width()) / 2);
                this.loadingLabel.set_y((this.maxHeight - this.loadingLabel.get_height()) / 2);
                nK.user.onUserDataUpdate.add(oT(this, this.displayUserInfo))
            }
        },
        displayUserInfo: function() {
            if (nK.user.userInfo == null || nK.user.get_socialId() == "") {
                return
            }
            nK.user.onUserDataUpdate.remove(oT(this, this.displayUserInfo));
            if (this.loadingLabel != null && this.contains(this.loadingLabel)) {
                this.removeChild(this.loadingLabel)
            }
            this.drawBackground();
            this.drawTitle();
            this.createUserProfile();
            this.createStatsPanel();
            this.doLayout()
        },
        createUserProfile: function() {
            var i1 = nK.user.userInfo.displayName;
            if (i1 != null && i1.indexOf("_") != -1) {
                var q = i1.lastIndexOf("_");
                i1 = cj.substr(i1, 0, q)
            }
            this.playerName = new m1({
                text: i1,
                fontSize: 26,
                bold: true,
                width: this.maxWidth / 2 - this.padding,
                align: 0,
                color: 3421236
            });
            this.contents.addChild(this.playerName);
            var i2 = j5.formatNumber(nK.user.get_coins(), "n", " ");
            var i = new el(nK.get_assets().getTexture("currency_icon", "main_shop").get_bitmapData());
            this.currencyLabel = new fT({
                text: i2,
                fontSize: 16,
                align: 3,
                color: 0,
                bold: true
            }, i, "right", 2);
            this.contents.addChild(this.currencyLabel);
            this.progressComponent = this.getProgressBar();
            this.contents.addChild(this.progressComponent);
            f0.fromFile(nK.user.avatarUrl, oT(this, this.onLoadProfilePic))
        },
        getProgressBar: function() {
            var i2 = new cY();
            var js = this.getBarProgressForXP(nK.user.userInfo.xp, nK.user.userInfo.level);
            i2.addChild(js);
            var q = new cY();
            q.get_graphics().lineStyle(2, 25606);
            q.get_graphics().beginFill(16777215, 0);
            q.get_graphics().drawRoundRect(0, 0, 140, 25, 10, 10);
            q.get_graphics().endFill();
            i2.addChild(q);
            var i1 = new el(nK.get_assets().getTexture("Exp_Star").get_bitmapData(), 1, true);
            i2.addChild(i1);
            i1.set_width(i1.set_height(54));
            i1.set_rotation(12);
            i1.set_x(q.get_x() + q.get_width() - i1.get_width() / 2 + 4);
            i1.set_y((q.get_height() - i1.get_height()) / 2 - 8);
            var qY = new m1({
                text: kr.string(nK.user.userInfo.level),
                bold: true,
                color: 3355443,
                width: 46,
                fontSize: 18,
                align: 0
            });
            i2.addChild(qY);
            qY.set_x(i1.get_x());
            qY.set_y(-4);
            qY.set_rotation(12);
            var i = new m1({
                text: nK.user.userInfo.xp + " / " + nK.models.xpModel.getMaxXpForLevel(nK.user.userInfo.level),
                fontSize: 14,
                color: 0,
                autoSize: 1
            });
            i2.addChild(i);
            i.set_x(q.get_x() + (q.get_width() - i.get_width()) / 2);
            i.set_y(q.get_y() + q.get_height() + 5);
            return i2
        },
        createStatsPanel: function() {
            this.rightColumn = new cY();
            this.statsTitle = new m1({
                text: dk.text("menu_profile_player_stats"),
                fontSize: 26,
                color: 3421236
            });
            this.rightColumn.addChild(this.statsTitle);
            var js = [{
                key: dk.text("menu_profile_total_games"),
                value: nK.user.stats.gamesPlayed
            }, {
                key: dk.text("menu_profile_total_mass"),
                value: nK.user.stats.massConsumed
            }, {
                key: dk.text("menu_profile_average_score"),
                value: nK.user.stats.averageScore
            }, {
                key: dk.text("menu_profile_highest_score"),
                value: nK.user.stats.highestMass
            }, {
                key: dk.text("menu_profile_longest_time"),
                value: this.formatTime(nK.user.stats.longestTimeAlive)
            }, {
                key: dk.text("menu_profile_cells_eaten"),
                value: nK.user.stats.mostCellsEaten
            }];
            var i2 = 0;
            var qY = js.length;
            while (i2 < qY) {
                var q = i2++;
                var i1 = this.createRightColumnKeyValue(js[q].key, js[q].value);
                i1.set_y(50 + q * 32);
                this.rightColumn.addChild(i1)
            }
            this.contents.addChild(this.rightColumn)
        },
        formatTime: function(q) {
            var i1 = q;
            var i2 = i1 / 60 | 0;
            var i = i2 / 60 | 0;
            var js = "";
            if (i <= 0) {
                js = i2 + "m " + i1 % 60 + "s"
            } else {
                js = i % 60 + "h " + i2 % 60 + "m " + i1 % 60 + "s"
            }
            return js
        },
        getBarProgressForXP: function(q, qY) {
            var i = Math.min(1, nK.models.xpModel.getPercentage(q, qY));
            var i2 = new cY();
            var js = new el(nK.get_assets().getTexture("progress_striped").get_bitmapData());
            i2.addChild(js);
            var i1 = new mR();
            i1.get_graphics().lineStyle(2, 25606);
            i1.get_graphics().beginFill(26112, 1);
            i1.get_graphics().drawRoundRect(0, 0, 140 * (i * 0.88), 25, 10, 10);
            i1.get_graphics().endFill();
            i2.addChild(i1);
            js.set_mask(i1);
            return i2
        },
        onLoadProfilePic: function(js) {
            if (js == null) {
                return
            }
            while (this.profilePic.get_numChildren() > 0) {
                this.profilePic.removeChildAt(0)
            }
            var q = this.profilePic.addChild(new el(js));
            var i1 = 120 / q.get_width();
            q.set_scaleX(q.set_scaleY(i1));
            this.contents.addChild(this.profilePic);
            var i2 = this.profilePic.getBounds(this.contents);
            var i = new mR();
            i.get_graphics().beginFill(16711680);
            i.get_graphics().drawRoundRect(0, 0, i2.width, i2.height, 10);
            i.get_graphics().endFill();
            this.profilePic.addChild(i);
            q.set_mask(i);
            this.doLayout()
        },
        doLayout: function() {
            this.rightColumn.set_x(this.maxWidth / 2 + (this.maxWidth / 2 - this.padding - this.rightColumn.get_width()) / 2 - this.padding);
            this.rightColumn.set_y(this.padding);
            this.contents.set_y(this.titleLabel.get_y() + this.titleLabel.get_height() + this.padding);
            this.contents.set_x((this.maxWidth - this.contents.get_width()) / 2);
            this.playerName.set_y(this.padding);
            this.profilePic.set_x((this.maxWidth / 2 - this.profilePic.get_width()) / 2 - 10);
            this.profilePic.set_y(this.playerName.get_y() + this.playerName.get_height() + this.padding / 2);
            this.currencyLabel.set_y(this.profilePic.get_y() + this.profilePic.get_height() + this.padding / 2);
            this.currencyLabel.set_x(this.profilePic.get_x() + (this.profilePic.get_width() - this.currencyLabel.get_width()) / 2 + 5);
            this.progressComponent.set_x((this.maxWidth / 2 - this.progressComponent.get_width()) / 2);
            this.progressComponent.set_y(this.currencyLabel.get_y() + this.currencyLabel.get_height() + this.padding)
        },
        drawBackground: function() {
            var i = new mR();
            i.get_graphics().lineStyle(2, 11316396, 1, true);
            i.get_graphics().beginFill(16777215);
            i.get_graphics().drawRoundRect(0, 0, this.maxWidth - this.padding * 2, 320, 8, 8);
            i.get_graphics().endFill();
            this.contents.addChild(i);
            var q = new cY();
            q.get_graphics().beginFill(16119285);
            mr.drawRoundRectComplex(q.get_graphics(), 1, 1, (this.maxWidth - this.padding * 2) / 2, i.get_height() - 4, 8, 0, 8, 0);
            q.get_graphics().endFill();
            this.contents.addChild(q)
        },
        drawTitle: function() {
            var i = new mC("Arial", 30, 0, true);
            i.align = 3;
            this.titleLabel = new mx();
            this.titleLabel.set_defaultTextFormat(i);
            this.titleLabel.set_text(dk.text("menu_profile_title"));
            this.titleLabel.set_width(this.maxWidth - this.padding);
            this.titleLabel.set_height(this.titleLabel.get_textHeight() + 5);
            this.titleLabel.set_autoSize(1);
            this.titleLabel.set_selectable(false);
            this.titleLabel.set_embedFonts(false);
            this.titleLabel.set_textColor(5329233);
            this.addChild(this.titleLabel);
            this.titleLabel.set_x((this.maxWidth - this.titleLabel.get_textWidth()) * 0.5);
            this.titleLabel.set_y(this.padding)
        },
        createRightColumnKeyValue: function(i1, i2) {
            if ((i2 == null ? "null" : "" + i2) == "NaN") {
                i2 = "-"
            }
            var i = new cY();
            var q = new m1({
                text: i1,
                fontSize: 15,
                autoSize: 1
            });
            var js = new m1({
                text: i2 == null ? "null" : "" + i2,
                bold: true,
                fontSize: 16,
                autoSize: 1
            });
            i.addChild(q);
            i.addChild(js);
            js.set_x(q.get_x() + q.get_width());
            js.set_y(q.get_y() - (js.get_height() - q.get_height()) / 2);
            return i
        },
        __class__: lV
    });
    var cX = function() {};
    nt["protohx.Message"] = cX;
    cX.__name__ = ["protohx", "Message"];
    cX.stringToByteArray = function(i) {
        return eg.ofString(i)
    };
    cX.prototype = {
        otherFields: null,
        mergeFrom: function(i) {
            this.readFromSlice(new bT(new bB(i, null, null)), 0)
        },
        mergeDelimitedFrom: function(i) {
            fP.read__TYPE_MESSAGE(new bT(new bB(i, null, null)), this)
        },
        writeTo: function(q) {
            var i = new gH();
            this.writeToBuffer(i);
            i.toNormal(q)
        },
        writeDelimitedTo: function(q) {
            var i = new gH();
            kD.write__TYPE_MESSAGE(i, this);
            i.toNormal(q)
        },
        readFromSlice: function(q, i1) {
            while (q.buf.totlen - q.buf.pos > i1) {
                var i = fP.read__TYPE_UINT32(q);
                this.readUnknown(q, i)
            }
        },
        hasBytes: function(i, q) {
            return i.buf.totlen - i.buf.pos > q
        },
        writeToBuffer: function(i) {
            this.writeExtensionOrUnknownFields(i)
        },
        writeSingleUnknown: function(q, i, i1) {
            kD.write__TYPE_UINT32(q, i);
            var i2 = i & 7;
            switch (i2) {
                case 0:
                    kD.write__TYPE_UINT64(q, i1);
                    break;
                case 1:
                    kD.write__TYPE_FIXED64(q, i1);
                    break;
                case 2:
                    kD.write__TYPE_BYTES(q, i1);
                    break;
                case 5:
                    kD.write__TYPE_FIXED32(q, i1);
                    break;
                default:
                    throw new nM(new lA("Invalid wire type: " + kr.string(fq.toFloat(i & 7))))
            }
        },
        writeUnknown: function(q, i) {
            if (i == 0) {
                throw new nM(new lA("Attemp to write an undefined string filed: " + kr.string(fq.toFloat(i))))
            }
            kD.writeUnknownPair(q, i, this.getByTag(i))
        },
        readUnknown: function(q, i) {
            var i2;
			console.log(i);
            var js = i & 7;
            switch (js) {
                case 0:
                    i2 = fP.read__TYPE_UINT64(q);
                    break;
                case 1:
                    i2 = fP.read__TYPE_FIXED64(q);
                    break;
                case 2:
                    i2 = fP.read__TYPE_BYTES(q);
                    break;
                case 5:
                    i2 = fP.read__TYPE_FIXED32(q);
                    break;
                default:
                    throw new nM(new lA("Invalid wire type: " + kr.string(fq.toFloat(i & 7))))
            }
            var i1 = this.getByTag(i);
            if (i1 == null) {
                this.setByTag(i, i2)
            } else {
                if ((i1 instanceof Array) && i1.__enum__ == null) {
                    i1.push(i2)
                } else {
                    this.setByTag(i, [i1, i2])
                }
            }
        },
        getByTag: function(i) {
            if (this.otherFields != null) {
                return this.otherFields.h[i]
            } else {
                return null
            }
        },
        setByTag: function(i, q) {
            if (this.otherFields == null) {
                this.otherFields = new c6()
            }
            this.otherFields.set(i, q)
        },
        defaultBytes: function() {
            return null
        },
        defaultInt64: function() {
            return qq.newInt64(0, 0)
        },
        defaultUInt64: function() {
            return qq.newUInt64(0, 0)
        },
        writeExtensionOrUnknownFields: function(q) {
            if (this.otherFields != null) {
                var i1 = this.otherFields.keys();
                while (i1.hasNext()) {
                    var i = i1.next();
                    this.writeUnknown(q, i)
                }
            }
        },
        forEachFields: function(i) {},
        __class__: cX
    };
    var a2 = function() {
        cX.call(this);
        this.set_productId("")
    };
    nt["agario.proto.Activate_boost_request"] = a2;
    a2.__name__ = ["agario", "proto", "Activate_boost_request"];
    a2.__super__ = cX;
    a2.prototype = lP(cX.prototype, {
        productId: null,
        setProductId: function(i) {
            this.set_productId(i);
            return this
        },
        set_productId: function(i) {
            return this.productId = i
        },
        get_productId: function() {
            return this.productId
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 2, 1);
            kD.write__TYPE_STRING(i, this.get_productId());
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("productId", this.get_productId())
        },
        readFromSlice: function(q, js) {
            var i1 = 0;
            while (q.buf.totlen - q.buf.pos > js) {
                var i = fP.read__TYPE_UINT32(q);
                var i2 = i >> 3;
                switch (i2) {
                    case 1:
                        if (i1 != 0) {
                            throw new nM(new lA("Bad data format: Activate_boost_request.productId cannot be set twice."))
                        }++i1;
                        this.set_productId(fP.read__TYPE_STRING(q));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q, i)
                }
            }
        },
        __class__: a2,
        __properties__: {
            set_productId: "set_productId",
            get_productId: "get_productId"
        }
    });
    var jR = function() {
        cX.call(this);
        this.set_userBoostItem(new gX());
        this.set_productUpdates([])
    };
    nt["agario.proto.Activate_boost_response"] = jR;
    jR.__name__ = ["agario", "proto", "Activate_boost_response"];
    jR.__super__ = cX;
    jR.prototype = lP(cX.prototype, {
        userBoostItem: null,
        setUserBoostItem: function(i) {
            this.set_userBoostItem(i);
            return this
        },
        set_userBoostItem: function(i) {
            return this.userBoostItem = i
        },
        get_userBoostItem: function() {
            return this.userBoostItem
        },
        productUpdates: null,
        setProductUpdates: function(i) {
            this.set_productUpdates(i);
            return this
        },
        set_productUpdates: function(i) {
            return this.productUpdates = i
        },
        get_productUpdates: function() {
            return this.productUpdates
        },
        addProductUpdates: function(i) {
            if (this.get_productUpdates() == null) {
                this.set_productUpdates([i])
            } else {
                this.get_productUpdates().push(i)
            }
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 2, 1);
            kD.write__TYPE_MESSAGE(i, this.get_userBoostItem());
            if (this.get_productUpdates() != null) {
                var i2 = 0;
                var i1 = this.get_productUpdates();
                while (i2 < i1.length) {
                    var q = i1[i2];
                    ++i2;
                    kD.writeTag(i, 2, 2);
                    kD.write__TYPE_MESSAGE(i, q)
                }
            }
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("userBoostItem", this.get_userBoostItem());
            if (this.get_productUpdates() != null && this.get_productUpdates().length > 0) {
                i("productUpdates", this.get_productUpdates())
            }
        },
        readFromSlice: function(i1, js) {
            var q = 0;
            while (i1.buf.totlen - i1.buf.pos > js) {
                var i = fP.read__TYPE_UINT32(i1);
                var i2 = i >> 3;
                switch (i2) {
                    case 1:
                        if (q != 0) {
                            throw new nM(new lA("Bad data format: Activate_boost_response.userBoostItem cannot be set twice."))
                        }++q;
                        this.set_userBoostItem(new gX());
                        fP.read__TYPE_MESSAGE(i1, this.get_userBoostItem());
                        break;
                    case 2:
                        if (this.get_productUpdates() == null) {
                            this.set_productUpdates([])
                        }
                        this.get_productUpdates().push(fP.read__TYPE_MESSAGE(i1, new pi()));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, i1, i)
                }
            }
        },
        __class__: jR,
        __properties__: {
            set_productUpdates: "set_productUpdates",
            get_productUpdates: "get_productUpdates",
            set_userBoostItem: "set_userBoostItem",
            get_userBoostItem: "get_userBoostItem"
        }
    });
    var jd = function() {
        cX.call(this);
        this.set_productId("")
    };
    nt["agario.proto.Activate_quest_request"] = jd;
    jd.__name__ = ["agario", "proto", "Activate_quest_request"];
    jd.__super__ = cX;
    jd.prototype = lP(cX.prototype, {
        productId: null,
        setProductId: function(i) {
            this.set_productId(i);
            return this
        },
        set_productId: function(i) {
            return this.productId = i
        },
        get_productId: function() {
            return this.productId
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 2, 1);
            kD.write__TYPE_STRING(i, this.get_productId());
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("productId", this.get_productId())
        },
        readFromSlice: function(q, js) {
            var i1 = 0;
            while (q.buf.totlen - q.buf.pos > js) {
                var i = fP.read__TYPE_UINT32(q);
                var i2 = i >> 3;
                switch (i2) {
                    case 1:
                        if (i1 != 0) {
                            throw new nM(new lA("Bad data format: Activate_quest_request.productId cannot be set twice."))
                        }++i1;
                        this.set_productId(fP.read__TYPE_STRING(q));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q, i)
                }
            }
        },
        __class__: jd,
        __properties__: {
            set_productId: "set_productId",
            get_productId: "get_productId"
        }
    });
    var bz = function() {
        cX.call(this);
        this.set_userQuest(new ce());
        this.set_productUpdates([])
    };
    nt["agario.proto.Activate_quest_response"] = bz;
    bz.__name__ = ["agario", "proto", "Activate_quest_response"];
    bz.__super__ = cX;
    bz.prototype = lP(cX.prototype, {
        userQuest: null,
        setUserQuest: function(i) {
            this.set_userQuest(i);
            return this
        },
        set_userQuest: function(i) {
            return this.userQuest = i
        },
        get_userQuest: function() {
            return this.userQuest
        },
        productUpdates: null,
        setProductUpdates: function(i) {
            this.set_productUpdates(i);
            return this
        },
        set_productUpdates: function(i) {
            return this.productUpdates = i
        },
        get_productUpdates: function() {
            return this.productUpdates
        },
        addProductUpdates: function(i) {
            if (this.get_productUpdates() == null) {
                this.set_productUpdates([i])
            } else {
                this.get_productUpdates().push(i)
            }
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 2, 1);
            kD.write__TYPE_MESSAGE(i, this.get_userQuest());
            if (this.get_productUpdates() != null) {
                var i2 = 0;
                var i1 = this.get_productUpdates();
                while (i2 < i1.length) {
                    var q = i1[i2];
                    ++i2;
                    kD.writeTag(i, 2, 2);
                    kD.write__TYPE_MESSAGE(i, q)
                }
            }
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("userQuest", this.get_userQuest());
            if (this.get_productUpdates() != null && this.get_productUpdates().length > 0) {
                i("productUpdates", this.get_productUpdates())
            }
        },
        readFromSlice: function(q, js) {
            var i2 = 0;
            while (q.buf.totlen - q.buf.pos > js) {
                var i = fP.read__TYPE_UINT32(q);
                var i1 = i >> 3;
                switch (i1) {
                    case 1:
                        if (i2 != 0) {
                            throw new nM(new lA("Bad data format: Activate_quest_response.userQuest cannot be set twice."))
                        }++i2;
                        this.set_userQuest(new ce());
                        fP.read__TYPE_MESSAGE(q, this.get_userQuest());
                        break;
                    case 2:
                        if (this.get_productUpdates() == null) {
                            this.set_productUpdates([])
                        }
                        this.get_productUpdates().push(fP.read__TYPE_MESSAGE(q, new pi()));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q, i)
                }
            }
        },
        __class__: bz,
        __properties__: {
            set_productUpdates: "set_productUpdates",
            get_productUpdates: "get_productUpdates",
            set_userQuest: "set_userQuest",
            get_userQuest: "get_userQuest"
        }
    });
    var oe = function() {
        cX.call(this);
        this.set_eventId("")
    };
    nt["agario.proto.Activate_timed_event_request"] = oe;
    oe.__name__ = ["agario", "proto", "Activate_timed_event_request"];
    oe.__super__ = cX;
    oe.prototype = lP(cX.prototype, {
        eventId: null,
        setEventId: function(i) {
            this.set_eventId(i);
            return this
        },
        set_eventId: function(i) {
            return this.eventId = i
        },
        get_eventId: function() {
            return this.eventId
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 2, 1);
            kD.write__TYPE_STRING(i, this.get_eventId());
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("eventId", this.get_eventId())
        },
        readFromSlice: function(q, js) {
            var i1 = 0;
            while (q.buf.totlen - q.buf.pos > js) {
                var i = fP.read__TYPE_UINT32(q);
                var i2 = i >> 3;
                switch (i2) {
                    case 1:
                        if (i1 != 0) {
                            throw new nM(new lA("Bad data format: Activate_timed_event_request.eventId cannot be set twice."))
                        }++i1;
                        this.set_eventId(fP.read__TYPE_STRING(q));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q, i)
                }
            }
        },
        __class__: oe,
        __properties__: {
            set_eventId: "set_eventId",
            get_eventId: "get_eventId"
        }
    });
    var cE = function() {
        cX.call(this);
        this.set_userTimedEvent(new hE());
        this.set_productUpdates([])
    };
    nt["agario.proto.Activate_timed_event_response"] = cE;
    cE.__name__ = ["agario", "proto", "Activate_timed_event_response"];
    cE.__super__ = cX;
    cE.prototype = lP(cX.prototype, {
        userTimedEvent: null,
        setUserTimedEvent: function(i) {
            this.set_userTimedEvent(i);
            return this
        },
        set_userTimedEvent: function(i) {
            return this.userTimedEvent = i
        },
        get_userTimedEvent: function() {
            return this.userTimedEvent
        },
        productUpdates: null,
        setProductUpdates: function(i) {
            this.set_productUpdates(i);
            return this
        },
        set_productUpdates: function(i) {
            return this.productUpdates = i
        },
        get_productUpdates: function() {
            return this.productUpdates
        },
        addProductUpdates: function(i) {
            if (this.get_productUpdates() == null) {
                this.set_productUpdates([i])
            } else {
                this.get_productUpdates().push(i)
            }
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 2, 1);
            kD.write__TYPE_MESSAGE(i, this.get_userTimedEvent());
            if (this.get_productUpdates() != null) {
                var i2 = 0;
                var i1 = this.get_productUpdates();
                while (i2 < i1.length) {
                    var q = i1[i2];
                    ++i2;
                    kD.writeTag(i, 2, 2);
                    kD.write__TYPE_MESSAGE(i, q)
                }
            }
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("userTimedEvent", this.get_userTimedEvent());
            if (this.get_productUpdates() != null && this.get_productUpdates().length > 0) {
                i("productUpdates", this.get_productUpdates())
            }
        },
        readFromSlice: function(q, js) {
            var i1 = 0;
            while (q.buf.totlen - q.buf.pos > js) {
                var i = fP.read__TYPE_UINT32(q);
                var i2 = i >> 3;
                switch (i2) {
                    case 1:
                        if (i1 != 0) {
                            throw new nM(new lA("Bad data format: Activate_timed_event_response.userTimedEvent cannot be set twice."))
                        }++i1;
                        this.set_userTimedEvent(new hE());
                        fP.read__TYPE_MESSAGE(q, this.get_userTimedEvent());
                        break;
                    case 2:
                        if (this.get_productUpdates() == null) {
                            this.set_productUpdates([])
                        }
                        this.get_productUpdates().push(fP.read__TYPE_MESSAGE(q, new pi()));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q, i)
                }
            }
        },
        __class__: cE,
        __properties__: {
            set_productUpdates: "set_productUpdates",
            get_productUpdates: "get_productUpdates",
            set_userTimedEvent: "set_userTimedEvent",
            get_userTimedEvent: "get_userTimedEvent"
        }
    });
    var nf = function() {
        cX.call(this);
        this.set_transactionId(this.defaultUInt64());
        this.set_receiptData("");
        this.set_purchaseToken("")
    };
    nt["agario.proto.Apple_inapp_purchase_request"] = nf;
    nf.__name__ = ["agario", "proto", "Apple_inapp_purchase_request"];
    nf.__super__ = cX;
    nf.prototype = lP(cX.prototype, {
        transactionId: null,
        setTransactionId: function(i) {
            this.set_transactionId(i);
            return this
        },
        set_transactionId: function(i) {
            return this.transactionId = i
        },
        get_transactionId: function() {
            return this.transactionId
        },
        receiptData: null,
        setReceiptData: function(i) {
            this.set_receiptData(i);
            return this
        },
        set_receiptData: function(i) {
            return this.receiptData = i
        },
        get_receiptData: function() {
            return this.receiptData
        },
        purchaseToken: null,
        setPurchaseToken: function(i) {
            this.set_purchaseToken(i);
            return this
        },
        set_purchaseToken: function(i) {
            return this.purchaseToken = i
        },
        get_purchaseToken: function() {
            return this.purchaseToken
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 0, 1);
            kD.write__TYPE_UINT64(i, this.get_transactionId());
            kD.writeTag(i, 2, 2);
            kD.write__TYPE_STRING(i, this.get_receiptData());
            kD.writeTag(i, 2, 3);
            kD.write__TYPE_STRING(i, this.get_purchaseToken());
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("transactionId", this.get_transactionId());
            i("receiptData", this.get_receiptData());
            i("purchaseToken", this.get_purchaseToken())
        },
        readFromSlice: function(q, qZ) {
            var i1 = 0;
            var i2 = 0;
            var js = 0;
            while (q.buf.totlen - q.buf.pos > qZ) {
                var i = fP.read__TYPE_UINT32(q);
                var qY = i >> 3;
                switch (qY) {
                    case 1:
                        if (i1 != 0) {
                            throw new nM(new lA("Bad data format: Apple_inapp_purchase_request.transactionId cannot be set twice."))
                        }++i1;
                        this.set_transactionId(fP.read__TYPE_UINT64(q));
                        break;
                    case 2:
                        if (i2 != 0) {
                            throw new nM(new lA("Bad data format: Apple_inapp_purchase_request.receiptData cannot be set twice."))
                        }++i2;
                        this.set_receiptData(fP.read__TYPE_STRING(q));
                        break;
                    case 3:
                        if (js != 0) {
                            throw new nM(new lA("Bad data format: Apple_inapp_purchase_request.purchaseToken cannot be set twice."))
                        }++js;
                        this.set_purchaseToken(fP.read__TYPE_STRING(q));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q, i)
                }
            }
        },
        __class__: nf,
        __properties__: {
            set_purchaseToken: "set_purchaseToken",
            get_purchaseToken: "get_purchaseToken",
            set_receiptData: "set_receiptData",
            get_receiptData: "get_receiptData",
            set_transactionId: "set_transactionId",
            get_transactionId: "get_transactionId"
        }
    });
    var dC = function() {
        this.hasField__0 = 0;
        cX.call(this);
        this.set_orderId(0);
        this.set_appeared([]);
        this.set_changed([]);
        this.set_disappeared([]);
        this.set_died([])
		console.log("ARENA")
    };
    nt["agario.proto.Arena_state"] = dC;
    dC.__name__ = ["agario", "proto", "Arena_state"];
    dC.__super__ = cX;
    dC.prototype = lP(cX.prototype, {
        orderId: null,
        setOrderId: function(i) {
            this.set_orderId(i);
            return this
        },
        set_orderId: function(i) {
            return this.orderId = i
        },
        get_orderId: function() {
            return this.orderId
        },
        appeared: null,
        setAppeared: function(i) {
            this.set_appeared(i);
            return this
        },
        set_appeared: function(i) {
            return this.appeared = i
        },
        get_appeared: function() {
            return this.appeared
        },
        addAppeared: function(i) {
            if (this.get_appeared() == null) {
                this.set_appeared([i])
            } else {
                this.get_appeared().push(i)
            }
        },
        changed: null,
        setChanged: function(i) {
            this.set_changed(i);
            return this
        },
        set_changed: function(i) {
            return this.changed = i
        },
        get_changed: function() {
            return this.changed
        },
        addChanged: function(i) {
            if (this.get_changed() == null) {
                this.set_changed([i])
            } else {
                this.get_changed().push(i)
            }
        },
        disappeared: null,
        setDisappeared: function(i) {
            this.set_disappeared(i);
            return this
        },
        set_disappeared: function(i) {
            return this.disappeared = i
        },
        get_disappeared: function() {
            return this.disappeared
        },
        addDisappeared: function(i) {
            if (this.get_disappeared() == null) {
                this.set_disappeared([i])
            } else {
                this.get_disappeared().push(i)
            }
        },
        died: null,
        setDied: function(i) {
            this.set_died(i);
            return this
        },
        set_died: function(i) {
            return this.died = i
        },
        get_died: function() {
            return this.died
        },
        addDied: function(i) {
            if (this.get_died() == null) {
                this.set_died([i])
            } else {
                this.get_died().push(i)
            }
        },
        isDead: null,
        setIsDead: function(i) {
            this.set_isDead(i);
            return this
        },
        hasField__0: null,
        clearIsDead: function() {
            this.hasField__0 = this.hasField__0 & -2;
            this.set_isDead(false)
        },
        hasIsDead: function() {
            return (this.hasField__0 & 1) != 0
        },
        set_isDead: function(i) {
            this.hasField__0 = this.hasField__0 | 1;
            return this.isDead = i
        },
        get_isDead: function() {
            return this.isDead
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 0, 1);
            kD.write__TYPE_UINT32(i, this.get_orderId());
            if (this.get_appeared() != null) {
                var js = 0;
                var q3 = this.get_appeared();
                while (js < q3.length) {
                    var q5 = q3[js];
                    ++js;
                    kD.writeTag(i, 2, 2);
                    kD.write__TYPE_MESSAGE(i, q5)
                }
            }
            if (this.get_changed() != null) {
                var q1 = 0;
                var i2 = this.get_changed();
                while (q1 < i2.length) {
                    var q4 = i2[q1];
                    ++q1;
                    kD.writeTag(i, 2, 3);
                    kD.write__TYPE_MESSAGE(i, q4)
                }
            }
            if (this.get_disappeared() != null) {
                var qZ = 0;
                var i1 = this.get_disappeared();
                while (qZ < i1.length) {
                    var q2 = i1[qZ];
                    ++qZ;
                    kD.writeTag(i, 0, 4);
                    kD.write__TYPE_UINT32(i, q2)
                }
            }
            if (this.get_died() != null) {
                var qY = 0;
                var q = this.get_died();
                while (qY < q.length) {
                    var q0 = q[qY];
                    ++qY;
                    kD.writeTag(i, 2, 5);
                    kD.write__TYPE_MESSAGE(i, q0)
                }
            }
            if ((this.hasField__0 & 1) != 0) {
                kD.writeTag(i, 0, 6);
                kD.write__TYPE_BOOL(i, this.get_isDead())
            }
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("orderId", this.get_orderId());
            if (this.get_appeared() != null && this.get_appeared().length > 0) {
                i("appeared", this.get_appeared())
            }
            if (this.get_changed() != null && this.get_changed().length > 0) {
                i("changed", this.get_changed())
            }
            if (this.get_disappeared() != null && this.get_disappeared().length > 0) {
                i("disappeared", this.get_disappeared())
            }
            if (this.get_died() != null && this.get_died().length > 0) {
                i("died", this.get_died())
            }
            if ((this.hasField__0 & 1) != 0) {
                i("isDead", this.get_isDead())
            }
        },
        readFromSlice: function(i1, qY) {
			
			console.log("mmm");
            var js = 0;
            var q = 0;
            while (i1.buf.totlen - i1.buf.pos > qY) {
                var i = fP.read__TYPE_UINT32(i1);
                var i2 = i >> 3;
                switch (i2) {
                    case 1:
                        if (js != 0) {
                            throw new nM(new lA("Bad data format: Arena_state.orderId cannot be set twice."))
                        }++js;
                        this.set_orderId(fP.read__TYPE_UINT32(i1));
                        break;
                    case 2:
                        if (this.get_appeared() == null) {
                            this.set_appeared([])
                        }
                        this.get_appeared().push(fP.read__TYPE_MESSAGE(i1, new pn()));
                        break;
                    case 3:
                        if (this.get_changed() == null) {
                            this.set_changed([])
                        }
                        this.get_changed().push(fP.read__TYPE_MESSAGE(i1, new pn()));
                        break;
                    case 4:
                        if (this.get_disappeared() == null) {
                            this.set_disappeared([])
                        }
                        if ((function(q1) {
                                var q0;
                                var qZ;
                                qZ = n0.__cast(i & 7, a);
                                q0 = qZ == 2;
                                return q0
                            }(this))) {
                            fP.readPackedRepeated(i1, fP.read__TYPE_UINT32, this.get_disappeared())
                        } else {
                            this.get_disappeared().push(fP.read__TYPE_UINT32(i1))
                        }
                        break;
                    case 5:
                        if (this.get_died() == null) {
                            this.set_died([])
                        }
                        this.get_died().push(fP.read__TYPE_MESSAGE(i1, new kT()));
                        break;
                    case 6:
                        if (q != 0) {
                            throw new nM(new lA("Bad data format: Arena_state.isDead cannot be set twice."))
                        }++q;
                        this.set_isDead(fP.read__TYPE_BOOL(i1));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, i1, i)
                }
            }
        },
        __class__: dC,
        __properties__: {
            set_isDead: "set_isDead",
            get_isDead: "get_isDead",
            set_died: "set_died",
            get_died: "get_died",
            set_disappeared: "set_disappeared",
            get_disappeared: "get_disappeared",
            set_changed: "set_changed",
            get_changed: "get_changed",
            set_appeared: "set_appeared",
            get_appeared: "get_appeared",
            set_orderId: "set_orderId",
            get_orderId: "get_orderId"
        }
    });
    var hc = function() {
        cX.call(this);
        this.set_slot(0)
    };
    nt["agario.proto.Brew_potion_for_slot_request"] = hc;
    hc.__name__ = ["agario", "proto", "Brew_potion_for_slot_request"];
    hc.__super__ = cX;
    hc.prototype = lP(cX.prototype, {
        slot: null,
        setSlot: function(i) {
            this.set_slot(i);
            return this
        },
        set_slot: function(i) {
            return this.slot = i
        },
        get_slot: function() {
            return this.slot
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 0, 1);
            kD.write__TYPE_ENUM(i, this.get_slot());
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("slot", this.get_slot())
        },
        readFromSlice: function(q, js) {
            var i1 = 0;
            while (q.buf.totlen - q.buf.pos > js) {
                var i = fP.read__TYPE_UINT32(q);
                var i2 = i >> 3;
                switch (i2) {
                    case 1:
                        if (i1 != 0) {
                            throw new nM(new lA("Bad data format: Brew_potion_for_slot_request.slot cannot be set twice."))
                        }++i1;
                        this.set_slot(fP.read__TYPE_ENUM(q));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q, i)
                }
            }
        },
        __class__: hc,
        __properties__: {
            set_slot: "set_slot",
            get_slot: "get_slot"
        }
    });
    var dL = function() {
        cX.call(this);
        this.set_result(0);
        this.set_userPotions([])
    };
    nt["agario.proto.Brew_potion_for_slot_response"] = dL;
    dL.__name__ = ["agario", "proto", "Brew_potion_for_slot_response"];
    dL.__super__ = cX;
    dL.prototype = lP(cX.prototype, {
        result: null,
        setResult: function(i) {
            this.set_result(i);
            return this
        },
        set_result: function(i) {
            return this.result = i
        },
        get_result: function() {
            return this.result
        },
        userPotions: null,
        setUserPotions: function(i) {
            this.set_userPotions(i);
            return this
        },
        set_userPotions: function(i) {
            return this.userPotions = i
        },
        get_userPotions: function() {
            return this.userPotions
        },
        addUserPotions: function(i) {
            if (this.get_userPotions() == null) {
                this.set_userPotions([i])
            } else {
                this.get_userPotions().push(i)
            }
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 0, 1);
            kD.write__TYPE_ENUM(i, this.get_result());
            if (this.get_userPotions() != null) {
                var i2 = 0;
                var i1 = this.get_userPotions();
                while (i2 < i1.length) {
                    var q = i1[i2];
                    ++i2;
                    kD.writeTag(i, 2, 2);
                    kD.write__TYPE_MESSAGE(i, q)
                }
            }
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("result", this.get_result());
            if (this.get_userPotions() != null && this.get_userPotions().length > 0) {
                i("userPotions", this.get_userPotions())
            }
        },
        readFromSlice: function(q, js) {
            var i2 = 0;
            while (q.buf.totlen - q.buf.pos > js) {
                var i = fP.read__TYPE_UINT32(q);
                var i1 = i >> 3;
                switch (i1) {
                    case 1:
                        if (i2 != 0) {
                            throw new nM(new lA("Bad data format: Brew_potion_for_slot_response.result cannot be set twice."))
                        }++i2;
                        this.set_result(fP.read__TYPE_ENUM(q));
                        break;
                    case 2:
                        if (this.get_userPotions() == null) {
                            this.set_userPotions([])
                        }
                        this.get_userPotions().push(fP.read__TYPE_MESSAGE(q, new dv()));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q, i)
                }
            }
        },
        __class__: dL,
        __properties__: {
            set_userPotions: "set_userPotions",
            get_userPotions: "get_userPotions",
            set_result: "set_result",
            get_result: "get_result"
        }
    });
    var kT = function() {
        cX.call(this);
        this.set_id(0);
        this.set_killerId(0)
    };
    nt["agario.proto.Cell_death"] = kT;
    kT.__name__ = ["agario", "proto", "Cell_death"];
    kT.__super__ = cX;
    kT.prototype = lP(cX.prototype, {
        id: null,
        setId: function(i) {
            this.set_id(i);
            return this
        },
        set_id: function(i) {
            return this.id = i
        },
        get_id: function() {
            return this.id
        },
        killerId: null,
        setKillerId: function(i) {
            this.set_killerId(i);
            return this
        },
        set_killerId: function(i) {
            return this.killerId = i
        },
        get_killerId: function() {
            return this.killerId
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 0, 1);
            kD.write__TYPE_UINT32(i, this.get_id());
            kD.writeTag(i, 0, 2);
            kD.write__TYPE_UINT32(i, this.get_killerId());
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("id", this.get_id());
            i("killerId", this.get_killerId())
        },
        readFromSlice: function(q, qY) {
            var i1 = 0;
            var i2 = 0;
            while (q.buf.totlen - q.buf.pos > qY) {
                var i = fP.read__TYPE_UINT32(q);
                var js = i >> 3;
                switch (js) {
                    case 1:
                        if (i1 != 0) {
                            throw new nM(new lA("Bad data format: Cell_death.id cannot be set twice."))
                        }++i1;
                        this.set_id(fP.read__TYPE_UINT32(q));
                        break;
                    case 2:
                        if (i2 != 0) {
                            throw new nM(new lA("Bad data format: Cell_death.killerId cannot be set twice."))
                        }++i2;
                        this.set_killerId(fP.read__TYPE_UINT32(q));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q, i)
                }
            }
        },
        __class__: kT,
        __properties__: {
            set_killerId: "set_killerId",
            get_killerId: "get_killerId",
            set_id: "set_id",
            get_id: "get_id"
        }
    });
    var pn = function() {
        this.hasField__0 = 0;
        cX.call(this);
        this.set_type(0);
        this.set_id(0);
        this.set_x(0);
        this.set_y(0);
        this.set_radius(0)
    };
    nt["agario.proto.Cell_state"] = pn;
    pn.__name__ = ["agario", "proto", "Cell_state"];
    pn.__super__ = cX;
    pn.prototype = lP(cX.prototype, {
        type: null,
        setType: function(i) {
            this.set_type(i);
            return this
        },
        set_type: function(i) {
            return this.type = i
        },
        get_type: function() {
            return this.type
        },
        id: null,
        setId: function(i) {
            this.set_id(i);
            return this
        },
        set_id: function(i) {
            return this.id = i
        },
        get_id: function() {
            return this.id
        },
        x: null,
        setX: function(i) {
            this.set_x(i);
            return this
        },
        set_x: function(i) {
            return this.x = i
        },
        get_x: function() {
            return this.x
        },
        y: null,
        setY: function(i) {
            this.set_y(i);
            return this
        },
        set_y: function(i) {
            return this.y = i
        },
        get_y: function() {
            return this.y
        },
        radius: null,
        setRadius: function(i) {
            this.set_radius(i);
            return this
        },
        set_radius: function(i) {
            return this.radius = i
        },
        get_radius: function() {
            return this.radius
        },
        name: null,
        setName: function(i) {
            this.set_name(i);
            return this
        },
        clearName: function() {
            this.set_name(null)
        },
        hasName: function() {
            return this.get_name() != null
        },
        set_name: function(i) {
            return this.name = i
        },
        get_name: function() {
            return this.name
        },
        userLevel: null,
        setUserLevel: function(i) {
            this.set_userLevel(i);
            return this
        },
        hasField__0: null,
        clearUserLevel: function() {
            this.hasField__0 = this.hasField__0 & -2;
            this.set_userLevel(0)
        },
        hasUserLevel: function() {
            return (this.hasField__0 & 1) != 0
        },
        set_userLevel: function(i) {
            this.hasField__0 = this.hasField__0 | 1;
            return this.userLevel = i
        },
        get_userLevel: function() {
            return this.userLevel
        },
        skinGameplayId: null,
        setSkinGameplayId: function(i) {
            this.set_skinGameplayId(i);
            return this
        },
        clearSkinGameplayId: function() {
            this.hasField__0 = this.hasField__0 & -3;
            this.set_skinGameplayId(0)
        },
        hasSkinGameplayId: function() {
            return (this.hasField__0 & 2) != 0
        },
        set_skinGameplayId: function(i) {
            this.hasField__0 = this.hasField__0 | 2;
            return this.skinGameplayId = i
        },
        get_skinGameplayId: function() {
            return this.skinGameplayId
        },
        color: null,
        setColor: function(i) {
            this.set_color(i);
            return this
        },
        clearColor: function() {
            this.hasField__0 = this.hasField__0 & -5;
            this.set_color(0)
        },
        hasColor: function() {
            return (this.hasField__0 & 4) != 0
        },
        set_color: function(i) {
            this.hasField__0 = this.hasField__0 | 4;
            return this.color = i
        },
        get_color: function() {
            return this.color
        },
        playerOwned: null,
        setPlayerOwned: function(i) {
            this.set_playerOwned(i);
            return this
        },
        clearPlayerOwned: function() {
            this.hasField__0 = this.hasField__0 & -9;
            this.set_playerOwned(false)
        },
        hasPlayerOwned: function() {
            return (this.hasField__0 & 8) != 0
        },
        set_playerOwned: function(i) {
            this.hasField__0 = this.hasField__0 | 8;
            return this.playerOwned = i
        },
        get_playerOwned: function() {
            return this.playerOwned
        },
        ownerId: null,
        setOwnerId: function(i) {
            this.set_ownerId(i);
            return this
        },
        clearOwnerId: function() {
            this.hasField__0 = this.hasField__0 & -17;
            this.set_ownerId(0)
        },
        hasOwnerId: function() {
            return (this.hasField__0 & 16) != 0
        },
        set_ownerId: function(i) {
            this.hasField__0 = this.hasField__0 | 16;
            return this.ownerId = i
        },
        get_ownerId: function() {
            return this.ownerId
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 0, 1);
            kD.write__TYPE_ENUM(i, this.get_type());
            kD.writeTag(i, 0, 2);
            kD.write__TYPE_UINT32(i, this.get_id());
            kD.writeTag(i, 5, 3);
            kD.write__TYPE_FLOAT(i, this.get_x());
            kD.writeTag(i, 5, 4);
            kD.write__TYPE_FLOAT(i, this.get_y());
            kD.writeTag(i, 5, 5);
            kD.write__TYPE_FLOAT(i, this.get_radius());
            if (this.get_name() != null) {
                kD.writeTag(i, 2, 6);
                kD.write__TYPE_STRING(i, this.get_name())
            }
            if ((this.hasField__0 & 1) != 0) {
                kD.writeTag(i, 0, 7);
                kD.write__TYPE_UINT32(i, this.get_userLevel())
            }
            if ((this.hasField__0 & 2) != 0) {
                kD.writeTag(i, 0, 8);
                kD.write__TYPE_UINT32(i, this.get_skinGameplayId())
            }
            if ((this.hasField__0 & 4) != 0) {
                kD.writeTag(i, 0, 9);
                kD.write__TYPE_UINT32(i, this.get_color())
            }
            if ((this.hasField__0 & 8) != 0) {
                kD.writeTag(i, 0, 10);
                kD.write__TYPE_BOOL(i, this.get_playerOwned())
            }
            if ((this.hasField__0 & 16) != 0) {
                kD.writeTag(i, 0, 11);
                kD.write__TYPE_UINT32(i, this.get_ownerId())
            }
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("type", this.get_type());
            i("id", this.get_id());
            i("x", this.get_x());
            i("y", this.get_y());
            i("radius", this.get_radius());
            if (this.get_name() != null) {
                i("name", this.get_name())
            }
            if ((this.hasField__0 & 1) != 0) {
                i("userLevel", this.get_userLevel())
            }
            if ((this.hasField__0 & 2) != 0) {
                i("skinGameplayId", this.get_skinGameplayId())
            }
            if ((this.hasField__0 & 4) != 0) {
                i("color", this.get_color())
            }
            if ((this.hasField__0 & 8) != 0) {
                i("playerOwned", this.get_playerOwned())
            }
            if ((this.hasField__0 & 16) != 0) {
                i("ownerId", this.get_ownerId())
            }
        },
        readFromSlice: function(q4, q) {
            var q7 = 0;
            var q3 = 0;
            var q1 = 0;
            var js = 0;
            var q0 = 0;
            var i1 = 0;
            var i2 = 0;
            var q5 = 0;
            var q2 = 0;
            var i = 0;
            var qZ = 0;
            while (q4.buf.totlen - q4.buf.pos > q) {
                var q6 = fP.read__TYPE_UINT32(q4);
                var qY = q6 >> 3;
                switch (qY) {
                    case 1:
                        if (q7 != 0) {
                            throw new nM(new lA("Bad data format: Cell_state.type cannot be set twice."))
                        }++q7;
                        this.set_type(fP.read__TYPE_ENUM(q4));
                        break;
                    case 2:
                        if (q3 != 0) {
                            throw new nM(new lA("Bad data format: Cell_state.id cannot be set twice."))
                        }++q3;
                        this.set_id(fP.read__TYPE_UINT32(q4));
                        break;
                    case 3:
                        if (q1 != 0) {
                            throw new nM(new lA("Bad data format: Cell_state.x cannot be set twice."))
                        }++q1;
                        this.set_x(fP.read__TYPE_FLOAT(q4));
                        break;
                    case 4:
                        if (js != 0) {
                            throw new nM(new lA("Bad data format: Cell_state.y cannot be set twice."))
                        }++js;
                        this.set_y(fP.read__TYPE_FLOAT(q4));
                        break;
                    case 5:
                        if (q0 != 0) {
                            throw new nM(new lA("Bad data format: Cell_state.radius cannot be set twice."))
                        }++q0;
                        this.set_radius(fP.read__TYPE_FLOAT(q4));
                        break;
                    case 6:
                        if (i1 != 0) {
                            throw new nM(new lA("Bad data format: Cell_state.name cannot be set twice."))
                        }++i1;
                        this.set_name(fP.read__TYPE_STRING(q4));
                        break;
                    case 7:
                        if (i2 != 0) {
                            throw new nM(new lA("Bad data format: Cell_state.userLevel cannot be set twice."))
                        }++i2;
                        this.set_userLevel(fP.read__TYPE_UINT32(q4));
                        break;
                    case 8:
                        if (q5 != 0) {
                            throw new nM(new lA("Bad data format: Cell_state.skinGameplayId cannot be set twice."))
                        }++q5;
                        this.set_skinGameplayId(fP.read__TYPE_UINT32(q4));
                        break;
                    case 9:
                        if (q2 != 0) {
                            throw new nM(new lA("Bad data format: Cell_state.color cannot be set twice."))
                        }++q2;
                        this.set_color(fP.read__TYPE_UINT32(q4));
                        break;
                    case 10:
                        if (i != 0) {
                            throw new nM(new lA("Bad data format: Cell_state.playerOwned cannot be set twice."))
                        }++i;
                        this.set_playerOwned(fP.read__TYPE_BOOL(q4));
                        break;
                    case 11:
                        if (qZ != 0) {
                            throw new nM(new lA("Bad data format: Cell_state.ownerId cannot be set twice."))
                        }++qZ;
                        this.set_ownerId(fP.read__TYPE_UINT32(q4));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q4, q6)
                }
            }
        },
        __class__: pn,
        __properties__: {
            set_ownerId: "set_ownerId",
            get_ownerId: "get_ownerId",
            set_playerOwned: "set_playerOwned",
            get_playerOwned: "get_playerOwned",
            set_color: "set_color",
            get_color: "get_color",
            set_skinGameplayId: "set_skinGameplayId",
            get_skinGameplayId: "get_skinGameplayId",
            set_userLevel: "set_userLevel",
            get_userLevel: "get_userLevel",
            set_name: "set_name",
            get_name: "get_name",
            set_radius: "set_radius",
            get_radius: "get_radius",
            set_y: "set_y",
            get_y: "get_y",
            set_x: "set_x",
            get_x: "get_x",
            set_id: "set_id",
            get_id: "get_id",
            set_type: "set_type",
            get_type: "get_type"
        }
    });
    var aI = function() {
        cX.call(this);
        this.set_giftIds([])
    };
    nt["agario.proto.Claim_gifts_request"] = aI;
    aI.__name__ = ["agario", "proto", "Claim_gifts_request"];
    aI.__super__ = cX;
    aI.prototype = lP(cX.prototype, {
        giftIds: null,
        setGiftIds: function(i) {
            this.set_giftIds(i);
            return this
        },
        set_giftIds: function(i) {
            return this.giftIds = i
        },
        get_giftIds: function() {
            return this.giftIds
        },
        addGiftIds: function(i) {
            if (this.get_giftIds() == null) {
                this.set_giftIds([i])
            } else {
                this.get_giftIds().push(i)
            }
        },
        writeToBuffer: function(i) {
            if (this.get_giftIds() != null) {
                var i2 = 0;
                var i1 = this.get_giftIds();
                while (i2 < i1.length) {
                    var q = i1[i2];
                    ++i2;
                    kD.writeTag(i, 2, 1);
                    kD.write__TYPE_STRING(i, q)
                }
            }
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            if (this.get_giftIds() != null && this.get_giftIds().length > 0) {
                i("giftIds", this.get_giftIds())
            }
        },
        readFromSlice: function(q, i2) {
            while (q.buf.totlen - q.buf.pos > i2) {
                var i = fP.read__TYPE_UINT32(q);
                var i1 = i >> 3;
                switch (i1) {
                    case 1:
                        if (this.get_giftIds() == null) {
                            this.set_giftIds([])
                        }
                        this.get_giftIds().push(fP.read__TYPE_STRING(q));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q, i)
                }
            }
        },
        __class__: aI,
        __properties__: {
            set_giftIds: "set_giftIds",
            get_giftIds: "get_giftIds"
        }
    });
    var mP = function() {
        cX.call(this);
        this.set_userDataUpdate(new pi())
    };
    nt["agario.proto.Claim_gifts_response"] = mP;
    mP.__name__ = ["agario", "proto", "Claim_gifts_response"];
    mP.__super__ = cX;
    mP.prototype = lP(cX.prototype, {
        userDataUpdate: null,
        setUserDataUpdate: function(i) {
            this.set_userDataUpdate(i);
            return this
        },
        set_userDataUpdate: function(i) {
            return this.userDataUpdate = i
        },
        get_userDataUpdate: function() {
            return this.userDataUpdate
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 2, 1);
            kD.write__TYPE_MESSAGE(i, this.get_userDataUpdate());
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("userDataUpdate", this.get_userDataUpdate())
        },
        readFromSlice: function(q, js) {
            var i1 = 0;
            while (q.buf.totlen - q.buf.pos > js) {
                var i = fP.read__TYPE_UINT32(q);
                var i2 = i >> 3;
                switch (i2) {
                    case 1:
                        if (i1 != 0) {
                            throw new nM(new lA("Bad data format: Claim_gifts_response.userDataUpdate cannot be set twice."))
                        }++i1;
                        this.set_userDataUpdate(new pi());
                        fP.read__TYPE_MESSAGE(q, this.get_userDataUpdate());
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q, i)
                }
            }
        },
        __class__: mP,
        __properties__: {
            set_userDataUpdate: "set_userDataUpdate",
            get_userDataUpdate: "get_userDataUpdate"
        }
    });
    var bN = function() {
        cX.call(this);
        this.set_latest(0)
    };
    nt["agario.proto.Configuration_change"] = bN;
    bN.__name__ = ["agario", "proto", "Configuration_change"];
    bN.__super__ = cX;
    bN.prototype = lP(cX.prototype, {
        latest: null,
        setLatest: function(i) {
            this.set_latest(i);
            return this
        },
        set_latest: function(i) {
            return this.latest = i
        },
        get_latest: function() {
            return this.latest
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 0, 1);
            kD.write__TYPE_UINT32(i, this.get_latest());
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("latest", this.get_latest())
        },
        readFromSlice: function(q, js) {
            var i1 = 0;
            while (q.buf.totlen - q.buf.pos > js) {
                var i = fP.read__TYPE_UINT32(q);
                var i2 = i >> 3;
                switch (i2) {
                    case 1:
                        if (i1 != 0) {
                            throw new nM(new lA("Bad data format: Configuration_change.latest cannot be set twice."))
                        }++i1;
                        this.set_latest(fP.read__TYPE_UINT32(q));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q, i)
                }
            }
        },
        __class__: bN,
        __properties__: {
            set_latest: "set_latest",
            get_latest: "get_latest"
        }
    });
    var dG = function() {
        cX.call(this);
        this.set_connectToken("")
    };
    nt["agario.proto.Connect_request"] = dG;
    dG.__name__ = ["agario", "proto", "Connect_request"];
    dG.__super__ = cX;
    dG.prototype = lP(cX.prototype, {
        connectToken: null,
        setConnectToken: function(i) {
            this.set_connectToken(i);
            return this
        },
        set_connectToken: function(i) {
            return this.connectToken = i
        },
        get_connectToken: function() {
            return this.connectToken
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 2, 1);
            kD.write__TYPE_STRING(i, this.get_connectToken());
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("connectToken", this.get_connectToken())
        },
        readFromSlice: function(q, js) {
            var i1 = 0;
            while (q.buf.totlen - q.buf.pos > js) {
                var i = fP.read__TYPE_UINT32(q);
                var i2 = i >> 3;
                switch (i2) {
                    case 1:
                        if (i1 != 0) {
                            throw new nM(new lA("Bad data format: Connect_request.connectToken cannot be set twice."))
                        }++i1;
                        this.set_connectToken(fP.read__TYPE_STRING(q));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q, i)
                }
            }
        },
        __class__: dG,
        __properties__: {
            set_connectToken: "set_connectToken",
            get_connectToken: "get_connectToken"
        }
    });
    var mS = function() {
        cX.call(this);
        this.set_serverInfo(new qB())
    };
    nt["agario.proto.Connect_response"] = mS;
    mS.__name__ = ["agario", "proto", "Connect_response"];
    mS.__super__ = cX;
    mS.prototype = lP(cX.prototype, {
        serverInfo: null,
        setServerInfo: function(i) {
            this.set_serverInfo(i);
            return this
        },
        set_serverInfo: function(i) {
            return this.serverInfo = i
        },
        get_serverInfo: function() {
            return this.serverInfo
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 2, 1);
            kD.write__TYPE_MESSAGE(i, this.get_serverInfo());
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("serverInfo", this.get_serverInfo())
        },
        readFromSlice: function(q, js) {
            var i1 = 0;
            while (q.buf.totlen - q.buf.pos > js) {
                var i = fP.read__TYPE_UINT32(q);
                var i2 = i >> 3;
                switch (i2) {
                    case 1:
                        if (i1 != 0) {
                            throw new nM(new lA("Bad data format: Connect_response.serverInfo cannot be set twice."))
                        }++i1;
                        this.set_serverInfo(new qB());
                        fP.read__TYPE_MESSAGE(q, this.get_serverInfo());
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q, i)
                }
            }
        },
        __class__: mS,
        __properties__: {
            set_serverInfo: "set_serverInfo",
            get_serverInfo: "get_serverInfo"
        }
    });
    var pl = function() {
        cX.call(this);
        this.set_requestIds([])
    };
    nt["agario.proto.Consume_requests"] = pl;
    pl.__name__ = ["agario", "proto", "Consume_requests"];
    pl.__super__ = cX;
    pl.prototype = lP(cX.prototype, {
        requestIds: null,
        setRequestIds: function(i) {
            this.set_requestIds(i);
            return this
        },
        set_requestIds: function(i) {
            return this.requestIds = i
        },
        get_requestIds: function() {
            return this.requestIds
        },
        addRequestIds: function(i) {
            if (this.get_requestIds() == null) {
                this.set_requestIds([i])
            } else {
                this.get_requestIds().push(i)
            }
        },
        writeToBuffer: function(i) {
            if (this.get_requestIds() != null) {
                var i2 = 0;
                var i1 = this.get_requestIds();
                while (i2 < i1.length) {
                    var q = i1[i2];
                    ++i2;
                    kD.writeTag(i, 2, 1);
                    kD.write__TYPE_STRING(i, q)
                }
            }
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            if (this.get_requestIds() != null && this.get_requestIds().length > 0) {
                i("requestIds", this.get_requestIds())
            }
        },
        readFromSlice: function(q, i2) {
            while (q.buf.totlen - q.buf.pos > i2) {
                var i = fP.read__TYPE_UINT32(q);
                var i1 = i >> 3;
                switch (i1) {
                    case 1:
                        if (this.get_requestIds() == null) {
                            this.set_requestIds([])
                        }
                        this.get_requestIds().push(fP.read__TYPE_STRING(q));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q, i)
                }
            }
        },
        __class__: pl,
        __properties__: {
            set_requestIds: "set_requestIds",
            get_requestIds: "get_requestIds"
        }
    });
    var fo = function() {
        cX.call(this);
        this.set_platform(0);
        this.set_version("");
        this.set_width(0);
        this.set_height(0)
    };
    nt["agario.proto.Device"] = fo;
    fo.__name__ = ["agario", "proto", "Device"];
    fo.__super__ = cX;
    fo.prototype = lP(cX.prototype, {
        platform: null,
        setPlatform: function(i) {
            this.set_platform(i);
            return this
        },
        set_platform: function(i) {
            return this.platform = i
        },
        get_platform: function() {
            return this.platform
        },
        version: null,
        setVersion: function(i) {
            this.set_version(i);
            return this
        },
        set_version: function(i) {
            return this.version = i
        },
        get_version: function() {
            return this.version
        },
        width: null,
        setWidth: function(i) {
            this.set_width(i);
            return this
        },
        set_width: function(i) {
            return this.width = i
        },
        get_width: function() {
            return this.width
        },
        height: null,
        setHeight: function(i) {
            this.set_height(i);
            return this
        },
        set_height: function(i) {
            return this.height = i
        },
        get_height: function() {
            return this.height
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 0, 1);
            kD.write__TYPE_ENUM(i, this.get_platform());
            kD.writeTag(i, 2, 2);
            kD.write__TYPE_STRING(i, this.get_version());
            kD.writeTag(i, 0, 3);
            kD.write__TYPE_UINT32(i, this.get_width());
            kD.writeTag(i, 0, 4);
            kD.write__TYPE_UINT32(i, this.get_height());
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("platform", this.get_platform());
            i("version", this.get_version());
            i("width", this.get_width());
            i("height", this.get_height())
        },
        readFromSlice: function(q, q0) {
            var i1 = 0;
            var js = 0;
            var i2 = 0;
            var qZ = 0;
            while (q.buf.totlen - q.buf.pos > q0) {
                var i = fP.read__TYPE_UINT32(q);
                var qY = i >> 3;
                switch (qY) {
                    case 1:
                        if (i1 != 0) {
                            throw new nM(new lA("Bad data format: Device.platform cannot be set twice."))
                        }++i1;
                        this.set_platform(fP.read__TYPE_ENUM(q));
                        break;
                    case 2:
                        if (js != 0) {
                            throw new nM(new lA("Bad data format: Device.version cannot be set twice."))
                        }++js;
                        this.set_version(fP.read__TYPE_STRING(q));
                        break;
                    case 3:
                        if (i2 != 0) {
                            throw new nM(new lA("Bad data format: Device.width cannot be set twice."))
                        }++i2;
                        this.set_width(fP.read__TYPE_UINT32(q));
                        break;
                    case 4:
                        if (qZ != 0) {
                            throw new nM(new lA("Bad data format: Device.height cannot be set twice."))
                        }++qZ;
                        this.set_height(fP.read__TYPE_UINT32(q));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q, i)
                }
            }
        },
        __class__: fo,
        __properties__: {
            set_height: "set_height",
            get_height: "get_height",
            set_width: "set_width",
            get_width: "get_width",
            set_version: "set_version",
            get_version: "get_version",
            set_platform: "set_platform",
            get_platform: "get_platform"
        }
    });
    var cL = function() {
        cX.call(this);
        this.set_x(0);
        this.set_y(0)
    };
    nt["agario.proto.Direction_vector"] = cL;
    cL.__name__ = ["agario", "proto", "Direction_vector"];
    cL.__super__ = cX;
    cL.prototype = lP(cX.prototype, {
        x: null,
        setX: function(i) {
            this.set_x(i);
            return this
        },
        set_x: function(i) {
            return this.x = i
        },
        get_x: function() {
            return this.x
        },
        y: null,
        setY: function(i) {
            this.set_y(i);
            return this
        },
        set_y: function(i) {
            return this.y = i
        },
        get_y: function() {
            return this.y
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 5, 1);
            kD.write__TYPE_FLOAT(i, this.get_x());
            kD.writeTag(i, 5, 2);
            kD.write__TYPE_FLOAT(i, this.get_y());
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("x", this.get_x());
            i("y", this.get_y())
        },
        readFromSlice: function(q, qY) {
            var i2 = 0;
            var i1 = 0;
            while (q.buf.totlen - q.buf.pos > qY) {
                var i = fP.read__TYPE_UINT32(q);
                var js = i >> 3;
                switch (js) {
                    case 1:
                        if (i2 != 0) {
                            throw new nM(new lA("Bad data format: Direction_vector.x cannot be set twice."))
                        }++i2;
                        this.set_x(fP.read__TYPE_FLOAT(q));
                        break;
                    case 2:
                        if (i1 != 0) {
                            throw new nM(new lA("Bad data format: Direction_vector.y cannot be set twice."))
                        }++i1;
                        this.set_y(fP.read__TYPE_FLOAT(q));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q, i)
                }
            }
        },
        __class__: cL,
        __properties__: {
            set_y: "set_y",
            get_y: "get_y",
            set_x: "set_x",
            get_x: "get_x"
        }
    });
    var h4 = function() {
        cX.call(this);
        this.set_reason(0)
    };
    nt["agario.proto.Disconnect"] = h4;
    h4.__name__ = ["agario", "proto", "Disconnect"];
    h4.__super__ = cX;
    h4.prototype = lP(cX.prototype, {
        reason: null,
        setReason: function(i) {
            this.set_reason(i);
            return this
        },
        set_reason: function(i) {
            return this.reason = i
        },
        get_reason: function() {
            return this.reason
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 0, 1);
            kD.write__TYPE_ENUM(i, this.get_reason());
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("reason", this.get_reason())
        },
        readFromSlice: function(q, js) {
            var i1 = 0;
            while (q.buf.totlen - q.buf.pos > js) {
                var i = fP.read__TYPE_UINT32(q);
                var i2 = i >> 3;
                switch (i2) {
                    case 1:
                        if (i1 != 0) {
                            throw new nM(new lA("Bad data format: Disconnect.reason cannot be set twice."))
                        }++i1;
                        this.set_reason(fP.read__TYPE_ENUM(q));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q, i)
                }
            }
        },
        __class__: h4,
        __properties__: {
            set_reason: "set_reason",
            get_reason: "get_reason"
        }
    });
    var e0 = function() {
        cX.call(this);
        this.set_nickname("")
    };
    nt["agario.proto.Enter_game"] = e0;
    e0.__name__ = ["agario", "proto", "Enter_game"];
    e0.__super__ = cX;
    e0.prototype = lP(cX.prototype, {
        nickname: null,
        setNickname: function(i) {
            this.set_nickname(i);
            return this
        },
        set_nickname: function(i) {
            return this.nickname = i
        },
        get_nickname: function() {
            return this.nickname
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 2, 1);
            kD.write__TYPE_STRING(i, this.get_nickname());
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("nickname", this.get_nickname())
        },
        readFromSlice: function(q, js) {
            var i2 = 0;
            while (q.buf.totlen - q.buf.pos > js) {
                var i = fP.read__TYPE_UINT32(q);
                var i1 = i >> 3;
                switch (i1) {
                    case 1:
                        if (i2 != 0) {
                            throw new nM(new lA("Bad data format: Enter_game.nickname cannot be set twice."))
                        }++i2;
                        this.set_nickname(fP.read__TYPE_STRING(q));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q, i)
                }
            }
        },
        __class__: e0,
        __properties__: {
            set_nickname: "set_nickname",
            get_nickname: "get_nickname"
        }
    });
    var mt = function() {
        cX.call(this);
        this.set_lobbyType(0);
        this.set_nickname("")
    };
    nt["agario.proto.Enter_lobby"] = mt;
    mt.__name__ = ["agario", "proto", "Enter_lobby"];
    mt.__super__ = cX;
    mt.prototype = lP(cX.prototype, {
        lobbyType: null,
        setLobbyType: function(i) {
            this.set_lobbyType(i);
            return this
        },
        set_lobbyType: function(i) {
            return this.lobbyType = i
        },
        get_lobbyType: function() {
            return this.lobbyType
        },
        nickname: null,
        setNickname: function(i) {
            this.set_nickname(i);
            return this
        },
        set_nickname: function(i) {
            return this.nickname = i
        },
        get_nickname: function() {
            return this.nickname
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 0, 1);
            kD.write__TYPE_ENUM(i, this.get_lobbyType());
            kD.writeTag(i, 2, 2);
            kD.write__TYPE_STRING(i, this.get_nickname());
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("lobbyType", this.get_lobbyType());
            i("nickname", this.get_nickname())
        },
        readFromSlice: function(q, qY) {
            var i1 = 0;
            var js = 0;
            while (q.buf.totlen - q.buf.pos > qY) {
                var i = fP.read__TYPE_UINT32(q);
                var i2 = i >> 3;
                switch (i2) {
                    case 1:
                        if (i1 != 0) {
                            throw new nM(new lA("Bad data format: Enter_lobby.lobbyType cannot be set twice."))
                        }++i1;
                        this.set_lobbyType(fP.read__TYPE_ENUM(q));
                        break;
                    case 2:
                        if (js != 0) {
                            throw new nM(new lA("Bad data format: Enter_lobby.nickname cannot be set twice."))
                        }++js;
                        this.set_nickname(fP.read__TYPE_STRING(q));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q, i)
                }
            }
        },
        __class__: mt,
        __properties__: {
            set_nickname: "set_nickname",
            get_nickname: "get_nickname",
            set_lobbyType: "set_lobbyType",
            get_lobbyType: "get_lobbyType"
        }
    });
    var aa = function() {
        this.hasField__0 = 0;
        cX.call(this);
        this.set_contentType(0)
    };
    nt["agario.proto.Envelope"] = aa;
    aa.__name__ = ["agario", "proto", "Envelope"];
    aa.__super__ = cX;
    aa.prototype = lP(cX.prototype, {
        contentType: null,
        setContentType: function(i) {
            this.set_contentType(i);
            return this
        },
        set_contentType: function(i) {
            return this.contentType = i
        },
        get_contentType: function() {
            return this.contentType
        },
        uncompressedData: null,
        setUncompressedData: function(i) {
            this.set_uncompressedData(i);
            return this
        },
        clearUncompressedData: function() {
            this.set_uncompressedData(null)
        },
        hasUncompressedData: function() {
            return this.get_uncompressedData() != null
        },
        set_uncompressedData: function(i) {
            return this.uncompressedData = i
        },
        get_uncompressedData: function() {
            return this.uncompressedData
        },
        compressedData: null,
        setCompressedData: function(i) {
            this.set_compressedData(i);
            return this
        },
        clearCompressedData: function() {
            this.set_compressedData(null)
        },
        hasCompressedData: function() {
            return this.get_compressedData() != null
        },
        set_compressedData: function(i) {
            return this.compressedData = i
        },
        get_compressedData: function() {
            return this.compressedData
        },
        uncompressedSize: null,
        setUncompressedSize: function(i) {
            this.set_uncompressedSize(i);
            return this
        },
        hasField__0: null,
        clearUncompressedSize: function() {
            this.hasField__0 = this.hasField__0 & -2;
            this.set_uncompressedSize(0)
        },
        hasUncompressedSize: function() {
            return (this.hasField__0 & 1) != 0
        },
        set_uncompressedSize: function(i) {
            this.hasField__0 = this.hasField__0 | 1;
            return this.uncompressedSize = i
        },
        get_uncompressedSize: function() {
            return this.uncompressedSize
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 0, 1);
            kD.write__TYPE_ENUM(i, this.get_contentType());
            if (this.get_uncompressedData() != null) {
                kD.writeTag(i, 2, 2);
                kD.write__TYPE_MESSAGE(i, this.get_uncompressedData())
            }
            if (this.get_compressedData() != null) {
                kD.writeTag(i, 2, 3);
                kD.write__TYPE_BYTES(i, this.get_compressedData())
            }
            if ((this.hasField__0 & 1) != 0) {
                kD.writeTag(i, 0, 4);
                kD.write__TYPE_UINT32(i, this.get_uncompressedSize())
            }
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("contentType", this.get_contentType());
            if (this.get_uncompressedData() != null) {
                i("uncompressedData", this.get_uncompressedData())
            }
            if (this.get_compressedData() != null) {
                i("compressedData", this.get_compressedData())
            }
            if ((this.hasField__0 & 1) != 0) {
                i("uncompressedSize", this.get_uncompressedSize())
            }
        },
        readFromSlice: function(i2, q0) {
            var qY = 0;
            var q = 0;
            var i1 = 0;
            var js = 0;
            while (i2.buf.totlen - i2.buf.pos > q0) {
                var i = fP.read__TYPE_UINT32(i2);
				console.log(i);
                var qZ = i >> 3;
                switch (qZ) {
                    case 1:
                        if (qY != 0) {
                            throw new nM(new lA("Bad data format: Envelope.contentType cannot be set twice."))
                        }++qY;
                        this.set_contentType(fP.read__TYPE_ENUM(i2));
                        break;
                    case 2:
                        if (q != 0) {
                            throw new nM(new lA("Bad data format: Envelope.uncompressedData cannot be set twice."))
                        }++q;
                        this.set_uncompressedData(new jV());
                        fP.read__TYPE_MESSAGE(i2, this.get_uncompressedData());
                        break;
                    case 3:
                        if (i1 != 0) {
                            throw new nM(new lA("Bad data format: Envelope.compressedData cannot be set twice."))
                        }++i1;
                        this.set_compressedData(fP.read__TYPE_BYTES(i2));
                        break;
                    case 4:
                        if (js != 0) {
                            throw new nM(new lA("Bad data format: Envelope.uncompressedSize cannot be set twice."))
                        }++js;
                        this.set_uncompressedSize(fP.read__TYPE_UINT32(i2));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, i2, i)
                }
            }
        },
        __class__: aa,
        __properties__: {
            set_uncompressedSize: "set_uncompressedSize",
            get_uncompressedSize: "get_uncompressedSize",
            set_compressedData: "set_compressedData",
            get_compressedData: "get_compressedData",
            set_uncompressedData: "set_uncompressedData",
            get_uncompressedData: "get_uncompressedData",
            set_contentType: "set_contentType",
            get_contentType: "get_contentType"
        }
    });
    var Q = function() {
        cX.call(this);
        this.set_gameType(0);
        this.set_arenaState(new dC())
    };
    nt["agario.proto.Game_joined"] = Q;
    Q.__name__ = ["agario", "proto", "Game_joined"];
    Q.__super__ = cX;
    Q.prototype = lP(cX.prototype, {
        gameType: null,
        setGameType: function(i) {
            this.set_gameType(i);
            return this
        },
        set_gameType: function(i) {
            return this.gameType = i
        },
        get_gameType: function() {
            return this.gameType
        },
        arenaState: null,
        setArenaState: function(i) {
            this.set_arenaState(i);
            return this
        },
        set_arenaState: function(i) {
            return this.arenaState = i
        },
        get_arenaState: function() {
            return this.arenaState
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 0, 1);
            kD.write__TYPE_ENUM(i, this.get_gameType());
            kD.writeTag(i, 2, 2);
            kD.write__TYPE_MESSAGE(i, this.get_arenaState());
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("gameType", this.get_gameType());
            i("arenaState", this.get_arenaState())
        },
        readFromSlice: function(i2, qY) {
            var i1 = 0;
            var q = 0;
            while (i2.buf.totlen - i2.buf.pos > qY) {
                var i = fP.read__TYPE_UINT32(i2);
                var js = i >> 3;
                switch (js) {
                    case 1:
                        if (i1 != 0) {
                            throw new nM(new lA("Bad data format: Game_joined.gameType cannot be set twice."))
                        }++i1;
                        this.set_gameType(fP.read__TYPE_ENUM(i2));
                        break;
                    case 2:
                        if (q != 0) {
                            throw new nM(new lA("Bad data format: Game_joined.arenaState cannot be set twice."))
                        }++q;
                        this.set_arenaState(new dC());
                        fP.read__TYPE_MESSAGE(i2, this.get_arenaState());
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, i2, i)
                }
            }
        },
        __class__: Q,
        __properties__: {
            set_arenaState: "set_arenaState",
            get_arenaState: "get_arenaState",
            set_gameType: "set_gameType",
            get_gameType: "get_gameType"
        }
    });
    var jy = function() {
        cX.call(this);
        this.set_gameType(0);
        this.set_reason(0);
        this.set_userDataUpdates([]);
        this.set_userStats(new mu());
        this.set_gameSessionStats(new pf());
        this.set_potionInfo(new gh())
    };
    nt["agario.proto.Game_over"] = jy;
    jy.__name__ = ["agario", "proto", "Game_over"];
    jy.__super__ = cX;
    jy.prototype = lP(cX.prototype, {
        gameType: null,
        setGameType: function(i) {
            this.set_gameType(i);
            return this
        },
        set_gameType: function(i) {
            return this.gameType = i
        },
        get_gameType: function() {
            return this.gameType
        },
        reason: null,
        setReason: function(i) {
            this.set_reason(i);
            return this
        },
        set_reason: function(i) {
            return this.reason = i
        },
        get_reason: function() {
            return this.reason
        },
        userDataUpdates: null,
        setUserDataUpdates: function(i) {
            this.set_userDataUpdates(i);
            return this
        },
        set_userDataUpdates: function(i) {
            return this.userDataUpdates = i
        },
        get_userDataUpdates: function() {
            return this.userDataUpdates
        },
        addUserDataUpdates: function(i) {
            if (this.get_userDataUpdates() == null) {
                this.set_userDataUpdates([i])
            } else {
                this.get_userDataUpdates().push(i)
            }
        },
        userStats: null,
        setUserStats: function(i) {
            this.set_userStats(i);
            return this
        },
        set_userStats: function(i) {
            return this.userStats = i
        },
        get_userStats: function() {
            return this.userStats
        },
        gameSessionStats: null,
        setGameSessionStats: function(i) {
            this.set_gameSessionStats(i);
            return this
        },
        set_gameSessionStats: function(i) {
            return this.gameSessionStats = i
        },
        get_gameSessionStats: function() {
            return this.gameSessionStats
        },
        potionInfo: null,
        setPotionInfo: function(i) {
            this.set_potionInfo(i);
            return this
        },
        set_potionInfo: function(i) {
            return this.potionInfo = i
        },
        get_potionInfo: function() {
            return this.potionInfo
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 0, 1);
            kD.write__TYPE_ENUM(i, this.get_gameType());
            kD.writeTag(i, 0, 2);
            kD.write__TYPE_ENUM(i, this.get_reason());
            if (this.get_userDataUpdates() != null) {
                var i2 = 0;
                var i1 = this.get_userDataUpdates();
                while (i2 < i1.length) {
                    var q = i1[i2];
                    ++i2;
                    kD.writeTag(i, 2, 3);
                    kD.write__TYPE_MESSAGE(i, q)
                }
            }
            kD.writeTag(i, 2, 4);
            kD.write__TYPE_MESSAGE(i, this.get_userStats());
            kD.writeTag(i, 2, 5);
            kD.write__TYPE_MESSAGE(i, this.get_gameSessionStats());
            kD.writeTag(i, 2, 6);
            kD.write__TYPE_MESSAGE(i, this.get_potionInfo());
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("gameType", this.get_gameType());
            i("reason", this.get_reason());
            if (this.get_userDataUpdates() != null && this.get_userDataUpdates().length > 0) {
                i("userDataUpdates", this.get_userDataUpdates())
            }
            i("userStats", this.get_userStats());
            i("gameSessionStats", this.get_gameSessionStats());
            i("potionInfo", this.get_potionInfo())
        },
        readFromSlice: function(qZ, i) {
            var q0 = 0;
            var q = 0;
            var i1 = 0;
            var js = 0;
            var qY = 0;
            while (qZ.buf.totlen - qZ.buf.pos > i) {
                var q1 = fP.read__TYPE_UINT32(qZ);
                var i2 = q1 >> 3;
                switch (i2) {
                    case 1:
                        if (q0 != 0) {
                            throw new nM(new lA("Bad data format: Game_over.gameType cannot be set twice."))
                        }++q0;
                        this.set_gameType(fP.read__TYPE_ENUM(qZ));
                        break;
                    case 2:
                        if (q != 0) {
                            throw new nM(new lA("Bad data format: Game_over.reason cannot be set twice."))
                        }++q;
                        this.set_reason(fP.read__TYPE_ENUM(qZ));
                        break;
                    case 3:
                        if (this.get_userDataUpdates() == null) {
                            this.set_userDataUpdates([])
                        }
                        this.get_userDataUpdates().push(fP.read__TYPE_MESSAGE(qZ, new pi()));
                        break;
                    case 4:
                        if (i1 != 0) {
                            throw new nM(new lA("Bad data format: Game_over.userStats cannot be set twice."))
                        }++i1;
                        this.set_userStats(new mu());
                        fP.read__TYPE_MESSAGE(qZ, this.get_userStats());
                        break;
                    case 5:
                        if (js != 0) {
                            throw new nM(new lA("Bad data format: Game_over.gameSessionStats cannot be set twice."))
                        }++js;
                        this.set_gameSessionStats(new pf());
                        fP.read__TYPE_MESSAGE(qZ, this.get_gameSessionStats());
                        break;
                    case 6:
                        if (qY != 0) {
                            throw new nM(new lA("Bad data format: Game_over.potionInfo cannot be set twice."))
                        }++qY;
                        this.set_potionInfo(new gh());
                        fP.read__TYPE_MESSAGE(qZ, this.get_potionInfo());
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, qZ, q1)
                }
            }
        },
        __class__: jy,
        __properties__: {
            set_potionInfo: "set_potionInfo",
            get_potionInfo: "get_potionInfo",
            set_gameSessionStats: "set_gameSessionStats",
            get_gameSessionStats: "get_gameSessionStats",
            set_userStats: "set_userStats",
            get_userStats: "get_userStats",
            set_userDataUpdates: "set_userDataUpdates",
            get_userDataUpdates: "get_userDataUpdates",
            set_reason: "set_reason",
            get_reason: "get_reason",
            set_gameType: "set_gameType",
            get_gameType: "get_gameType"
        }
    });
    var pf = function() {
        cX.call(this);
        this.set_massConsumed(0);
        this.set_timeTotal(0);
        this.set_timeInLeaderboard(0);
        this.set_topPosition(0);
        this.set_finalPosition(0);
        this.set_longestTimeAlive(0);
        this.set_finalMass(0);
        this.set_highestMass(0);
        this.set_normalCellsEaten(0);
        this.set_foodEaten(0);
        this.set_virusesEaten(0)
    };
    nt["agario.proto.Game_session_stats"] = pf;
    pf.__name__ = ["agario", "proto", "Game_session_stats"];
    pf.__super__ = cX;
    pf.prototype = lP(cX.prototype, {
        massConsumed: null,
        setMassConsumed: function(i) {
            this.set_massConsumed(i);
            return this
        },
        set_massConsumed: function(i) {
            return this.massConsumed = i
        },
        get_massConsumed: function() {
            return this.massConsumed
        },
        timeTotal: null,
        setTimeTotal: function(i) {
            this.set_timeTotal(i);
            return this
        },
        set_timeTotal: function(i) {
            return this.timeTotal = i
        },
        get_timeTotal: function() {
            return this.timeTotal
        },
        timeInLeaderboard: null,
        setTimeInLeaderboard: function(i) {
            this.set_timeInLeaderboard(i);
            return this
        },
        set_timeInLeaderboard: function(i) {
            return this.timeInLeaderboard = i
        },
        get_timeInLeaderboard: function() {
            return this.timeInLeaderboard
        },
        topPosition: null,
        setTopPosition: function(i) {
            this.set_topPosition(i);
            return this
        },
        set_topPosition: function(i) {
            return this.topPosition = i
        },
        get_topPosition: function() {
            return this.topPosition
        },
        finalPosition: null,
        setFinalPosition: function(i) {
            this.set_finalPosition(i);
            return this
        },
        set_finalPosition: function(i) {
            return this.finalPosition = i
        },
        get_finalPosition: function() {
            return this.finalPosition
        },
        longestTimeAlive: null,
        setLongestTimeAlive: function(i) {
            this.set_longestTimeAlive(i);
            return this
        },
        set_longestTimeAlive: function(i) {
            return this.longestTimeAlive = i
        },
        get_longestTimeAlive: function() {
            return this.longestTimeAlive
        },
        finalMass: null,
        setFinalMass: function(i) {
            this.set_finalMass(i);
            return this
        },
        set_finalMass: function(i) {
            return this.finalMass = i
        },
        get_finalMass: function() {
            return this.finalMass
        },
        highestMass: null,
        setHighestMass: function(i) {
            this.set_highestMass(i);
            return this
        },
        set_highestMass: function(i) {
            return this.highestMass = i
        },
        get_highestMass: function() {
            return this.highestMass
        },
        normalCellsEaten: null,
        setNormalCellsEaten: function(i) {
            this.set_normalCellsEaten(i);
            return this
        },
        set_normalCellsEaten: function(i) {
            return this.normalCellsEaten = i
        },
        get_normalCellsEaten: function() {
            return this.normalCellsEaten
        },
        foodEaten: null,
        setFoodEaten: function(i) {
            this.set_foodEaten(i);
            return this
        },
        set_foodEaten: function(i) {
            return this.foodEaten = i
        },
        get_foodEaten: function() {
            return this.foodEaten
        },
        virusesEaten: null,
        setVirusesEaten: function(i) {
            this.set_virusesEaten(i);
            return this
        },
        set_virusesEaten: function(i) {
            return this.virusesEaten = i
        },
        get_virusesEaten: function() {
            return this.virusesEaten
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 0, 1);
            kD.write__TYPE_UINT32(i, this.get_massConsumed());
            kD.writeTag(i, 0, 2);
            kD.write__TYPE_UINT32(i, this.get_timeTotal());
            kD.writeTag(i, 0, 3);
            kD.write__TYPE_UINT32(i, this.get_timeInLeaderboard());
            kD.writeTag(i, 0, 4);
            kD.write__TYPE_UINT32(i, this.get_topPosition());
            kD.writeTag(i, 0, 5);
            kD.write__TYPE_UINT32(i, this.get_finalPosition());
            kD.writeTag(i, 0, 6);
            kD.write__TYPE_UINT32(i, this.get_longestTimeAlive());
            kD.writeTag(i, 0, 7);
            kD.write__TYPE_UINT32(i, this.get_finalMass());
            kD.writeTag(i, 0, 8);
            kD.write__TYPE_UINT32(i, this.get_highestMass());
            kD.writeTag(i, 0, 9);
            kD.write__TYPE_UINT32(i, this.get_normalCellsEaten());
            kD.writeTag(i, 0, 10);
            kD.write__TYPE_UINT32(i, this.get_foodEaten());
            kD.writeTag(i, 0, 11);
            kD.write__TYPE_UINT32(i, this.get_virusesEaten());
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("massConsumed", this.get_massConsumed());
            i("timeTotal", this.get_timeTotal());
            i("timeInLeaderboard", this.get_timeInLeaderboard());
            i("topPosition", this.get_topPosition());
            i("finalPosition", this.get_finalPosition());
            i("longestTimeAlive", this.get_longestTimeAlive());
            i("finalMass", this.get_finalMass());
            i("highestMass", this.get_highestMass());
            i("normalCellsEaten", this.get_normalCellsEaten());
            i("foodEaten", this.get_foodEaten());
            i("virusesEaten", this.get_virusesEaten())
        },
        readFromSlice: function(q4, q) {
            var q5 = 0;
            var q7 = 0;
            var q3 = 0;
            var q1 = 0;
            var q2 = 0;
            var i = 0;
            var i2 = 0;
            var js = 0;
            var i1 = 0;
            var q0 = 0;
            var qY = 0;
            while (q4.buf.totlen - q4.buf.pos > q) {
                var q6 = fP.read__TYPE_UINT32(q4);
                var qZ = q6 >> 3;
                switch (qZ) {
                    case 1:
                        if (q5 != 0) {
                            throw new nM(new lA("Bad data format: Game_session_stats.massConsumed cannot be set twice."))
                        }++q5;
                        this.set_massConsumed(fP.read__TYPE_UINT32(q4));
                        break;
                    case 2:
                        if (q7 != 0) {
                            throw new nM(new lA("Bad data format: Game_session_stats.timeTotal cannot be set twice."))
                        }++q7;
                        this.set_timeTotal(fP.read__TYPE_UINT32(q4));
                        break;
                    case 3:
                        if (q3 != 0) {
                            throw new nM(new lA("Bad data format: Game_session_stats.timeInLeaderboard cannot be set twice."))
                        }++q3;
                        this.set_timeInLeaderboard(fP.read__TYPE_UINT32(q4));
                        break;
                    case 4:
                        if (q1 != 0) {
                            throw new nM(new lA("Bad data format: Game_session_stats.topPosition cannot be set twice."))
                        }++q1;
                        this.set_topPosition(fP.read__TYPE_UINT32(q4));
                        break;
                    case 5:
                        if (q2 != 0) {
                            throw new nM(new lA("Bad data format: Game_session_stats.finalPosition cannot be set twice."))
                        }++q2;
                        this.set_finalPosition(fP.read__TYPE_UINT32(q4));
                        break;
                    case 6:
                        if (i != 0) {
                            throw new nM(new lA("Bad data format: Game_session_stats.longestTimeAlive cannot be set twice."))
                        }++i;
                        this.set_longestTimeAlive(fP.read__TYPE_UINT32(q4));
                        break;
                    case 7:
                        if (i2 != 0) {
                            throw new nM(new lA("Bad data format: Game_session_stats.finalMass cannot be set twice."))
                        }++i2;
                        this.set_finalMass(fP.read__TYPE_UINT32(q4));
                        break;
                    case 8:
                        if (js != 0) {
                            throw new nM(new lA("Bad data format: Game_session_stats.highestMass cannot be set twice."))
                        }++js;
                        this.set_highestMass(fP.read__TYPE_UINT32(q4));
                        break;
                    case 9:
                        if (i1 != 0) {
                            throw new nM(new lA("Bad data format: Game_session_stats.normalCellsEaten cannot be set twice."))
                        }++i1;
                        this.set_normalCellsEaten(fP.read__TYPE_UINT32(q4));
                        break;
                    case 10:
                        if (q0 != 0) {
                            throw new nM(new lA("Bad data format: Game_session_stats.foodEaten cannot be set twice."))
                        }++q0;
                        this.set_foodEaten(fP.read__TYPE_UINT32(q4));
                        break;
                    case 11:
                        if (qY != 0) {
                            throw new nM(new lA("Bad data format: Game_session_stats.virusesEaten cannot be set twice."))
                        }++qY;
                        this.set_virusesEaten(fP.read__TYPE_UINT32(q4));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q4, q6)
                }
            }
        },
        __class__: pf,
        __properties__: {
            set_virusesEaten: "set_virusesEaten",
            get_virusesEaten: "get_virusesEaten",
            set_foodEaten: "set_foodEaten",
            get_foodEaten: "get_foodEaten",
            set_normalCellsEaten: "set_normalCellsEaten",
            get_normalCellsEaten: "get_normalCellsEaten",
            set_highestMass: "set_highestMass",
            get_highestMass: "get_highestMass",
            set_finalMass: "set_finalMass",
            get_finalMass: "get_finalMass",
            set_longestTimeAlive: "set_longestTimeAlive",
            get_longestTimeAlive: "get_longestTimeAlive",
            set_finalPosition: "set_finalPosition",
            get_finalPosition: "get_finalPosition",
            set_topPosition: "set_topPosition",
            get_topPosition: "get_topPosition",
            set_timeInLeaderboard: "set_timeInLeaderboard",
            get_timeInLeaderboard: "get_timeInLeaderboard",
            set_timeTotal: "set_timeTotal",
            get_timeTotal: "get_timeTotal",
            set_massConsumed: "set_massConsumed",
            get_massConsumed: "get_massConsumed"
        }
    });
    var oR = function() {
        cX.call(this);
        this.set_transactionId(this.defaultUInt64());
        this.set_receiptData("");
        this.set_signature("")
    };
    nt["agario.proto.Google_inapp_purchase_request"] = oR;
    oR.__name__ = ["agario", "proto", "Google_inapp_purchase_request"];
    oR.__super__ = cX;
    oR.prototype = lP(cX.prototype, {
        transactionId: null,
        setTransactionId: function(i) {
            this.set_transactionId(i);
            return this
        },
        set_transactionId: function(i) {
            return this.transactionId = i
        },
        get_transactionId: function() {
            return this.transactionId
        },
        receiptData: null,
        setReceiptData: function(i) {
            this.set_receiptData(i);
            return this
        },
        set_receiptData: function(i) {
            return this.receiptData = i
        },
        get_receiptData: function() {
            return this.receiptData
        },
        signature: null,
        setSignature: function(i) {
            this.set_signature(i);
            return this
        },
        set_signature: function(i) {
            return this.signature = i
        },
        get_signature: function() {
            return this.signature
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 0, 1);
            kD.write__TYPE_UINT64(i, this.get_transactionId());
            kD.writeTag(i, 2, 2);
            kD.write__TYPE_STRING(i, this.get_receiptData());
            kD.writeTag(i, 2, 3);
            kD.write__TYPE_STRING(i, this.get_signature());
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("transactionId", this.get_transactionId());
            i("receiptData", this.get_receiptData());
            i("signature", this.get_signature())
        },
        readFromSlice: function(i1, qZ) {
            var i2 = 0;
            var js = 0;
            var q = 0;
            while (i1.buf.totlen - i1.buf.pos > qZ) {
                var i = fP.read__TYPE_UINT32(i1);
                var qY = i >> 3;
                switch (qY) {
                    case 1:
                        if (i2 != 0) {
                            throw new nM(new lA("Bad data format: Google_inapp_purchase_request.transactionId cannot be set twice."))
                        }++i2;
                        this.set_transactionId(fP.read__TYPE_UINT64(i1));
                        break;
                    case 2:
                        if (js != 0) {
                            throw new nM(new lA("Bad data format: Google_inapp_purchase_request.receiptData cannot be set twice."))
                        }++js;
                        this.set_receiptData(fP.read__TYPE_STRING(i1));
                        break;
                    case 3:
                        if (q != 0) {
                            throw new nM(new lA("Bad data format: Google_inapp_purchase_request.signature cannot be set twice."))
                        }++q;
                        this.set_signature(fP.read__TYPE_STRING(i1));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, i1, i)
                }
            }
        },
        __class__: oR,
        __properties__: {
            set_signature: "set_signature",
            get_signature: "get_signature",
            set_receiptData: "set_receiptData",
            get_receiptData: "get_receiptData",
            set_transactionId: "set_transactionId",
            get_transactionId: "get_transactionId"
        }
    });
    var eS = function() {
        cX.call(this);
        this.set_result(0);
        this.set_transactionId(this.defaultUInt64());
        this.set_productUpdates([])
    };
    nt["agario.proto.Inapp_purchase_response"] = eS;
    eS.__name__ = ["agario", "proto", "Inapp_purchase_response"];
    eS.__super__ = cX;
    eS.prototype = lP(cX.prototype, {
        result: null,
        setResult: function(i) {
            this.set_result(i);
            return this
        },
        set_result: function(i) {
            return this.result = i
        },
        get_result: function() {
            return this.result
        },
        transactionId: null,
        setTransactionId: function(i) {
            this.set_transactionId(i);
            return this
        },
        set_transactionId: function(i) {
            return this.transactionId = i
        },
        get_transactionId: function() {
            return this.transactionId
        },
        productUpdates: null,
        setProductUpdates: function(i) {
            this.set_productUpdates(i);
            return this
        },
        set_productUpdates: function(i) {
            return this.productUpdates = i
        },
        get_productUpdates: function() {
            return this.productUpdates
        },
        addProductUpdates: function(i) {
            if (this.get_productUpdates() == null) {
                this.set_productUpdates([i])
            } else {
                this.get_productUpdates().push(i)
            }
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 0, 1);
            kD.write__TYPE_ENUM(i, this.get_result());
            kD.writeTag(i, 0, 2);
            kD.write__TYPE_UINT64(i, this.get_transactionId());
            if (this.get_productUpdates() != null) {
                var i2 = 0;
                var i1 = this.get_productUpdates();
                while (i2 < i1.length) {
                    var q = i1[i2];
                    ++i2;
                    kD.writeTag(i, 2, 3);
                    kD.write__TYPE_MESSAGE(i, q)
                }
            }
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("result", this.get_result());
            i("transactionId", this.get_transactionId());
            if (this.get_productUpdates() != null && this.get_productUpdates().length > 0) {
                i("productUpdates", this.get_productUpdates())
            }
        },
        readFromSlice: function(q, qY) {
            var js = 0;
            var i1 = 0;
            while (q.buf.totlen - q.buf.pos > qY) {
                var i = fP.read__TYPE_UINT32(q);
                var i2 = i >> 3;
                switch (i2) {
                    case 1:
                        if (js != 0) {
                            throw new nM(new lA("Bad data format: Inapp_purchase_response.result cannot be set twice."))
                        }++js;
                        this.set_result(fP.read__TYPE_ENUM(q));
                        break;
                    case 2:
                        if (i1 != 0) {
                            throw new nM(new lA("Bad data format: Inapp_purchase_response.transactionId cannot be set twice."))
                        }++i1;
                        this.set_transactionId(fP.read__TYPE_UINT64(q));
                        break;
                    case 3:
                        if (this.get_productUpdates() == null) {
                            this.set_productUpdates([])
                        }
                        this.get_productUpdates().push(fP.read__TYPE_MESSAGE(q, new pi()));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q, i)
                }
            }
        },
        __class__: eS,
        __properties__: {
            set_productUpdates: "set_productUpdates",
            get_productUpdates: "get_productUpdates",
            set_transactionId: "set_transactionId",
            get_transactionId: "get_transactionId",
            set_result: "set_result",
            get_result: "get_result"
        }
    });
    var cz = function() {
        cX.call(this);
        this.set_names([]);
        this.set_playerPosition(0)
    };
    nt["agario.proto.Leaderboard"] = cz;
    cz.__name__ = ["agario", "proto", "Leaderboard"];
    cz.__super__ = cX;
    cz.prototype = lP(cX.prototype, {
        names: null,
        setNames: function(i) {
            this.set_names(i);
            return this
        },
        set_names: function(i) {
            return this.names = i
        },
        get_names: function() {
            return this.names
        },
        addNames: function(i) {
            if (this.get_names() == null) {
                this.set_names([i])
            } else {
                this.get_names().push(i)
            }
        },
        playerPosition: null,
        setPlayerPosition: function(i) {
            this.set_playerPosition(i);
            return this
        },
        set_playerPosition: function(i) {
            return this.playerPosition = i
        },
        get_playerPosition: function() {
            return this.playerPosition
        },
        writeToBuffer: function(i) {
            if (this.get_names() != null) {
                var i2 = 0;
                var i1 = this.get_names();
                while (i2 < i1.length) {
                    var q = i1[i2];
                    ++i2;
                    kD.writeTag(i, 2, 1);
                    kD.write__TYPE_STRING(i, q)
                }
            }
            kD.writeTag(i, 0, 2);
            kD.write__TYPE_UINT32(i, this.get_playerPosition());
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            if (this.get_names() != null && this.get_names().length > 0) {
                i("names", this.get_names())
            }
            i("playerPosition", this.get_playerPosition())
        },
        readFromSlice: function(i1, js) {
            var q = 0;
            while (i1.buf.totlen - i1.buf.pos > js) {
                var i = fP.read__TYPE_UINT32(i1);
                var i2 = i >> 3;
                switch (i2) {
                    case 1:
                        if (this.get_names() == null) {
                            this.set_names([])
                        }
                        this.get_names().push(fP.read__TYPE_STRING(i1));
                        break;
                    case 2:
                        if (q != 0) {
                            throw new nM(new lA("Bad data format: Leaderboard.playerPosition cannot be set twice."))
                        }++q;
                        this.set_playerPosition(fP.read__TYPE_UINT32(i1));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, i1, i)
                }
            }
        },
        __class__: cz,
        __properties__: {
            set_playerPosition: "set_playerPosition",
            get_playerPosition: "get_playerPosition",
            set_names: "set_names",
            get_names: "get_names"
        }
    });
    var jm = function() {
        cX.call(this)
    };
    nt["agario.proto.Login_realm_enum"] = jm;
    jm.__name__ = ["agario", "proto", "Login_realm_enum"];
    jm.__super__ = cX;
    jm.prototype = lP(cX.prototype, {
        writeToBuffer: function(i) {
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {},
        readFromSlice: function(q, i2) {
            while (q.buf.totlen - q.buf.pos > i2) {
                var i = fP.read__TYPE_UINT32(q);
                var i1 = i >> 3;
                cX.prototype.readUnknown.call(this, q, i)
            }
        },
        __class__: jm
    });
    var ck = function() {
        cX.call(this);
        this.set_realm(0);
        this.set_device(new fo())
    };
    nt["agario.proto.Login_request"] = ck;
    ck.__name__ = ["agario", "proto", "Login_request"];
    ck.__super__ = cX;
    ck.prototype = lP(cX.prototype, {
        realm: null,
        setRealm: function(i) {
            this.set_realm(i);
            return this
        },
        set_realm: function(i) {
            return this.realm = i
        },
        get_realm: function() {
            return this.realm
        },
        device: null,
        setDevice: function(i) {
            this.set_device(i);
            return this
        },
        set_device: function(i) {
            return this.device = i
        },
        get_device: function() {
            return this.device
        },
        authToken: null,
        setAuthToken: function(i) {
            this.set_authToken(i);
            return this
        },
        clearAuthToken: function() {
            this.set_authToken(null)
        },
        hasAuthToken: function() {
            return this.get_authToken() != null
        },
        set_authToken: function(i) {
            return this.authToken = i
        },
        get_authToken: function() {
            return this.authToken
        },
        altToken: null,
        setAltToken: function(i) {
            this.set_altToken(i);
            return this
        },
        clearAltToken: function() {
            this.set_altToken(null)
        },
        hasAltToken: function() {
            return this.get_altToken() != null
        },
        set_altToken: function(i) {
            return this.altToken = i
        },
        get_altToken: function() {
            return this.altToken
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 0, 1);
            kD.write__TYPE_ENUM(i, this.get_realm());
            kD.writeTag(i, 2, 2);
            kD.write__TYPE_MESSAGE(i, this.get_device());
            if (this.get_authToken() != null) {
                kD.writeTag(i, 2, 3);
                kD.write__TYPE_STRING(i, this.get_authToken())
            }
            if (this.get_altToken() != null) {
                kD.writeTag(i, 2, 4);
                kD.write__TYPE_STRING(i, this.get_altToken())
            }
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("realm", this.get_realm());
            i("device", this.get_device());
            if (this.get_authToken() != null) {
                i("authToken", this.get_authToken())
            }
            if (this.get_altToken() != null) {
                i("altToken", this.get_altToken())
            }
        },
        readFromSlice: function(i2, q0) {
            var qY = 0;
            var js = 0;
            var q = 0;
            var i1 = 0;
            while (i2.buf.totlen - i2.buf.pos > q0) {
                var i = fP.read__TYPE_UINT32(i2);
                var qZ = i >> 3;
                switch (qZ) {
                    case 1:
                        if (qY != 0) {
                            throw new nM(new lA("Bad data format: Login_request.realm cannot be set twice."))
                        }++qY;
                        this.set_realm(fP.read__TYPE_ENUM(i2));
                        break;
                    case 2:
                        if (js != 0) {
                            throw new nM(new lA("Bad data format: Login_request.device cannot be set twice."))
                        }++js;
                        this.set_device(new fo());
                        fP.read__TYPE_MESSAGE(i2, this.get_device());
                        break;
                    case 3:
                        if (q != 0) {
                            throw new nM(new lA("Bad data format: Login_request.authToken cannot be set twice."))
                        }++q;
                        this.set_authToken(fP.read__TYPE_STRING(i2));
                        break;
                    case 4:
                        if (i1 != 0) {
                            throw new nM(new lA("Bad data format: Login_request.altToken cannot be set twice."))
                        }++i1;
                        this.set_altToken(fP.read__TYPE_STRING(i2));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, i2, i)
                }
            }
        },
        __class__: ck,
        __properties__: {
            set_altToken: "set_altToken",
            get_altToken: "get_altToken",
            set_authToken: "set_authToken",
            get_authToken: "get_authToken",
            set_device: "set_device",
            get_device: "get_device",
            set_realm: "set_realm",
            get_realm: "get_realm"
        }
    });
    var ll = function() {
        this.hasField__0 = 0;
        cX.call(this);
        this.set_realm(0);
        this.set_currentGameState(0);
        this.set_latestConfiguration(0);
        this.set_serverInfo(new qB());
        this.set_userInfo(new ho());
        this.set_userStats(new mu());
        this.set_userWallet([]);
        this.set_userSettings([]);
        this.set_userBoosts([]);
        this.set_userTimedEvents([]);
        this.set_userGifts(new nS());
        this.set_sessionToken("");
        this.set_softUpgrade(new eZ());
        this.set_userAbTestGroups([]);
        this.set_userActiveQuests([]);
        this.set_userPotions([])
    };
    nt["agario.proto.Login_response"] = ll;
    ll.__name__ = ["agario", "proto", "Login_response"];
    ll.__super__ = cX;
    ll.prototype = lP(cX.prototype, {
        realm: null,
        setRealm: function(i) {
            this.set_realm(i);
            return this
        },
        set_realm: function(i) {
            return this.realm = i
        },
        get_realm: function() {
            return this.realm
        },
        guestAuthToken: null,
        setGuestAuthToken: function(i) {
            this.set_guestAuthToken(i);
            return this
        },
        clearGuestAuthToken: function() {
            this.set_guestAuthToken(null)
        },
        hasGuestAuthToken: function() {
            return this.get_guestAuthToken() != null
        },
        set_guestAuthToken: function(i) {
            return this.guestAuthToken = i
        },
        get_guestAuthToken: function() {
            return this.guestAuthToken
        },
        altToken: null,
        setAltToken: function(i) {
            this.set_altToken(i);
            return this
        },
        clearAltToken: function() {
            this.set_altToken(null)
        },
        hasAltToken: function() {
            return this.get_altToken() != null
        },
        set_altToken: function(i) {
            return this.altToken = i
        },
        get_altToken: function() {
            return this.altToken
        },
        currentGameState: null,
        setCurrentGameState: function(i) {
            this.set_currentGameState(i);
            return this
        },
        set_currentGameState: function(i) {
            return this.currentGameState = i
        },
        get_currentGameState: function() {
            return this.currentGameState
        },
        currentGameType: null,
        setCurrentGameType: function(i) {
            this.set_currentGameType(i);
            return this
        },
        hasField__0: null,
        clearCurrentGameType: function() {
            this.hasField__0 = this.hasField__0 & -2;
            this.set_currentGameType(0)
        },
        hasCurrentGameType: function() {
            return (this.hasField__0 & 1) != 0
        },
        set_currentGameType: function(i) {
            this.hasField__0 = this.hasField__0 | 1;
            return this.currentGameType = i
        },
        get_currentGameType: function() {
            return this.currentGameType
        },
        latestConfiguration: null,
        setLatestConfiguration: function(i) {
            this.set_latestConfiguration(i);
            return this
        },
        set_latestConfiguration: function(i) {
            return this.latestConfiguration = i
        },
        get_latestConfiguration: function() {
            return this.latestConfiguration
        },
        serverInfo: null,
        setServerInfo: function(i) {
            this.set_serverInfo(i);
            return this
        },
        set_serverInfo: function(i) {
            return this.serverInfo = i
        },
        get_serverInfo: function() {
            return this.serverInfo
        },
        userInfo: null,
        setUserInfo: function(i) {
            this.set_userInfo(i);
            return this
        },
        set_userInfo: function(i) {
            return this.userInfo = i
        },
        get_userInfo: function() {
            return this.userInfo
        },
        userStats: null,
        setUserStats: function(i) {
            this.set_userStats(i);
            return this
        },
        set_userStats: function(i) {
            return this.userStats = i
        },
        get_userStats: function() {
            return this.userStats
        },
        userWallet: null,
        setUserWallet: function(i) {
            this.set_userWallet(i);
            return this
        },
        set_userWallet: function(i) {
            return this.userWallet = i
        },
        get_userWallet: function() {
            return this.userWallet
        },
        addUserWallet: function(i) {
            if (this.get_userWallet() == null) {
                this.set_userWallet([i])
            } else {
                this.get_userWallet().push(i)
            }
        },
        userSettings: null,
        setUserSettings: function(i) {
            this.set_userSettings(i);
            return this
        },
        set_userSettings: function(i) {
            return this.userSettings = i
        },
        get_userSettings: function() {
            return this.userSettings
        },
        addUserSettings: function(i) {
            if (this.get_userSettings() == null) {
                this.set_userSettings([i])
            } else {
                this.get_userSettings().push(i)
            }
        },
        userBoosts: null,
        setUserBoosts: function(i) {
            this.set_userBoosts(i);
            return this
        },
        set_userBoosts: function(i) {
            return this.userBoosts = i
        },
        get_userBoosts: function() {
            return this.userBoosts
        },
        addUserBoosts: function(i) {
            if (this.get_userBoosts() == null) {
                this.set_userBoosts([i])
            } else {
                this.get_userBoosts().push(i)
            }
        },
        userTimedEvents: null,
        setUserTimedEvents: function(i) {
            this.set_userTimedEvents(i);
            return this
        },
        set_userTimedEvents: function(i) {
            return this.userTimedEvents = i
        },
        get_userTimedEvents: function() {
            return this.userTimedEvents
        },
        addUserTimedEvents: function(i) {
            if (this.get_userTimedEvents() == null) {
                this.set_userTimedEvents([i])
            } else {
                this.get_userTimedEvents().push(i)
            }
        },
        userGifts: null,
        setUserGifts: function(i) {
            this.set_userGifts(i);
            return this
        },
        set_userGifts: function(i) {
            return this.userGifts = i
        },
        get_userGifts: function() {
            return this.userGifts
        },
        sessionToken: null,
        setSessionToken: function(i) {
            this.set_sessionToken(i);
            return this
        },
        set_sessionToken: function(i) {
            return this.sessionToken = i
        },
        get_sessionToken: function() {
            return this.sessionToken
        },
        softUpgrade: null,
        setSoftUpgrade: function(i) {
            this.set_softUpgrade(i);
            return this
        },
        set_softUpgrade: function(i) {
            return this.softUpgrade = i
        },
        get_softUpgrade: function() {
            return this.softUpgrade
        },
        userAbTestGroups: null,
        setUserAbTestGroups: function(i) {
            this.set_userAbTestGroups(i);
            return this
        },
        set_userAbTestGroups: function(i) {
            return this.userAbTestGroups = i
        },
        get_userAbTestGroups: function() {
            return this.userAbTestGroups
        },
        addUserAbTestGroups: function(i) {
            if (this.get_userAbTestGroups() == null) {
                this.set_userAbTestGroups([i])
            } else {
                this.get_userAbTestGroups().push(i)
            }
        },
        userActiveQuests: null,
        setUserActiveQuests: function(i) {
            this.set_userActiveQuests(i);
            return this
        },
        set_userActiveQuests: function(i) {
            return this.userActiveQuests = i
        },
        get_userActiveQuests: function() {
            return this.userActiveQuests
        },
        addUserActiveQuests: function(i) {
            if (this.get_userActiveQuests() == null) {
                this.set_userActiveQuests([i])
            } else {
                this.get_userActiveQuests().push(i)
            }
        },
        userPotions: null,
        setUserPotions: function(i) {
            this.set_userPotions(i);
            return this
        },
        set_userPotions: function(i) {
            return this.userPotions = i
        },
        get_userPotions: function() {
            return this.userPotions
        },
        addUserPotions: function(i) {
            if (this.get_userPotions() == null) {
                this.set_userPotions([i])
            } else {
                this.get_userPotions().push(i)
            }
        },
        writeToBuffer: function(i1) {
            kD.writeTag(i1, 0, 1);
            kD.write__TYPE_ENUM(i1, this.get_realm());
            if (this.get_guestAuthToken() != null) {
                kD.writeTag(i1, 2, 2);
                kD.write__TYPE_STRING(i1, this.get_guestAuthToken())
            }
            if (this.get_altToken() != null) {
                kD.writeTag(i1, 2, 3);
                kD.write__TYPE_STRING(i1, this.get_altToken())
            }
            kD.writeTag(i1, 0, 4);
            kD.write__TYPE_ENUM(i1, this.get_currentGameState());
            if ((this.hasField__0 & 1) != 0) {
                kD.writeTag(i1, 0, 5);
                kD.write__TYPE_ENUM(i1, this.get_currentGameType())
            }
            kD.writeTag(i1, 0, 6);
            kD.write__TYPE_UINT32(i1, this.get_latestConfiguration());
            kD.writeTag(i1, 2, 7);
            kD.write__TYPE_MESSAGE(i1, this.get_serverInfo());
            kD.writeTag(i1, 2, 8);
            kD.write__TYPE_MESSAGE(i1, this.get_userInfo());
            kD.writeTag(i1, 2, 9);
            kD.write__TYPE_MESSAGE(i1, this.get_userStats());
            if (this.get_userWallet() != null) {
                var i = 0;
                var q7 = this.get_userWallet();
                while (i < q7.length) {
                    var ra = q7[i];
                    ++i;
                    kD.writeTag(i1, 2, 10);
                    kD.write__TYPE_MESSAGE(i1, ra)
                }
            }
            if (this.get_userSettings() != null) {
                var q6 = 0;
                var re = this.get_userSettings();
                while (q6 < re.length) {
                    var q3 = re[q6];
                    ++q6;
                    kD.writeTag(i1, 2, 11);
                    kD.write__TYPE_MESSAGE(i1, q3)
                }
            }
            if (this.get_userBoosts() != null) {
                var q5 = 0;
                var rd = this.get_userBoosts();
                while (q5 < rd.length) {
                    var q1 = rd[q5];
                    ++q5;
                    kD.writeTag(i1, 2, 12);
                    kD.write__TYPE_MESSAGE(i1, q1)
                }
            }
            if (this.get_userTimedEvents() != null) {
                var q4 = 0;
                var rc = this.get_userTimedEvents();
                while (q4 < rc.length) {
                    var qZ = rc[q4];
                    ++q4;
                    kD.writeTag(i1, 2, 13);
                    kD.write__TYPE_MESSAGE(i1, qZ)
                }
            }
            kD.writeTag(i1, 2, 14);
            kD.write__TYPE_MESSAGE(i1, this.get_userGifts());
            kD.writeTag(i1, 2, 15);
            kD.write__TYPE_STRING(i1, this.get_sessionToken());
            kD.writeTag(i1, 2, 16);
            kD.write__TYPE_MESSAGE(i1, this.get_softUpgrade());
            if (this.get_userAbTestGroups() != null) {
                var q2 = 0;
                var rb = this.get_userAbTestGroups();
                while (q2 < rb.length) {
                    var qY = rb[q2];
                    ++q2;
                    kD.writeTag(i1, 2, 17);
                    kD.write__TYPE_MESSAGE(i1, qY)
                }
            }
            if (this.get_userActiveQuests() != null) {
                var q0 = 0;
                var q9 = this.get_userActiveQuests();
                while (q0 < q9.length) {
                    var i2 = q9[q0];
                    ++q0;
                    kD.writeTag(i1, 2, 18);
                    kD.write__TYPE_MESSAGE(i1, i2)
                }
            }
            if (this.get_userPotions() != null) {
                var js = 0;
                var q8 = this.get_userPotions();
                while (js < q8.length) {
                    var q = q8[js];
                    ++js;
                    kD.writeTag(i1, 2, 19);
                    kD.write__TYPE_MESSAGE(i1, q)
                }
            }
            cX.prototype.writeExtensionOrUnknownFields.call(this, i1)
        },
        forEachFields: function(i) {
            i("realm", this.get_realm());
            if (this.get_guestAuthToken() != null) {
                i("guestAuthToken", this.get_guestAuthToken())
            }
            if (this.get_altToken() != null) {
                i("altToken", this.get_altToken())
            }
            i("currentGameState", this.get_currentGameState());
            if ((this.hasField__0 & 1) != 0) {
                i("currentGameType", this.get_currentGameType())
            }
            i("latestConfiguration", this.get_latestConfiguration());
            i("serverInfo", this.get_serverInfo());
            i("userInfo", this.get_userInfo());
            i("userStats", this.get_userStats());
            if (this.get_userWallet() != null && this.get_userWallet().length > 0) {
                i("userWallet", this.get_userWallet())
            }
            if (this.get_userSettings() != null && this.get_userSettings().length > 0) {
                i("userSettings", this.get_userSettings())
            }
            if (this.get_userBoosts() != null && this.get_userBoosts().length > 0) {
                i("userBoosts", this.get_userBoosts())
            }
            if (this.get_userTimedEvents() != null && this.get_userTimedEvents().length > 0) {
                i("userTimedEvents", this.get_userTimedEvents())
            }
            i("userGifts", this.get_userGifts());
            i("sessionToken", this.get_sessionToken());
            i("softUpgrade", this.get_softUpgrade());
            if (this.get_userAbTestGroups() != null && this.get_userAbTestGroups().length > 0) {
                i("userAbTestGroups", this.get_userAbTestGroups())
            }
            if (this.get_userActiveQuests() != null && this.get_userActiveQuests().length > 0) {
                i("userActiveQuests", this.get_userActiveQuests())
            }
            if (this.get_userPotions() != null && this.get_userPotions().length > 0) {
                i("userPotions", this.get_userPotions())
            }
        },
        readFromSlice: function(q5, q) {
            var q3 = 0;
            var q4 = 0;
            var q1 = 0;
            var i2 = 0;
            var q7 = 0;
            var qY = 0;
            var q6 = 0;
            var q2 = 0;
            var i1 = 0;
            var q0 = 0;
            var qZ = 0;
            var i = 0;
            while (q5.buf.totlen - q5.buf.pos > q) {
                var q8 = fP.read__TYPE_UINT32(q5);
                var js = q8 >> 3;
                switch (js) {
                    case 1:
                        if (q3 != 0) {
                            throw new nM(new lA("Bad data format: Login_response.realm cannot be set twice."))
                        }++q3;
                        this.set_realm(fP.read__TYPE_ENUM(q5));
                        break;
                    case 2:
                        if (q4 != 0) {
                            throw new nM(new lA("Bad data format: Login_response.guestAuthToken cannot be set twice."))
                        }++q4;
                        this.set_guestAuthToken(fP.read__TYPE_STRING(q5));
                        break;
                    case 3:
                        if (q1 != 0) {
                            throw new nM(new lA("Bad data format: Login_response.altToken cannot be set twice."))
                        }++q1;
                        this.set_altToken(fP.read__TYPE_STRING(q5));
                        break;
                    case 4:
                        if (i2 != 0) {
                            throw new nM(new lA("Bad data format: Login_response.currentGameState cannot be set twice."))
                        }++i2;
                        this.set_currentGameState(fP.read__TYPE_ENUM(q5));
                        break;
                    case 5:
                        if (q7 != 0) {
                            throw new nM(new lA("Bad data format: Login_response.currentGameType cannot be set twice."))
                        }++q7;
                        this.set_currentGameType(fP.read__TYPE_ENUM(q5));
                        break;
                    case 6:
                        if (qY != 0) {
                            throw new nM(new lA("Bad data format: Login_response.latestConfiguration cannot be set twice."))
                        }++qY;
                        this.set_latestConfiguration(fP.read__TYPE_UINT32(q5));
                        break;
                    case 7:
                        if (q6 != 0) {
                            throw new nM(new lA("Bad data format: Login_response.serverInfo cannot be set twice."))
                        }++q6;
                        this.set_serverInfo(new qB());
                        fP.read__TYPE_MESSAGE(q5, this.get_serverInfo());
                        break;
                    case 8:
                        if (q2 != 0) {
                            throw new nM(new lA("Bad data format: Login_response.userInfo cannot be set twice."))
                        }++q2;
                        this.set_userInfo(new ho());
                        fP.read__TYPE_MESSAGE(q5, this.get_userInfo());
                        break;
                    case 9:
                        if (i1 != 0) {
                            throw new nM(new lA("Bad data format: Login_response.userStats cannot be set twice."))
                        }++i1;
                        this.set_userStats(new mu());
                        fP.read__TYPE_MESSAGE(q5, this.get_userStats());
                        break;
                    case 10:
                        if (this.get_userWallet() == null) {
                            this.set_userWallet([])
                        }
                        this.get_userWallet().push(fP.read__TYPE_MESSAGE(q5, new ja()));
                        break;
                    case 11:
                        if (this.get_userSettings() == null) {
                            this.set_userSettings([])
                        }
                        this.get_userSettings().push(fP.read__TYPE_MESSAGE(q5, new lG()));
                        break;
                    case 12:
                        if (this.get_userBoosts() == null) {
                            this.set_userBoosts([])
                        }
                        this.get_userBoosts().push(fP.read__TYPE_MESSAGE(q5, new gX()));
                        break;
                    case 13:
                        if (this.get_userTimedEvents() == null) {
                            this.set_userTimedEvents([])
                        }
                        this.get_userTimedEvents().push(fP.read__TYPE_MESSAGE(q5, new hE()));
                        break;
                    case 14:
                        if (q0 != 0) {
                            throw new nM(new lA("Bad data format: Login_response.userGifts cannot be set twice."))
                        }++q0;
                        this.set_userGifts(new nS());
                        fP.read__TYPE_MESSAGE(q5, this.get_userGifts());
                        break;
                    case 15:
                        if (qZ != 0) {
                            throw new nM(new lA("Bad data format: Login_response.sessionToken cannot be set twice."))
                        }++qZ;
                        this.set_sessionToken(fP.read__TYPE_STRING(q5));
                        break;
                    case 16:
                        if (i != 0) {
                            throw new nM(new lA("Bad data format: Login_response.softUpgrade cannot be set twice."))
                        }++i;
                        this.set_softUpgrade(new eZ());
                        fP.read__TYPE_MESSAGE(q5, this.get_softUpgrade());
                        break;
                    case 17:
                        if (this.get_userAbTestGroups() == null) {
                            this.set_userAbTestGroups([])
                        }
                        this.get_userAbTestGroups().push(fP.read__TYPE_MESSAGE(q5, new jh()));
                        break;
                    case 18:
                        if (this.get_userActiveQuests() == null) {
                            this.set_userActiveQuests([])
                        }
                        this.get_userActiveQuests().push(fP.read__TYPE_MESSAGE(q5, new ce()));
                        break;
                    case 19:
                        if (this.get_userPotions() == null) {
                            this.set_userPotions([])
                        }
                        this.get_userPotions().push(fP.read__TYPE_MESSAGE(q5, new dv()));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q5, q8)
                }
            }
        },
        __class__: ll,
        __properties__: {
            set_userPotions: "set_userPotions",
            get_userPotions: "get_userPotions",
            set_userActiveQuests: "set_userActiveQuests",
            get_userActiveQuests: "get_userActiveQuests",
            set_userAbTestGroups: "set_userAbTestGroups",
            get_userAbTestGroups: "get_userAbTestGroups",
            set_softUpgrade: "set_softUpgrade",
            get_softUpgrade: "get_softUpgrade",
            set_sessionToken: "set_sessionToken",
            get_sessionToken: "get_sessionToken",
            set_userGifts: "set_userGifts",
            get_userGifts: "get_userGifts",
            set_userTimedEvents: "set_userTimedEvents",
            get_userTimedEvents: "get_userTimedEvents",
            set_userBoosts: "set_userBoosts",
            get_userBoosts: "get_userBoosts",
            set_userSettings: "set_userSettings",
            get_userSettings: "get_userSettings",
            set_userWallet: "set_userWallet",
            get_userWallet: "get_userWallet",
            set_userStats: "set_userStats",
            get_userStats: "get_userStats",
            set_userInfo: "set_userInfo",
            get_userInfo: "get_userInfo",
            set_serverInfo: "set_serverInfo",
            get_serverInfo: "get_serverInfo",
            set_latestConfiguration: "set_latestConfiguration",
            get_latestConfiguration: "get_latestConfiguration",
            set_currentGameType: "set_currentGameType",
            get_currentGameType: "get_currentGameType",
            set_currentGameState: "set_currentGameState",
            get_currentGameState: "get_currentGameState",
            set_altToken: "set_altToken",
            get_altToken: "get_altToken",
            set_guestAuthToken: "set_guestAuthToken",
            get_guestAuthToken: "get_guestAuthToken",
            set_realm: "set_realm",
            get_realm: "get_realm"
        }
    });
    var I = function() {
        cX.call(this);
        this.set_bundleId("")
    };
    nt["agario.proto.Offer_bundle_request"] = I;
    I.__name__ = ["agario", "proto", "Offer_bundle_request"];
    I.__super__ = cX;
    I.prototype = lP(cX.prototype, {
        bundleId: null,
        setBundleId: function(i) {
            this.set_bundleId(i);
            return this
        },
        set_bundleId: function(i) {
            return this.bundleId = i
        },
        get_bundleId: function() {
            return this.bundleId
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 2, 1);
            kD.write__TYPE_STRING(i, this.get_bundleId());
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("bundleId", this.get_bundleId())
        },
        readFromSlice: function(q, js) {
            var i1 = 0;
            while (q.buf.totlen - q.buf.pos > js) {
                var i = fP.read__TYPE_UINT32(q);
                var i2 = i >> 3;
                switch (i2) {
                    case 1:
                        if (i1 != 0) {
                            throw new nM(new lA("Bad data format: Offer_bundle_request.bundleId cannot be set twice."))
                        }++i1;
                        this.set_bundleId(fP.read__TYPE_STRING(q));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q, i)
                }
            }
        },
        __class__: I,
        __properties__: {
            set_bundleId: "set_bundleId",
            get_bundleId: "get_bundleId"
        }
    });
    var qC = function() {
        cX.call(this);
        this.set_result(0);
        this.set_bundleId("");
        this.set_productUpdates([])
    };
    nt["agario.proto.Offer_bundle_response"] = qC;
    qC.__name__ = ["agario", "proto", "Offer_bundle_response"];
    qC.__super__ = cX;
    qC.prototype = lP(cX.prototype, {
        result: null,
        setResult: function(i) {
            this.set_result(i);
            return this
        },
        set_result: function(i) {
            return this.result = i
        },
        get_result: function() {
            return this.result
        },
        bundleId: null,
        setBundleId: function(i) {
            this.set_bundleId(i);
            return this
        },
        set_bundleId: function(i) {
            return this.bundleId = i
        },
        get_bundleId: function() {
            return this.bundleId
        },
        productUpdates: null,
        setProductUpdates: function(i) {
            this.set_productUpdates(i);
            return this
        },
        set_productUpdates: function(i) {
            return this.productUpdates = i
        },
        get_productUpdates: function() {
            return this.productUpdates
        },
        addProductUpdates: function(i) {
            if (this.get_productUpdates() == null) {
                this.set_productUpdates([i])
            } else {
                this.get_productUpdates().push(i)
            }
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 0, 1);
            kD.write__TYPE_ENUM(i, this.get_result());
            kD.writeTag(i, 2, 2);
            kD.write__TYPE_STRING(i, this.get_bundleId());
            if (this.get_productUpdates() != null) {
                var i2 = 0;
                var i1 = this.get_productUpdates();
                while (i2 < i1.length) {
                    var q = i1[i2];
                    ++i2;
                    kD.writeTag(i, 2, 3);
                    kD.write__TYPE_MESSAGE(i, q)
                }
            }
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("result", this.get_result());
            i("bundleId", this.get_bundleId());
            if (this.get_productUpdates() != null && this.get_productUpdates().length > 0) {
                i("productUpdates", this.get_productUpdates())
            }
        },
        readFromSlice: function(q, qY) {
            var js = 0;
            var i1 = 0;
            while (q.buf.totlen - q.buf.pos > qY) {
                var i = fP.read__TYPE_UINT32(q);
                var i2 = i >> 3;
                switch (i2) {
                    case 1:
                        if (js != 0) {
                            throw new nM(new lA("Bad data format: Offer_bundle_response.result cannot be set twice."))
                        }++js;
                        this.set_result(fP.read__TYPE_ENUM(q));
                        break;
                    case 2:
                        if (i1 != 0) {
                            throw new nM(new lA("Bad data format: Offer_bundle_response.bundleId cannot be set twice."))
                        }++i1;
                        this.set_bundleId(fP.read__TYPE_STRING(q));
                        break;
                    case 3:
                        if (this.get_productUpdates() == null) {
                            this.set_productUpdates([])
                        }
                        this.get_productUpdates().push(fP.read__TYPE_MESSAGE(q, new pi()));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q, i)
                }
            }
        },
        __class__: qC,
        __properties__: {
            set_productUpdates: "set_productUpdates",
            get_productUpdates: "get_productUpdates",
            set_bundleId: "set_bundleId",
            get_bundleId: "get_bundleId",
            set_result: "set_result",
            get_result: "get_result"
        }
    });
    var fD = function() {
        cX.call(this);
        this.set_productId("")
    };
    nt["agario.proto.Open_potion_for_product_request"] = fD;
    fD.__name__ = ["agario", "proto", "Open_potion_for_product_request"];
    fD.__super__ = cX;
    fD.prototype = lP(cX.prototype, {
        productId: null,
        setProductId: function(i) {
            this.set_productId(i);
            return this
        },
        set_productId: function(i) {
            return this.productId = i
        },
        get_productId: function() {
            return this.productId
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 2, 1);
            kD.write__TYPE_STRING(i, this.get_productId());
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("productId", this.get_productId())
        },
        readFromSlice: function(q, js) {
            var i1 = 0;
            while (q.buf.totlen - q.buf.pos > js) {
                var i = fP.read__TYPE_UINT32(q);
                var i2 = i >> 3;
                switch (i2) {
                    case 1:
                        if (i1 != 0) {
                            throw new nM(new lA("Bad data format: Open_potion_for_product_request.productId cannot be set twice."))
                        }++i1;
                        this.set_productId(fP.read__TYPE_STRING(q));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q, i)
                }
            }
        },
        __class__: fD,
        __properties__: {
            set_productId: "set_productId",
            get_productId: "get_productId"
        }
    });
    var gL = function() {
        cX.call(this);
        this.set_result(0);
        this.set_productId("");
        this.set_productUpdates([])
    };
    nt["agario.proto.Open_potion_for_product_response"] = gL;
    gL.__name__ = ["agario", "proto", "Open_potion_for_product_response"];
    gL.__super__ = cX;
    gL.prototype = lP(cX.prototype, {
        result: null,
        setResult: function(i) {
            this.set_result(i);
            return this
        },
        set_result: function(i) {
            return this.result = i
        },
        get_result: function() {
            return this.result
        },
        productId: null,
        setProductId: function(i) {
            this.set_productId(i);
            return this
        },
        set_productId: function(i) {
            return this.productId = i
        },
        get_productId: function() {
            return this.productId
        },
        productUpdates: null,
        setProductUpdates: function(i) {
            this.set_productUpdates(i);
            return this
        },
        set_productUpdates: function(i) {
            return this.productUpdates = i
        },
        get_productUpdates: function() {
            return this.productUpdates
        },
        addProductUpdates: function(i) {
            if (this.get_productUpdates() == null) {
                this.set_productUpdates([i])
            } else {
                this.get_productUpdates().push(i)
            }
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 0, 1);
            kD.write__TYPE_ENUM(i, this.get_result());
            kD.writeTag(i, 2, 2);
            kD.write__TYPE_STRING(i, this.get_productId());
            if (this.get_productUpdates() != null) {
                var i2 = 0;
                var i1 = this.get_productUpdates();
                while (i2 < i1.length) {
                    var q = i1[i2];
                    ++i2;
                    kD.writeTag(i, 2, 3);
                    kD.write__TYPE_MESSAGE(i, q)
                }
            }
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("result", this.get_result());
            i("productId", this.get_productId());
            if (this.get_productUpdates() != null && this.get_productUpdates().length > 0) {
                i("productUpdates", this.get_productUpdates())
            }
        },
        readFromSlice: function(q, qY) {
            var js = 0;
            var i1 = 0;
            while (q.buf.totlen - q.buf.pos > qY) {
                var i = fP.read__TYPE_UINT32(q);
                var i2 = i >> 3;
                switch (i2) {
                    case 1:
                        if (js != 0) {
                            throw new nM(new lA("Bad data format: Open_potion_for_product_response.result cannot be set twice."))
                        }++js;
                        this.set_result(fP.read__TYPE_ENUM(q));
                        break;
                    case 2:
                        if (i1 != 0) {
                            throw new nM(new lA("Bad data format: Open_potion_for_product_response.productId cannot be set twice."))
                        }++i1;
                        this.set_productId(fP.read__TYPE_STRING(q));
                        break;
                    case 3:
                        if (this.get_productUpdates() == null) {
                            this.set_productUpdates([])
                        }
                        this.get_productUpdates().push(fP.read__TYPE_MESSAGE(q, new pi()));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q, i)
                }
            }
        },
        __class__: gL,
        __properties__: {
            set_productUpdates: "set_productUpdates",
            get_productUpdates: "get_productUpdates",
            set_productId: "set_productId",
            get_productId: "get_productId",
            set_result: "set_result",
            get_result: "get_result"
        }
    });
    var mg = function() {
        cX.call(this);
        this.set_slot(0)
    };
    nt["agario.proto.Open_potion_for_slot_request"] = mg;
    mg.__name__ = ["agario", "proto", "Open_potion_for_slot_request"];
    mg.__super__ = cX;
    mg.prototype = lP(cX.prototype, {
        slot: null,
        setSlot: function(i) {
            this.set_slot(i);
            return this
        },
        set_slot: function(i) {
            return this.slot = i
        },
        get_slot: function() {
            return this.slot
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 0, 1);
            kD.write__TYPE_ENUM(i, this.get_slot());
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("slot", this.get_slot())
        },
        readFromSlice: function(q, js) {
            var i1 = 0;
            while (q.buf.totlen - q.buf.pos > js) {
                var i = fP.read__TYPE_UINT32(q);
                var i2 = i >> 3;
                switch (i2) {
                    case 1:
                        if (i1 != 0) {
                            throw new nM(new lA("Bad data format: Open_potion_for_slot_request.slot cannot be set twice."))
                        }++i1;
                        this.set_slot(fP.read__TYPE_ENUM(q));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q, i)
                }
            }
        },
        __class__: mg,
        __properties__: {
            set_slot: "set_slot",
            get_slot: "get_slot"
        }
    });
    var dO = function() {
        cX.call(this);
        this.set_result(0);
        this.set_productUpdates([]);
        this.set_userPotions([])
    };
    nt["agario.proto.Open_potion_for_slot_response"] = dO;
    dO.__name__ = ["agario", "proto", "Open_potion_for_slot_response"];
    dO.__super__ = cX;
    dO.prototype = lP(cX.prototype, {
        result: null,
        setResult: function(i) {
            this.set_result(i);
            return this
        },
        set_result: function(i) {
            return this.result = i
        },
        get_result: function() {
            return this.result
        },
        productUpdates: null,
        setProductUpdates: function(i) {
            this.set_productUpdates(i);
            return this
        },
        set_productUpdates: function(i) {
            return this.productUpdates = i
        },
        get_productUpdates: function() {
            return this.productUpdates
        },
        addProductUpdates: function(i) {
            if (this.get_productUpdates() == null) {
                this.set_productUpdates([i])
            } else {
                this.get_productUpdates().push(i)
            }
        },
        userPotions: null,
        setUserPotions: function(i) {
            this.set_userPotions(i);
            return this
        },
        set_userPotions: function(i) {
            return this.userPotions = i
        },
        get_userPotions: function() {
            return this.userPotions
        },
        addUserPotions: function(i) {
            if (this.get_userPotions() == null) {
                this.set_userPotions([i])
            } else {
                this.get_userPotions().push(i)
            }
        },
        writeToBuffer: function(i1) {
            kD.writeTag(i1, 0, 1);
            kD.write__TYPE_ENUM(i1, this.get_result());
            if (this.get_productUpdates() != null) {
                var qZ = 0;
                var qY = this.get_productUpdates();
                while (qZ < qY.length) {
                    var js = qY[qZ];
                    ++qZ;
                    kD.writeTag(i1, 2, 3);
                    kD.write__TYPE_MESSAGE(i1, js)
                }
            }
            if (this.get_userPotions() != null) {
                var i2 = 0;
                var i = this.get_userPotions();
                while (i2 < i.length) {
                    var q = i[i2];
                    ++i2;
                    kD.writeTag(i1, 2, 4);
                    kD.write__TYPE_MESSAGE(i1, q)
                }
            }
            cX.prototype.writeExtensionOrUnknownFields.call(this, i1)
        },
        forEachFields: function(i) {
            i("result", this.get_result());
            if (this.get_productUpdates() != null && this.get_productUpdates().length > 0) {
                i("productUpdates", this.get_productUpdates())
            }
            if (this.get_userPotions() != null && this.get_userPotions().length > 0) {
                i("userPotions", this.get_userPotions())
            }
        },
        readFromSlice: function(q, js) {
            var i2 = 0;
            while (q.buf.totlen - q.buf.pos > js) {
                var i = fP.read__TYPE_UINT32(q);
                var i1 = i >> 3;
                switch (i1) {
                    case 1:
                        if (i2 != 0) {
                            throw new nM(new lA("Bad data format: Open_potion_for_slot_response.result cannot be set twice."))
                        }++i2;
                        this.set_result(fP.read__TYPE_ENUM(q));
                        break;
                    case 3:
                        if (this.get_productUpdates() == null) {
                            this.set_productUpdates([])
                        }
                        this.get_productUpdates().push(fP.read__TYPE_MESSAGE(q, new pi()));
                        break;
                    case 4:
                        if (this.get_userPotions() == null) {
                            this.set_userPotions([])
                        }
                        this.get_userPotions().push(fP.read__TYPE_MESSAGE(q, new dv()));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q, i)
                }
            }
        },
        __class__: dO,
        __properties__: {
            set_userPotions: "set_userPotions",
            get_userPotions: "get_userPotions",
            set_productUpdates: "set_productUpdates",
            get_productUpdates: "get_productUpdates",
            set_result: "set_result",
            get_result: "get_result"
        }
    });
    var bn = function() {
        this.hasField__0 = 0;
        cX.call(this);
        this.set_id(0)
    };
    nt["agario.proto.Ping"] = bn;
    bn.__name__ = ["agario", "proto", "Ping"];
    bn.__super__ = cX;
    bn.prototype = lP(cX.prototype, {
        id: null,
        setId: function(i) {
            this.set_id(i);
            return this
        },
        set_id: function(i) {
            return this.id = i
        },
        get_id: function() {
            return this.id
        },
        previousRoundtrip: null,
        setPreviousRoundtrip: function(i) {
            this.set_previousRoundtrip(i);
            return this
        },
        hasField__0: null,
        clearPreviousRoundtrip: function() {
            this.hasField__0 = this.hasField__0 & -2;
            this.set_previousRoundtrip(0)
        },
        hasPreviousRoundtrip: function() {
            return (this.hasField__0 & 1) != 0
        },
        set_previousRoundtrip: function(i) {
            this.hasField__0 = this.hasField__0 | 1;
            return this.previousRoundtrip = i
        },
        get_previousRoundtrip: function() {
            return this.previousRoundtrip
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 0, 1);
            kD.write__TYPE_UINT32(i, this.get_id());
            if ((this.hasField__0 & 1) != 0) {
                kD.writeTag(i, 0, 2);
                kD.write__TYPE_UINT32(i, this.get_previousRoundtrip())
            }
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("id", this.get_id());
            if ((this.hasField__0 & 1) != 0) {
                i("previousRoundtrip", this.get_previousRoundtrip())
            }
        },
        readFromSlice: function(q, qY) {
            var i1 = 0;
            var i2 = 0;
            while (q.buf.totlen - q.buf.pos > qY) {
                var i = fP.read__TYPE_UINT32(q);
                var js = i >> 3;
                switch (js) {
                    case 1:
                        if (i1 != 0) {
                            throw new nM(new lA("Bad data format: Ping.id cannot be set twice."))
                        }++i1;
                        this.set_id(fP.read__TYPE_UINT32(q));
                        break;
                    case 2:
                        if (i2 != 0) {
                            throw new nM(new lA("Bad data format: Ping.previousRoundtrip cannot be set twice."))
                        }++i2;
                        this.set_previousRoundtrip(fP.read__TYPE_UINT32(q));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q, i)
                }
            }
        },
        __class__: bn,
        __properties__: {
            set_previousRoundtrip: "set_previousRoundtrip",
            get_previousRoundtrip: "get_previousRoundtrip",
            set_id: "set_id",
            get_id: "get_id"
        }
    });
    var fk = function() {
        cX.call(this);
        this.set_pingId(0)
    };
    nt["agario.proto.Pong"] = fk;
    fk.__name__ = ["agario", "proto", "Pong"];
    fk.__super__ = cX;
    fk.prototype = lP(cX.prototype, {
        pingId: null,
        setPingId: function(i) {
            this.set_pingId(i);
            return this
        },
        set_pingId: function(i) {
            return this.pingId = i
        },
        get_pingId: function() {
            return this.pingId
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 0, 1);
            kD.write__TYPE_UINT32(i, this.get_pingId());
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("pingId", this.get_pingId())
        },
        readFromSlice: function(q, js) {
            var i1 = 0;
            while (q.buf.totlen - q.buf.pos > js) {
                var i = fP.read__TYPE_UINT32(q);
                var i2 = i >> 3;
                switch (i2) {
                    case 1:
                        if (i1 != 0) {
                            throw new nM(new lA("Bad data format: Pong.pingId cannot be set twice."))
                        }++i1;
                        this.set_pingId(fP.read__TYPE_UINT32(q));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q, i)
                }
            }
        },
        __class__: fk,
        __properties__: {
            set_pingId: "set_pingId",
            get_pingId: "get_pingId"
        }
    });
    var gh = function() {
        this.hasField__0 = 0;
        cX.call(this)
    };
    nt["agario.proto.Potion_info"] = gh;
    gh.__name__ = ["agario", "proto", "Potion_info"];
    gh.__super__ = cX;
    gh.prototype = lP(cX.prototype, {
        newUserPotion: null,
        setNewUserPotion: function(i) {
            this.set_newUserPotion(i);
            return this
        },
        clearNewUserPotion: function() {
            this.set_newUserPotion(null)
        },
        hasNewUserPotion: function() {
            return this.get_newUserPotion() != null
        },
        set_newUserPotion: function(i) {
            return this.newUserPotion = i
        },
        get_newUserPotion: function() {
            return this.newUserPotion
        },
        wouldHaveWonPotion: null,
        setWouldHaveWonPotion: function(i) {
            this.set_wouldHaveWonPotion(i);
            return this
        },
        hasField__0: null,
        clearWouldHaveWonPotion: function() {
            this.hasField__0 = this.hasField__0 & -2;
            this.set_wouldHaveWonPotion(false)
        },
        hasWouldHaveWonPotion: function() {
            return (this.hasField__0 & 1) != 0
        },
        set_wouldHaveWonPotion: function(i) {
            this.hasField__0 = this.hasField__0 | 1;
            return this.wouldHaveWonPotion = i
        },
        get_wouldHaveWonPotion: function() {
            return this.wouldHaveWonPotion
        },
        writeToBuffer: function(i) {
            if (this.get_newUserPotion() != null) {
                kD.writeTag(i, 2, 1);
                kD.write__TYPE_MESSAGE(i, this.get_newUserPotion())
            }
            if ((this.hasField__0 & 1) != 0) {
                kD.writeTag(i, 0, 2);
                kD.write__TYPE_BOOL(i, this.get_wouldHaveWonPotion())
            }
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            if (this.get_newUserPotion() != null) {
                i("newUserPotion", this.get_newUserPotion())
            }
            if ((this.hasField__0 & 1) != 0) {
                i("wouldHaveWonPotion", this.get_wouldHaveWonPotion())
            }
        },
        readFromSlice: function(q, qY) {
            var i1 = 0;
            var js = 0;
            while (q.buf.totlen - q.buf.pos > qY) {
                var i = fP.read__TYPE_UINT32(q);
                var i2 = i >> 3;
                switch (i2) {
                    case 1:
                        if (i1 != 0) {
                            throw new nM(new lA("Bad data format: Potion_info.newUserPotion cannot be set twice."))
                        }++i1;
                        this.set_newUserPotion(new dv());
                        fP.read__TYPE_MESSAGE(q, this.get_newUserPotion());
                        break;
                    case 2:
                        if (js != 0) {
                            throw new nM(new lA("Bad data format: Potion_info.wouldHaveWonPotion cannot be set twice."))
                        }++js;
                        this.set_wouldHaveWonPotion(fP.read__TYPE_BOOL(q));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q, i)
                }
            }
        },
        __class__: gh,
        __properties__: {
            set_wouldHaveWonPotion: "set_wouldHaveWonPotion",
            get_wouldHaveWonPotion: "get_wouldHaveWonPotion",
            set_newUserPotion: "set_newUserPotion",
            get_newUserPotion: "get_newUserPotion"
        }
    });
    var cJ = function() {
        cX.call(this);
        this.set_origin(0);
        this.set_productId("");
        this.set_finalAmount(0);
        this.set_deltaAmount(0);
        this.set_type(0)
    };
    nt["agario.proto.Product_update"] = cJ;
    cJ.__name__ = ["agario", "proto", "Product_update"];
    cJ.__super__ = cX;
    cJ.prototype = lP(cX.prototype, {
        origin: null,
        setOrigin: function(i) {
            this.set_origin(i);
            return this
        },
        set_origin: function(i) {
            return this.origin = i
        },
        get_origin: function() {
            return this.origin
        },
        productId: null,
        setProductId: function(i) {
            this.set_productId(i);
            return this
        },
        set_productId: function(i) {
            return this.productId = i
        },
        get_productId: function() {
            return this.productId
        },
        finalAmount: null,
        setFinalAmount: function(i) {
            this.set_finalAmount(i);
            return this
        },
        set_finalAmount: function(i) {
            return this.finalAmount = i
        },
        get_finalAmount: function() {
            return this.finalAmount
        },
        deltaAmount: null,
        setDeltaAmount: function(i) {
            this.set_deltaAmount(i);
            return this
        },
        set_deltaAmount: function(i) {
            return this.deltaAmount = i
        },
        get_deltaAmount: function() {
            return this.deltaAmount
        },
        type: null,
        setType: function(i) {
            this.set_type(i);
            return this
        },
        set_type: function(i) {
            return this.type = i
        },
        get_type: function() {
            return this.type
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 0, 1);
            kD.write__TYPE_ENUM(i, this.get_origin());
            kD.writeTag(i, 2, 2);
            kD.write__TYPE_STRING(i, this.get_productId());
            kD.writeTag(i, 0, 3);
            kD.write__TYPE_UINT32(i, this.get_finalAmount());
            kD.writeTag(i, 0, 4);
            kD.write__TYPE_INT32(i, this.get_deltaAmount());
            kD.writeTag(i, 0, 5);
            kD.write__TYPE_ENUM(i, this.get_type());
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("origin", this.get_origin());
            i("productId", this.get_productId());
            i("finalAmount", this.get_finalAmount());
            i("deltaAmount", this.get_deltaAmount());
            i("type", this.get_type())
        },
        readFromSlice: function(qY, i) {
            var js = 0;
            var qZ = 0;
            var i2 = 0;
            var q = 0;
            var q0 = 0;
            while (qY.buf.totlen - qY.buf.pos > i) {
                var q1 = fP.read__TYPE_UINT32(qY);
                var i1 = q1 >> 3;
                switch (i1) {
                    case 1:
                        if (js != 0) {
                            throw new nM(new lA("Bad data format: Product_update.origin cannot be set twice."))
                        }++js;
                        this.set_origin(fP.read__TYPE_ENUM(qY));
                        break;
                    case 2:
                        if (qZ != 0) {
                            throw new nM(new lA("Bad data format: Product_update.productId cannot be set twice."))
                        }++qZ;
                        this.set_productId(fP.read__TYPE_STRING(qY));
                        break;
                    case 3:
                        if (i2 != 0) {
                            throw new nM(new lA("Bad data format: Product_update.finalAmount cannot be set twice."))
                        }++i2;
                        this.set_finalAmount(fP.read__TYPE_UINT32(qY));
                        break;
                    case 4:
                        if (q != 0) {
                            throw new nM(new lA("Bad data format: Product_update.deltaAmount cannot be set twice."))
                        }++q;
                        this.set_deltaAmount(fP.read__TYPE_INT32(qY));
                        break;
                    case 5:
                        if (q0 != 0) {
                            throw new nM(new lA("Bad data format: Product_update.type cannot be set twice."))
                        }++q0;
                        this.set_type(fP.read__TYPE_ENUM(qY));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, qY, q1)
                }
            }
        },
        __class__: cJ,
        __properties__: {
            set_type: "set_type",
            get_type: "get_type",
            set_deltaAmount: "set_deltaAmount",
            get_deltaAmount: "get_deltaAmount",
            set_finalAmount: "set_finalAmount",
            get_finalAmount: "get_finalAmount",
            set_productId: "set_productId",
            get_productId: "get_productId",
            set_origin: "set_origin",
            get_origin: "get_origin"
        }
    });
    var p8 = function() {
        cX.call(this);
        this.set_purchaseId("");
        this.set_walletUpdates(new T())
    };
    nt["agario.proto.Purchase_wallet_updates"] = p8;
    p8.__name__ = ["agario", "proto", "Purchase_wallet_updates"];
    p8.__super__ = cX;
    p8.prototype = lP(cX.prototype, {
        purchaseId: null,
        setPurchaseId: function(i) {
            this.set_purchaseId(i);
            return this
        },
        set_purchaseId: function(i) {
            return this.purchaseId = i
        },
        get_purchaseId: function() {
            return this.purchaseId
        },
        walletUpdates: null,
        setWalletUpdates: function(i) {
            this.set_walletUpdates(i);
            return this
        },
        set_walletUpdates: function(i) {
            return this.walletUpdates = i
        },
        get_walletUpdates: function() {
            return this.walletUpdates
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 2, 1);
            kD.write__TYPE_STRING(i, this.get_purchaseId());
            kD.writeTag(i, 2, 2);
            kD.write__TYPE_MESSAGE(i, this.get_walletUpdates());
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("purchaseId", this.get_purchaseId());
            i("walletUpdates", this.get_walletUpdates())
        },
        readFromSlice: function(q, qY) {
            var js = 0;
            var i1 = 0;
            while (q.buf.totlen - q.buf.pos > qY) {
                var i = fP.read__TYPE_UINT32(q);
                var i2 = i >> 3;
                switch (i2) {
                    case 1:
                        if (js != 0) {
                            throw new nM(new lA("Bad data format: Purchase_wallet_updates.purchaseId cannot be set twice."))
                        }++js;
                        this.set_purchaseId(fP.read__TYPE_STRING(q));
                        break;
                    case 2:
                        if (i1 != 0) {
                            throw new nM(new lA("Bad data format: Purchase_wallet_updates.walletUpdates cannot be set twice."))
                        }++i1;
                        this.set_walletUpdates(new T());
                        fP.read__TYPE_MESSAGE(q, this.get_walletUpdates());
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q, i)
                }
            }
        },
        __class__: p8,
        __properties__: {
            set_walletUpdates: "set_walletUpdates",
            get_walletUpdates: "get_walletUpdates",
            set_purchaseId: "set_purchaseId",
            get_purchaseId: "get_purchaseId"
        }
    });
    var oX = function() {
        cX.call(this);
        this.set_realm(0);
        this.set_authToken("")
    };
    nt["agario.proto.Realm_upgrade_request"] = oX;
    oX.__name__ = ["agario", "proto", "Realm_upgrade_request"];
    oX.__super__ = cX;
    oX.prototype = lP(cX.prototype, {
        realm: null,
        setRealm: function(i) {
            this.set_realm(i);
            return this
        },
        set_realm: function(i) {
            return this.realm = i
        },
        get_realm: function() {
            return this.realm
        },
        authToken: null,
        setAuthToken: function(i) {
            this.set_authToken(i);
            return this
        },
        set_authToken: function(i) {
            return this.authToken = i
        },
        get_authToken: function() {
            return this.authToken
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 0, 1);
            kD.write__TYPE_ENUM(i, this.get_realm());
            kD.writeTag(i, 2, 2);
            kD.write__TYPE_STRING(i, this.get_authToken());
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("realm", this.get_realm());
            i("authToken", this.get_authToken())
        },
        readFromSlice: function(i1, qY) {
            var i2 = 0;
            var q = 0;
            while (i1.buf.totlen - i1.buf.pos > qY) {
                var i = fP.read__TYPE_UINT32(i1);
                var js = i >> 3;
                switch (js) {
                    case 1:
                        if (i2 != 0) {
                            throw new nM(new lA("Bad data format: Realm_upgrade_request.realm cannot be set twice."))
                        }++i2;
                        this.set_realm(fP.read__TYPE_ENUM(i1));
                        break;
                    case 2:
                        if (q != 0) {
                            throw new nM(new lA("Bad data format: Realm_upgrade_request.authToken cannot be set twice."))
                        }++q;
                        this.set_authToken(fP.read__TYPE_STRING(i1));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, i1, i)
                }
            }
        },
        __class__: oX,
        __properties__: {
            set_authToken: "set_authToken",
            get_authToken: "get_authToken",
            set_realm: "set_realm",
            get_realm: "get_realm"
        }
    });
    var dS = function() {
        cX.call(this);
        this.set_realm(0);
        this.set_displayName("");
        this.set_rewardWasHandedOut(false);
        this.set_userWallet([])
    };
    nt["agario.proto.Realm_upgrade_response"] = dS;
    dS.__name__ = ["agario", "proto", "Realm_upgrade_response"];
    dS.__super__ = cX;
    dS.prototype = lP(cX.prototype, {
        realm: null,
        setRealm: function(i) {
            this.set_realm(i);
            return this
        },
        set_realm: function(i) {
            return this.realm = i
        },
        get_realm: function() {
            return this.realm
        },
        displayName: null,
        setDisplayName: function(i) {
            this.set_displayName(i);
            return this
        },
        set_displayName: function(i) {
            return this.displayName = i
        },
        get_displayName: function() {
            return this.displayName
        },
        rewardWasHandedOut: null,
        setRewardWasHandedOut: function(i) {
            this.set_rewardWasHandedOut(i);
            return this
        },
        set_rewardWasHandedOut: function(i) {
            return this.rewardWasHandedOut = i
        },
        get_rewardWasHandedOut: function() {
            return this.rewardWasHandedOut
        },
        userWallet: null,
        setUserWallet: function(i) {
            this.set_userWallet(i);
            return this
        },
        set_userWallet: function(i) {
            return this.userWallet = i
        },
        get_userWallet: function() {
            return this.userWallet
        },
        addUserWallet: function(i) {
            if (this.get_userWallet() == null) {
                this.set_userWallet([i])
            } else {
                this.get_userWallet().push(i)
            }
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 0, 1);
            kD.write__TYPE_ENUM(i, this.get_realm());
            kD.writeTag(i, 2, 2);
            kD.write__TYPE_STRING(i, this.get_displayName());
            kD.writeTag(i, 0, 3);
            kD.write__TYPE_BOOL(i, this.get_rewardWasHandedOut());
            if (this.get_userWallet() != null) {
                var i2 = 0;
                var i1 = this.get_userWallet();
                while (i2 < i1.length) {
                    var q = i1[i2];
                    ++i2;
                    kD.writeTag(i, 2, 4);
                    kD.write__TYPE_MESSAGE(i, q)
                }
            }
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("realm", this.get_realm());
            i("displayName", this.get_displayName());
            i("rewardWasHandedOut", this.get_rewardWasHandedOut());
            if (this.get_userWallet() != null && this.get_userWallet().length > 0) {
                i("userWallet", this.get_userWallet())
            }
        },
        readFromSlice: function(q, qZ) {
            var i2 = 0;
            var js = 0;
            var i1 = 0;
            while (q.buf.totlen - q.buf.pos > qZ) {
                var i = fP.read__TYPE_UINT32(q);
                var qY = i >> 3;
                switch (qY) {
                    case 1:
                        if (i2 != 0) {
                            throw new nM(new lA("Bad data format: Realm_upgrade_response.realm cannot be set twice."))
                        }++i2;
                        this.set_realm(fP.read__TYPE_ENUM(q));
                        break;
                    case 2:
                        if (js != 0) {
                            throw new nM(new lA("Bad data format: Realm_upgrade_response.displayName cannot be set twice."))
                        }++js;
                        this.set_displayName(fP.read__TYPE_STRING(q));
                        break;
                    case 3:
                        if (i1 != 0) {
                            throw new nM(new lA("Bad data format: Realm_upgrade_response.rewardWasHandedOut cannot be set twice."))
                        }++i1;
                        this.set_rewardWasHandedOut(fP.read__TYPE_BOOL(q));
                        break;
                    case 4:
                        if (this.get_userWallet() == null) {
                            this.set_userWallet([])
                        }
                        this.get_userWallet().push(fP.read__TYPE_MESSAGE(q, new ja()));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q, i)
                }
            }
        },
        __class__: dS,
        __properties__: {
            set_userWallet: "set_userWallet",
            get_userWallet: "get_userWallet",
            set_rewardWasHandedOut: "set_rewardWasHandedOut",
            get_rewardWasHandedOut: "get_rewardWasHandedOut",
            set_displayName: "set_displayName",
            get_displayName: "get_displayName",
            set_realm: "set_realm",
            get_realm: "get_realm"
        }
    });
    var o3 = function() {
        this.hasField__0 = 0;
        cX.call(this);
        this.set_reconnectWith(0)
    };
    nt["agario.proto.Reconnect"] = o3;
    o3.__name__ = ["agario", "proto", "Reconnect"];
    o3.__super__ = cX;
    o3.prototype = lP(cX.prototype, {
        host: null,
        setHost: function(i) {
            this.set_host(i);
            return this
        },
        clearHost: function() {
            this.set_host(null)
        },
        hasHost: function() {
            return this.get_host() != null
        },
        set_host: function(i) {
            return this.host = i
        },
        get_host: function() {
            return this.host
        },
        tcpPort: null,
        setTcpPort: function(i) {
            this.set_tcpPort(i);
            return this
        },
        hasField__0: null,
        clearTcpPort: function() {
            this.hasField__0 = this.hasField__0 & -2;
            this.set_tcpPort(0)
        },
        hasTcpPort: function() {
            return (this.hasField__0 & 1) != 0
        },
        set_tcpPort: function(i) {
            this.hasField__0 = this.hasField__0 | 1;
            return this.tcpPort = i
        },
        get_tcpPort: function() {
            return this.tcpPort
        },
        reconnectWith: null,
        setReconnectWith: function(i) {
            this.set_reconnectWith(i);
            return this
        },
        set_reconnectWith: function(i) {
            return this.reconnectWith = i
        },
        get_reconnectWith: function() {
            return this.reconnectWith
        },
        connectToken: null,
        setConnectToken: function(i) {
            this.set_connectToken(i);
            return this
        },
        clearConnectToken: function() {
            this.set_connectToken(null)
        },
        hasConnectToken: function() {
            return this.get_connectToken() != null
        },
        set_connectToken: function(i) {
            return this.connectToken = i
        },
        get_connectToken: function() {
            return this.connectToken
        },
        writeToBuffer: function(i) {
            if (this.get_host() != null) {
                kD.writeTag(i, 2, 1);
                kD.write__TYPE_STRING(i, this.get_host())
            }
            if ((this.hasField__0 & 1) != 0) {
                kD.writeTag(i, 0, 2);
                kD.write__TYPE_UINT32(i, this.get_tcpPort())
            }
            kD.writeTag(i, 0, 3);
            kD.write__TYPE_ENUM(i, this.get_reconnectWith());
            if (this.get_connectToken() != null) {
                kD.writeTag(i, 2, 4);
                kD.write__TYPE_STRING(i, this.get_connectToken())
            }
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            if (this.get_host() != null) {
                i("host", this.get_host())
            }
            if ((this.hasField__0 & 1) != 0) {
                i("tcpPort", this.get_tcpPort())
            }
            i("reconnectWith", this.get_reconnectWith());
            if (this.get_connectToken() != null) {
                i("connectToken", this.get_connectToken())
            }
        },
        readFromSlice: function(i1, q0) {
            var q = 0;
            var i2 = 0;
            var qY = 0;
            var js = 0;
            while (i1.buf.totlen - i1.buf.pos > q0) {
                var i = fP.read__TYPE_UINT32(i1);
                var qZ = i >> 3;
                switch (qZ) {
                    case 1:
                        if (q != 0) {
                            throw new nM(new lA("Bad data format: Reconnect.host cannot be set twice."))
                        }++q;
                        this.set_host(fP.read__TYPE_STRING(i1));
                        break;
                    case 2:
                        if (i2 != 0) {
                            throw new nM(new lA("Bad data format: Reconnect.tcpPort cannot be set twice."))
                        }++i2;
                        this.set_tcpPort(fP.read__TYPE_UINT32(i1));
                        break;
                    case 3:
                        if (qY != 0) {
                            throw new nM(new lA("Bad data format: Reconnect.reconnectWith cannot be set twice."))
                        }++qY;
                        this.set_reconnectWith(fP.read__TYPE_ENUM(i1));
                        break;
                    case 4:
                        if (js != 0) {
                            throw new nM(new lA("Bad data format: Reconnect.connectToken cannot be set twice."))
                        }++js;
                        this.set_connectToken(fP.read__TYPE_STRING(i1));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, i1, i)
                }
            }
        },
        __class__: o3,
        __properties__: {
            set_connectToken: "set_connectToken",
            get_connectToken: "get_connectToken",
            set_reconnectWith: "set_reconnectWith",
            get_reconnectWith: "get_reconnectWith",
            set_tcpPort: "set_tcpPort",
            get_tcpPort: "get_tcpPort",
            set_host: "set_host",
            get_host: "get_host"
        }
    });
    var jV = function() {
        cX.call(this);
        this.set_type(0)
    };
    nt["agario.proto.Req"] = jV;
    jV.__name__ = ["agario", "proto", "Req"];
    jV.__super__ = cX;
    jV.prototype = lP(cX.prototype, {
        type: null,
        setType: function(i) {
            this.set_type(i);
            return this
        },
        set_type: function(i) {
            return this.type = i
        },
        get_type: function() {
            return this.type
        },
        loginRequestField: null,
        setLoginRequestField: function(i) {
            this.set_loginRequestField(i);
            return this
        },
        clearLoginRequestField: function() {
            this.set_loginRequestField(null)
        },
        hasLoginRequestField: function() {
            return this.get_loginRequestField() != null
        },
        set_loginRequestField: function(i) {
            return this.loginRequestField = i
        },
        get_loginRequestField: function() {
            return this.loginRequestField
        },
        loginResponseField: null,
        setLoginResponseField: function(i) {
            this.set_loginResponseField(i);
            return this
        },
        clearLoginResponseField: function() {
            this.set_loginResponseField(null)
        },
        hasLoginResponseField: function() {
            return this.get_loginResponseField() != null
        },
        set_loginResponseField: function(i) {
            return this.loginResponseField = i
        },
        get_loginResponseField: function() {
            return this.loginResponseField
        },
        realmUpgradeRequestField: null,
        setRealmUpgradeRequestField: function(i) {
            this.set_realmUpgradeRequestField(i);
            return this
        },
        clearRealmUpgradeRequestField: function() {
            this.set_realmUpgradeRequestField(null)
        },
        hasRealmUpgradeRequestField: function() {
            return this.get_realmUpgradeRequestField() != null
        },
        set_realmUpgradeRequestField: function(i) {
            return this.realmUpgradeRequestField = i
        },
        get_realmUpgradeRequestField: function() {
            return this.realmUpgradeRequestField
        },
        realmUpgradeResponseField: null,
        setRealmUpgradeResponseField: function(i) {
            this.set_realmUpgradeResponseField(i);
            return this
        },
        clearRealmUpgradeResponseField: function() {
            this.set_realmUpgradeResponseField(null)
        },
        hasRealmUpgradeResponseField: function() {
            return this.get_realmUpgradeResponseField() != null
        },
        set_realmUpgradeResponseField: function(i) {
            return this.realmUpgradeResponseField = i
        },
        get_realmUpgradeResponseField: function() {
            return this.realmUpgradeResponseField
        },
        connectRequestField: null,
        setConnectRequestField: function(i) {
            this.set_connectRequestField(i);
            return this
        },
        clearConnectRequestField: function() {
            this.set_connectRequestField(null)
        },
        hasConnectRequestField: function() {
            return this.get_connectRequestField() != null
        },
        set_connectRequestField: function(i) {
            return this.connectRequestField = i
        },
        get_connectRequestField: function() {
            return this.connectRequestField
        },
        connectResponseField: null,
        setConnectResponseField: function(i) {
            this.set_connectResponseField(i);
            return this
        },
        clearConnectResponseField: function() {
            this.set_connectResponseField(null)
        },
        hasConnectResponseField: function() {
            return this.get_connectResponseField() != null
        },
        set_connectResponseField: function(i) {
            return this.connectResponseField = i
        },
        get_connectResponseField: function() {
            return this.connectResponseField
        },
        disconnectField: null,
        setDisconnectField: function(i) {
            this.set_disconnectField(i);
            return this
        },
        clearDisconnectField: function() {
            this.set_disconnectField(null)
        },
        hasDisconnectField: function() {
            return this.get_disconnectField() != null
        },
        set_disconnectField: function(i) {
            return this.disconnectField = i
        },
        get_disconnectField: function() {
            return this.disconnectField
        },
        reconnectField: null,
        setReconnectField: function(i) {
            this.set_reconnectField(i);
            return this
        },
        clearReconnectField: function() {
            this.set_reconnectField(null)
        },
        hasReconnectField: function() {
            return this.get_reconnectField() != null
        },
        set_reconnectField: function(i) {
            return this.reconnectField = i
        },
        get_reconnectField: function() {
            return this.reconnectField
        },
        pingField: null,
        setPingField: function(i) {
            this.set_pingField(i);
            return this
        },
        clearPingField: function() {
            this.set_pingField(null)
        },
        hasPingField: function() {
            return this.get_pingField() != null
        },
        set_pingField: function(i) {
            return this.pingField = i
        },
        get_pingField: function() {
            return this.pingField
        },
        pongField: null,
        setPongField: function(i) {
            this.set_pongField(i);
            return this
        },
        clearPongField: function() {
            this.set_pongField(null)
        },
        hasPongField: function() {
            return this.get_pongField() != null
        },
        set_pongField: function(i) {
            return this.pongField = i
        },
        get_pongField: function() {
            return this.pongField
        },
        udpHandshakeField: null,
        setUdpHandshakeField: function(i) {
            this.set_udpHandshakeField(i);
            return this
        },
        clearUdpHandshakeField: function() {
            this.set_udpHandshakeField(null)
        },
        hasUdpHandshakeField: function() {
            return this.get_udpHandshakeField() != null
        },
        set_udpHandshakeField: function(i) {
            return this.udpHandshakeField = i
        },
        get_udpHandshakeField: function() {
            return this.udpHandshakeField
        },
        configurationChangeField: null,
        setConfigurationChangeField: function(i) {
            this.set_configurationChangeField(i);
            return this
        },
        clearConfigurationChangeField: function() {
            this.set_configurationChangeField(null)
        },
        hasConfigurationChangeField: function() {
            return this.get_configurationChangeField() != null
        },
        set_configurationChangeField: function(i) {
            return this.configurationChangeField = i
        },
        get_configurationChangeField: function() {
            return this.configurationChangeField
        },
        serverGoingOfflineField: null,
        setServerGoingOfflineField: function(i) {
            this.set_serverGoingOfflineField(i);
            return this
        },
        clearServerGoingOfflineField: function() {
            this.set_serverGoingOfflineField(null)
        },
        hasServerGoingOfflineField: function() {
            return this.get_serverGoingOfflineField() != null
        },
        set_serverGoingOfflineField: function(i) {
            return this.serverGoingOfflineField = i
        },
        get_serverGoingOfflineField: function() {
            return this.serverGoingOfflineField
        },
        enterGameField: null,
        setEnterGameField: function(i) {
            this.set_enterGameField(i);
            return this
        },
        clearEnterGameField: function() {
            this.set_enterGameField(null)
        },
        hasEnterGameField: function() {
            return this.get_enterGameField() != null
        },
        set_enterGameField: function(i) {
            return this.enterGameField = i
        },
        get_enterGameField: function() {
            return this.enterGameField
        },
        gameJoinedField: null,
        setGameJoinedField: function(i) {
            this.set_gameJoinedField(i);
            return this
        },
        clearGameJoinedField: function() {
            this.set_gameJoinedField(null)
        },
        hasGameJoinedField: function() {
            return this.get_gameJoinedField() != null
        },
        set_gameJoinedField: function(i) {
            return this.gameJoinedField = i
        },
        get_gameJoinedField: function() {
            return this.gameJoinedField
        },
        enterLobbyField: null,
        setEnterLobbyField: function(i) {
            this.set_enterLobbyField(i);
            return this
        },
        clearEnterLobbyField: function() {
            this.set_enterLobbyField(null)
        },
        hasEnterLobbyField: function() {
            return this.get_enterLobbyField() != null
        },
        set_enterLobbyField: function(i) {
            return this.enterLobbyField = i
        },
        get_enterLobbyField: function() {
            return this.enterLobbyField
        },
        directionVectorField: null,
        setDirectionVectorField: function(i) {
            this.set_directionVectorField(i);
            return this
        },
        clearDirectionVectorField: function() {
            this.set_directionVectorField(null)
        },
        hasDirectionVectorField: function() {
            return this.get_directionVectorField() != null
        },
        set_directionVectorField: function(i) {
            return this.directionVectorField = i
        },
        get_directionVectorField: function() {
            return this.directionVectorField
        },
        leaderboardField: null,
        setLeaderboardField: function(i) {
            this.set_leaderboardField(i);
            return this
        },
        clearLeaderboardField: function() {
            this.set_leaderboardField(null)
        },
        hasLeaderboardField: function() {
            return this.get_leaderboardField() != null
        },
        set_leaderboardField: function(i) {
            return this.leaderboardField = i
        },
        get_leaderboardField: function() {
            return this.leaderboardField
        },
        arenaStateField: null,
        setArenaStateField: function(i) {
            this.set_arenaStateField(i);
            return this
        },
        clearArenaStateField: function() {
            this.set_arenaStateField(null)
        },
        hasArenaStateField: function() {
            return this.get_arenaStateField() != null
        },
        set_arenaStateField: function(i) {
            return this.arenaStateField = i
        },
        get_arenaStateField: function() {
            return this.arenaStateField
        },
        gameOverField: null,
        setGameOverField: function(i) {
            this.set_gameOverField(i);
            return this
        },
        clearGameOverField: function() {
            this.set_gameOverField(null)
        },
        hasGameOverField: function() {
            return this.get_gameOverField() != null
        },
        set_gameOverField: function(i) {
            return this.gameOverField = i
        },
        get_gameOverField: function() {
            return this.gameOverField
        },
        softPurchaseRequestField: null,
        setSoftPurchaseRequestField: function(i) {
            this.set_softPurchaseRequestField(i);
            return this
        },
        clearSoftPurchaseRequestField: function() {
            this.set_softPurchaseRequestField(null)
        },
        hasSoftPurchaseRequestField: function() {
            return this.get_softPurchaseRequestField() != null
        },
        set_softPurchaseRequestField: function(i) {
            return this.softPurchaseRequestField = i
        },
        get_softPurchaseRequestField: function() {
            return this.softPurchaseRequestField
        },
        softPurchaseResponseField: null,
        setSoftPurchaseResponseField: function(i) {
            this.set_softPurchaseResponseField(i);
            return this
        },
        clearSoftPurchaseResponseField: function() {
            this.set_softPurchaseResponseField(null)
        },
        hasSoftPurchaseResponseField: function() {
            return this.get_softPurchaseResponseField() != null
        },
        set_softPurchaseResponseField: function(i) {
            return this.softPurchaseResponseField = i
        },
        get_softPurchaseResponseField: function() {
            return this.softPurchaseResponseField
        },
        appleInappPurchaseRequestField: null,
        setAppleInappPurchaseRequestField: function(i) {
            this.set_appleInappPurchaseRequestField(i);
            return this
        },
        clearAppleInappPurchaseRequestField: function() {
            this.set_appleInappPurchaseRequestField(null)
        },
        hasAppleInappPurchaseRequestField: function() {
            return this.get_appleInappPurchaseRequestField() != null
        },
        set_appleInappPurchaseRequestField: function(i) {
            return this.appleInappPurchaseRequestField = i
        },
        get_appleInappPurchaseRequestField: function() {
            return this.appleInappPurchaseRequestField
        },
        googleInappPurchaseRequestField: null,
        setGoogleInappPurchaseRequestField: function(i) {
            this.set_googleInappPurchaseRequestField(i);
            return this
        },
        clearGoogleInappPurchaseRequestField: function() {
            this.set_googleInappPurchaseRequestField(null)
        },
        hasGoogleInappPurchaseRequestField: function() {
            return this.get_googleInappPurchaseRequestField() != null
        },
        set_googleInappPurchaseRequestField: function(i) {
            return this.googleInappPurchaseRequestField = i
        },
        get_googleInappPurchaseRequestField: function() {
            return this.googleInappPurchaseRequestField
        },
        inappPurchaseResponseField: null,
        setInappPurchaseResponseField: function(i) {
            this.set_inappPurchaseResponseField(i);
            return this
        },
        clearInappPurchaseResponseField: function() {
            this.set_inappPurchaseResponseField(null)
        },
        hasInappPurchaseResponseField: function() {
            return this.get_inappPurchaseResponseField() != null
        },
        set_inappPurchaseResponseField: function(i) {
            return this.inappPurchaseResponseField = i
        },
        get_inappPurchaseResponseField: function() {
            return this.inappPurchaseResponseField
        },
        walletUpdatesField: null,
        setWalletUpdatesField: function(i) {
            this.set_walletUpdatesField(i);
            return this
        },
        clearWalletUpdatesField: function() {
            this.set_walletUpdatesField(null)
        },
        hasWalletUpdatesField: function() {
            return this.get_walletUpdatesField() != null
        },
        set_walletUpdatesField: function(i) {
            return this.walletUpdatesField = i
        },
        get_walletUpdatesField: function() {
            return this.walletUpdatesField
        },
        purchaseWalletUpdatesField: null,
        setPurchaseWalletUpdatesField: function(i) {
            this.set_purchaseWalletUpdatesField(i);
            return this
        },
        clearPurchaseWalletUpdatesField: function() {
            this.set_purchaseWalletUpdatesField(null)
        },
        hasPurchaseWalletUpdatesField: function() {
            return this.get_purchaseWalletUpdatesField() != null
        },
        set_purchaseWalletUpdatesField: function(i) {
            return this.purchaseWalletUpdatesField = i
        },
        get_purchaseWalletUpdatesField: function() {
            return this.purchaseWalletUpdatesField
        },
        offerBundleRequestField: null,
        setOfferBundleRequestField: function(i) {
            this.set_offerBundleRequestField(i);
            return this
        },
        clearOfferBundleRequestField: function() {
            this.set_offerBundleRequestField(null)
        },
        hasOfferBundleRequestField: function() {
            return this.get_offerBundleRequestField() != null
        },
        set_offerBundleRequestField: function(i) {
            return this.offerBundleRequestField = i
        },
        get_offerBundleRequestField: function() {
            return this.offerBundleRequestField
        },
        offerBundleResponseField: null,
        setOfferBundleResponseField: function(i) {
            this.set_offerBundleResponseField(i);
            return this
        },
        clearOfferBundleResponseField: function() {
            this.set_offerBundleResponseField(null)
        },
        hasOfferBundleResponseField: function() {
            return this.get_offerBundleResponseField() != null
        },
        set_offerBundleResponseField: function(i) {
            return this.offerBundleResponseField = i
        },
        get_offerBundleResponseField: function() {
            return this.offerBundleResponseField
        },
        updateUserSettingsRequestField: null,
        setUpdateUserSettingsRequestField: function(i) {
            this.set_updateUserSettingsRequestField(i);
            return this
        },
        clearUpdateUserSettingsRequestField: function() {
            this.set_updateUserSettingsRequestField(null)
        },
        hasUpdateUserSettingsRequestField: function() {
            return this.get_updateUserSettingsRequestField() != null
        },
        set_updateUserSettingsRequestField: function(i) {
            return this.updateUserSettingsRequestField = i
        },
        get_updateUserSettingsRequestField: function() {
            return this.updateUserSettingsRequestField
        },
        updateUserSettingsResponseField: null,
        setUpdateUserSettingsResponseField: function(i) {
            this.set_updateUserSettingsResponseField(i);
            return this
        },
        clearUpdateUserSettingsResponseField: function() {
            this.set_updateUserSettingsResponseField(null)
        },
        hasUpdateUserSettingsResponseField: function() {
            return this.get_updateUserSettingsResponseField() != null
        },
        set_updateUserSettingsResponseField: function(i) {
            return this.updateUserSettingsResponseField = i
        },
        get_updateUserSettingsResponseField: function() {
            return this.updateUserSettingsResponseField
        },
        serverToServerGameOverWrapperField: null,
        setServerToServerGameOverWrapperField: function(i) {
            this.set_serverToServerGameOverWrapperField(i);
            return this
        },
        clearServerToServerGameOverWrapperField: function() {
            this.set_serverToServerGameOverWrapperField(null)
        },
        hasServerToServerGameOverWrapperField: function() {
            return this.get_serverToServerGameOverWrapperField() != null
        },
        set_serverToServerGameOverWrapperField: function(i) {
            return this.serverToServerGameOverWrapperField = i
        },
        get_serverToServerGameOverWrapperField: function() {
            return this.serverToServerGameOverWrapperField
        },
        claimGiftsRequestField: null,
        setClaimGiftsRequestField: function(i) {
            this.set_claimGiftsRequestField(i);
            return this
        },
        clearClaimGiftsRequestField: function() {
            this.set_claimGiftsRequestField(null)
        },
        hasClaimGiftsRequestField: function() {
            return this.get_claimGiftsRequestField() != null
        },
        set_claimGiftsRequestField: function(i) {
            return this.claimGiftsRequestField = i
        },
        get_claimGiftsRequestField: function() {
            return this.claimGiftsRequestField
        },
        claimGiftsResponseField: null,
        setClaimGiftsResponseField: function(i) {
            this.set_claimGiftsResponseField(i);
            return this
        },
        clearClaimGiftsResponseField: function() {
            this.set_claimGiftsResponseField(null)
        },
        hasClaimGiftsResponseField: function() {
            return this.get_claimGiftsResponseField() != null
        },
        set_claimGiftsResponseField: function(i) {
            return this.claimGiftsResponseField = i
        },
        get_claimGiftsResponseField: function() {
            return this.claimGiftsResponseField
        },
        sendGiftsField: null,
        setSendGiftsField: function(i) {
            this.set_sendGiftsField(i);
            return this
        },
        clearSendGiftsField: function() {
            this.set_sendGiftsField(null)
        },
        hasSendGiftsField: function() {
            return this.get_sendGiftsField() != null
        },
        set_sendGiftsField: function(i) {
            return this.sendGiftsField = i
        },
        get_sendGiftsField: function() {
            return this.sendGiftsField
        },
        consumeRequestsField: null,
        setConsumeRequestsField: function(i) {
            this.set_consumeRequestsField(i);
            return this
        },
        clearConsumeRequestsField: function() {
            this.set_consumeRequestsField(null)
        },
        hasConsumeRequestsField: function() {
            return this.get_consumeRequestsField() != null
        },
        set_consumeRequestsField: function(i) {
            return this.consumeRequestsField = i
        },
        get_consumeRequestsField: function() {
            return this.consumeRequestsField
        },
        requestGiftsField: null,
        setRequestGiftsField: function(i) {
            this.set_requestGiftsField(i);
            return this
        },
        clearRequestGiftsField: function() {
            this.set_requestGiftsField(null)
        },
        hasRequestGiftsField: function() {
            return this.get_requestGiftsField() != null
        },
        set_requestGiftsField: function(i) {
            return this.requestGiftsField = i
        },
        get_requestGiftsField: function() {
            return this.requestGiftsField
        },
        activateTimedEventRequestField: null,
        setActivateTimedEventRequestField: function(i) {
            this.set_activateTimedEventRequestField(i);
            return this
        },
        clearActivateTimedEventRequestField: function() {
            this.set_activateTimedEventRequestField(null)
        },
        hasActivateTimedEventRequestField: function() {
            return this.get_activateTimedEventRequestField() != null
        },
        set_activateTimedEventRequestField: function(i) {
            return this.activateTimedEventRequestField = i
        },
        get_activateTimedEventRequestField: function() {
            return this.activateTimedEventRequestField
        },
        activateTimedEventResponseField: null,
        setActivateTimedEventResponseField: function(i) {
            this.set_activateTimedEventResponseField(i);
            return this
        },
        clearActivateTimedEventResponseField: function() {
            this.set_activateTimedEventResponseField(null)
        },
        hasActivateTimedEventResponseField: function() {
            return this.get_activateTimedEventResponseField() != null
        },
        set_activateTimedEventResponseField: function(i) {
            return this.activateTimedEventResponseField = i
        },
        get_activateTimedEventResponseField: function() {
            return this.activateTimedEventResponseField
        },
        activateBoostRequestField: null,
        setActivateBoostRequestField: function(i) {
            this.set_activateBoostRequestField(i);
            return this
        },
        clearActivateBoostRequestField: function() {
            this.set_activateBoostRequestField(null)
        },
        hasActivateBoostRequestField: function() {
            return this.get_activateBoostRequestField() != null
        },
        set_activateBoostRequestField: function(i) {
            return this.activateBoostRequestField = i
        },
        get_activateBoostRequestField: function() {
            return this.activateBoostRequestField
        },
        activateBoostResponseField: null,
        setActivateBoostResponseField: function(i) {
            this.set_activateBoostResponseField(i);
            return this
        },
        clearActivateBoostResponseField: function() {
            this.set_activateBoostResponseField(null)
        },
        hasActivateBoostResponseField: function() {
            return this.get_activateBoostResponseField() != null
        },
        set_activateBoostResponseField: function(i) {
            return this.activateBoostResponseField = i
        },
        get_activateBoostResponseField: function() {
            return this.activateBoostResponseField
        },
        activateQuestRequestField: null,
        setActivateQuestRequestField: function(i) {
            this.set_activateQuestRequestField(i);
            return this
        },
        clearActivateQuestRequestField: function() {
            this.set_activateQuestRequestField(null)
        },
        hasActivateQuestRequestField: function() {
            return this.get_activateQuestRequestField() != null
        },
        set_activateQuestRequestField: function(i) {
            return this.activateQuestRequestField = i
        },
        get_activateQuestRequestField: function() {
            return this.activateQuestRequestField
        },
        activateQuestResponseField: null,
        setActivateQuestResponseField: function(i) {
            this.set_activateQuestResponseField(i);
            return this
        },
        clearActivateQuestResponseField: function() {
            this.set_activateQuestResponseField(null)
        },
        hasActivateQuestResponseField: function() {
            return this.get_activateQuestResponseField() != null
        },
        set_activateQuestResponseField: function(i) {
            return this.activateQuestResponseField = i
        },
        get_activateQuestResponseField: function() {
            return this.activateQuestResponseField
        },
        userTimedEventUpdatesField: null,
        setUserTimedEventUpdatesField: function(i) {
            this.set_userTimedEventUpdatesField(i);
            return this
        },
        clearUserTimedEventUpdatesField: function() {
            this.set_userTimedEventUpdatesField(null)
        },
        hasUserTimedEventUpdatesField: function() {
            return this.get_userTimedEventUpdatesField() != null
        },
        set_userTimedEventUpdatesField: function(i) {
            return this.userTimedEventUpdatesField = i
        },
        get_userTimedEventUpdatesField: function() {
            return this.userTimedEventUpdatesField
        },
        openPotionForProductRequestField: null,
        setOpenPotionForProductRequestField: function(i) {
            this.set_openPotionForProductRequestField(i);
            return this
        },
        clearOpenPotionForProductRequestField: function() {
            this.set_openPotionForProductRequestField(null)
        },
        hasOpenPotionForProductRequestField: function() {
            return this.get_openPotionForProductRequestField() != null
        },
        set_openPotionForProductRequestField: function(i) {
            return this.openPotionForProductRequestField = i
        },
        get_openPotionForProductRequestField: function() {
            return this.openPotionForProductRequestField
        },
        openPotionForProductResponseField: null,
        setOpenPotionForProductResponseField: function(i) {
            this.set_openPotionForProductResponseField(i);
            return this
        },
        clearOpenPotionForProductResponseField: function() {
            this.set_openPotionForProductResponseField(null)
        },
        hasOpenPotionForProductResponseField: function() {
            return this.get_openPotionForProductResponseField() != null
        },
        set_openPotionForProductResponseField: function(i) {
            return this.openPotionForProductResponseField = i
        },
        get_openPotionForProductResponseField: function() {
            return this.openPotionForProductResponseField
        },
        brewPotionForSlotRequestField: null,
        setBrewPotionForSlotRequestField: function(i) {
            this.set_brewPotionForSlotRequestField(i);
            return this
        },
        clearBrewPotionForSlotRequestField: function() {
            this.set_brewPotionForSlotRequestField(null)
        },
        hasBrewPotionForSlotRequestField: function() {
            return this.get_brewPotionForSlotRequestField() != null
        },
        set_brewPotionForSlotRequestField: function(i) {
            return this.brewPotionForSlotRequestField = i
        },
        get_brewPotionForSlotRequestField: function() {
            return this.brewPotionForSlotRequestField
        },
        brewPotionForSlotResponseField: null,
        setBrewPotionForSlotResponseField: function(i) {
            this.set_brewPotionForSlotResponseField(i);
            return this
        },
        clearBrewPotionForSlotResponseField: function() {
            this.set_brewPotionForSlotResponseField(null)
        },
        hasBrewPotionForSlotResponseField: function() {
            return this.get_brewPotionForSlotResponseField() != null
        },
        set_brewPotionForSlotResponseField: function(i) {
            return this.brewPotionForSlotResponseField = i
        },
        get_brewPotionForSlotResponseField: function() {
            return this.brewPotionForSlotResponseField
        },
        openPotionForSlotRequestField: null,
        setOpenPotionForSlotRequestField: function(i) {
            this.set_openPotionForSlotRequestField(i);
            return this
        },
        clearOpenPotionForSlotRequestField: function() {
            this.set_openPotionForSlotRequestField(null)
        },
        hasOpenPotionForSlotRequestField: function() {
            return this.get_openPotionForSlotRequestField() != null
        },
        set_openPotionForSlotRequestField: function(i) {
            return this.openPotionForSlotRequestField = i
        },
        get_openPotionForSlotRequestField: function() {
            return this.openPotionForSlotRequestField
        },
        openPotionForSlotResponseField: null,
        setOpenPotionForSlotResponseField: function(i) {
            this.set_openPotionForSlotResponseField(i);
            return this
        },
        clearOpenPotionForSlotResponseField: function() {
            this.set_openPotionForSlotResponseField(null)
        },
        hasOpenPotionForSlotResponseField: function() {
            return this.get_openPotionForSlotResponseField() != null
        },
        set_openPotionForSlotResponseField: function(i) {
            return this.openPotionForSlotResponseField = i
        },
        get_openPotionForSlotResponseField: function() {
            return this.openPotionForSlotResponseField
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 0, 1);
            kD.write__TYPE_ENUM(i, this.get_type());
            if (this.get_loginRequestField() != null) {
                kD.writeTag(i, 2, 10);
                kD.write__TYPE_MESSAGE(i, this.get_loginRequestField())
            }
            if (this.get_loginResponseField() != null) {
                kD.writeTag(i, 2, 11);
                kD.write__TYPE_MESSAGE(i, this.get_loginResponseField())
            }
            if (this.get_realmUpgradeRequestField() != null) {
                kD.writeTag(i, 2, 12);
                kD.write__TYPE_MESSAGE(i, this.get_realmUpgradeRequestField())
            }
            if (this.get_realmUpgradeResponseField() != null) {
                kD.writeTag(i, 2, 13);
                kD.write__TYPE_MESSAGE(i, this.get_realmUpgradeResponseField())
            }
            if (this.get_connectRequestField() != null) {
                kD.writeTag(i, 2, 14);
                kD.write__TYPE_MESSAGE(i, this.get_connectRequestField())
            }
            if (this.get_connectResponseField() != null) {
                kD.writeTag(i, 2, 15);
                kD.write__TYPE_MESSAGE(i, this.get_connectResponseField())
            }
            if (this.get_disconnectField() != null) {
                kD.writeTag(i, 2, 20);
                kD.write__TYPE_MESSAGE(i, this.get_disconnectField())
            }
            if (this.get_reconnectField() != null) {
                kD.writeTag(i, 2, 21);
                kD.write__TYPE_MESSAGE(i, this.get_reconnectField())
            }
            if (this.get_pingField() != null) {
                kD.writeTag(i, 2, 30);
                kD.write__TYPE_MESSAGE(i, this.get_pingField())
            }
            if (this.get_pongField() != null) {
                kD.writeTag(i, 2, 31);
                kD.write__TYPE_MESSAGE(i, this.get_pongField())
            }
            if (this.get_udpHandshakeField() != null) {
                kD.writeTag(i, 2, 32);
                kD.write__TYPE_MESSAGE(i, this.get_udpHandshakeField())
            }
            if (this.get_configurationChangeField() != null) {
                kD.writeTag(i, 2, 33);
                kD.write__TYPE_MESSAGE(i, this.get_configurationChangeField())
            }
            if (this.get_serverGoingOfflineField() != null) {
                kD.writeTag(i, 2, 34);
                kD.write__TYPE_MESSAGE(i, this.get_serverGoingOfflineField())
            }
            if (this.get_enterGameField() != null) {
                kD.writeTag(i, 2, 40);
                kD.write__TYPE_MESSAGE(i, this.get_enterGameField())
            }
            if (this.get_gameJoinedField() != null) {
                kD.writeTag(i, 2, 41);
                kD.write__TYPE_MESSAGE(i, this.get_gameJoinedField())
            }
            if (this.get_enterLobbyField() != null) {
                kD.writeTag(i, 2, 43);
                kD.write__TYPE_MESSAGE(i, this.get_enterLobbyField())
            }
            if (this.get_directionVectorField() != null) {
                kD.writeTag(i, 2, 50);
                kD.write__TYPE_MESSAGE(i, this.get_directionVectorField())
            }
            if (this.get_leaderboardField() != null) {
                kD.writeTag(i, 2, 60);
                kD.write__TYPE_MESSAGE(i, this.get_leaderboardField())
            }
            if (this.get_arenaStateField() != null) {
                kD.writeTag(i, 2, 61);
                kD.write__TYPE_MESSAGE(i, this.get_arenaStateField())
            }
            if (this.get_gameOverField() != null) {
                kD.writeTag(i, 2, 62);
                kD.write__TYPE_MESSAGE(i, this.get_gameOverField())
            }
            if (this.get_softPurchaseRequestField() != null) {
                kD.writeTag(i, 2, 70);
                kD.write__TYPE_MESSAGE(i, this.get_softPurchaseRequestField())
            }
            if (this.get_softPurchaseResponseField() != null) {
                kD.writeTag(i, 2, 71);
                kD.write__TYPE_MESSAGE(i, this.get_softPurchaseResponseField())
            }
            if (this.get_appleInappPurchaseRequestField() != null) {
                kD.writeTag(i, 2, 72);
                kD.write__TYPE_MESSAGE(i, this.get_appleInappPurchaseRequestField())
            }
            if (this.get_googleInappPurchaseRequestField() != null) {
                kD.writeTag(i, 2, 73);
                kD.write__TYPE_MESSAGE(i, this.get_googleInappPurchaseRequestField())
            }
            if (this.get_inappPurchaseResponseField() != null) {
                kD.writeTag(i, 2, 74);
                kD.write__TYPE_MESSAGE(i, this.get_inappPurchaseResponseField())
            }
            if (this.get_walletUpdatesField() != null) {
                kD.writeTag(i, 2, 75);
                kD.write__TYPE_MESSAGE(i, this.get_walletUpdatesField())
            }
            if (this.get_purchaseWalletUpdatesField() != null) {
                kD.writeTag(i, 2, 76);
                kD.write__TYPE_MESSAGE(i, this.get_purchaseWalletUpdatesField())
            }
            if (this.get_offerBundleRequestField() != null) {
                kD.writeTag(i, 2, 77);
                kD.write__TYPE_MESSAGE(i, this.get_offerBundleRequestField())
            }
            if (this.get_offerBundleResponseField() != null) {
                kD.writeTag(i, 2, 78);
                kD.write__TYPE_MESSAGE(i, this.get_offerBundleResponseField())
            }
            if (this.get_updateUserSettingsRequestField() != null) {
                kD.writeTag(i, 2, 80);
                kD.write__TYPE_MESSAGE(i, this.get_updateUserSettingsRequestField())
            }
            if (this.get_updateUserSettingsResponseField() != null) {
                kD.writeTag(i, 2, 81);
                kD.write__TYPE_MESSAGE(i, this.get_updateUserSettingsResponseField())
            }
            if (this.get_serverToServerGameOverWrapperField() != null) {
                kD.writeTag(i, 2, 90);
                kD.write__TYPE_MESSAGE(i, this.get_serverToServerGameOverWrapperField())
            }
            if (this.get_claimGiftsRequestField() != null) {
                kD.writeTag(i, 2, 100);
                kD.write__TYPE_MESSAGE(i, this.get_claimGiftsRequestField())
            }
            if (this.get_claimGiftsResponseField() != null) {
                kD.writeTag(i, 2, 101);
                kD.write__TYPE_MESSAGE(i, this.get_claimGiftsResponseField())
            }
            if (this.get_sendGiftsField() != null) {
                kD.writeTag(i, 2, 102);
                kD.write__TYPE_MESSAGE(i, this.get_sendGiftsField())
            }
            if (this.get_consumeRequestsField() != null) {
                kD.writeTag(i, 2, 103);
                kD.write__TYPE_MESSAGE(i, this.get_consumeRequestsField())
            }
            if (this.get_requestGiftsField() != null) {
                kD.writeTag(i, 2, 104);
                kD.write__TYPE_MESSAGE(i, this.get_requestGiftsField())
            }
            if (this.get_activateTimedEventRequestField() != null) {
                kD.writeTag(i, 2, 110);
                kD.write__TYPE_MESSAGE(i, this.get_activateTimedEventRequestField())
            }
            if (this.get_activateTimedEventResponseField() != null) {
                kD.writeTag(i, 2, 111);
                kD.write__TYPE_MESSAGE(i, this.get_activateTimedEventResponseField())
            }
            if (this.get_activateBoostRequestField() != null) {
                kD.writeTag(i, 2, 112);
                kD.write__TYPE_MESSAGE(i, this.get_activateBoostRequestField())
            }
            if (this.get_activateBoostResponseField() != null) {
                kD.writeTag(i, 2, 113);
                kD.write__TYPE_MESSAGE(i, this.get_activateBoostResponseField())
            }
            if (this.get_activateQuestRequestField() != null) {
                kD.writeTag(i, 2, 114);
                kD.write__TYPE_MESSAGE(i, this.get_activateQuestRequestField())
            }
            if (this.get_activateQuestResponseField() != null) {
                kD.writeTag(i, 2, 115);
                kD.write__TYPE_MESSAGE(i, this.get_activateQuestResponseField())
            }
            if (this.get_userTimedEventUpdatesField() != null) {
                kD.writeTag(i, 2, 116);
                kD.write__TYPE_MESSAGE(i, this.get_userTimedEventUpdatesField())
            }
            if (this.get_openPotionForProductRequestField() != null) {
                kD.writeTag(i, 2, 120);
                kD.write__TYPE_MESSAGE(i, this.get_openPotionForProductRequestField())
            }
            if (this.get_openPotionForProductResponseField() != null) {
                kD.writeTag(i, 2, 121);
                kD.write__TYPE_MESSAGE(i, this.get_openPotionForProductResponseField())
            }
            if (this.get_brewPotionForSlotRequestField() != null) {
                kD.writeTag(i, 2, 122);
                kD.write__TYPE_MESSAGE(i, this.get_brewPotionForSlotRequestField())
            }
            if (this.get_brewPotionForSlotResponseField() != null) {
                kD.writeTag(i, 2, 123);
                kD.write__TYPE_MESSAGE(i, this.get_brewPotionForSlotResponseField())
            }
            if (this.get_openPotionForSlotRequestField() != null) {
                kD.writeTag(i, 2, 124);
                kD.write__TYPE_MESSAGE(i, this.get_openPotionForSlotRequestField())
            }
            if (this.get_openPotionForSlotResponseField() != null) {
                kD.writeTag(i, 2, 125);
                kD.write__TYPE_MESSAGE(i, this.get_openPotionForSlotResponseField())
            }
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("type", this.get_type());
            if (this.get_loginRequestField() != null) {
                i("loginRequestField", this.get_loginRequestField())
            }
            if (this.get_loginResponseField() != null) {
                i("loginResponseField", this.get_loginResponseField())
            }
            if (this.get_realmUpgradeRequestField() != null) {
                i("realmUpgradeRequestField", this.get_realmUpgradeRequestField())
            }
            if (this.get_realmUpgradeResponseField() != null) {
                i("realmUpgradeResponseField", this.get_realmUpgradeResponseField())
            }
            if (this.get_connectRequestField() != null) {
                i("connectRequestField", this.get_connectRequestField())
            }
            if (this.get_connectResponseField() != null) {
                i("connectResponseField", this.get_connectResponseField())
            }
            if (this.get_disconnectField() != null) {
                i("disconnectField", this.get_disconnectField())
            }
            if (this.get_reconnectField() != null) {
                i("reconnectField", this.get_reconnectField())
            }
            if (this.get_pingField() != null) {
                i("pingField", this.get_pingField())
            }
            if (this.get_pongField() != null) {
                i("pongField", this.get_pongField())
            }
            if (this.get_udpHandshakeField() != null) {
                i("udpHandshakeField", this.get_udpHandshakeField())
            }
            if (this.get_configurationChangeField() != null) {
                i("configurationChangeField", this.get_configurationChangeField())
            }
            if (this.get_serverGoingOfflineField() != null) {
                i("serverGoingOfflineField", this.get_serverGoingOfflineField())
            }
            if (this.get_enterGameField() != null) {
                i("enterGameField", this.get_enterGameField())
            }
            if (this.get_gameJoinedField() != null) {
                i("gameJoinedField", this.get_gameJoinedField())
            }
            if (this.get_enterLobbyField() != null) {
                i("enterLobbyField", this.get_enterLobbyField())
            }
            if (this.get_directionVectorField() != null) {
                i("directionVectorField", this.get_directionVectorField())
            }
            if (this.get_leaderboardField() != null) {
                i("leaderboardField", this.get_leaderboardField())
            }
            if (this.get_arenaStateField() != null) {
                i("arenaStateField", this.get_arenaStateField())
            }
            if (this.get_gameOverField() != null) {
                i("gameOverField", this.get_gameOverField())
            }
            if (this.get_softPurchaseRequestField() != null) {
                i("softPurchaseRequestField", this.get_softPurchaseRequestField())
            }
            if (this.get_softPurchaseResponseField() != null) {
                i("softPurchaseResponseField", this.get_softPurchaseResponseField())
            }
            if (this.get_appleInappPurchaseRequestField() != null) {
                i("appleInappPurchaseRequestField", this.get_appleInappPurchaseRequestField())
            }
            if (this.get_googleInappPurchaseRequestField() != null) {
                i("googleInappPurchaseRequestField", this.get_googleInappPurchaseRequestField())
            }
            if (this.get_inappPurchaseResponseField() != null) {
                i("inappPurchaseResponseField", this.get_inappPurchaseResponseField())
            }
            if (this.get_walletUpdatesField() != null) {
                i("walletUpdatesField", this.get_walletUpdatesField())
            }
            if (this.get_purchaseWalletUpdatesField() != null) {
                i("purchaseWalletUpdatesField", this.get_purchaseWalletUpdatesField())
            }
            if (this.get_offerBundleRequestField() != null) {
                i("offerBundleRequestField", this.get_offerBundleRequestField())
            }
            if (this.get_offerBundleResponseField() != null) {
                i("offerBundleResponseField", this.get_offerBundleResponseField())
            }
            if (this.get_updateUserSettingsRequestField() != null) {
                i("updateUserSettingsRequestField", this.get_updateUserSettingsRequestField())
            }
            if (this.get_updateUserSettingsResponseField() != null) {
                i("updateUserSettingsResponseField", this.get_updateUserSettingsResponseField())
            }
            if (this.get_serverToServerGameOverWrapperField() != null) {
                i("serverToServerGameOverWrapperField", this.get_serverToServerGameOverWrapperField())
            }
            if (this.get_claimGiftsRequestField() != null) {
                i("claimGiftsRequestField", this.get_claimGiftsRequestField())
            }
            if (this.get_claimGiftsResponseField() != null) {
                i("claimGiftsResponseField", this.get_claimGiftsResponseField())
            }
            if (this.get_sendGiftsField() != null) {
                i("sendGiftsField", this.get_sendGiftsField())
            }
            if (this.get_consumeRequestsField() != null) {
                i("consumeRequestsField", this.get_consumeRequestsField())
            }
            if (this.get_requestGiftsField() != null) {
                i("requestGiftsField", this.get_requestGiftsField())
            }
            if (this.get_activateTimedEventRequestField() != null) {
                i("activateTimedEventRequestField", this.get_activateTimedEventRequestField())
            }
            if (this.get_activateTimedEventResponseField() != null) {
                i("activateTimedEventResponseField", this.get_activateTimedEventResponseField())
            }
            if (this.get_activateBoostRequestField() != null) {
                i("activateBoostRequestField", this.get_activateBoostRequestField())
            }
            if (this.get_activateBoostResponseField() != null) {
                i("activateBoostResponseField", this.get_activateBoostResponseField())
            }
            if (this.get_activateQuestRequestField() != null) {
                i("activateQuestRequestField", this.get_activateQuestRequestField())
            }
            if (this.get_activateQuestResponseField() != null) {
                i("activateQuestResponseField", this.get_activateQuestResponseField())
            }
            if (this.get_userTimedEventUpdatesField() != null) {
                i("userTimedEventUpdatesField", this.get_userTimedEventUpdatesField())
            }
            if (this.get_openPotionForProductRequestField() != null) {
                i("openPotionForProductRequestField", this.get_openPotionForProductRequestField())
            }
            if (this.get_openPotionForProductResponseField() != null) {
                i("openPotionForProductResponseField", this.get_openPotionForProductResponseField())
            }
            if (this.get_brewPotionForSlotRequestField() != null) {
                i("brewPotionForSlotRequestField", this.get_brewPotionForSlotRequestField())
            }
            if (this.get_brewPotionForSlotResponseField() != null) {
                i("brewPotionForSlotResponseField", this.get_brewPotionForSlotResponseField())
            }
            if (this.get_openPotionForSlotRequestField() != null) {
                i("openPotionForSlotRequestField", this.get_openPotionForSlotRequestField())
            }
            if (this.get_openPotionForSlotResponseField() != null) {
                i("openPotionForSlotResponseField", this.get_openPotionForSlotResponseField())
            }
        },
        readFromSlice: function(i1, q9) {
            var rj = 0;
            var rt = 0;
            var qZ = 0;
            var rp = 0;
            var rB = 0;
            var i = 0;
            var rx = 0;
            var q5 = 0;
            var rc = 0;
            var rC = 0;
            var rq = 0;
            var ro = 0;
            var i2 = 0;
            var ru = 0;
            var rH = 0;
            var rI = 0;
            var rG = 0;
            var rw = 0;
            var q4 = 0;
            var q6 = 0;
            var rK = 0;
            var rm = 0;
            var re = 0;
            var rh = 0;
            var rz = 0;
            var rJ = 0;
            var rE = 0;
            var q8 = 0;
            var ry = 0;
            var js = 0;
            var q7 = 0;
            var rD = 0;
            var rf = 0;
            var q3 = 0;
            var q2 = 0;
            var rs = 0;
            var q = 0;
            var rn = 0;
            var q1 = 0;
            var rL = 0;
            var ri = 0;
            var rv = 0;
            var rr = 0;
            var rb = 0;
            var rg = 0;
            var qY = 0;
            var q0 = 0;
            var rl = 0;
            var ra = 0;
            var rk = 0;
            var rd = 0;
            while (i1.buf.totlen - i1.buf.pos > q9) {
                var rA = fP.read__TYPE_UINT32(i1);
                var rF = rA >> 3;
                switch (rF) {
                    case 1:
                        if (rj != 0) {
                            throw new nM(new lA("Bad data format: Req.type cannot be set twice."))
                        }++rj;
                        this.set_type(fP.read__TYPE_ENUM(i1));
                        break;
                    case 10:
                        if (rt != 0) {
                            throw new nM(new lA("Bad data format: Req.loginRequestField cannot be set twice."))
                        }++rt;
                        this.set_loginRequestField(new ck());
                        fP.read__TYPE_MESSAGE(i1, this.get_loginRequestField());
                        break;
                    case 11:
                        if (qZ != 0) {
                            throw new nM(new lA("Bad data format: Req.loginResponseField cannot be set twice."))
                        }++qZ;
                        this.set_loginResponseField(new ll());
                        fP.read__TYPE_MESSAGE(i1, this.get_loginResponseField());
                        break;
                    case 12:
                        if (rp != 0) {
                            throw new nM(new lA("Bad data format: Req.realmUpgradeRequestField cannot be set twice."))
                        }++rp;
                        this.set_realmUpgradeRequestField(new oX());
                        fP.read__TYPE_MESSAGE(i1, this.get_realmUpgradeRequestField());
                        break;
                    case 13:
                        if (rB != 0) {
                            throw new nM(new lA("Bad data format: Req.realmUpgradeResponseField cannot be set twice."))
                        }++rB;
                        this.set_realmUpgradeResponseField(new dS());
                        fP.read__TYPE_MESSAGE(i1, this.get_realmUpgradeResponseField());
                        break;
                    case 14:
                        if (i != 0) {
                            throw new nM(new lA("Bad data format: Req.connectRequestField cannot be set twice."))
                        }++i;
                        this.set_connectRequestField(new dG());
                        fP.read__TYPE_MESSAGE(i1, this.get_connectRequestField());
                        break;
                    case 15:
                        if (rx != 0) {
                            throw new nM(new lA("Bad data format: Req.connectResponseField cannot be set twice."))
                        }++rx;
                        this.set_connectResponseField(new mS());
                        fP.read__TYPE_MESSAGE(i1, this.get_connectResponseField());
                        break;
                    case 20:
                        if (q5 != 0) {
                            throw new nM(new lA("Bad data format: Req.disconnectField cannot be set twice."))
                        }++q5;
                        this.set_disconnectField(new h4());
                        fP.read__TYPE_MESSAGE(i1, this.get_disconnectField());
                        break;
                    case 21:
                        if (rc != 0) {
                            throw new nM(new lA("Bad data format: Req.reconnectField cannot be set twice."))
                        }++rc;
                        this.set_reconnectField(new o3());
                        fP.read__TYPE_MESSAGE(i1, this.get_reconnectField());
                        break;
                    case 30:
                        if (rC != 0) {
                            throw new nM(new lA("Bad data format: Req.pingField cannot be set twice."))
                        }++rC;
                        this.set_pingField(new bn());
                        fP.read__TYPE_MESSAGE(i1, this.get_pingField());
                        break;
                    case 31:
                        if (rq != 0) {
                            throw new nM(new lA("Bad data format: Req.pongField cannot be set twice."))
                        }++rq;
                        this.set_pongField(new fk());
                        fP.read__TYPE_MESSAGE(i1, this.get_pongField());
                        break;
                    case 32:
                        if (ro != 0) {
                            throw new nM(new lA("Bad data format: Req.udpHandshakeField cannot be set twice."))
                        }++ro;
                        this.set_udpHandshakeField(new lC());
                        fP.read__TYPE_MESSAGE(i1, this.get_udpHandshakeField());
                        break;
                    case 33:
                        if (i2 != 0) {
                            throw new nM(new lA("Bad data format: Req.configurationChangeField cannot be set twice."))
                        }++i2;
                        this.set_configurationChangeField(new bN());
                        fP.read__TYPE_MESSAGE(i1, this.get_configurationChangeField());
                        break;
                    case 34:
                        if (ru != 0) {
                            throw new nM(new lA("Bad data format: Req.serverGoingOfflineField cannot be set twice."))
                        }++ru;
                        this.set_serverGoingOfflineField(new hN());
                        fP.read__TYPE_MESSAGE(i1, this.get_serverGoingOfflineField());
                        break;
                    case 40:
                        if (rH != 0) {
                            throw new nM(new lA("Bad data format: Req.enterGameField cannot be set twice."))
                        }++rH;
                        this.set_enterGameField(new e0());
                        fP.read__TYPE_MESSAGE(i1, this.get_enterGameField());
                        break;
                    case 41:
                        if (rI != 0) {
                            throw new nM(new lA("Bad data format: Req.gameJoinedField cannot be set twice."))
                        }++rI;
                        this.set_gameJoinedField(new Q());
                        fP.read__TYPE_MESSAGE(i1, this.get_gameJoinedField());
                        break;
                    case 43:
                        if (rG != 0) {
                            throw new nM(new lA("Bad data format: Req.enterLobbyField cannot be set twice."))
                        }++rG;
                        this.set_enterLobbyField(new mt());
                        fP.read__TYPE_MESSAGE(i1, this.get_enterLobbyField());
                        break;
                    case 50:
                        if (rw != 0) {
                            throw new nM(new lA("Bad data format: Req.directionVectorField cannot be set twice."))
                        }++rw;
                        this.set_directionVectorField(new cL());
                        fP.read__TYPE_MESSAGE(i1, this.get_directionVectorField());
                        break;
                    case 60:
                        if (q4 != 0) {
                            throw new nM(new lA("Bad data format: Req.leaderboardField cannot be set twice."))
                        }++q4;
                        this.set_leaderboardField(new cz());
                        fP.read__TYPE_MESSAGE(i1, this.get_leaderboardField());
                        break;
                    case 61:
                        if (q6 != 0) {
                            throw new nM(new lA("Bad data format: Req.arenaStateField cannot be set twice."))
                        }++q6;
                        this.set_arenaStateField(new dC());
                        fP.read__TYPE_MESSAGE(i1, this.get_arenaStateField());
                        break;
                    case 62:
                        if (rK != 0) {
                            throw new nM(new lA("Bad data format: Req.gameOverField cannot be set twice."))
                        }++rK;
                        this.set_gameOverField(new jy());
                        fP.read__TYPE_MESSAGE(i1, this.get_gameOverField());
                        break;
                    case 70:
                        if (rm != 0) {
                            throw new nM(new lA("Bad data format: Req.softPurchaseRequestField cannot be set twice."))
                        }++rm;
                        this.set_softPurchaseRequestField(new iQ());
                        fP.read__TYPE_MESSAGE(i1, this.get_softPurchaseRequestField());
                        break;
                    case 71:
                        if (re != 0) {
                            throw new nM(new lA("Bad data format: Req.softPurchaseResponseField cannot be set twice."))
                        }++re;
                        this.set_softPurchaseResponseField(new cB());
                        fP.read__TYPE_MESSAGE(i1, this.get_softPurchaseResponseField());
                        break;
                    case 72:
                        if (rh != 0) {
                            throw new nM(new lA("Bad data format: Req.appleInappPurchaseRequestField cannot be set twice."))
                        }++rh;
                        this.set_appleInappPurchaseRequestField(new nf());
                        fP.read__TYPE_MESSAGE(i1, this.get_appleInappPurchaseRequestField());
                        break;
                    case 73:
                        if (rz != 0) {
                            throw new nM(new lA("Bad data format: Req.googleInappPurchaseRequestField cannot be set twice."))
                        }++rz;
                        this.set_googleInappPurchaseRequestField(new oR());
                        fP.read__TYPE_MESSAGE(i1, this.get_googleInappPurchaseRequestField());
                        break;
                    case 74:
                        if (rJ != 0) {
                            throw new nM(new lA("Bad data format: Req.inappPurchaseResponseField cannot be set twice."))
                        }++rJ;
                        this.set_inappPurchaseResponseField(new eS());
                        fP.read__TYPE_MESSAGE(i1, this.get_inappPurchaseResponseField());
                        break;
                    case 75:
                        if (rE != 0) {
                            throw new nM(new lA("Bad data format: Req.walletUpdatesField cannot be set twice."))
                        }++rE;
                        this.set_walletUpdatesField(new T());
                        fP.read__TYPE_MESSAGE(i1, this.get_walletUpdatesField());
                        break;
                    case 76:
                        if (q8 != 0) {
                            throw new nM(new lA("Bad data format: Req.purchaseWalletUpdatesField cannot be set twice."))
                        }++q8;
                        this.set_purchaseWalletUpdatesField(new p8());
                        fP.read__TYPE_MESSAGE(i1, this.get_purchaseWalletUpdatesField());
                        break;
                    case 77:
                        if (ry != 0) {
                            throw new nM(new lA("Bad data format: Req.offerBundleRequestField cannot be set twice."))
                        }++ry;
                        this.set_offerBundleRequestField(new I());
                        fP.read__TYPE_MESSAGE(i1, this.get_offerBundleRequestField());
                        break;
                    case 78:
                        if (js != 0) {
                            throw new nM(new lA("Bad data format: Req.offerBundleResponseField cannot be set twice."))
                        }++js;
                        this.set_offerBundleResponseField(new qC());
                        fP.read__TYPE_MESSAGE(i1, this.get_offerBundleResponseField());
                        break;
                    case 80:
                        if (q7 != 0) {
                            throw new nM(new lA("Bad data format: Req.updateUserSettingsRequestField cannot be set twice."))
                        }++q7;
                        this.set_updateUserSettingsRequestField(new jE());
                        fP.read__TYPE_MESSAGE(i1, this.get_updateUserSettingsRequestField());
                        break;
                    case 81:
                        if (rD != 0) {
                            throw new nM(new lA("Bad data format: Req.updateUserSettingsResponseField cannot be set twice."))
                        }++rD;
                        this.set_updateUserSettingsResponseField(new jz());
                        fP.read__TYPE_MESSAGE(i1, this.get_updateUserSettingsResponseField());
                        break;
                    case 90:
                        if (rf != 0) {
                            throw new nM(new lA("Bad data format: Req.serverToServerGameOverWrapperField cannot be set twice."))
                        }++rf;
                        this.set_serverToServerGameOverWrapperField(new ov());
                        fP.read__TYPE_MESSAGE(i1, this.get_serverToServerGameOverWrapperField());
                        break;
                    case 100:
                        if (q3 != 0) {
                            throw new nM(new lA("Bad data format: Req.claimGiftsRequestField cannot be set twice."))
                        }++q3;
                        this.set_claimGiftsRequestField(new aI());
                        fP.read__TYPE_MESSAGE(i1, this.get_claimGiftsRequestField());
                        break;
                    case 101:
                        if (q2 != 0) {
                            throw new nM(new lA("Bad data format: Req.claimGiftsResponseField cannot be set twice."))
                        }++q2;
                        this.set_claimGiftsResponseField(new mP());
                        fP.read__TYPE_MESSAGE(i1, this.get_claimGiftsResponseField());
                        break;
                    case 102:
                        if (rs != 0) {
                            throw new nM(new lA("Bad data format: Req.sendGiftsField cannot be set twice."))
                        }++rs;
                        this.set_sendGiftsField(new jZ());
                        fP.read__TYPE_MESSAGE(i1, this.get_sendGiftsField());
                        break;
                    case 103:
                        if (q != 0) {
                            throw new nM(new lA("Bad data format: Req.consumeRequestsField cannot be set twice."))
                        }++q;
                        this.set_consumeRequestsField(new pl());
                        fP.read__TYPE_MESSAGE(i1, this.get_consumeRequestsField());
                        break;
                    case 104:
                        if (rn != 0) {
                            throw new nM(new lA("Bad data format: Req.requestGiftsField cannot be set twice."))
                        }++rn;
                        this.set_requestGiftsField(new be());
                        fP.read__TYPE_MESSAGE(i1, this.get_requestGiftsField());
                        break;
                    case 110:
                        if (q1 != 0) {
                            throw new nM(new lA("Bad data format: Req.activateTimedEventRequestField cannot be set twice."))
                        }++q1;
                        this.set_activateTimedEventRequestField(new oe());
                        fP.read__TYPE_MESSAGE(i1, this.get_activateTimedEventRequestField());
                        break;
                    case 111:
                        if (rL != 0) {
                            throw new nM(new lA("Bad data format: Req.activateTimedEventResponseField cannot be set twice."))
                        }++rL;
                        this.set_activateTimedEventResponseField(new cE());
                        fP.read__TYPE_MESSAGE(i1, this.get_activateTimedEventResponseField());
                        break;
                    case 112:
                        if (ri != 0) {
                            throw new nM(new lA("Bad data format: Req.activateBoostRequestField cannot be set twice."))
                        }++ri;
                        this.set_activateBoostRequestField(new a2());
                        fP.read__TYPE_MESSAGE(i1, this.get_activateBoostRequestField());
                        break;
                    case 113:
                        if (rv != 0) {
                            throw new nM(new lA("Bad data format: Req.activateBoostResponseField cannot be set twice."))
                        }++rv;
                        this.set_activateBoostResponseField(new jR());
                        fP.read__TYPE_MESSAGE(i1, this.get_activateBoostResponseField());
                        break;
                    case 114:
                        if (rr != 0) {
                            throw new nM(new lA("Bad data format: Req.activateQuestRequestField cannot be set twice."))
                        }++rr;
                        this.set_activateQuestRequestField(new jd());
                        fP.read__TYPE_MESSAGE(i1, this.get_activateQuestRequestField());
                        break;
                    case 115:
                        if (rb != 0) {
                            throw new nM(new lA("Bad data format: Req.activateQuestResponseField cannot be set twice."))
                        }++rb;
                        this.set_activateQuestResponseField(new bz());
                        fP.read__TYPE_MESSAGE(i1, this.get_activateQuestResponseField());
                        break;
                    case 116:
                        if (rg != 0) {
                            throw new nM(new lA("Bad data format: Req.userTimedEventUpdatesField cannot be set twice."))
                        }++rg;
                        this.set_userTimedEventUpdatesField(new bH());
                        fP.read__TYPE_MESSAGE(i1, this.get_userTimedEventUpdatesField());
                        break;
                    case 120:
                        if (qY != 0) {
                            throw new nM(new lA("Bad data format: Req.openPotionForProductRequestField cannot be set twice."))
                        }++qY;
                        this.set_openPotionForProductRequestField(new fD());
                        fP.read__TYPE_MESSAGE(i1, this.get_openPotionForProductRequestField());
                        break;
                    case 121:
                        if (q0 != 0) {
                            throw new nM(new lA("Bad data format: Req.openPotionForProductResponseField cannot be set twice."))
                        }++q0;
                        this.set_openPotionForProductResponseField(new gL());
                        fP.read__TYPE_MESSAGE(i1, this.get_openPotionForProductResponseField());
                        break;
                    case 122:
                        if (rl != 0) {
                            throw new nM(new lA("Bad data format: Req.brewPotionForSlotRequestField cannot be set twice."))
                        }++rl;
                        this.set_brewPotionForSlotRequestField(new hc());
                        fP.read__TYPE_MESSAGE(i1, this.get_brewPotionForSlotRequestField());
                        break;
                    case 123:
                        if (ra != 0) {
                            throw new nM(new lA("Bad data format: Req.brewPotionForSlotResponseField cannot be set twice."))
                        }++ra;
                        this.set_brewPotionForSlotResponseField(new dL());
                        fP.read__TYPE_MESSAGE(i1, this.get_brewPotionForSlotResponseField());
                        break;
                    case 124:
                        if (rk != 0) {
                            throw new nM(new lA("Bad data format: Req.openPotionForSlotRequestField cannot be set twice."))
                        }++rk;
                        this.set_openPotionForSlotRequestField(new mg());
                        fP.read__TYPE_MESSAGE(i1, this.get_openPotionForSlotRequestField());
                        break;
                    case 125:
                        if (rd != 0) {
                            throw new nM(new lA("Bad data format: Req.openPotionForSlotResponseField cannot be set twice."))
                        }++rd;
                        this.set_openPotionForSlotResponseField(new dO());
                        fP.read__TYPE_MESSAGE(i1, this.get_openPotionForSlotResponseField());
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, i1, rA)
                }
            }
        },
        __class__: jV,
        __properties__: {
            set_openPotionForSlotResponseField: "set_openPotionForSlotResponseField",
            get_openPotionForSlotResponseField: "get_openPotionForSlotResponseField",
            set_openPotionForSlotRequestField: "set_openPotionForSlotRequestField",
            get_openPotionForSlotRequestField: "get_openPotionForSlotRequestField",
            set_brewPotionForSlotResponseField: "set_brewPotionForSlotResponseField",
            get_brewPotionForSlotResponseField: "get_brewPotionForSlotResponseField",
            set_brewPotionForSlotRequestField: "set_brewPotionForSlotRequestField",
            get_brewPotionForSlotRequestField: "get_brewPotionForSlotRequestField",
            set_openPotionForProductResponseField: "set_openPotionForProductResponseField",
            get_openPotionForProductResponseField: "get_openPotionForProductResponseField",
            set_openPotionForProductRequestField: "set_openPotionForProductRequestField",
            get_openPotionForProductRequestField: "get_openPotionForProductRequestField",
            set_userTimedEventUpdatesField: "set_userTimedEventUpdatesField",
            get_userTimedEventUpdatesField: "get_userTimedEventUpdatesField",
            set_activateQuestResponseField: "set_activateQuestResponseField",
            get_activateQuestResponseField: "get_activateQuestResponseField",
            set_activateQuestRequestField: "set_activateQuestRequestField",
            get_activateQuestRequestField: "get_activateQuestRequestField",
            set_activateBoostResponseField: "set_activateBoostResponseField",
            get_activateBoostResponseField: "get_activateBoostResponseField",
            set_activateBoostRequestField: "set_activateBoostRequestField",
            get_activateBoostRequestField: "get_activateBoostRequestField",
            set_activateTimedEventResponseField: "set_activateTimedEventResponseField",
            get_activateTimedEventResponseField: "get_activateTimedEventResponseField",
            set_activateTimedEventRequestField: "set_activateTimedEventRequestField",
            get_activateTimedEventRequestField: "get_activateTimedEventRequestField",
            set_requestGiftsField: "set_requestGiftsField",
            get_requestGiftsField: "get_requestGiftsField",
            set_consumeRequestsField: "set_consumeRequestsField",
            get_consumeRequestsField: "get_consumeRequestsField",
            set_sendGiftsField: "set_sendGiftsField",
            get_sendGiftsField: "get_sendGiftsField",
            set_claimGiftsResponseField: "set_claimGiftsResponseField",
            get_claimGiftsResponseField: "get_claimGiftsResponseField",
            set_claimGiftsRequestField: "set_claimGiftsRequestField",
            get_claimGiftsRequestField: "get_claimGiftsRequestField",
            set_serverToServerGameOverWrapperField: "set_serverToServerGameOverWrapperField",
            get_serverToServerGameOverWrapperField: "get_serverToServerGameOverWrapperField",
            set_updateUserSettingsResponseField: "set_updateUserSettingsResponseField",
            get_updateUserSettingsResponseField: "get_updateUserSettingsResponseField",
            set_updateUserSettingsRequestField: "set_updateUserSettingsRequestField",
            get_updateUserSettingsRequestField: "get_updateUserSettingsRequestField",
            set_offerBundleResponseField: "set_offerBundleResponseField",
            get_offerBundleResponseField: "get_offerBundleResponseField",
            set_offerBundleRequestField: "set_offerBundleRequestField",
            get_offerBundleRequestField: "get_offerBundleRequestField",
            set_purchaseWalletUpdatesField: "set_purchaseWalletUpdatesField",
            get_purchaseWalletUpdatesField: "get_purchaseWalletUpdatesField",
            set_walletUpdatesField: "set_walletUpdatesField",
            get_walletUpdatesField: "get_walletUpdatesField",
            set_inappPurchaseResponseField: "set_inappPurchaseResponseField",
            get_inappPurchaseResponseField: "get_inappPurchaseResponseField",
            set_googleInappPurchaseRequestField: "set_googleInappPurchaseRequestField",
            get_googleInappPurchaseRequestField: "get_googleInappPurchaseRequestField",
            set_appleInappPurchaseRequestField: "set_appleInappPurchaseRequestField",
            get_appleInappPurchaseRequestField: "get_appleInappPurchaseRequestField",
            set_softPurchaseResponseField: "set_softPurchaseResponseField",
            get_softPurchaseResponseField: "get_softPurchaseResponseField",
            set_softPurchaseRequestField: "set_softPurchaseRequestField",
            get_softPurchaseRequestField: "get_softPurchaseRequestField",
            set_gameOverField: "set_gameOverField",
            get_gameOverField: "get_gameOverField",
            set_arenaStateField: "set_arenaStateField",
            get_arenaStateField: "get_arenaStateField",
            set_leaderboardField: "set_leaderboardField",
            get_leaderboardField: "get_leaderboardField",
            set_directionVectorField: "set_directionVectorField",
            get_directionVectorField: "get_directionVectorField",
            set_enterLobbyField: "set_enterLobbyField",
            get_enterLobbyField: "get_enterLobbyField",
            set_gameJoinedField: "set_gameJoinedField",
            get_gameJoinedField: "get_gameJoinedField",
            set_enterGameField: "set_enterGameField",
            get_enterGameField: "get_enterGameField",
            set_serverGoingOfflineField: "set_serverGoingOfflineField",
            get_serverGoingOfflineField: "get_serverGoingOfflineField",
            set_configurationChangeField: "set_configurationChangeField",
            get_configurationChangeField: "get_configurationChangeField",
            set_udpHandshakeField: "set_udpHandshakeField",
            get_udpHandshakeField: "get_udpHandshakeField",
            set_pongField: "set_pongField",
            get_pongField: "get_pongField",
            set_pingField: "set_pingField",
            get_pingField: "get_pingField",
            set_reconnectField: "set_reconnectField",
            get_reconnectField: "get_reconnectField",
            set_disconnectField: "set_disconnectField",
            get_disconnectField: "get_disconnectField",
            set_connectResponseField: "set_connectResponseField",
            get_connectResponseField: "get_connectResponseField",
            set_connectRequestField: "set_connectRequestField",
            get_connectRequestField: "get_connectRequestField",
            set_realmUpgradeResponseField: "set_realmUpgradeResponseField",
            get_realmUpgradeResponseField: "get_realmUpgradeResponseField",
            set_realmUpgradeRequestField: "set_realmUpgradeRequestField",
            get_realmUpgradeRequestField: "get_realmUpgradeRequestField",
            set_loginResponseField: "set_loginResponseField",
            get_loginResponseField: "get_loginResponseField",
            set_loginRequestField: "set_loginRequestField",
            get_loginRequestField: "get_loginRequestField",
            set_type: "set_type",
            get_type: "get_type"
        }
    });
    var be = function() {
        cX.call(this);
        this.set_giftIds([])
    };
    nt["agario.proto.Request_gifts"] = be;
    be.__name__ = ["agario", "proto", "Request_gifts"];
    be.__super__ = cX;
    be.prototype = lP(cX.prototype, {
        giftIds: null,
        setGiftIds: function(i) {
            this.set_giftIds(i);
            return this
        },
        set_giftIds: function(i) {
            return this.giftIds = i
        },
        get_giftIds: function() {
            return this.giftIds
        },
        addGiftIds: function(i) {
            if (this.get_giftIds() == null) {
                this.set_giftIds([i])
            } else {
                this.get_giftIds().push(i)
            }
        },
        writeToBuffer: function(i) {
            if (this.get_giftIds() != null) {
                var i2 = 0;
                var i1 = this.get_giftIds();
                while (i2 < i1.length) {
                    var q = i1[i2];
                    ++i2;
                    kD.writeTag(i, 2, 1);
                    kD.write__TYPE_STRING(i, q)
                }
            }
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            if (this.get_giftIds() != null && this.get_giftIds().length > 0) {
                i("giftIds", this.get_giftIds())
            }
        },
        readFromSlice: function(q, i2) {
            while (q.buf.totlen - q.buf.pos > i2) {
                var i = fP.read__TYPE_UINT32(q);
                var i1 = i >> 3;
                switch (i1) {
                    case 1:
                        if (this.get_giftIds() == null) {
                            this.set_giftIds([])
                        }
                        this.get_giftIds().push(fP.read__TYPE_STRING(q));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q, i)
                }
            }
        },
        __class__: be,
        __properties__: {
            set_giftIds: "set_giftIds",
            get_giftIds: "get_giftIds"
        }
    });
    var jZ = function() {
        cX.call(this);
        this.set_giftIds([])
    };
    nt["agario.proto.Send_gifts"] = jZ;
    jZ.__name__ = ["agario", "proto", "Send_gifts"];
    jZ.__super__ = cX;
    jZ.prototype = lP(cX.prototype, {
        giftIds: null,
        setGiftIds: function(i) {
            this.set_giftIds(i);
            return this
        },
        set_giftIds: function(i) {
            return this.giftIds = i
        },
        get_giftIds: function() {
            return this.giftIds
        },
        addGiftIds: function(i) {
            if (this.get_giftIds() == null) {
                this.set_giftIds([i])
            } else {
                this.get_giftIds().push(i)
            }
        },
        writeToBuffer: function(i) {
            if (this.get_giftIds() != null) {
                var i2 = 0;
                var i1 = this.get_giftIds();
                while (i2 < i1.length) {
                    var q = i1[i2];
                    ++i2;
                    kD.writeTag(i, 2, 1);
                    kD.write__TYPE_STRING(i, q)
                }
            }
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            if (this.get_giftIds() != null && this.get_giftIds().length > 0) {
                i("giftIds", this.get_giftIds())
            }
        },
        readFromSlice: function(q, i2) {
            while (q.buf.totlen - q.buf.pos > i2) {
                var i = fP.read__TYPE_UINT32(q);
                var i1 = i >> 3;
                switch (i1) {
                    case 1:
                        if (this.get_giftIds() == null) {
                            this.set_giftIds([])
                        }
                        this.get_giftIds().push(fP.read__TYPE_STRING(q));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q, i)
                }
            }
        },
        __class__: jZ,
        __properties__: {
            set_giftIds: "set_giftIds",
            get_giftIds: "get_giftIds"
        }
    });
    var hN = function() {
        cX.call(this);
        this.set_secondsRemaining(0)
    };
    nt["agario.proto.Server_going_offline"] = hN;
    hN.__name__ = ["agario", "proto", "Server_going_offline"];
    hN.__super__ = cX;
    hN.prototype = lP(cX.prototype, {
        secondsRemaining: null,
        setSecondsRemaining: function(i) {
            this.set_secondsRemaining(i);
            return this
        },
        set_secondsRemaining: function(i) {
            return this.secondsRemaining = i
        },
        get_secondsRemaining: function() {
            return this.secondsRemaining
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 0, 1);
            kD.write__TYPE_UINT32(i, this.get_secondsRemaining());
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("secondsRemaining", this.get_secondsRemaining())
        },
        readFromSlice: function(i1, js) {
            var q = 0;
            while (i1.buf.totlen - i1.buf.pos > js) {
                var i = fP.read__TYPE_UINT32(i1);
                var i2 = i >> 3;
                switch (i2) {
                    case 1:
                        if (q != 0) {
                            throw new nM(new lA("Bad data format: Server_going_offline.secondsRemaining cannot be set twice."))
                        }++q;
                        this.set_secondsRemaining(fP.read__TYPE_UINT32(i1));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, i1, i)
                }
            }
        },
        __class__: hN,
        __properties__: {
            set_secondsRemaining: "set_secondsRemaining",
            get_secondsRemaining: "get_secondsRemaining"
        }
    });
    var qB = function() {
        cX.call(this);
        this.set_host("");
        this.set_tcpPort(0);
        this.set_udpPort(0)
    };
    nt["agario.proto.Server_info"] = qB;
    qB.__name__ = ["agario", "proto", "Server_info"];
    qB.__super__ = cX;
    qB.prototype = lP(cX.prototype, {
        host: null,
        setHost: function(i) {
            this.set_host(i);
            return this
        },
        set_host: function(i) {
            return this.host = i
        },
        get_host: function() {
            return this.host
        },
        tcpPort: null,
        setTcpPort: function(i) {
            this.set_tcpPort(i);
            return this
        },
        set_tcpPort: function(i) {
            return this.tcpPort = i
        },
        get_tcpPort: function() {
            return this.tcpPort
        },
        udpPort: null,
        setUdpPort: function(i) {
            this.set_udpPort(i);
            return this
        },
        set_udpPort: function(i) {
            return this.udpPort = i
        },
        get_udpPort: function() {
            return this.udpPort
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 2, 1);
            kD.write__TYPE_STRING(i, this.get_host());
            kD.writeTag(i, 0, 2);
            kD.write__TYPE_UINT32(i, this.get_tcpPort());
            kD.writeTag(i, 0, 3);
            kD.write__TYPE_UINT32(i, this.get_udpPort());
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("host", this.get_host());
            i("tcpPort", this.get_tcpPort());
            i("udpPort", this.get_udpPort())
        },
        readFromSlice: function(i2, qZ) {
            var i1 = 0;
            var js = 0;
            var q = 0;
            while (i2.buf.totlen - i2.buf.pos > qZ) {
                var i = fP.read__TYPE_UINT32(i2);
                var qY = i >> 3;
                switch (qY) {
                    case 1:
                        if (i1 != 0) {
                            throw new nM(new lA("Bad data format: Server_info.host cannot be set twice."))
                        }++i1;
                        this.set_host(fP.read__TYPE_STRING(i2));
                        break;
                    case 2:
                        if (js != 0) {
                            throw new nM(new lA("Bad data format: Server_info.tcpPort cannot be set twice."))
                        }++js;
                        this.set_tcpPort(fP.read__TYPE_UINT32(i2));
                        break;
                    case 3:
                        if (q != 0) {
                            throw new nM(new lA("Bad data format: Server_info.udpPort cannot be set twice."))
                        }++q;
                        this.set_udpPort(fP.read__TYPE_UINT32(i2));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, i2, i)
                }
            }
        },
        __class__: qB,
        __properties__: {
            set_udpPort: "set_udpPort",
            get_udpPort: "get_udpPort",
            set_tcpPort: "set_tcpPort",
            get_tcpPort: "get_tcpPort",
            set_host: "set_host",
            get_host: "get_host"
        }
    });
    var ov = function() {
        cX.call(this);
        this.set_hashVerifier("");
        this.set_serverToServerGameOver(this.defaultBytes())
    };
    nt["agario.proto.Server_to_server_game_over_wrapper"] = ov;
    ov.__name__ = ["agario", "proto", "Server_to_server_game_over_wrapper"];
    ov.__super__ = cX;
    ov.prototype = lP(cX.prototype, {
        hashVerifier: null,
        setHashVerifier: function(i) {
            this.set_hashVerifier(i);
            return this
        },
        set_hashVerifier: function(i) {
            return this.hashVerifier = i
        },
        get_hashVerifier: function() {
            return this.hashVerifier
        },
        serverToServerGameOver: null,
        setServerToServerGameOver: function(i) {
            this.set_serverToServerGameOver(i);
            return this
        },
        set_serverToServerGameOver: function(i) {
            return this.serverToServerGameOver = i
        },
        get_serverToServerGameOver: function() {
            return this.serverToServerGameOver
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 2, 1);
            kD.write__TYPE_STRING(i, this.get_hashVerifier());
            kD.writeTag(i, 2, 2);
            kD.write__TYPE_BYTES(i, this.get_serverToServerGameOver());
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("hashVerifier", this.get_hashVerifier());
            i("serverToServerGameOver", this.get_serverToServerGameOver())
        },
        readFromSlice: function(q, qY) {
            var i1 = 0;
            var js = 0;
            while (q.buf.totlen - q.buf.pos > qY) {
                var i = fP.read__TYPE_UINT32(q);
                var i2 = i >> 3;
                switch (i2) {
                    case 1:
                        if (i1 != 0) {
                            throw new nM(new lA("Bad data format: Server_to_server_game_over_wrapper.hashVerifier cannot be set twice."))
                        }++i1;
                        this.set_hashVerifier(fP.read__TYPE_STRING(q));
                        break;
                    case 2:
                        if (js != 0) {
                            throw new nM(new lA("Bad data format: Server_to_server_game_over_wrapper.serverToServerGameOver cannot be set twice."))
                        }++js;
                        this.set_serverToServerGameOver(fP.read__TYPE_BYTES(q));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q, i)
                }
            }
        },
        __class__: ov,
        __properties__: {
            set_serverToServerGameOver: "set_serverToServerGameOver",
            get_serverToServerGameOver: "get_serverToServerGameOver",
            set_hashVerifier: "set_hashVerifier",
            get_hashVerifier: "get_hashVerifier"
        }
    });
    var iQ = function() {
        cX.call(this);
        this.set_purchaseId("")
    };
    nt["agario.proto.Soft_purchase_request"] = iQ;
    iQ.__name__ = ["agario", "proto", "Soft_purchase_request"];
    iQ.__super__ = cX;
    iQ.prototype = lP(cX.prototype, {
        purchaseId: null,
        setPurchaseId: function(i) {
            this.set_purchaseId(i);
            return this
        },
        set_purchaseId: function(i) {
            return this.purchaseId = i
        },
        get_purchaseId: function() {
            return this.purchaseId
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 2, 1);
            kD.write__TYPE_STRING(i, this.get_purchaseId());
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("purchaseId", this.get_purchaseId())
        },
        readFromSlice: function(q, js) {
            var i2 = 0;
            while (q.buf.totlen - q.buf.pos > js) {
                var i = fP.read__TYPE_UINT32(q);
                var i1 = i >> 3;
                switch (i1) {
                    case 1:
                        if (i2 != 0) {
                            throw new nM(new lA("Bad data format: Soft_purchase_request.purchaseId cannot be set twice."))
                        }++i2;
                        this.set_purchaseId(fP.read__TYPE_STRING(q));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q, i)
                }
            }
        },
        __class__: iQ,
        __properties__: {
            set_purchaseId: "set_purchaseId",
            get_purchaseId: "get_purchaseId"
        }
    });
    var cB = function() {
        cX.call(this);
        this.set_result(0);
        this.set_purchaseId("");
        this.set_productUpdates([])
    };
    nt["agario.proto.Soft_purchase_response"] = cB;
    cB.__name__ = ["agario", "proto", "Soft_purchase_response"];
    cB.__super__ = cX;
    cB.prototype = lP(cX.prototype, {
        result: null,
        setResult: function(i) {
            this.set_result(i);
            return this
        },
        set_result: function(i) {
            return this.result = i
        },
        get_result: function() {
            return this.result
        },
        purchaseId: null,
        setPurchaseId: function(i) {
            this.set_purchaseId(i);
            return this
        },
        set_purchaseId: function(i) {
            return this.purchaseId = i
        },
        get_purchaseId: function() {
            return this.purchaseId
        },
        productUpdates: null,
        setProductUpdates: function(i) {
            this.set_productUpdates(i);
            return this
        },
        set_productUpdates: function(i) {
            return this.productUpdates = i
        },
        get_productUpdates: function() {
            return this.productUpdates
        },
        addProductUpdates: function(i) {
            if (this.get_productUpdates() == null) {
                this.set_productUpdates([i])
            } else {
                this.get_productUpdates().push(i)
            }
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 0, 1);
            kD.write__TYPE_ENUM(i, this.get_result());
            kD.writeTag(i, 2, 2);
            kD.write__TYPE_STRING(i, this.get_purchaseId());
            if (this.get_productUpdates() != null) {
                var i2 = 0;
                var i1 = this.get_productUpdates();
                while (i2 < i1.length) {
                    var q = i1[i2];
                    ++i2;
                    kD.writeTag(i, 2, 3);
                    kD.write__TYPE_MESSAGE(i, q)
                }
            }
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("result", this.get_result());
            i("purchaseId", this.get_purchaseId());
            if (this.get_productUpdates() != null && this.get_productUpdates().length > 0) {
                i("productUpdates", this.get_productUpdates())
            }
        },
        readFromSlice: function(q, qY) {
            var js = 0;
            var i2 = 0;
            while (q.buf.totlen - q.buf.pos > qY) {
                var i = fP.read__TYPE_UINT32(q);
                var i1 = i >> 3;
                switch (i1) {
                    case 1:
                        if (js != 0) {
                            throw new nM(new lA("Bad data format: Soft_purchase_response.result cannot be set twice."))
                        }++js;
                        this.set_result(fP.read__TYPE_ENUM(q));
                        break;
                    case 2:
                        if (i2 != 0) {
                            throw new nM(new lA("Bad data format: Soft_purchase_response.purchaseId cannot be set twice."))
                        }++i2;
                        this.set_purchaseId(fP.read__TYPE_STRING(q));
                        break;
                    case 3:
                        if (this.get_productUpdates() == null) {
                            this.set_productUpdates([])
                        }
                        this.get_productUpdates().push(fP.read__TYPE_MESSAGE(q, new pi()));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q, i)
                }
            }
        },
        __class__: cB,
        __properties__: {
            set_productUpdates: "set_productUpdates",
            get_productUpdates: "get_productUpdates",
            set_purchaseId: "set_purchaseId",
            get_purchaseId: "get_purchaseId",
            set_result: "set_result",
            get_result: "get_result"
        }
    });
    var eZ = function() {
        cX.call(this);
        this.set_isAvailable(false);
        this.set_rewardWasHandedOut(false)
    };
    nt["agario.proto.Soft_upgrade"] = eZ;
    eZ.__name__ = ["agario", "proto", "Soft_upgrade"];
    eZ.__super__ = cX;
    eZ.prototype = lP(cX.prototype, {
        isAvailable: null,
        setIsAvailable: function(i) {
            this.set_isAvailable(i);
            return this
        },
        set_isAvailable: function(i) {
            return this.isAvailable = i
        },
        get_isAvailable: function() {
            return this.isAvailable
        },
        rewardWasHandedOut: null,
        setRewardWasHandedOut: function(i) {
            this.set_rewardWasHandedOut(i);
            return this
        },
        set_rewardWasHandedOut: function(i) {
            return this.rewardWasHandedOut = i
        },
        get_rewardWasHandedOut: function() {
            return this.rewardWasHandedOut
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 0, 1);
            kD.write__TYPE_BOOL(i, this.get_isAvailable());
            kD.writeTag(i, 0, 2);
            kD.write__TYPE_BOOL(i, this.get_rewardWasHandedOut());
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("isAvailable", this.get_isAvailable());
            i("rewardWasHandedOut", this.get_rewardWasHandedOut())
        },
        readFromSlice: function(i1, qY) {
            var q = 0;
            var i2 = 0;
            while (i1.buf.totlen - i1.buf.pos > qY) {
                var i = fP.read__TYPE_UINT32(i1);
                var js = i >> 3;
                switch (js) {
                    case 1:
                        if (q != 0) {
                            throw new nM(new lA("Bad data format: Soft_upgrade.isAvailable cannot be set twice."))
                        }++q;
                        this.set_isAvailable(fP.read__TYPE_BOOL(i1));
                        break;
                    case 2:
                        if (i2 != 0) {
                            throw new nM(new lA("Bad data format: Soft_upgrade.rewardWasHandedOut cannot be set twice."))
                        }++i2;
                        this.set_rewardWasHandedOut(fP.read__TYPE_BOOL(i1));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, i1, i)
                }
            }
        },
        __class__: eZ,
        __properties__: {
            set_rewardWasHandedOut: "set_rewardWasHandedOut",
            get_rewardWasHandedOut: "get_rewardWasHandedOut",
            set_isAvailable: "set_isAvailable",
            get_isAvailable: "get_isAvailable"
        }
    });
    var lC = function() {
        cX.call(this);
        this.set_token("")
    };
    nt["agario.proto.Udp_handshake"] = lC;
    lC.__name__ = ["agario", "proto", "Udp_handshake"];
    lC.__super__ = cX;
    lC.prototype = lP(cX.prototype, {
        token: null,
        setToken: function(i) {
            this.set_token(i);
            return this
        },
        set_token: function(i) {
            return this.token = i
        },
        get_token: function() {
            return this.token
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 2, 1);
            kD.write__TYPE_STRING(i, this.get_token());
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("token", this.get_token())
        },
        readFromSlice: function(q, js) {
            var i1 = 0;
            while (q.buf.totlen - q.buf.pos > js) {
                var i = fP.read__TYPE_UINT32(q);
                var i2 = i >> 3;
                switch (i2) {
                    case 1:
                        if (i1 != 0) {
                            throw new nM(new lA("Bad data format: Udp_handshake.token cannot be set twice."))
                        }++i1;
                        this.set_token(fP.read__TYPE_STRING(q));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q, i)
                }
            }
        },
        __class__: lC,
        __properties__: {
            set_token: "set_token",
            get_token: "get_token"
        }
    });
    var jE = function() {
        cX.call(this);
        this.set_userSettingsUpdates([])
    };
    nt["agario.proto.Update_user_settings_request"] = jE;
    jE.__name__ = ["agario", "proto", "Update_user_settings_request"];
    jE.__super__ = cX;
    jE.prototype = lP(cX.prototype, {
        userSettingsUpdates: null,
        setUserSettingsUpdates: function(i) {
            this.set_userSettingsUpdates(i);
            return this
        },
        set_userSettingsUpdates: function(i) {
            return this.userSettingsUpdates = i
        },
        get_userSettingsUpdates: function() {
            return this.userSettingsUpdates
        },
        addUserSettingsUpdates: function(i) {
            if (this.get_userSettingsUpdates() == null) {
                this.set_userSettingsUpdates([i])
            } else {
                this.get_userSettingsUpdates().push(i)
            }
        },
        writeToBuffer: function(i) {
            if (this.get_userSettingsUpdates() != null) {
                var i2 = 0;
                var i1 = this.get_userSettingsUpdates();
                while (i2 < i1.length) {
                    var q = i1[i2];
                    ++i2;
                    kD.writeTag(i, 2, 1);
                    kD.write__TYPE_MESSAGE(i, q)
                }
            }
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            if (this.get_userSettingsUpdates() != null && this.get_userSettingsUpdates().length > 0) {
                i("userSettingsUpdates", this.get_userSettingsUpdates())
            }
        },
        readFromSlice: function(q, i2) {
            while (q.buf.totlen - q.buf.pos > i2) {
                var i = fP.read__TYPE_UINT32(q);
                var i1 = i >> 3;
                switch (i1) {
                    case 1:
                        if (this.get_userSettingsUpdates() == null) {
                            this.set_userSettingsUpdates([])
                        }
                        this.get_userSettingsUpdates().push(fP.read__TYPE_MESSAGE(q, new lG()));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q, i)
                }
            }
        },
        __class__: jE,
        __properties__: {
            set_userSettingsUpdates: "set_userSettingsUpdates",
            get_userSettingsUpdates: "get_userSettingsUpdates"
        }
    });
    var jz = function() {
        cX.call(this);
        this.set_updatedUserSettings([])
    };
    nt["agario.proto.Update_user_settings_response"] = jz;
    jz.__name__ = ["agario", "proto", "Update_user_settings_response"];
    jz.__super__ = cX;
    jz.prototype = lP(cX.prototype, {
        updatedUserSettings: null,
        setUpdatedUserSettings: function(i) {
            this.set_updatedUserSettings(i);
            return this
        },
        set_updatedUserSettings: function(i) {
            return this.updatedUserSettings = i
        },
        get_updatedUserSettings: function() {
            return this.updatedUserSettings
        },
        addUpdatedUserSettings: function(i) {
            if (this.get_updatedUserSettings() == null) {
                this.set_updatedUserSettings([i])
            } else {
                this.get_updatedUserSettings().push(i)
            }
        },
        writeToBuffer: function(i) {
            if (this.get_updatedUserSettings() != null) {
                var i2 = 0;
                var i1 = this.get_updatedUserSettings();
                while (i2 < i1.length) {
                    var q = i1[i2];
                    ++i2;
                    kD.writeTag(i, 2, 1);
                    kD.write__TYPE_MESSAGE(i, q)
                }
            }
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            if (this.get_updatedUserSettings() != null && this.get_updatedUserSettings().length > 0) {
                i("updatedUserSettings", this.get_updatedUserSettings())
            }
        },
        readFromSlice: function(q, i2) {
            while (q.buf.totlen - q.buf.pos > i2) {
                var i = fP.read__TYPE_UINT32(q);
                var i1 = i >> 3;
                switch (i1) {
                    case 1:
                        if (this.get_updatedUserSettings() == null) {
                            this.set_updatedUserSettings([])
                        }
                        this.get_updatedUserSettings().push(fP.read__TYPE_MESSAGE(q, new lG()));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q, i)
                }
            }
        },
        __class__: jz,
        __properties__: {
            set_updatedUserSettings: "set_updatedUserSettings",
            get_updatedUserSettings: "get_updatedUserSettings"
        }
    });
    var jh = function() {
        cX.call(this);
        this.set_testId("");
        this.set_testGroup("")
    };
    nt["agario.proto.User_ab_test_group"] = jh;
    jh.__name__ = ["agario", "proto", "User_ab_test_group"];
    jh.__super__ = cX;
    jh.prototype = lP(cX.prototype, {
        testId: null,
        setTestId: function(i) {
            this.set_testId(i);
            return this
        },
        set_testId: function(i) {
            return this.testId = i
        },
        get_testId: function() {
            return this.testId
        },
        testGroup: null,
        setTestGroup: function(i) {
            this.set_testGroup(i);
            return this
        },
        set_testGroup: function(i) {
            return this.testGroup = i
        },
        get_testGroup: function() {
            return this.testGroup
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 2, 1);
            kD.write__TYPE_STRING(i, this.get_testId());
            kD.writeTag(i, 2, 2);
            kD.write__TYPE_STRING(i, this.get_testGroup());
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("testId", this.get_testId());
            i("testGroup", this.get_testGroup())
        },
        readFromSlice: function(q, qY) {
            var i2 = 0;
            var i1 = 0;
            while (q.buf.totlen - q.buf.pos > qY) {
                var i = fP.read__TYPE_UINT32(q);
                var js = i >> 3;
                switch (js) {
                    case 1:
                        if (i2 != 0) {
                            throw new nM(new lA("Bad data format: User_ab_test_group.testId cannot be set twice."))
                        }++i2;
                        this.set_testId(fP.read__TYPE_STRING(q));
                        break;
                    case 2:
                        if (i1 != 0) {
                            throw new nM(new lA("Bad data format: User_ab_test_group.testGroup cannot be set twice."))
                        }++i1;
                        this.set_testGroup(fP.read__TYPE_STRING(q));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q, i)
                }
            }
        },
        __class__: jh,
        __properties__: {
            set_testGroup: "set_testGroup",
            get_testGroup: "get_testGroup",
            set_testId: "set_testId",
            get_testId: "get_testId"
        }
    });
    var gX = function() {
        cX.call(this);
        this.set_productId("");
        this.set_expiresInSeconds(0)
    };
    nt["agario.proto.User_boost_item"] = gX;
    gX.__name__ = ["agario", "proto", "User_boost_item"];
    gX.__super__ = cX;
    gX.prototype = lP(cX.prototype, {
        productId: null,
        setProductId: function(i) {
            this.set_productId(i);
            return this
        },
        set_productId: function(i) {
            return this.productId = i
        },
        get_productId: function() {
            return this.productId
        },
        expiresInSeconds: null,
        setExpiresInSeconds: function(i) {
            this.set_expiresInSeconds(i);
            return this
        },
        set_expiresInSeconds: function(i) {
            return this.expiresInSeconds = i
        },
        get_expiresInSeconds: function() {
            return this.expiresInSeconds
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 2, 1);
            kD.write__TYPE_STRING(i, this.get_productId());
            kD.writeTag(i, 0, 2);
            kD.write__TYPE_UINT32(i, this.get_expiresInSeconds());
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("productId", this.get_productId());
            i("expiresInSeconds", this.get_expiresInSeconds())
        },
        readFromSlice: function(q, qY) {
            var i2 = 0;
            var i1 = 0;
            while (q.buf.totlen - q.buf.pos > qY) {
                var i = fP.read__TYPE_UINT32(q);
                var js = i >> 3;
                switch (js) {
                    case 1:
                        if (i2 != 0) {
                            throw new nM(new lA("Bad data format: User_boost_item.productId cannot be set twice."))
                        }++i2;
                        this.set_productId(fP.read__TYPE_STRING(q));
                        break;
                    case 2:
                        if (i1 != 0) {
                            throw new nM(new lA("Bad data format: User_boost_item.expiresInSeconds cannot be set twice."))
                        }++i1;
                        this.set_expiresInSeconds(fP.read__TYPE_UINT32(q));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q, i)
                }
            }
        },
        __class__: gX,
        __properties__: {
            set_expiresInSeconds: "set_expiresInSeconds",
            get_expiresInSeconds: "get_expiresInSeconds",
            set_productId: "set_productId",
            get_productId: "get_productId"
        }
    });
    var pi = function() {
        cX.call(this);
        this.set_type(0)
    };
    nt["agario.proto.User_data_update"] = pi;
    pi.__name__ = ["agario", "proto", "User_data_update"];
    pi.__super__ = cX;
    pi.prototype = lP(cX.prototype, {
        type: null,
        setType: function(i) {
            this.set_type(i);
            return this
        },
        set_type: function(i) {
            return this.type = i
        },
        get_type: function() {
            return this.type
        },
        xpLevelField: null,
        setXpLevelField: function(i) {
            this.set_xpLevelField(i);
            return this
        },
        clearXpLevelField: function() {
            this.set_xpLevelField(null)
        },
        hasXpLevelField: function() {
            return this.get_xpLevelField() != null
        },
        set_xpLevelField: function(i) {
            return this.xpLevelField = i
        },
        get_xpLevelField: function() {
            return this.xpLevelField
        },
        productField: null,
        setProductField: function(i) {
            this.set_productField(i);
            return this
        },
        clearProductField: function() {
            this.set_productField(null)
        },
        hasProductField: function() {
            return this.get_productField() != null
        },
        set_productField: function(i) {
            return this.productField = i
        },
        get_productField: function() {
            return this.productField
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 0, 1);
            kD.write__TYPE_ENUM(i, this.get_type());
            if (this.get_xpLevelField() != null) {
                kD.writeTag(i, 2, 10);
                kD.write__TYPE_MESSAGE(i, this.get_xpLevelField())
            }
            if (this.get_productField() != null) {
                kD.writeTag(i, 2, 20);
                kD.write__TYPE_MESSAGE(i, this.get_productField())
            }
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("type", this.get_type());
            if (this.get_xpLevelField() != null) {
                i("xpLevelField", this.get_xpLevelField())
            }
            if (this.get_productField() != null) {
                i("productField", this.get_productField())
            }
        },
        readFromSlice: function(i1, qZ) {
            var q = 0;
            var js = 0;
            var i2 = 0;
            while (i1.buf.totlen - i1.buf.pos > qZ) {
                var i = fP.read__TYPE_UINT32(i1);
                var qY = i >> 3;
                switch (qY) {
                    case 1:
                        if (q != 0) {
                            throw new nM(new lA("Bad data format: User_data_update.type cannot be set twice."))
                        }++q;
                        this.set_type(fP.read__TYPE_ENUM(i1));
                        break;
                    case 10:
                        if (js != 0) {
                            throw new nM(new lA("Bad data format: User_data_update.xpLevelField cannot be set twice."))
                        }++js;
                        this.set_xpLevelField(new cW());
                        fP.read__TYPE_MESSAGE(i1, this.get_xpLevelField());
                        break;
                    case 20:
                        if (i2 != 0) {
                            throw new nM(new lA("Bad data format: User_data_update.productField cannot be set twice."))
                        }++i2;
                        this.set_productField(new cJ());
                        fP.read__TYPE_MESSAGE(i1, this.get_productField());
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, i1, i)
                }
            }
        },
        __class__: pi,
        __properties__: {
            set_productField: "set_productField",
            get_productField: "get_productField",
            set_xpLevelField: "set_xpLevelField",
            get_xpLevelField: "get_xpLevelField",
            set_type: "set_type",
            get_type: "get_type"
        }
    });
    var gl = function() {
        cX.call(this);
        this.set_facebookIdFrom("");
        this.set_productId("");
        this.set_amount(0)
    };
    nt["agario.proto.User_gift"] = gl;
    gl.__name__ = ["agario", "proto", "User_gift"];
    gl.__super__ = cX;
    gl.prototype = lP(cX.prototype, {
        facebookIdFrom: null,
        setFacebookIdFrom: function(i) {
            this.set_facebookIdFrom(i);
            return this
        },
        set_facebookIdFrom: function(i) {
            return this.facebookIdFrom = i
        },
        get_facebookIdFrom: function() {
            return this.facebookIdFrom
        },
        productId: null,
        setProductId: function(i) {
            this.set_productId(i);
            return this
        },
        set_productId: function(i) {
            return this.productId = i
        },
        get_productId: function() {
            return this.productId
        },
        amount: null,
        setAmount: function(i) {
            this.set_amount(i);
            return this
        },
        set_amount: function(i) {
            return this.amount = i
        },
        get_amount: function() {
            return this.amount
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 2, 1);
            kD.write__TYPE_STRING(i, this.get_facebookIdFrom());
            kD.writeTag(i, 2, 2);
            kD.write__TYPE_STRING(i, this.get_productId());
            kD.writeTag(i, 0, 3);
            kD.write__TYPE_UINT32(i, this.get_amount());
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("facebookIdFrom", this.get_facebookIdFrom());
            i("productId", this.get_productId());
            i("amount", this.get_amount())
        },
        readFromSlice: function(i1, qZ) {
            var i2 = 0;
            var js = 0;
            var q = 0;
            while (i1.buf.totlen - i1.buf.pos > qZ) {
                var i = fP.read__TYPE_UINT32(i1);
                var qY = i >> 3;
                switch (qY) {
                    case 1:
                        if (i2 != 0) {
                            throw new nM(new lA("Bad data format: User_gift.facebookIdFrom cannot be set twice."))
                        }++i2;
                        this.set_facebookIdFrom(fP.read__TYPE_STRING(i1));
                        break;
                    case 2:
                        if (js != 0) {
                            throw new nM(new lA("Bad data format: User_gift.productId cannot be set twice."))
                        }++js;
                        this.set_productId(fP.read__TYPE_STRING(i1));
                        break;
                    case 3:
                        if (q != 0) {
                            throw new nM(new lA("Bad data format: User_gift.amount cannot be set twice."))
                        }++q;
                        this.set_amount(fP.read__TYPE_UINT32(i1));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, i1, i)
                }
            }
        },
        __class__: gl,
        __properties__: {
            set_amount: "set_amount",
            get_amount: "get_amount",
            set_productId: "set_productId",
            get_productId: "get_productId",
            set_facebookIdFrom: "set_facebookIdFrom",
            get_facebookIdFrom: "get_facebookIdFrom"
        }
    });
    var nS = function() {
        cX.call(this);
        this.set_claimable([]);
        this.set_claimedFrom([]);
        this.set_sentTo([]);
        this.set_requestedTo([]);
        this.set_requestedFrom([])
    };
    nt["agario.proto.User_gifts"] = nS;
    nS.__name__ = ["agario", "proto", "User_gifts"];
    nS.__super__ = cX;
    nS.prototype = lP(cX.prototype, {
        claimable: null,
        setClaimable: function(i) {
            this.set_claimable(i);
            return this
        },
        set_claimable: function(i) {
            return this.claimable = i
        },
        get_claimable: function() {
            return this.claimable
        },
        addClaimable: function(i) {
            if (this.get_claimable() == null) {
                this.set_claimable([i])
            } else {
                this.get_claimable().push(i)
            }
        },
        claimedFrom: null,
        setClaimedFrom: function(i) {
            this.set_claimedFrom(i);
            return this
        },
        set_claimedFrom: function(i) {
            return this.claimedFrom = i
        },
        get_claimedFrom: function() {
            return this.claimedFrom
        },
        addClaimedFrom: function(i) {
            if (this.get_claimedFrom() == null) {
                this.set_claimedFrom([i])
            } else {
                this.get_claimedFrom().push(i)
            }
        },
        sentTo: null,
        setSentTo: function(i) {
            this.set_sentTo(i);
            return this
        },
        set_sentTo: function(i) {
            return this.sentTo = i
        },
        get_sentTo: function() {
            return this.sentTo
        },
        addSentTo: function(i) {
            if (this.get_sentTo() == null) {
                this.set_sentTo([i])
            } else {
                this.get_sentTo().push(i)
            }
        },
        requestedTo: null,
        setRequestedTo: function(i) {
            this.set_requestedTo(i);
            return this
        },
        set_requestedTo: function(i) {
            return this.requestedTo = i
        },
        get_requestedTo: function() {
            return this.requestedTo
        },
        addRequestedTo: function(i) {
            if (this.get_requestedTo() == null) {
                this.set_requestedTo([i])
            } else {
                this.get_requestedTo().push(i)
            }
        },
        requestedFrom: null,
        setRequestedFrom: function(i) {
            this.set_requestedFrom(i);
            return this
        },
        set_requestedFrom: function(i) {
            return this.requestedFrom = i
        },
        get_requestedFrom: function() {
            return this.requestedFrom
        },
        addRequestedFrom: function(i) {
            if (this.get_requestedFrom() == null) {
                this.set_requestedFrom([i])
            } else {
                this.get_requestedFrom().push(i)
            }
        },
        writeToBuffer: function(i) {
            if (this.get_claimable() != null) {
                var qY = 0;
                var q6 = this.get_claimable();
                while (qY < q6.length) {
                    var q8 = q6[qY];
                    ++qY;
                    kD.writeTag(i, 2, 1);
                    kD.write__TYPE_MESSAGE(i, q8)
                }
            }
            if (this.get_claimedFrom() != null) {
                var q4 = 0;
                var js = this.get_claimedFrom();
                while (q4 < js.length) {
                    var q7 = js[q4];
                    ++q4;
                    kD.writeTag(i, 2, 2);
                    kD.write__TYPE_STRING(i, q7)
                }
            }
            if (this.get_sentTo() != null) {
                var q2 = 0;
                var i2 = this.get_sentTo();
                while (q2 < i2.length) {
                    var q5 = i2[q2];
                    ++q2;
                    kD.writeTag(i, 2, 3);
                    kD.write__TYPE_STRING(i, q5)
                }
            }
            if (this.get_requestedTo() != null) {
                var q0 = 0;
                var i1 = this.get_requestedTo();
                while (q0 < i1.length) {
                    var q3 = i1[q0];
                    ++q0;
                    kD.writeTag(i, 2, 4);
                    kD.write__TYPE_STRING(i, q3)
                }
            }
            if (this.get_requestedFrom() != null) {
                var qZ = 0;
                var q = this.get_requestedFrom();
                while (qZ < q.length) {
                    var q1 = q[qZ];
                    ++qZ;
                    kD.writeTag(i, 2, 5);
                    kD.write__TYPE_STRING(i, q1)
                }
            }
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            if (this.get_claimable() != null && this.get_claimable().length > 0) {
                i("claimable", this.get_claimable())
            }
            if (this.get_claimedFrom() != null && this.get_claimedFrom().length > 0) {
                i("claimedFrom", this.get_claimedFrom())
            }
            if (this.get_sentTo() != null && this.get_sentTo().length > 0) {
                i("sentTo", this.get_sentTo())
            }
            if (this.get_requestedTo() != null && this.get_requestedTo().length > 0) {
                i("requestedTo", this.get_requestedTo())
            }
            if (this.get_requestedFrom() != null && this.get_requestedFrom().length > 0) {
                i("requestedFrom", this.get_requestedFrom())
            }
        },
        readFromSlice: function(q, i2) {
            while (q.buf.totlen - q.buf.pos > i2) {
                var i = fP.read__TYPE_UINT32(q);
                var i1 = i >> 3;
                switch (i1) {
                    case 1:
                        if (this.get_claimable() == null) {
                            this.set_claimable([])
                        }
                        this.get_claimable().push(fP.read__TYPE_MESSAGE(q, new gl()));
                        break;
                    case 2:
                        if (this.get_claimedFrom() == null) {
                            this.set_claimedFrom([])
                        }
                        this.get_claimedFrom().push(fP.read__TYPE_STRING(q));
                        break;
                    case 3:
                        if (this.get_sentTo() == null) {
                            this.set_sentTo([])
                        }
                        this.get_sentTo().push(fP.read__TYPE_STRING(q));
                        break;
                    case 4:
                        if (this.get_requestedTo() == null) {
                            this.set_requestedTo([])
                        }
                        this.get_requestedTo().push(fP.read__TYPE_STRING(q));
                        break;
                    case 5:
                        if (this.get_requestedFrom() == null) {
                            this.set_requestedFrom([])
                        }
                        this.get_requestedFrom().push(fP.read__TYPE_STRING(q));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q, i)
                }
            }
        },
        __class__: nS,
        __properties__: {
            set_requestedFrom: "set_requestedFrom",
            get_requestedFrom: "get_requestedFrom",
            set_requestedTo: "set_requestedTo",
            get_requestedTo: "get_requestedTo",
            set_sentTo: "set_sentTo",
            get_sentTo: "get_sentTo",
            set_claimedFrom: "set_claimedFrom",
            get_claimedFrom: "get_claimedFrom",
            set_claimable: "set_claimable",
            get_claimable: "get_claimable"
        }
    });
    var ho = function() {
        cX.call(this);
        this.set_id("");
        this.set_displayName("");
        this.set_xp(0);
        this.set_level(0);
        this.set_isPayingUser(false);
        this.set_hasLoggedIntoMobile(false);
        this.set_isNewUser(false);
        this.set_questsCompleted(0);
        this.set_potionsObtained(0);
        this.set_realmId("")
    };
    nt["agario.proto.User_info"] = ho;
    ho.__name__ = ["agario", "proto", "User_info"];
    ho.__super__ = cX;
    ho.prototype = lP(cX.prototype, {
        id: null,
        setId: function(i) {
            this.set_id(i);
            return this
        },
        set_id: function(i) {
            return this.id = i
        },
        get_id: function() {
            return this.id
        },
        displayName: null,
        setDisplayName: function(i) {
            this.set_displayName(i);
            return this
        },
        set_displayName: function(i) {
            return this.displayName = i
        },
        get_displayName: function() {
            return this.displayName
        },
        xp: null,
        setXp: function(i) {
            this.set_xp(i);
            return this
        },
        set_xp: function(i) {
            return this.xp = i
        },
        get_xp: function() {
            return this.xp
        },
        level: null,
        setLevel: function(i) {
            this.set_level(i);
            return this
        },
        set_level: function(i) {
            return this.level = i
        },
        get_level: function() {
            return this.level
        },
        isPayingUser: null,
        setIsPayingUser: function(i) {
            this.set_isPayingUser(i);
            return this
        },
        set_isPayingUser: function(i) {
            return this.isPayingUser = i
        },
        get_isPayingUser: function() {
            return this.isPayingUser
        },
        hasLoggedIntoMobile: null,
        setHasLoggedIntoMobile: function(i) {
            this.set_hasLoggedIntoMobile(i);
            return this
        },
        set_hasLoggedIntoMobile: function(i) {
            return this.hasLoggedIntoMobile = i
        },
        get_hasLoggedIntoMobile: function() {
            return this.hasLoggedIntoMobile
        },
        isNewUser: null,
        setIsNewUser: function(i) {
            this.set_isNewUser(i);
            return this
        },
        set_isNewUser: function(i) {
            return this.isNewUser = i
        },
        get_isNewUser: function() {
            return this.isNewUser
        },
        questsCompleted: null,
        setQuestsCompleted: function(i) {
            this.set_questsCompleted(i);
            return this
        },
        set_questsCompleted: function(i) {
            return this.questsCompleted = i
        },
        get_questsCompleted: function() {
            return this.questsCompleted
        },
        potionsObtained: null,
        setPotionsObtained: function(i) {
            this.set_potionsObtained(i);
            return this
        },
        set_potionsObtained: function(i) {
            return this.potionsObtained = i
        },
        get_potionsObtained: function() {
            return this.potionsObtained
        },
        realmId: null,
        setRealmId: function(i) {
            this.set_realmId(i);
            return this
        },
        set_realmId: function(i) {
            return this.realmId = i
        },
        get_realmId: function() {
            return this.realmId
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 2, 1);
            kD.write__TYPE_STRING(i, this.get_id());
            kD.writeTag(i, 2, 2);
            kD.write__TYPE_STRING(i, this.get_displayName());
            kD.writeTag(i, 0, 3);
            kD.write__TYPE_UINT32(i, this.get_xp());
            kD.writeTag(i, 0, 4);
            kD.write__TYPE_UINT32(i, this.get_level());
            kD.writeTag(i, 0, 5);
            kD.write__TYPE_BOOL(i, this.get_isPayingUser());
            kD.writeTag(i, 0, 6);
            kD.write__TYPE_BOOL(i, this.get_hasLoggedIntoMobile());
            kD.writeTag(i, 0, 7);
            kD.write__TYPE_BOOL(i, this.get_isNewUser());
            kD.writeTag(i, 0, 8);
            kD.write__TYPE_UINT32(i, this.get_questsCompleted());
            kD.writeTag(i, 0, 9);
            kD.write__TYPE_UINT32(i, this.get_potionsObtained());
            kD.writeTag(i, 2, 10);
            kD.write__TYPE_STRING(i, this.get_realmId());
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("id", this.get_id());
            i("displayName", this.get_displayName());
            i("xp", this.get_xp());
            i("level", this.get_level());
            i("isPayingUser", this.get_isPayingUser());
            i("hasLoggedIntoMobile", this.get_hasLoggedIntoMobile());
            i("isNewUser", this.get_isNewUser());
            i("questsCompleted", this.get_questsCompleted());
            i("potionsObtained", this.get_potionsObtained());
            i("realmId", this.get_realmId())
        },
        readFromSlice: function(q3, i1) {
            var q1 = 0;
            var q0 = 0;
            var i = 0;
            var js = 0;
            var q4 = 0;
            var i2 = 0;
            var q5 = 0;
            var qZ = 0;
            var q2 = 0;
            var q = 0;
            while (q3.buf.totlen - q3.buf.pos > i1) {
                var q6 = fP.read__TYPE_UINT32(q3);
                var qY = q6 >> 3;
                switch (qY) {
                    case 1:
                        if (q1 != 0) {
                            throw new nM(new lA("Bad data format: User_info.id cannot be set twice."))
                        }++q1;
                        this.set_id(fP.read__TYPE_STRING(q3));
                        break;
                    case 2:
                        if (q0 != 0) {
                            throw new nM(new lA("Bad data format: User_info.displayName cannot be set twice."))
                        }++q0;
                        this.set_displayName(fP.read__TYPE_STRING(q3));
                        break;
                    case 3:
                        if (i != 0) {
                            throw new nM(new lA("Bad data format: User_info.xp cannot be set twice."))
                        }++i;
                        this.set_xp(fP.read__TYPE_UINT32(q3));
                        break;
                    case 4:
                        if (js != 0) {
                            throw new nM(new lA("Bad data format: User_info.level cannot be set twice."))
                        }++js;
                        this.set_level(fP.read__TYPE_UINT32(q3));
                        break;
                    case 5:
                        if (q4 != 0) {
                            throw new nM(new lA("Bad data format: User_info.isPayingUser cannot be set twice."))
                        }++q4;
                        this.set_isPayingUser(fP.read__TYPE_BOOL(q3));
                        break;
                    case 6:
                        if (i2 != 0) {
                            throw new nM(new lA("Bad data format: User_info.hasLoggedIntoMobile cannot be set twice."))
                        }++i2;
                        this.set_hasLoggedIntoMobile(fP.read__TYPE_BOOL(q3));
                        break;
                    case 7:
                        if (q5 != 0) {
                            throw new nM(new lA("Bad data format: User_info.isNewUser cannot be set twice."))
                        }++q5;
                        this.set_isNewUser(fP.read__TYPE_BOOL(q3));
                        break;
                    case 8:
                        if (qZ != 0) {
                            throw new nM(new lA("Bad data format: User_info.questsCompleted cannot be set twice."))
                        }++qZ;
                        this.set_questsCompleted(fP.read__TYPE_UINT32(q3));
                        break;
                    case 9:
                        if (q2 != 0) {
                            throw new nM(new lA("Bad data format: User_info.potionsObtained cannot be set twice."))
                        }++q2;
                        this.set_potionsObtained(fP.read__TYPE_UINT32(q3));
                        break;
                    case 10:
                        if (q != 0) {
                            throw new nM(new lA("Bad data format: User_info.realmId cannot be set twice."))
                        }++q;
                        this.set_realmId(fP.read__TYPE_STRING(q3));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q3, q6)
                }
            }
        },
        __class__: ho,
        __properties__: {
            set_realmId: "set_realmId",
            get_realmId: "get_realmId",
            set_potionsObtained: "set_potionsObtained",
            get_potionsObtained: "get_potionsObtained",
            set_questsCompleted: "set_questsCompleted",
            get_questsCompleted: "get_questsCompleted",
            set_isNewUser: "set_isNewUser",
            get_isNewUser: "get_isNewUser",
            set_hasLoggedIntoMobile: "set_hasLoggedIntoMobile",
            get_hasLoggedIntoMobile: "get_hasLoggedIntoMobile",
            set_isPayingUser: "set_isPayingUser",
            get_isPayingUser: "get_isPayingUser",
            set_level: "set_level",
            get_level: "get_level",
            set_xp: "set_xp",
            get_xp: "get_xp",
            set_displayName: "set_displayName",
            get_displayName: "get_displayName",
            set_id: "set_id",
            get_id: "get_id"
        }
    });
    var dv = function() {
        cX.call(this);
        this.set_slot(0);
        this.set_status(0);
        this.set_secondsRemaining(0);
        this.set_productId("")
    };
    nt["agario.proto.User_potion"] = dv;
    dv.__name__ = ["agario", "proto", "User_potion"];
    dv.__super__ = cX;
    dv.prototype = lP(cX.prototype, {
        slot: null,
        setSlot: function(i) {
            this.set_slot(i);
            return this
        },
        set_slot: function(i) {
            return this.slot = i
        },
        get_slot: function() {
            return this.slot
        },
        status: null,
        setStatus: function(i) {
            this.set_status(i);
            return this
        },
        set_status: function(i) {
            return this.status = i
        },
        get_status: function() {
            return this.status
        },
        secondsRemaining: null,
        setSecondsRemaining: function(i) {
            this.set_secondsRemaining(i);
            return this
        },
        set_secondsRemaining: function(i) {
            return this.secondsRemaining = i
        },
        get_secondsRemaining: function() {
            return this.secondsRemaining
        },
        productId: null,
        setProductId: function(i) {
            this.set_productId(i);
            return this
        },
        set_productId: function(i) {
            return this.productId = i
        },
        get_productId: function() {
            return this.productId
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 0, 1);
            kD.write__TYPE_ENUM(i, this.get_slot());
            kD.writeTag(i, 0, 2);
            kD.write__TYPE_ENUM(i, this.get_status());
            kD.writeTag(i, 0, 3);
            kD.write__TYPE_UINT32(i, this.get_secondsRemaining());
            kD.writeTag(i, 2, 4);
            kD.write__TYPE_STRING(i, this.get_productId());
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("slot", this.get_slot());
            i("status", this.get_status());
            i("secondsRemaining", this.get_secondsRemaining());
            i("productId", this.get_productId())
        },
        readFromSlice: function(i1, q0) {
            var i2 = 0;
            var qZ = 0;
            var q = 0;
            var js = 0;
            while (i1.buf.totlen - i1.buf.pos > q0) {
                var i = fP.read__TYPE_UINT32(i1);
                var qY = i >> 3;
                switch (qY) {
                    case 1:
                        if (i2 != 0) {
                            throw new nM(new lA("Bad data format: User_potion.slot cannot be set twice."))
                        }++i2;
                        this.set_slot(fP.read__TYPE_ENUM(i1));
                        break;
                    case 2:
                        if (qZ != 0) {
                            throw new nM(new lA("Bad data format: User_potion.status cannot be set twice."))
                        }++qZ;
                        this.set_status(fP.read__TYPE_ENUM(i1));
                        break;
                    case 3:
                        if (q != 0) {
                            throw new nM(new lA("Bad data format: User_potion.secondsRemaining cannot be set twice."))
                        }++q;
                        this.set_secondsRemaining(fP.read__TYPE_UINT32(i1));
                        break;
                    case 4:
                        if (js != 0) {
                            throw new nM(new lA("Bad data format: User_potion.productId cannot be set twice."))
                        }++js;
                        this.set_productId(fP.read__TYPE_STRING(i1));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, i1, i)
                }
            }
        },
        __class__: dv,
        __properties__: {
            set_productId: "set_productId",
            get_productId: "get_productId",
            set_secondsRemaining: "set_secondsRemaining",
            get_secondsRemaining: "get_secondsRemaining",
            set_status: "set_status",
            get_status: "get_status",
            set_slot: "set_slot",
            get_slot: "get_slot"
        }
    });
    var ce = function() {
        cX.call(this);
        this.set_gameType(0);
        this.set_productId("");
        this.set_type("");
        this.set_goal(0);
        this.set_expiresInSeconds(0)
    };
    nt["agario.proto.User_quest"] = ce;
    ce.__name__ = ["agario", "proto", "User_quest"];
    ce.__super__ = cX;
    ce.prototype = lP(cX.prototype, {
        gameType: null,
        setGameType: function(i) {
            this.set_gameType(i);
            return this
        },
        set_gameType: function(i) {
            return this.gameType = i
        },
        get_gameType: function() {
            return this.gameType
        },
        productId: null,
        setProductId: function(i) {
            this.set_productId(i);
            return this
        },
        set_productId: function(i) {
            return this.productId = i
        },
        get_productId: function() {
            return this.productId
        },
        type: null,
        setType: function(i) {
            this.set_type(i);
            return this
        },
        set_type: function(i) {
            return this.type = i
        },
        get_type: function() {
            return this.type
        },
        goal: null,
        setGoal: function(i) {
            this.set_goal(i);
            return this
        },
        set_goal: function(i) {
            return this.goal = i
        },
        get_goal: function() {
            return this.goal
        },
        expiresInSeconds: null,
        setExpiresInSeconds: function(i) {
            this.set_expiresInSeconds(i);
            return this
        },
        set_expiresInSeconds: function(i) {
            return this.expiresInSeconds = i
        },
        get_expiresInSeconds: function() {
            return this.expiresInSeconds
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 0, 1);
            kD.write__TYPE_ENUM(i, this.get_gameType());
            kD.writeTag(i, 2, 2);
            kD.write__TYPE_STRING(i, this.get_productId());
            kD.writeTag(i, 2, 3);
            kD.write__TYPE_STRING(i, this.get_type());
            kD.writeTag(i, 0, 4);
            kD.write__TYPE_UINT32(i, this.get_goal());
            kD.writeTag(i, 0, 5);
            kD.write__TYPE_UINT32(i, this.get_expiresInSeconds());
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("gameType", this.get_gameType());
            i("productId", this.get_productId());
            i("type", this.get_type());
            i("goal", this.get_goal());
            i("expiresInSeconds", this.get_expiresInSeconds())
        },
        readFromSlice: function(js, i) {
            var qY = 0;
            var qZ = 0;
            var q0 = 0;
            var i2 = 0;
            var q = 0;
            while (js.buf.totlen - js.buf.pos > i) {
                var q1 = fP.read__TYPE_UINT32(js);
                var i1 = q1 >> 3;
                switch (i1) {
                    case 1:
                        if (qY != 0) {
                            throw new nM(new lA("Bad data format: User_quest.gameType cannot be set twice."))
                        }++qY;
                        this.set_gameType(fP.read__TYPE_ENUM(js));
                        break;
                    case 2:
                        if (qZ != 0) {
                            throw new nM(new lA("Bad data format: User_quest.productId cannot be set twice."))
                        }++qZ;
                        this.set_productId(fP.read__TYPE_STRING(js));
                        break;
                    case 3:
                        if (q0 != 0) {
                            throw new nM(new lA("Bad data format: User_quest.type cannot be set twice."))
                        }++q0;
                        this.set_type(fP.read__TYPE_STRING(js));
                        break;
                    case 4:
                        if (i2 != 0) {
                            throw new nM(new lA("Bad data format: User_quest.goal cannot be set twice."))
                        }++i2;
                        this.set_goal(fP.read__TYPE_UINT32(js));
                        break;
                    case 5:
                        if (q != 0) {
                            throw new nM(new lA("Bad data format: User_quest.expiresInSeconds cannot be set twice."))
                        }++q;
                        this.set_expiresInSeconds(fP.read__TYPE_UINT32(js));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, js, q1)
                }
            }
        },
        __class__: ce,
        __properties__: {
            set_expiresInSeconds: "set_expiresInSeconds",
            get_expiresInSeconds: "get_expiresInSeconds",
            set_goal: "set_goal",
            get_goal: "get_goal",
            set_type: "set_type",
            get_type: "get_type",
            set_productId: "set_productId",
            get_productId: "get_productId",
            set_gameType: "set_gameType",
            get_gameType: "get_gameType"
        }
    });
    var lG = function() {
        this.hasField__0 = 0;
        cX.call(this);
        this.set_type(0);
        this.set_key(0)
    };
    nt["agario.proto.User_setting"] = lG;
    lG.__name__ = ["agario", "proto", "User_setting"];
    lG.__super__ = cX;
    lG.prototype = lP(cX.prototype, {
        type: null,
        setType: function(i) {
            this.set_type(i);
            return this
        },
        set_type: function(i) {
            return this.type = i
        },
        get_type: function() {
            return this.type
        },
        key: null,
        setKey: function(i) {
            this.set_key(i);
            return this
        },
        set_key: function(i) {
            return this.key = i
        },
        get_key: function() {
            return this.key
        },
        valueString: null,
        setValueString: function(i) {
            this.set_valueString(i);
            return this
        },
        clearValueString: function() {
            this.set_valueString(null)
        },
        hasValueString: function() {
            return this.get_valueString() != null
        },
        set_valueString: function(i) {
            return this.valueString = i
        },
        get_valueString: function() {
            return this.valueString
        },
        valueInt32: null,
        setValueInt32: function(i) {
            this.set_valueInt32(i);
            return this
        },
        hasField__0: null,
        clearValueInt32: function() {
            this.hasField__0 = this.hasField__0 & -2;
            this.set_valueInt32(0)
        },
        hasValueInt32: function() {
            return (this.hasField__0 & 1) != 0
        },
        set_valueInt32: function(i) {
            this.hasField__0 = this.hasField__0 | 1;
            return this.valueInt32 = i
        },
        get_valueInt32: function() {
            return this.valueInt32
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 0, 1);
            kD.write__TYPE_ENUM(i, this.get_type());
            kD.writeTag(i, 0, 2);
            kD.write__TYPE_ENUM(i, this.get_key());
            if (this.get_valueString() != null) {
                kD.writeTag(i, 2, 3);
                kD.write__TYPE_STRING(i, this.get_valueString())
            }
            if ((this.hasField__0 & 1) != 0) {
                kD.writeTag(i, 0, 4);
                kD.write__TYPE_INT32(i, this.get_valueInt32())
            }
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("type", this.get_type());
            i("key", this.get_key());
            if (this.get_valueString() != null) {
                i("valueString", this.get_valueString())
            }
            if ((this.hasField__0 & 1) != 0) {
                i("valueInt32", this.get_valueInt32())
            }
        },
        readFromSlice: function(i2, q0) {
            var i1 = 0;
            var qZ = 0;
            var q = 0;
            var qY = 0;
            while (i2.buf.totlen - i2.buf.pos > q0) {
                var i = fP.read__TYPE_UINT32(i2);
                var js = i >> 3;
                switch (js) {
                    case 1:
                        if (i1 != 0) {
                            throw new nM(new lA("Bad data format: User_setting.type cannot be set twice."))
                        }++i1;
                        this.set_type(fP.read__TYPE_ENUM(i2));
                        break;
                    case 2:
                        if (qZ != 0) {
                            throw new nM(new lA("Bad data format: User_setting.key cannot be set twice."))
                        }++qZ;
                        this.set_key(fP.read__TYPE_ENUM(i2));
                        break;
                    case 3:
                        if (q != 0) {
                            throw new nM(new lA("Bad data format: User_setting.valueString cannot be set twice."))
                        }++q;
                        this.set_valueString(fP.read__TYPE_STRING(i2));
                        break;
                    case 4:
                        if (qY != 0) {
                            throw new nM(new lA("Bad data format: User_setting.valueInt32 cannot be set twice."))
                        }++qY;
                        this.set_valueInt32(fP.read__TYPE_INT32(i2));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, i2, i)
                }
            }
        },
        __class__: lG,
        __properties__: {
            set_valueInt32: "set_valueInt32",
            get_valueInt32: "get_valueInt32",
            set_valueString: "set_valueString",
            get_valueString: "get_valueString",
            set_key: "set_key",
            get_key: "get_key",
            set_type: "set_type",
            get_type: "get_type"
        }
    });
    var mu = function() {
        cX.call(this);
        this.set_gamesPlayed(0);
        this.set_massConsumed(0);
        this.set_allTimeScore(0);
        this.set_highestMass(0);
        this.set_longestTimeAlive(0);
        this.set_mostCellsEaten(0)
    };
    nt["agario.proto.User_stats"] = mu;
    mu.__name__ = ["agario", "proto", "User_stats"];
    mu.__super__ = cX;
    mu.prototype = lP(cX.prototype, {
        gamesPlayed: null,
        setGamesPlayed: function(i) {
            this.set_gamesPlayed(i);
            return this
        },
        set_gamesPlayed: function(i) {
            return this.gamesPlayed = i
        },
        get_gamesPlayed: function() {
            return this.gamesPlayed
        },
        massConsumed: null,
        setMassConsumed: function(i) {
            this.set_massConsumed(i);
            return this
        },
        set_massConsumed: function(i) {
            return this.massConsumed = i
        },
        get_massConsumed: function() {
            return this.massConsumed
        },
        allTimeScore: null,
        setAllTimeScore: function(i) {
            this.set_allTimeScore(i);
            return this
        },
        set_allTimeScore: function(i) {
            return this.allTimeScore = i
        },
        get_allTimeScore: function() {
            return this.allTimeScore
        },
        highestMass: null,
        setHighestMass: function(i) {
            this.set_highestMass(i);
            return this
        },
        set_highestMass: function(i) {
            return this.highestMass = i
        },
        get_highestMass: function() {
            return this.highestMass
        },
        longestTimeAlive: null,
        setLongestTimeAlive: function(i) {
            this.set_longestTimeAlive(i);
            return this
        },
        set_longestTimeAlive: function(i) {
            return this.longestTimeAlive = i
        },
        get_longestTimeAlive: function() {
            return this.longestTimeAlive
        },
        mostCellsEaten: null,
        setMostCellsEaten: function(i) {
            this.set_mostCellsEaten(i);
            return this
        },
        set_mostCellsEaten: function(i) {
            return this.mostCellsEaten = i
        },
        get_mostCellsEaten: function() {
            return this.mostCellsEaten
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 0, 1);
            kD.write__TYPE_UINT32(i, this.get_gamesPlayed());
            kD.writeTag(i, 0, 2);
            kD.write__TYPE_UINT32(i, this.get_massConsumed());
            kD.writeTag(i, 0, 3);
            kD.write__TYPE_UINT32(i, this.get_allTimeScore());
            kD.writeTag(i, 0, 4);
            kD.write__TYPE_UINT32(i, this.get_highestMass());
            kD.writeTag(i, 0, 5);
            kD.write__TYPE_UINT32(i, this.get_longestTimeAlive());
            kD.writeTag(i, 0, 6);
            kD.write__TYPE_UINT32(i, this.get_mostCellsEaten());
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("gamesPlayed", this.get_gamesPlayed());
            i("massConsumed", this.get_massConsumed());
            i("allTimeScore", this.get_allTimeScore());
            i("highestMass", this.get_highestMass());
            i("longestTimeAlive", this.get_longestTimeAlive());
            i("mostCellsEaten", this.get_mostCellsEaten())
        },
        readFromSlice: function(q0, i1) {
            var qY = 0;
            var q1 = 0;
            var q = 0;
            var i2 = 0;
            var i = 0;
            var qZ = 0;
            while (q0.buf.totlen - q0.buf.pos > i1) {
                var q2 = fP.read__TYPE_UINT32(q0);
                var js = q2 >> 3;
                switch (js) {
                    case 1:
                        if (qY != 0) {
                            throw new nM(new lA("Bad data format: User_stats.gamesPlayed cannot be set twice."))
                        }++qY;
                        this.set_gamesPlayed(fP.read__TYPE_UINT32(q0));
                        break;
                    case 2:
                        if (q1 != 0) {
                            throw new nM(new lA("Bad data format: User_stats.massConsumed cannot be set twice."))
                        }++q1;
                        this.set_massConsumed(fP.read__TYPE_UINT32(q0));
                        break;
                    case 3:
                        if (q != 0) {
                            throw new nM(new lA("Bad data format: User_stats.allTimeScore cannot be set twice."))
                        }++q;
                        this.set_allTimeScore(fP.read__TYPE_UINT32(q0));
                        break;
                    case 4:
                        if (i2 != 0) {
                            throw new nM(new lA("Bad data format: User_stats.highestMass cannot be set twice."))
                        }++i2;
                        this.set_highestMass(fP.read__TYPE_UINT32(q0));
                        break;
                    case 5:
                        if (i != 0) {
                            throw new nM(new lA("Bad data format: User_stats.longestTimeAlive cannot be set twice."))
                        }++i;
                        this.set_longestTimeAlive(fP.read__TYPE_UINT32(q0));
                        break;
                    case 6:
                        if (qZ != 0) {
                            throw new nM(new lA("Bad data format: User_stats.mostCellsEaten cannot be set twice."))
                        }++qZ;
                        this.set_mostCellsEaten(fP.read__TYPE_UINT32(q0));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q0, q2)
                }
            }
        },
        __class__: mu,
        __properties__: {
            set_mostCellsEaten: "set_mostCellsEaten",
            get_mostCellsEaten: "get_mostCellsEaten",
            set_longestTimeAlive: "set_longestTimeAlive",
            get_longestTimeAlive: "get_longestTimeAlive",
            set_highestMass: "set_highestMass",
            get_highestMass: "get_highestMass",
            set_allTimeScore: "set_allTimeScore",
            get_allTimeScore: "get_allTimeScore",
            set_massConsumed: "set_massConsumed",
            get_massConsumed: "get_massConsumed",
            set_gamesPlayed: "set_gamesPlayed",
            get_gamesPlayed: "get_gamesPlayed"
        }
    });
    var hE = function() {
        cX.call(this);
        this.set_eventId("");
        this.set_nextAvailableInSeconds(0)
    };
    nt["agario.proto.User_timed_event"] = hE;
    hE.__name__ = ["agario", "proto", "User_timed_event"];
    hE.__super__ = cX;
    hE.prototype = lP(cX.prototype, {
        eventId: null,
        setEventId: function(i) {
            this.set_eventId(i);
            return this
        },
        set_eventId: function(i) {
            return this.eventId = i
        },
        get_eventId: function() {
            return this.eventId
        },
        nextAvailableInSeconds: null,
        setNextAvailableInSeconds: function(i) {
            this.set_nextAvailableInSeconds(i);
            return this
        },
        set_nextAvailableInSeconds: function(i) {
            return this.nextAvailableInSeconds = i
        },
        get_nextAvailableInSeconds: function() {
            return this.nextAvailableInSeconds
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 2, 1);
            kD.write__TYPE_STRING(i, this.get_eventId());
            kD.writeTag(i, 0, 2);
            kD.write__TYPE_UINT32(i, this.get_nextAvailableInSeconds());
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("eventId", this.get_eventId());
            i("nextAvailableInSeconds", this.get_nextAvailableInSeconds())
        },
        readFromSlice: function(q, qY) {
            var i1 = 0;
            var i2 = 0;
            while (q.buf.totlen - q.buf.pos > qY) {
                var i = fP.read__TYPE_UINT32(q);
                var js = i >> 3;
                switch (js) {
                    case 1:
                        if (i1 != 0) {
                            throw new nM(new lA("Bad data format: User_timed_event.eventId cannot be set twice."))
                        }++i1;
                        this.set_eventId(fP.read__TYPE_STRING(q));
                        break;
                    case 2:
                        if (i2 != 0) {
                            throw new nM(new lA("Bad data format: User_timed_event.nextAvailableInSeconds cannot be set twice."))
                        }++i2;
                        this.set_nextAvailableInSeconds(fP.read__TYPE_UINT32(q));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q, i)
                }
            }
        },
        __class__: hE,
        __properties__: {
            set_nextAvailableInSeconds: "set_nextAvailableInSeconds",
            get_nextAvailableInSeconds: "get_nextAvailableInSeconds",
            set_eventId: "set_eventId",
            get_eventId: "get_eventId"
        }
    });
    var bH = function() {
        cX.call(this);
        this.set_userTimedEvents([])
    };
    nt["agario.proto.User_timed_event_updates"] = bH;
    bH.__name__ = ["agario", "proto", "User_timed_event_updates"];
    bH.__super__ = cX;
    bH.prototype = lP(cX.prototype, {
        userTimedEvents: null,
        setUserTimedEvents: function(i) {
            this.set_userTimedEvents(i);
            return this
        },
        set_userTimedEvents: function(i) {
            return this.userTimedEvents = i
        },
        get_userTimedEvents: function() {
            return this.userTimedEvents
        },
        addUserTimedEvents: function(i) {
            if (this.get_userTimedEvents() == null) {
                this.set_userTimedEvents([i])
            } else {
                this.get_userTimedEvents().push(i)
            }
        },
        writeToBuffer: function(i) {
            if (this.get_userTimedEvents() != null) {
                var i2 = 0;
                var i1 = this.get_userTimedEvents();
                while (i2 < i1.length) {
                    var q = i1[i2];
                    ++i2;
                    kD.writeTag(i, 2, 1);
                    kD.write__TYPE_MESSAGE(i, q)
                }
            }
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            if (this.get_userTimedEvents() != null && this.get_userTimedEvents().length > 0) {
                i("userTimedEvents", this.get_userTimedEvents())
            }
        },
        readFromSlice: function(q, i2) {
            while (q.buf.totlen - q.buf.pos > i2) {
                var i = fP.read__TYPE_UINT32(q);
                var i1 = i >> 3;
                switch (i1) {
                    case 1:
                        if (this.get_userTimedEvents() == null) {
                            this.set_userTimedEvents([])
                        }
                        this.get_userTimedEvents().push(fP.read__TYPE_MESSAGE(q, new hE()));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q, i)
                }
            }
        },
        __class__: bH,
        __properties__: {
            set_userTimedEvents: "set_userTimedEvents",
            get_userTimedEvents: "get_userTimedEvents"
        }
    });
    var ja = function() {
        cX.call(this);
        this.set_productId("");
        this.set_quantity(0)
    };
    nt["agario.proto.User_wallet_item"] = ja;
    ja.__name__ = ["agario", "proto", "User_wallet_item"];
    ja.__super__ = cX;
    ja.prototype = lP(cX.prototype, {
        productId: null,
        setProductId: function(i) {
            this.set_productId(i);
            return this
        },
        set_productId: function(i) {
            return this.productId = i
        },
        get_productId: function() {
            return this.productId
        },
        quantity: null,
        setQuantity: function(i) {
            this.set_quantity(i);
            return this
        },
        set_quantity: function(i) {
            return this.quantity = i
        },
        get_quantity: function() {
            return this.quantity
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 2, 1);
            kD.write__TYPE_STRING(i, this.get_productId());
            kD.writeTag(i, 0, 2);
            kD.write__TYPE_UINT32(i, this.get_quantity());
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("productId", this.get_productId());
            i("quantity", this.get_quantity())
        },
        readFromSlice: function(q, qY) {
            var i2 = 0;
            var i1 = 0;
            while (q.buf.totlen - q.buf.pos > qY) {
                var i = fP.read__TYPE_UINT32(q);
                var js = i >> 3;
                switch (js) {
                    case 1:
                        if (i2 != 0) {
                            throw new nM(new lA("Bad data format: User_wallet_item.productId cannot be set twice."))
                        }++i2;
                        this.set_productId(fP.read__TYPE_STRING(q));
                        break;
                    case 2:
                        if (i1 != 0) {
                            throw new nM(new lA("Bad data format: User_wallet_item.quantity cannot be set twice."))
                        }++i1;
                        this.set_quantity(fP.read__TYPE_UINT32(q));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q, i)
                }
            }
        },
        __class__: ja,
        __properties__: {
            set_quantity: "set_quantity",
            get_quantity: "get_quantity",
            set_productId: "set_productId",
            get_productId: "get_productId"
        }
    });
    var T = function() {
        cX.call(this);
        this.set_originPlatform("");
        this.set_productUpdates([])
    };
    nt["agario.proto.Wallet_updates"] = T;
    T.__name__ = ["agario", "proto", "Wallet_updates"];
    T.__super__ = cX;
    T.prototype = lP(cX.prototype, {
        originPlatform: null,
        setOriginPlatform: function(i) {
            this.set_originPlatform(i);
            return this
        },
        set_originPlatform: function(i) {
            return this.originPlatform = i
        },
        get_originPlatform: function() {
            return this.originPlatform
        },
        productUpdates: null,
        setProductUpdates: function(i) {
            this.set_productUpdates(i);
            return this
        },
        set_productUpdates: function(i) {
            return this.productUpdates = i
        },
        get_productUpdates: function() {
            return this.productUpdates
        },
        addProductUpdates: function(i) {
            if (this.get_productUpdates() == null) {
                this.set_productUpdates([i])
            } else {
                this.get_productUpdates().push(i)
            }
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 2, 1);
            kD.write__TYPE_STRING(i, this.get_originPlatform());
            if (this.get_productUpdates() != null) {
                var i2 = 0;
                var i1 = this.get_productUpdates();
                while (i2 < i1.length) {
                    var q = i1[i2];
                    ++i2;
                    kD.writeTag(i, 2, 2);
                    kD.write__TYPE_MESSAGE(i, q)
                }
            }
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("originPlatform", this.get_originPlatform());
            if (this.get_productUpdates() != null && this.get_productUpdates().length > 0) {
                i("productUpdates", this.get_productUpdates())
            }
        },
        readFromSlice: function(q, js) {
            var i1 = 0;
            while (q.buf.totlen - q.buf.pos > js) {
                var i = fP.read__TYPE_UINT32(q);
                var i2 = i >> 3;
                switch (i2) {
                    case 1:
                        if (i1 != 0) {
                            throw new nM(new lA("Bad data format: Wallet_updates.originPlatform cannot be set twice."))
                        }++i1;
                        this.set_originPlatform(fP.read__TYPE_STRING(q));
                        break;
                    case 2:
                        if (this.get_productUpdates() == null) {
                            this.set_productUpdates([])
                        }
                        this.get_productUpdates().push(fP.read__TYPE_MESSAGE(q, new pi()));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, q, i)
                }
            }
        },
        __class__: T,
        __properties__: {
            set_productUpdates: "set_productUpdates",
            get_productUpdates: "get_productUpdates",
            set_originPlatform: "set_originPlatform",
            get_originPlatform: "get_originPlatform"
        }
    });
    var cW = function() {
        cX.call(this);
        this.set_finalXpForLevel(0);
        this.set_deltaXp(0);
        this.set_finalLevel(0);
        this.set_deltaLevel(0)
    };
    nt["agario.proto.Xp_level_update"] = cW;
    cW.__name__ = ["agario", "proto", "Xp_level_update"];
    cW.__super__ = cX;
    cW.prototype = lP(cX.prototype, {
        finalXpForLevel: null,
        setFinalXpForLevel: function(i) {
            this.set_finalXpForLevel(i);
            return this
        },
        set_finalXpForLevel: function(i) {
            return this.finalXpForLevel = i
        },
        get_finalXpForLevel: function() {
            return this.finalXpForLevel
        },
        deltaXp: null,
        setDeltaXp: function(i) {
            this.set_deltaXp(i);
            return this
        },
        set_deltaXp: function(i) {
            return this.deltaXp = i
        },
        get_deltaXp: function() {
            return this.deltaXp
        },
        finalLevel: null,
        setFinalLevel: function(i) {
            this.set_finalLevel(i);
            return this
        },
        set_finalLevel: function(i) {
            return this.finalLevel = i
        },
        get_finalLevel: function() {
            return this.finalLevel
        },
        deltaLevel: null,
        setDeltaLevel: function(i) {
            this.set_deltaLevel(i);
            return this
        },
        set_deltaLevel: function(i) {
            return this.deltaLevel = i
        },
        get_deltaLevel: function() {
            return this.deltaLevel
        },
        writeToBuffer: function(i) {
            kD.writeTag(i, 0, 1);
            kD.write__TYPE_UINT32(i, this.get_finalXpForLevel());
            kD.writeTag(i, 0, 2);
            kD.write__TYPE_UINT32(i, this.get_deltaXp());
            kD.writeTag(i, 0, 3);
            kD.write__TYPE_UINT32(i, this.get_finalLevel());
            kD.writeTag(i, 0, 4);
            kD.write__TYPE_UINT32(i, this.get_deltaLevel());
            cX.prototype.writeExtensionOrUnknownFields.call(this, i)
        },
        forEachFields: function(i) {
            i("finalXpForLevel", this.get_finalXpForLevel());
            i("deltaXp", this.get_deltaXp());
            i("finalLevel", this.get_finalLevel());
            i("deltaLevel", this.get_deltaLevel())
        },
        readFromSlice: function(i2, q0) {
            var q = 0;
            var i1 = 0;
            var qY = 0;
            var js = 0;
            while (i2.buf.totlen - i2.buf.pos > q0) {
                var i = fP.read__TYPE_UINT32(i2);
                var qZ = i >> 3;
                switch (qZ) {
                    case 1:
                        if (q != 0) {
                            throw new nM(new lA("Bad data format: Xp_level_update.finalXpForLevel cannot be set twice."))
                        }++q;
                        this.set_finalXpForLevel(fP.read__TYPE_UINT32(i2));
                        break;
                    case 2:
                        if (i1 != 0) {
                            throw new nM(new lA("Bad data format: Xp_level_update.deltaXp cannot be set twice."))
                        }++i1;
                        this.set_deltaXp(fP.read__TYPE_UINT32(i2));
                        break;
                    case 3:
                        if (qY != 0) {
                            throw new nM(new lA("Bad data format: Xp_level_update.finalLevel cannot be set twice."))
                        }++qY;
                        this.set_finalLevel(fP.read__TYPE_UINT32(i2));
                        break;
                    case 4:
                        if (js != 0) {
                            throw new nM(new lA("Bad data format: Xp_level_update.deltaLevel cannot be set twice."))
                        }++js;
                        this.set_deltaLevel(fP.read__TYPE_UINT32(i2));
                        break;
                    default:
                        cX.prototype.readUnknown.call(this, i2, i)
                }
            }
        },
        __class__: cW,
        __properties__: {
            set_deltaLevel: "set_deltaLevel",
            get_deltaLevel: "get_deltaLevel",
            set_finalLevel: "set_finalLevel",
            get_finalLevel: "get_finalLevel",
            set_deltaXp: "set_deltaXp",
            get_deltaXp: "get_deltaXp",
            set_finalXpForLevel: "set_finalXpForLevel",
            get_finalXpForLevel: "get_finalXpForLevel"
        }
    });
    var e7 = function() {};
    nt["agario.proto.brew_potion_for_slot_response.Result_enum"] = e7;
    e7.__name__ = ["agario", "proto", "brew_potion_for_slot_response", "Result_enum"];
    var hj = function() {};
    nt["agario.proto.cell_state.Cell_type_enum"] = hj;
    hj.__name__ = ["agario", "proto", "cell_state", "Cell_type_enum"];
    var eN = function() {};
    nt["agario.proto.device.Platform_enum"] = eN;
    eN.__name__ = ["agario", "proto", "device", "Platform_enum"];
    var nY = function() {};
    nt["agario.proto.disconnect.Reason_enum"] = nY;
    nY.__name__ = ["agario", "proto", "disconnect", "Reason_enum"];
    var qA = function() {};
    nt["agario.proto.enter_lobby.Lobby_type_enum"] = qA;
    qA.__name__ = ["agario", "proto", "enter_lobby", "Lobby_type_enum"];
    var cq = function() {};
    nt["agario.proto.envelope.Content_type_enum"] = cq;
    cq.__name__ = ["agario", "proto", "envelope", "Content_type_enum"];
    var jJ = function() {};
    nt["agario.proto.game_over_reason_enum.Enum"] = jJ;
    jJ.__name__ = ["agario", "proto", "game_over_reason_enum", "Enum"];
    var kZ = function() {};
    nt["agario.proto.game_type_enum.Enum"] = kZ;
    kZ.__name__ = ["agario", "proto", "game_type_enum", "Enum"];
    var lN = function() {};
    nt["agario.proto.inapp_purchase_response.Result_enum"] = lN;
    lN.__name__ = ["agario", "proto", "inapp_purchase_response", "Result_enum"];
    var u = function() {};
    nt["agario.proto.login_realm_enum.Enum"] = u;
    u.__name__ = ["agario", "proto", "login_realm_enum", "Enum"];
    var h5 = function() {};
    nt["agario.proto.login_response.Current_game_state_enum"] = h5;
    h5.__name__ = ["agario", "proto", "login_response", "Current_game_state_enum"];
    var g4 = function() {};
    nt["agario.proto.offer_bundle_response.Result_enum"] = g4;
    g4.__name__ = ["agario", "proto", "offer_bundle_response", "Result_enum"];
    var fO = function() {};
    nt["agario.proto.open_potion_for_product_response.Result_enum"] = fO;
    fO.__name__ = ["agario", "proto", "open_potion_for_product_response", "Result_enum"];
    var f2 = function() {};
    nt["agario.proto.open_potion_for_slot_response.Result_enum"] = f2;
    f2.__name__ = ["agario", "proto", "open_potion_for_slot_response", "Result_enum"];
    var qf = function() {};
    nt["agario.proto.product_update.Origin_enum"] = qf;
    qf.__name__ = ["agario", "proto", "product_update", "Origin_enum"];
    var b4 = function() {};
    nt["agario.proto.product_update.Type_enum"] = b4;
    b4.__name__ = ["agario", "proto", "product_update", "Type_enum"];
    var jg = function() {};
    nt["agario.proto.reconnect.Reconnect_with_enum"] = jg;
    jg.__name__ = ["agario", "proto", "reconnect", "Reconnect_with_enum"];
    var eU = function() {};
    nt["agario.proto.req.Type_enum"] = eU;
    eU.__name__ = ["agario", "proto", "req", "Type_enum"];
    var kx = function() {};
    nt["agario.proto.soft_purchase_response.Result_enum"] = kx;
    kx.__name__ = ["agario", "proto", "soft_purchase_response", "Result_enum"];
    var qR = function() {};
    nt["agario.proto.upgrade_realm_enum.Enum"] = qR;
    qR.__name__ = ["agario", "proto", "upgrade_realm_enum", "Enum"];
    var nm = function() {};
    nt["agario.proto.user_data_update.Type_enum"] = nm;
    nm.__name__ = ["agario", "proto", "user_data_update", "Type_enum"];
    var cv = function() {};
    nt["agario.proto.user_potion.Status_enum"] = cv;
    cv.__name__ = ["agario", "proto", "user_potion", "Status_enum"];
    var kY = function() {};
    nt["agario.proto.user_potion_slot_enum.Enum"] = kY;
    kY.__name__ = ["agario", "proto", "user_potion_slot_enum", "Enum"];
    var fV = function() {};
    nt["agario.proto.user_setting.Key_enum"] = fV;
    fV.__name__ = ["agario", "proto", "user_setting", "Key_enum"];
    var cV = function() {};
    nt["agario.proto.user_setting.Type_enum"] = cV;
    cV.__name__ = ["agario", "proto", "user_setting", "Type_enum"];
    var oF = function() {};
    nt["oaktree.ext.security.IAuthenticationService"] = oF;
    oF.__name__ = ["oaktree", "ext", "security", "IAuthenticationService"];
    oF.__interfaces__ = [iE, c8];
    oF.prototype = {
        get_available: null,
        get_loggedIn: null,
        get_user: null,
        get_authToken: null,
        set_authToken: null,
        login: null,
        logout: null,
        __class__: oF,
        __properties__: {
            set_authToken: "set_authToken",
            get_authToken: "get_authToken",
            get_user: "get_user",
            get_loggedIn: "get_loggedIn",
            get_available: "get_available"
        }
    };
    var fR = function() {
        this._usedCache = false;
        this._loggedIn = false;
        lR.call(this)
    };
    nt["agario.security.AuthenticationService"] = fR;
    fR.__name__ = ["agario", "security", "AuthenticationService"];
    fR.__interfaces__ = [oF];
    fR.__super__ = lR;
    fR.prototype = lP(lR.prototype, {
        get_available: function() {
            return true
        },
        _loggedIn: null,
        get_loggedIn: function() {
            if (this._serverModel != null && this._serverModel.status == cr.DISCONNECTED) {
                return false
            }
            return this._loggedIn
        },
        _user: null,
        get_user: function() {
            return this._user
        },
        _authToken: null,
        get_authToken: function() {
            return this._authToken
        },
        set_authToken: function(i) {
            this._authToken = i;
            return this._authToken
        },
        _usedCache: null,
        _serverModel: null,
        create: function() {},
        initialize: function() {
            this._serverModel = l4.getService(pu);
            this._serverModel.register(11, oT(this, this.onServerMessage));
            this._serverModel.register(20, oT(this, this.onServerDisconnect));
            this._serverModel.onConnect.add(oT(this, this.sendLoginMessage))
        },
        onServerDisconnect: function(i1, i) {
            this._loggedIn = false;
            if (i1 == 20) {
                var q = i;
                if (q.get_reason() == 3) {
                    nK.services.gameui.doLogout()
                }
            }
        },
        onUpdate: function(q, i) {
            this.onServerMessage(q, i)
        },
        onServerMessage: function(q, i1) {
            switch (q) {
                case 11:
                    var i;
                    i = n0.__cast(i1, ll);
                    this._loggedIn = true;
                    nK.user.handleUserData(i);
                    nK.get_events().dispatchEventWith("UserEvent::USER_LOGGED");
                    break;
                default:
                    null
            }
        },
        login: function() {
            this.sendLoginMessage()
        },
        logout: function() {
            nK.user.setGuest();
            this._authToken = null;
            this._loggedIn = false;
            this._serverModel.disconnect();
            nK.services.gameui.closeShop();
            nK.services.shop.isShopAvailable = false;
            nK.get_events().dispatchEventWith("userLoggedOut")
        },
        sendLoginMessage: function() {
            if (this._authToken == null || this._authToken == "" || this._authToken == "undefined") {
                return
            }
            if (this._authToken == undefined) {
                return
            }
            var i = new ck();
            i.set_authToken(this._authToken);
            i.set_device(new fo());
            if (nK.environment.authenticationProvider == N.Google) {
                i.set_realm(3)
            } else {
                i.set_realm(2)
            }
            var q = nK.environment.platform;
            switch (q[1]) {
                case 0:
                    i.get_device().set_platform(3);
                    break;
                case 1:
                    i.get_device().set_platform(4);
                    break;
                default:
                    i.get_device().set_platform(5)
            }
            i.get_device().set_version(aQ.VERSION);
            i.get_device().set_width(0);
            i.get_device().set_height(0);
            this._serverModel.sendMessage(10, i);
            null
        },
        __class__: fR,
        __properties__: {
            set_authToken: "set_authToken",
            get_authToken: "get_authToken",
            get_user: "get_user",
            get_loggedIn: "get_loggedIn",
            get_available: "get_available"
        }
    });
    var g0 = function() {};
    nt["agario.services.ConfigTags"] = g0;
    g0.__name__ = ["agario", "services", "ConfigTags"];
    var kd = function() {
        this._configToDownload = "";
        this._assetsManifest = new io();
        this._loadedConfig = "";
        this.hasConfigToDownload = false;
        this.isInitialized = false
    };
    nt["agario.services.ConfigurationService"] = kd;
    kd.__name__ = ["agario", "services", "ConfigurationService"];
    kd.__interfaces__ = [c8];
    kd.setConfigID = function(i) {
        if (i != kd.configID) {
            kd.configID = i;
            nK.get_events().fire("config.id_updated", i)
        }
    };
    kd.prototype = {
        isInitialized: null,
        currentConfig: null,
        hasConfigToDownload: null,
        _config: null,
        _loadedConfig: null,
        _assetsManifest: null,
        _configToDownload: null,
        create: function() {},
        initialize: function() {
            bm.addMapping("plist", i0.TEXT);
            nK.get_events().listen("config.id_updated", oT(this, this.handleConfigurationIdUpdate));
            var i = l4.getService(pu);
            i.register(33, oT(this, this.onConfigurationChange))
        },
        getLocalizationFile: function(i) {
            return this.getConfigUrl("" + i + "_text.json")
        },
        getConfigUrl: function(i1, i2) {
            var q = d5.getProperty("load_local_configuration") == "true";
            var js = kd.configID;
            if (i2 != null) {
                js = i2
            }
            if (q) {
                return this.getRootUrl("config/" + js + "/" + i1)
            }
            var i = this.getAssetFromManifest(i1);
            if (i == null) {
                return d5.getProperty("config_url") + ("/" + js + "/" + i1)
            } else {
                return d5.getProperty("config_url") + ("/" + i)
            }
        },
        getRootUrl: function(q) {
            if (nK.environment.get_isLocal()) {
                var i = window.ASSETS_ROOT;
                if (i == undefined) {
                    i = ""
                }
                return "" + i + "mc/" + q
            }
            return d5.getProperty("root_url") + ("mc/" + q)
        },
        getAssetFromManifest: function(i) {
            if (this._assetsManifest.exists(i)) {
                return this._assetsManifest.get(i).base + "/" + this._assetsManifest.get(i).id
            }
            return null
        },
        reset: function() {
            var i = l4.getService(fJ);
            i.saveState();
            i.resetSystems()
        },
        loadConfigurationOnHold: function() {
            if (this.hasConfigToDownload) {
                this.reset();
                kd.setConfigID(this._configToDownload);
                this._configToDownload = "";
                this.hasConfigToDownload = false
            }
        },
        handleConfigurationIdUpdate: function(i) {
            var q = i.data;
            if (this._loadedConfig == q) {
                eM.trace("Not updating the configuration since they have the sameID", {
                    fileName: "ConfigurationService.hx",
                    lineNumber: 165,
                    className: "agario.services.ConfigurationService",
                    methodName: "handleConfigurationIdUpdate"
                });
                return
            }
            this.loadConfig(q)
        },
        loadConfig: function(q) {
            var i1 = this;
            var i = this.loadGameConfiguration(q).then(oT(this, this.parseConfiguration)).pipe(oT(this, this.loadLocalizations)).then(oT(this, this.parseLocalization)).pipe(oT(this, this.loadAssetsManifest)).then(oT(this, this.parseManifest)).then(oT(this, this.registerSkinsInCore)).then(oT(this, this.loadPromotionSystem)).then(function(i2) {
                i1._loadedConfig = q;
                nK.get_events().fire("shop_event::newConfigLoaded");
                return
            }).catchError(oT(this, this.handleError))
        },
        handleError: function(i) {
            eM.trace("Failed to load Configuration", {
                fileName: "ConfigurationService.hx",
                lineNumber: 193,
                className: "agario.services.ConfigurationService",
                methodName: "handleError"
            });
            null
        },
        loadGameConfiguration: function(q) {
            var i1 = new cN();
            var i = this.getConfigUrl("GameConfiguration.json", q);
            if (nK.environment.get_isLocal()) {}
            var i2 = new o9(i);
            i2.addEventListener("complete", function(js) {
                i1.resolve(i2.data)
            });
            i2.start();
            return i1.boundPromise
        },
        parseConfiguration: function(i) {
            var q;
            try {
                q = new fn(new dB(i).parseRec().gameConfig);
                this._config = q
            } catch (i1) {
                lF.lastException = i1;
                if (i1 instanceof nM) {
                    i1 = i1.val
                }
                if (n0.__instanceof(i1, String)) {
                    eM.trace("Error parsing the configuration!", {
                        fileName: "ConfigurationService.hx",
                        lineNumber: 229,
                        className: "agario.services.ConfigurationService",
                        methodName: "parseConfiguration"
                    });
                    return false
                } else {
                    throw (i1)
                }
            }
            this.isInitialized = true;
            nK.get_events().dispatchEventWith("ShopEvent::CONFIGURATION_LOADED", this._config);
            return true
        },
        loadLocalizations: function(i1) {
            var i2 = new cN();
            var i = this.getLocalizationFile(nK.user.selectedLanguage);
            if (nK.environment.get_isLocal()) {}
            var q = new o9(i);
            q.addEventListener("complete", function(js) {
                i2.resolve(q.data)
            });
            q.start();
            return i2.boundPromise
        },
        parseLocalization: function(i) {
            dk.init(new dB(i).parseRec().texts);
            return true
        },
        loadAssetsManifest: function(q) {
            var js = new cN();
            var i = this.getConfigUrl("checksums/_manifestBase.json");
            var i2;
            if (nK.environment.get_isLocal()) {}
            var i1 = new o9(i);
            i1.addEventListener("complete", function(qY) {
                if (i1.error == null) {
                    js.resolve(cu.parse(i1.data))
                } else {
                    null
                }
            });
            i1.start();
            return js.boundPromise
        },
        parseManifest: function(i2) {
            var q = new gt(i2);
            var js = 0;
            var q0 = q.assets;
            while (js < q0.length) {
                var i1 = q0[js];
                ++js;
                this._assetsManifest.set(i1.id, i1);
                var qZ = i1.type;
                switch (qZ) {
                    case "atlas":
                        var q2 = new lZ({
                            id: i1.texture,
                            base: i1.base
                        });
                        this._assetsManifest.set(i1.texture, q2);
                        var q1 = new lZ({
                            id: i1.metafile,
                            base: i1.base
                        });
                        this._assetsManifest.set(i1.metafile, q1);
                        var qY = this.getConfigUrl(i1.texture);
                        var i = this.getConfigUrl(i1.metafile);
                        nK.get_assets().registerExternalAtlas(i1.id, qY, i);
                        null;
                        break;
                    case "framedsprite":
                        nK.get_assets().registerAsset(i1.id, this.getConfigUrl(i1.id), pe.FRAMED_SPRITE);
                        break;
                    case "image":
                        nK.get_assets().registerAsset(i1.id, this.getConfigUrl(i1.id), pe.SPRITE);
                        break;
                    case "font":
                        nK.get_assets().registerAsset(i1.id, this.getConfigUrl(i1.id), pe.FONT);
                        break;
                    default:
                        nK.get_assets().registerAsset(i1.id, this.getConfigUrl(i1.id))
                }
            }
            return true
        },
        registerSkinsInCore: function(i) {
            nK.models.registerSkinsInGameCore();
            return true
        },
        loadPromotionSystem: function(q) {
            var i1 = nK.ui.state.get_hasLoginIntent();
            var i = 0;
            if (i1) {
                i = 5000
            }
            px.engine.scheduleTask(i, function() {
                var i2 = l4.getService(fJ);
                i2.loadConfiguration()
            });
            return true
        },
        onConfigurationChange: function(q, i1) {
            if (i1 == null) {
                return
            }
            var i = i1;
            if (kd.configID != "" + (function(qY) {
                    var js;
                    var i2 = i.get_latest();
                    js = kr.string(fq.toFloat(i2));
                    return js
                }(this))) {
                this._configToDownload = "" + (function(qY) {
                    var js;
                    var i2 = i.get_latest();
                    js = kr.string(fq.toFloat(i2));
                    return js
                }(this));
                this.hasConfigToDownload = true
            }
        },
        get_currentConfig: function() {
            return this._config
        },
        __class__: kd,
        __properties__: {
            get_currentConfig: "get_currentConfig"
        }
    };
    var iM = function() {};
    nt["agario.services.EnvironmentService"] = iM;
    iM.__name__ = ["agario", "services", "EnvironmentService"];
    iM.prototype = {
        platform: null,
        authenticationProvider: null,
        webEnv: null,
        initialize: function() {
            this.webEnv = new bi();
            this.checkWebPlatform()
        },
        checkWebPlatform: function() {
            if (this.webEnv.hasParameter("fb")) {
                this.platform = bb.Facebook
            } else {
                if (this.webEnv.hasParameter("miniclip")) {
                    this.platform = bb.Miniclip
                } else {
                    this.platform = bb.Web
                }
            }
        },
        environment: null,
        get_environment: function() {
            if (d5.getProperty("env_local") != d5.NOT_FOUND) {
                return p6.Local
            }
            if (d5.getProperty("env_development") != d5.NOT_FOUND) {
                return p6.Development
            }
            if (d5.getProperty("env_staging") != d5.NOT_FOUND) {
                return p6.Staging
            }
            if (d5.getProperty("env_production") != d5.NOT_FOUND) {
                return p6.Live
            }
            return p6.Local
        },
        isLocal: null,
        get_isLocal: function() {
            return this.get_environment() == p6.Local
        },
        isInFacebook: null,
        get_isInFacebook: function() {
            return this.platform == bb.Facebook
        },
        __class__: iM,
        __properties__: {
            get_isInFacebook: "get_isInFacebook",
            get_isLocal: "get_isLocal",
            get_environment: "get_environment"
        }
    };
    var bb = nt["agario.services.WebPlatform"] = {
        __ename__: ["agario", "services", "WebPlatform"],
        __constructs__: ["Facebook", "Miniclip", "Web", "NonWeb"]
    };
    bb.Facebook = ["Facebook", 0];
    bb.Facebook.toString = ea;
    bb.Facebook.__enum__ = bb;
    bb.Miniclip = ["Miniclip", 1];
    bb.Miniclip.toString = ea;
    bb.Miniclip.__enum__ = bb;
    bb.Web = ["Web", 2];
    bb.Web.toString = ea;
    bb.Web.__enum__ = bb;
    bb.NonWeb = ["NonWeb", 3];
    bb.NonWeb.toString = ea;
    bb.NonWeb.__enum__ = bb;
    var N = nt["agario.services.WebAuthProvider"] = {
        __ename__: ["agario", "services", "WebAuthProvider"],
        __constructs__: ["Facebook", "Google", "Guest"]
    };
    N.Facebook = ["Facebook", 0];
    N.Facebook.toString = ea;
    N.Facebook.__enum__ = N;
    N.Google = ["Google", 1];
    N.Google.toString = ea;
    N.Google.__enum__ = N;
    N.Guest = ["Guest", 2];
    N.Guest.toString = ea;
    N.Guest.__enum__ = N;
    var p6 = nt["agario.services.DeployEnv"] = {
        __ename__: ["agario", "services", "DeployEnv"],
        __constructs__: ["Local", "Development", "Staging", "Live"]
    };
    p6.Local = ["Local", 0];
    p6.Local.toString = ea;
    p6.Local.__enum__ = p6;
    p6.Development = ["Development", 1];
    p6.Development.toString = ea;
    p6.Development.__enum__ = p6;
    p6.Staging = ["Staging", 2];
    p6.Staging.toString = ea;
    p6.Staging.__enum__ = p6;
    p6.Live = ["Live", 3];
    p6.Live.toString = ea;
    p6.Live.__enum__ = p6;
    var hp = function() {};
    nt["oaktree.ext.services.IConfigurable"] = hp;
    hp.__name__ = ["oaktree", "ext", "services", "IConfigurable"];
    hp.prototype = {
        configure: null,
        __class__: hp
    };
    var hB = function() {};
    nt["agario.services.IPayment"] = hB;
    hB.__name__ = ["agario", "services", "IPayment"];
    hB.__interfaces__ = [c8];
    hB.prototype = {
        buyProduct: null,
        getCurrencyCode: null,
        overrideCurrencyCode: null,
        __class__: hB
    };
    var fE = function() {
        this.loginComplete = false;
        this.configurationLoaded = false;
        this.currency_code = "USD"
    };
    nt["agario.services.FBPaymentService"] = fE;
    fE.__name__ = ["agario", "services", "FBPaymentService"];
    fE.__interfaces__ = [hp, hB];
    fE.prototype = {
        payment_endpoint: null,
        exchange_rate: null,
        original_currency_code: null,
        currency_code: null,
        _models: null,
        _authModel: null,
        configurationLoaded: null,
        loginComplete: null,
        create: function() {},
        initialize: function() {
            this._models = l4.getService(o7);
            this._models.onConfigurationLoaded.add(oT(this, this.onConfigurationLoaded));
            this._authModel = l4.getService(oF);
            nK.get_events().addEventListener("UserEvent::USER_LOGGED", oT(this, this.onLoginSuccess))
        },
        configure: function(i) {
            this.payment_endpoint = i.endpoint
        },
        onConfigurationLoaded: function() {
            this.configurationLoaded = true;
            this.fetchExchangeRate()
        },
        onLoginSuccess: function(i) {
            this.loginComplete = true;
            this.fetchExchangeRate()
        },
        getCurrencyCode: function() {
            return this.currency_code
        },
        overrideCurrencyCode: function(i) {
            this.currency_code = i;
            return i
        },
        buyProduct: function(q, i1, i) {
            var i2 = {
                method: "pay",
                action: "purchaseItem",
                product: "" + this.payment_endpoint + "?purchase_id=" + i1,
                quantity: 1
            };
            FB.ui(i2, oT(this, this.handleBuyProduct));
            nK.get_states().enable("state_xsolla_iframe")
        },
        handleBuyProduct: function(i) {
            nK.get_states().disable("state_xsolla_iframe")
        },
        fetchExchangeRate: function() {
            if (!this.configurationLoaded || !this.loginComplete) {
                return
            }
            var i = oT(this, this.handleExchangeResponse);
            FB.api("/me/?fields=currency", i)
        },
        handleExchangeResponse: function(q) {
            if (q != null && q.currency != null) {
                var i = new fd(q.currency);
                this.currency_code = this.original_currency_code = i.user_currency;
                this.exchange_rate = i;
                this._models.refreshShopItems()
            } else {
                null
            }
            nK.get_events().dispatchEventWith("payment_event::got_currency_code")
        },
        __class__: fE
    };
    var pu = function() {};
    nt["oaktree.ext.networking.IServer"] = pu;
    pu.__name__ = ["oaktree", "ext", "networking", "IServer"];
    pu.__interfaces__ = [c8];
    pu.prototype = {
        status: null,
        onConnect: null,
        onDisconnect: null,
        connect: null,
        disconnect: null,
        sendMessage: null,
        register: null,
        unregister: null,
        isConnected: null,
        __class__: pu
    };
    var hk = function() {
        this.disconnectedByRequest = false
    };
    nt["agario.services.GameServerService"] = hk;
	window.xd = hk;
    hk.__name__ = ["agario", "services", "GameServerService"];
    hk.__interfaces__ = [hp, pu];
    hk.encapsulateMessage = function(i, i1) {
        var q = new jV();
        q.set_type(i);
        var i2 = q.get_type();
        switch (i2) {
            case 70:
                q.set_softPurchaseRequestField(n0.__cast(i1, iQ));
                null;
                break;
            case 20:
                q.set_disconnectField(n0.__cast(i1, h4));
                null;
                break;
            case 10:
                q.set_loginRequestField(n0.__cast(i1, ck));
                break;
            case 80:
                q.set_updateUserSettingsRequestField(n0.__cast(i1, jE));
                break;
            case 112:
                q.set_activateBoostRequestField(n0.__cast(i1, a2));
                break;
            case 62:
                q.set_gameOverField(n0.__cast(i1, jy));
                break;
            case 110:
                q.set_activateTimedEventRequestField(n0.__cast(i1, oe));
                break;
            case 33:
                q.set_configurationChangeField(i1);
                break;
            case 102:
                q.set_sendGiftsField(n0.__cast(i1, jZ));
                break;
            case 104:
                q.set_requestGiftsField(n0.__cast(i1, be));
                break;
            case 100:
                q.set_claimGiftsRequestField(n0.__cast(i1, aI));
                break;
            case 103:
                q.set_consumeRequestsField(n0.__cast(i1, pl));
                break;
            case 114:
                q.set_activateQuestRequestField(n0.__cast(i1, jd));
                break;
            default:
                null
        }
        return q
    };
    hk.addEnvelope = function(i) {
        return hk.packageMessage(i)
    };
    hk.packageMessage = function(i) {
        var q = new aa();
        q.set_contentType(1);
        q.set_uncompressedData(i);
        return q
    };
    hk.prototype = {
        status: null,
        onConnect: null,
        onDisconnect: null,
        uri: null,
        messageMapping: null,
        disconnectedByRequest: null,
        create: function() {
            this.onConnect = new qv();
            this.onDisconnect = new qt();
            this.messageMapping = new c6()
        },
        initialize: function() {
            this.status = cr.DISCONNECTED;
            this.onConnect.add(oT(this, this.handleConnect));
            this.onDisconnect.add(oT(this, this.handleDisconnect));
            var i = l4.getService(o7);
            i.onConfigurationLoaded.add(oT(this, this.onConfigurationLoaded))
        },
        configure: function(i) {},
        onConfigurationLoaded: function() {
            var i = nK.models.defaultCommunicationSettings
        },
        handleDisconnect: function(i) {
            this.status = cr.DISCONNECTED;
            this.disconnectedByRequest = false;
            nK.get_events().dispatchEventWith("ShopEvent::connectionLost")
        },
        handleConnect: function() {
            this.status = cr.CONNECTED
        },
        connect: function(i, q) {
            if (q == null) {
                q = false
            }
        },
        disconnect: function() {
            if (this.status == cr.CONNECTED || this.status == cr.CONNECTING) {
                this.disconnectedByRequest = true;
                this.status = cr.DISCONNECTED
            }
        },
        sendMessage: function(q, i2) {
            var i1 = hk.addEnvelope(hk.encapsulateMessage(q, i2));
            var i = new eu();
            i1.writeTo(i);
            var qY = op.fromBytes(i.getBytes());
            var js = qY;
            var qZ = js.b;
            if (window.core) {
                window.core.proxyMobileData(qZ)
            }
        },
        register: function(i, q) {
            var i2;
            if (this.messageMapping.h.hasOwnProperty(i)) {
                i2 = this.messageMapping.h[i]
            } else {
                i2 = [];
                this.messageMapping.h[i] = i2
            }
            var js = 0;
            while (js < i2.length) {
                var i1 = i2[js];
                ++js;
                if (i1 == q) {
                    return false
                }
            }
            i2.push(q);
            return true
        },
        unregister: function(i, q) {
            if (this.messageMapping.h.hasOwnProperty(i)) {
                var i1 = this.messageMapping.h[i];
                return cj.remove(i1, q)
            }
            return false
        },
        injectPacket: function(i) {
            this.deliverRequest(this.parseInboxPacket(i), true)
        },
        injectReq: function(i) {
            this.deliverRequest(i, true)
        },
        handleSocketData: function(i) {
            this.deliverRequest(this.parseInboxPacket(i), false)
        },
        parseInboxPacket: function(q) {
            var qY = q;
            var i2 = null;
            try {
			
                var i1 = new aa();
                i1.mergeFrom(q);
				console.log("wot.com");
                if (i1.get_contentType() == 1) {
                    i2 = i1.get_uncompressedData()
                } else {
                    i2 = new jV();
                    var i = dw.run(i1.get_compressedData());
                    i2.mergeFrom(i)
					//console.log(i)
                }
            } catch (js) {
				console.log(js);
                lF.lastException = js;
                if (js instanceof nM) {
                    js = js.val
                }
                eM.trace("Got invalid message from server", {
                    fileName: "GameServerService.hx",
                    lineNumber: 283,
                    className: "agario.services.GameServerService",
                    methodName: "parseInboxPacket"
                });
                null
            }
            if (i2 == null) {
                null
            }
            return i2
        },
        deliverRequest: function(i2, q) {
            if (q == null) {
                q = false
            }
            if (i2 == null) {
                return
            }
            if (!q) {
                null
            }
            if ((function(q2) {
                    var q0;
                    var q1 = i2.get_type();
                    q0 = q2.messageMapping.h.hasOwnProperty(q1);
                    return q0
                }(this))) {
                var i = this.unpackageMessage(i2);
                var qY = 0;
                var js;
                var i1 = i2.get_type();
                js = this.messageMapping.h[i1];
                while (qY < js.length) {
                    var qZ = js[qY];
                    ++qY;
                    qZ(i2.get_type(), i)
                }
            } else {
                null
            }
        },
        unpackageMessage: function(i) {
            var i1 = new cX();
            var q = i.get_type();
            switch (q) {
                case 71:
                    i1 = i.get_softPurchaseResponseField();
                    break;
                case 74:
                    i1 = i.get_inappPurchaseResponseField();
                    break;
                case 20:
                    i1 = i.get_disconnectField();
                    break;
                case 113:
                    i1 = i.get_activateBoostResponseField();
                    break;
                case 11:
                    i1 = i.get_loginResponseField();
                    break;
                case 10:
                    i1 = i.get_loginRequestField();
                    break;
                case 81:
                    i1 = i.get_updateUserSettingsResponseField();
                    break;
                case 111:
                    i1 = i.get_activateTimedEventResponseField();
                    break;
                case 76:
                    i1 = i.get_purchaseWalletUpdatesField();
                    break;
                case 62:
                    i1 = i.get_gameOverField();
                    break;
                case 75:
                    i1 = i.get_walletUpdatesField();
                    break;
                case 116:
                    i1 = i.get_userTimedEventUpdatesField();
                    break;
                case 33:
                    i1 = i.get_configurationChangeField();
                    break;
                case 101:
                    i1 = i.get_claimGiftsResponseField();
                    break;
                case 115:
                    i1 = i.get_activateQuestResponseField();
                    break;
                default:
                    null
            }
            return i1
        },
        isConnected: function() {
            return this.status == cr.CONNECTED
        },
        __class__: hk
    };
    var oD = function() {};
    nt["agario.services.GamepadControllerService"] = oD;
    oD.__name__ = ["agario", "services", "GamepadControllerService"];
    oD.__interfaces__ = [c8];
    oD.prototype = {
        gamepadAxisUpdate: null,
        sendMitosisCallback: null,
        ejectMassCallback: null,
        create: function() {},
        initialize: function() {
            lE.onConnect.add(oT(this, this.onConnect))
        },
        onConnect: function(i) {
            eM.trace("new gamepad connected: " + i.id, {
                fileName: "GamepadControllerService.hx",
                lineNumber: 36,
                className: "agario.services.GamepadControllerService",
                methodName: "onConnect"
            });
            nK.services.gameui.showGamepadConnected();
            i.onDisconnect.add(oT(this, this.onDisconnect));
            i.onButtonDown.add(oT(this, this.onButtonDown));
            i.onButtonUp.add(oT(this, this.onButtonUp));
            i.onAxisMove.add(oT(this, this.onAxisMove))
        },
        onAxisMove: function(i, q) {
            if (this.gamepadAxisUpdate != null) {
                this.gamepadAxisUpdate(i, q)
            }
        },
        onButtonDown: function(i) {
            if (i == 0 && this.sendMitosisCallback != null) {
                this.sendMitosisCallback()
            }
            if (i == 1 && this.ejectMassCallback != null) {
                this.ejectMassCallback()
            }
        },
        onButtonUp: function(i) {
            eM.trace("button released:" + (function(i1) {
                var q;
                switch (i) {
                    case 0:
                        q = "A";
                        break;
                    case 1:
                        q = "B";
                        break;
                    case 2:
                        q = "X";
                        break;
                    case 3:
                        q = "Y";
                        break;
                    case 4:
                        q = "BACK";
                        break;
                    case 5:
                        q = "GUIDE";
                        break;
                    case 6:
                        q = "START";
                        break;
                    case 7:
                        q = "LEFT_STICK";
                        break;
                    case 8:
                        q = "RIGHT_STICK";
                        break;
                    case 9:
                        q = "LEFT_SHOULDER";
                        break;
                    case 10:
                        q = "RIGHT_SHOULDER";
                        break;
                    case 11:
                        q = "DPAD_UP";
                        break;
                    case 12:
                        q = "DPAD_DOWN";
                        break;
                    case 13:
                        q = "DPAD_LEFT";
                        break;
                    case 14:
                        q = "DPAD_RIGHT";
                        break;
                    default:
                        q = "UNKNOWN (" + i + ")"
                }
                return q
            }(this)), {
                fileName: "GamepadControllerService.hx",
                lineNumber: 68,
                className: "agario.services.GamepadControllerService",
                methodName: "onButtonUp"
            })
        },
        onDisconnect: function() {
            nK.services.gameui.showGamepadDisconnected();
            eM.trace("gamepad disconnected", {
                fileName: "GamepadControllerService.hx",
                lineNumber: 75,
                className: "agario.services.GamepadControllerService",
                methodName: "onDisconnect"
            })
        },
        __class__: oD
    };
    var fF = function() {};
    nt["agario.services.PaymentEvent"] = fF;
    fF.__name__ = ["agario", "services", "PaymentEvent"];
    var fh = function() {
        this.initialize()
    };
    nt["agario.services.ServicesManager"] = fh;
    fh.__name__ = ["agario", "services", "ServicesManager"];
    fh.prototype = {
        shop: null,
        gameui: null,
        config: null,
        view: null,
        promo: null,
        initialize: function() {
            this.gameui = new qW();
            this.shop = l4.getService(f4);
            this.config = l4.getService(kd);
            this.view = l4.getService(qz);
            this.promo = l4.getService(fJ)
        },
        __class__: fh
    };
    var f4 = function() {
        this.isOpen = false;
        this.isShopAvailable = false;
        this.shouldShowUseInfo = true
    };
    nt["agario.services.ShopService"] = f4;
    f4.__name__ = ["agario", "services", "ShopService"];
    f4.__interfaces__ = [c8];
    f4.prototype = {
        _gameServer: null,
        _payModel: null,
        shouldShowUseInfo: null,
        onSoftPurchaseResponse: null,
        onUseResponse: null,
        S_notEnoughCoins: null,
        playerInfoData: null,
        isShopAvailable: null,
        isOpen: null,
        create: function() {
            this.onSoftPurchaseResponse = new qt();
            this.onUseResponse = new qt();
            this.S_notEnoughCoins = new qv();
            nK.get_events().addEventListener("ShopEvent::BUY", oT(this, this.handlePurchaseEvent));
            nK.get_events().addEventListener("ShopEvent::USE", oT(this, this.useItem));
            nK.get_events().addEventListener("ShopEvent::UNEQUIP", oT(this, this.unequipSkin))
        },
        initialize: function() {
            this._payModel = l4.getService(hB);
            this._gameServer = l4.getService(hk);
            this._gameServer.register(71, oT(this, this.handleMessage));
            this._gameServer.register(113, oT(this, this.handleMessage));
            this._gameServer.register(76, oT(this, this.handleMessage));
            this._gameServer.register(75, oT(this, this.handleMessage));
            this._gameServer.onConnect.add(oT(this, this.handleConnectionOpen));
            this._gameServer.onDisconnect.add(oT(this, this.handleConnectionClosed));
            nK.get_events().listen("UserEvent::USER_LOGGED", oT(this, this.onUserLogin));
            nK.get_events().listen("ShopEvent::CONFIGURATION_LOADED", oT(this, this.onConfigurationLoaded));
            nK.get_events().listen("shop_event::configComplete", oT(this, this.onConfigComplete))
        },
        onConfigComplete: function(i) {
            nK.get_events().unlisten("shop_event::configComplete", oT(this, this.onConfigComplete))
        },
        onUserLogin: function() {
            nK.views.closeAllViews();
            nK.user.set_isConnecting(false);
            if (!nK.user.loggedIn) {
                return
            }
            this.isShopAvailable = true;
            var i = "";
            if (nK.models != null && nK.models.shopSkinsModel != null && nK.ui.settings != null) {
                var q = nK.models.shopSkinsModel.getItemById(nK.ui.settings.get_skinId());
                if (q != null) {
                    i = q.skinType
                }
            }
            if (nK.user.userSettings == null || nK.user.userSettings.length == 0 || i == "MYSTERY") {
                this.setDefaultSkin()
            }
            nK.services.gameui.setUserCoins(nK.user.get_coins());
            nK.services.gameui.setMobileUser(nK.user.userInfo.hasLoggedIntoMobile)
        },
        onConfigurationLoaded: function(i) {
            nK.get_events().unlisten("ShopEvent::CONFIGURATION_LOADED", oT(this, this.onConfigurationLoaded));
            this.checkIfShopCanBeShown()
        },
        checkIfShopCanBeShown: function() {
            var q = nK.services.config.isInitialized;
            var i = this._gameServer.status == cr.CONNECTED;
            var i1 = nK.services.gameui.hasLoginIntent();
            if (!q || !i) {
                return
            }
            if (!i1) {
                nK.services.gameui.enableShop()
            }
        },
        handleConnectionOpen: function() {
            this.checkIfShopCanBeShown()
        },
        handleConnectionClosed: function(i) {
            this.isShopAvailable = false;
            nK.user.set_isConnecting(true);
            nK.services.gameui.disableShop();
            if (this.isOpen) {
                nK.get_events().dispatchEventWith("ShopEvent::connectionLost")
            }
        },
        handleMessage: function(q, i) {
            switch (q) {
                case 71:
                    this.shouldShowUseInfo = false;
                    this.handleSoftPurchaseResponse(n0.__cast(i, cB));
                    break;
                case 113:
                    this.handleUserBoostUpdate(n0.__cast(i, jR));
                    break;
                case 76:
                    this.handlePurchaseWalletUpdates(n0.__cast(i, p8));
                    break;
                case 75:
                    this.handleWalletUpdate(n0.__cast(i, T));
                    break;
                default:
                    null
            }
        },
        handleWalletUpdate: function(i) {
            nK.user.handleUserUpdates(i.get_productUpdates())
        },
        makeInAppPurchase: function(i) {
            this._payModel.buyProduct(nK.user.id, i, this._payModel.getCurrencyCode())
        },
        activateTimedEvent: function(i) {
            var q = new oe();
            q.set_eventId(i);
            this._gameServer.sendMessage(110, q)
        },
        makeSoftPurchase: function(i) {
            if (nK.models.shopPurchasesModel.getSoftPurchaseByPurchaseId(i).currencyAmount > nK.user.get_coins()) {
                this.S_notEnoughCoins.dispatch();
                return false
            } else {
                var q = new iQ();
                q.set_purchaseId(i);
                this._gameServer.sendMessage(70, q);
                return true
            }
        },
        handlePurchaseEvent: function(q) {
            if (q.data == null) {
                return
            }
            var i = q.data;
            this.makePurchase(i)
        },
        makePurchase: function(i1) {
            if (nK.user.isGuest) {
                nK.get_events().fire("ShopEvent::show_guest_conversion");
                return false
            }
            var q = nK.models.shopPurchasesModel.getPurchaseByPurchaseId(i1);
            if (q.type == "INAPP") {
                this.makeInAppPurchase(i1);
                return true
            } else {
                if (q.type == "SOFT") {
                    var i = new me();
                    var i2 = this.makeSoftPurchase(i1);
                    if (i2 == false) {
                        i.dispose();
                        return i2
                    }
                    nK.views.openView(i, {
                        priority: 2,
                        animate: true,
                        allowClickClose: false,
                        callerView: lp.instance.shopDialog
                    });
                    nK.get_events().dispatchEventWith("ShopEvent::DISABLE_SHOP");
                    return true
                }
            }
            return false
        },
        useItem: function(qY) {
            var i1 = qY.data;
            if (n0.__instanceof(i1, gM)) {
                this.setSkin((n0.__cast(i1, gM)).productIdToQuantify);
                var qZ = 0;
                var i2 = nK.models.shopSkinsModel.skinList;
                while (qZ < i2.length) {
                    var js = i2[qZ];
                    ++qZ;
                    js.set_inUse(false)
                }
                i1.set_inUse(true);
                this.shouldShowUseInfo = false
            } else {
                if (n0.__instanceof(i1, bt)) {
                    var q = new a2();
                    q.set_productId((n0.__cast(i1, bt)).gameplayInfo.productId);
                    this._gameServer.sendMessage(112, q);
                    this.shouldShowUseInfo = false
                }
            }
            if (this.shouldShowUseInfo) {
                var i = new fp("0");
                nK.views.openView(i, {
                    priority: 2,
                    animate: true,
                    allowClickClose: false,
                    callerView: lp.instance.shopDialog
                });
                nK.get_events().dispatchEventWith("ShopEvent::DISABLE_SHOP")
            }
            this.shouldShowUseInfo = true
        },
        unequipSkin: function(i) {
            this.setDefaultSkin()
        },
        setDefaultSkin: function() {
            if (nK.models.defaultSettings != null && nK.user.defaultSkin == "") {
                nK.user.defaultSkin = nK.models.defaultSettings.getSettingByKey("skinUnequippedTag")
            }
            this.setSkin(nK.user.defaultSkin)
        },
        setSkin: function(i) {
            nK.ui.settings.set_skinId(i);
            nK.ui.settings.save();
            nK.models.shopItems.setSkinUse(i);
            var i1 = nK.models.shopSkinsModel.getItemById(i);
            if (i != nK.user.defaultSkin && i1 != null) {
                var q = i1.gamePlayInfo.get_shopImage();
                nK.services.gameui.setUserSkin(q, i1.gamePlayInfo.get_cellColor(), i1.skinType);
                if (window.core) {
                    window.core.loadSkin(i1.gamePlayInfo.get_skinName())
                }
            } else {
                nK.services.gameui.setUserSkin(nK.user.defaultSkin)
            }
            nK.views.updateViews()
        },
        handleUserBoostUpdate: function(i2) {
            var q1 = false;
            nK.user.evaluateWallet();
            var q = i2.get_userBoostItem().get_expiresInSeconds();
            if (i2.get_userBoostItem().get_productId() == null || q <= 0) {
                nK.get_events().dispatchEventWith("ShopEvent::useProductFailed");
                return
            }
            var q3 = new gX();
            q3.set_productId(i2.get_userBoostItem().get_productId());
            q3.set_expiresInSeconds(i2.get_userBoostItem().get_expiresInSeconds());
            var i1 = nK.models.shopBoostItems.getItemByProductId(q3.get_productId());
            var q0 = nK.user.userBoosts.length;
            var qY = 0;
            while (qY < q0) {
                var js = qY++;
                var qZ = q0 - js - 1;
                var q2 = nK.models.shopBoostItems.getItemByProductId(nK.user.userBoosts[qZ].get_productId());
                if (q2.categoryShopId == i1.categoryShopId) {
                    q1 = true;
                    cj.remove(nK.user.userBoosts, nK.user.userBoosts[qZ])
                }
            }
            nK.user.userBoosts.push(q3);
            nK.user.evaluateWallet();
            nK.user.handleUserUpdates((n0.__cast(i2, jR)).get_productUpdates());
            if (!q1) {
                if (this.shouldShowUseInfo) {
                    this.onUseResponse.dispatch(nK.models.shopBoostItems.getItemByProductId(q3.get_productId()));
                    this.shouldShowUseInfo = true
                }
            }
            nK.views.updateViews();
            nK.services.promo.postEvent("PROMO_ACTIVATE_BOOST");
            nK.services.promo.postEvent(j5.withFormat("PROMO_ACTIVATE_BOOST_%@", [q3.get_productId()]))
        },
        handleSoftPurchaseResponse: function(i) {
            this.onSoftPurchaseResponse.dispatch(i);
            if (i.get_result() == 1) {
                nK.services.promo.postEvent("PROMO_SOFT_PURCHASE");
                nK.services.promo.postEvent(j5.withFormat("PROMO_SOFT_PURCHASE_%@", [i.get_purchaseId()]))
            }
        },
        handleIAPComplete: function(i) {
            qm.displayProductPurchaseScreen(i)
        },
        handlePurchaseWalletUpdates: function(i1) {
            var q = i1.get_purchaseId();
            var i = i1.get_walletUpdates();
            var i2 = i.get_productUpdates();
            if (i2.length <= 0) {
                return
            }
            this.handleIAPComplete(q);
            nK.user.handleUserUpdates(i2);
            nK.services.promo.postEvent("PROMO_IN_APP");
            nK.services.promo.postEvent("PROMO_IS_PAYING_USER");
            nK.services.promo.postEvent(j5.withFormat("PROMO_IN_APP_%@", [q]));
            var js = nK.services.promo.fetchPurchaseActions(q);
            if (js != null) {
                js(true)
            }
        },
        __class__: f4
    };
    var qz = function() {};
    nt["agario.services.ViewService"] = qz;
    qz.__name__ = ["agario", "services", "ViewService"];
    qz.__interfaces__ = [c8];
    qz.prototype = {
        create: function() {
            nK.get_events().addEventListener("ShopEvent::show_guest_conversion", oT(this, this.showGuest))
        },
        initialize: function() {},
        showGuest: function(q) {
            if (nK.get_states().isEnabled("state_guest_login_dialog")) {
                return
            }
            var i = new l3(q.data);
            nK.views.openView(i, {
                priority: 2,
                animate: true,
                allowClickClose: true
            });
            i.addEventListener("close", oT(this, this.onGuestClose));
            nK.get_events().dispatchEventWith("ShopEvent::DISABLE_SHOP");
            nK.get_events().dispatchEventWith("shop_event::allow_disable_close", false)
        },
        onGuestClose: function(i) {},
        __class__: qz
    };
    var ec = function() {
        this.currencyCode = "USD"
    };
    nt["agario.services.XsollaPaymentService"] = ec;
    ec.__name__ = ["agario", "services", "XsollaPaymentService"];
    ec.__interfaces__ = [hp, hB];
    ec.prototype = {
        payment_endpoint: null,
        currencyCode: null,
        _models: null,
        create: function() {},
        initialize: function() {
            this._models = l4.getService(o7);
            this._models.onConfigurationLoaded.add(oT(this, this.fetchStoreItems))
        },
        configure: function(i) {
            this.payment_endpoint = i.endpoint
        },
        buyProduct: function(q, i1, i) {
            this.doShowPaymentModal("" + this.payment_endpoint + "/pay/" + q + "/" + i1 + "/" + i)
        },
        doShowPaymentModal: function(i) {
            var q = this;
            $.get(i, function(i1) {
                $("#modal-payment-link").attr("href", i1.iframe_url);
                jQuery(".xsolla_container").magnificPopup({
                    type: "iframe",
                    mainClass: "mfp-fade",
                    preloader: true,
                    fixedContentPos: false,
                    callbacks: {
                        close: function() {
                            q.onIframeClose()
                        }
                    }
                });
                $("#modal-payment-link").click()
            });
            nK.get_states().enable("state_xsolla_iframe")
        },
        onIframeClose: function() {
            nK.get_states().disable("state_xsolla_iframe")
        },
        handleBuyProduct: function(i) {
            null
        },
        getCurrencyCode: function() {
            return this.currencyCode
        },
        overrideCurrencyCode: function(i) {
            this.currencyCode = i;
            return i
        },
        fetchStoreItems: function() {
            var i = new dM("" + this.payment_endpoint + "/shop-items");
            i.onData = oT(this, this.handleFetchStore);
            i.onError = function(q) {
                null
            };
            i.request()
        },
        handleFetchStore: function(qY) {
            var i2 = new om(new dB(qY).parseRec());
            if (i2 == null) {
                return
            }
            this.currencyCode = i2.currency_code;
            var i = "com.miniclip.agario.";
            var qZ = 0;
            var js = i2.items;
            while (qZ < js.length) {
                var i1 = js[qZ];
                ++qZ;
                var q = this._models.shopItems.getItemByPurchaseId("" + i1.sku);
                if (q != null) {
                    q.price = i1.price
                }
            }
            nK.get_events().dispatchEventWith("payment_event::got_currency_code")
        },
        __class__: ec
    };
    var nA = function() {};
    nt["agario.services.gameui.BaseGameUIService"] = nA;
    nA.__name__ = ["agario", "services", "gameui", "BaseGameUIService"];
    nA.prototype = {
        enableShop: function() {
            null
        },
        setUserSkin: function(i1, q, i) {
            if (i == null) {
                i = ""
            }
            if (q == null) {
                q = ""
            }
            null
        },
        setUserXPBoost: function(i) {
            null
        },
        setUserMassBoost: function(i) {
            null
        },
        setGiftInboxCounter: function(i) {
            null
        },
        setQuestsWarning: function(i, q, i1) {
            if (i1 == null) {
                i1 = 0
            }
            null
        },
        setBoostPlus: function(i) {
            null
        },
        setBubbleQuantity: function(i, q) {
            null
        },
        showRetryOption: function() {
            null
        },
        setTimerForBoost: function(q, i1, i2, i) {
            null
        },
        setTimerForQuest: function(q, i1, i2, i) {
            null
        },
        closeShop: function() {
            null
        },
        setIcon: function(i, q) {
            null
        },
        setUserCoins: function(i) {
            null
        },
        setUserName: function(i) {},
        setUserAvatar: function(i) {},
        getUserSocialId: function(i) {
            i("100000415416793")
        },
        disableShop: function() {
            null
        },
        setVersionTag: function(i) {
            null
        },
        setUserIdTag: function(i) {
            null
        },
        doLogout: function() {
            null
        },
        setMobileUser: function(i) {
            null
        },
        showGamepadConnected: function() {
            null
        },
        showGamepadDisconnected: function() {
            null
        },
        setAccountData: function(q, i) {},
        setGuestInfo: function() {},
        clearTimers: function() {},
        showContainer: function() {},
        hideContainer: function() {},
        lockContainer: function() {},
        unlockContainer: function() {},
        openOfferWall: function() {},
        closeOfferWall: function() {},
        openVideoAd: function() {},
        closeVideoAd: function() {},
        openTapResearchOfferWall: function() {},
        closeTapResearchOfferWall: function() {},
        getUserEngagement: function() {
            return false
        },
        hasLoginIntent: function() {
            return false
        },
        __class__: nA
    };
    var qW = function() {
        this.isContainerVisible = true;
        this.runningTimers = [];
        nA.call(this);
        nK.get_events().addEventListener("UserEvent::USER_LOGGED", oT(this, this.onUserLogged))
    };
    nt["agario.services.gameui.backend.js.GameUIService"] = qW;
    qW.__name__ = ["agario", "services", "gameui", "backend", "js", "GameUIService"];
    qW.__super__ = nA;
    qW.prototype = lP(nA.prototype, {
        runningTimers: null,
        isContainerVisible: null,
        onUserLogged: function(i) {
            this.setUserIdTag("User id: " + nK.user.userInfo.displayName);
            nK.user.userInfo.xpNeeded = nK.models.xpModel.getMaxXpForLevel(nK.user.userInfo.level);
            agarApp.core.trigger("user_login", [nK.user]);
            if (nK.user.userInfo.level >= nK.models.xpModel.xpList.length) {
                nK.user.userInfo.xp = nK.user.userInfo.xpNeeded
            }
            agarApp.account.setUserData(nK.user.userInfo);
            this.enableShop()
        },
        setUserSkin: function(qY, js, i2) {
            if (i2 == null) {
                i2 = ""
            }
            if (js == null) {
                js = ""
            }
            var q = $("#skinButton img");
            q.addClass("circle bordered");
            q.height("90px");
            if (qY == nK.user.defaultSkin || qY == "") {
                var i = $("#skinLabel");
                i.fadeIn(100);
                q.fadeOut(100);
                q.attr("src", "");
                $("#skinButton").addClass("circle bordered");
                $("#skinButton").height("90px")
            } else {
                var i1 = $("#skinLabel");
                q.attr("src", qY);
                q.css("border", "3px solid " + cP.replace(js, "0x", "#"));
                i1.fadeOut(100);
                q.fadeIn(100);
                $("#skinButton").removeClass("circle bordered")
            }
            $("#skinButton").attr("data-type", i2)
        },
        setMobileUser: function(i) {
            if (i == false) {
                $(".agario-promo").fadeOut(400);
                $("#agario-web-incentive").delay(800).fadeIn(400)
            }
        },
        setUserXPBoost: function(i1) {
            var q = this.getTargetHTML(bF.XP_BOOST);
            var i = $(q + " div");
            i.attr("class", "circle small red");
            if (i1 == "0" || i1 == "+") {
                i1 = "+";
                this.setBoostPlus(bF.XP_BOOST)
            } else {
                this.setBubbleQuantity(bF.XP_BOOST, i1)
            }
        },
        setUserMassBoost: function(i1) {
            var q = this.getTargetHTML(bF.MASS_BOOST);
            var i = $(q + " div");
            i.attr("class", "circle small red");
            if (i1 == "0" || i1 == "+") {
                i1 = "+";
                this.setBoostPlus(bF.MASS_BOOST)
            } else {
                this.setBubbleQuantity(bF.MASS_BOOST, i1)
            }
        },
        setGiftInboxCounter: function(i2) {
            var i = this.getTargetHTML("giftButton");
            var i1 = $(i + " div");
            i1.attr("class", "circle small red gifts");
            var q = kr.parseInt(i2);
            if (q == 0 || i2 == "") {
                i1.hide()
            } else {
                i1.show();
                this.setBubbleQuantity("giftButton", i2)
            }
        },
        setQuestsWarning: function(i, q, i2) {
            if (i2 == null) {
                i2 = 0
            }
            var i1 = this.getTargetHTML("dailyQuestsButton");
            var js = $(i1 + " div");
            js.attr("class", "circle small red quests");
            this.setBubbleQuantity("dailyQuestsButton", "!");
            if (i) {
                js.show();
                if (q) {
                    js.addClass("animated pulse")
                } else {
                    js.removeClass("animated pulse")
                }
            } else {
                js.hide()
            }
            this.setTimerForQuest("dailyQuestsButton", i2, oT(this, this.onQuestTimeComplete), "quest")
        },
        onQuestTimeComplete: function() {},
        setBoostPlus: function(i1) {
            var q = this.getTargetHTML(i1);
            var i = $(q + " div");
            i.attr("class", "circle small green");
            this.setBubbleQuantity(i1, "+")
        },
        setBubbleQuantity: function(i1, i2) {
            var q = this.getTargetHTML(i1);
            var i = $(q + " div");
            i.children("span").text(i2);
            $(q + " .outlined-text").removeClass("plus-text");
            if (i2 == "+") {
                $(q + " .outlined-text").addClass("plus-text")
            }
        },
        enableShop: function() {
            $("#openShopBtn").removeAttr("disabled");
            $(".shop-left-container").show();
            $(".shop-right-container").show();
            $(".vertical-line").show();
            $(".agario-shop-panel .text-muted").html("");
            $(".agario-shop-panel").fadeIn(200);
            $("#retryBtn").hide();
            $(".shop-blocker").fadeOut(100)
        },
        disableShop: function() {
            $("#openShopBtn").attr("disabled", "");
            $(".shop-blocker").fadeIn(100);
            this.setUserXPBoost("0");
            this.setUserMassBoost("0");
            this.setUserSkin("");
            this.setGiftInboxCounter("0")
        },
        showRetryOption: function() {
            $(".shop-left-container").hide();
            $(".shop-right-container").hide();
            $(".vertical-line").hide();
            $(".shop-blocker").fadeOut(100);
            $("#retryBtn").show();
            $(".agario-shop-panel .text-muted").html("");
            $(".agario-shop-panel .text-muted").html(dk.text("shop_unavailable_message"))
        },
        setTimerForBoost: function(i1, i2, qY, q) {
            var i = this.getTargetHTML(i1);
            var js = $(i + " .timer");
            $(i + " div").attr("class", "circle small gray");
            js.show();
            this.setTimer(i, i2, qY, q)
        },
        setTimerForQuest: function(i1, i2, qY, q) {
            if (i2 > 0) {
                var i = this.getTargetHTML(i1);
                var js = $(i + " .timer");
                js.show();
                this.setTimer(i, i2, qY, q)
            } else {
                this.hideTimerForQuest(i1, q)
            }
        },
        hideTimerForQuest: function(i1, q) {
            var i = this.getTargetHTML(i1);
            var i2 = $(i + " .timer");
            i2.hide();
            this.removeTimer(q)
        },
        setIcon: function(i, q) {
            $(this.getTargetHTML(i) + " img").attr("src", cb.config.assetsPrefix + q)
        },
        getTargetHTML: function(q) {
            var i = "";
            switch (q) {
                case "xp_boost":
                    i = "#boostButton";
                    break;
                case "mass_boost":
                    i = "#massButton";
                    break;
                case "giftButton":
                    i = "#giftButton";
                    break;
                case "dailyQuestsButton":
                    i = "#dailyQuestsButton";
                    break
            }
            return i
        },
        closeShop: function() {
            var q = this.runningTimers.length;
            var i2 = 0;
            while (i2 < q) {
                var i1 = i2++;
                if (this.runningTimers[i1] == null) {
                    continue
                }
                this.runningTimers[i1].stop();
                $(kr.string(this.runningTimers[i1].data.container) + " .timer").text("");
                cj.remove(this.runningTimers, this.runningTimers[i1])
            }
            this.setUserSkin("")
        },
        setUserCoins: function(i) {
            var q = j5.formatNumber(i, "n", " ");
            $(".agario-wallet-label").text(q == null ? "null" : "" + q)
        },
        setUserName: function(i) {
            $(".agario-profile-name").text(i)
        },
        setUserAvatar: function(i) {
            $(".agario-profile-picture").attr("src", i)
        },
        setVersionTag: function(i) {
            $("#version-tag").text(i)
        },
        setUserIdTag: function(i) {
            $("#user-id-tag").text(i)
        },
        hasLoginIntent: function() {
            return window.storageInfo.loginIntent == "1"
        },
        getUserSocialId: function(i) {
            FB.api("/me", function(q) {
                if (q && !q.error) {
                    i(q.id)
                }
            })
        },
        doLogout: function() {
            window.logout()
        },
        showGamepadConnected: function() {
            if ("gamepad" in queryString) {
                $("#controller_alert_connected").fadeIn(500).delay(3000).fadeOut(500)
            }
        },
        showGamepadDisconnected: function() {
            if ("gamepad" in queryString) {
                $("#controller_alert_disconnected").fadeIn(500).delay(3000).fadeOut(500)
            }
        },
        setAccountData: function(q, i) {
            agarApp.account.setAccountData(q, i)
        },
        setGuestInfo: function() {
            this.setAccountData({
                level: 1,
                xp: 0,
                xpNeeded: 50
            }, false);
            this.setUserCoins(100);
            this.setUserName("Guest");
            this.setUserAvatar(nK.services.config.getRootUrl("img/profilepic_guest.png"));
            this.setUserXPBoost("0");
            this.setUserMassBoost("0");
            this.setGiftInboxCounter("0");
            $("#agario-web-incentive").fadeOut(100);
            $(".agario-promo").delay(200).fadeIn(400)
        },
        setTimer: function(q, i2, q2, js) {
            var q1 = false;
            var q0 = 0;
            var qZ = this.runningTimers.length;
            while (q0 < qZ) {
                var qY = q0++;
                if (this.runningTimers[qY].data.productId == js) {
                    q1 = true
                }
            }
            if (!q1) {
                var i1 = new qT(1000);
                i1.data.targetDate = new Date().getTime() + i2 * 1000;
                i1.data.container = q;
                i1.data.productId = js;
                i1.addEventListener("timer", oT(this, this.onTimerTick));
                i1.data.callBack = q2;
                i1.start();
                this.runningTimers.push(i1)
            }
        },
        onTimerTick: function(i) {
            var qY;
            qY = n0.__cast(i.currentTarget, qT);
            var i1 = qY.data;
            var q = i1.targetDate - new Date().getTime();
            var js = ez.getStringFromTimestamp(q, 2);
            if (q <= 0) {
                this.removeTimer(i1.productId);
                q = 0;
                js = "";
                ar.callMethod({}, i1.callBack, [i1.productId])
            }
            var i2 = $(kr.string(i1.container) + " .timer");
            i2.text(js)
        },
        removeTimer: function(i) {
            var q = this.runningTimers.filter(function(i1) {
                return i1.data.productId == i
            })[0];
            if (q != null) {
                cj.remove(this.runningTimers, q);
                q.stop()
            }
        },
        clearTimers: function() {
            var i1 = 0;
            var i2 = this.runningTimers.length;
            while (i1 < i2) {
                var q = i1++;
                if (this.runningTimers[q] != null && this.runningTimers[q].running) {
                    this.runningTimers[q].stop()
                }
                this.runningTimers = []
            }
        },
        openOfferWall: function() {
            window.openOfferwall();
            nK.get_states().enable("state_offerwall_window")
        },
        openVideoAd: function() {
            window.openVideoAd();
            nK.get_states().enable("state_video_window")
        },
        closeVideoAd: function() {
            window.closeVideoAd()
        },
        openTapResearchOfferWall: function() {
            window.TRModule.openOfferWall();
            nK.get_states().enable("state_offerwall_window")
        },
        closeTapResearchOfferWall: function() {
            window.TRModule.closeOfferWall()
        },
        getUserEngagement: function() {
            return window.hasEngagement
        },
        showContainer: function() {
            var q = lp.instance.container;
            var i = lp.instance.overlay;
            if (i != "") {
                $("#" + i).fadeIn()
            }
            $("#" + q).fadeIn();
            this.isContainerVisible = true
        },
        hideContainer: function() {
            if (!this.isContainerVisible) {
                return
            }
            var q = lp.instance.container;
            var i = lp.instance.overlay;
            if (i != "") {
                $("#" + i).fadeOut()
            }
//            $("#" + q).fadeOut();
         //   ns.current.stage.set_focus(ns.current.stage);
            this.isContainerVisible = false
        },
        lockContainer: function() {
            $("#openfl-overlay-top").fadeIn();
            this.isContainerVisible = true
        },
        unlockContainer: function() {
            $("#openfl-overlay-top").fadeOut()
        },
        __class__: qW
    });
    var pj = function() {};
    nt["miniclip.promotionsystem.core.interfaces.IPromotionPersistanceDelegate"] = pj;
    pj.__name__ = ["miniclip", "promotionsystem", "core", "interfaces", "IPromotionPersistanceDelegate"];
    pj.prototype = {
        saveData: null,
        loadData: null,
        __class__: pj
    };
    var gZ = function(i) {
        this._id = i;
        this.reset()
    };
    nt["agario.services.promo.AgarioPersistanceDelegate"] = gZ;
    gZ.__name__ = ["agario", "services", "promo", "AgarioPersistanceDelegate"];
    gZ.__interfaces__ = [pj];
    gZ.prototype = {
        _id: null,
        _slotId: null,
        _saveSlot: null,
        _lastUserId: null,
        getSaveSlot: function() {
            return this._saveSlot
        },
        reset: function() {
            var i;
            if (nK.user.loggedIn) {
                i = "" + nK.user.name
            } else {
                i = "guest"
            }
            this._slotId = "agario_" + this._id + "_" + i;
            this._saveSlot = new bK(this._slotId)
        },
        saveData: function(q) {
            var i1 = this.getSaveSlot();
            var i = q;
            i = LZString.compress(i);
            this._saveSlot.data = i;
            this._saveSlot.save()
        },
        loadData: function() {
            var i1 = this.getSaveSlot();
            try {
                var i = i1.load();
                i = LZString.decompress(i);
                nK.user.dispatchPromoEvents();
                return i
            } catch (q) {
                lF.lastException = q;
                if (q instanceof nM) {
                    q = q.val
                }
                null
            }
            return null
        },
        __class__: gZ
    };
    var eV = function() {};
    nt["miniclip.promotionsystem.client.interfaces.IPromotionSystemClientDelegate"] = eV;
    eV.__name__ = ["miniclip", "promotionsystem", "client", "interfaces", "IPromotionSystemClientDelegate"];
    eV.prototype = {
        redirectToTarget: null,
        makePurchase: null,
        getReferencePriceForTransaction: null,
        getPromotionalPriceForTransaction: null,
        getDescriptionForTransaction: null,
        getDescriptionForProduct: null,
        getReferenceSumAmountForProduct: null,
        getReferenceAmountForProduct: null,
        getPromotionalSumAmountForProduct: null,
        getPromotionalAmountForProduct: null,
        canShowOffer: null,
        canShowOfferPopup: null,
        canShowOfferBadge: null,
        openStoreWithAppId: null,
        openBrowserWithURL: null,
        promoActionTriggered: null,
        badgeButtonPressed: null,
        promoCloseTriggeredForSystem: null,
        getLocalizedResourceForResource: null,
        getLocalizedTextForTag: null,
        getFormatedStringForTimeStamp: null,
        getDefaultBadgeCycleCooldownForSystem: null,
        hideCurrentBadgeForSystem: null,
        showBadge: null,
        getValueForJSONQuery: null,
        getCurrentUserId: null,
        userOwnsProductsInList: null,
        userHasAppsInstalled: null,
        getPopupForOffer: null,
        getPromoButtonForOffer: null,
        __class__: eV
    };
    var ct = function() {
        this._ps = l4.getService(fJ)
    };
    nt["agario.services.promo.AgarioPromoClientDelegate"] = ct;
    ct.__name__ = ["agario", "services", "promo", "AgarioPromoClientDelegate"];
    ct.__interfaces__ = [eV];
    ct.prototype = {
        _ps: null,
        canShowBadgesOnMainMenuHud: function() {
            if (!nK.ui.state.inGame) {
                return true
            }
            return false
        },
        redirectToTarget: function(i1, q, i) {
            return this.handleRedirectTarget(i1, q, i)
        },
        handleRedirectTarget: function(i2, i1, i) {
            var q = lp.instance;
            switch (i2) {
                case "promoTargetCoinShop":
                    this.internalOpenShop("shopCurrency");
                    break;
                case "promoTargetMassBoostShop":
                    this.internalOpenShop("shopMass");
                    break;
                case "promoTargetXpBoostShop":
                    this.internalOpenShop("shopBoost");
                    break;
                case "promoTargetShop":
                    this.internalOpenShop("shopMain");
                    break;
                case "promoTargetProfile":
                    if (q != null) {
                        q.showProfile()
                    }
                    break;
                case "promoTargetSkinShop":
                    this.internalOpenShop("shopSkins", {
                        tab: ar.getProperty(i1, "promoParamSkinShopTabName")
                    });
                    break;
                default:
                    return k5.PROMOTION_ACTION_RETURN_TYPE_FAILURE
            }
            return k5.PROMOTION_ACTION_RETURN_TYPE_SUCCESS
        },
        internalOpenShop: function(i, q) {
            if (lp.instance != null) {
                px.engine.scheduleTask(0, function() {
                    lp.instance.openShop(i, q)
                })
            }
        },
        makePurchase: function(q0, q, qY, q1, js, i2, i) {
            var i1 = this;
            var qZ = l4.getService(f4);
            if (this.isVirtualCurrencyTransaction(q0)) {
                if (qZ.makePurchase(q0)) {
                    return k5.PROMOTION_ACTION_RETURN_TYPE_SUCCESS
                }
            } else {
                if (qZ.makePurchase(q0)) {
                    nK.services.promo.registerPurchaseAction(q0, function(q2) {
                        i1.onMakePurchaseComplete(q2, q0, q, qY, q1, js, i2, i)
                    });
                    return k5.PROMOTION_ACTION_RETURN_TYPE_DELAYED_RESPONSE
                }
            }
            return k5.PROMOTION_ACTION_RETURN_TYPE_FAILURE
        },
        onMakePurchaseComplete: function(q5, q4, i2, q3, q6, q2, q0, i1) {
            if (q5) {
                var js = 0;
                while (js < q3.length) {
                    var q = q3[js];
                    ++js;
                    var qY = q.join("_");
                    nK.services.promo.postEvent(qY)
                }
            } else {
                var qZ = 0;
                while (qZ < q2.length) {
                    var q1 = q2[qZ];
                    ++qZ;
                    var i = q1.join("_");
                    nK.services.promo.postEvent(i)
                }
            }
        },
        getReferencePriceForTransaction: function(i1, q, i) {
            return null
        },
        getPromotionalPriceForTransaction: function(q0, qZ, js) {
            var i1 = l4.getService(hB);
            if (this.isVirtualCurrencyTransaction(q0)) {
                var i = nK.models.shopPurchasesModel.getSoftPurchaseByPurchaseId(q0);
                return bA.getFormattedAmountString(i.currencyAmount)
            } else {
                if (this.isInAppCurrencyTransaction(q0)) {
                    var qY = nK.models.shopPurchasesModel.getInappPurchaseByPurchaseId(q0);
                    var q = l4.getService(hB);
                    var i2 = nK.models.priceMatrixModel.getPriceForTier(qY.priceTier, q.getCurrencyCode());
                    fH.settings.currency.symbol = fH.getSymbol(q.getCurrencyCode(), q.getCurrencyCode() + " ");
                    return fH.formatMoney(i2)
                }
            }
            return null
        },
        isVirtualCurrencyTransaction: function(i) {
            return nK.models.shopPurchasesModel.getSoftPurchaseByPurchaseId(i) != null
        },
        isInAppCurrencyTransaction: function(i) {
            return nK.models.shopPurchasesModel.getInappPurchaseByPurchaseId(i) != null
        },
        getDescriptionForTransaction: function(q, i) {
            return null
        },
        getDescriptionForProduct: function(i, i1, q) {
            return null
        },
        getReferenceSumAmountForProduct: function(i, i1, q) {
            return null
        },
        getReferenceAmountForProduct: function(i, i1, q) {
            return null
        },
        getPromotionalSumAmountForProduct: function(i2, q0, js) {
            var i = this.fetchBundleProductsByPurchaseId(q0);
            if (i == null || i.length == 0) {
                return null
            }
            var i1 = 0;
            var q = i.h;
            var qZ = null;
            while (q != null) {
                var qY;
                qY = (function(q2) {
                    var q1;
                    qZ = q[0];
                    q = q[1];
                    q1 = qZ;
                    return q1
                }(this));
                if (qY.productId == i2) {
                    i1 += qY.quantity
                }
            }
            return "" + i1
        },
        getPromotionalAmountForProduct: function(i2, q0, js) {
            var i = this.fetchBundleProductsByPurchaseId(q0);
            if (i == null || i.length == 0) {
                return [0]
            }
            var i1 = [];
            var q = i.h;
            var qZ = null;
            while (q != null) {
                var qY;
                qY = (function(q2) {
                    var q1;
                    qZ = q[0];
                    q = q[1];
                    q1 = qZ;
                    return q1
                }(this));
                if (qY.productId == i2) {
                    i1.push(qY.quantity)
                }
            }
            return i1
        },
        canShowOffer: function(i, q) {
            if (i == null || i == "" || q == null) {
                return false
            }
            if (!q.isOfferActive(i)) {
                return false
            }
            var i1 = q.getPopUpInfoForOffer(i).customData;
            if (i1 == null) {
                return false
            }
            return true
        },
        canShowOfferPopup: function(i1, i2, i) {
            if (!this.canShowOffer(i1, i2)) {
                return false
            }
            var q = l4.getService(pu);
            var js = q != null && q.status == cr.CONNECTED;
            if (i2.get_promoSystemId() == "promotionSystem" || i2.get_promoSystemId() == "promotionSystem") {
                if (nK.get_states().isTopState("state_main_screen") && !nK.ui.state.inGame && nK.ui.state.windowHasFocus && js) {
                    return true
                }
            }
            return false
        },
        canShowOfferBadge: function(i, q) {
            if (!this.canShowOffer(i, q)) {
                return false
            }
            if (q.get_promoSystemId() == "promotionSystem" || q.get_promoSystemId() == "promotionSystem") {
                return true
            }
            return false
        },
        openStoreWithAppId: function(q, i) {
            return null
        },
        openBrowserWithURL: function(i, q) {
            try {
                ns.getURL(new nT(i));
                return k5.PROMOTION_ACTION_RETURN_TYPE_SUCCESS
            } catch (i1) {
                lF.lastException = i1;
                if (i1 instanceof nM) {
                    i1 = i1.val
                }
                if (n0.__instanceof(i1, lY)) {
                    return k5.PROMOTION_ACTION_RETURN_TYPE_FAILURE
                } else {
                    throw (i1)
                }
            }
            return null
        },
        promoActionTriggered: function(i1, i, q) {},
        badgeButtonPressed: function(i, q) {
            this._ps.showPromotionOffer(i, q)
        },
        promoCloseTriggeredForSystem: function(i) {
            if (i.get_promoSystemId() == "promotionSystem" || i.get_promoSystemId() == "featuresSystem") {
                this._ps.popupOfferWasClosed()
            }
        },
        getLocalizedResourceForResource: function(i1, q) {
            var i = cj.substr(i1, i1.length - 3, 3);
            if (i == "ttf") {
                return cP.replace(i1, ".ttf", "")
            } else {
                if (i == "fnt") {
                    eM.trace("TODO: Bitmap font needs to be handled. Use BitmapFont class! " + i1, {
                        fileName: "AgarioPromoClientDelegate.hx",
                        lineNumber: 375,
                        className: "agario.services.promo.AgarioPromoClientDelegate",
                        methodName: "getLocalizedResourceForResource"
                    })
                }
            }
            return i1
        },
        getLocalizedTextForTag: function(i, q) {
            return dk.text(i)
        },
        definedStrikeThrough: function() {
            return true
        },
        nodeStrikeThrough: function(i1, i, q) {},
        getFormatedStringForTimeStamp: function(q, i) {
            return ez.getStringFromTimestamp(q)
        },
        getDefaultFrameSizeForSystem: function(i) {
            return new gn(0, 0, 950, 612)
        },
        getDefaultFrameMarginForSystem: function(i) {
            return 12
        },
        getDefaultTTFontForSystem: function(i) {
            return null
        },
        getCurrencyIconForTransaction: function(q, i) {
            return null
        },
        getDefaultBadgeCycleCooldownForSystem: function(q) {
            var i = 30000;
            if (q.get_promoSystemId() == "promotionSystem") {
                return bA.asFloat(kr.parseFloat(nK.models.defaultPromoSettings.getSettingByKey("promoButtonMinCycleDuration")), null) * 1000
            } else {
                if (q.get_promoSystemId() == "featuresSystem") {
                    return bA.asFloat(kr.parseFloat(nK.models.defaultPromoSettings.getSettingByKey("crossPromoBadgeMinCycleDuration")), null) * 1000
                }
            }
            return i
        },
        hideCurrentBadgeForSystem: function(i) {
            nK.ui.mainUI.hidePromotionBadge()
        },
        showBadge: function(i, q) {
            nK.ui.mainUI.showPromoBadge(i)
        },
        getValueForJSONQuery: function(i, q) {
            return null
        },
        shouldApplyHourRandomToNotificationDateForSystem: function(i) {
            return false
        },
        getFinalDateToShowLocalNotificationForDate: function(i, q) {
            return null
        },
        processLocalNotificationUserInfo: function(i, q) {},
        canShowOfferNotification: function(i, q) {
            return false
        },
        getCurrentUserId: function() {
            if (nK.user.loggedIn) {
                return "" + nK.user.name
            } else {
                return "guest"
            }
        },
        userOwnsProductsInList: function(q1, q0, js) {
            if (nK.user.wallet == null || q1 == null) {
                return false
            }
            var i2 = 0;
            var qY = 0;
            var qZ = q1.length;
            while (qY < qZ) {
                var i1 = [qY++];
                var q = nK.user.wallet.filter((function(q2) {
                    return function(i) {
                        return i.productId == q1[q2[0]]
                    }
                })(i1));
                if (q.length > 0) {
                    i2++
                }
            }
            if (i2 > 0) {
                if (q0 && i2 != q1.length) {
                    return false
                }
                return true
            }
            return false
        },
        userHasAppsInstalled: function(i, i1, q) {
            return false
        },
        closePromoDebugScreen: function() {},
        getPopupForOffer: function(q, i, i1) {
            return ke.createPromoNode(q, i, this, i1)
        },
        getPromoButtonForOffer: function(i2, i1, i, q) {
            return new fr(i2.offerName, i1, i, q)
        },
        getEntryForPurchaseId: function(i) {
            if (i == null || i == "") {
                return null
            }
            return nK.models.shopPurchasesModel.getPurchaseByPurchaseId(i)
        },
        fetchBundleProductsByPurchaseId: function(q) {
            if (q == null || q == "") {
                return null
            }
            var i = nK.models.shopPurchasesModel.getPurchaseByPurchaseId(q);
            if (i == null) {
                return null
            }
            return nK.models.walletProductBundlesModel.getProductsByBundleId(i.bundleId)
        },
        __class__: ct
    };
    var oN = function() {};
    nt["miniclip.promotionsystem.core.interfaces.IPromotionDataAccessProtocol"] = oN;
    oN.__name__ = ["miniclip", "promotionsystem", "core", "interfaces", "IPromotionDataAccessProtocol"];
    oN.prototype = {
        getGroupForTest: null,
        getClientLanguage: null,
        currentPlatformType: null,
        getPropertyType: null,
        getNumberPropertyType: null,
        __class__: oN
    };
    var an = function() {};
    nt["agario.services.promo.AgarioPromotionDataAccessProtocol"] = an;
    an.__name__ = ["agario", "services", "promo", "AgarioPromotionDataAccessProtocol"];
    an.__interfaces__ = [oN];
    an.prototype = {
        getGroupForTest: function(i) {
            return "web"
        },
        getClientLanguage: function() {
            return "web"
        },
        currentPlatformType: function() {
            return "web"
        },
        getPropertyType: function(i, q) {
            switch (i) {
                case "Localization":
                    return this.getClientLanguage();
                case "ABTest":
                    if (q != null) {
                        return this.getGroupForTest(n0.__cast(pN.testId != null ? q.getReserved("testId") : q.h.testId, String))
                    }
                    break;
                case "VIPGroup":
                    break;
                case "LoginType":
                    if (nK.environment.authenticationProvider == N.Facebook) {
                        return "USER_LOGGED_IN_FACEBOOK"
                    }
                    if (nK.environment.authenticationProvider == N.Google) {
                        return "USER_LOGGED_IN_GOOGLEPLUS"
                    }
                    break;
                case "PayingUserStatus":
                    if (nK.user.isGuest || nK.user.userInfo != null && !nK.user.userInfo.isPayingUser) {
                        return "PROMO_IS_NONPAYING_USER"
                    } else {
                        return "PROMO_IS_PAYING_USER"
                    }
                    break;
                case "userId":
                    return nK.user.userInfo.id;
                case "promoRewardToken":
                    break;
                case "Platform":
                    break
            }
            return "web"
        },
        getNumberPropertyType: function(i) {
            switch (i) {
                case "UserLevel":
                    if (nK.user.userInfo != null) {
                        return nK.user.userInfo.level
                    } else {
                        return 0
                    }
                    break;
                case "CoinBalance":
                    return nK.user.get_coins()
            }
            return 0
        },
        __class__: an
    };
    var jA = function() {};
    nt["miniclip.promotionsystem.client.interfaces.IPromotionButton"] = jA;
    jA.__name__ = ["miniclip", "promotionsystem", "client", "interfaces", "IPromotionButton"];
    jA.prototype = {
        get_offerId: null,
        __class__: jA
    };
    var fr = function(i, i2, q, i1) {
        this._offerId = i;
        this._badgeConfig = i2;
        this._callback = q;
        this.system = i1
    };
    nt["agario.services.promo.BasePromotionButton"] = fr;
    fr.__name__ = ["agario", "services", "promo", "BasePromotionButton"];
    fr.__interfaces__ = [jA];
    fr.prototype = {
        _offerId: null,
        _badgeConfig: null,
        _callback: null,
        system: null,
        get_offerId: function() {
            return this._offerId
        },
        getBadgeConfiguration: function() {
            return this._badgeConfig
        },
        executeCallback: function() {
            if (this._callback != null) {
                this._callback()
            }
        },
        __class__: fr
    };
    var dI = function() {};
    nt["agario.services.promo.PromoDataActionTags"] = dI;
    dI.__name__ = ["agario", "services", "promo", "PromoDataActionTags"];
    var fJ = function() {
        this.UPDATE_TIMESTAMP_DELAY = 1000;
        this.CONFIG_SHEET_DEFAULT_PROMOS = 5;
        this.CONFIG_TAG_PROMO_POPUP_COOLDOWN_PERIOD = 5;
        this.CRYPTO_PASSWORD = "8ballpool";
        this.ACTIONS_CONFIG_FILE = "ActionsConfiguration.plist";
        this.COMMON_CONFIG_FILE = "commonConfig.json";
        this.INTERSTITIAL_SYSTEM_FILE = "InterstitialSystemConfiguration.plist";
        this.INDIRECT_SYSTEM_FILE = "PromotionIndirectConfiguration.plist";
        this.PROMOTION_SYSTEM_FILE = "PromotionSystemConfiguration.plist";
        this._initialized = false;
        this.isReadyDefer = new cN();
        this.isReady = this.isReadyDefer.boundPromise;
        this.updateSignal = new qv();
        this.onPromotionPopupTrigger = new qt();
        this._queuedEvents = new oI();
        this._delayedPurchaseActions = new io()
    };
    nt["agario.services.promo.PromoService"] = fJ;
    fJ.__name__ = ["agario", "services", "promo", "PromoService"];
    fJ.__interfaces__ = [c8];
    fJ.prototype = {
        isReadyDefer: null,
        isReady: null,
        _initialized: null,
        updateSignal: null,
        onPromotionPopupTrigger: null,
        PROMOTION_SYSTEM_FILE: null,
        INDIRECT_SYSTEM_FILE: null,
        INTERSTITIAL_SYSTEM_FILE: null,
        COMMON_CONFIG_FILE: null,
        ACTIONS_CONFIG_FILE: null,
        CRYPTO_PASSWORD: null,
        CONFIG_TAG_PROMO_POPUP_COOLDOWN_PERIOD: null,
        CONFIG_SHEET_DEFAULT_PROMOS: null,
        UPDATE_TIMESTAMP_DELAY: null,
        _configurationId: null,
        _persistance: null,
        _promoManager: null,
        promoManager: null,
        _clientDelegate: null,
        clientDelegate: null,
        _persistanceClients: null,
        _closePopupTriggered: null,
        _isBadgeCyclingActive: null,
        _lastPopupShownTimestamp: null,
        _storedOfferId: null,
        _updateLoopTimer: null,
        _lastLoadedUser: null,
        _logoutCheckTimer: null,
        _queuedEvents: null,
        _delayedPurchaseActions: null,
        create: function() {},
        initialize: function() {
            this._clientDelegate = new ct();
            this._promoManager = new qO();
            this._promoManager.initWithPromotionClientDelegate(this._clientDelegate, null);
            this._promoManager.setPromotionDataAccessProtocol(new an());
            this._persistanceClients = new io();
            this.initEvents()
        },
        loadConfiguration: function() {
            var i2 = this;
            var i = this.getResource(this.PROMOTION_SYSTEM_FILE).load();
            var q = this.getResource(this.INTERSTITIAL_SYSTEM_FILE).load();
            var i1 = this.getResource(this.INDIRECT_SYSTEM_FILE).load();
            if (this.isReady == null || this.isReady._resolved) {
                this.isReadyDefer = new cN();
                this.isReady = this.isReadyDefer.boundPromise
            }((function(qZ) {
                var js;
                var qY = function(q2) {
                    var q1 = new gR();
                    var q0 = [i, q, i1];
                    var q3 = gR.whenAll(q0);
                    q3._update.push({
                        async: q1,
                        linkf: function(q4) {
                            q1.handleResolve(q2(q0[0]._val, q0[1]._val, q0[2]._val))
                        }
                    });
                    return q1
                };
                js = {
                    then: qY
                };
                return js
            }(this))).then(function(q0, qZ, js) {
                var qY = null;
                if (js.loaded) {
                    i2._promoManager.setIndirectDataAccess(h8.read(js.get_data()))
                }
                if (q0.loaded) {
                    try {
                        i2.initPromoClientWitConfig("promotionSystem", h8.read(q0.get_data()))
                    } catch (q1) {
                        lF.lastException = q1;
                        if (q1 instanceof nM) {
                            q1 = q1.val
                        }
                        eM.trace("  / promoservice / " + ("loadConfiguration: failed to load promosystem data:" + kr.string(q1)), {
                            fileName: "PromoService.hx",
                            lineNumber: 141,
                            className: "agario.services.promo.PromoService",
                            methodName: "loadConfiguration"
                        })
                    }
                }
                i2._promoManager.encryptPassword = i2.CRYPTO_PASSWORD;
                i2._closePopupTriggered = false;
                i2._lastPopupShownTimestamp = -1;
                i2._promoManager.setCurrentTimestamp(i2.get_currentLocalTimestamp());
                i2.startUpdateLoop();
                i2.isReadyDefer.resolve(true);
                i2._initialized = true;
                i2.consumeEvents()
            }).catchError(function(js) {
                eM.trace("  / promoservice / " + ("PromoService: Failed to initialize : " + js), {
                    fileName: "PromoService.hx",
                    lineNumber: 162,
                    className: "agario.services.promo.PromoService",
                    methodName: "loadConfiguration"
                })
            })
        },
        startUpdateLoop: function() {
            if (this._updateLoopTimer != null) {
                this._updateLoopTimer.stop();
                this._updateLoopTimer.run = null
            }
            this._updateLoopTimer = new og(this.UPDATE_TIMESTAMP_DELAY);
            this._updateLoopTimer.run = oT(this, this.updateCurrentTimeStamp)
        },
        initPromoClientWitConfig: function(i1, qY) {
            var i2 = new gZ(i1);
            this._persistanceClients.set(i1, i2);
            var i = i1;
            var q = this._promoManager.setupPromotionClientWithConfigObject(qY, i1, i2);
            if (q) {
                var js = this.getPromoSystemWithSystemId(i1)
            }
        },
        getResource: function(i) {
            var q = l4.getService(kd);
            return nK.get_assets().getAsset(i)
        },
        getActivePromotionSystem: function() {
            return this.getPromoSystemWithSystemId("promotionSystem")
        },
        getActivePromotionClient: function() {
            return this.getPromoClientWithSystemId("promotionSystem")
        },
        getNextShowableAutomaticPromotionPopup: function() {
            var i = this._promoManager.getNextShowablePopupForSystem("promotionSystem");
            return i
        },
        canShowPromotionPopup: function() {
            var i1 = false;
            if (this._lastPopupShownTimestamp == -1) {
                i1 = true
            } else {
                var js = bA.asFloat(kr.parseFloat(nK.models.defaultPromoSettings.getSettingByKey("promoPopupCooldownPeriod")), null) * 1000;
                var i = this.get_currentLocalTimestamp() - this._lastPopupShownTimestamp;
                i1 = i >= js
            }
            var q = nK.get_states().getState("promoDialog", true);
            var i2 = !q.enabled && nK.get_states().isTopState("state_main_screen") && nK.ui.state.windowHasFocus && !nK.ui.state.inGame;
            return i1 && i2
        },
        activateBadgeCycling: function() {
            this._isBadgeCyclingActive = true;
            var i = this._promoManager.getClientForSystem("promotionSystem");
            if (i != null) {
                i.activateBadgeCycling()
            }
        },
        deactivateBadgeCycling: function() {
            this._isBadgeCyclingActive = false;
            var i = this._promoManager.getClientForSystem("promotionSystem");
            if (i != null) {
                i.deactivateBadgeCycling()
            }
        },
        getPromoClientWithSystemId: function(i) {
            return this._promoManager.getClientForSystem(i)
        },
        getPromoSystemWithSystemId: function(i) {
            var q = this._promoManager.getClientForSystem(i);
            if (q != null) {
                return q.get_promoSystem()
            }
            return null
        },
        showPromotionOffer: function(i, i2) {
            var js = i2.getOfferFromId(i);
            if (js == null) {
                return
            }
            var i1 = this.getPromoClientWithSystemId(i2.get_promoSystemId());
            var q = i1.getPopupForOffer(i, false);
            if (q != null) {
                this.showPromotionPopup(q)
            }
        },
        popupOfferWasClosed: function() {
            this._lastPopupShownTimestamp = px.engine.get_time()
        },
        resetSystems: function() {
            this.deactivateBadgeCycling();
            this._lastPopupShownTimestamp = -1;
            this._promoManager.resetSystems();
            this._promoManager.reloadSystems();
            this._delayedPurchaseActions = new io();
            this.resetPersistanceClient()
        },
        resetPersistanceClient: function() {
            var i = this._persistanceClients.get("promotionSystem");
            if (i != null) {
                i.reset()
            }
        },
        loadState: function() {
            var i = this._promoManager.getClientForSystem("promotionSystem");
            if (i != null) {
                i.get_promoSystem().loadData()
            }
        },
        saveState: function() {
            var i = this._promoManager.getClientForSystem("promotionSystem");
            if (i != null) {
                i.get_promoSystem().saveData()
            }
        },
        isStateOnTop: function(i) {
            return nK.get_states().isTopState(i)
        },
        currentLocalTimestamp: null,
        get_currentLocalTimestamp: function() {
            return px.engine.get_time()
        },
        updateCurrentTimeStamp: function() {
            if (nK.ui.state.inGame) {
                if (this._isBadgeCyclingActive) {
                    this.deactivateBadgeCycling()
                }
                return
            }
            this._promoManager.setCurrentTimestamp(this.get_currentLocalTimestamp());
            if (this._clientDelegate.canShowBadgesOnMainMenuHud()) {
                if (!this._isBadgeCyclingActive) {
                    this.activateBadgeCycling()
                }
                if (this.canShowPromotionPopup()) {
                    var i = this.getNextShowableAutomaticPromotionPopup();
                    if (i != null) {
                        this.onPromotionPopupTrigger.dispatch(i)
                    }
                }
            } else {
                this.deactivateBadgeCycling()
            }
            this.updateSignal.dispatch()
        },
        get_promoManager: function() {
            return this._promoManager
        },
        get_clientDelegate: function() {
            return this._clientDelegate
        },
        showPromotionPopup: function(i) {
            if (!n0.__instanceof(i, ke)) {
                return
            }
            var i1 = i;
            var q = new e6(i1);
            q.addEventListener("addedToStage", oT(this, this.onAddedToStage_Dialog));
            nK.views.openView(q, {
                priority: 1,
                animate: true,
                allowClickClose: true
            });
            q.open(true);
            q.onClose.addOnce(function() {
                nK.views.closeView(q)
            });
            q.onLateClose.addOnce(function() {
                eM.trace(px.engine.states.getTopState().name, {
                    fileName: "PromoService.hx",
                    lineNumber: 411,
                    className: "agario.services.promo.PromoService",
                    methodName: "showPromotionPopup"
                })
            });
            if (lp.instance != null) {
                nK.services.gameui.showContainer()
            }
        },
        onAddedToStage_Dialog: function(i1) {
            var q;
            q = n0.__cast(i1.target, e6);
            q.removeEventListener("addedToStage", oT(this, this.onAddedToStage_Dialog));
            var i = function(i2) {
                if (n0.__instanceof(i2.target, az)) {
                    q.close()
                }
            };
            q.stage.addEventListener("click", i, false, 0, true)
        },
        handlePromotionTrigger: function(i) {
            this.showPromotionPopup(i)
        },
        initEvents: function() {
            this.onPromotionPopupTrigger.add(oT(this, this.handlePromotionTrigger));
            nK.get_events().addEventListener("UserEvent::USER_LOGGED", oT(this, this.onUserLogin));
            nK.get_events().addEventListener("userLoggedOut", oT(this, this.onUserLogout))
        },
        postEvent: function(i, q) {
            if (!this._initialized) {
                this.queueEvent(i, q);
                return
            }
            if (this.getActivePromotionSystem() != null) {
                this.getActivePromotionSystem().postEvent(i, q)
            }
        },
        queueEvent: function(i, q) {
            this._queuedEvents.add({
                event: i,
                data: q
            })
        },
        consumeEvents: function() {
            var i = this._queuedEvents.h;
            var i1 = null;
            while (i != null) {
                var q;
                q = (function(js) {
                    var i2;
                    i1 = i[0];
                    i = i[1];
                    i2 = i1;
                    return i2
                }(this));
                this.postEvent(q.event, q.data)
            }
            this._queuedEvents.clear()
        },
        registerPurchaseAction: function(i, q) {
            this._delayedPurchaseActions.set(i, q)
        },
        fetchPurchaseActions: function(i) {
            return this._delayedPurchaseActions.get(i)
        },
        onUserLogin: function(i1) {
            var i2 = this;
            if (this._logoutCheckTimer != null) {
                this._logoutCheckTimer.stop();
                this._logoutCheckTimer = null
            }
            var q = this._clientDelegate.getCurrentUserId();
            var i = nK.user.userInfo.xp == 0 && nK.user.userInfo.level == 1;
            if (q != this._lastLoadedUser && nK.user.loggedIn && !i) {
                this.saveState();
                this.resetSystems();
                this._promoManager.reloadSystems()
            } else {
                this.resetPersistanceClient()
            }
            this._lastLoadedUser = q;
            this.loadState();
            this._logoutCheckTimer = new og(2000);
            this._logoutCheckTimer.run = function() {
                if (nK.user.loggedIn) {
                    i2._logoutCheckTimer.stop();
                    i2._logoutCheckTimer = null
                }
            }
        },
        onUserLogout: function(i) {
            var q = this;
            if (this._logoutCheckTimer != null) {
                this._logoutCheckTimer.stop()
            }
            this._logoutCheckTimer = new og(2000);
            this._logoutCheckTimer.run = function() {
                if (!nK.user.loggedIn) {
                    q.saveState();
                    q.resetSystems();
                    q._promoManager.reloadSystems();
                    q._logoutCheckTimer.stop();
                    q._logoutCheckTimer = null;
                    nK.user.dispatchPromoEvents()
                }
            }
        },
        __class__: fJ,
        __properties__: {
            get_currentLocalTimestamp: "get_currentLocalTimestamp",
            get_clientDelegate: "get_clientDelegate",
            get_promoManager: "get_promoManager"
        }
    };
    var k2 = function() {};
    nt["agario.services.promo.PromoSystemEvents"] = k2;
    k2.__name__ = ["agario", "services", "promo", "PromoSystemEvents"];
    var l9 = function() {};
    nt["agario.services.promo.PromoUtils"] = l9;
    l9.__name__ = ["agario", "services", "promo", "PromoUtils"];
    l9.getConfigEntryPair = function(i2, q) {
        if (i2 == null || i2 == "") {
            return ""
        }
        var i = l4.getService(fJ);
        var i1;
        if (q) {
            i1 = i.get_promoManager().getProductReplacement(i2)
        } else {
            i1 = i.get_promoManager().getReplacedProduct(i2)
        }
        if (i1 == null || i1 == "") {
            return ""
        }
        return i1
    };
    l9.getConfigIdReplacement = function(i) {
        return l9.getConfigEntryPair(i, true)
    };
    l9.getConfigIdReplaced = function(i) {
        return l9.getConfigEntryPair(i, false)
    };
    l9.shouldSkipConfigEntry = function(i2, i1) {
        if (i2 == null || i2 == "" || (i1 == null || i1 == "")) {
            return false
        }
        var q = i1 == "promotional";
        var i = l4.getService(fJ);
        if (q && !i.get_promoManager().isProductActivated(i2)) {
            return true
        }
        if (!q && i.get_promoManager().isProductDeactivated(i2)) {
            return true
        }
        return false
    };
    var jP = function() {};
    nt["agario.services.social.FBSocialService"] = jP;
    jP.__name__ = ["agario", "services", "social", "FBSocialService"];
    jP.__interfaces__ = [c8];
    jP.prototype = {
        create: function() {},
        initialize: function() {},
        share: function(i, q1, qY, js, i2, i1, q2, q0) {
            var qZ = q0;
            var q = {
                method: "feed",
                display: "iframe",
                name: i,
                caption: q1,
                description: qY,
                link: js,
                picture: i2,
                actions: {
                    name: i1,
                    link: q2
                }
            };
            FB.ui(q, qZ)
        },
        __class__: jP
    };
    var lg = function() {};
    nt["agario.services.social.GoogleSocialService"] = lg;
    lg.__name__ = ["agario", "services", "social", "GoogleSocialService"];
    lg.__interfaces__ = [c8];
    lg.prototype = {
        create: function() {},
        initialize: function() {},
        share: function(i) {
            ne.JQuery("#externalGShare").trigger("click")
        },
        setShareText: function(i) {
            window.fillSocialValues(i, "externalGShare")
        },
        __class__: lg
    };
    var qe = function() {};
    nt["agario.services.social.SocialService"] = qe;
    qe.__name__ = ["agario", "services", "social", "SocialService"];
    qe.__interfaces__ = [c8];
    qe.prototype = {
        fbSocial: null,
        twitterSocial: null,
        googleSocial: null,
        storyList: null,
        create: function() {},
        initialize: function() {
            this.fbSocial = l4.getService(jP);
            this.twitterSocial = l4.getService(g8);
            this.googleSocial = l4.getService(lg)
        },
        getStoryById: function(i) {
            this.storyList = nK.services.config.get_currentConfig().externalSocialStories;
            return this.storyList.filter(function(q) {
                return q.id == i
            })[0]
        },
        shareFB: function(qY, js, q) {
            var i1 = this.getStoryById(qY);
            var i2 = dk.text(i1.titleTag, js);
            var i = i1.iconURL;
            if (q != null) {
                i = q
            }
            this.fbSocial.share(i2, dk.text(i1.subtitleTag, js), dk.text(i1.descriptionTag, js), "http://agar.io", i, dk.text("menu_play"), "http://agar.io", oT(this, this.onShare))
        },
        directShareFB: function(qZ, qY, i1, js, q) {
            var i2 = this.getStoryById(qZ);
            var i = i2.iconURL;
            if (q != null) {
                i = q
            }
            this.fbSocial.share(qY, i1, js, "http://agar.io", i, dk.text("menu_play"), "http://agar.io", oT(this, this.onShare))
        },
        shareTwitter: function(i2, i1) {
            var i = this.getStoryById(i2);
            var q = cP.urlEncode(dk.text(i.twitterTag, i1));
            this.twitterSocial.share(q)
        },
        shareGoogle: function(i1, q) {
            var i = this.getStoryById(i1);
            this.googleSocial.share(dk.text(i.googleTag, q))
        },
        prepareGoogleShare: function(i1, q) {
            var i = this.getStoryById(i1);
            this.googleSocial.setShareText(dk.text(i.googleTag, q))
        },
        onShare: function() {
            null
        },
        __class__: qe
    };
    var g8 = function() {};
    nt["agario.services.social.TwitterSocialService"] = g8;
    g8.__name__ = ["agario", "services", "social", "TwitterSocialService"];
    g8.__interfaces__ = [c8];
    g8.prototype = {
        create: function() {},
        initialize: function() {},
        share: function(i1) {
            var i2 = "text=" + i1;
            var qY = "https://twitter.com/intent/tweet?" + i2;
            var q = 660;
            var i = 310;
            var js = "width=" + q + ",height=" + i + ",menubar=no,toolbar=no,resizable=yes,scrollbars=no";
            window.open(qY, "Agar.io", js + ",left=" + (window.screenX + window.innerWidth / 2 - q / 2) + ",top=" + ((window.innerHeight - i) / 2 | 0))
        },
        __class__: g8
    };
    var bi = function() {
        this._queryParameters = this.getQueryString()
    };
    nt["agario.services.web.WebEnvironment"] = bi;
    bi.__name__ = ["agario", "services", "web", "WebEnvironment"];
    bi.prototype = {
        _queryParameters: null,
        getQueryString: function() {
            var i1 = window.location.search;
            if (i1.charAt(0) == "?") {
                i1 = cj.substr(i1, 1, null)
            }
            var q = i1.split("&");
            var i = new io();
            var qY = 0;
            while (qY < q.length) {
                var i2 = q[qY];
                ++qY;
                var js = i2.split("=");
                i.set(js[0], js[1])
            }
            return i
        },
        hasParameter: function(i) {
            return this._queryParameters.exists(i)
        },
        getParameter: function(i) {
            return this._queryParameters.get(i)
        },
        __class__: bi
    };
    var b3 = function() {};
    nt["agario.utils.AssetsUtils"] = b3;
    b3.__name__ = ["agario", "utils", "AssetsUtils"];
    b3.getBitmap = function(q, i1) {
        var i2 = new cN();
        if (q == null && i1.source != null) {
            q = i1.source
        }
        if (q != null) {
            nK.get_assets().getAsset(q).load().then(function(qY) {
                var js = new el(qY.get_data());
                i2.resolve(js)
            })
        } else {
            var i = nK.get_assets().getTexture(i1.frameName, i1.spriteFilename);
            i2.resolve(i.asBitmap())
        }
        return i2.boundPromise
    };
    b3.existAsset = function(i, q) {
        if (i == null && q.source != null) {
            i = q.source
        }
        if (i != null) {
            return k9.exists(i, "IMAGE")
        } else {
            return k9.exists(q.id, "IMAGE")
        }
    };
    b3.getBitmapData = function(q, i1) {
        var i2 = new cN();
        if (q == null && i1.source != null) {
            q = i1.source
        }
        if (q != null) {
            i2.resolve(k9.getBitmapData(q))
        } else {
            var i = nK.get_assets().getTexture(i1.frameName, i1.spriteFilename);
            i2.resolve(i.asBitmap().bitmapData)
        }
        return i2.boundPromise
    };
    b3.existRemoteAsset = function(i, q) {
        if (i == null && q.source != null) {
            i = q.source
        }
        if (i != null) {
            return nK.remoteAssets.exists(i, "IMAGE")
        } else {
            return nK.remoteAssets.exists(q.id, "IMAGE")
        }
    };
    b3.getRemoteBitmapData = function(q, i1) {
        var i2 = new cN();
        if (q == null && i1.source != null) {
            q = i1.source
        }
        if (q != null) {
            return nK.remoteAssets.getBitmapData(q)
        } else {
            var i = nK.get_assets().getTexture(i1.frameName, i1.spriteFilename);
            i2.resolve(i.asBitmap().bitmapData)
        }
        return i2.boundPromise
    };
    b3.loadRemoteBitmap = function(js, q, i1) {
        if (q == null && i1.source != null) {
            q = i1.source
        }
        if (q != null) {
            return nK.remoteAssets.loadBitmap(js, q)
        } else {
            var i2 = new cN();
            var i = nK.get_assets().getAtlas(i1.id);
            i.load().then(function(qZ) {
                var qY = qZ.getTexture(i1.textureName);
                if (qY != null) {
                    i2.resolve(qY.asBitmap().bitmapData)
                } else {
                    i2.handleError("Cannot find texture '${info.textureName}' in '${info.metaFile}'!")
                }
            });
            return i2.boundPromise
        }
    };
    b3.getImageUrl = function(q) {
        var i1 = l4.getService(kd);
        var i = q.lastIndexOf(".png");
        if (i != -1) {
            q = cj.substr(q, 0, i)
        }
        return i1.getConfigUrl("" + q + ".png")
    };
    var na = function() {};
    nt["agario.utils.CurrencyTools"] = na;
    na.__name__ = ["agario", "utils", "CurrencyTools"];
    na.getFormatedCurrencyPrice = function(i, q) {
        fH.settings.currency.symbol = fH.getSymbol(i.getCurrencyCode(), i.getCurrencyCode() + " ");
        return fH.formatMoney(q)
    };
    var ez = function() {};
    nt["agario.utils.TimeUtils"] = ez;
    ez.__name__ = ["agario", "utils", "TimeUtils"];
    ez.getStringFromTimestamp = function(q4, i1) {
        if (i1 == null) {
            i1 = 3
        }
        if (q4 <= 0) {
            return "00s"
        }
        var qZ = Math.floor(q4 % 1000);
        q4 /= 1000;
        q4 = Math.floor(q4);
        var q8 = Math.floor(q4 % 60);
        q4 /= 60;
        q4 = Math.floor(q4);
        var js;
        if (q4 < 1) {
            js = 0
        } else {
            js = Math.floor(q4 % 60);
            q4 /= 60;
            q4 = Math.floor(q4)
        }
        var q7;
        if (q4 < 1) {
            q7 = 0
        } else {
            q7 = Math.floor(q4 % 24);
            q4 /= 24;
            q4 = Math.floor(q4)
        }
        var q9;
        if (q4 < 1) {
            q9 = 0
        } else {
            q9 = Math.floor(q4 % 7);
            q4 /= 7;
            q4 = Math.floor(q4)
        }
        var i;
        if (q4 < 1) {
            i = 0
        } else {
            i = q4
        }
        var q3 = [];
        if (i > 0) {
            q3.push("" + i + "w")
        }
        var q1 = q9 > 0;
        var qY = q1 && q9 < 3;
        if (!qY) {
            if (q9 > 0 || i > 0) {
                q3.push("" + q9 + "d")
            }
        } else {
            q7 += q9 * 24
        }
        var q;
        if (q7 < 10) {
            q = "0" + q7 + "h"
        } else {
            q = "" + q7 + "h"
        }
        if (q7 > 0) {
            q3.push(q7 > 0 ? "" + q : "")
        }
        if (q3.length < i1) {
            var q2;
            if (js < 10) {
                q2 = "0" + js + "m"
            } else {
                q2 = "" + js + "m"
            }
            q3.push(q2)
        }
        if (q3.length < i1) {
            var i2;
            if (q8 < 10) {
                i2 = "0" + q8 + "s"
            } else {
                i2 = "" + q8 + "s"
            }
            q3.push(i2)
        }
        var q6 = "";
        var q0 = 0;
        while (q0 < q3.length) {
            var q5 = q3[q0];
            ++q0;
            if (q6 != "") {
                q6 += " "
            }
            q6 += q5
        }
        return q6
    };
    var mi = function() {
        ol.call(this, "debugPromoView");
        this.maxWidth = 600;
        this.maxHeight = 450
    };
    nt["agario.views.DebugPromoView"] = mi;
    mi.__name__ = ["agario", "views", "DebugPromoView"];
    mi.__super__ = ol;
    mi.prototype = lP(ol.prototype, {
        initialize: function() {
            ol.prototype.initialize.call(this);
            var q = new m1({
                multiline: true,
                color: 0,
                width: 200,
                height: 300
            });
            var i1 = nK.services.promo.getActivePromotionSystem();
            var i = [];
            if (i1 == null) {
                i.push("Promotion system is null")
            } else {
                var i2 = i1.getActiveOffers();
                var qY = 0;
                while (qY < i2.length) {
                    var js = i2[qY];
                    ++qY;
                    i.push(js.offerName)
                }
            }
            q.set_text(i.join("\n"));
            this.addChild(q)
        },
        __class__: mi
    });
    var e9 = function() {
        ol.call(this, "debugView");
        this.maxWidth = 600;
        this.maxHeight = 450
    };
    nt["agario.views.DebugView"] = e9;
    e9.__name__ = ["agario", "views", "DebugView"];
    e9.__super__ = ol;
    e9.prototype = lP(ol.prototype, {
        offerButtons: null,
        initialize: function() {
            ol.prototype.initialize.call(this);
            var q = [];
            q.push(nK.get_assets().getAtlas("menusCommonUI").load());
            var i = gR.whenAll(q);
            var q2 = l4.getService(fJ);
            var q3 = q2.getPromoSystemWithSystemId("promotionSystem");
            if (q3 == null) {
                this.close();
                return
            }
            var q5 = q3.getOffers();
            var i1 = [];
            var qY = 0;
            while (qY < q5.length) {
                var q4 = q5[qY];
                ++qY;
                if (q4.badgeConfiguration != null) {
                    q4.badgeConfiguration.resolve(true);
                    q4.badgeConfiguration.getResourceList(i1)
                }
            }
            var q0 = [];
            var q1 = 0;
            while (q1 < i1.length) {
                var js = i1[q1];
                ++q1;
                var qZ;
                if (!js.isAtlas && js.spriteName != null) {
                    qZ = nK.get_assets().getAsset(js.spriteName);
                    q0.push(qZ.load())
                }
                if (js.atlasName != null) {
                    qZ = nK.get_assets().getAsset(bA.removeExtension(js.atlasName));
                    q0.push(qZ.load())
                }
            }
            var i2 = gR.whenAll(q0);
            ((function(q8) {
                var q6;
                var q7 = function(rb) {
                    var ra = new gR();
                    var q9 = [i, i2];
                    var rc = gR.whenAll(q9);
                    rc._update.push({
                        async: ra,
                        linkf: function(rd) {
                            ra.handleResolve(rb(q9[0]._val, q9[1]._val))
                        }
                    });
                    return ra
                };
                q6 = {
                    then: q7
                };
                return q6
            }(this))).then(oT(this, this.buildUI));
            this.showLoading()
        },
        buildUI: function(q2, q3) {
            this.hideLoading();
            var rc = new cY();
            this.addChild(rc);
            rc.addChild(nK.get_assets().getAtlas("menusCommonUI").get("tapjoy_icon").asBitmap());
            var q6 = new hv({
                labelUp: {
                    text: "Promotions"
                },
                width: 130,
                height: 35
            });
            this.addChild(q6);
            q6.addEventListener("click", function(rd) {
                var re = new mi();
                px.get_scenes().add(re);
                re.open(true);
                re.onClose.addOnce(function() {
                    px.get_scenes().remove(re)
                })
            });
            var i2 = l4.getService(fJ);
            var ra = i2.getPromoClientWithSystemId("promotionSystem");
            var q9 = ra.get_promoSystem();
            var rb = q9.getOffers();
            this.offerButtons = [];
            var q0 = 0;
            var q8 = 0;
            var q7 = 0;
            var i1 = 0;
            while (i1 < rb.length) {
                var i = rb[i1];
                ++i1;
                if (i.badgeConfiguration == null) {
                    continue
                }
                var qY = cw.getButtonForOffer(i.offerName, i.badgeConfiguration, oT(this, this.handlePromoOfferClick), ra.get_gameDelegate(), q9);
                if (qY == null) {
                    continue
                }
                q0++;
                q8 = q0 % 5;
                q7 = Math.floor(q0 / 5);
                qY.set_x(q8 * 150);
                qY.set_y(q7 * 75);
                this.addChild(qY);
                this.offerButtons.push(qY)
            }
            var q = new aN();
            q.leftX = 24;
            q.rightX = 26;
            q.imageFrameName = "stretch_shadow";
            q.texture = "menusMainUI";
            var q4 = nK.get_assets().getTexture(q.imageFrameName, q.texture).get_bitmapData();
            var q1 = ay.fromFrameSpriteVO(q4, q);
            q1.isHorizontal = true;
            q1.setSize(106, 26);
            this.addChild(q1);
            q1.set_x(400);
            q1.set_y(100);
            var q5 = new aN();
            q5.leftX = Math.floor(bA.scaleDimension(24, bA.getScaleRatio(null)));
            q5.rightX = Math.floor(bA.scaleDimension(26, bA.getScaleRatio(null)));
            q5.imageFrameName = "stretch_shadow";
            q5.texture = "menusMainUI";
            var qZ = ay.fromFrameSpriteVO(q4, q5);
            qZ.isHorizontal = true;
            qZ.setSize(106, 26);
            this.addChild(qZ);
            qZ.set_x(400);
            qZ.set_y(170);
            var js = new aN();
            js.bottomY = 9;
            js.imageFrameName = "promo_red_button_frame";
            js.leftX = 9;
            js.rightX = 10;
            js.texture = "PromoGeneric_Items";
            js.topY = 10
        },
        dispose: function() {
            if (this.offerButtons != null) {
                var i1 = 0;
                var q = this.offerButtons;
                while (i1 < q.length) {
                    var i = q[i1];
                    ++i1;
                    i.dispose()
                }
                this.offerButtons = null
            }
            ol.prototype.dispose.call(this)
        },
        handlePromoOfferClick: function(q, q0) {
            eM.trace("clicked on promo " + q, {
                fileName: "DebugView.hx",
                lineNumber: 215,
                className: "agario.views.DebugView",
                methodName: "handlePromoOfferClick"
            });
            var i2 = l4.getService(fJ);
            var i = i2.getPromoClientWithSystemId("promotionSystem");
            var i1 = i.get_promoSystem();
            var qZ = i1.getOfferFromId(q);
            qZ.setOfferState(cH.ACTIVE);
            var qY = ke.createPromoNode(q, i, i.get_gameDelegate(), i1);
            qY.debugMode = true;
            var js = new e6(qY);
            js.addEventListener("addedToStage", oT(this, this.onAddedToStage_Dialog));
            js.debugMode = true;
            px.get_scenes().add(js, 1);
            js.open(true);
            js.onClose.addOnce(function() {
                px.get_scenes().remove(js)
            })
        },
        onAddedToStage_Dialog: function(i1) {
            var q;
            q = n0.__cast(i1.target, e6);
            q.removeEventListener("addedToStage", oT(this, this.onAddedToStage_Dialog));
            var i = function(i2) {
                if (n0.__instanceof(i2.target, az)) {
                    q.close()
                }
            };
            q.stage.addEventListener("click", i, false, 0, true)
        },
        __class__: e9
    });
    var bg = function(i) {
        this.hasEngagement = false;
        this.padding = 20;
        ol.call(this, "state_free_coins_dialog");
        this.closeOnEscape = true;
        this.isSurveyButtonOn = i;
        if (i) {
            this.maxWidth = 650
        } else {
            this.maxWidth = 500
        }
        this.maxHeight = 160;
        nK.get_events().addEventListener("ShopEvent::checkVideos", oT(this, this.checkEngagement));
        nK.get_events().addEventListener("ShopEvent::connectionLost", oT(this, this.onConnectionLost))
    };
    nt["agario.views.FreeCoinsDialog"] = bg;
    bg.__name__ = ["agario", "views", "FreeCoinsDialog"];
    bg.freeCoinsBtn = null;
    bg.onFreeCoinsResponse = function() {
        if (bg.freeCoinsBtn != null) {
            bg.freeCoinsBtn.setTimeLeft(nK.user.freeCoinTimeLeft())
        }
    };
    bg.triggerFreeCoins = function() {
        var i = nK.user.freeCoinTimeLeft();
        var i1 = nK.user.userInfo.getTimedEvent("hourlyBonus");
        var q = l4.getService(pu);
        q.unregister(111, bg.onTimedEventResponse);
        q.register(111, bg.onTimedEventResponse);
        if (i1 == null || i > 0) {
            return
        }
        nK.services.shop.activateTimedEvent(i1.eventId)
    };
    bg.onTimedEventResponse = function(q, i2) {
        if (q != 111) {
            return
        }
        var i1 = i2;
        if (i1.get_productUpdates().length == 0) {
            nK.user.userInfo.setTimedEvent(new df(i1.get_userTimedEvent()))
        }
        nK.get_events().dispatchEventWith("ShopEvent::freeCoinsResponse");
        nK.user.handleUserUpdates(i1.get_productUpdates());
        nK.user.userInfo.setTimedEvent(new df(i1.get_userTimedEvent()));
        bg.onFreeCoinsResponse();
        var i = l4.getService(pu);
        i.unregister(111, bg.onTimedEventResponse)
    };
    bg.openCollectDialog = function(q, i1, i2, i) {
        if (i2 == null) {
            i2 = true
        }
        var js = new mp(i2, q);
        if (i1 != null) {
            js.onClose.addOnce(i1)
        }
        nK.views.openView(js, {
            priority: 2,
            animate: true,
            allowClickClose: true,
            callerView: i
        })
    };
    bg.__super__ = ol;
    bg.prototype = lP(ol.prototype, {
        titleLabel: null,
        padding: null,
        hasEngagement: null,
        videoBtn: null,
        offerBtn: null,
        surveyBtn: null,
        btnContainer: null,
        redLbl: null,
        _serverModel: null,
        isSurveyButtonOn: null,
        disconnectDialog: null,
        initialize: function() {
            ol.prototype.initialize.call(this);
            this.hasEngagement = nK.services.gameui.getUserEngagement();
            this.drawTitle();
            this.drawButtons();
            this.startCountingTimers();
            this.doLayout()
        },
        onConnectionLost: function(i) {
            nK.views.closeAllViews(bg);
            this.disable();
            this.disconnectDialog = new oo();
            nK.views.openView(this.disconnectDialog, {
                priority: 5,
                animate: true,
                allowClickClose: false,
                callerView: this
            });
            nK.get_events().removeEventListener("ShopEvent::connectionLost", oT(this, this.onConnectionLost));
            this.disconnectDialog.addEventListener("close", oT(this, this.closeDisconnect))
        },
        closeDisconnect: function(i) {
            nK.views.closeTopView()
        },
        doLayout: function() {
            this.titleLabel.set_x((this.maxWidth - this.titleLabel.get_textWidth()) * 0.5);
            this.titleLabel.set_y(this.padding);
            this.videoBtn.set_x(150);
            this.offerBtn.set_x(300);
            if (this.isSurveyButtonOn) {
                this.surveyBtn.set_x(300);
                this.offerBtn.set_x(450)
            }
            this.btnContainer.set_y(80);
            this.btnContainer.set_x((this.maxWidth - this.btnContainer.get_width()) / 2);
            if (this.redLbl != null) {
                this.redLbl.set_x(this.videoBtn.get_x());
                this.redLbl.set_y(this.videoBtn.get_y() + this.videoBtn.get_height() + 5)
            }
        },
        drawTitle: function() {
            var i = new mC("Arial", 30, 0, true);
            i.align = 3;
            this.titleLabel = new mx();
            this.titleLabel.set_defaultTextFormat(i);
            this.titleLabel.set_text(dk.text("menu_main_free_coins"));
            this.titleLabel.set_width(this.maxWidth - this.padding);
            this.titleLabel.set_height(this.titleLabel.get_textHeight() + 5);
            this.titleLabel.set_autoSize(1);
            this.titleLabel.set_selectable(false);
            this.titleLabel.set_embedFonts(false);
            this.titleLabel.set_textColor(5329233);
            this.addChild(this.titleLabel)
        },
        drawButtons: function() {
            this.btnContainer = new cY();
            bg.freeCoinsBtn = new i6();
            bg.freeCoinsBtn.addEventListener("click", oT(this, this.onFreeCoinsClick));
            bg.freeCoinsBtn.addEventListener("complete", oT(this, this.onFreeCoinsComplete));
            this.btnContainer.addChild(bg.freeCoinsBtn);
            var i = new el(nK.get_assets().getTexture("freecoins_video", "main_shop").get_bitmapData());
            this.videoBtn = new pa({
                color: 6343424,
                overColor: 5748225,
                text: dk.text("menu_main_free_coins_video"),
                textColorOver: 16777215,
                textColor: 16777215,
                icon: i,
                iconPadding: 6,
                w: 140,
                h: 50,
                fontSize: 14,
                bold: true
            });
            this.btnContainer.addChild(this.videoBtn);
            this.videoBtn.addEventListener("click", oT(this, this.onVideoClick));
            if (this.isSurveyButtonOn) {
                var q = new el(nK.get_assets().getTexture("survey_icon", "main_shop").get_bitmapData());
                this.surveyBtn = new pa({
                    color: 6343424,
                    overColor: 5748225,
                    text: dk.text("menu_main_free_coins_survey"),
                    textColorOver: 16777215,
                    textColor: 16777215,
                    icon: q,
                    iconPadding: 6,
                    w: 140,
                    h: 50,
                    fontSize: 14,
                    bold: true
                });
                this.btnContainer.addChild(this.surveyBtn);
                this.surveyBtn.addEventListener("click", oT(this, this.onSurveyClick))
            }
            this.offerBtn = new pa({
                color: 110829,
                overColor: 621990,
                text: dk.text("free_coins_offers"),
                textColorOver: 16777215,
                textColor: 16777215,
                w: 140,
                h: 50,
                fontSize: 14,
                bold: true
            });
            this.btnContainer.addChild(this.offerBtn);
            this.offerBtn.addEventListener("click", oT(this, this.onOfferWallClick));
            this.addChild(this.btnContainer);
            this.checkVideoAvailable()
        },
        checkVideoAvailable: function() {
            if (!this.hasEngagement) {
                this.redLbl = new m1({
                    text: dk.text("free_coins_unavailable"),
                    fontSize: 12,
                    color: 16711680,
                    bold: false
                });
                this.addChild(this.redLbl);
                this.videoBtn.set_alpha(0.6);
                this.videoBtn.set_enabled(false);
                this.redLbl.set_x(this.videoBtn.get_x() + (this.videoBtn.get_width() - this.redLbl.get_width()) / 2);
                this.redLbl.set_y(this.videoBtn.get_y() + this.videoBtn.get_height() + 5);
                this.btnContainer.addChild(this.redLbl)
            }
        },
        onFreeCoinsComplete: function(i) {
            bg.freeCoinsBtn.setTimeLeft(0)
        },
        onVideoClick: function(i) {
            if (!this.hasEngagement) {
                return
            }
            this.disable();
            nK.services.gameui.openVideoAd()
        },
        onOfferWallClick: function(i) {
            nK.services.gameui.openOfferWall()
        },
        onSurveyClick: function(i) {
            nK.services.gameui.openTapResearchOfferWall()
        },
        startCountingTimers: function() {
            var i = nK.user.freeCoinTimeLeft();
            bg.freeCoinsBtn.setTimeLeft(i)
        },
        onFreeCoinsClick: function(q) {
            var i = nK.user.freeCoinTimeLeft();
            if (i == 0) {
                bg.openCollectDialog(true, oT(this, this.onCloseHandler), true, this)
            } else {
                bg.openCollectDialog(false, oT(this, this.onCloseHandler), true, this)
            }
            this.disable();
            bg.triggerFreeCoins()
        },
        onCloseHandler: function() {
            this.enable();
            nK.get_events().dispatchEventWith("ShopEvent::ENABLE_SHOP")
        },
        checkEngagement: function(i) {
            this.hasEngagement = nK.services.gameui.getUserEngagement();
            this.checkVideoAvailable()
        },
        deinitialize: function() {
            ol.prototype.deinitialize.call(this);
            this.dispose()
        },
        dispose: function() {
            ol.prototype.dispose.call(this);
            if (this.isSurveyButtonOn) {
                this.surveyBtn.removeEventListener("click", oT(this, this.onSurveyClick))
            }
            this.offerBtn.removeEventListener("click", oT(this, this.onOfferWallClick));
            this.videoBtn.removeEventListener("click", oT(this, this.onVideoClick));
            bg.freeCoinsBtn.removeEventListener("click", oT(this, this.onFreeCoinsClick));
            bg.freeCoinsBtn.removeEventListener("complete", oT(this, this.onFreeCoinsComplete));
            nK.get_events().removeEventListener("ShopEvent::checkVideos", oT(this, this.checkEngagement));
            nK.get_events().removeEventListener("ShopEvent::connectionLost", oT(this, this.onConnectionLost))
        },
        __class__: bg
    });
    var l3 = function(i) {
        if (i == null) {
            i = true
        }
        ol.call(this, "state_guest_login_dialog");
        this.closeOnEscape = true;
        this.showGPlusButton = i;
        this.maxWidth = 590;
        if (this.showGPlusButton) {
            this.maxHeight = 650
        } else {
            this.maxHeight = 600
        }
    };
    nt["agario.views.GuestLoginDialog"] = l3;
    l3.__name__ = ["agario", "views", "GuestLoginDialog"];
    l3.__super__ = ol;
    l3.prototype = lP(ol.prototype, {
        leftSide: null,
        rightSide: null,
        title: null,
        fbLoginBtn: null,
        googleBtn: null,
        subTitle: null,
        showGPlusButton: null,
        initialize: function() {
            ol.prototype.initialize.call(this);
            nK.get_events().addEventListener("ShopEvent::ENABLE_SHOP", oT(this, this.enableDialog));
            nK.get_events().addEventListener("ShopEvent::DISABLE_SHOP", oT(this, this.disableDialog));
            this.title = new m1({
                text: dk.text("menu_upgrade_incentive_syp_title"),
                bold: true,
                color: 0,
                fontSize: 36,
                width: this.maxWidth - 50,
                align: 0
            });
            this.addChild(this.title);
            var qZ;
            if (this.showGPlusButton) {
                qZ = dk.text("menu_upgrade_incentive_syp_subtitle_google")
            } else {
                qZ = dk.text("menu_upgrade_incentive_syp_subtitle_fb")
            }
            this.subTitle = new m1({
                text: qZ,
                bold: true,
                color: 4225790,
                fontSize: 28,
                width: this.maxWidth - 70,
                align: 0
            });
            this.addChild(this.subTitle);
            var q5 = new cY();
            var q7 = new el(nK.get_assets().getTexture("sticker_green", "main_shop").get_bitmapData(), 1, true);
            q7.set_scaleX(q7.set_scaleY(1.1));
            var q6 = new m1({
                text: dk.text("menu_upgrade_incentive_upgrade_for_free"),
                multiline: true,
                color: 16777215,
                fontSize: 14,
                width: q7.get_width() * 0.85,
                leading: 8,
                align: 0
            });
            var js = q6.get_defaultTextFormat();
            js.leading = 0;
            q6.setTextFormat(js);
            q6.set_x(10);
            q6.set_y(30);
            q5.addChild(q7);
            q5.addChild(q6);
            q5.set_rotation(-15);
            q5.set_x(-30);
            q5.set_y(-10);
            this.addChild(q5);
            this.leftSide = new cY();
            var i1 = new cY();
            i1.get_graphics().beginFill(16119285);
            i1.get_graphics().drawRect(0, 0, 360, 355);
            i1.get_graphics().endFill();
            this.leftSide.addChild(i1);
            var q1 = new el(nK.get_assets().getTexture("not_for_guests", "main_shop").get_bitmapData(), 1, true);
            q1.set_x(10);
            q1.set_y(20);
            this.leftSide.addChild(q1);
            var q8 = dk.text("menu_upgrade_incentive_first_bullet") + "\n" + dk.text("menu_upgrade_incentive_second_bullet") + "\n" + dk.text("menu_upgrade_incentive_third_bullet") + "\n" + dk.text("menu_upgrade_incentive_fourth_bullet") + "\n" + dk.text("menu_upgrade_incentive_fifth_bullet");
            var q4 = new m1({
                text: q8,
                color: 0,
                fontSize: 18,
                width: i1.get_width() - 40,
                leading: 8,
                align: 3
            });
            q4.set_x(40);
            q4.set_y(q1.get_height() + 30);
            this.leftSide.addChild(q4);
            this.addChild(this.leftSide);
            this.rightSide = new cY();
            i1 = new cY();
            i1.get_graphics().beginFill(16119285);
            i1.get_graphics().drawRect(0, 0, 160, 355);
            i1.get_graphics().endFill();
            this.rightSide.addChild(i1);
            var q3 = new m1({
                text: "FREE Prizes",
                color: 0,
                fontSize: 18,
                width: i1.get_width(),
                leading: 8,
                align: 0
            });
            q3.set_y(15);
            this.rightSide.addChild(q3);
            var q2 = new el(nK.get_assets().getTexture("Coins_L", "main_shop").get_bitmapData(), 1, true);
            q2.set_scaleX(q2.set_scaleY(0.4));
            q2.set_x(this.rightSide.get_width() * 0.5 - q2.get_width() * 0.5);
            q2.set_y(q3.get_y() + q3.get_height());
            this.rightSide.addChild(q2);
            var qY = new m1({
                text: "200\n+",
                color: 0,
                fontSize: 16,
                width: i1.get_width(),
                leading: 8,
                align: 0
            });
            qY.set_y(q2.get_y() + q2.get_height());
            this.rightSide.addChild(qY);
            var i2 = new el(nK.get_assets().getTexture("massboost_3x_shop", "main_shop").get_bitmapData(), 1, true);
            i2.set_scaleX(i2.set_scaleY(0.4));
            i2.set_x(this.rightSide.get_width() * 0.5 - i2.get_width() * 0.5);
            i2.set_y(qY.get_y() + qY.get_height());
            this.rightSide.addChild(i2);
            var q = new m1({
                text: "1h Boost\n+",
                color: 0,
                fontSize: 16,
                width: i1.get_width(),
                leading: 8,
                align: 0
            });
            q.set_y(i2.get_y() + i2.get_height() + 5);
            this.rightSide.addChild(q);
            var i = new el(nK.get_assets().getTexture("gifts_icon", "main_shop").get_bitmapData(), 1, true);
            i.set_scaleX(i.set_scaleY(0.4));
            i.set_x(this.rightSide.get_width() * 0.5 - i.get_width() * 0.5);
            i.set_y(q.get_y() + q.get_height());
            this.rightSide.addChild(i);
            var q0 = new m1({
                text: "Friend Gifts",
                color: 0,
                fontSize: 16,
                width: i1.get_width(),
                leading: 8,
                align: 0
            });
            q0.set_y(i.get_y() + i.get_height() + 5);
            this.rightSide.addChild(q0);
            this.addChild(this.rightSide);
            this.createFbLogin();
            this.createGoogleLogin();
            this.doLayout()
        },
        createGoogleLogin: function() {
            var i = new el(nK.get_assets().getTexture("gplus_icon").get_bitmapData());
            this.googleBtn = new pa({
                color: 14699578,
                overColor: 14699578,
                text: "Sign in with Google",
                textColorOver: 16777215,
                textColor: 16777215,
                icon: i,
                iconPosition: "left",
                iconPadding: 25,
                w: 320,
                h: 35,
                fontSize: 18,
                bold: true
            });
            if (!this.showGPlusButton) {
                return
            }
            this.addChild(this.googleBtn);
            this.googleBtn.addEventListener("click", oT(this, this.onGoogleBtn_Click))
        },
        onGoogleBtn_Click: function(i) {
            nK.disableHUD();
            $("#gplusLogin").trigger("click");
            nK.get_events().dispatchEventWith("deactivate");
            nK.get_events().dispatchEventWith("ShopEvent::ENABLE_SHOP");
            this.close()
        },
        createFbLogin: function() {
            var i = new el(nK.get_assets().getTexture("fb_icon").get_bitmapData());
            this.fbLoginBtn = new pa({
                color: 3625371,
                overColor: 3625371,
                text: "Sign in with Facebook",
                textColorOver: 16777215,
                textColor: 16777215,
                icon: i,
                iconPosition: "left",
                iconPadding: 25,
                w: 320,
                h: 35,
                fontSize: 18,
                bold: true
            });
            this.addChild(this.fbLoginBtn);
            this.fbLoginBtn.addEventListener("click", oT(this, this.fbLoginBtn_Click))
        },
        fbLoginBtn_Click: function(i) {
            nK.facebookLogin(oT(this, this.onFbLoginComplete))
        },
        onFbLoginComplete: function(i) {
            if (i) {
                this.close()
            }
        },
        dispose: function() {
            ol.prototype.dispose.call(this);
            nK.get_events().dispatchEventWith("deactivate");
            nK.get_events().dispatchEventWith("ShopEvent::ENABLE_SHOP");
            nK.get_events().removeEventListener("ShopEvent::ENABLE_SHOP", oT(this, this.enableDialog));
            nK.get_events().removeEventListener("ShopEvent::DISABLE_SHOP", oT(this, this.disableDialog));
            if (this.showGPlusButton) {
                this.googleBtn.removeEventListener("click", oT(this, this.onGoogleBtn_Click))
            }
            this.fbLoginBtn.removeEventListener("click", oT(this, this.fbLoginBtn_Click))
        },
        enableDialog: function(i) {
            this.enable()
        },
        enable: function() {
            ol.prototype.enable.call(this);
            this.closeButton.set_enabled(true)
        },
        disableDialog: function(i) {
            this.closeButton.set_enabled(false);
            this.disable()
        },
        doLayout: function() {
            this.title.set_x(20);
            this.title.set_y(30);
            this.subTitle.set_x(20);
            this.subTitle.set_y(this.title.get_y() + this.title.get_height() + 10);
            this.leftSide.set_x(25);
            this.leftSide.set_y(this.subTitle.get_y() + this.subTitle.get_height() + 10);
            this.rightSide.set_x(this.leftSide.get_x() + this.leftSide.get_width() + 15);
            this.rightSide.set_y(this.leftSide.get_y());
            this.fbLoginBtn.set_x(this.googleBtn.set_x((this.maxWidth - this.fbLoginBtn.get_width()) / 2));
            this.fbLoginBtn.set_y(this.leftSide.get_y() + this.leftSide.get_height() + 20);
            this.googleBtn.set_y(this.fbLoginBtn.get_y() + this.fbLoginBtn.get_height() + 10)
        },
        __class__: l3
    });
    var qm = function() {
        this.redirect_to = "";
        this.initialized = false;
        this.currentCategory = "";
        this.lastCategory = "";
        ol.call(this, "state_shop_dialog");
        this.maxWidth = 760;
        this.maxHeight = 560;
        var i = nK.services.shop;
        i.onSoftPurchaseResponse.add(oT(this, this.handleSoftPurchaseComplete));
        i.onUseResponse.add(oT(this, this.handleUseResponse));
        i.S_notEnoughCoins.add(oT(this, this.notEnoughCoins))
    };
    nt["agario.views.ShopDialog"] = qm;
    qm.__name__ = ["agario", "views", "ShopDialog"];
    qm.displayProductPurchaseScreen = function(i1) {
        var q = new me();
        nK.views.openView(q, {
            priority: 2,
            animate: true,
            allowClickClose: false,
            callerView: lp.instance.shopDialog
        });
        nK.get_events().dispatchEventWith("ShopEvent::DISABLE_SHOP");
        var i = nK.models.shopPurchasesModel.getPurchaseByPurchaseId(i1);
        var i2 = nK.models.walletProductBundlesModel.getProductsByBundleId(i.bundleId);
        if (i2 == null || i2.length == 0) {
            return
        }
        nK.get_events().dispatchEventWith("ShopEvent::INAPP_PURCHASE_COMPLETE", i1);
        nK.get_events().dispatchEventWith("ShopEvent::useProductResponse", i.bundleId)
    };
    qm.__super__ = ol;
    qm.prototype = lP(ol.prototype, {
        lastCategory: null,
        currentCategory: null,
        initialized: null,
        viewContainer: null,
        currentView: null,
        backButton: null,
        titleLabel: null,
        viewMain: null,
        viewCoins: null,
        viewMass: null,
        viewSkins: null,
        viewBoosts: null,
        hud: null,
        _container: null,
        redirect_to: null,
        redirect_data: null,
        redirect_path: null,
        disconnectDialog: null,
        initialize: function() {
            ol.prototype.initialize.call(this);
            this.showLoading();
            this._container = new cY();
            this.addChild(this._container);
            this._container.set_alpha(0);
            nK.get_events().addEventListener("ShopEvent::connectionLost", oT(this, this.onConnectionLost));
            this.onShopReady(null)
        },
        onConnectionLost: function(i) {
            nK.views.closeAllViews(qm);
            this.disable();
            this.disconnectDialog = new oo();
            nK.views.openView(this.disconnectDialog, {
                priority: 5,
                animate: true,
                allowClickClose: false,
                callerView: this
            });
            nK.get_events().removeEventListener("ShopEvent::connectionLost", oT(this, this.onConnectionLost));
            this.disconnectDialog.addEventListener("close", oT(this, this.closeDisconnect))
        },
        closeDisconnect: function(i) {
            nK.views.closeTopView()
        },
        onShopReady: function(i) {
            nK.get_events().removeEventListener("ShopEvent::Ready", oT(this, this.onShopReady));
            nK.services.shop.isShopAvailable = true;
            this.buildUI();
            d3.tween(this._container, 0.5, {
                alpha: 1
            });
            this.hideLoading();
            if (this.redirect_to != "") {
                this.openCategory(this.redirect_to, this.redirect_path, this.redirect_data);
                this.redirect_to = ""
            }
        },
        buildUI: function() {
            var q = this;
            this.backButton = new L();
            this._container.addChild(this.backButton);
            this.backButton.set_visible(false);
            var i = new mC("Arial", 30, 0, true);
            i.align = 3;
            this.titleLabel = new mx();
            this.titleLabel.set_defaultTextFormat(i);
            this.titleLabel.set_text(dk.text("menu_main_shop"));
            this.titleLabel.set_width(this.maxWidth - 20);
            this.titleLabel.set_height(this.titleLabel.get_textHeight() + 5);
            this.titleLabel.set_autoSize(1);
            this.titleLabel.set_selectable(false);
            this.titleLabel.set_embedFonts(false);
            this.titleLabel.set_textColor(5329233);
            this._container.addChild(this.titleLabel);
            this.hud = new ci();
            this.hud.mouseChildren = false;
            this.hud.buttonMode = true;
            this._container.addChild(this.hud);
            this.hud.addEventListener("click", oT(this, this.onHudClick));
            this.hud.set_y(35);
            this.hud.set_x(this.maxWidth - this.hud.get_width() / 2 - 20);
            this.viewContainer = new cY();
            this._container.addChild(this.viewContainer);
            this.viewMain = new e8();
            this.viewCoins = new of ();
            this.viewMass = new a4();
            this.viewSkins = new dj();
            this.viewBoosts = new jr();
            this.setView(this.viewMain);
            this.viewMain.coinsSectionBtn.addEventListener("click", oT(this, this.handleCurrencySectionClick));
            this.viewMain.massSectionBtn.addEventListener("click", oT(this, this.handleMassSectionClick));
            this.viewMain.skinsSectionBtn.addEventListener("click", oT(this, this.handleSkinsSectionClick));
            this.viewMain.xpSectionBtn.addEventListener("click", oT(this, this.handleBoostSectionClick));
            this.backButton.addEventListener("click", oT(this, this.handleBackButton));
            nK.get_events().addEventListener("ShopEvent::ENABLE_SHOP", oT(this, this.enableShop));
            nK.get_events().addEventListener("ShopEvent::DISABLE_SHOP", oT(this, this.disableShop));
            nK.get_events().addEventListener("shop_event::allow_disable_close", oT(this, this.handleAllowDisableCloseEvent));
            this.addEventListener("close", function(i1) {
                nK.get_events().dispatchEventWith("ShopEvent::SHOP_ENABLED");
                q.enable();
                q.closeButton.set_enabled(true)
            }, false, 0, true);
            this.initialized = true
        },
        handleAllowDisableCloseEvent: function(q) {
            var i = q.data;
            this.allowDisableClose = i
        },
        enableShop: function(i) {
            this.enable()
        },
        enable: function() {
            ol.prototype.enable.call(this);
            this.closeButton.set_enabled(true)
        },
        disableShop: function(i) {
            this.closeButton.set_enabled(false);
            this.disable()
        },
        onCloseHandler: function() {
            this.enableShop()
        },
        onHudClick: function(i) {
            if (this.currentCategory == "shopCurrency") {
                return
            }
            this.lastCategory = this.currentCategory;
            this.openCategory("shopCurrency")
        },
        notEnoughCoins: function() {
            this.lastCategory = this.currentCategory;
            this.openCategory("shopCurrency");
            this.setTitle(dk.text("menu_not_enough_coins_title"))
        },
        getItem: function(i) {
            return nK.models.shopItems.getItemByPurchaseId(i)
        },
        handleUseResponse: function(q) {
            var i = q;
            if (i != null) {
                nK.get_events().dispatchEventWith("ShopEvent::useProductResponse", i, true)
            }
        },
        handleSoftPurchaseComplete: function(i) {
            var i1 = this.getItem(i.get_purchaseId());
            if (i.get_result() == 1 && i1 != null) {
                if (n0.__instanceof(i1, gM)) {
                    i1.set_owned(true);
                    if (!nK.ui.state.isPlayerAlive) {
                        nK.get_events().dispatchEventWith("ShopEvent::USE", i1)
                    }
                } else {
                    if (n0.__instanceof(i1, bt)) {
                        var q = nK.user.getWalletItemById((n0.__cast(i1, bt)).productIdToQuantify);
                        if (q == null) {
                            q = new hH({
                                productId: (n0.__cast(i1, bt)).productIdToQuantify,
                                balance: 1
                            });
                            nK.user.wallet.push(q)
                        }
                        nK.get_events().dispatchEventWith("ShopEvent::USE", i1)
                    }
                }
                nK.user.handleUserUpdates(i.get_productUpdates());
                nK.get_events().dispatchEventWith("ShopEvent::softPurchaseComplete", i1)
            } else {
                nK.get_events().dispatchEventWith("shopevent::soft_purchase_failed", i1)
            }
            if (this.currentView != null) {
                this.currentView.updateView()
            }
        },
        _update: function() {
            this.titleLabel.set_x((this.maxWidth - this.titleLabel.get_textWidth()) * 0.5);
            this.titleLabel.set_y(30);
            this.backButton.set_x(30);
            this.backButton.set_y(this.titleLabel.get_y() + (this.titleLabel.get_height() - this.backButton.get_height()) / 2);
            this.currentView.set_x((this.maxWidth - this.currentView.maxWidth) / 2);
            this.currentView.set_y(this.titleLabel.get_y() + this.titleLabel.get_height() + 15);
            this.currentView.updateView();
            return this
        },
        setView: function(i2, i1) {
            if (this.currentView != null) {
                this.viewContainer.removeChild(this.currentView);
                this.currentView.deinitialize();
                this.currentView = null
            }
            if (!this.viewContainer.contains(i2)) {
                var q = Math.floor(this.maxWidth - 20);
                var i = Math.floor(this.maxHeight - this.titleLabel.get_height() - 50);
                i2.maxWidth = q;
                i2.maxHeight = i;
                this.viewContainer.addChild(i2);
                if (i1 != null && i1 != "") {
                    i2.set_name(i1)
                }
            }
            this.viewContainer.setChildIndex(i2, this.viewContainer.get_numChildren() - 1);
            i2.set_visible(true);
            this.currentView = i2;
            this.titleLabel.set_text(this.currentView.get_name());
            this._update()
        },
        setTitle: function(i) {
            if (this.currentView != null) {
                this.titleLabel.set_text(i)
            }
            this._update()
        },
        handleBackButton: function(i) {
            if (this.lastCategory != "" && this.lastCategory != this.currentCategory) {
                this.openCategory(this.lastCategory);
                this.lastCategory = this.currentCategory
            } else {
                this.lastCategory = "shopMain";
                this.openCategory("shopMain")
            }
        },
        handleCurrencySectionClick: function(i) {
            this.openCategory("shopCurrency", true)
        },
        handleMassSectionClick: function(i) {
            this.openCategory("shopMass", true)
        },
        handleSkinsSectionClick: function(i) {
            this.openCategory("shopSkins", true)
        },
        handleBoostSectionClick: function(i) {
            this.openCategory("shopBoost", true)
        },
        openCategory: function(i1, i, q) {
            if (i == null) {
                i = false
            }
            if (this.lastCategory == "" || i) {
                this.lastCategory = "shopMain"
            }
            if (!this.initialized) {
                if (q != null) {
                    this.redirect_data = q
                }
                if (i != null) {
                    this.redirect_path = i
                }
                this.redirect_to = i1;
                return
            }
            this.currentCategory = i1;
            switch (i1) {
                case "shopCurrency":
                    this.setView(this.viewCoins);
                    this.backButton.set_visible(true);
                    break;
                case "shopMass":
                    this.setView(this.viewMass);
                    this.backButton.set_visible(true);
                    break;
                case "shopSkins":
                    this.setView(this.viewSkins);
                    if (q != null) {
                        this.viewSkins.showTab(q.tab)
                    }
                    this.backButton.set_visible(true);
                    break;
                case "shopBoost":
                    this.setView(this.viewBoosts);
                    this.backButton.set_visible(true);
                    break;
                default:
                    this.setView(this.viewMain);
                    this.backButton.set_visible(false)
            }
            this.redirect_to = "";
            this.redirect_data = null;
            this.redirect_path = false;
            ns.current.stage.set_focus(ns.current.stage)
        },
        updateView: function() {
            if (this.currentView != null) {
                this.currentView.updateView()
            }
        },
        destroy: function() {
            var i = nK.services.shop;
            i.onSoftPurchaseResponse.remove(oT(this, this.handleSoftPurchaseComplete));
            i.onUseResponse.remove(oT(this, this.handleUseResponse));
            i.S_notEnoughCoins.remove(oT(this, this.notEnoughCoins));
            nK.get_events().removeEventListener("ShopEvent::ENABLE_SHOP", oT(this, this.enableShop));
            nK.get_events().removeEventListener("ShopEvent::DISABLE_SHOP", oT(this, this.disableShop));
            nK.get_events().removeEventListener("ShopEvent::connectionLost", oT(this, this.onConnectionLost));
            if (this.disconnectDialog != null) {
                this.disconnectDialog.removeEventListener("close", oT(this, this.closeDisconnect))
            }
            this.viewMain.coinsSectionBtn.removeEventListener("click", oT(this, this.handleCurrencySectionClick));
            this.viewMain.massSectionBtn.removeEventListener("click", oT(this, this.handleMassSectionClick));
            this.viewMain.skinsSectionBtn.removeEventListener("click", oT(this, this.handleSkinsSectionClick));
            this.viewMain.xpSectionBtn.removeEventListener("click", oT(this, this.handleBoostSectionClick))
        },
        dispose: function() {
            this.destroy();
            this.viewMain.dispose();
            this.viewCoins.dispose();
            this.viewMass.dispose();
            this.viewSkins.dispose();
            this.viewBoosts.dispose();
            nK.get_events().removeEventListener("ShopEvent::connectionLost", oT(this, this.onConnectionLost));
            ol.prototype.dispose.call(this)
        },
        onEscapePress: function() {
            if (!this.isTopState()) {
                return false
            }
            if (this.currentView == this.viewMain) {
                this.close()
            } else {
                this.handleBackButton(null)
            }
            return true
        },
        __class__: qm
    });
    var lc = function() {
        this.openedViews = [];
//        px.get_scenes().onLateUpdate.connect(oT(this, this.onSceneLateUpdate))
    };
    nt["agario.views.ViewManager"] = lc;
    lc.__name__ = ["agario", "views", "ViewManager"];
    lc.prototype = {
        openedViews: null,
        hasViews: null,
        get_hasViews: function() {
            return this.openedViews.length > 0
        },
        onSceneLateUpdate: function() {
            if (nK.get_states().isTopState("state_main_screen")) {
                nK.services.gameui.hideContainer()
            }
        },
        onResize: function(i1, i) {
            var js = 0;
            var i2 = this.openedViews;
            while (js < i2.length) {
                var q = i2[js];
                ++js;
                q.view.resize(i1, i)
            }
        },
        openView: function(q, i) {
            if (i.callerView != null) {
                q.caller = i.callerView
            }
            if (this.hasView(q)) {
                this.closeView(q)
            }
            this.stashView(q, i);
            this.openNextView()
        },
        hasView: function(i) {
            var q = this.openedViews.filter(function(i1) {
                return i1.view == i
            });
            return q.length > 0
        },
        getViewData: function(i) {
            var q = this.openedViews.filter(function(i1) {
                return i1.view == i
            });
            if (q.length > 0) {
                return q[0]
            } else {
                return null
            }
        },
        stashView: function(q, i) {
            this.openedViews.push({
                view: q,
                options: i
            })
        },
        openNextView: function() {
            var i1 = this.getNextView();
            if (i1 == null || i1.options.active) {
                return
            }
            var i2 = this.getActiveView();
            if (i2 != null && i2.options.priority >= i1.options.priority) {
                return
            }
            var q = i1.view;
            var i = i1.options;
            i.active = true;
            q.set_x((nK.stage.stageWidth - q.maxWidth) / 2);
            q.set_y((nK.stage.stageHeight - q.maxHeight) / 2);
            q.allowDisableClose = i.allowClickClose;
            px.get_scenes().add(q);
            nK.services.gameui.showContainer();
            q.open(i.animate);
            q.addEventListener(ol.CLOSE, oT(this, this.onCloseView));
            q.addEventListener("addedToStage", oT(this, this.onShopAddedToStage), false, 0, true)
        },
        getNextView: function() {
            if (this.openedViews.length == 0) {
                return null
            }
            var i2 = this.openedViews.length;
            var q = this.getHighestPriority();
            var js = 1;
            var qY = i2 + 1;
            while (js < qY) {
                var i1 = js++;
                if (this.openedViews[i2 - i1].options.priority == q) {
                    return this.openedViews[i2 - i1]
                }
            }
            return null
        },
        getActiveView: function() {
            if (this.openedViews.length == 0) {
                return null
            }
            var i1 = this.openedViews.length;
            var i2 = 0;
            while (i2 < i1) {
                var q = i2++;
                if (this.openedViews[q].options.active) {
                    return this.openedViews[q]
                }
            }
            return null
        },
        getHighestPriority: function() {
            var i = 0;
            var i2 = 0;
            var i1 = this.openedViews;
            while (i2 < i1.length) {
                var q = i1[i2];
                ++i2;
                if (q.options.priority > i) {
                    i = q.options.priority
                }
            }
            return i
        },
        onCloseView: function(i) {
            if (n0.__instanceof(i.data, hC)) {
                this.closeView(i.data)
            }
        },
        closeView: function(i, q) {
            if (q == null) {
                q = false
            }
            if (this.hasView(i)) {
                if (i.isLoading && !q) {
                    return
                }
                if (i.caller != null) {
                    i.caller.enable()
                }
                this.removeView(i);
                i.removeEventListener(ol.CLOSE, oT(this, this.onCloseView));
                i.removeEventListener("addedToStage", oT(this, this.onShopAddedToStage));
                i.close()
            }
            this.openNextView()
        },
        removeView: function(i) {
            var q = this.getViewData(i);
            if (q != null) {
                cj.remove(this.openedViews, q)
            }
        },
        updateViews: function() {
            var i1 = 0;
            var q = this.openedViews;
            while (i1 < q.length) {
                var i = q[i1];
                ++i1;
                i.view.updateView()
            }
        },
        getTopView: function() {
            var i = this.getActiveView();
            if (i != null) {
                return i.view
            }
            return null
        },
        closeTopView: function() {
            var i = this.getActiveView();
            if (i != null) {
                this.closeView(i.view)
            }
        },
        closeAllViews: function(q) {
            var i2 = 0;
            var i1 = this.openedViews;
            while (i2 < i1.length) {
                var i = i1[i2];
                ++i2;
                if (q != null && kX.getClassName(kX.getClass(i.view)) != kX.getClassName(q)) {
                    this.closeView(i.view, true)
                } else {
                    if (q == null) {
                        this.closeView(i.view, true);
                        return
                    }
                }
            }
        },
        enableViews: function() {
            var i1 = 0;
            var q = this.openedViews;
            while (i1 < q.length) {
                var i = q[i1];
                ++i1;
                i.view.enable()
            }
        },
        onShopAddedToStage: function(i) {
            i.target.removeEventListener("addedToStage", oT(this, this.onShopAddedToStage));
            if (!(n0.__cast(i.target, eH)).stage.hasEventListener("click")) {
                (n0.__cast(i.target, eH)).stage.addEventListener("click", oT(this, this.onClickStage))
            }
            if (n0.__instanceof(i.target, ol)) {
                (n0.__cast(i.target, ol)).disableShape.addEventListener("click", oT(this, this.onClickDisableShape))
            }
        },
        onClickStage: function(i) {
            if (i.target == (n0.__cast(i.target, eH)).stage) {
                this.closeTopView()
            }
        },
        onClickDisableShape: function(i) {
            this.closeTopView()
        },
        __class__: lc,
        __properties__: {
            get_hasViews: "get_hasViews"
        }
    };
    var fN = function(i) {
        cY.call(this);
        if (i.w == null) {
            i.w = -1
        }
        i.w;
        if (i.h == null) {
            i.h = -1
        }
        i.h;
        this.options = i;
        this.init()
    };
    nt["agario.views.components.ImageWrap"] = fN;
    fN.__name__ = ["agario", "views", "components", "ImageWrap"];
    fN.__super__ = cY;
    fN.prototype = lP(cY.prototype, {
        options: null,
        imageMask: null,
        init: function() {
            var q = this.options.url;
            if (q == null && this.options.image != null && this.options.image.source != null) {
                q = this.options.image.source
            }
            if (q != null) {
                var i = b3.getImageUrl(q);
                this.addImage(i, i, null)
            } else {
                if (this.options.image != null) {
                    var i1 = this.options.image;
                    this.addImage(i1.id, i1.source, i1)
                }
            }
        },
        addImage: function(i2, q, i1) {
            var i;
            if (i1 != null) {
                i = i1
            } else {
                i = q
            }
            if (b3.existRemoteAsset(i)) {
                b3.getRemoteBitmapData(i).then(oT(this, this.handleImageLoading))
            } else {
                this.imageMask = new cY();
                if (this.options.w > 0) {
                    if (this.options.h < 0) {
                        this.options.h = this.options.w
                    }
                    this.imageMask.get_graphics().beginFill(16777215, 0.2);
                    this.imageMask.get_graphics().drawRect(0, 0, this.options.w, this.options.h);
                    this.imageMask.get_graphics().endFill();
                    this.addChild(this.imageMask)
                }
                b3.loadRemoteBitmap(i2, q, i1).then(oT(this, this.handleImageLoading)).catchError(oT(this, this.handleError))
            }
        },
        handleError: function(i) {
            null
        },
        handleImageLoading: function(i1) {
            if (i1 == null) {
                return
            }
            var q = new el(i1);
            this.addChild(q);
            var i;
            if (this.options.w > 0) {
                i = this.options.w / q.get_width()
            } else {
                i = 1
            }
            q.set_scaleX(q.set_scaleY(i));
            q.smoothing = true;
            this.dispatchEvent(new hM("complete", true))
        },
        __class__: fN
    });
    var lU = function() {
        this.line = new cY();
        this.whiteSpace = new cY();
        mG.call(this, {
            name: "tabcontrol"
        });
        this.items = [];
        this.onChange = new qt();
        this.addEventListener("addedToStage", oT(this, this.onAdded))
    };
    nt["oaktree.ext.ui.controls.TabControl"] = lU;
    lU.__name__ = ["oaktree", "ext", "ui", "controls", "TabControl"];
    lU.__super__ = mG;
    lU.prototype = lP(mG.prototype, {
        line: null,
        whiteSpace: null,
        items: null,
        length: null,
        get_length: function() {
            return this.items.length
        },
        selectedId: null,
        current: null,
        onChange: null,
        onAdded: function(i) {
            this.removeEventListener("addedToStage", oT(this, this.onAdded));
            this.line.get_graphics().lineStyle(2, 12566463, 1);
            this.line.get_graphics().moveTo(10, 0);
            this.line.get_graphics().lineTo(this.maxWidth - 80, 0);
            this.line.set_y(30);
            this.addChild(this.line)
        },
        setTab: function(i) {
            this.changeTab(this.items[i], true)
        },
        setTabByName: function(q) {
            var i = this.items.filter(function(i1) {
                return i1.id == q
            })[0];
            if (i != null) {
                this.changeTab(i, true)
            } else {
                this.setTab(0)
            }
        },
        clear: function() {
            var i1 = 0;
            var q = this.items;
            while (i1 < q.length) {
                var i = q[i1];
                ++i1;
                this.removeChild(i);
                i.reset()
            }
            this.current = null;
            this.items = []
        },
        addTab: function(i) {
            if (this.items.length == 0) {
                i.set_selected(true);
                this.current = i;
                this.selectedId = 0
            }
            this.items.push(i);
            this.addChild(i);
            i.onClick.add(oT(this, this.onItemClick));
            this.update_layout();
            return i
        },
        changeTab: function(i1, qY) {
            if (qY == null) {
                qY = false
            }
            var i2 = 0;
            var js = this.items.length;
            while (i2 < js) {
                var q = i2++;
                this.items[q].set_selected(this.items[q] == i1);
                if (this.items[q].selected) {
                    this.current = this.items[q];
                    this.selectedId = q
                }
            }
            this.whiteSpace.get_graphics().clear();
            this.whiteSpace.get_graphics().beginFill(16777215);
            this.whiteSpace.get_graphics().drawRect(this.current.get_x() + 1, this.current.get_y() + 25, this.current.offVisual.get_width() - 2, 10);
            this.addChild(this.whiteSpace);
            if (!qY) {
                this.onChange.dispatch(i1)
            }
        },
        onItemClick: function(i) {
            this.changeTab(i, false)
        },
        update_layout: function() {
            var i = Math.floor((this.maxWidth - 120) / this.items.length) - 5;
            var js = 10;
            var i2 = 0;
            var i1 = this.items;
            while (i2 < i1.length) {
                var q = i1[i2];
                ++i2;
                q.set_x(js);
                if (n0.__instanceof(q, cM)) {
                    (n0.__cast(q, cM)).set_width(i)
                }
                js += Math.round(q.get_width()) + 5
            }
            this.update_bounds()
        },
        __class__: lU,
        __properties__: lP(mG.prototype.__properties__, {
            get_length: "get_length"
        })
    });
    var cm = function() {
        lU.call(this)
    };
    nt["agario.views.components.SkinShopTabControl"] = cm;
    cm.__name__ = ["agario", "views", "components", "SkinShopTabControl"];
    cm.__super__ = lU;
    cm.prototype = lP(lU.prototype, {
        setTabByName: function(i2) {
            var i = this.items.filter(function(js) {
                return js.id == "owned"
            }).length > 0;
            var i1 = this.items.filter(function(js) {
                return js.id == i2
            });
            var q;
            if (i1.length > 0) {
                q = i1[0]
            } else {
                q = null
            }
            if (q != null) {
                this.changeTab(q, true)
            } else {
                if (i && i2.toUpperCase() != "OWNED") {
                    this.setTabByName("OWNED")
                } else {
                    this.setTab(0)
                }
            }
        },
        __class__: cm
    });
    var L = function() {
        var i = nK.get_assets().getTexture("back_button", "main_shop").get_bitmapData();
        this.upState = new el(i);
        this.upState.set_alpha(0.8);
        this.downState = new el(i);
        this.overState = new el(i);
        bh.call(this)
    };
    nt["agario.views.controls.ArrowCircleButton"] = L;
    L.__name__ = ["agario", "views", "controls", "ArrowCircleButton"];
    L.__super__ = bh;
    L.prototype = lP(bh.prototype, {
        __class__: L
    });
    var n3 = function() {
        var i = nK.get_assets().getTexture("check", "main_shop").get_bitmapData();
        this.upState = new el(i);
        this.upState.set_alpha(0.8);
        this.downState = new el(i);
        this.overState = new el(i);
        bh.call(this)
    };
    nt["agario.views.controls.CheckButton"] = n3;
    n3.__name__ = ["agario", "views", "controls", "CheckButton"];
    n3.__super__ = bh;
    n3.prototype = lP(bh.prototype, {
        toggleBitmap: function(i) {
            this.upState.set_alpha(i ? 0.8 : 0);
            this.downState.set_alpha(i ? 1 : 0);
            this.overState.set_alpha(i ? 1 : 0)
        },
        __class__: n3
    });
    var kv = function() {
        var q = nK.get_assets().getAtlas("main_shop").getTexture("Close").get_bitmapData();
        var i = nK.get_assets().getAtlas("main_shop").getTexture("Close_disabled").get_bitmapData();
        this.upState = new el(q);
        this.overState = new el(i);
        this.downState = new el(q);
        this.disabledState = new el(i);
        bh.call(this)
    };
    nt["agario.views.controls.CloseButton"] = kv;
    kv.__name__ = ["agario", "views", "controls", "CloseButton"];
    kv.__super__ = bh;
    kv.prototype = lP(bh.prototype, {
        __class__: kv
    });
    var pa = function(i) {
        this._options = i;
        if (i.color == null) {
            i.color = 16711680
        }
        i.color;
        if (i.overColor == null) {
            i.overColor = i.color
        }
        i.overColor;
        if (i.w == null) {
            i.w = 140
        }
        i.w;
        if (i.h == null) {
            i.h = 30
        }
        i.h;
        if (i.radius == null) {
            i.radius = 10
        }
        i.radius;
        if (i.text == null) {
            i.text = ""
        }
        i.text;
        if (i.textColor == null) {
            i.textColor = 16777215
        }
        i.textColor;
        if (i.textColorOver == null) {
            i.textColorOver = 3355443
        }
        i.textColorOver;
        if (i.icon == null) {
            i.icon = null
        }
        i.icon;
        if (i.fontSize == null) {
            i.fontSize = 12
        }
        i.fontSize;
        if (i.bold == null) {
            i.bold = false
        }
        i.bold;
        if (i.showOutline == null) {
            i.showOutline = false
        }
        i.showOutline;
        if (i.outlineColor == null) {
            i.outlineColor = 0
        }
        i.outlineColor;
        if (i.iconPosition == null) {
            i.iconPosition = "right"
        }
        i.iconPosition;
        if (i.iconPadding == null) {
            i.iconPadding = 0
        }
        i.iconPadding;
        var i1 = new cY();
        this.normalBtnFace = new mR();
        var q = i.w;
        if (i.showOutline) {
            this.normalBtnFace.get_graphics().lineStyle(2, i.outlineColor);
            q = i.w - 1
        }
        this.normalBtnFace.get_graphics().beginFill(i.color, 1);
        this.normalBtnFace.get_graphics().drawRoundRect(0, 0, q, i.h, i.radius, i.radius);
        this.normalBtnFace.get_graphics().endFill();
        i1.addChild(this.normalBtnFace);
        this.overBtnFace = new mR();
        if (i.showOutline) {
            this.overBtnFace.get_graphics().lineStyle(2, i.outlineColor)
        }
        this.overBtnFace.get_graphics().beginFill(i.overColor, 1);
        this.overBtnFace.get_graphics().drawRoundRect(0, 0, q, i.h, i.radius, i.radius);
        this.overBtnFace.get_graphics().endFill();
        i1.addChild(this.overBtnFace);
        this.overBtnFace.set_visible(false);
        this.btnLabel = new fT({
            text: i.text,
            fontSize: i.fontSize,
            align: 0,
            color: 16777215,
            bold: i.bold
        }, i.icon, i.iconPosition, i.iconPadding);
        i1.addChild(this.btnLabel);
        this.upState = this.downState = this.overState = i1;
        bh.call(this);
        this.position()
    };
    nt["agario.views.controls.ColorButton"] = pa;
    pa.__name__ = ["agario", "views", "controls", "ColorButton"];
    pa.__super__ = bh;
    pa.prototype = lP(bh.prototype, {
        btnLabel: null,
        normalBtnFace: null,
        overBtnFace: null,
        _options: null,
        text: null,
        get_text: function() {
            return this.text
        },
        set_text: function(i) {
            this.btnLabel.set_text(i);
            this.position();
            return this.text = i
        },
        position: function() {
            if (this._options.icon != null && this.btnLabel.get_height() <= this._options.icon.get_height()) {
                this.btnLabel.set_y((this._options.h - this._options.icon.get_height() / 2) * 0.5)
            } else {
                this.btnLabel.set_y((this._options.h - this.btnLabel.get_height()) * 0.5)
            }
        },
        updateState: function() {
            bh.prototype.updateState.call(this);
            if (this.mouseIsOver) {
                this.overBtnFace.set_visible(true);
                this.normalBtnFace.set_visible(false);
                this.btnLabel.label.set_textColor(this._options.textColorOver)
            } else {
                this.overBtnFace.set_visible(false);
                this.normalBtnFace.set_visible(true);
                this.btnLabel.label.set_textColor(this._options.textColor)
            }
        },
        hideIcon: function() {
            this.btnLabel.set_icon(null)
        },
        __class__: pa,
        __properties__: lP(bh.prototype.__properties__, {
            set_text: "set_text",
            get_text: "get_text"
        })
    });
    var i6 = function() {
        cY.call(this);
        this.freeCoinsBtn = new pa({
            color: 6343424,
            overColor: 5748225,
            text: "Free Coins \n 20 Coins",
            textColorOver: 16777215,
            textColor: 16777215,
            icon: this.freeCoinsIcon,
            w: 140,
            h: 50,
            fontSize: 14,
            bold: true
        });
        this.addChild(this.freeCoinsBtn);
        this.freeCoinsBtn.set_enabled(false);
        this.freeCoinsBtn.set_alpha(0.5);
        this.freeCoinsIcon = new el(nK.get_assets().getTexture("currency_icon", "main_shop").get_bitmapData())
    };
    nt["agario.views.controls.FreeCoinsButton"] = i6;
    i6.__name__ = ["agario", "views", "controls", "FreeCoinsButton"];
    i6.__super__ = cY;
    i6.prototype = lP(cY.prototype, {
        freeCoinsBtn: null,
        timeLeft: null,
        freeCoinsIcon: null,
        setTimeLeft: function(i) {
            this.timeLeft = i;
            if (this.timeLeft > 0) {
                this.freeCoinsBtn = new pa({
                    color: 14699578,
                    overColor: 14699578,
                    text: "Collect in: \n",
                    textColorOver: 16777215,
                    textColor: 16777215,
                    icon: this.freeCoinsIcon,
                    w: 140,
                    h: 50,
                    fontSize: 14,
                    bold: true
                });
                this.startTimedEvents()
            } else {
                this.freeCoinsBtn = new pa({
                    color: 6343424,
                    overColor: 5748225,
                    textColorOver: 16777215,
                    textColor: 16777215,
                    text: "Free Coins \n 20 Coins",
                    icon: this.freeCoinsIcon,
                    w: 140,
                    h: 50,
                    fontSize: 14,
                    bold: true
                })
            }
            this.addChild(this.freeCoinsBtn);
            this.freeCoinsBtn.addEventListener("click", oT(this, this.onFreeCoinsClick));
            this.freeCoinsBtn.set_x(0)
        },
        onFreeCoinsClick: function(i) {
            i.stopImmediatePropagation();
            this.freeCoinsBtn.set_enabled(false);
            this.freeCoinsBtn.delayedEnable();
            this.dispatchEvent(i)
        },
        startTimedEvents: function() {
            var i = this;
            var q = new og(1000);
            q.run = function() {
                var i1 = Math.round(i.timeLeft / 1000);
                i.freeCoinsBtn.set_text("Collect in: \n" + Math.floor(i1 / 60) + "m " + (i1 % 60 >= 10 ? "" : "0") + i1 % 60 + "s");
                i.timeLeft -= 1000;
                if (i1 <= 0) {
                    i1 = 0;
                    q.stop();
                    i.dispatchEvent(new hM("complete"));
                    i.freeCoinsBtn.set_enabled(true)
                }
            }
        },
        __class__: i6
    });
    var kB = function(i2, q, i1, js) {
        if (js == null) {
            js = "left"
        }
        if (i1 == null) {
            i1 = 80
        }
        if (q == null) {
            q = 140
        }
        cY.call(this);
        var i = nK.get_assets().getAtlas("main_shop");
        this.icon = new el(i.get("hint").get_bitmapData());
        this.closeIcon = new el(i.get("Close").get_bitmapData());
        this.direction = js;
        this.h = i1;
        this.w = q;
        this.displayText = i2;
        this.addEventListener("click", oT(this, this.onHintClick));
        this.addChild(this.icon);
        this.closeIcon.set_x((this.icon.get_width() - this.closeIcon.get_width()) / 2);
        this.closeIcon.set_y((this.icon.get_height() - this.closeIcon.get_height()) / 2);
        this.drawShape();
        this.createLabel();
        this.doLayout();
        this.buttonMode = true;
        this.useHandCursor = true;
        this.opened = false
    };
    nt["agario.views.controls.HintTooltip"] = kB;
    kB.__name__ = ["agario", "views", "controls", "HintTooltip"];
    kB.__super__ = cY;
    kB.prototype = lP(cY.prototype, {
        icon: null,
        closeIcon: null,
        displayText: null,
        h: null,
        quadShape: null,
        direction: null,
        lbl: null,
        w: null,
        opened: null,
        doLayout: function() {
            if (this.direction.toLowerCase() == "left") {
                this.quadShape.set_x(-this.quadShape.get_width() + this.icon.get_width() + 5);
                this.quadShape.set_y(-5);
                this.lbl.set_x(this.quadShape.get_x() + (this.quadShape.get_width() - this.lbl.get_width()) / 2 - 10);
                this.lbl.set_y(this.quadShape.get_y() + (this.quadShape.get_height() - this.lbl.get_height()) / 2)
            }
        },
        createLabel: function() {
            var i = {};
            i.align = 0;
            i.text = this.displayText;
            i.width = this.quadShape.get_width() - 40;
            i.color = 3355443;
            this.lbl = new m1(i);
            this.lbl.set_selectable(false);
            this.lbl.mouseEnabled = false
        },
        drawShape: function() {
            this.quadShape = new mR();
            this.quadShape.get_graphics().beginFill(16777215);
            this.quadShape.get_graphics().drawRoundRect(0, 0, this.w, this.h, 5, 5);
            this.quadShape.get_graphics().endFill()
        },
        onHintClick: function(i) {
            if (this.opened) {
                this.closeHint();
                this.dispatchEvent(new a9(a9.CLOSED))
            } else {
                this.openHint();
                this.dispatchEvent(new a9(a9.OPENED))
            }
        },
        openHint: function() {
            this.addChild(this.quadShape);
            this.addChild(this.lbl);
            this.addChild(this.closeIcon);
            if (this.contains(this.icon)) {
                this.removeChild(this.icon)
            }
            this.opened = true
        },
        closeHint: function() {
            if (this.quadShape.parent != null) {
                this.quadShape.parent.removeChild(this.quadShape);
                this.lbl.parent.removeChild(this.lbl)
            }
            if (this.contains(this.closeIcon)) {
                this.removeChild(this.closeIcon)
            }
            this.addChild(this.icon);
            this.opened = false
        },
        __class__: kB
    });
    var fe = function(i) {
        this.upState = this.overState = this.downState = this.disabledState = i;
        bh.call(this)
    };
    nt["agario.views.controls.ImageButton"] = fe;
    fe.__name__ = ["agario", "views", "controls", "ImageButton"];
    fe.__super__ = bh;
    fe.prototype = lP(bh.prototype, {
        __class__: fe
    });
    var kR = function(i) {
        cY.call(this);
        this.circle = new cY();
        this.circle.get_graphics().beginFill(15742775, 1);
        this.circle.get_graphics().lineStyle(2, 12783377);
        this.circle.get_graphics().drawCircle(0, 0, 10);
        this.circle.get_graphics().endFill();
        this.addChild(this.circle);
        this.quantityLabel = new m1({
            text: i == null ? "null" : "" + i,
            align: 3,
            color: 16777215
        });
        this.quantityLabel.set_autoSize(1);
        this.quantityLabel.set_selectable(false);
        this.addChild(this.quantityLabel);
        this.quantityLabel.addEventListener("addedToStage", oT(this, this.onAdded))
    };
    nt["agario.views.controls.QuantityCircle"] = kR;
    kR.__name__ = ["agario", "views", "controls", "QuantityCircle"];
    kR.__super__ = cY;
    kR.prototype = lP(cY.prototype, {
        quantityLabel: null,
        circle: null,
        onAdded: function(i) {
            this.removeEventListener("addedToStage", oT(this, this.onAdded));
            this.doLayout()
        },
        doLayout: function() {
            this.quantityLabel.set_x(-this.quantityLabel.get_width() / 2);
            this.quantityLabel.set_y(-this.quantityLabel.get_height() / 2)
        },
        update: function(i) {
            this.quantityLabel.set_text(i == null ? "null" : "" + i);
            this.doLayout();
            this.set_visible(i > 0)
        },
        __class__: kR
    });
    var gr = function(q1, q2, js) {
        if (js == null) {
            js = 65
        }
        if (q2 == null) {
            q2 = 85
        }
        var q3 = new cY();
        var i2 = new cY();
        var q0 = new cY();
        var i1 = new m1({
            text: q1,
            fontSize: 18,
            align: 3,
            color: 16777215
        });
        var q4 = new m1({
            text: q1,
            fontSize: 18,
            align: 3,
            color: 16777215
        });
        var q = new m1({
            text: q1,
            fontSize: 18,
            align: 3,
            color: 16777215
        });
        i1.set_autoSize(1);
        q4.set_autoSize(1);
        q.set_autoSize(1);
        var i = new mR();
        i.get_graphics().beginFill(6349312);
        mr.drawRoundRectComplex(i.get_graphics(), 0, 0, q2, js, 0, 5, 0, 5);
        i.get_graphics().endFill();
        q3.addChild(i);
        q3.addChild(i1);
        var qZ = new mR();
        qZ.get_graphics().beginFill(4760069);
        mr.drawRoundRectComplex(qZ.get_graphics(), 0, 0, q2, js, 0, 5, 0, 5);
        qZ.get_graphics().endFill();
        i2.addChild(qZ);
        i2.addChild(q4);
        var qY = new mR();
        qY.get_graphics().beginFill(2446594);
        mr.drawRoundRectComplex(qY.get_graphics(), 0, 0, q2, js, 0, 5, 0, 5);
        qY.get_graphics().endFill();
        q0.addChild(qY);
        q0.addChild(q);
        this.upState = this.disabledState = q3;
        this.overState = i2;
        this.downState = q0;
        q4.set_y(i1.set_y(q.set_y((js - i1.get_height()) / 2)));
        q4.set_x(i1.set_x(q.set_x(20)));
        bh.call(this)
    };
    nt["agario.views.controls.SemiRoundButton"] = gr;
    gr.__name__ = ["agario", "views", "controls", "SemiRoundButton"];
    gr.__super__ = bh;
    gr.prototype = lP(bh.prototype, {
        __class__: gr
    });
    var ci = function() {
        this.amount = 0;
        this.backgroundShape = new mR();
        var i = {
            text: "",
            fontSize: 16,
            color: 3421236,
            align: 4
        };
        this.stateUp = new cY();
        this.amountLabel = new m1(i);
        this.amountLabel.set_backgroundColor(16711935);
        this.amountLabel.set_name("0");
        this.finalAmountLabel = new m1(i);
        this.finalAmountLabel.set_name("0");
        this.icon = new el(nK.get_assets().getTexture("currency_icon", "main_shop").get_bitmapData());
        this.upState = this.disabledState = this.stateUp;
        this.overState = this.stateUp;
        this.downState = this.stateUp;
        bh.call(this);
        this.addEventListener("addedToStage", oT(this, this.onAddedToStage));
        this.set_cacheAsBitmap(true);
        this.mouseChildren = false
    };
    nt["agario.views.controls.ShopHUD"] = ci;
    ci.__name__ = ["agario", "views", "controls", "ShopHUD"];
    ci.__super__ = bh;
    ci.prototype = lP(bh.prototype, {
        amountLabel: null,
        finalAmountLabel: null,
        outlineShape: null,
        backgroundShape: null,
        plusButton: null,
        stateUp: null,
        countDownTimer: null,
        icon: null,
        amount: null,
        get_amount: function() {
            return this.amount
        },
        set_amount: function(i) {
            this.updateAmount(i);
            return this.amount = i
        },
        onAddedToStage: function(i) {
            bh.prototype.onAddedToStage.call(this, i);
            this.clear();
            this.init();
            nK.get_events().addEventListener(o1.WALLET_UPDATED, oT(this, this.handleWalletUpdate));
            this.updateAmount(nK.user.get_coins())
        },
        handleWalletUpdate: function(i) {
            nK.services.gameui.setUserCoins(nK.user.get_coins());
            this.updateAmount(nK.user.get_coins())
        },
        init: function() {
            if (this.plusButton == null) {
                this.plusButton = this.drawPlusBtn()
            }
            this.stateUp.addChild(this.plusButton);
            this.plusButton.set_x(0);
            this.icon.set_x(this.plusButton.get_x() - this.icon.get_width() - 5);
            this.icon.set_y(this.plusButton.get_y() + (this.plusButton.get_height() - this.icon.get_height()) / 2);
            this.addChild(this.icon);
            this.addChild(this.amountLabel);
            this.amountLabel.set_y(this.plusButton.get_y() + (this.plusButton.get_height() - this.finalAmountLabel.get_height()) / 2 + 2);
            this.outlineShape = this.drawOutline(this.finalAmountLabel.get_textWidth());
            this.outlineShape.set_x(this.plusButton.get_x() - (this.outlineShape.get_width() - this.plusButton.get_width()) + 1);
            this.outlineShape.set_y(this.plusButton.get_y() - 1);
            this.stateUp.addChild(this.outlineShape);
            this.backgroundShape = this.drawBackground(this.backgroundShape, this.outlineShape.get_width());
            this.backgroundShape.set_x(this.outlineShape.get_x());
            this.backgroundShape.set_y(this.outlineShape.get_y());
            this.stateUp.addChildAt(this.backgroundShape, 0);
            this.upState = this.disabledState = this.stateUp;
            this.overState = this.stateUp;
            this.downState = this.stateUp
        },
        drawPlusBtn: function() {
            var q = new cY();
            var i1 = new mR();
            i1.get_graphics().beginFill(6349312);
            mr.drawRoundRectComplex(i1.get_graphics(), 0, 0, 30, 32, 0, 4, 0, 4);
            i1.get_graphics().endFill();
            q.addChild(i1);
            var i = new m1({
                text: "+",
                fontSize: 24,
                bold: true,
                color: 16777215
            });
            i.set_x((i1.get_width() - i.get_width()) / 2);
            i.set_y((i1.get_height() - i.get_height()) / 2);
            q.addChild(i);
            return q
        },
        drawBackground: function(q, i) {
            q.get_graphics().clear();
            q.get_graphics().beginFill(16777215, 1);
            q.get_graphics().drawRoundRect(0, 0, i, 34, 10, 10);
            q.get_graphics().endFill();
            return q
        },
        drawOutline: function(q) {
            var i = new mR();
            i.get_graphics().lineStyle(2, 5093376, 1, true, 2);
            i.get_graphics().drawRoundRect(0, 0, q + this.plusButton.get_width() + 40, 34, 10, 10);
            i.set_cacheAsBitmap(true);
            return i
        },
        updateAmount: function(i) {
            this.finalAmountLabel.set_name("" + i);
            this.updateHudValue(this.finalAmountLabel);
            this.updateCoinContainer();
            if (this.countDownTimer != null) {
                this.countDownTimer.stop()
            }
            this.countDownTimer = new og(10);
            this.countDown(this.amountLabel, i, oT(this, this.onAmountUpdate))
        },
        onAmountUpdate: function() {
            this.amountLabel.set_x(this.icon.get_x() - this.amountLabel.get_textWidth() - 10)
        },
        updateCoinContainer: function() {
            this.clear();
            this.init()
        },
        countDown: function(i2, i1, q) {
            var qY = this;
            var i = kr.parseInt(i2.get_name());
            var js = Math.abs((i1 - i) / 5);
            if (i > i1) {
                i2.set_name(kr.string(i - Math.ceil(js)));
                this.updateHudValue(i2)
            } else {
                if (i < i1) {
                    i2.set_name(kr.string(i + Math.ceil(js)));
                    this.updateHudValue(i2)
                }
            }
            if (i != i1) {
                this.countDownTimer.run = function() {
                    qY.countDown(i2, i1, q)
                }
            } else {
                i2.set_name(i1 == null ? "null" : "" + i1);
                this.updateHudValue(i2);
                this.countDownTimer.stop()
            }
            q()
        },
        updateHudValue: function(i) {
            i.set_text(j5.formatNumber(kr.parseInt(i.get_name()), "n", " "))
        },
        clear: function() {
            while (this.stateUp.get_numChildren() > 0) {
                this.stateUp.removeChildAt(0)
            }
        },
        __class__: ci,
        __properties__: lP(bh.prototype.__properties__, {
            set_amount: "set_amount",
            get_amount: "get_amount"
        })
    });
    var ma = function(i) {
        cY.call(this);
        this.txt = i;
        this.initialize()
    };
    nt["agario.views.controls.StampSticker"] = ma;
    ma.__name__ = ["agario", "views", "controls", "StampSticker"];
    ma.__super__ = cY;
    ma.prototype = lP(cY.prototype, {
        txt: null,
        stamp: null,
        stampLabel: null,
        initialize: function() {
            this.stamp = new el(nK.get_assets().getTexture("sticker").get_bitmapData());
            this.addChild(this.stamp);
            this.stampLabel = new m1({
                text: this.txt,
                fontSize: 11,
                align: 0,
                color: 16777215,
                width: 60,
                bold: true
            });
            this.stampLabel.set_wordWrap(true);
            this.stampLabel.set_multiline(true);
            this.stampLabel.set_selectable(false);
            this.stampLabel.set_cacheAsBitmap(true);
            this.stampLabel.set_height(30);
            this.stampLabel.addEventListener("addedToStage", oT(this, this.onAdded));
            this.addChild(this.stampLabel);
            this.stamp.set_x(-this.stamp.get_width() / 2);
            this.stamp.set_y(-this.stamp.get_height() / 2)
        },
        onAdded: function(i) {
            this.removeEventListener("addedToStage", oT(this, this.onAdded));
            this.stampLabel.set_x(-this.stampLabel.get_width() / 2);
            this.stampLabel.set_y(-this.stampLabel.get_height() / 2)
        },
        __class__: ma
    });
    var c = function() {
        this.buttonSize = new gn();
        this.element = window.document.createElement("div");
        this.element.className = "promo-badge-element";
        this.element.setAttribute("style", "position: relative")
    };
    nt["agario.views.promoclient.HTMLPromoButton"] = c;
    c.__name__ = ["agario", "views", "promoclient", "HTMLPromoButton"];
    c.getButtonForOffer = function(i1, js, i2, i) {
        var q = new c();
        if (!q.initWithConfig(i1, js, i2, i)) {
            q.dispose();
            q = null
        }
        return q
    };
    c.prototype = {
        element: null,
        _offerId: null,
        _gameDelegate: null,
        _system: null,
        _style: null,
        fullBtn: null,
        iconElement: null,
        buttonCache: null,
        buttonMatrix: null,
        buttonSize: null,
        initWithConfig: function(q, js, i2, i) {
            if (js == null) {
                return false
            }
            this._gameDelegate = i2;
            this._system = i;
            this.fullBtn = cw.getButtonForOffer(q, js, null, this._gameDelegate, this._system);
            if (this.fullBtn == null) {
                eM.trace(" / htmlpromobutton / " + ("Failed to load " + q + " button"), {
                    fileName: "HTMLPromoButton.hx",
                    lineNumber: 58,
                    className: "agario.views.promoclient.HTMLPromoButton",
                    methodName: "initWithConfig"
                });
                return false
            }
            this.buttonCache = new f0(Math.floor(this.fullBtn.get_width()), Math.floor(this.fullBtn.get_height()), true, 0);
            var i1 = this.fullBtn.getBounds(null);
            this.buttonMatrix = new qd();
            this.buttonMatrix.translate(i1.x * -1, i1.y * -1);
            this.iconElement = window.document.createElement("img");
            this.iconElement.className = "promo-badge-frame";
            this.element.appendChild(this.iconElement);
            this.update();
            return true
        },
        update: function(q) {
            if (q == null) {
                q = 0
            }
            this.fullBtn.update(q);
            this.buttonCache.fillRect(this.buttonCache.rect, 0);
            this.buttonCache.draw(this.fullBtn.content, this.buttonMatrix);
            var i = this.convertBitmapToBase64(this.buttonCache);
            this.iconElement.setAttribute("src", "data:image/png;base64," + i)
        },
        convertBitmapToBase64: function(q) {
            var i2 = q;
            var js = new ge(0);
            try {
                js = i2.encode(new gn(0, 0, i2.width, i2.height), new dt())
            } catch (i1) {
                lF.lastException = i1;
                if (i1 instanceof nM) {
                    i1 = i1.val
                }
                eM.trace("failed to encode bitmap", {
                    fileName: "HTMLPromoButton.hx",
                    lineNumber: 245,
                    className: "agario.views.promoclient.HTMLPromoButton",
                    methodName: "convertBitmapToBase64"
                })
            }
            var i = "";
            if (js != null) {
                i = mF.base64Encode(op.toBytes(js))
            }
            return i
        },
        dispose: function() {
            if (this.buttonCache != null) {
                this.buttonCache.dispose()
            }
        },
        __class__: c
    };
    var cw = function() {
        dV.call(this);
        this.setAnchorPoint(new pp(0, 0));
        this.buttonSize = new gn();
        this.iconNodes = [];
        this.labelNodes = new oI()
    };
    nt["agario.views.promoclient.PromoButton"] = cw;
    cw.__name__ = ["agario", "views", "promoclient", "PromoButton"];
    cw.getButtonForOffer = function(i, qY, js, i2, q) {
        var i1 = new cw();
        if (!i1.initWithConfig(i, qY, js, i2, q)) {
            i1.dispose();
            i1 = null
        }
        return i1
    };
    cw.__super__ = dV;
    cw.prototype = lP(dV.prototype, {
        offsetX: null,
        offsetY: null,
        buttonFrame: null,
        buttonHitBox: null,
        buttonSize: null,
        iconNodes: null,
        labelNodes: null,
        onClickCallback: null,
        _offerId: null,
        _gameDelegate: null,
        _system: null,
        _timerText: null,
        _timerLabel: null,
        _action: null,
        _config: null,
        timerLabel: null,
        get_timerLabel: function() {
            return this._timerLabel
        },
        initWithConfig: function(i, js, i2, i1, q) {
            if (js == null) {
                return false
            }
            this._config = js;
            this._action = js.buttonAction;
            this._offerId = i;
            this._gameDelegate = i1;
            this._system = q;
            this.onClickCallback = i2;
            if (!this.renderButtonFrame(js)) {
                return false
            }
            if (!this.renderButtonIcons(js)) {
                return false
            }
            this.renderLabels(js);
            this.renderCountdown(js);
            this.buttonMode = this.onClickCallback != null;
            this.addEventListener("click", oT(this, this.handleMouseClick));
            return true
        },
        handleMouseClick: function(js) {
            var i1 = this.getBounds(this);
            var i = new qd();
            i.translate(Math.round(-i1.get_left()), Math.round(-i1.get_top()));
            var qY = new f0(Math.round(this.get_width()), Math.round(this.get_height()), true, 0);
            qY.draw(this, i, null);
            var q = qY.getPixel32(Math.round(js.localX - i1.get_left()), Math.round(js.localY - i1.get_top()));
            var i2 = q != 0;
            if (this.onClickCallback != null && i2) {
                this.onClickCallback(this._offerId, this._action)
            }
        },
        renderButtonFrame: function(q) {
            var q1 = q.buttonBackgroundImage;
            if (q1 == null) {
                return false
            }
            var q0 = q1.useBasePack;
            this.offsetX = bA.scaleF(bA.asFloat(q.buttonBackgroundImage.offsetX, 0), q0);
            this.offsetY = bA.scaleF(bA.asFloat(q.buttonBackgroundImage.offsetY, 0), q0);
            var i = bA.asFloat(q1.minimumScale, 1);
            var i2 = bA.asFloat(q1.maximumScale, 1);
            var q3 = bA.asFloat(q1.rotation, 0);
            this.buttonFrame = bA.getImageNodeFromConfig(q.buttonBackgroundImage);
            if (this.buttonFrame == null) {
                return false
            }
            var js = bA.scaleF(bA.asFloat(q1.maxWidth, 0), q0);
            var qZ = bA.scaleF(bA.asFloat(q1.maxHeight, 0), q0);
            var q2;
            if (js == 0) {
                q2 = this.buttonFrame.get_width()
            } else {
                q2 = js
            }
            var qY;
            if (qZ == 0) {
                qY = this.buttonFrame.get_height()
            } else {
                qY = qZ
            }
            this.buttonSize.setTo(0, 0, q2, qY);
            this.buttonFrame.buttonMode = true;
            this.buttonFrame.set_rotation(q3);
            var i1 = q.colorData;
            if (i1 != null) {
                this.buttonFrame.setColor(new h7().set(i1.r, i1.g, i1.b, i1.a))
            }
            if (q1.zOrder > -1) {
                this.addNodeAt(this.buttonFrame, q1.zOrder)
            } else {
                this.addNode(this.buttonFrame)
            }
            this.buttonSize.setTo(this.buttonFrame.get_x(), this.buttonFrame.get_y(), this.buttonFrame.get_width(), this.buttonFrame.get_height());
            return true
        },
        renderButtonIcons: function(q) {
            var qY = q.buttonIconImages;
            var qZ = q.buttonBackgroundImage.useBasePack;
            if (qY == null) {
                return true
            }
            var js = 0;
            while (js < qY.length) {
                var i = qY[js];
                ++js;
                var q0 = bA.getImageNodeFromConfig(i);
                if (q0 != null) {
                    var q2 = bA.scaleF(bA.asFloat(i.offsetX, 0), qZ);
                    var q1 = bA.scaleF(bA.asFloat(i.offsetY, 0), qZ);
                    var i2 = q2;
                    var i1 = -q1;
                    q0.setPosition(new pp(i2, i1));
                    q0.mouseChildren = false;
                    if (i.zOrder > -1) {
                        this.addNodeAt(q0, i.zOrder)
                    } else {
                        this.addNode(q0)
                    }
                    this.iconNodes.push(q0)
                }
            }
            return true
        },
        renderLabels: function(qZ) {
            if (qZ.buttonTextLabels == null) {
                return
            }
            var qY = 0;
            var js = qZ.buttonTextLabels;
            while (qY < js.length) {
                var i = js[qY];
                ++qY;
                var q = bA.getTextNodeFromConfig(i, this._gameDelegate, this._system);
                if (q == null) {
                    continue
                }
                var i2 = bA.scaleF(bA.asFloat(i.offsetX, 0), i.useBasePack);
                var i1 = -bA.scaleF(bA.asFloat(i.offsetY, 0), i.useBasePack);
                q.setPosition(new pp(i2, i1));
                if (i.zOrder > -1) {
                    this.addNodeAt(q, i.zOrder)
                } else {
                    this.addNode(q)
                }
                this.labelNodes.add(q);
                q.mouseEnabled = false;
                q.mouseChildren = false
            }
        },
        renderCountdown: function(qZ) {
            var i2 = false;
            var i1 = qZ.displayRemainingTimeOnBadge;
            var q = qZ.timerConfiguration;
            this._timerText = null;
            this._timerLabel = null;
            if (q != null && !j5.isEmpty(this._offerId) && this._system != null) {
                var i = q.tag;
                this._timerText = null;
                if (i != null) {
                    this._timerText = this._gameDelegate.getLocalizedTextForTag(i, this._system)
                }
                this._timerLabel = bA.getTimerLabelFromConfig(q, this._offerId, this._gameDelegate, this._system);
                if (this._timerLabel != null) {
                    this._timerLabel.setText("99h 99m 99s");
                    var qY = bA.scaleF(bA.asFloat(q.offsetX, 0), q.useBasePack);
                    var js = -bA.scaleF(bA.asFloat(q.offsetY, 0), q.useBasePack);
                    this._timerLabel.setPosition(new pp(qY, js));
                    if (q.zOrder > -1) {
                        this.addNodeAt(this._timerLabel, q.zOrder)
                    } else {
                        this.addNode(this._timerLabel)
                    }
                    this._timerLabel.mouseChildren = false
                }
            } else {
                if (i1 && !j5.isEmpty(this._offerId) && this._system != null) {}
            }
        },
        update: function(q) {
            dV.prototype.update.call(this, q);
            if (this._timerLabel != null) {
                bA.updateTimerOnLabel(this._timerLabel, this._timerText, this._offerId, this._gameDelegate, this._system);
                var i = this._config.timerConfiguration;
                var i2 = bA.scaleF(bA.asFloat(i.offsetX, 0), i.useBasePack);
                var i1 = -bA.scaleF(bA.asFloat(i.offsetY, 0), i.useBasePack);
                this._timerLabel.setPosition(new pp(i2, i1))
            }
        },
        dispose: function() {
            if (this.iconNodes != null) {
                var qY = 0;
                var js = this.iconNodes;
                while (qY < js.length) {
                    var i1 = js[qY];
                    ++qY;
                    i1.dispose()
                }
            }
            if (this.labelNodes != null) {
                var q = this.labelNodes.h;
                var i2 = null;
                while (q != null) {
                    var i;
                    i = (function(q0) {
                        var qZ;
                        i2 = q[0];
                        q = q[1];
                        qZ = i2;
                        return qZ
                    }(this));
                    i.dispose()
                }
            }
            if (this._timerLabel != null) {
                this._timerLabel.dispose()
            }
            dV.prototype.dispose.call(this)
        },
        __class__: cw,
        __properties__: lP(dV.prototype.__properties__, {
            get_timerLabel: "get_timerLabel"
        })
    });
    var bA = function() {};
    nt["agario.views.promoclient.PromoClientUtils"] = bA;
    bA.__name__ = ["agario", "views", "promoclient", "PromoClientUtils"];
    bA.getAsset = function(i) {
        var q = i.type;
        switch (q) {
            case "Sprite":
                return nK.get_assets().getAsset(i.spriteName);
            case "FramedSprite":
                break;
            default:
                return bA.getAssetLegacy(i)
        }
        return null
    };
    bA.getAssetLegacy = function(i) {
        throw new nM("not implemented");
        return null
    };
    bA.getImageNodeFromConfig = function(q5) {
        if (q5 == null) {
            return null
        }
        if (q5.type == null) {
            return null
        }
        var q8 = null;
        try {
            var qY = q5.type;
            switch (qY) {
                case "Sprite":
                    if (q5.get_isAtlas()) {
                        var q1 = nK.get_assets().getAtlas(bA.removeExtension(q5.plistFilename));
                        if (q1 != null) {
                            var q3 = null;
                            if (q1.hasTexture(q5.frameName)) {
                                q3 = q1.getTexture(q5.frameName)
                            } else {
                                if (q1.hasTexture(bA.removeExtension(q5.frameName))) {
                                    q3 = q1.getTexture(bA.removeExtension(q5.frameName))
                                }
                            }
                            if (q3 != null) {
                                q8 = new jS(q3.asBitmap());
                                (n0.__cast(q8.content, el)).smoothing = true
                            } else {}
                        } else {}
                    } else {
                        var q0;
                        if (q5.spriteFilename == null) {
                            q0 = q5.spriteFilename
                        } else {
                            q0 = q5.imageData.spriteFilename
                        }
                        if (q0 != null) {
                            var q2 = nK.get_assets().getAsset(q0);
                            if (q2 != null && q2.loaded) {
                                var rb = new el(q2.get_data());
                                rb.smoothing = true;
                                q8 = new jS(rb)
                            } else {}
                        }
                    }
                    break;
                case "FramedSprite":
                    var i1 = nK.get_assets().getFramedSprite(q5.frameName + ".plist");
                    if (i1 != null && i1.loaded) {
                        var q7 = bA.scaleFramedSpriteVO(i1.config);
                        var q4 = nK.get_assets().getTexture(q7.imageFrameName, q7.texture).get_bitmapData();
                        var q6 = ay.fromFrameSpriteVO(q4, q7);
                        q6.setSize(Math.floor(bA.scaleDimension(q5.maxWidth, bA.getScaleRatio(q5.useBasePack))), Math.floor(bA.scaleDimension(q5.maxHeight, bA.getScaleRatio(q5.useBasePack))));
                        q8 = new jS(q6)
                    } else {}
                    break;
                case "HorizontalStretchFrame":
                    var qZ = nK.get_assets().getFramedSprite(q5.frameDescription);
                    var ra = null;
                    if (qZ == null) {
                        if (!isNaN(q5.leftX) && !isNaN(q5.rightX)) {
                            ra = new aN();
                            ra.leftX = Math.floor(bA.scaleDimension(q5.leftX, bA.getScaleRatio(null)));
                            ra.rightX = Math.floor(bA.scaleDimension(q5.rightX, bA.getScaleRatio(null)));
                            ra.imageFrameName = bA.removeExtension(q5.frameName);
                            ra.texture = q5.plistFilename
                        }
                    }
                    if (qZ != null && qZ.loaded) {
                        ra = bA.scaleFramedSpriteVO(qZ.config)
                    }
                    if (ra != null) {
                        var i = nK.get_assets().getTexture(ra.imageFrameName, ra.texture).get_bitmapData();
                        var q = ay.fromFrameSpriteVO(i, ra);
                        q.isHorizontal = true;
                        q.setSize(Math.floor(bA.scaleDimension(q5.maxWidth, bA.getScaleRatio(q5.useBasePack))), Math.floor(bA.scaleDimension(q5.maxHeight, bA.getScaleRatio(q5.useBasePack))));
                        q8 = new jS(q)
                    } else {}
                    break;
                case "Special":
                    break;
                default:
            }
        } catch (q9) {
            lF.lastException = q9;
            if (q9 instanceof nM) {
                q9 = q9.val
            }
        }
        if (q8 != null) {
            var js;
            if (isNaN(q5.anchorX)) {
                js = 0.5
            } else {
                js = q5.anchorX
            }
            var i2;
            if (isNaN(q5.anchorY)) {
                i2 = 0.5
            } else {
                i2 = q5.anchorY
            }
            q8.setAnchorPoint(new pp(js, i2))
        }
        return q8
    };
    bA.getTextFromConfig = function(q8, q4, q) {
        var js = null;
        var ra = q8.tag;
        var q1 = q8.dataType;
        var q9 = q8.tag;
        var i1 = q8.shouldFormatValue;
        var q5 = q8.productMultiplier;
        var q6 = q8.transactionId;
        var q0 = q8.productId;
        var i2 = false;
        if (q1 == null || q1 == "" || q1 == dy.TEXT_DATA_TYPE_TEXT) {} else {
            if (q1 == dy.TEXT_DATA_TYPE_DESCRIPTION) {
                if (q0 == null || q0 == "") {
                    js = q4.getDescriptionForTransaction(q6, q)
                } else {
                    js = q4.getDescriptionForProduct(q0, q6, q)
                }
            } else {
                if (q1 == dy.TEXT_DATA_TYPE_OLD_PRICE) {
                    js = q4.getReferencePriceForTransaction(q6, i2, q)
                } else {
                    if (q1 == dy.TEXT_DATA_TYPE_NEW_PRICE) {
                        js = q4.getPromotionalPriceForTransaction(q6, i2, q)
                    } else {
                        if (q1 == dy.TEXT_DATA_TYPE_OLD_AMOUNT || q1 == dy.TEXT_DATA_TYPE_NEW_AMOUNT) {
                            var qY = q8.shouldGetSum;
                            var q3 = q8.productIndex;
                            if (q1 == dy.TEXT_DATA_TYPE_OLD_AMOUNT) {
                                if (qY) {
                                    js = q4.getReferenceSumAmountForProduct(q0, q6, q)
                                } else {
                                    var q7 = q4.getReferenceAmountForProduct(q0, q6, q);
                                    if (q7.length >= q3) {
                                        js = "" + q7[q3]
                                    } else {
                                        js = null
                                    }
                                }
                            } else {
                                if (qY) {
                                    js = q4.getPromotionalSumAmountForProduct(q0, q6, q)
                                } else {
                                    var i = q4.getPromotionalAmountForProduct(q0, q6, q);
                                    if (i.length >= q3) {
                                        js = "" + i[q3]
                                    } else {
                                        js = null
                                    }
                                }
                            }
                            if (q5 != 1 && parseFloat(js) != 0) {
                                js = "" + parseFloat(js) * q5
                            }
                            if (i1 && !(js == null || js == "")) {
                                js = bA.getFormattedAmountString(kr.parseInt(js))
                            }
                        } else {
                            if (q1 == dy.TEXT_DATA_TYPE_JSON_QUERY) {
                                var q2 = q8.jsonQuery;
                                js = q4.getValueForJSONQuery(q2, q)
                            }
                        }
                    }
                }
            }
        }
        if (!(q9 == null || q9 == "")) {
            var qZ = null;
            qZ = q4.getLocalizedTextForTag(q9, q);
            if (qZ == null || qZ == "") {
                qZ = q9
            }
            if (!(js == null || js == "")) {
                js = bA.stringWithFormat(qZ, [js])
            } else {
                js = qZ
            }
        }
        if (js == null || js == "") {
            return null
        }
        return js
    };
    bA.getTextNodeFromConfig = function(rj, rg, qY) {
        if (rj == null) {
            return null
        }
        var rb = new aj();
        rb.set_name("text");
        var q6 = bA.getTextFromConfig(rj, rg, qY);
        if (q6 == null || q6 == "") {
            return null
        }
        var i = null;
        var q4 = rj.shouldDisplayCurrencyIcon;
        if (q4) {}
        var q1 = rj.bitmapFontName;
        var q2 = rj.ttfFontName;
        var q9 = 0.1;
        var q8 = 1;
        var q5 = bA.asFloat(rj.minimumScale, q9);
        var rk = bA.asFloat(rj.maximumScale, q8);
        if (q5 <= 0) {
            q5 = q9
        } else {
            q5 = q5
        }
        if (rk <= 0) {
            rk = q8
        } else {
            rk = rk
        }
        if (q5 > rk) {
            q5 = rk
        }
        var q = rj.useBasePack;
        var ri = bA.scaleF(bA.asFloat(rj.maxWidth, null), q);
        var ra = bA.scaleF(bA.asFloat(rj.maxHeight, null), q);
        if (ri <= 0) {
            ri = -1
        }
        if (ra <= 0) {
            ra = -1
        }
        if (!(q1 == null || q1 == "")) {
            var q0 = q1;
            if (rg != null) {
                q0 = rg.getLocalizedResourceForResource(q1, qY)
            }
        } else {
            if (!(q2 == null || q2 == "")) {
                var js = Math.floor(bA.scaleDimension(rj.ttfFontSize, bA.getScaleRatio(null)));
                var rf = q2;
                if (rg != null) {
                    q2 = rg.getLocalizedResourceForResource(rf, qY)
                }
                var q7 = nJ.enumerateFonts();
                var rd = 16777215;
                if (rj.colorData != null) {
                    rd = rj.colorData.get_hex()
                }
                rb.initialize({
                    text: q6,
                    align: 0,
                    color: rd,
                    bold: true,
                    fontSize: js,
                    font: q2
                });
                rb.get_label().set_antiAliasType(1);
                rb.get_label().set_selectable(false);
                var re = 5;
                if (rb.get_label().get_width() + re > ri || rb.get_label().get_height() + re > ra) {
                    rb.set_scaleX(rb.set_scaleY(Math.min(ri / (rb.get_label().get_width() + re), ra / (rb.get_label().get_height() + re))))
                }
                rb.set_rotation(bA.asFloat(rj.rotation, 0));
                var i2 = bA.asFloat(rj.anchorX, 0.5);
                var i1 = bA.asFloat(rj.anchorY, 0.5);
                rb.setAnchorPoint(new pp(i2, i1));
                var rc = rj.ttfFontOutline;
                if (rc && rj.ttfFontOutlineColor != null) {
                    var rh = rj.ttfFontOutlineColor.r << 16 | rj.ttfFontOutlineColor.g << 8 | rj.ttfFontOutlineColor.b;
                    rb.setOutline(rh, rj.ttfFontOutlineSize)
                }
            }
        }
        if (rb == null) {
            return null
        }
        var q3 = rj.horizontalStrikethrough;
        var qZ = rj.diagonalStrikethrough;
        if (q3) {
            bA.addNodeStrikeThrough(rb, false, qY)
        } else {
            if (qZ) {
                bA.addNodeStrikeThrough(rb, true, qY)
            }
        }
        rb.setScale(l6.clamp(rb.content.get_scaleX(), q5, rk));
        return rb
    };
    bA.addNodeStrikeThrough = function(q, i2, i) {
        if (q == null || q.get_label() == null) {
            return
        }
        var js = new cY();
        js.get_graphics().lineStyle(Math.max(2, q.get_label().get_textHeight() * 0.1), 16711680, 1);
        js.get_graphics().moveTo(0, i2 ? q.get_label().get_textHeight() : 0);
        js.get_graphics().lineTo(q.get_label().get_textWidth() * 1.1, 0);
        q.addChild(js);
        var i1 = q.get_label().getCharBoundaries(0);
        js.set_x(q.get_label().get_x() + (q.get_label().get_width() - js.get_width()) * 0.5);
        js.set_y(q.get_label().get_y() + i1.y + (i1.height + js.get_height()) * 0.5)
    };
    bA.getTimerLabelFromConfig = function(q2, i2, qY, i) {
        if (q2 == null) {
            return null
        }
        var q0;
        var i1 = i.getRemainingBadgeTimeForOffer(i2);
        var q = bA.formatRemaningTime(i1, qY, i);
        q0 = bA.getTextNodeFromConfig(q2, qY, i);
        if (q0 != null) {
            var q3 = q2.tag;
            var q1 = "";
            if (q3 != null) {
                q1 = qY.getLocalizedTextForTag(q3, i)
            }
            var qZ = j5.withFormat(q1, [q]);
            q0.setText(qZ)
        } else {
            var js = q2.tag;
            q2.tag = q;
            q0 = bA.getTextNodeFromConfig(q2, qY, i);
            q2.tag = js
        }
        return q0
    };
    bA.getUpdatedTime = function(i, q, i2, qY) {
        var i1 = qY.getRemainingBadgeTimeForOffer(q);
        var js = bA.formatRemaningTime(i1, i2, qY);
        if (i != null) {
            js = j5.withFormat(i, [js])
        }
        return js
    };
    bA.updateTimerOnLabel = function(i2, q, i1, js, qY) {
        if (i2 == null) {
            return
        }
        if (i2.get_label().get_text() != q) {
            var i = i2.get_label().get_text();
            var qZ = bA.getUpdatedTime(q, i1, js, qY);
            i2.setText(qZ, i.length >= qZ.length)
        }
    };
    bA.formatRemaningTime = function(i1, i, q) {
        return i.getFormatedStringForTimeStamp(i1, q)
    };
    bA.getScaleRatio = function(i) {
        if (i == null) {
            return 0.732421875
        } else {
            return 1.6
        }
    };
    bA.scaleDimension = function(q, i) {
        if (i == null) {
            i = 0.732421875
        }
        return q * i
    };
    bA.scaleF = function(q, i) {
        return bA.scaleDimension(q, bA.getScaleRatio(i))
    };
    bA.scaleI = function(q, i) {
        return Math.floor(bA.scaleDimension(q, bA.getScaleRatio(i)))
    };
    bA.scaleFramedSpriteVO = function(i) {
        var q = i.clone();
        q.leftX = Math.floor(bA.scaleDimension(q.leftX, bA.getScaleRatio(null)));
        q.rightX = Math.floor(bA.scaleDimension(q.rightX, bA.getScaleRatio(null)));
        q.bottomY = Math.floor(bA.scaleDimension(q.bottomY, bA.getScaleRatio(null)));
        q.topY = Math.floor(bA.scaleDimension(q.topY, bA.getScaleRatio(null)));
        return q
    };
    bA.removeExtension = function(i) {
        var q = new gF("[.](png|jpg|gif|plist|xml)$", "g");
        return q.replace(i, "")
    };
    bA.asFloat = function(q, i) {
        if (i == null) {
            i = 0
        }
        if (isNaN(q)) {
            return i
        } else {
            return q
        }
    };
    bA.asString = function(q, i) {
        if (i == null) {
            i = ""
        }
        if (q == null) {
            return i
        } else {
            return q
        }
    };
    bA.loadResources = function(q0, js) {
        var i2 = [];
        q0.getResourceList(i2);
        var q = [];
        var qY = 0;
        while (qY < i2.length) {
            var i1 = i2[qY];
            ++qY;
            var i;
            if (!i1.isAtlas && i1.spriteName != null) {
                i = nK.get_assets().getAsset(i1.spriteName);
                q.push(i.load())
            }
            if (i1.atlasName != null) {
                i = nK.get_assets().getAsset(bA.removeExtension(i1.atlasName));
                q.push(i.load())
            }
        }
        var qZ = gR.whenAll(q);
        qZ.then(function(q1) {
            if (js != null) {
                js()
            }
        }).catchError(function(q1) {
            null
        })
    };
    bA.isStringEmpty = function(i) {
        return i == null || i == ""
    };
    bA.getFormattedAmountString = function(i) {
        return fH.formatNumber(i)
    };
    bA.stringWithFormat = function(q0, q) {
        var i2 = q0.split("%@");
        var qZ = new jT();
        var js = 0;
        var qY = i2.length;
        while (js < qY) {
            var i1 = js++;
            qZ.b += kr.string(i2[i1]);
            if (q[i1] != null) {
                qZ.add(q[i1])
            }
        }
        return qZ.b
    };
    bA.prototype = {
        __class__: bA
    };
    var e6 = function(i) {
        this.debugMode = false;
        ol.call(this, "promoDialog");
        this.animateOnClose = true;
        this.animateOnOpen = true;
        this.maxWidth = 596;
        this.maxHeight = 396;
        this.node = i;
        if (this.node != null) {
            this.node.onReady.connect(oT(this, this.handleNodeReady));
            this.node.onFail.connect(oT(this, this.handleNodeFail))
        }
        this._dismissEvent = this.node.offer.getPopupDismissedEvent();
        this._ps = l4.getService(fJ)
    };
    nt["agario.views.promoclient.PromotionDialog"] = e6;
    e6.__name__ = ["agario", "views", "promoclient", "PromotionDialog"];
    e6.__super__ = ol;
    e6.prototype = lP(ol.prototype, {
        debugMode: null,
        node: null,
        _ps: null,
        _dismissEvent: null,
        initialize: function() {
            var i = this;
            ol.prototype.initialize.call(this);
            this.addChild(this.node);
            this.node.set_alpha(0);
            nK.get_events().addEventListener("ShopEvent::ENABLE_SHOP", oT(this, this.enableDialog));
            nK.get_events().addEventListener("ShopEvent::DISABLE_SHOP", oT(this, this.disableDialog));
            nK.get_events().addEventListener("shop_event::allow_disable_close", oT(this, this.handleAllowDisableCloseEvent));
            this.addEventListener("close", function(q) {
                nK.get_events().dispatchEventWith("ShopEvent::SHOP_ENABLED");
                i.enable();
                i.closeButton.set_enabled(true)
            }, false, 0, true);
            this.showLoading()
        },
        postInit: function() {
            if (this.node.isReady) {
                this.handleNodeReady()
            }
        },
        closeWrapper: function(i) {
            if (!this.debugMode) {
                this.close()
            }
        },
        onShow: function() {
            ol.prototype.onShow.call(this);
            if (this.node != null && this.node.promosystem != null) {
                this.node.promosystem.registerForEvent(this._dismissEvent, this, oT(this, this.closeWrapper))
            }
        },
        onHide: function() {
            if (this.node != null) {
                this.node.promosystem.unregisterForEvent(this._dismissEvent, oT(this, this.closeWrapper));
                var i = this.node.offer.getPopupDismissedEvent();
                this.node.promosystem.postEvent(this._dismissEvent);
                this._ps.get_clientDelegate().promoCloseTriggeredForSystem(this.node.promosystem)
            }
            ol.prototype.onHide.call(this)
        },
        handleNodeReady: function() {
            if (!this._initialized) {
                return
            }
            this.resizeBackground(Math.round(this.node.wantedFrameSize.width), Math.round(this.node.wantedFrameSize.height));
            this.node.set_x(this.maxWidth / 2);
            this.node.set_y(this.maxHeight / 2);
            d3.tween(this.node, 0.5, {
                alpha: 1
            }, true);
            this.hideLoading()
        },
        handleNodeFail: function() {
            this.close()
        },
        enableDialog: function(i) {
            this.enable()
        },
        enable: function() {
            ol.prototype.enable.call(this);
            this.closeButton.set_enabled(true)
        },
        disableDialog: function(i) {
            this.closeButton.set_enabled(false);
            this.disable()
        },
        handleAllowDisableCloseEvent: function(q) {
            var i = q.data;
            this.allowDisableClose = i
        },
        dispose: function() {
            nK.get_events().removeEventListener("ShopEvent::ENABLE_SHOP", oT(this, this.enableDialog));
            nK.get_events().removeEventListener("ShopEvent::DISABLE_SHOP", oT(this, this.disableDialog));
            nK.get_events().removeEventListener("shop_event::allow_disable_close", oT(this, this.handleAllowDisableCloseEvent));
            ol.prototype.dispose.call(this)
        },
        __class__: e6
    });
    var m4 = function() {};
    nt["miniclip.promotionsystem.client.interfaces.IPromotionPopup"] = m4;
    m4.__name__ = ["miniclip", "promotionsystem", "client", "interfaces", "IPromotionPopup"];
    m4.prototype = {
        getOfferId: null,
        __class__: m4
    };
    var ke = function() {
        this.debugMode = false;
        this.isReady = false;
        dV.call(this);
        this.onReady = new o0();
        this.onFail = new o0();
        this.labelNodes = new oI();
        this.imageNodes = new oI();
        this.buttonNodes = new oI()
    };
    nt["agario.views.promoclient.PromotionNode"] = ke;
    ke.__name__ = ["agario", "views", "promoclient", "PromotionNode"];
    ke.__interfaces__ = [m4];
    ke.createPromoNode = function(i, q, i1, i2) {
        return new ke().initWithOffer(i, q, i1, i2)
    };
    ke.__super__ = dV;
    ke.prototype = lP(dV.prototype, {
        onReady: null,
        onFail: null,
        isReady: null,
        debugMode: null,
        offerId: null,
        offer: null,
        actionDelegate: null,
        gameDelegate: null,
        promosystem: null,
        wantedFrameSize: null,
        background: null,
        labelNodes: null,
        imageNodes: null,
        buttonNodes: null,
        _timerLabel: null,
        _timerText: null,
        initWithOffer: function(i, q, i2, js) {
            var i1 = true;
            if (i == null || i == "") {
                return null
            }
            this.offerId = i;
            this.offer = js.getOfferFromId(i);
            if (this.offer == null) {
                return null
            }
            if (i2 == null) {
                return null
            }
            if (this.offer.popUpCustomData == null) {
                return null
            }
            this.actionDelegate = q;
            this.gameDelegate = i2;
            this.promosystem = js;
            if (!this.createNode()) {
                return null
            }
            return this
        },
        getOfferId: function() {
            return this.offerId
        },
        createNode: function() {
            var qZ = this;
            var q = l4.getService(kd);
            var qY = [];
            this.offer.getResourceList(qY);
            var i1 = [];
            var js = 0;
            while (js < qY.length) {
                var i2 = qY[js];
                ++js;
                var i;
                if (!i2.isAtlas && i2.spriteName != null) {
                    i = nK.get_assets().getAsset(i2.spriteName);
                    i1.push(i.load())
                }
                if (i2.atlasName != null) {
                    i = nK.get_assets().getAsset(bA.removeExtension(i2.atlasName));
                    i1.push(i.load())
                }
            }
            var q0 = gR.whenAll(i1);
            ((function(q3) {
                var q1;
                var q2 = function(q6) {
                    var q5 = new gR();
                    var q4 = [q0];
                    var q7 = gR.whenAll(q4);
                    q7._update.push({
                        async: q5,
                        linkf: function(q8) {
                            q5.handleResolve(q6(q4[0]._val))
                        }
                    });
                    return q5
                };
                q1 = {
                    then: q2
                };
                return q1
            }(this))).then(oT(this, this.checkAssets)).then(oT(this, this.buildUI)).catchError(function(q1) {
                eM.trace(" / promotionnode / " + ("Failed to get promo dialog assets: " + qZ.offerId), {
                    fileName: "PromotionNode.hx",
                    lineNumber: 129,
                    className: "agario.views.promoclient.PromotionNode",
                    methodName: "createNode"
                });
                qZ.onFail.emit()
            });
            return true
        },
        checkAssets: function(q) {
            var i1 = 0;
            while (i1 < q.length) {
                var i = q[i1];
                ++i1;
                if (n0.__instanceof(i, gV)) {
                    throw new nM("Promo asset " + i.id + " failed to download")
                }
            }
            return q
        },
        buildUI: function(i2) {
            var qY = this.offer.popUpCustomData;
            this.wantedFrameSize = new gn(0, 0, 200, 120);
            var i = this.wantedFrameSize;
            if (qY == null) {
                return
            }
            var js;
            this.background = null;
            if (qY.popUpImage != null) {
                var i1 = nK.get_assets().getAsset(qY.popUpImage);
                if (i1.loaded) {
                    this.background = new jS(new el(i1.getData()));
                    this.addNode(this.background);
                    this.background.mouseEnabled = false;
                    this.background.mouseChildren = false
                }
            }
            var q = 10;
            if (this.background != null) {
                this.wantedFrameSize = new gn(0, 0, this.background.get_width() + q, this.background.get_height() + q)
            }
            if (!this.renderButtons()) {
                return null
            }
            if (!this.renderLabels()) {
                return null
            }
            if (!this.renderImages()) {
                return null
            }
            if (!this.renderTimer()) {
                return null
            }
            this.isReady = true;
            if (this.onReady != null) {
                this.onReady.emit()
            }
        },
        renderButtons: function() {
            var i1 = this.offer.popUpCustomData.buttonsConfiguration;
            if (i1 == null) {
                return true
            }
            var i2 = 0;
            while (i2 < i1.length) {
                var i = i1[i2];
                ++i2;
                var q = cw.getButtonForOffer(this.offerId, i, oT(this, this.handleButtonClick), this.gameDelegate, this.promosystem);
                if (i.darkenOnPress) {
                    null
                }
                if (q != null) {
                    q.setPosition(new pp(q.offsetX, -q.offsetY));
                    this.addNode(q);
                    this.buttonNodes.add(q)
                }
            }
            return true
        },
        handleButtonClick: function(i1, q) {
            var i = q;
            if (i == null) {
                i = ""
            }
            this.actionButtonCallback(i)
        },
        renderLabels: function() {
            var js = this.offer.popUpCustomData.textEntries;
            if (js == null) {
                return true
            }
            var i2 = 0;
            while (i2 < js.length) {
                var i = js[i2];
                ++i2;
                var i1 = bA.getTextNodeFromConfig(i, this.gameDelegate, this.promosystem);
                if (i1 != null) {
                    var qY = bA.scaleF(bA.asFloat(i.offsetX, 0), i.useBasePack);
                    var q = -bA.scaleF(bA.asFloat(i.offsetY, 0), i.useBasePack);
                    i1.setPosition(new pp(qY, q));
                    if (i.zOrder > -1) {
                        this.addNodeAt(i1, i.zOrder)
                    } else {
                        this.addNode(i1)
                    }
                    this.labelNodes.add(i1);
                    i1.buttonMode = false;
                    i1.get_label().set_selectable(false);
                    i1.get_label().mouseEnabled = false;
                    i1.mouseEnabled = false;
                    i1.mouseChildren = false
                }
            }
            return true
        },
        renderImages: function() {
            var q = this.offer.popUpCustomData.imageEntries;
            if (q == null) {
                return true
            }
            var i2;
            var i1;
            var qY = 0;
            while (qY < q.length) {
                var i = q[qY];
                ++qY;
                var js = bA.getImageNodeFromConfig(i);
                if (js != null) {
                    i2 = bA.scaleF(bA.asFloat(i.offsetX, 0), i.useBasePack);
                    i1 = -bA.scaleF(bA.asFloat(i.offsetY, 0), i.useBasePack);
                    js.setPosition(new pp(i2, i1));
                    if (i.zOrder > -1) {
                        this.addNodeAt(js, i.zOrder)
                    } else {
                        this.addNode(js)
                    }
                    this.imageNodes.add(js);
                    js.mouseChildren = false;
                    js.mouseEnabled = false
                }
            }
            return true
        },
        renderTimer: function() {
            var q = this.offer.popUpCustomData.timerConfiguration;
            if (q != null) {
                var i = q.tag;
                this._timerText = null;
                if (i != null) {
                    this._timerText = this.gameDelegate.getLocalizedTextForTag(i, this.promosystem)
                }
                this._timerLabel = bA.getTimerLabelFromConfig(q, this.offerId, this.gameDelegate, this.promosystem);
                if (this._timerLabel != null) {
                    var i2 = bA.scaleF(bA.asFloat(q.offsetX, 0), q.useBasePack);
                    var i1 = -bA.scaleF(bA.asFloat(q.offsetY, 0), q.useBasePack);
                    this._timerLabel.setPosition(new pp(i2, i1));
                    if (q.zOrder > -1) {
                        this.addNodeAt(this._timerLabel, q.zOrder)
                    } else {
                        this.addNode(this._timerLabel)
                    }
                }
            }
            return true
        },
        update: function(i) {
            dV.prototype.update.call(this, i);
            if (this._timerLabel != null) {
                bA.updateTimerOnLabel(this._timerLabel, this._timerText, this.offerId, this.gameDelegate, this.promosystem)
            }
        },
        dispose: function() {
            this.background.dispose();
            var js = this.buttonNodes.h;
            var q0 = null;
            while (js != null) {
                var i2;
                i2 = (function(q3) {
                    var q2;
                    q0 = js[0];
                    js = js[1];
                    q2 = q0;
                    return q2
                }(this));
                i2.dispose()
            }
            var qZ = this.imageNodes.h;
            var i1 = null;
            while (qZ != null) {
                var i;
                i = (function(q3) {
                    var q2;
                    i1 = qZ[0];
                    qZ = qZ[1];
                    q2 = i1;
                    return q2
                }(this));
                i.dispose()
            }
            var qY = this.labelNodes.h;
            var q = null;
            while (qY != null) {
                var q1;
                q1 = (function(q3) {
                    var q2;
                    q = qY[0];
                    qY = qY[1];
                    q2 = q;
                    return q2
                }(this));
                q1.dispose()
            }
            if (this._timerLabel != null) {
                this._timerLabel.dispose()
            }
            if (this.onReady != null) {
                this.onReady.disconnectAll()
            }
            if (this.onFail != null) {
                this.onFail.disconnectAll()
            }
            dV.prototype.dispose.call(this)
        },
        actionButtonCallback: function(i) {
            this.gameDelegate.promoActionTriggered(i, this.offerId, this.promosystem);
            this.promosystem.runPopUpAction(i, this.offerId, this.actionDelegate)
        },
        __class__: ke
    });
    var bl = function(i) {
        if (i == null) {
            i = 3
        }
        this.onFilesLoaded = new qt();
        this.onFileLoaded = new qt();
        this.uniqueCallbacks = new io();
        this.queuedFiles = [];
        this.manager = new ib(i);
        this.manager.addEventListener("complete", oT(this, this.onManagerComplete));
        this.manager.addEventListener("evtFileLoadComplete", oT(this, this.onManagerFileComplete))
    };
    nt["assets.manager.FileLoader"] = bl;
    bl.__name__ = ["assets", "manager", "FileLoader"];
    bl.prototype = {
        manager: null,
        onFilesLoaded: null,
        onFileLoaded: null,
        queuedFiles: null,
        uniqueCallbacks: null,
        loadText: function(q, i) {
            this.loadFile(q, kF.TEXT, i)
        },
        loadImage: function(q, i) {
            this.loadFile(q, kF.IMAGE, i)
        },
        loadBinary: function(q, i) {
            this.loadFile(q, kF.BINARY, i)
        },
        loadSound: function(q, i) {
            this.loadFile(q, kF.SOUND, i)
        },
        loadFile: function(i1, i, q) {
            if (q != null) {
                this.storeCallback(i1, q)
            }
            if (!this.exists(i1)) {
                this.addLoader(i1, i)
            }
            this.manager.loadList([i1])
        },
        queueText: function(q, i) {
            this.queueFile(q, kF.TEXT, i)
        },
        queueImage: function(q, i) {
            this.queueFile(q, kF.IMAGE, i)
        },
        queueBinary: function(q, i) {
            this.queueFile(q, kF.BINARY, i)
        },
        queueSound: function(q, i) {
            this.queueFile(q, kF.SOUND, i)
        },
        queueFile: function(i1, i, q) {
            if (q != null) {
                this.storeCallback(i1, q)
            }
            if (!this.exists(i1)) {
                this.addLoader(i1, i)
            }
            if (cj.indexOf(this.queuedFiles, i1, 0) == -1) {
                this.queuedFiles.push(i1)
            }
        },
        loadQueuedFiles: function() {
            if (this.queuedFiles.length == 0) {
                return
            }
            var i = this.queuedFiles.slice();
            this.queuedFiles = [];
            this.manager.loadList(i)
        },
        getLoadedImage: function(q) {
            var i = this.getLoadedFile(q);
            if (i != null && i.type == kF.IMAGE) {
                return i.data
            }
            return null
        },
        getLoadedText: function(q) {
            var i = this.getLoadedFile(q);
            if (i != null && i.type == kF.TEXT) {
                return i.data
            }
            return null
        },
        getLoadedBytes: function(q) {
            var i = this.getLoadedFile(q);
            if (i != null && i.type == kF.BINARY) {
                return i.data
            }
            return null
        },
        getLoadedSound: function(q) {
            var i = this.getLoadedFile(q);
            if (i != null && i.type == kF.SOUND) {
                return i.data
            }
            return null
        },
        getLoadedFile: function(i1) {
            var i = this.manager.findLoader(i1);
            if (i == null) {
                return null
            }
            var q = {
                id: i1,
                type: i.type,
                status: i.status,
                data: i.data
            };
            return q
        },
        exists: function(i) {
            return this.manager.findLoader(i) != null
        },
        listFiles: function(i1) {
            var q = [];
            var i2 = this.manager.loaders.iterator();
            while (i2.hasNext()) {
                var i = i2.next();
                if (i.type == i1 || i1 == null) {
                    q.push(i.id)
                }
            }
            return q
        },
        removeFile: function(q, i) {
            if (i == null) {
                i = false
            }
            if (this.manager.remove(q, i)) {
                if (cj.indexOf(this.queuedFiles, q, 0) != -1) {
                    cj.remove(this.queuedFiles, q)
                }
                if (this.uniqueCallbacks.exists(q)) {
                    this.uniqueCallbacks.remove(q)
                }
                return true
            }
            return false
        },
        destroy: function(i1) {
            if (i1 == null) {
                i1 = false
            }
            this.onFileLoaded.removeAll();
            this.onFileLoaded = null;
            this.onFilesLoaded.removeAll();
            this.onFilesLoaded = null;
            this.manager.removeEventListener("complete", oT(this, this.onManagerComplete));
            this.manager.removeEventListener("evtFileLoadComplete", oT(this, this.onManagerFileComplete));
            var q = this.listFiles();
            var i2 = 0;
            while (i2 < q.length) {
                var i = q[i2];
                ++i2;
                this.removeFile(i, i1)
            }
            this.queuedFiles = null;
            this.uniqueCallbacks = null
        },
        addLoader: function(q, i) {
            switch (i[1]) {
                case 0:
                    this.manager.addLoader(new dR(q));
                    break;
                case 1:
                    this.manager.addLoader(new o9(q));
                    break;
                case 2:
                    this.manager.addLoader(new ph(q));
                    break;
                case 3:
                    this.manager.addLoader(new mm(q));
                    break
            }
        },
        createInfoList: function(q) {
            var i1 = [];
            var i2 = 0;
            while (i2 < q.length) {
                var i = q[i2];
                ++i2;
                i1.push(this.getLoadedFile(i))
            }
            return i1
        },
        storeCallback: function(i1, i) {
            if (!ar.isFunction(i)) {
                eM.trace("Assets loader error: callback provided is not a function", {
                    fileName: "FileLoader.hx",
                    lineNumber: 352,
                    className: "assets.manager.FileLoader",
                    methodName: "storeCallback"
                });
                return
            }
            var q;
            if (!this.uniqueCallbacks.exists(i1)) {
                q = [];
                this.uniqueCallbacks.set(i1, q);
                q
            } else {
                q = this.uniqueCallbacks.get(i1)
            }
            if (!jN.has(q, i)) {
                q.push(i)
            }
        },
        onManagerComplete: function(q) {
            var i = this.createInfoList(this.manager.loadedFiles);
            this.onFilesLoaded.dispatch(i)
        },
        onManagerFileComplete: function(js) {
            var q = this.manager.loadedFiles[this.manager.loadedFiles.length - 1];
            var i1 = this.getLoadedFile(q);
            this.onFileLoaded.dispatch(i1);
            if (this.uniqueCallbacks.exists(q)) {
                var i2 = this.uniqueCallbacks.get(q);
                this.uniqueCallbacks.remove(q);
                var qY = 0;
                while (qY < i2.length) {
                    var i = i2[qY];
                    ++qY;
                    i(i1)
                }
            }
        },
        __class__: bl
    };
    var dz = function(q, i) {
        lR.call(this);
        this.id = q;
        this.data = null;
        this.type = i;
        this.status = qs.IDLE;
        this.loader = new ie();
        this.loader.addEventListener("complete", oT(this, this.handleComplete));
        this.loader.addEventListener("ioError", oT(this, this.onLoadFail));
        this.loader.addEventListener("securityError", oT(this, this.onLoadFail))
    };
    nt["assets.manager.loaders.BaseLoader"] = dz;
    dz.__name__ = ["assets", "manager", "loaders", "BaseLoader"];
    dz.__super__ = lR;
    dz.prototype = lP(lR.prototype, {
        loader: null,
        type: null,
        id: null,
        data: null,
        status: null,
        error: null,
        handleComplete: function(i) {
            this.processData();
            this.status = qs.LOADED;
            this.dispatchEvent(new hM("complete"))
        },
        onLoadFail: function(i) {
            this.data = null;
            this.error = i.toString();
            this.status = qs.ERROR;
            this.dispatchEvent(new hM("complete"))
        },
        processData: function() {
            this.data = this.loader.data
        },
        prepare: function() {
            this.status = qs.READY
        },
        reset: function(i) {
            this.status = qs.IDLE;
            this.data = null;
            this.loader.data = null
        },
        start: function() {
            this.status = qs.LOADING;
            this.loader.load(new nT(this.id))
        },
        __class__: dz
    });
    var ph = function(i) {
        dz.call(this, i, kF.BINARY);
        this.loader.set_dataFormat(0)
    };
    nt["assets.manager.loaders.BinaryLoader"] = ph;
    ph.__name__ = ["assets", "manager", "loaders", "BinaryLoader"];
    ph.__super__ = dz;
    ph.prototype = lP(dz.prototype, {
        __class__: ph
    });
    var dR = function(i) {
        dz.call(this, i, kF.IMAGE);
        this.flashLoader = new jY();
        this.flashLoader.contentLoaderInfo.addEventListener("complete", oT(this, this.handleComplete));
        this.flashLoader.contentLoaderInfo.addEventListener("ioError", oT(this, this.onLoadFail));
        this.flashLoader.contentLoaderInfo.addEventListener("securityError", oT(this, this.onLoadFail))
    };
    nt["assets.manager.loaders.ImageLoader"] = dR;
    dR.__name__ = ["assets", "manager", "loaders", "ImageLoader"];
    dR.__super__ = dz;
    dR.prototype = lP(dz.prototype, {
        flashLoader: null,
        processData: function() {
            this.data = (n0.__cast(this.flashLoader.content, el)).bitmapData
        },
        start: function() {
            this.status = qs.LOADING;
            this.flashLoader.load(new nT(this.id))
        },
        reset: function(i) {
            this.status = qs.IDLE;
            if (this.data != null && i) {
                (n0.__cast(this.data, f0)).dispose()
            }
            this.data = null
        },
        __class__: dR
    });
    var ib = function(i) {
        if (i == null) {
            i = 1
        }
        lR.call(this);
        this.maxConnectionLimit = i;
        this.activeLoads = 0;
        this.loadedFiles = [];
        this.loaders = new io();
        this.loadQueue = []
    };
    nt["assets.manager.loaders.LoaderManager"] = ib;
    ib.__name__ = ["assets", "manager", "loaders", "LoaderManager"];
    ib.__super__ = lR;
    ib.prototype = lP(lR.prototype, {
        loadQueue: null,
        activeLoads: null,
        loaders: null,
        maxConnectionLimit: null,
        loadedFiles: null,
        addLoader: function(i) {
            var q = i.id;
            if (this.loaders.get(q) != null) {
                return
            }
            this.loaders.set(q, i);
            i
        },
        loadList: function(q) {
            this.loadedFiles = [];
            var i1 = 0;
            while (i1 < q.length) {
                var i2 = q[i1];
                ++i1;
                var i = this.findLoader(i2);
                if (i != null && i.status != qs.LOADING && i.status != qs.READY) {
                    this.loadQueue.push(i);
                    i.addEventListener("complete", oT(this, this.onFileLoaded));
                    i.prepare()
                }
            }
            this.checkLoadSequence()
        },
        unloadList: function(i1, i2) {
            var q = this.loaders.iterator();
            while (q.hasNext()) {
                var i = q.next();
                var js = 0;
                while (js < i1.length) {
                    var qY = i1[js];
                    ++js;
                    if (i.id == qY) {
                        i.reset(i2)
                    }
                }
            }
        },
        remove: function(i1, q) {
            var i = this.findLoader(i1);
            if (i != null && i.status != qs.LOADING && i.status != qs.READY) {
                i.reset(q);
                this.loaders.remove(i1);
                if (cj.indexOf(this.loadedFiles, i1, 0) != -1) {
                    cj.remove(this.loadedFiles, i1)
                }
                return true
            }
            return false
        },
        findLoader: function(i1) {
            var q = this.loaders.iterator();
            while (q.hasNext()) {
                var i = q.next();
                if (i.id == i1) {
                    return i
                }
            }
            return null
        },
        checkLoadSequence: function() {
            var q = true;
            var i2 = 0;
            var i1 = this.loadQueue;
            while (i2 < i1.length) {
                var i = i1[i2];
                ++i2;
                if (i.status == qs.LOADING || i.status == qs.READY) {
                    q = false
                }
                if (i.status == qs.READY && this.activeLoads < this.maxConnectionLimit) {
                    this.activeLoads++;
                    i.start()
                }
            }
            if (q) {
                this.onLoadListComplete()
            }
        },
        onFileLoaded: function(q) {
            var i = q.currentTarget;
            i.removeEventListener("complete", oT(this, this.onFileLoaded));
            this.activeLoads--;
            cj.remove(this.loadQueue, i);
            if (cj.indexOf(this.loadedFiles, i.id, 0) != -1) {
                cj.remove(this.loadedFiles, i.id)
            }
            this.loadedFiles.push(i.id);
            this.dispatchEvent(new hM("evtFileLoadComplete"));
            this.checkLoadSequence()
        },
        onLoadListComplete: function() {
            this.dispatchEvent(new hM("complete"))
        },
        __class__: ib
    });
    var mm = function(i) {
        dz.call(this, i, kF.SOUND);
        this.loader.set_dataFormat(0)
    };
    nt["assets.manager.loaders.SoundLoader"] = mm;
    mm.__name__ = ["assets", "manager", "loaders", "SoundLoader"];
    mm.__super__ = dz;
    mm.prototype = lP(dz.prototype, {
        processData: function() {
            var i = new eR();
            i.loadCompressedDataFromByteArray(this.loader.data, this.loader.data.length);
            this.data = i
        },
        __class__: mm
    });
    var o9 = function(i) {
        dz.call(this, i, kF.TEXT)
    };
    nt["assets.manager.loaders.TextLoader"] = o9;
    o9.__name__ = ["assets", "manager", "loaders", "TextLoader"];
    o9.__super__ = dz;
    o9.prototype = lP(dz.prototype, {
        processData: function() {
            this.data = kr.string(this.loader.data)
        },
        __class__: o9
    });
    var kF = nt["assets.manager.misc.FileType"] = {
        __ename__: ["assets", "manager", "misc", "FileType"],
        __constructs__: ["IMAGE", "TEXT", "BINARY", "SOUND"]
    };
    kF.IMAGE = ["IMAGE", 0];
    kF.IMAGE.toString = ea;
    kF.IMAGE.__enum__ = kF;
    kF.TEXT = ["TEXT", 1];
    kF.TEXT.toString = ea;
    kF.TEXT.__enum__ = kF;
    kF.BINARY = ["BINARY", 2];
    kF.BINARY.toString = ea;
    kF.BINARY.__enum__ = kF;
    kF.SOUND = ["SOUND", 3];
    kF.SOUND.toString = ea;
    kF.SOUND.__enum__ = kF;
    var qs = nt["assets.manager.misc.LoaderStatus"] = {
        __ename__: ["assets", "manager", "misc", "LoaderStatus"],
        __constructs__: ["IDLE", "READY", "LOADING", "LOADED", "ERROR"]
    };
    qs.IDLE = ["IDLE", 0];
    qs.IDLE.toString = ea;
    qs.IDLE.__enum__ = qs;
    qs.READY = ["READY", 1];
    qs.READY.toString = ea;
    qs.READY.__enum__ = qs;
    qs.LOADING = ["LOADING", 2];
    qs.LOADING.toString = ea;
    qs.LOADING.__enum__ = qs;
    qs.LOADED = ["LOADED", 3];
    qs.LOADED.toString = ea;
    qs.LOADED.__enum__ = qs;
    qs.ERROR = ["ERROR", 4];
    qs.ERROR.toString = ea;
    qs.ERROR.__enum__ = qs;
    var h8 = function() {};
    nt["com.plist.Reader"] = h8;
    h8.__name__ = ["com", "plist", "Reader"];
    h8.read = function(i) {
        return h8.parseNode(ky.parse(i).firstElement())
    };
    h8.val = function(i) {
        return ((function(i1) {
            var q;
            if (i.nodeType != ky.Document && i.nodeType != ky.Element) {
                throw new nM("Bad node type, expected Element or Document but found " + i.nodeType)
            }
            q = i.children[0];
            return q
        }(this))).get_nodeValue()
    };
    h8.parseNode = function(i) {
        var qZ;
        if (i.nodeType != ky.Element) {
            throw new nM("Bad node type, expected Element but found " + i.nodeType)
        }
        qZ = i.nodeName;
        var q = qZ;
        switch (qZ) {
            case "plist":
                return h8.parseNode(i.firstElement());
            case "date":
                return h8.handleDate(h8.val(i));
            case "dict":
                var qY = i.elements();
                var i1 = {};
                while (qY.hasNext()) {
                    ar.setField(i1, h8.val(qY.next()), h8.parseNode(qY.next()))
                }
                return i1;
            case "true":
                return true;
            case "false":
                return false;
            case "array":
                var js = [];
                var i2 = i.elements();
                while (i2.hasNext()) {
                    var q0 = i2.next();
                    js.push(h8.parseNode(q0))
                }
                return js;
            case "string":
                return h8.val(i);
            case "integer":
                return kr.parseInt(h8.val(i));
            case "real":
                return kr.parseFloat(h8.val(i));
            default:
                return null
        }
    };
    h8.handleDate = function(i1) {
        if (i1.length == 20) {
            var i = i1.split("T");
            var qZ = i[0].split("-");
            var q = i[1].split(":");
            return new Date(kr.parseInt(qZ[0]), kr.parseInt(qZ[1]) - 1, kr.parseInt(qZ[2]), kr.parseInt(q[0]), kr.parseInt(q[1]), kr.parseInt(q[2]))
        } else {
            if (i1.length == 10) {
                var qY = i1.split("-");
                return new Date(kr.parseInt(qY[0]), kr.parseInt(qY[1]) - 1, kr.parseInt(qY[2]), 0, 0, 0)
            } else {
                var js = i1.split(":");
                var i2 = new Date(0, 0, 0, kr.parseInt(js[0]), kr.parseInt(js[1]), kr.parseInt(js[2]));
                return i2
            }
        }
    };
    var ps = function(q) {
        this.i = q
    };
    nt["format.gz.Reader"] = ps;
    ps.__name__ = ["format", "gz", "Reader"];
    ps.prototype = {
        i: null,
        read: function() {
            var i = this.readHeader();
            var q = new eu();
            this.readData(q);
            return {
                file: i.fileName,
                data: q.getBytes()
            }
        },
        readHeader: function() {
            if (this.i.readByte() != 31 || this.i.readByte() != 139) {
                throw new nM("Invalid GZ header")
            }
            if (this.i.readByte() != 8) {
                throw new nM("Invalid compression method")
            }
            var q = this.i.readByte();
            var qZ = this.i.read(4);
            var q0 = this.i.readByte();
            var i2 = this.i.readByte();
            var i = null;
            var qY = null;
            var q1 = null;
            if ((q & 4) != 0) {
                var i1 = this.i.readUInt16();
                q1 = this.i.read(i1)
            }
            if ((q & 8) != 0) {
                i = this.i.readUntil(0)
            }
            if ((q & 16) != 0) {
                qY = this.i.readUntil(0)
            }
            if ((q & 2) != 0) {
                var js = this.i.readUInt16()
            }
            return {
                fileName: i,
                comments: qY,
                extraData: q1
            }
        },
        readData: function(qY, js) {
            if (js == null) {
                js = 65536
            }
            var q = eg.alloc(js);
            var i1 = 0;
            var i2 = new iq(this.i, false, false);
            while (true) {
                var i = i2.readBytes(q, 0, js);
                qY.writeFullBytes(q, 0, i);
                if (i < js) {
                    break
                }
                i1 += i
            }
            return i1
        },
        refill: function(q, i2) {
            try {
                while (i2 != q.length) {
                    var i = this.i.readBytes(q, i2, q.length - i2);
                    i2 += i
                }
            } catch (i1) {
                lF.lastException = i1;
                if (i1 instanceof nM) {
                    i1 = i1.val
                }
                if (n0.__instanceof(i1, b1)) {} else {
                    throw (i1)
                }
            }
            if (i2 == 0) {
                throw new nM(new b1())
            }
            if (i2 != q.length) {
                q = q.sub(0, i2)
            }
            return q
        },
        __class__: ps
    };
    var e5 = nt["format.png.Color"] = {
        __ename__: ["format", "png", "Color"],
        __constructs__: ["ColGrey", "ColTrue", "ColIndexed"]
    };
    e5.ColGrey = function(q) {
        var i = ["ColGrey", 0, q];
        i.__enum__ = e5;
        i.toString = ea;
        return i
    };
    e5.ColTrue = function(q) {
        var i = ["ColTrue", 1, q];
        i.__enum__ = e5;
        i.toString = ea;
        return i
    };
    e5.ColIndexed = ["ColIndexed", 2];
    e5.ColIndexed.toString = ea;
    e5.ColIndexed.__enum__ = e5;
    var jw = nt["format.png.Chunk"] = {
        __ename__: ["format", "png", "Chunk"],
        __constructs__: ["CEnd", "CHeader", "CData", "CPalette", "CUnknown"]
    };
    jw.CEnd = ["CEnd", 0];
    jw.CEnd.toString = ea;
    jw.CEnd.__enum__ = jw;
    jw.CHeader = function(i) {
        var q = ["CHeader", 1, i];
        q.__enum__ = jw;
        q.toString = ea;
        return q
    };
    jw.CData = function(i) {
        var q = ["CData", 2, i];
        q.__enum__ = jw;
        q.toString = ea;
        return q
    };
    jw.CPalette = function(i) {
        var q = ["CPalette", 3, i];
        q.__enum__ = jw;
        q.toString = ea;
        return q
    };
    jw.CUnknown = function(i1, q) {
        var i = ["CUnknown", 4, i1, q];
        i.__enum__ = jw;
        i.toString = ea;
        return i
    };
    var gI = function(q) {
        this.i = q;
        q.set_bigEndian(true);
        this.checkCRC = true
    };
    nt["format.png.Reader"] = gI;
    gI.__name__ = ["format", "png", "Reader"];
    gI.prototype = {
        i: null,
        checkCRC: null,
        read: function() {
            var i2 = 0;
            var i1 = [137, 80, 78, 71, 13, 10, 26, 10];
            while (i2 < i1.length) {
                var i = i1[i2];
                ++i2;
                if (this.i.readByte() != i) {
                    throw new nM("Invalid header")
                }
            }
            var q = new oI();
            while (true) {
                var js = this.readChunk();
                q.add(js);
                if (js == jw.CEnd) {
                    break
                }
            }
            return q
        },
        readHeader: function(qZ) {
            qZ.set_bigEndian(true);
            var q = qZ.readInt32();
            var q2 = qZ.readInt32();
            var i2 = qZ.readByte();
            var qY = qZ.readByte();
            var q1;
            switch (qY) {
                case 0:
                    q1 = e5.ColGrey(false);
                    break;
                case 2:
                    q1 = e5.ColTrue(false);
                    break;
                case 3:
                    q1 = e5.ColIndexed;
                    break;
                case 4:
                    q1 = e5.ColGrey(true);
                    break;
                case 6:
                    q1 = e5.ColTrue(true);
                    break;
                default:
                    throw new nM("Unknown color model " + qY + ":" + i2)
            }
            var js = qZ.readByte();
            var i1 = qZ.readByte();
            if (js != 0 || i1 != 0) {
                throw new nM("Invalid header")
            }
            var q0 = qZ.readByte();
            if (q0 != 0 && q0 != 1) {
                throw new nM("Invalid header")
            }
            return {
                width: q,
                height: q2,
                colbits: i2,
                color: q1,
                interlaced: q0 == 1
            }
        },
        readChunk: function() {
            var i1 = this.i.readInt32();
            var q0 = this.i.readString(4);
            var js = this.i.read(i1);
            var i2 = this.i.readInt32();
            if (this.checkCRC) {
                var qZ = new bJ();
                var qY = 0;
                while (qY < 4) {
                    var q = qY++;
                    qZ["byte"](cj.cca(q0, q))
                }
                qZ.update(js, 0, js.length);
                if (qZ.get() != i2) {
                    throw new nM("CRC check failure")
                }
            }
            switch (q0) {
                case "IEND":
                    return jw.CEnd;
                case "IHDR":
                    return jw.CHeader(this.readHeader(new bB(js)));
                case "IDAT":
                    return jw.CData(js);
                case "PLTE":
                    return jw.CPalette(js);
                default:
                    return jw.CUnknown(q0, js)
            }
        },
        __class__: gI
    };
    var jO = function() {};
    nt["format.png.Tools"] = jO;
    jO.__name__ = ["format", "png", "Tools"];
    jO.getHeader = function(i2) {
        var i = i2.h;
        var i1 = null;
        while (i != null) {
            var js;
            js = (function(qZ) {
                var qY;
                i1 = i[0];
                i = i[1];
                qY = i1;
                return qY
            }(this));
            switch (js[1]) {
                case 1:
                    var q = js[2];
                    return q;
                default:
            }
        }
        throw new nM("Header not found")
    };
    jO.getPalette = function(i2) {
        var q = i2.h;
        var i1 = null;
        while (q != null) {
            var js;
            js = (function(qZ) {
                var qY;
                i1 = q[0];
                q = q[1];
                qY = i1;
                return qY
            }(this));
            switch (js[1]) {
                case 3:
                    var i = js[2];
                    return i;
                default:
            }
        }
        return null
    };
    jO.filter = function(js, q4, q0, i, i1, q, q3) {
        if (q3 == null) {
            q3 = 4
        }
        var q1;
        if (q0 == 0) {
            q1 = 0
        } else {
            q1 = js.b[q - i]
        }
        var qY;
        if (q4 == 0 || q0 == 0) {
            qY = 0
        } else {
            qY = js.b[q - i - q3]
        }
        var i2 = i1 + q1 - qY;
        var q5 = i2 - i1;
        if (q5 < 0) {
            q5 = -q5
        }
        var q2 = i2 - q1;
        if (q2 < 0) {
            q2 = -q2
        }
        var qZ = i2 - qY;
        if (qZ < 0) {
            qZ = -qZ
        }
        if (q5 <= q2 && q5 <= qZ) {
            return i1
        } else {
            if (q2 <= qZ) {
                return q1
            } else {
                return qY
            }
        }
    };
    jO.reverseBytes = function(q0) {
        var i1 = 0;
        var qZ = 0;
        var js = q0.length >> 2;
        while (qZ < js) {
            var i2 = qZ++;
            var q3 = q0.b[i1];
            var qY = q0.b[i1 + 1];
            var q = q0.b[i1 + 2];
            var q2 = q0.b[i1 + 3];
            var q6 = i1++;
            q0.b[q6] = q2 & 255;
            var q5 = i1++;
            q0.b[q5] = q & 255;
            var q4 = i1++;
            q0.b[q4] = qY & 255;
            var q1 = i1++;
            q0.b[q1] = q3 & 255
        }
    };
    jO.extractGrey = function(rq) {
        var rk = jO.getHeader(rq);
        var re = eg.alloc(rk.width * rk.height);
        var rp = null;
        var i2 = null;
        var q6 = rq.h;
        var q1 = null;
        while (q6 != null) {
            var rr;
            rr = (function(rw) {
                var rv;
                q1 = q6[0];
                q6 = q6[1];
                rv = q1;
                return rv
            }(this));
            switch (rr[1]) {
                case 2:
                    var rs = rr[2];
                    if (i2 != null) {
                        i2.add(rs)
                    } else {
                        if (rp == null) {
                            rp = rs
                        } else {
                            i2 = new g9();
                            i2.add(rp);
                            i2.add(rs);
                            rp = null
                        }
                    }
                    break;
                default:
            }
        }
        if (i2 != null) {
            rp = i2.getBytes()
        }
        if (rp == null) {
            throw new nM("Data not found")
        }
        rp = mv.run(rp);
        var rc = 0;
        var ra = 0;
        var rn = rk.color;
        switch (rn[1]) {
            case 0:
                var rg = rn[2];
                if (rk.colbits != 8) {
                    throw new nM("Unsupported color mode")
                }
                var i = rk.width;
                var q5;
                q5 = (rg ? 2 : 1) * i + 1;
                if (rp.length < rk.height * q5) {
                    throw new nM("Not enough data")
                }
                var q7;
                if (rg) {
                    q7 = 2
                } else {
                    q7 = 1
                }
                var rf = 0;
                var rh = rk.height;
                while (rf < rh) {
                    var q8 = rf++;
                    var ro = rp.get(rc++);
                    switch (ro) {
                        case 0:
                            var rd = 0;
                            while (rd < i) {
                                var q9 = rd++;
                                var rb = rp.b[rc];
                                rc += q7;
                                re.set(ra++, rb)
                            }
                            break;
                        case 1:
                            var q2 = 0;
                            var rm = 0;
                            while (rm < i) {
                                var q0 = rm++;
                                q2 += rp.b[rc];
                                rc += q7;
                                re.set(ra++, q2)
                            }
                            break;
                        case 2:
                            var i1;
                            if (q8 == 0) {
                                i1 = 0
                            } else {
                                i1 = i
                            }
                            var rl = 0;
                            while (rl < i) {
                                var qZ = rl++;
                                var rt = rp.b[rc] + re.b[ra - i1];
                                rc += q7;
                                re.set(ra++, rt)
                            }
                            break;
                        case 3:
                            var q4 = 0;
                            var q;
                            if (q8 == 0) {
                                q = 0
                            } else {
                                q = i
                            }
                            var rj = 0;
                            while (rj < i) {
                                var qY = rj++;
                                q4 = rp.b[rc] + (q4 + re.b[ra - q] >> 1) & 255;
                                rc += q7;
                                re.set(ra++, q4)
                            }
                            break;
                        case 4:
                            var ru = i;
                            var q3 = 0;
                            var ri = 0;
                            while (ri < i) {
                                var js = ri++;
                                q3 = jO.filter(re, js, q8, ru, q3, ra, 1) + rp.b[rc] & 255;
                                rc += q7;
                                re.set(ra++, q3)
                            }
                            break;
                        default:
                            throw new nM("Invalid filter " + ro)
                    }
                }
                break;
            default:
                throw new nM("Unsupported color mode")
        }
        return re
    };
    jO.extract32 = function(sC, js, s9) {
        var sw = jO.getHeader(sC);
        var rx;
        if (js == null) {
            rx = eg.alloc(sw.width * sw.height * 4)
        } else {
            rx = js
        }
        var sa = null;
        var rb = null;
        var r5 = sC.h;
        var sL = null;
        while (r5 != null) {
            var sD;
            sD = (function(tl) {
                var r1;
                sL = r5[0];
                r5 = r5[1];
                r1 = sL;
                return r1
            }(this));
            switch (sD[1]) {
                case 2:
                    var sE = sD[2];
                    if (rb != null) {
                        rb.add(sE)
                    } else {
                        if (sa == null) {
                            sa = sE
                        } else {
                            rb = new g9();
                            rb.add(sa);
                            rb.add(sE);
                            sa = null
                        }
                    }
                    break;
                default:
            }
        }
        if (rb != null) {
            sa = rb.getBytes()
        }
        if (sa == null) {
            throw new nM("Data not found")
        }
        sa = mv.run(sa);
        var sp = 0;
        var sl = 0;
        var rB = 0;
        if (s9) {
            rB = -sw.width * 8;
            sl = (sw.height - 1) * (sw.width * 4)
        }
        var ro;
        if (s9) {
            ro = -1
        } else {
            ro = 1
        }
        var i = sw.color;
        switch (i[1]) {
            case 2:
                var sT = jO.getPalette(sC);
                if (sT == null) {
                    throw new nM("PNG Palette is missing")
                }
                var rA = null;
                var q5 = sC.h;
                var tk = null;
                try {
                    while (q5 != null) {
                        var so;
                        so = (function(tl) {
                            var r1;
                            tk = q5[0];
                            q5 = q5[1];
                            r1 = tk;
                            return r1
                        }(this));
                        switch (so[1]) {
                            case 4:
                                switch (so[2]) {
                                    case "tRNS":
                                        var sF = so[3];
                                        rA = sF;
                                        throw "__break__";
                                        break;
                                    default:
                                }
                                break;
                            default:
                        }
                    }
                } catch (sB) {
                    if (sB != "__break__") {
                        throw sB
                    }
                }
                if (rA != null && rA.length < 1 << sw.colbits) {
                    var s2 = eg.alloc(1 << sw.colbits);
                    s2.blit(0, rA, 0, rA.length);
                    s2.fill(rA.length, s2.length - rA.length, 255);
                    rA = s2
                }
                var r3 = sw.width;
                var sS = Math.ceil(r3 * sw.colbits / 8) + 1;
                if (sa.length < sw.height * sS) {
                    throw new nM("Not enough data")
                }
                var r4 = sw.width * sw.colbits >> 3;
                var rm = 0;
                var rn = sw.height;
                while (rm < rn) {
                    var sj = rm++;
                    var sz = sa.get(sp++);
                    if (sz == 0) {
                        sp += r4;
                        continue
                    }
                    switch (sz) {
                        case 1:
                            var sY = 0;
                            var rl = 0;
                            while (rl < r3) {
                                var sk = rl++;
                                var sn = sa.b[sp];
                                sY += sn;
                                sa.set(sp++, sY & 255)
                            }
                            break;
                        case 2:
                            var sh;
                            if (sj == 0) {
                                sh = 0
                            } else {
                                sh = r4 + 1
                            }
                            var tb = 0;
                            while (tb < r3) {
                                var rj = tb++;
                                var rz = sa.b[sp];
                                sa.b[sp] = rz + sa.b[sp - sh] & 255;
                                sp++
                            }
                            break;
                        case 3:
                            var sX = 0;
                            var sg;
                            if (sj == 0) {
                                sg = 0
                            } else {
                                sg = r4 + 1
                            }
                            var ta = 0;
                            while (ta < r3) {
                                var ri = ta++;
                                var ry = sa.b[sp];
                                sX = ry + (sX + sa.b[sp - sg] >> 1) & 255;
                                sa.set(sp++, sX)
                            }
                            break;
                        case 4:
                            var sf = r4 + 1;
                            var sW = 0;
                            var s8 = 0;
                            while (s8 < r3) {
                                var rh = s8++;
                                var rw = sa.b[sp];
                                sW = jO.filter(sa, rh, sj, sf, sW, sp, 1) + rw & 255;
                                sa.set(sp++, sW)
                            }
                            break;
                        default:
                            throw new nM("Invalid filter " + sz)
                    }
                }
                var sc = 0;
                if (sw.colbits == 8) {
                    var tj = 0;
                    var qY = sw.height;
                    while (tj < qY) {
                        var q3 = tj++;
                        sc++;
                        var rk = 0;
                        var s7 = sw.width;
                        while (rk < s7) {
                            var rg = rk++;
                            var sV = sa.get(sc++);
                            rx.set(sl++, sT.b[sV * 3 + 2]);
                            rx.set(sl++, sT.b[sV * 3 + 1]);
                            rx.set(sl++, sT.b[sV * 3]);
                            rx.set(sl++, rA != null ? rA.b[sV] : 255)
                        }
                        sl += rB
                    }
                } else {
                    if (sw.colbits < 8) {
                        var rS = sw.colbits;
                        var se = (1 << rS) - 1;
                        var ti = 0;
                        var i2 = sw.height;
                        while (ti < i2) {
                            var q2 = ti++;
                            sc++;
                            var q4 = 0;
                            var qZ = 0;
                            var rv;
                            var sP = 0;
                            var s6 = sw.width;
                            while (sP < s6) {
                                var rf = sP++;
                                if (qZ < rS) {
                                    q4 = q4 << 8 | sa.get(sc++);
                                    qZ += 8
                                }
                                var sU = q4 >>> qZ - rS & se;
                                qZ -= rS;
                                rx.set(sl++, sT.b[sU * 3 + 2]);
                                rx.set(sl++, sT.b[sU * 3 + 1]);
                                rx.set(sl++, sT.b[sU * 3]);
                                rx.set(sl++, rA != null ? rA.b[sU] : 255)
                            }
                            sl += rB
                        }
                    } else {
                        throw new nM(sw.colbits + " indexed bits per pixel not supported")
                    }
                }
                break;
            case 0:
                var s4 = i[2];
                if (sw.colbits != 8) {
                    throw new nM("Unsupported color mode")
                }
                var q9 = sw.width;
                var sd;
                sd = (s4 ? 2 : 1) * q9 + 1;
                if (sa.length < sw.height * sd) {
                    throw new nM("Not enough data")
                }
                var th = 0;
                var i1 = sw.height;
                while (th < i1) {
                    var q1 = th++;
                    var r2 = sa.get(sp++);
                    switch (r2) {
                        case 0:
                            if (s4) {
                                var s5 = 0;
                                while (s5 < q9) {
                                    var re = s5++;
                                    var ru = sa.get(sp++);
                                    rx.set(sl++, ru);
                                    rx.set(sl++, ru);
                                    rx.set(sl++, ru);
                                    rx.set(sl++, sa.get(sp++))
                                }
                            } else {
                                var s3 = 0;
                                while (s3 < q9) {
                                    var rd = s3++;
                                    var rt = sa.get(sp++);
                                    rx.set(sl++, rt);
                                    rx.set(sl++, rt);
                                    rx.set(sl++, rt);
                                    rx.set(sl++, 255)
                                }
                            }
                            break;
                        case 1:
                            var si = 0;
                            var sA = 0;
                            if (s4) {
                                var s1 = 0;
                                while (s1 < q9) {
                                    var rc = s1++;
                                    si += sa.get(sp++);
                                    rx.set(sl++, si);
                                    rx.set(sl++, si);
                                    rx.set(sl++, si);
                                    sA += sa.get(sp++);
                                    rx.set(sl++, sA)
                                }
                            } else {
                                var sZ = 0;
                                while (sZ < q9) {
                                    var ra = sZ++;
                                    si += sa.get(sp++);
                                    rx.set(sl++, si);
                                    rx.set(sl++, si);
                                    rx.set(sl++, si);
                                    rx.set(sl++, 255)
                                }
                            }
                            break;
                        case 2:
                            var sb;
                            if (q1 == 0) {
                                sb = 0
                            } else {
                                sb = q9 * 4 * ro
                            }
                            if (s4) {
                                var rR = 0;
                                while (rR < q9) {
                                    var sR = rR++;
                                    var rs = sa.get(sp++) + rx.b[sl - sb];
                                    rx.set(sl++, rs);
                                    rx.set(sl++, rs);
                                    rx.set(sl++, rs);
                                    rx.set(sl++, sa.get(sp++) + rx.b[sl - sb])
                                }
                            } else {
                                var rQ = 0;
                                while (rQ < q9) {
                                    var sQ = rQ++;
                                    var rr = sa.get(sp++) + rx.b[sl - sb];
                                    rx.set(sl++, rr);
                                    rx.set(sl++, rr);
                                    rx.set(sl++, rr);
                                    rx.set(sl++, 255)
                                }
                            }
                            break;
                        case 3:
                            var td = 0;
                            var r0 = 0;
                            var r9;
                            if (q1 == 0) {
                                r9 = 0
                            } else {
                                r9 = q9 * 4 * ro
                            }
                            if (s4) {
                                var rP = 0;
                                while (rP < q9) {
                                    var sO = rP++;
                                    td = sa.get(sp++) + (td + rx.b[sl - r9] >> 1) & 255;
                                    rx.set(sl++, td);
                                    rx.set(sl++, td);
                                    rx.set(sl++, td);
                                    r0 = sa.get(sp++) + (r0 + rx.b[sl - r9] >> 1) & 255;
                                    rx.set(sl++, r0)
                                }
                            } else {
                                var rO = 0;
                                while (rO < q9) {
                                    var sN = rO++;
                                    td = sa.get(sp++) + (td + rx.b[sl - r9] >> 1) & 255;
                                    rx.set(sl++, td);
                                    rx.set(sl++, td);
                                    rx.set(sl++, td);
                                    rx.set(sl++, 255)
                                }
                            }
                            break;
                        case 4:
                            var r8 = q9 * 4 * ro;
                            var tc = 0;
                            var rY = 0;
                            if (s4) {
                                var rN = 0;
                                while (rN < q9) {
                                    var sM = rN++;
                                    tc = jO.filter(rx, sM, q1, r8, tc, sl, null) + sa.get(sp++) & 255;
                                    rx.set(sl++, tc);
                                    rx.set(sl++, tc);
                                    rx.set(sl++, tc);
                                    rY = jO.filter(rx, sM, q1, r8, rY, sl, null) + sa.get(sp++) & 255;
                                    rx.set(sl++, rY)
                                }
                            } else {
                                var rM = 0;
                                while (rM < q9) {
                                    var sK = rM++;
                                    tc = jO.filter(rx, sK, q1, r8, tc, sl, null) + sa.get(sp++) & 255;
                                    rx.set(sl++, tc);
                                    rx.set(sl++, tc);
                                    rx.set(sl++, tc);
                                    rx.set(sl++, 255)
                                }
                            }
                            break;
                        default:
                            throw new nM("Invalid filter " + r2)
                    }
                    sl += rB
                }
                break;
            case 1:
                var s0 = i[2];
                if (sw.colbits != 8) {
                    throw new nM("Unsupported color mode")
                }
                var q7 = sw.width;
                var r7;
                r7 = (s0 ? 4 : 3) * q7 + 1;
                if (sa.length < sw.height * r7) {
                    throw new nM("Not enough data")
                }
                var tg = 0;
                var q = sw.height;
                while (tg < q) {
                    var q0 = tg++;
                    var rZ = sa.get(sp++);
                    switch (rZ) {
                        case 0:
                            if (s0) {
                                var rL = 0;
                                while (rL < q7) {
                                    var sJ = rL++;
                                    rx.set(sl++, sa.b[sp + 2]);
                                    rx.set(sl++, sa.b[sp + 1]);
                                    rx.set(sl++, sa.b[sp]);
                                    rx.set(sl++, sa.b[sp + 3]);
                                    sp += 4
                                }
                            } else {
                                var rK = 0;
                                while (rK < q7) {
                                    var sI = rK++;
                                    rx.set(sl++, sa.b[sp + 2]);
                                    rx.set(sl++, sa.b[sp + 1]);
                                    rx.set(sl++, sa.b[sp]);
                                    rx.set(sl++, 255);
                                    sp += 3
                                }
                            }
                            break;
                        case 1:
                            var sm = 0;
                            var sr = 0;
                            var sy = 0;
                            var rX = 0;
                            if (s0) {
                                var rJ = 0;
                                while (rJ < q7) {
                                    var sH = rJ++;
                                    sy += sa.b[sp + 2];
                                    rx.set(sl++, sy);
                                    sr += sa.b[sp + 1];
                                    rx.set(sl++, sr);
                                    sm += sa.b[sp];
                                    rx.set(sl++, sm);
                                    rX += sa.b[sp + 3];
                                    rx.set(sl++, rX);
                                    sp += 4
                                }
                            } else {
                                var rI = 0;
                                while (rI < q7) {
                                    var sG = rI++;
                                    sy += sa.b[sp + 2];
                                    rx.set(sl++, sy);
                                    sr += sa.b[sp + 1];
                                    rx.set(sl++, sr);
                                    sm += sa.b[sp];
                                    rx.set(sl++, sm);
                                    rx.set(sl++, 255);
                                    sp += 3
                                }
                            }
                            break;
                        case 2:
                            var r6;
                            if (q0 == 0) {
                                r6 = 0
                            } else {
                                r6 = q7 * 4 * ro
                            }
                            if (s0) {
                                var rH = 0;
                                while (rH < q7) {
                                    var sx = rH++;
                                    rx.b[sl] = sa.b[sp + 2] + rx.b[sl - r6] & 255;
                                    sl++;
                                    rx.b[sl] = sa.b[sp + 1] + rx.b[sl - r6] & 255;
                                    sl++;
                                    rx.b[sl] = sa.b[sp] + rx.b[sl - r6] & 255;
                                    sl++;
                                    rx.b[sl] = sa.b[sp + 3] + rx.b[sl - r6] & 255;
                                    sl++;
                                    sp += 4
                                }
                            } else {
                                var rG = 0;
                                while (rG < q7) {
                                    var sv = rG++;
                                    rx.b[sl] = sa.b[sp + 2] + rx.b[sl - r6] & 255;
                                    sl++;
                                    rx.b[sl] = sa.b[sp + 1] + rx.b[sl - r6] & 255;
                                    sl++;
                                    rx.b[sl] = sa.b[sp] + rx.b[sl - r6] & 255;
                                    sl++;
                                    rx.set(sl++, 255);
                                    sp += 3
                                }
                            }
                            break;
                        case 3:
                            var rq = 0;
                            var q8 = 0;
                            var rU = 0;
                            var rW = 0;
                            var tf;
                            if (q0 == 0) {
                                tf = 0
                            } else {
                                tf = q7 * 4 * ro
                            }
                            if (s0) {
                                var rF = 0;
                                while (rF < q7) {
                                    var su = rF++;
                                    rU = sa.b[sp + 2] + (rU + rx.b[sl - tf] >> 1) & 255;
                                    rx.set(sl++, rU);
                                    q8 = sa.b[sp + 1] + (q8 + rx.b[sl - tf] >> 1) & 255;
                                    rx.set(sl++, q8);
                                    rq = sa.b[sp] + (rq + rx.b[sl - tf] >> 1) & 255;
                                    rx.set(sl++, rq);
                                    rW = sa.b[sp + 3] + (rW + rx.b[sl - tf] >> 1) & 255;
                                    rx.set(sl++, rW);
                                    sp += 4
                                }
                            } else {
                                var rE = 0;
                                while (rE < q7) {
                                    var st = rE++;
                                    rU = sa.b[sp + 2] + (rU + rx.b[sl - tf] >> 1) & 255;
                                    rx.set(sl++, rU);
                                    q8 = sa.b[sp + 1] + (q8 + rx.b[sl - tf] >> 1) & 255;
                                    rx.set(sl++, q8);
                                    rq = sa.b[sp] + (rq + rx.b[sl - tf] >> 1) & 255;
                                    rx.set(sl++, rq);
                                    rx.set(sl++, 255);
                                    sp += 3
                                }
                            }
                            break;
                        case 4:
                            var te = q7 * 4 * ro;
                            var rp = 0;
                            var q6 = 0;
                            var rT = 0;
                            var rV = 0;
                            if (s0) {
                                var rD = 0;
                                while (rD < q7) {
                                    var ss = rD++;
                                    rT = jO.filter(rx, ss, q0, te, rT, sl, null) + sa.b[sp + 2] & 255;
                                    rx.set(sl++, rT);
                                    q6 = jO.filter(rx, ss, q0, te, q6, sl, null) + sa.b[sp + 1] & 255;
                                    rx.set(sl++, q6);
                                    rp = jO.filter(rx, ss, q0, te, rp, sl, null) + sa.b[sp] & 255;
                                    rx.set(sl++, rp);
                                    rV = jO.filter(rx, ss, q0, te, rV, sl, null) + sa.b[sp + 3] & 255;
                                    rx.set(sl++, rV);
                                    sp += 4
                                }
                            } else {
                                var rC = 0;
                                while (rC < q7) {
                                    var sq = rC++;
                                    rT = jO.filter(rx, sq, q0, te, rT, sl, null) + sa.b[sp + 2] & 255;
                                    rx.set(sl++, rT);
                                    q6 = jO.filter(rx, sq, q0, te, q6, sl, null) + sa.b[sp + 1] & 255;
                                    rx.set(sl++, q6);
                                    rp = jO.filter(rx, sq, q0, te, rp, sl, null) + sa.b[sp] & 255;
                                    rx.set(sl++, rp);
                                    rx.set(sl++, 255);
                                    sp += 3
                                }
                            }
                            break;
                        default:
                            throw new nM("Invalid filter " + rZ)
                    }
                    sl += rB
                }
                break
        }
        return rx
    };
    jO.buildGrey = function(q, q3, i2) {
        var qZ = eg.alloc(q * q3 + q3);
        var q2 = 0;
        var i = 0;
        var js = 0;
        while (js < q3) {
            var q0 = js++;
            qZ.set(q2++, 0);
            var qY = 0;
            while (qY < q) {
                var q1 = qY++;
                qZ.set(q2++, i2.get(i++))
            }
        }
        var i1 = new oI();
        i1.add(jw.CHeader({
            width: q,
            height: q3,
            colbits: 8,
            color: e5.ColGrey(false),
            interlaced: false
        }));
        i1.add(jw.CData(b7.run(qZ)));
        i1.add(jw.CEnd);
        return i1
    };
    jO.buildRGB = function(q, q3, i2) {
        var qZ = eg.alloc(q * q3 * 3 + q3);
        var q2 = 0;
        var i = 0;
        var js = 0;
        while (js < q3) {
            var q0 = js++;
            qZ.set(q2++, 0);
            var qY = 0;
            while (qY < q) {
                var q1 = qY++;
                qZ.set(q2++, i2.b[i + 2]);
                qZ.set(q2++, i2.b[i + 1]);
                qZ.set(q2++, i2.b[i]);
                i += 3
            }
        }
        var i1 = new oI();
        i1.add(jw.CHeader({
            width: q,
            height: q3,
            colbits: 8,
            color: e5.ColTrue(false),
            interlaced: false
        }));
        i1.add(jw.CData(b7.run(qZ)));
        i1.add(jw.CEnd);
        return i1
    };
    jO.build32ARGB = function(q, q3, js) {
        var i2 = eg.alloc(q * q3 * 4 + q3);
        var q2 = 0;
        var i = 0;
        var qY = 0;
        while (qY < q3) {
            var q0 = qY++;
            i2.set(q2++, 0);
            var qZ = 0;
            while (qZ < q) {
                var q1 = qZ++;
                i2.set(q2++, js.b[i + 1]);
                i2.set(q2++, js.b[i + 2]);
                i2.set(q2++, js.b[i + 3]);
                i2.set(q2++, js.b[i]);
                i += 4
            }
        }
        var i1 = new oI();
        i1.add(jw.CHeader({
            width: q,
            height: q3,
            colbits: 8,
            color: e5.ColTrue(true),
            interlaced: false
        }));
        i1.add(jw.CData(b7.run(i2)));
        i1.add(jw.CEnd);
        return i1
    };
    jO.build32BGRA = function(q, q3, js) {
        var i2 = eg.alloc(q * q3 * 4 + q3);
        var q2 = 0;
        var i = 0;
        var qY = 0;
        while (qY < q3) {
            var q0 = qY++;
            i2.set(q2++, 0);
            var qZ = 0;
            while (qZ < q) {
                var q1 = qZ++;
                i2.set(q2++, js.b[i + 2]);
                i2.set(q2++, js.b[i + 1]);
                i2.set(q2++, js.b[i]);
                i2.set(q2++, js.b[i + 3]);
                i += 4
            }
        }
        var i1 = new oI();
        i1.add(jw.CHeader({
            width: q,
            height: q3,
            colbits: 8,
            color: e5.ColTrue(true),
            interlaced: false
        }));
        i1.add(jw.CData(b7.run(i2)));
        i1.add(jw.CEnd);
        return i1
    };
    var dp = function(i) {
        this.o = i;
        i.set_bigEndian(true)
    };
    nt["format.png.Writer"] = dp;
    dp.__name__ = ["format", "png", "Writer"];
    dp.prototype = {
        o: null,
        write: function(qY) {
            var i1 = 0;
            var q2 = [137, 80, 78, 71, 13, 10, 26, 10];
            while (i1 < q2.length) {
                var q4 = q2[i1];
                ++i1;
                this.o.writeByte(q4)
            }
            var js = qY.h;
            var q0 = null;
            while (js != null) {
                var q1;
                q1 = (function(q7) {
                    var q6;
                    q0 = js[0];
                    js = js[1];
                    q6 = q0;
                    return q6
                }(this));
                switch (q1[1]) {
                    case 1:
                        var i2 = q1[2];
                        var q5 = new eu();
                        q5.set_bigEndian(true);
                        q5.writeInt32(i2.width);
                        q5.writeInt32(i2.height);
                        q5.writeByte(i2.colbits);
                        q5.writeByte((function(q8) {
                            var q6;
                            var q7 = i2.color;
                            q6 = (function(ra) {
                                var q9;
                                switch (q7[1]) {
                                    case 0:
                                        q9 = (function(rd) {
                                            var rb;
                                            var rc = q7[2];
                                            rb = rc ? 4 : 0;
                                            return rb
                                        }(ra));
                                        break;
                                    case 1:
                                        q9 = (function(rd) {
                                            var rc;
                                            var rb = q7[2];
                                            rc = rb ? 6 : 2;
                                            return rc
                                        }(ra));
                                        break;
                                    case 2:
                                        q9 = 3;
                                        break
                                }
                                return q9
                            }(q8));
                            return q6
                        }(this)));
                        q5.writeByte(0);
                        q5.writeByte(0);
                        q5.writeByte(i2.interlaced ? 1 : 0);
                        this.writeChunk("IHDR", q5.getBytes());
                        break;
                    case 0:
                        this.writeChunk("IEND", eg.alloc(0));
                        break;
                    case 2:
                        var qZ = q1[2];
                        this.writeChunk("IDAT", qZ);
                        break;
                    case 3:
                        var q3 = q1[2];
                        this.writeChunk("PLTE", q3);
                        break;
                    case 4:
                        var q = q1[3];
                        var i = q1[2];
                        this.writeChunk(i, q);
                        break
                }
            }
        },
        writeChunk: function(qY, i2) {
            this.o.writeInt32(i2.length);
            this.o.writeString(qY);
            this.o.write(i2);
            var i1 = new bJ();
            var js = 0;
            while (js < 4) {
                var q = js++;
                i1["byte"](cj.cca(qY, q))
            }
            i1.update(i2, 0, i2.length);
            this.o.writeInt32(i1.get())
        },
        __class__: dp
    };
    var h6 = function() {
        this.a1 = 1;
        this.a2 = 0
    };
    nt["format.tools.Adler32"] = h6;
    h6.__name__ = ["format", "tools", "Adler32"];
    h6.read = function(i1) {
        var q = new h6();
        var qZ = i1.readByte();
        var qY = i1.readByte();
        var js = i1.readByte();
        var i2 = i1.readByte();
        q.a1 = js << 8 | i2;
        q.a2 = qZ << 8 | qY;
        return q
    };
    h6.prototype = {
        a1: null,
        a2: null,
        update: function(q1, q0, js) {
            var i1 = this.a1;
            var i = this.a2;
            var qZ = q0;
            var i2 = q0 + js;
            while (qZ < i2) {
                var q = qZ++;
                var qY = q1.b[q];
                i1 = (i1 + qY) % 65521;
                i = (i + i1) % 65521
            }
            this.a1 = i1;
            this.a2 = i
        },
        equals: function(i) {
            return i.a1 == this.a1 && i.a2 == this.a2
        },
        __class__: h6
    };
    var b7 = function() {};
    nt["format.tools.Deflate"] = b7;
    b7.__name__ = ["format", "tools", "Deflate"];
    b7.run = function(i) {
        throw new nM("Deflate is not supported on this platform");
        return null
    };
    var qu = nt["format.tools.Huffman"] = {
        __ename__: ["format", "tools", "Huffman"],
        __constructs__: ["Found", "NeedBit", "NeedBits"]
    };
    qu.Found = function(q) {
        var i1 = ["Found", 0, q];
        i1.__enum__ = qu;
        i1.toString = ea;
        return i1
    };
    qu.NeedBit = function(i1, i) {
        var q = ["NeedBit", 1, i1, i];
        q.__enum__ = qu;
        q.toString = ea;
        return q
    };
    qu.NeedBits = function(i1, q) {
        var i = ["NeedBits", 2, i1, q];
        i.__enum__ = qu;
        i.toString = ea;
        return i
    };
    var jC = function() {};
    nt["format.tools.HuffTools"] = jC;
    jC.__name__ = ["format", "tools", "HuffTools"];
    jC.prototype = {
        treeDepth: function(js) {
            switch (js[1]) {
                case 0:
                    return 0;
                case 2:
                    throw new nM("assert");
                    break;
                case 1:
                    var i = js[3];
                    var q = js[2];
                    var i2 = this.treeDepth(q);
                    var i1 = this.treeDepth(i);
                    return 1 + (i2 < i1 ? i2 : i1)
            }
        },
        treeCompress: function(qY) {
            var q1 = this.treeDepth(qY);
            if (q1 == 0) {
                return qY
            }
            if (q1 == 1) {
                switch (qY[1]) {
                    case 1:
                        var q = qY[3];
                        var i1 = qY[2];
                        return qu.NeedBit(this.treeCompress(i1), this.treeCompress(q));
                    default:
                        throw new nM("assert")
                }
            }
            var js = 1 << q1;
            var qZ = [];
            var q0 = 0;
            while (q0 < js) {
                var i2 = q0++;
                qZ.push(qu.Found(-1))
            }
            this.treeWalk(qZ, 0, 0, q1, qY);
            return qu.NeedBits(q1, qZ)
        },
        treeWalk: function(i2, js, qZ, qY, i1) {
            switch (i1[1]) {
                case 1:
                    var i = i1[3];
                    var q = i1[2];
                    if (qY > 0) {
                        this.treeWalk(i2, js, qZ + 1, qY - 1, q);
                        this.treeWalk(i2, js | 1 << qZ, qZ + 1, qY - 1, i)
                    } else {
                        i2[js] = this.treeCompress(i1)
                    }
                    break;
                default:
                    i2[js] = this.treeCompress(i1)
            }
        },
        treeMake: function(js, i2, i1, q) {
            if (q > i2) {
                throw new nM("Invalid huffman")
            }
            var i = i1 << 5 | q;
            if (js.h.hasOwnProperty(i)) {
                return qu.Found(js.h[i])
            }
            i1 <<= 1;
            q += 1;
            return qu.NeedBit(this.treeMake(js, i2, i1, q), this.treeMake(js, i2, i1 | 1, q))
        },
        make: function(qZ, q0, q5, js) {
            var re = [];
            var rf = [];
            if (js > 32) {
                throw new nM("Invalid huffman")
            }
            var qY = 0;
            while (qY < js) {
                var rc = qY++;
                re.push(0);
                rf.push(0)
            }
            var q3 = 0;
            while (q3 < q5) {
                var ra = q3++;
                var q4 = qZ[ra + q0];
                if (q4 >= js) {
                    throw new nM("Invalid huffman")
                }
                re[q4]++
            }
            var q = 0;
            var rd = 1;
            var q2 = js - 1;
            while (rd < q2) {
                var q8 = rd++;
                q = q + re[q8] << 1;
                rf[q8] = q
            }
            var rb = new c6();
            var q1 = 0;
            while (q1 < q5) {
                var q7 = q1++;
                var q9 = qZ[q7 + q0];
                if (q9 != 0) {
                    var q6 = rf[q9 - 1];
                    rf[q9 - 1] = q6 + 1;
                    rb.h[q6 << 5 | q9] = q7
                }
            }
            return this.treeCompress(qu.NeedBit(this.treeMake(rb, js, 0, 1), this.treeMake(rb, js, 1, 1)))
        },
        __class__: jC
    };
    var mv = function() {};
    nt["format.tools.Inflate"] = mv;
    mv.__name__ = ["format", "tools", "Inflate"];
    mv.run = function(i) {
        return iq.run(new bB(i))
    };
    var hf = function(i) {
        this.buffer = eg.alloc(65536);
        this.pos = 0;
        if (i) {
            this.crc = new h6()
        }
    };
    nt["format.tools._InflateImpl.Window"] = hf;
    hf.__name__ = ["format", "tools", "_InflateImpl", "Window"];
    hf.prototype = {
        buffer: null,
        pos: null,
        crc: null,
        slide: function() {
            if (this.crc != null) {
                this.crc.update(this.buffer, 0, 32768)
            }
            var i = eg.alloc(65536);
            this.pos -= 32768;
            i.blit(0, this.buffer, 32768, this.pos);
            this.buffer = i
        },
        addBytes: function(q, i1, i) {
            if (this.pos + i > 65536) {
                this.slide()
            }
            this.buffer.blit(this.pos, q, i1, i);
            this.pos += i
        },
        addByte: function(i) {
            if (this.pos == 65536) {
                this.slide()
            }
            this.buffer.b[this.pos] = i & 255;
            this.pos++
        },
        getLastChar: function() {
            return this.buffer.b[this.pos - 1]
        },
        available: function() {
            return this.pos
        },
        checksum: function() {
            if (this.crc != null) {
                this.crc.update(this.buffer, 0, this.pos)
            }
            return this.crc
        },
        __class__: hf
    };
    var c4 = nt["format.tools._InflateImpl.State"] = {
        __ename__: ["format", "tools", "_InflateImpl", "State"],
        __constructs__: ["Head", "Block", "CData", "Flat", "Crc", "Dist", "DistOne", "Done"]
    };
    c4.Head = ["Head", 0];
    c4.Head.toString = ea;
    c4.Head.__enum__ = c4;
    c4.Block = ["Block", 1];
    c4.Block.toString = ea;
    c4.Block.__enum__ = c4;
    c4.CData = ["CData", 2];
    c4.CData.toString = ea;
    c4.CData.__enum__ = c4;
    c4.Flat = ["Flat", 3];
    c4.Flat.toString = ea;
    c4.Flat.__enum__ = c4;
    c4.Crc = ["Crc", 4];
    c4.Crc.toString = ea;
    c4.Crc.__enum__ = c4;
    c4.Dist = ["Dist", 5];
    c4.Dist.toString = ea;
    c4.Dist.__enum__ = c4;
    c4.DistOne = ["DistOne", 6];
    c4.DistOne.toString = ea;
    c4.DistOne.__enum__ = c4;
    c4.Done = ["Done", 7];
    c4.Done.toString = ea;
    c4.Done.__enum__ = c4;
    var iq = function(q, qZ, js) {
        if (js == null) {
            js = true
        }
        if (qZ == null) {
            qZ = true
        }
        this["final"] = false;
        this.htools = new jC();
        this.huffman = this.buildFixedHuffman();
        this.huffdist = null;
        this.len = 0;
        this.dist = 0;
        if (qZ) {
            this.state = c4.Head
        } else {
            this.state = c4.Block
        }
        this.input = q;
        this.bits = 0;
        this.nbits = 0;
        this.needed = 0;
        this.output = null;
        this.outpos = 0;
        this.lengths = [];
        var qY = 0;
        while (qY < 19) {
            var i2 = qY++;
            this.lengths.push(-1)
        }
        this.window = new hf(js)
    };
    nt["format.tools.InflateImpl"] = iq;
    iq.__name__ = ["format", "tools", "InflateImpl"];
    iq.run = function(js, qZ) {
        if (qZ == null) {
            qZ = 65536
        }
        var i2 = eg.alloc(qZ);
        var i1 = new g9();
        var qY = new iq(js);
        while (true) {
            var q = qY.readBytes(i2, 0, qZ);
            i1.addBytes(i2, 0, q);
            if (q < qZ) {
                break
            }
        }
        return i1.getBytes()
    };
    iq.prototype = {
        nbits: null,
        bits: null,
        state: null,
        "final": null,
        huffman: null,
        huffdist: null,
        htools: null,
        len: null,
        dist: null,
        needed: null,
        output: null,
        outpos: null,
        input: null,
        lengths: null,
        window: null,
        buildFixedHuffman: function() {
            if (iq.FIXED_HUFFMAN != null) {
                return iq.FIXED_HUFFMAN
            }
            var i = [];
            var q = 0;
            while (q < 288) {
                var i1 = q++;
                i.push(i1 <= 143 ? 8 : i1 <= 255 ? 9 : i1 <= 279 ? 7 : 8)
            }
            iq.FIXED_HUFFMAN = this.htools.make(i, 0, 288, 10);
            return iq.FIXED_HUFFMAN
        },
        readBytes: function(q, i1, i) {
            this.needed = i;
            this.outpos = i1;
            this.output = q;
            if (i > 0) {
                while (this.inflateLoop()) {}
            }
            return i - this.needed
        },
        getBits: function(q) {
            while (this.nbits < q) {
                this.bits |= this.input.readByte() << this.nbits;
                this.nbits += 8
            }
            var i = this.bits & (1 << q) - 1;
            this.nbits -= q;
            this.bits >>= q;
            return i
        },
        getBit: function() {
            if (this.nbits == 0) {
                this.nbits = 8;
                this.bits = this.input.readByte()
            }
            var i = (this.bits & 1) == 1;
            this.nbits--;
            this.bits >>= 1;
            return i
        },
        getRevBits: function(i) {
            if (i == 0) {
                return 0
            } else {
                if (this.getBit()) {
                    return 1 << i - 1 | this.getRevBits(i - 1)
                } else {
                    return this.getRevBits(i - 1)
                }
            }
        },
        resetBits: function() {
            this.bits = 0;
            this.nbits = 0
        },
        addBytes: function(q, i1, i) {
            this.window.addBytes(q, i1, i);
            this.output.blit(this.outpos, q, i1, i);
            this.needed -= i;
            this.outpos += i
        },
        addByte: function(i) {
            this.window.addByte(i);
            this.output.b[this.outpos] = i & 255;
            this.needed--;
            this.outpos++
        },
        addDistOne: function(js) {
            var i2 = this.window.getLastChar();
            var i1 = 0;
            while (i1 < js) {
                var q = i1++;
                this.addByte(i2)
            }
        },
        addDist: function(q, i) {
            this.addBytes(this.window.buffer, this.window.pos - q, i)
        },
        applyHuffman: function(i2) {
            switch (i2[1]) {
                case 0:
                    var qY = i2[2];
                    return qY;
                case 1:
                    var i = i2[3];
                    var q = i2[2];
                    return this.applyHuffman(this.getBit() ? i : q);
                case 2:
                    var js = i2[3];
                    var i1 = i2[2];
                    return this.applyHuffman(js[this.getBits(i1)])
            }
        },
        inflateLengths: function(i2, q) {
            var js = 0;
            var qY = 0;
            while (js < q) {
                var qZ = this.applyHuffman(this.huffman);
                switch (qZ) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                        qY = qZ;
                        i2[js] = qZ;
                        js++;
                        break;
                    case 16:
                        var i1 = js + 3 + this.getBits(2);
                        if (i1 > q) {
                            throw new nM("Invalid data")
                        }
                        while (js < i1) {
                            i2[js] = qY;
                            js++
                        }
                        break;
                    case 17:
                        js += 3 + this.getBits(3);
                        if (js > q) {
                            throw new nM("Invalid data")
                        }
                        break;
                    case 18:
                        js += 11 + this.getBits(7);
                        if (js > q) {
                            throw new nM("Invalid data")
                        }
                        break;
                    default:
                        throw new nM("Invalid data")
                }
            }
        },
        inflateLoop: function() {
            var qZ = this.state;
            switch (qZ[1]) {
                case 0:
                    var ri = this.input.readByte();
                    var q4 = ri & 15;
                    var rm = ri >> 4;
                    if (q4 != 8) {
                        throw new nM("Invalid data")
                    }
                    var rp = this.input.readByte();
                    var q0 = (rp & 32) != 0;
                    if (((ri << 8) + rp) % 31 != 0) {
                        throw new nM("Invalid data")
                    }
                    if (q0) {
                        throw new nM("Unsupported dictionary")
                    }
                    this.state = c4.Block;
                    return true;
                case 4:
                    var q = this.window.checksum();
                    if (q == null) {
                        this.state = c4.Done;
                        return true
                    }
                    var q5 = h6.read(this.input);
                    if (!q.equals(q5)) {
                        throw new nM("Invalid CRC")
                    }
                    this.state = c4.Done;
                    return true;
                case 7:
                    return false;
                case 1:
                    this["final"] = this.getBit();
                    var q9 = this.getBits(2);
                    switch (q9) {
                        case 0:
                            this.len = this.input.readUInt16();
                            var q1 = this.input.readUInt16();
                            if (q1 != 65535 - this.len) {
                                throw new nM("Invalid data")
                            }
                            this.state = c4.Flat;
                            var ra = this.inflateLoop();
                            this.resetBits();
                            return ra;
                        case 1:
                            this.huffman = this.buildFixedHuffman();
                            this.huffdist = null;
                            this.state = c4.CData;
                            return true;
                        case 2:
                            var q6 = this.getBits(5) + 257;
                            var rl = this.getBits(5) + 1;
                            var rh = this.getBits(4) + 4;
                            var q8 = 0;
                            while (q8 < rh) {
                                var rk = q8++;
                                this.lengths[iq.CODE_LENGTHS_POS[rk]] = this.getBits(3)
                            }
                            var qY = rh;
                            while (qY < 19) {
                                var rg = qY++;
                                this.lengths[iq.CODE_LENGTHS_POS[rg]] = 0
                            }
                            this.huffman = this.htools.make(this.lengths, 0, 19, 8);
                            var q2 = [];
                            var q7 = 0;
                            var js = q6 + rl;
                            while (q7 < js) {
                                var re = q7++;
                                q2.push(0)
                            }
                            this.inflateLengths(q2, q6 + rl);
                            this.huffdist = this.htools.make(q2, q6, rl, 16);
                            this.huffman = this.htools.make(q2, 0, q6, 16);
                            this.state = c4.CData;
                            return true;
                        default:
                            throw new nM("Invalid data")
                    }
                    break;
                case 3:
                    var rj;
                    if (this.len < this.needed) {
                        rj = this.len
                    } else {
                        rj = this.needed
                    }
                    var rb = this.input.read(rj);
                    this.len -= rj;
                    this.addBytes(rb, 0, rj);
                    if (this.len == 0) {
                        if (this["final"]) {
                            this.state = c4.Crc
                        } else {
                            this.state = c4.Block
                        }
                    }
                    return this.needed > 0;
                case 6:
                    var rf;
                    if (this.len < this.needed) {
                        rf = this.len
                    } else {
                        rf = this.needed
                    }
                    this.addDistOne(rf);
                    this.len -= rf;
                    if (this.len == 0) {
                        this.state = c4.CData
                    }
                    return this.needed > 0;
                case 5:
                    while (this.len > 0 && this.needed > 0) {
                        var ro;
                        if (this.len < this.dist) {
                            ro = this.len
                        } else {
                            ro = this.dist
                        }
                        var rd;
                        if (this.needed < ro) {
                            rd = this.needed
                        } else {
                            rd = ro
                        }
                        this.addDist(this.dist, rd);
                        this.len -= rd
                    }
                    if (this.len == 0) {
                        this.state = c4.CData
                    }
                    return this.needed > 0;
                case 2:
                    var rc = this.applyHuffman(this.huffman);
                    if (rc < 256) {
                        this.addByte(rc);
                        return this.needed > 0
                    } else {
                        if (rc == 256) {
                            if (this["final"]) {
                                this.state = c4.Crc
                            } else {
                                this.state = c4.Block
                            }
                            return true
                        } else {
                            rc -= 257;
                            var q3 = iq.LEN_EXTRA_BITS_TBL[rc];
                            if (q3 == -1) {
                                throw new nM("Invalid data")
                            }
                            this.len = iq.LEN_BASE_VAL_TBL[rc] + this.getBits(q3);
                            var rn;
                            if (this.huffdist == null) {
                                rn = this.getRevBits(5)
                            } else {
                                rn = this.applyHuffman(this.huffdist)
                            }
                            q3 = iq.DIST_EXTRA_BITS_TBL[rn];
                            if (q3 == -1) {
                                throw new nM("Invalid data")
                            }
                            this.dist = iq.DIST_BASE_VAL_TBL[rn] + this.getBits(q3);
                            if (this.dist > this.window.available()) {
                                throw new nM("Invalid data")
                            }
                            if (this.dist == 1) {
                                this.state = c4.DistOne
                            } else {
                                this.state = c4.Dist
                            }
                            return true
                        }
                    }
                    break
            }
        },
        __class__: iq
    };
    var iO = function() {
        this.connected = false;
        this.buttons = [];
        this.axes = [];
        this.timestamp = 0
    };
    nt["gamepad.LocalGamepad"] = iO;
    iO.__name__ = ["gamepad", "LocalGamepad"];
    iO.fromJSGamepad = function(q1) {
        var i2 = new iO();
        i2.timestamp = q1.timestamp;
        i2.connected = q1.connected;
        var q0 = 0;
        var q2 = q1.buttons.length;
        while (q0 < q2) {
            var js = q0++;
            i2.buttons.push(iO.normalizeJSButton(q1.buttons[js]))
        }
        var q = 0;
        var qZ = q1.axes.length;
        while (q < qZ) {
            var qY = q++;
            i2.axes.push(q1.axes[qY])
        }
        return i2
    };
    iO.normalizeJSButton = function(i) {
        if ("pressed" in i) {
            return {
                pressed: i.pressed,
                value: i.value
            }
        } else {
            return {
                pressed: i == 1,
                value: i
            }
        }
    };
    iO.prototype = {
        connected: null,
        buttons: null,
        axes: null,
        timestamp: null,
        __class__: iO
    };
    var im = function() {};
    nt["gamepad.HTML5GamepadManager"] = im;
    im.__name__ = ["gamepad", "HTML5GamepadManager"];
    im.hasGamepadEvents = null;
    im._gamepads = null;
    im.init = function() {
        im.hasGamepadEvents = "GamepadEvent" in window;
        im._gamepads = [];
        if (im.hasGamepadEvents) {
            window.addEventListener("gamepadconnected", im.handleGamepadEvent, false);
            window.addEventListener("gamepaddisconnected", im.handleGamepadEvent, false)
        }
    };
    im.update = function() {
        var q = im.getGamepads();
        var i1 = 0;
        while (i1 < q.length) {
            var i = q[i1];
            ++i1;
            if (i != null) {
                im.addGamepad(i);
                im.updateGamepad(i)
            }
        }
    };
    im.updateGamepad = function(q0) {
        if (!lE.devices.h.hasOwnProperty(q0.index)) {
            return
        }
        var i2 = lE.devices.h[q0.index];
        var js = im._gamepads[q0.index];
        var qZ = 0;
        var i1 = q0.buttons.length;
        while (qZ < i1) {
            var q1 = qZ++;
            if (im.isButtonPressed(q0.buttons[q1])) {
                if (!js.buttons[q1].pressed) {
                    i2.onButtonDown.dispatch(q1)
                }
            } else {
                if (js.buttons[q1].pressed) {
                    i2.onButtonUp.dispatch(q1)
                }
            }
            js.buttons[q1] = iO.normalizeJSButton(q0.buttons[q1])
        }
        var i = 0;
        var qY = q0.axes.length;
        while (i < qY) {
            var q = i++;
            if (Math.abs(q0.axes[q] - js.axes[q]) > 0.00002) {
                i2.onAxisMove.dispatch(q, q0.axes[q])
            }
            js.axes[q] = q0.axes[q]
        }
    };
    im.isButtonPressed = function(i) {
        if ("pressed" in i) {
            return i.pressed
        } else {
            return i == 1
        }
    };
    im.getButtonValue = function(i) {
        if ("value" in i) {
            return i.value
        } else {
            return i
        }
    };
    im.getGamepads = function() {
        if (navigator.getGamepads) {
            return navigator.getGamepads()
        } else {
            if (navigator.webkitGetGamepads) {
                return navigator.webkitGetGamepads()
            } else {
                return []
            }
        }
    };
    im.handleGamepadEvent = function(i) {
        var q = i.type;
        switch (q) {
            case "gamepadconnected":
                im.addGamepad(i.gamepad);
                break;
            case "gamepaddisconnected":
                im.removeGamepad(i.gamepad);
                break
        }
    };
    im.addGamepad = function(q) {
        if (!lE.devices.h.hasOwnProperty(q.index)) {
            var i = new lE(q.index);
            lE.devices.h[q.index] = i;
            lE.onConnect.dispatch(i);
            im._gamepads[q.index] = iO.fromJSGamepad(q)
        }
    };
    im.removeGamepad = function(q) {
        var i = lE.devices.h[q.index];
        if (i != null) {
            i.connected = false
        }
        lE.devices.remove(q.index);
        im._gamepads[q.index] = null;
        if (i != null) {
            i.onDisconnect.dispatch()
        }
    };
    var aS = nt["haxe.StackItem"] = {
        __ename__: ["haxe", "StackItem"],
        __constructs__: ["CFunction", "Module", "FilePos", "Method", "LocalFunction"]
    };
    aS.CFunction = ["CFunction", 0];
    aS.CFunction.toString = ea;
    aS.CFunction.__enum__ = aS;
    aS.Module = function(i) {
        var q = ["Module", 1, i];
        q.__enum__ = aS;
        q.toString = ea;
        return q
    };
    aS.FilePos = function(i1, q, i) {
        var i2 = ["FilePos", 2, i1, q, i];
        i2.__enum__ = aS;
        i2.toString = ea;
        return i2
    };
    aS.Method = function(q, i1) {
        var i = ["Method", 3, q, i1];
        i.__enum__ = aS;
        i.toString = ea;
        return i
    };
    aS.LocalFunction = function(i) {
        var q = ["LocalFunction", 4, i];
        q.__enum__ = aS;
        q.toString = ea;
        return q
    };
    var lF = function() {};
    nt["haxe.CallStack"] = lF;
    lF.__name__ = ["haxe", "CallStack"];
    lF.lastException = null;
    lF.getStack = function(i1) {
        if (i1 == null) {
            return []
        }
        var q = Error.prepareStackTrace;
        Error.prepareStackTrace = function(q1, q4) {
            var q2 = [];
            var qZ = 0;
            while (qZ < q4.length) {
                var js = q4[qZ];
                ++qZ;
                if (lF.wrapCallSite != null) {
                    js = lF.wrapCallSite(js)
                }
                var i2 = null;
                var qY = js.getFunctionName();
                if (qY != null) {
                    var q5 = qY.lastIndexOf(".");
                    if (q5 >= 0) {
                        var q0 = cj.substr(qY, 0, q5);
                        var q3 = cj.substr(qY, q5 + 1, null);
                        i2 = aS.Method(q0, q3)
                    }
                }
                q2.push(aS.FilePos(i2, js.getFileName(), js.getLineNumber()))
            }
            return q2
        };
        var i = lF.makeStack(i1.stack);
        Error.prepareStackTrace = q;
        return i
    };
    lF.wrapCallSite = null;
    lF.callStack = function() {
        try {
            throw new Error()
        } catch (q) {
            lF.lastException = q;
            if (q instanceof nM) {
                q = q.val
            }
            var i = lF.getStack(q);
            i.shift();
            return i
        }
    };
    lF.exceptionStack = function() {
        return lF.getStack(lF.lastException)
    };
    lF.toString = function(q) {
        var i = new jT();
        var i2 = 0;
        while (i2 < q.length) {
            var i1 = q[i2];
            ++i2;
            i.b += "\nCalled from ";
            lF.itemToString(i, i1)
        }
        return i.b
    };
    lF.itemToString = function(qY, q0) {
        switch (q0[1]) {
            case 0:
                qY.b += "a C function";
                break;
            case 1:
                var i1 = q0[2];
                qY.b += "module ";
                if (i1 == null) {
                    qY.b += "null"
                } else {
                    qY.b += "" + i1
                }
                break;
            case 2:
                var q1 = q0[4];
                var q = q0[3];
                var qZ = q0[2];
                if (qZ != null) {
                    lF.itemToString(qY, qZ);
                    qY.b += " ("
                }
                if (q == null) {
                    qY.b += "null"
                } else {
                    qY.b += "" + q
                }
                qY.b += " line ";
                if (q1 == null) {
                    qY.b += "null"
                } else {
                    qY.b += "" + q1
                }
                if (qZ != null) {
                    qY.b += ")"
                }
                break;
            case 3:
                var js = q0[3];
                var i2 = q0[2];
                if (i2 == null) {
                    qY.b += "null"
                } else {
                    qY.b += "" + i2
                }
                qY.b += ".";
                if (js == null) {
                    qY.b += "null"
                } else {
                    qY.b += "" + js
                }
                break;
            case 4:
                var i = q0[2];
                qY.b += "local function #";
                if (i == null) {
                    qY.b += "null"
                } else {
                    qY.b += "" + i
                }
                break
        }
    };
    lF.makeStack = function(q1) {
        if (q1 == null) {
            return []
        } else {
            if (typeof(q1) == "string") {
                var qY = q1.split("\n");
                if (qY[0] == "Error") {
                    qY.shift()
                }
                var q = [];
                var i2 = new gF("^   at ([A-Za-z0-9_. ]+) \\(([^)]+):([0-9]+):([0-9]+)\\)$", "");
                var i1 = 0;
                while (i1 < qY.length) {
                    var q2 = qY[i1];
                    ++i1;
                    if (i2.match(q2)) {
                        var q0 = i2.matched(1).split(".");
                        var js = q0.pop();
                        var i = i2.matched(2);
                        var qZ = kr.parseInt(i2.matched(3));
                        q.push(aS.FilePos(js == "Anonymous function" ? aS.LocalFunction() : js == "Global code" ? null : aS.Method(q0.join("."), js), i, qZ))
                    } else {
                        q.push(aS.Module(cP.trim(q2)))
                    }
                }
                return q
            } else {
                return q1
            }
        }
    };
    var kG = function() {};
    nt["haxe.IMap"] = kG;
    kG.__name__ = ["haxe", "IMap"];
    kG.prototype = {
        set: null,
        __class__: kG
    };
    var dM = function(i) {
        this.url = i;
        this.headers = new oI();
        this.params = new oI();
        this.async = true
    };
    nt["haxe.Http"] = dM;
    dM.__name__ = ["haxe", "Http"];
    dM.prototype = {
        url: null,
        responseData: null,
        async: null,
        postData: null,
        headers: null,
        params: null,
        req: null,
        request: function(q5) {
            var q2 = this;
            q2.responseData = null;
            var i = this.req = bq.createXMLHttpRequest();
            var q4 = function(q7) {
                if (i.readyState != 4) {
                    return
                }
                var q8;
                try {
                    q8 = i.status
                } catch (ra) {
                    lF.lastException = ra;
                    if (ra instanceof nM) {
                        ra = ra.val
                    }
                    q8 = null
                }
                if (q8 != null) {
                    var rb = window.location.protocol.toLowerCase();
                    var q6 = new gF("^(?:about|app|app-storage|.+-extension|file|res|widget):$", "");
                    var q9 = q6.match(rb);
                    if (q9) {
                        if (i.responseText != null) {
                            q8 = 200
                        } else {
                            q8 = 404
                        }
                    }
                }
                if (q8 == undefined) {
                    q8 = null
                }
                if (q8 != null) {
                    q2.onStatus(q8)
                }
                if (q8 != null && q8 >= 200 && q8 < 400) {
                    q2.req = null;
                    q2.onData(q2.responseData = i.responseText)
                } else {
                    if (q8 == null) {
                        q2.req = null;
                        q2.onError("Failed to connect or resolve host")
                    } else {
                        switch (q8) {
                            case 12029:
                                q2.req = null;
                                q2.onError("Failed to connect to host");
                                break;
                            case 12007:
                                q2.req = null;
                                q2.onError("Unknown host");
                                break;
                            default:
                                q2.req = null;
                                q2.responseData = i.responseText;
                                q2.onError("Http Error #" + i.status)
                        }
                    }
                }
            };
            if (this.async) {
                i.onreadystatechange = q4
            }
            var i1 = this.postData;
            if (i1 != null) {
                q5 = true
            } else {
                var qY = this.params.h;
                var q0 = null;
                while (qY != null) {
                    var q;
                    q = (function(q7) {
                        var q6;
                        q0 = qY[0];
                        qY = qY[1];
                        q6 = q0;
                        return q6
                    }(this));
                    if (i1 == null) {
                        i1 = ""
                    } else {
                        i1 += "&"
                    }
                    i1 += encodeURIComponent(q.param) + "=" + encodeURIComponent(q.value)
                }
            }
            try {
                if (q5) {
                    i.open("POST", this.url, this.async)
                } else {
                    if (i1 != null) {
                        var i2 = this.url.split("?").length <= 1;
                        i.open("GET", this.url + (i2 ? "?" : "&") + i1, this.async);
                        i1 = null
                    } else {
                        i.open("GET", this.url, this.async)
                    }
                }
            } catch (q3) {
                lF.lastException = q3;
                if (q3 instanceof nM) {
                    q3 = q3.val
                }
                q2.req = null;
                this.onError(q3.toString());
                return
            }
            if (!jN.exists(this.headers, function(q6) {
                    return q6.header == "Content-Type"
                }) && q5 && this.postData == null) {
                i.setRequestHeader("Content-Type", "application/x-www-form-urlencoded")
            }
            var qZ = this.headers.h;
            var js = null;
            while (qZ != null) {
                var q1;
                q1 = (function(q7) {
                    var q6;
                    js = qZ[0];
                    qZ = qZ[1];
                    q6 = js;
                    return q6
                }(this));
                i.setRequestHeader(q1.header, q1.value)
            }
            i.send(i1);
            if (!this.async) {
                q4(null)
            }
        },
        onData: function(i) {},
        onError: function(i) {},
        onStatus: function(i) {},
        __class__: dM
    };
    var aJ = function(q, i) {
        this.high = q;
        this.low = i
    };
    nt["haxe._Int64.___Int64"] = aJ;
    aJ.__name__ = ["haxe", "_Int64", "___Int64"];
    aJ.prototype = {
        high: null,
        low: null,
        __class__: aJ
    };
    var cu = function() {};
    nt["haxe.Json"] = cu;
    cu.__name__ = ["haxe", "Json"];
    cu.parse = function(i) {
        return new dB(i).parseRec()
    };
    var eM = function() {};
    nt["haxe.Log"] = eM;
    eM.__name__ = ["haxe", "Log"];
    eM.trace = function(i, q) {
        n0.__trace(i, q)
    };
    var ot = function() {
        this.buf = new jT();
        this.cache = [];
        this.useCache = ot.USE_CACHE;
        this.useEnumIndex = ot.USE_ENUM_INDEX;
        this.shash = new io();
        this.scount = 0
		console.log("serialiser");
    };
    nt["haxe.Serializer"] = ot;
    ot.__name__ = ["haxe", "Serializer"];
    ot.run = function(i) {
        var q = new ot();
        q.serialize(i);
        return q.toString()
    };
    ot.prototype = {
        buf: null,
        cache: null,
        shash: null,
        scount: null,
        useCache: null,
        useEnumIndex: null,
        toString: function() {
			console.log("seri")
            return this.buf.b
        },
        serializeString: function(q) {
			console.log("seritri");
            var i = this.shash.get(q);
            if (i != null) {
                this.buf.b += "R";
                if (i == null) {
                    this.buf.b += "null"
                } else {
                    this.buf.b += "" + i
                }
                return
            }
            this.shash.set(q, this.scount++);
            this.buf.b += "y";
            q = encodeURIComponent(q);
            if (q.length == null) {
                this.buf.b += "null"
            } else {
                this.buf.b += "" + q.length
            }
            this.buf.b += ":";
            if (q == null) {
                this.buf.b += "null"
            } else {
                this.buf.b += "" + q
            }
        },
        serializeRef: function(q) {
            var qZ = typeof(q);
            var js = 0;
            var qY = this.cache.length;
            while (js < qY) {
                var i2 = js++;
                var i1 = this.cache[i2];
                if (typeof(i1) == qZ && i1 == q) {
                    this.buf.b += "r";
                    if (i2 == null) {
                        this.buf.b += "null"
                    } else {
                        this.buf.b += "" + i2
                    }
                    return true
                }
            }
            this.cache.push(q);
            return false
        },
        serializeFields: function(i) {
            var i2 = 0;
            var i1 = ar.fields(i);
            while (i2 < i1.length) {
                var q = i1[i2];
                ++i2;
                this.serializeString(q);
                this.serialize(ar.field(i, q))
            }
            this.buf.b += "g"
        },
        serialize: function(ri) {
            var rq = kX["typeof"](ri);
            switch (rq[1]) {
                case 0:
                    this.buf.b += "n";
                    break;
                case 1:
                    var rA = ri;
                    if (rA == 0) {
                        this.buf.b += "z";
                        return
                    }
                    this.buf.b += "i";
                    if (rA == null) {
                        this.buf.b += "null"
                    } else {
                        this.buf.b += "" + rA
                    }
                    break;
                case 2:
                    var rz = ri;
                    if (isNaN(rz)) {
                        this.buf.b += "k"
                    } else {
                        if (!isFinite(rz)) {
                            if (rz < 0) {
                                this.buf.b += "m"
                            } else {
                                this.buf.b += "p"
                            }
                        } else {
                            this.buf.b += "d";
                            if (rz == null) {
                                this.buf.b += "null"
                            } else {
                                this.buf.b += "" + rz
                            }
                        }
                    }
                    break;
                case 3:
                    if (ri) {
                        this.buf.b += "t"
                    } else {
                        this.buf.b += "f"
                    }
                    break;
                case 6:
                    var rx = rq[2];
                    if (rx == String) {
                        this.serializeString(ri);
                        return
                    }
                    if (this.useCache && this.serializeRef(ri)) {
                        return
                    }
                    switch (rx) {
                        case Array:
                            var qZ = 0;
                            this.buf.b += "a";
                            var rk = ri.length;
                            var rm = 0;
                            while (rm < rk) {
                                var ro = rm++;
                                if (ri[ro] == null) {
                                    qZ++
                                } else {
                                    if (qZ > 0) {
                                        if (qZ == 1) {
                                            this.buf.b += "n"
                                        } else {
                                            this.buf.b += "u";
                                            if (qZ == null) {
                                                this.buf.b += "null"
                                            } else {
                                                this.buf.b += "" + qZ
                                            }
                                        }
                                        qZ = 0
                                    }
                                    this.serialize(ri[ro])
                                }
                            }
                            if (qZ > 0) {
                                if (qZ == 1) {
                                    this.buf.b += "n"
                                } else {
                                    this.buf.b += "u";
                                    if (qZ == null) {
                                        this.buf.b += "null"
                                    } else {
                                        this.buf.b += "" + qZ
                                    }
                                }
                            }
                            this.buf.b += "h";
                            break;
                        case oI:
                            this.buf.b += "l";
                            var ry = ri;
                            var q7 = ry.h;
                            var rd = null;
                            while (q7 != null) {
                                var q2;
                                rd = q7[0];
                                q7 = q7[1];
                                q2 = rd;
                                this.serialize(q2)
                            }
                            this.buf.b += "h";
                            break;
                        case Date:
                            var ru = ri;
                            this.buf.b += "v";
                            this.buf.add(ru.getTime());
                            break;
                        case io:
                            this.buf.b += "b";
                            var rv = ri;
                            var q6 = rv.keys();
                            while (q6.hasNext()) {
                                var rl = q6.next();
                                this.serializeString(rl);
                                this.serialize(pN[rl] != null ? rv.getReserved(rl) : rv.h[rl])
                            }
                            this.buf.b += "h";
                            break;
                        case c6:
                            this.buf.b += "q";
                            var rt = ri;
                            var q5 = rt.keys();
                            while (q5.hasNext()) {
                                var rg = q5.next();
                                this.buf.b += ":";
                                if (rg == null) {
                                    this.buf.b += "null"
                                } else {
                                    this.buf.b += "" + rg
                                }
                                this.serialize(rt.h[rg])
                            }
                            this.buf.b += "h";
                            break;
                        case qS:
                            this.buf.b += "M";
                            var rr = ri;
                            var q4 = rr.keys();
                            while (q4.hasNext()) {
                                var re = q4.next();
                                var rh = ar.field(re, "__id__");
                                ar.deleteField(re, "__id__");
                                this.serialize(re);
                                re.__id__ = rh;
                                this.serialize(rr.h[re.__id__])
                            }
                            this.buf.b += "h";
                            break;
                        case eg:
                            var rp = ri;
                            var q1 = 0;
                            var q8 = rp.length - 2;
                            var qY = new jT();
                            var q9 = ot.BASE64;
                            while (q1 < q8) {
                                var rc = rp.get(q1++);
                                var rb = rp.get(q1++);
                                var ra = rp.get(q1++);
                                qY.add(q9.charAt(rc >> 2));
                                qY.add(q9.charAt((rc << 4 | rb >> 4) & 63));
                                qY.add(q9.charAt((rb << 2 | ra >> 6) & 63));
                                qY.add(q9.charAt(ra & 63))
                            }
                            if (q1 == q8) {
                                var js = rp.get(q1++);
                                var rj = rp.get(q1++);
                                qY.add(q9.charAt(js >> 2));
                                qY.add(q9.charAt((js << 4 | rj >> 4) & 63));
                                qY.add(q9.charAt(rj << 2 & 63))
                            } else {
                                if (q1 == q8 + 1) {
                                    var q = rp.get(q1++);
                                    qY.add(q9.charAt(q >> 2));
                                    qY.add(q9.charAt(q << 4 & 63))
                                }
                            }
                            var rw = qY.b;
                            this.buf.b += "s";
                            if (rw.length == null) {
                                this.buf.b += "null"
                            } else {
                                this.buf.b += "" + rw.length
                            }
                            this.buf.b += ":";
                            if (rw == null) {
                                this.buf.b += "null"
                            } else {
                                this.buf.b += "" + rw
                            }
                            break;
                        default:
                            if (this.useCache) {
                                this.cache.pop()
                            }
                            if (ri.hxSerialize != null) {
                                this.buf.b += "C";
                                this.serializeString(kX.getClassName(rx));
                                if (this.useCache) {
                                    this.cache.push(ri)
                                }
                                ri.hxSerialize(this);
                                this.buf.b += "g"
                            } else {
                                this.buf.b += "c";
                                this.serializeString(kX.getClassName(rx));
                                if (this.useCache) {
                                    this.cache.push(ri)
                                }
                                this.serializeFields(ri)
                            }
                    }
                    break;
                case 4:
                    if (n0.__instanceof(ri, nq)) {
                        var rn = kX.getClassName(ri);
                        this.buf.b += "A";
                        this.serializeString(rn)
                    } else {
                        if (n0.__instanceof(ri, jo)) {
                            this.buf.b += "B";
                            this.serializeString(kX.getEnumName(ri))
                        } else {
                            if (this.useCache && this.serializeRef(ri)) {
                                return
                            }
                            this.buf.b += "o";
                            this.serializeFields(ri)
                        }
                    }
                    break;
                case 7:
                    var rs = rq[2];
                    if (this.useCache) {
                        if (this.serializeRef(ri)) {
                            return
                        }
                        this.cache.pop()
                    }
                    if (this.useEnumIndex) {
                        this.buf.b += "j"
                    } else {
                        this.buf.b += "w"
                    }
                    this.serializeString(kX.getEnumName(rs));
                    if (this.useEnumIndex) {
                        this.buf.b += ":";
                        this.buf.b += kr.string(ri[1])
                    } else {
                        this.serializeString(ri[0])
                    }
                    this.buf.b += ":";
                    var q3 = ri.length;
                    this.buf.b += kr.string(q3 - 2);
                    var rf = 2;
                    while (rf < q3) {
                        var q0 = rf++;
                        this.serialize(ri[q0])
                    }
                    if (this.useCache) {
                        this.cache.push(ri)
                    }
                    break;
                case 5:
                    throw new nM("Cannot serialize function");
                    break;
                default:
                    throw new nM("Cannot serialize " + kr.string(ri))
            }
        },
        __class__: ot
    };
    var og = function(i) {
        var q = this;
        this.id = window.setInterval(function() {
            q.run()
        }, i)
    };
    nt["haxe.Timer"] = og;
    og.__name__ = ["haxe", "Timer"];
    og.delay = function(i1, i) {
        var q = new og(i);
        q.run = function() {
            q.stop();
            i1()
        };
        return q
    };
    og.measure = function(i1, i2) {
        var q = og.stamp();
        var i = i1();
        eM.trace(og.stamp() - q + "s", i2);
        return i
    };
    og.stamp = function() {
        return new Date().getTime() / 1000
    };
    og.prototype = {
        id: null,
        stop: function() {
            if (this.id == null) {
                return
            }
            window.clearInterval(this.id);
            this.id = null
        },
        run: function() {},
        __class__: og
    };
    var ln = function(i) {
        this.buf = i;
        this.length = i.length;
        this.pos = 0;
        this.scache = [];
        this.cache = [];
        var q = ln.DEFAULT_RESOLVER;
        if (q == null) {
            q = kX;
            ln.DEFAULT_RESOLVER = q
        }
        this.setResolver(q)
    };
    nt["haxe.Unserializer"] = ln;
    ln.__name__ = ["haxe", "Unserializer"];
    ln.initCodes = function() {
        var q = [];
        var i2 = 0;
        var js = ln.BASE64.length;
        while (i2 < js) {
            var i1 = i2++;
            q[ln.BASE64.charCodeAt(i1)] = i1
        }
        return q
    };
    ln.run = function(i) {
        return new ln(i).unserialize()
    };
    ln.prototype = {
        buf: null,
        pos: null,
        length: null,
        cache: null,
        scache: null,
        resolver: null,
        setResolver: function(i) {
            if (i == null) {
                this.resolver = {
                    resolveClass: function(q) {
                        return null
                    },
                    resolveEnum: function(q) {
                        return null
                    }
                }
            } else {
                this.resolver = i
            }
        },
        get: function(i) {
            return this.buf.charCodeAt(i)
        },
        readDigits: function() {
            var q = 0;
            var i1 = false;
            var i = this.pos;
            while (true) {
                var i2 = this.buf.charCodeAt(this.pos);
                if (i2 != i2) {
                    break
                }
                if (i2 == 45) {
                    if (this.pos != i) {
                        break
                    }
                    i1 = true;
                    this.pos++;
                    continue
                }
                if (i2 < 48 || i2 > 57) {
                    break
                }
                q = q * 10 + (i2 - 48);
                this.pos++
            }
            if (i1) {
                q *= -1
            }
            return q
        },
        readFloat: function() {
            var i = this.pos;
            while (true) {
                var q = this.buf.charCodeAt(this.pos);
                if (q >= 43 && q < 58 || q == 101 || q == 69) {
                    this.pos++
                } else {
                    break
                }
            }
            return kr.parseFloat(cj.substr(this.buf, i, this.pos - i))
        },
        unserializeObject: function(i1) {
            while (true) {
                if (this.pos >= this.length) {
                    throw new nM("Invalid object")
                }
                if (this.buf.charCodeAt(this.pos) == 103) {
                    break
                }
                var q = this.unserialize();
                if (!(typeof(q) == "string")) {
                    throw new nM("Invalid object key")
                }
                var i = this.unserialize();
                i1[q] = i
            }
            this.pos++
        },
        unserializeEnum: function(q, i) {
            if (this.get(this.pos++) != 58) {
                throw new nM("Invalid enum format")
            }
            var i2 = this.readDigits();
            if (i2 == 0) {
                return kX.createEnum(q, i)
            }
            var i1 = [];
            while (i2-- > 0) {
                i1.push(this.unserialize())
            }
            return kX.createEnum(q, i, i1)
        },
        unserialize: function() {
            var rK = this.get(this.pos++);
            switch (rK) {
                case 110:
                    return null;
                case 116:
                    return true;
                case 102:
                    return false;
                case 122:
                    return 0;
                case 105:
                    return this.readDigits();
                case 100:
                    return this.readFloat();
                case 121:
                    var rb = this.readDigits();
                    if (this.get(this.pos++) != 58 || this.length - this.pos < rb) {
                        throw new nM("Invalid string length")
                    }
                    var rw = cj.substr(this.buf, this.pos, rb);
                    this.pos += rb;
                    rw = decodeURIComponent(rw.split("+").join(" "));
                    this.scache.push(rw);
                    return rw;
                case 107:
                    return NaN;
                case 109:
                    return -Infinity;
                case 112:
                    return Infinity;
                case 97:
                    var rc = this.buf;
                    var rR = [];
                    this.cache.push(rR);
                    while (true) {
                        var rP = this.buf.charCodeAt(this.pos);
                        if (rP == 104) {
                            this.pos++;
                            break
                        }
                        if (rP == 117) {
                            this.pos++;
                            var rB = this.readDigits();
                            rR[rR.length + rB - 1] = null
                        } else {
                            rR.push(this.unserialize())
                        }
                    }
                    return rR;
                case 111:
                    var rz = {};
                    this.cache.push(rz);
                    this.unserializeObject(rz);
                    return rz;
                case 114:
                    var rm = this.readDigits();
                    if (rm < 0 || rm >= this.cache.length) {
                        throw new nM("Invalid reference")
                    }
                    return this.cache[rm];
                case 82:
                    var rk = this.readDigits();
                    if (rk < 0 || rk >= this.scache.length) {
                        throw new nM("Invalid string reference")
                    }
                    return this.scache[rk];
                case 120:
                    throw new nM(this.unserialize());
                    break;
                case 99:
                    var q8 = this.unserialize();
                    var ri = this.resolver.resolveClass(q8);
                    if (ri == null) {
                        throw new nM("Class not found " + q8)
                    }
                    var q6 = kX.createEmptyInstance(ri);
                    this.cache.push(q6);
                    this.unserializeObject(q6);
                    return q6;
                case 119:
                    var rp = this.unserialize();
                    var q7 = this.resolver.resolveEnum(rp);
                    if (q7 == null) {
                        throw new nM("Enum not found " + rp)
                    }
                    var rL = this.unserializeEnum(q7, this.unserialize());
                    this.cache.push(rL);
                    return rL;
                case 106:
                    var ro = this.unserialize();
                    var rS = this.resolver.resolveEnum(ro);
                    if (rS == null) {
                        throw new nM("Enum not found " + ro)
                    }
                    this.pos++;
                    var rq = this.readDigits();
                    var ry = kX.getEnumConstructs(rS)[rq];
                    if (ry == null) {
                        throw new nM("Unknown enum index " + ro + "@" + rq)
                    }
                    var rf = this.unserializeEnum(rS, ry);
                    this.cache.push(rf);
                    return rf;
                case 108:
                    var rF = new oI();
                    this.cache.push(rF);
                    var rH = this.buf;
                    while (this.buf.charCodeAt(this.pos) != 104) {
                        rF.add(this.unserialize())
                    }
                    this.pos++;
                    return rF;
                case 98:
                    var rJ = new io();
                    this.cache.push(rJ);
                    var rG = this.buf;
                    while (this.buf.charCodeAt(this.pos) != 104) {
                        var rQ = this.unserialize();
                        rJ.set(rQ, this.unserialize())
                    }
                    this.pos++;
                    return rJ;
                case 113:
                    var rh = new c6();
                    this.cache.push(rh);
                    var rE = this.buf;
                    var q1 = this.get(this.pos++);
                    while (q1 == 58) {
                        var rI = this.readDigits();
                        rh.set(rI, this.unserialize());
                        q1 = this.get(this.pos++)
                    }
                    if (q1 != 104) {
                        throw new nM("Invalid IntMap format")
                    }
                    return rh;
                case 77:
                    var rg = new qS();
                    this.cache.push(rg);
                    var rD = this.buf;
                    while (this.buf.charCodeAt(this.pos) != 104) {
                        var rO = this.unserialize();
                        rg.set(rO, this.unserialize())
                    }
                    this.pos++;
                    return rg;
                case 118:
                    var rN;
                    if (this.buf.charCodeAt(this.pos) >= 48 && this.buf.charCodeAt(this.pos) <= 57 && this.buf.charCodeAt(this.pos + 1) >= 48 && this.buf.charCodeAt(this.pos + 1) <= 57 && this.buf.charCodeAt(this.pos + 2) >= 48 && this.buf.charCodeAt(this.pos + 2) <= 57 && this.buf.charCodeAt(this.pos + 3) >= 48 && this.buf.charCodeAt(this.pos + 3) <= 57 && this.buf.charCodeAt(this.pos + 4) == 45) {
                        var rM = cj.substr(this.buf, this.pos, 19);
                        rN = cj.strDate(rM);
                        this.pos += 19
                    } else {
                        var rv = this.readFloat();
                        var rC = new Date();
                        rC.setTime(rv);
                        rN = rC
                    }
                    this.cache.push(rN);
                    return rN;
                case 115:
                    var q3 = this.readDigits();
                    var rA = this.buf;
                    if (this.get(this.pos++) != 58 || this.length - this.pos < q3) {
                        throw new nM("Invalid bytes length")
                    }
                    var rs = ln.CODES;
                    if (rs == null) {
                        rs = ln.initCodes();
                        ln.CODES = rs
                    }
                    var q2 = this.pos;
                    var q9 = q3 & 3;
                    var q0;
                    q0 = (q3 >> 2) * 3 + (q9 >= 2 ? q9 - 1 : 0);
                    var rd = q2 + (q3 - q9);
                    var q5 = eg.alloc(q0);
                    var rx = 0;
                    while (q2 < rd) {
                        var i2 = rs[cP.fastCodeAt(rA, q2++)];
                        var qZ = rs[cP.fastCodeAt(rA, q2++)];
                        q5.set(rx++, i2 << 2 | qZ >> 4);
                        var qY = rs[cP.fastCodeAt(rA, q2++)];
                        q5.set(rx++, qZ << 4 | qY >> 2);
                        var js = rs[cP.fastCodeAt(rA, q2++)];
                        q5.set(rx++, qY << 6 | js)
                    }
                    if (q9 >= 2) {
                        var q = rs[cP.fastCodeAt(rA, q2++)];
                        var rr = rs[cP.fastCodeAt(rA, q2++)];
                        q5.set(rx++, q << 2 | rr >> 4);
                        if (q9 == 3) {
                            var ra = rs[cP.fastCodeAt(rA, q2++)];
                            q5.set(rx++, rr << 4 | ra >> 2)
                        }
                    }
                    this.pos += q3;
                    this.cache.push(q5);
                    return q5;
                case 67:
                    var rn = this.unserialize();
                    var ru = this.resolver.resolveClass(rn);
                    if (ru == null) {
                        throw new nM("Class not found " + rn)
                    }
                    var q4 = kX.createEmptyInstance(ru);
                    this.cache.push(q4);
                    q4.hxUnserialize(this);
                    if (this.get(this.pos++) != 103) {
                        throw new nM("Invalid custom data")
                    }
                    return q4;
                case 65:
                    var rl = this.unserialize();
                    var rt = this.resolver.resolveClass(rl);
                    if (rt == null) {
                        throw new nM("Class not found " + rl)
                    }
                    return rt;
                case 66:
                    var rj = this.unserialize();
                    var re = this.resolver.resolveEnum(rj);
                    if (re == null) {
                        throw new nM("Enum not found " + rj)
                    }
                    return re;
                default:
            }
            this.pos--;
            throw new nM("Invalid char " + this.buf.charAt(this.pos) + " at position " + this.pos)
        },
        __class__: ln
    };
    var gS = function() {
        this.a1 = 1;
        this.a2 = 0
    };
    nt["haxe.crypto.Adler32"] = gS;
    gS.__name__ = ["haxe", "crypto", "Adler32"];
    gS.read = function(i1) {
		console.log("ADLER")
        var q = new gS();
        var qZ = i1.readByte();
        var qY = i1.readByte();
        var js = i1.readByte();
        var i2 = i1.readByte();
        q.a1 = js << 8 | i2;
        q.a2 = qZ << 8 | qY;
        return q
    };
    gS.prototype = {
        a1: null,
        a2: null,
        update: function(q1, q0, js) {
            var i1 = this.a1;
            var i = this.a2;
            var qZ = q0;
            var i2 = q0 + js;
            while (qZ < i2) {
                var q = qZ++;
                var qY = q1.b[q];
                i1 = (i1 + qY) % 65521;
                i = (i + i1) % 65521
            }
            this.a1 = i1;
            this.a2 = i
        },
        equals: function(i) {
            return i.a1 == this.a1 && i.a2 == this.a2
        },
        __class__: gS
    };
    var eg = function(i) {
        this.length = i.byteLength;
        this.b = new qw(i);
        this.b.bufferValue = i;
        i.hxBytes = this;
        i.bytes = this.b
		console.log("BYTES");
    };
    nt["haxe.io.Bytes"] = eg;
    eg.__name__ = ["haxe", "io", "Bytes"];
    eg.alloc = function(i) {
        return new eg(new gf(i))
    };
    eg.ofString = function(i2) {
        var q = [];
        var i1 = 0;
        while (i1 < i2.length) {
            var js = cP.fastCodeAt(i2, i1++);
            if (55296 <= js && js <= 56319) {
                js = js - 55232 << 10 | cP.fastCodeAt(i2, i1++) & 1023
            }
            if (js <= 127) {
                q.push(js)
            } else {
                if (js <= 2047) {
                    q.push(192 | js >> 6);
                    q.push(128 | js & 63)
                } else {
                    if (js <= 65535) {
                        q.push(224 | js >> 12);
                        q.push(128 | js >> 6 & 63);
                        q.push(128 | js & 63)
                    } else {
                        q.push(240 | js >> 18);
                        q.push(128 | js >> 12 & 63);
                        q.push(128 | js >> 6 & 63);
                        q.push(128 | js & 63)
                    }
                }
            }
        }
        return new eg(new qw(q).buffer)
    };
    eg.ofData = function(i) {
		console.log(i);
        var q = i.hxBytes;
        if (q != null) {
            return q
        }
        return new eg(i)
    };
    eg.prototype = {
        length: null,
        b: null,
        data: null,
        get: function(i) {
            return this.b[i]
        },
        set: function(q, i) {
            this.b[q] = i & 255
        },
        blit: function(i2, i1, q, i) {
            if (i2 < 0 || q < 0 || i < 0 || i2 + i > this.length || q + i > i1.length) {
                throw new nM(dP.OutsideBounds)
            }
            if (q == 0 && i == i1.length) {
                this.b.set(i1.b, i2)
            } else {
                this.b.set(i1.b.subarray(q, q + i), i2)
            }
        },
        fill: function(qY, q, i2) {
            var js = 0;
            while (js < q) {
                var i1 = js++;
                this.set(qY++, i2)
            }
        },
        sub: function(q, i) {
            if (q < 0 || i < 0 || q + i > this.length) {
                throw new nM(dP.OutsideBounds)
            }
            return new eg(this.b.buffer.slice(q + this.b.byteOffset, q + this.b.byteOffset + i))
        },
        getDouble: function(i) {
            if (this.data == null) {
                this.data = new ip(this.b.buffer, this.b.byteOffset, this.b.byteLength)
            }
            return this.data.getFloat64(i, true)
        },
        getFloat: function(i) {
            if (this.data == null) {
                this.data = new ip(this.b.buffer, this.b.byteOffset, this.b.byteLength)
            }
            return this.data.getFloat32(i, true)
        },
        setDouble: function(q, i) {
            if (this.data == null) {
                this.data = new ip(this.b.buffer, this.b.byteOffset, this.b.byteLength)
            }
            this.data.setFloat64(q, i, true)
        },
        setFloat: function(q, i) {
            if (this.data == null) {
                this.data = new ip(this.b.buffer, this.b.byteOffset, this.b.byteLength)
            }
            this.data.setFloat32(q, i, true)
        },
        setUInt16: function(q, i) {
            if (this.data == null) {
                this.data = new ip(this.b.buffer, this.b.byteOffset, this.b.byteLength)
            }
            this.data.setUint16(q, i, true)
        },
        setInt32: function(q, i) {
            if (this.data == null) {
                this.data = new ip(this.b.buffer, this.b.byteOffset, this.b.byteLength)
            }
            this.data.setInt32(q, i, true)
        },
        getString: function(q0, qY) {
            if (q0 < 0 || qY < 0 || q0 + qY > this.length) {
                throw new nM(dP.OutsideBounds)
            }
            var q5 = "";
            var q1 = this.b;
            var i2 = String.fromCharCode;
            var js = q0;
            var q2 = q0 + qY;
            while (js < q2) {
                var qZ = q1[js++];
                if (qZ < 128) {
                    if (qZ == 0) {
                        break
                    }
                    q5 += i2(qZ)
                } else {
                    if (qZ < 224) {
                        q5 += i2((qZ & 63) << 6 | q1[js++] & 127)
                    } else {
                        if (qZ < 240) {
                            var i1 = q1[js++];
                            q5 += i2((qZ & 31) << 12 | (i1 & 127) << 6 | q1[js++] & 127)
                        } else {
                            var q4 = q1[js++];
                            var q = q1[js++];
                            var q3 = (qZ & 15) << 18 | (q4 & 127) << 12 | (q & 127) << 6 | q1[js++] & 127;
                            q5 += i2((q3 >> 10) + 55232);
                            q5 += i2(q3 & 1023 | 56320)
                        }
                    }
                }
            }
            return q5
        },
        toString: function() {
            return this.getString(0, this.length)
        },
        __class__: eg
    };
    var bv = function() {};
    nt["haxe.crypto.Base64"] = bv;
    bv.__name__ = ["haxe", "crypto", "Base64"];
    bv.decode = function(q, i) {
		console.log("BASE64")
        if (i == null) {
            i = true
        }
        if (i) {
            while (cj.cca(q, q.length - 1) == 61) {
                q = cj.substr(q, 0, -1)
            }
        }
        return new ha(bv.BYTES).decodeBytes(eg.ofString(q))
    };
    var ha = function(i1) {
        var i = i1.length;
        var q = 1;
        while (i > 1 << q) {
            q++
        }
        if (q > 8 || i != 1 << q) {
            throw new nM("BaseCode : base length must be a power of two.")
        }
        this.base = i1;
        this.nbits = q
		console.log("BASECODE");
    };
    nt["haxe.crypto.BaseCode"] = ha;
    ha.__name__ = ["haxe", "crypto", "BaseCode"];
    ha.prototype = {
        base: null,
        nbits: null,
        tbl: null,
        encodeBytes: function(q0) {
            var js = this.nbits;
            var q = this.base;
            var q1 = q0.length * 8 / js | 0;
            var qY = eg.alloc(q1 + (q0.length * 8 % js == 0 ? 0 : 1));
            var i2 = 0;
            var qZ = 0;
            var q2 = (1 << js) - 1;
            var i = 0;
            var i1 = 0;
            while (i1 < q1) {
                while (qZ < js) {
                    qZ += 8;
                    i2 <<= 8;
                    i2 |= q0.get(i++)
                }
                qZ -= js;
                qY.set(i1++, q.b[i2 >> qZ & q2])
            }
            if (qZ > 0) {
                qY.set(i1++, q.b[i2 << js - qZ & q2])
            }
            return qY
        },
        initTable: function() {
            var qZ = [];
            var q0 = 0;
            while (q0 < 256) {
                var q = q0++;
                qZ[q] = -1
            }
            var qY = 0;
            var js = this.base.length;
            while (qY < js) {
                var i2 = qY++;
                qZ[this.base.b[i2]] = i2
            }
            this.tbl = qZ
        },
        decodeBytes: function(q3) {
            var qY = this.nbits;
            var i1 = this.base;
            if (this.tbl == null) {
                this.initTable()
            }
            var q1 = this.tbl;
            var q4 = q3.length * qY >> 3;
            var qZ = eg.alloc(q4);
            var js = 0;
            var q2 = 0;
            var q = 0;
            var i2 = 0;
            while (i2 < q4) {
                while (q2 < 8) {
                    q2 += qY;
                    js <<= qY;
                    var q0 = q1[q3.get(q++)];
                    if (q0 == -1) {
                        throw new nM("BaseCode : invalid encoded char")
                    }
                    js |= q0
                }
                q2 -= 8;
                qZ.set(i2++, js >> q2 & 255)
            }
            return qZ
        },
        __class__: ha
    };
    var bJ = function() {
        this.crc = -1
    };
    nt["haxe.crypto.Crc32"] = bJ;
    bJ.__name__ = ["haxe", "crypto", "Crc32"];
    bJ.prototype = {
        crc: null,
        "byte": function(i) {
            var i1 = (this.crc ^ i) & 255;
            var i2 = 0;
            while (i2 < 8) {
                var q = i2++;
                if ((i1 & 1) == 1) {
                    i1 = i1 >>> 1 ^ -306674912
                } else {
                    i1 >>>= 1
                }
            }
            this.crc = this.crc >>> 8 ^ i1
        },
        update: function(q2, q1, qY) {
            var q3 = q2.b.bufferValue;
            var q0 = q1;
            var js = q1 + qY;
            while (q0 < js) {
                var i1 = q0++;
                var i2 = (this.crc ^ q3.bytes[i1]) & 255;
                var qZ = 0;
                while (qZ < 8) {
                    var q = qZ++;
                    if ((i2 & 1) == 1) {
                        i2 = i2 >>> 1 ^ -306674912
                    } else {
                        i2 >>>= 1
                    }
                }
                this.crc = this.crc >>> 8 ^ i2
            }
        },
        get: function() {
            return this.crc ^ -1
        },
        __class__: bJ
    };
    var b5 = function() {};
    nt["haxe.crypto.Md5"] = b5;
    b5.__name__ = ["haxe", "crypto", "Md5"];
    b5.encode = function(i1) {
        var i = new b5();
        var q = i.doEncode(b5.str2blks(i1));
        return i.hex(q)
    };
    b5.str2blks = function(q3) {
        var qZ = (q3.length + 8 >> 6) + 1;
        var q2 = [];
        var q = qZ * 16;
        var q1 = 0;
        while (q1 < q) {
            var qY = q1++;
            q2[qY] = 0
        }
        var q0 = 0;
        while (q0 < q3.length) {
            q2[q0 >> 2] |= cj.cca(q3, q0) << (q3.length * 8 + q0) % 4 * 8;
            q0++
        }
        q2[q0 >> 2] |= 128 << (q3.length * 8 + q0) % 4 * 8;
        var i2 = q3.length * 8;
        var js = qZ * 16 - 2;
        q2[js] = i2 & 255;
        q2[js] |= (i2 >>> 8 & 255) << 8;
        q2[js] |= (i2 >>> 16 & 255) << 16;
        q2[js] |= (i2 >>> 24 & 255) << 24;
        return q2
    };
    b5.prototype = {
        bitOR: function(q, i) {
            var i2 = q & 1 | i & 1;
            var i1 = q >>> 1 | i >>> 1;
            return i1 << 1 | i2
        },
        bitXOR: function(q, i) {
            var i2 = q & 1 ^ i & 1;
            var i1 = q >>> 1 ^ i >>> 1;
            return i1 << 1 | i2
        },
        bitAND: function(q, i) {
            var i2 = q & 1 & (i & 1);
            var i1 = q >>> 1 & i >>> 1;
            return i1 << 1 | i2
        },
        addme: function(i, i2) {
            var i1 = (i & 65535) + (i2 & 65535);
            var q = (i >> 16) + (i2 >> 16) + (i1 >> 16);
            return q << 16 | i1 & 65535
        },
        hex: function(i) {
            var qZ = "";
            var js = "0123456789abcdef";
            var qY = 0;
            while (qY < i.length) {
                var i1 = i[qY];
                ++qY;
                var i2 = 0;
                while (i2 < 4) {
                    var q = i2++;
                    qZ += js.charAt(i1 >> q * 8 + 4 & 15) + js.charAt(i1 >> q * 8 & 15)
                }
            }
            return qZ
        },
        rol: function(i, q) {
            return i << q | i >>> 32 - q
        },
        cmn: function(qZ, i2, i1, i, qY, js) {
            return this.addme(this.rol(this.addme(this.addme(i2, qZ), this.addme(i, js)), qY), i1)
        },
        ff: function(i1, q, qZ, qY, i, js, i2) {
            return this.cmn(this.bitOR(this.bitAND(q, qZ), this.bitAND(~q, qY)), i1, q, i, js, i2)
        },
        gg: function(i1, q, qZ, qY, i, js, i2) {
            return this.cmn(this.bitOR(this.bitAND(q, qY), this.bitAND(qZ, ~qY)), i1, q, i, js, i2)
        },
        hh: function(i1, q, qZ, qY, i, js, i2) {
            return this.cmn(this.bitXOR(this.bitXOR(q, qZ), qY), i1, q, i, js, i2)
        },
        ii: function(i1, q, qZ, qY, i, js, i2) {
            return this.cmn(this.bitXOR(qZ, this.bitOR(q, ~qY)), i1, q, i, js, i2)
        },
        doEncode: function(q4) {
            var q3 = 1732584193;
            var q2 = -271733879;
            var q1 = -1732584194;
            var q0 = 271733878;
            var q;
            var js = 0;
            while (js < q4.length) {
                var qZ = q3;
                var qY = q2;
                var i2 = q1;
                var i1 = q0;
                q = 0;
                q3 = this.ff(q3, q2, q1, q0, q4[js], 7, -680876936);
                q0 = this.ff(q0, q3, q2, q1, q4[js + 1], 12, -389564586);
                q1 = this.ff(q1, q0, q3, q2, q4[js + 2], 17, 606105819);
                q2 = this.ff(q2, q1, q0, q3, q4[js + 3], 22, -1044525330);
                q3 = this.ff(q3, q2, q1, q0, q4[js + 4], 7, -176418897);
                q0 = this.ff(q0, q3, q2, q1, q4[js + 5], 12, 1200080426);
                q1 = this.ff(q1, q0, q3, q2, q4[js + 6], 17, -1473231341);
                q2 = this.ff(q2, q1, q0, q3, q4[js + 7], 22, -45705983);
                q3 = this.ff(q3, q2, q1, q0, q4[js + 8], 7, 1770035416);
                q0 = this.ff(q0, q3, q2, q1, q4[js + 9], 12, -1958414417);
                q1 = this.ff(q1, q0, q3, q2, q4[js + 10], 17, -42063);
                q2 = this.ff(q2, q1, q0, q3, q4[js + 11], 22, -1990404162);
                q3 = this.ff(q3, q2, q1, q0, q4[js + 12], 7, 1804603682);
                q0 = this.ff(q0, q3, q2, q1, q4[js + 13], 12, -40341101);
                q1 = this.ff(q1, q0, q3, q2, q4[js + 14], 17, -1502002290);
                q2 = this.ff(q2, q1, q0, q3, q4[js + 15], 22, 1236535329);
                q3 = this.gg(q3, q2, q1, q0, q4[js + 1], 5, -165796510);
                q0 = this.gg(q0, q3, q2, q1, q4[js + 6], 9, -1069501632);
                q1 = this.gg(q1, q0, q3, q2, q4[js + 11], 14, 643717713);
                q2 = this.gg(q2, q1, q0, q3, q4[js], 20, -373897302);
                q3 = this.gg(q3, q2, q1, q0, q4[js + 5], 5, -701558691);
                q0 = this.gg(q0, q3, q2, q1, q4[js + 10], 9, 38016083);
                q1 = this.gg(q1, q0, q3, q2, q4[js + 15], 14, -660478335);
                q2 = this.gg(q2, q1, q0, q3, q4[js + 4], 20, -405537848);
                q3 = this.gg(q3, q2, q1, q0, q4[js + 9], 5, 568446438);
                q0 = this.gg(q0, q3, q2, q1, q4[js + 14], 9, -1019803690);
                q1 = this.gg(q1, q0, q3, q2, q4[js + 3], 14, -187363961);
                q2 = this.gg(q2, q1, q0, q3, q4[js + 8], 20, 1163531501);
                q3 = this.gg(q3, q2, q1, q0, q4[js + 13], 5, -1444681467);
                q0 = this.gg(q0, q3, q2, q1, q4[js + 2], 9, -51403784);
                q1 = this.gg(q1, q0, q3, q2, q4[js + 7], 14, 1735328473);
                q2 = this.gg(q2, q1, q0, q3, q4[js + 12], 20, -1926607734);
                q3 = this.hh(q3, q2, q1, q0, q4[js + 5], 4, -378558);
                q0 = this.hh(q0, q3, q2, q1, q4[js + 8], 11, -2022574463);
                q1 = this.hh(q1, q0, q3, q2, q4[js + 11], 16, 1839030562);
                q2 = this.hh(q2, q1, q0, q3, q4[js + 14], 23, -35309556);
                q3 = this.hh(q3, q2, q1, q0, q4[js + 1], 4, -1530992060);
                q0 = this.hh(q0, q3, q2, q1, q4[js + 4], 11, 1272893353);
                q1 = this.hh(q1, q0, q3, q2, q4[js + 7], 16, -155497632);
                q2 = this.hh(q2, q1, q0, q3, q4[js + 10], 23, -1094730640);
                q3 = this.hh(q3, q2, q1, q0, q4[js + 13], 4, 681279174);
                q0 = this.hh(q0, q3, q2, q1, q4[js], 11, -358537222);
                q1 = this.hh(q1, q0, q3, q2, q4[js + 3], 16, -722521979);
                q2 = this.hh(q2, q1, q0, q3, q4[js + 6], 23, 76029189);
                q3 = this.hh(q3, q2, q1, q0, q4[js + 9], 4, -640364487);
                q0 = this.hh(q0, q3, q2, q1, q4[js + 12], 11, -421815835);
                q1 = this.hh(q1, q0, q3, q2, q4[js + 15], 16, 530742520);
                q2 = this.hh(q2, q1, q0, q3, q4[js + 2], 23, -995338651);
                q3 = this.ii(q3, q2, q1, q0, q4[js], 6, -198630844);
                q0 = this.ii(q0, q3, q2, q1, q4[js + 7], 10, 1126891415);
                q1 = this.ii(q1, q0, q3, q2, q4[js + 14], 15, -1416354905);
                q2 = this.ii(q2, q1, q0, q3, q4[js + 5], 21, -57434055);
                q3 = this.ii(q3, q2, q1, q0, q4[js + 12], 6, 1700485571);
                q0 = this.ii(q0, q3, q2, q1, q4[js + 3], 10, -1894986606);
                q1 = this.ii(q1, q0, q3, q2, q4[js + 10], 15, -1051523);
                q2 = this.ii(q2, q1, q0, q3, q4[js + 1], 21, -2054922799);
                q3 = this.ii(q3, q2, q1, q0, q4[js + 8], 6, 1873313359);
                q0 = this.ii(q0, q3, q2, q1, q4[js + 15], 10, -30611744);
                q1 = this.ii(q1, q0, q3, q2, q4[js + 6], 15, -1560198380);
                q2 = this.ii(q2, q1, q0, q3, q4[js + 13], 21, 1309151649);
                q3 = this.ii(q3, q2, q1, q0, q4[js + 4], 6, -145523070);
                q0 = this.ii(q0, q3, q2, q1, q4[js + 11], 10, -1120210379);
                q1 = this.ii(q1, q0, q3, q2, q4[js + 2], 15, 718787259);
                q2 = this.ii(q2, q1, q0, q3, q4[js + 9], 21, -343485551);
                q3 = this.addme(q3, qZ);
                q2 = this.addme(q2, qY);
                q1 = this.addme(q1, i2);
                q0 = this.addme(q0, i1);
                js += 16
            }
            return [q3, q2, q1, q0]
        },
        __class__: b5
    };
    var dh = function() {};
    nt["haxe.ds.BalancedTree"] = dh;
    dh.__name__ = ["haxe", "ds", "BalancedTree"];
    dh.prototype = {
        root: null,
        set: function(i, q) {
            this.root = this.setLoop(i, q, this.root)
        },
        get: function(i) {
            var q = this.root;
            while (q != null) {
                var i1 = this.compare(i, q.key);
                if (i1 == 0) {
                    return q.value
                }
                if (i1 < 0) {
                    q = q.left
                } else {
                    q = q.right
                }
            }
            return null
        },
        remove: function(i) {
            try {
                this.root = this.removeLoop(i, this.root);
                return true
            } catch (q) {
                lF.lastException = q;
                if (q instanceof nM) {
                    q = q.val
                }
                if (n0.__instanceof(q, String)) {
                    return false
                } else {
                    throw (q)
                }
            }
        },
        exists: function(i) {
            var q = this.root;
            while (q != null) {
                var i1 = this.compare(i, q.key);
                if (i1 == 0) {
                    return true
                } else {
                    if (i1 < 0) {
                        q = q.left
                    } else {
                        q = q.right
                    }
                }
            }
            return false
        },
        iterator: function() {
            var i = [];
            this.iteratorLoop(this.root, i);
            return cj.iter(i)
        },
        keys: function() {
            var i = [];
            this.keysLoop(this.root, i);
            return cj.iter(i)
        },
        setLoop: function(i1, q, js) {
            if (js == null) {
                return new nX(null, i1, q, null)
            }
            var qY = this.compare(i1, js.key);
            if (qY == 0) {
                return new nX(js.left, i1, q, js.right, js == null ? 0 : js._height)
            } else {
                if (qY < 0) {
                    var i = this.setLoop(i1, q, js.left);
                    return this.balance(i, js.key, js.value, js.right)
                } else {
                    var i2 = this.setLoop(i1, q, js.right);
                    return this.balance(js.left, js.key, js.value, i2)
                }
            }
        },
        removeLoop: function(i, q) {
            if (q == null) {
                throw new nM("Not_found")
            }
            var i1 = this.compare(i, q.key);
            if (i1 == 0) {
                return this.merge(q.left, q.right)
            } else {
                if (i1 < 0) {
                    return this.balance(this.removeLoop(i, q.left), q.key, q.value, q.right)
                } else {
                    return this.balance(q.left, q.key, q.value, this.removeLoop(i, q.right))
                }
            }
        },
        iteratorLoop: function(i, q) {
            if (i != null) {
                this.iteratorLoop(i.left, q);
                q.push(i.value);
                this.iteratorLoop(i.right, q)
            }
        },
        keysLoop: function(i, q) {
            if (i != null) {
                this.keysLoop(i.left, q);
                q.push(i.key);
                this.keysLoop(i.right, q)
            }
        },
        merge: function(i1, q) {
            if (i1 == null) {
                return q
            }
            if (q == null) {
                return i1
            }
            var i = this.minBinding(q);
            return this.balance(i1, i.key, i.value, this.removeMinBinding(q))
        },
        minBinding: function(i) {
            if (i == null) {
                throw new nM("Not_found")
            } else {
                if (i.left == null) {
                    return i
                } else {
                    return this.minBinding(i.left)
                }
            }
        },
        removeMinBinding: function(i) {
            if (i.left == null) {
                return i.right
            } else {
                return this.balance(this.removeMinBinding(i.left), i.key, i.value, i.right)
            }
        },
        balance: function(q, i2, i1, qY) {
            var i;
            if (q == null) {
                i = 0
            } else {
                i = q._height
            }
            var js;
            if (qY == null) {
                js = 0
            } else {
                js = qY._height
            }
            if (i > js + 2) {
                if ((function(q0) {
                        var qZ;
                        var q1 = q.left;
                        qZ = q1 == null ? 0 : q1._height;
                        return qZ
                    }(this)) >= (function(q1) {
                        var qZ;
                        var q0 = q.right;
                        qZ = q0 == null ? 0 : q0._height;
                        return qZ
                    }(this))) {
                    return new nX(q.left, q.key, q.value, new nX(q.right, i2, i1, qY))
                } else {
                    return new nX(new nX(q.left, q.key, q.value, q.right.left), q.right.key, q.right.value, new nX(q.right.right, i2, i1, qY))
                }
            } else {
                if (js > i + 2) {
                    if ((function(q1) {
                            var qZ;
                            var q0 = qY.right;
                            qZ = q0 == null ? 0 : q0._height;
                            return qZ
                        }(this)) > (function(q1) {
                            var qZ;
                            var q0 = qY.left;
                            qZ = q0 == null ? 0 : q0._height;
                            return qZ
                        }(this))) {
                        return new nX(new nX(q, i2, i1, qY.left), qY.key, qY.value, qY.right)
                    } else {
                        return new nX(new nX(q, i2, i1, qY.left.left), qY.left.key, qY.left.value, new nX(qY.left.right, qY.key, qY.value, qY.right))
                    }
                } else {
                    return new nX(q, i2, i1, qY, (i > js ? i : js) + 1)
                }
            }
        },
        compare: function(q, i) {
            return ar.compare(q, i)
        },
        __class__: dh
    };
    var nX = function(i, i1, q, js, i2) {
        if (i2 == null) {
            i2 = -1
        }
        this.left = i;
        this.key = i1;
        this.value = q;
        this.right = js;
        if (i2 == -1) {
            this._height = ((function(qZ) {
                var qY;
                var q0 = qZ.left;
                qY = q0 == null ? 0 : q0._height;
                return qY
            }(this)) > (function(q0) {
                var qY;
                var qZ = q0.right;
                qY = qZ == null ? 0 : qZ._height;
                return qY
            }(this)) ? (function(q0) {
                var qY;
                var qZ = q0.left;
                qY = qZ == null ? 0 : qZ._height;
                return qY
            }(this)) : (function(q0) {
                var qY;
                var qZ = q0.right;
                qY = qZ == null ? 0 : qZ._height;
                return qY
            }(this))) + 1
        } else {
            this._height = i2
        }
    };
    nt["haxe.ds.TreeNode"] = nX;
    nX.__name__ = ["haxe", "ds", "TreeNode"];
    nX.prototype = {
        left: null,
        right: null,
        key: null,
        value: null,
        _height: null,
        __class__: nX
    };
    var kz = function() {
        dh.call(this)
    };
    nt["haxe.ds.EnumValueMap"] = kz;
    kz.__name__ = ["haxe", "ds", "EnumValueMap"];
    kz.__interfaces__ = [kG];
    kz.__super__ = dh;
    kz.prototype = lP(dh.prototype, {
        compare: function(js, i2) {
            var i1 = js[1] - i2[1];
            if (i1 != 0) {
                return i1
            }
            var q = js.slice(2);
            var i = i2.slice(2);
            if (q.length == 0 && i.length == 0) {
                return 0
            }
            return this.compareArgs(q, i)
        },
        compareArgs: function(i1, q) {
            var js = i1.length - q.length;
            if (js != 0) {
                return js
            }
            var qY = 0;
            var q0 = i1.length;
            while (qY < q0) {
                var i2 = qY++;
                var qZ = this.compareArg(i1[i2], q[i2]);
                if (qZ != 0) {
                    return qZ
                }
            }
            return 0
        },
        compareArg: function(q, i) {
            if (ar.isEnumValue(q) && ar.isEnumValue(i)) {
                return this.compare(q, i)
            } else {
                if ((q instanceof Array) && q.__enum__ == null && ((i instanceof Array) && i.__enum__ == null)) {
                    return this.compareArgs(q, i)
                } else {
                    return ar.compare(q, i)
                }
            }
        },
        __class__: kz
    });
    var c6 = function() {
        this.h = {}
    };
    nt["haxe.ds.IntMap"] = c6;
    c6.__name__ = ["haxe", "ds", "IntMap"];
    c6.__interfaces__ = [kG];
    c6.prototype = {
        h: null,
        set: function(i, q) {
            this.h[i] = q
        },
        remove: function(i) {
            if (!this.h.hasOwnProperty(i)) {
                return false
            }
            delete(this.h[i]);
            return true
        },
        keys: function() {
            var i = [];
            for (var q in this.h) {
                if (this.h.hasOwnProperty(q)) {
                    i.push(q | 0)
                }
            }
            return cj.iter(i)
        },
        iterator: function() {
            return {
                ref: this.h,
                it: this.keys(),
                hasNext: function() {
                    return this.it.hasNext()
                },
                next: function() {
                    var q = this.it.next();
                    return this.ref[q]
                }
            }
        },
        __class__: c6
    };
    var qS = function() {
        this.h = {};
        this.h.__keys__ = {}
    };
    nt["haxe.ds.ObjectMap"] = qS;
    qS.__name__ = ["haxe", "ds", "ObjectMap"];
    qS.__interfaces__ = [kG];
    qS.prototype = {
        h: null,
        set: function(i, q) {
            var i1 = i.__id__ || (i.__id__ = ++qS.count);
            this.h[i1] = q;
            this.h.__keys__[i1] = i
        },
        remove: function(i) {
            var q = i.__id__;
            if (this.h.__keys__[q] == null) {
                return false
            }
            delete(this.h[q]);
            delete(this.h.__keys__[q]);
            return true
        },
        keys: function() {
            var i = [];
            for (var q in this.h.__keys__) {
                if (this.h.hasOwnProperty(q)) {
                    i.push(this.h.__keys__[q])
                }
            }
            return cj.iter(i)
        },
        iterator: function() {
            return {
                ref: this.h,
                it: this.keys(),
                hasNext: function() {
                    return this.it.hasNext()
                },
                next: function() {
                    var q = this.it.next();
                    return this.ref[q.__id__]
                }
            }
        },
        __class__: qS
    };
    var kC = nt["haxe.ds.Option"] = {
        __ename__: ["haxe", "ds", "Option"],
        __constructs__: ["Some", "None"]
    };
    kC.Some = function(i) {
        var q = ["Some", 0, i];
        q.__enum__ = kC;
        q.toString = ea;
        return q
    };
    kC.None = ["None", 1];
    kC.None.toString = ea;
    kC.None.__enum__ = kC;
    var S = function(q, i) {
        this.map = q;
        this.keys = i;
        this.index = 0;
        this.count = i.length
    };
    nt["haxe.ds._StringMap.StringMapIterator"] = S;
    S.__name__ = ["haxe", "ds", "_StringMap", "StringMapIterator"];
    S.prototype = {
        map: null,
        keys: null,
        index: null,
        count: null,
        hasNext: function() {
            return this.index < this.count
        },
        next: function() {
            return this.map.get(this.keys[this.index++])
        },
        __class__: S
    };
    var io = function() {
        this.h = {}
    };
    nt["haxe.ds.StringMap"] = io;
    io.__name__ = ["haxe", "ds", "StringMap"];
    io.__interfaces__ = [kG];
    io.prototype = {
        h: null,
        rh: null,
        set: function(i, q) {
            if (pN[i] != null) {
                this.setReserved(i, q)
            } else {
                this.h[i] = q
            }
        },
        get: function(i) {
            if (pN[i] != null) {
                return this.getReserved(i)
            }
            return this.h[i]
        },
        exists: function(i) {
            if (pN[i] != null) {
                return this.existsReserved(i)
            }
            return this.h.hasOwnProperty(i)
        },
        setReserved: function(i, q) {
            if (this.rh == null) {
                this.rh = {}
            }
            this.rh["$" + i] = q
        },
        getReserved: function(i) {
            if (this.rh == null) {
                return null
            } else {
                return this.rh["$" + i]
            }
        },
        existsReserved: function(i) {
            if (this.rh == null) {
                return false
            }
            return this.rh.hasOwnProperty("$" + i)
        },
        remove: function(i) {
            if (pN[i] != null) {
                i = "$" + i;
                if (this.rh == null || !this.rh.hasOwnProperty(i)) {
                    return false
                }
                delete(this.rh[i]);
                return true
            } else {
                if (!this.h.hasOwnProperty(i)) {
                    return false
                }
                delete(this.h[i]);
                return true
            }
        },
        keys: function() {
            var i = this.arrayKeys();
            return cj.iter(i)
        },
        arrayKeys: function() {
            var i = [];
            for (var q in this.h) {
                if (this.h.hasOwnProperty(q)) {
                    i.push(q)
                }
            }
            if (this.rh != null) {
                for (var q in this.rh) {
                    if (q.charCodeAt(0) == 36) {
                        i.push(q.substr(1))
                    }
                }
            }
            return i
        },
        iterator: function() {
            return new S(this, this.arrayKeys())
        },
        __class__: io
    };
    var dQ = {};
    nt["haxe.ds._Vector.Vector_Impl_"] = dQ;
    dQ.__name__ = ["haxe", "ds", "_Vector", "Vector_Impl_"];
    dQ.blit = function(q0, qY, i2, i1, q) {
        var qZ = 0;
        while (qZ < q) {
            var js = qZ++;
            i2[i1 + js] = q0[qY + js]
        }
    };
    dQ.toArray = function(i2) {
        var i1 = [];
        var q = i2.length;
        var qY = 0;
        while (qY < q) {
            var js = qY++;
            i1[js] = i2[js]
        }
        return i1
    };
    var dB = function(i) {
        this.str = i;
        this.pos = 0
    };
    nt["haxe.format.JsonParser"] = dB;
    dB.__name__ = ["haxe", "format", "JsonParser"];
    dB.prototype = {
        str: null,
        pos: null,
        parseRec: function() {
            while (true) {
                var q1 = cP.fastCodeAt(this.str, this.pos++);
                switch (q1) {
                    case 32:
                    case 13:
                    case 10:
                    case 9:
                        break;
                    case 123:
                        var js = {};
                        var q2 = null;
                        var q3 = null;
                        while (true) {
                            var qY = cP.fastCodeAt(this.str, this.pos++);
                            switch (qY) {
                                case 32:
                                case 13:
                                case 10:
                                case 9:
                                    break;
                                case 125:
                                    if (q2 != null || q3 == false) {
                                        this.invalidChar()
                                    }
                                    return js;
                                case 58:
                                    if (q2 == null) {
                                        this.invalidChar()
                                    }
                                    ar.setField(js, q2, this.parseRec());
                                    q2 = null;
                                    q3 = true;
                                    break;
                                case 44:
                                    if (q3) {
                                        q3 = false
                                    } else {
                                        this.invalidChar()
                                    }
                                    break;
                                case 34:
                                    if (q3) {
                                        this.invalidChar()
                                    }
                                    q2 = this.parseString();
                                    break;
                                default:
                                    this.invalidChar()
                            }
                        }
                        break;
                    case 91:
                        var qZ = [];
                        var i1 = null;
                        while (true) {
                            var i2 = cP.fastCodeAt(this.str, this.pos++);
                            switch (i2) {
                                case 32:
                                case 13:
                                case 10:
                                case 9:
                                    break;
                                case 93:
                                    if (i1 == false) {
                                        this.invalidChar()
                                    }
                                    return qZ;
                                case 44:
                                    if (i1) {
                                        i1 = false
                                    } else {
                                        this.invalidChar()
                                    }
                                    break;
                                default:
                                    if (i1) {
                                        this.invalidChar()
                                    }
                                    this.pos--;
                                    qZ.push(this.parseRec());
                                    i1 = true
                            }
                        }
                        break;
                    case 116:
                        var q0 = this.pos;
                        if (cP.fastCodeAt(this.str, this.pos++) != 114 || cP.fastCodeAt(this.str, this.pos++) != 117 || cP.fastCodeAt(this.str, this.pos++) != 101) {
                            this.pos = q0;
                            this.invalidChar()
                        }
                        return true;
                    case 102:
                        var q = this.pos;
                        if (cP.fastCodeAt(this.str, this.pos++) != 97 || cP.fastCodeAt(this.str, this.pos++) != 108 || cP.fastCodeAt(this.str, this.pos++) != 115 || cP.fastCodeAt(this.str, this.pos++) != 101) {
                            this.pos = q;
                            this.invalidChar()
                        }
                        return false;
                    case 110:
                        var i = this.pos;
                        if (cP.fastCodeAt(this.str, this.pos++) != 117 || cP.fastCodeAt(this.str, this.pos++) != 108 || cP.fastCodeAt(this.str, this.pos++) != 108) {
                            this.pos = i;
                            this.invalidChar()
                        }
                        return null;
                    case 34:
                        return this.parseString();
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 45:
                        return this.parseNumber(q1);
                    default:
                        this.invalidChar()
                }
            }
        },
        parseString: function() {
            var i2 = this.pos;
            var q = null;
            while (true) {
                var i1 = cP.fastCodeAt(this.str, this.pos++);
                if (i1 == 34) {
                    break
                }
                if (i1 == 92) {
                    if (q == null) {
                        q = new jT()
                    }
                    q.addSub(this.str, i2, this.pos - i2 - 1);
                    i1 = cP.fastCodeAt(this.str, this.pos++);
                    switch (i1) {
                        case 114:
                            q.b += "\r";
                            break;
                        case 110:
                            q.b += "\n";
                            break;
                        case 116:
                            q.b += "\t";
                            break;
                        case 98:
                            q.b += "\x08";
                            break;
                        case 102:
                            q.b += "\x0C";
                            break;
                        case 47:
                        case 92:
                        case 34:
                            q.b += String.fromCharCode(i1);
                            break;
                        case 117:
                            var i = kr.parseInt("0x" + cj.substr(this.str, this.pos, 4));
                            this.pos += 4;
                            q.b += String.fromCharCode(i);
                            break;
                        default:
                            throw new nM("Invalid escape sequence \\" + String.fromCharCode(i1) + " at position " + (this.pos - 1))
                    }
                    i2 = this.pos
                } else {
                    if (i1 != i1) {
                        throw new nM("Unclosed string")
                    }
                }
            }
            if (q == null) {
                return cj.substr(this.str, i2, this.pos - i2 - 1)
            } else {
                q.addSub(this.str, i2, this.pos - i2 - 1);
                return q.b
            }
        },
        parseNumber: function(q2) {
            var q = this.pos - 1;
            var js = q2 == 45;
            var q3 = !js;
            var q1 = q2 == 48;
            var q4 = false;
            var q0 = false;
            var i1 = false;
            var i2 = false;
            while (true) {
                q2 = cP.fastCodeAt(this.str, this.pos++);
                switch (q2) {
                    case 48:
                        if (q1 && !q4) {
                            this.invalidNumber(q)
                        }
                        if (js) {
                            js = false;
                            q1 = true
                        }
                        q3 = true;
                        break;
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                        if (q1 && !q4) {
                            this.invalidNumber(q)
                        }
                        if (js) {
                            js = false
                        }
                        q3 = true;
                        q1 = false;
                        break;
                    case 46:
                        if (js || q4) {
                            this.invalidNumber(q)
                        }
                        q3 = false;
                        q4 = true;
                        break;
                    case 101:
                    case 69:
                        if (js || q1 || q0) {
                            this.invalidNumber(q)
                        }
                        q3 = false;
                        q0 = true;
                        break;
                    case 43:
                    case 45:
                        if (!q0 || i1) {
                            this.invalidNumber(q)
                        }
                        q3 = false;
                        i1 = true;
                        break;
                    default:
                        if (!q3) {
                            this.invalidNumber(q)
                        }
                        this.pos--;
                        i2 = true
                }
                if (i2) {
                    break
                }
            }
            var qZ = kr.parseFloat(cj.substr(this.str, q, this.pos - q));
            var qY = qZ | 0;
            if (qY == qZ) {
                return qY
            } else {
                return qZ
            }
        },
        invalidChar: function() {
            this.pos--;
            throw new nM("Invalid char " + this.str.charCodeAt(this.pos) + " at position " + this.pos)
        },
        invalidNumber: function(i) {
            throw new nM("Invalid number at position " + i + ": " + cj.substr(this.str, i, this.pos - i))
        },
        __class__: dB
    };
    var s = function(i, q) {
        this.replacer = i;
        this.indent = q;
        this.pretty = q != null;
        this.nind = 0;
        this.buf = new jT()
    };
    nt["haxe.format.JsonPrinter"] = s;
    s.__name__ = ["haxe", "format", "JsonPrinter"];
    s.print = function(i2, i, i1) {
        var q = new s(i, i1);
        q.write("", i2);
        return q.buf.b
    };
    s.prototype = {
        buf: null,
        replacer: null,
        indent: null,
        pretty: null,
        nind: null,
        ipad: function() {
            if (this.pretty) {
                var i = cP.lpad("", this.indent, this.nind * this.indent.length);
                if (i == null) {
                    this.buf.b += "null"
                } else {
                    this.buf.b += "" + i
                }
            }
        },
        write: function(q8, q4) {
            if (this.replacer != null) {
                q4 = this.replacer(q8, q4)
            }
            var q1 = kX["typeof"](q4);
            switch (q1[1]) {
                case 8:
                    this.buf.b += '"???"';
                    break;
                case 4:
                    this.fieldsString(q4, ar.fields(q4));
                    break;
                case 1:
                    var q0 = q4;
                    if (q0 == null) {
                        this.buf.b += "null"
                    } else {
                        this.buf.b += "" + q0
                    }
                    break;
                case 2:
                    var qZ;
                    if ((function(re) {
                            var i;
                            var i1 = q4;
                            i = isFinite(i1);
                            return i
                        }(this))) {
                        qZ = q4
                    } else {
                        qZ = "null"
                    }
                    if (qZ == null) {
                        this.buf.b += "null"
                    } else {
                        this.buf.b += "" + qZ
                    }
                    break;
                case 5:
                    this.buf.b += '"<fun>"';
                    break;
                case 6:
                    var rb = q1[2];
                    if (rb == String) {
                        this.quote(q4)
                    } else {
                        if (rb == Array) {
                            var qY = q4;
                            this.buf.b += "[";
                            var ra = qY.length;
                            var q3 = ra - 1;
                            var q5 = 0;
                            while (q5 < ra) {
                                var q9 = q5++;
                                if (q9 > 0) {
                                    this.buf.b += ","
                                } else {
                                    this.nind++
                                }
                                if (this.pretty) {
                                    this.buf.b += "\n"
                                }
                                this.ipad();
                                this.write(q9, qY[q9]);
                                if (q9 == q3) {
                                    this.nind--;
                                    if (this.pretty) {
                                        this.buf.b += "\n"
                                    }
                                    this.ipad()
                                }
                            }
                            this.buf.b += "]"
                        } else {
                            if (rb == io) {
                                var js = q4;
                                var q6 = {};
                                var rc = js.keys();
                                while (rc.hasNext()) {
                                    var q2 = rc.next();
                                    ar.setField(q6, q2, pN[q2] != null ? js.getReserved(q2) : js.h[q2])
                                }
                                this.fieldsString(q6, ar.fields(q6))
                            } else {
                                if (rb == Date) {
                                    var i2 = q4;
                                    this.quote(cj.dateStr(i2))
                                } else {
                                    this.fieldsString(q4, ar.fields(q4))
                                }
                            }
                        }
                    }
                    break;
                case 7:
                    var q7 = kX.enumIndex(q4);
                    var q = q7;
                    if (q == null) {
                        this.buf.b += "null"
                    } else {
                        this.buf.b += "" + q
                    }
                    break;
                case 3:
                    var rd = q4;
                    if (rd == null) {
                        this.buf.b += "null"
                    } else {
                        this.buf.b += "" + rd
                    }
                    break;
                case 0:
                    this.buf.b += "null";
                    break
            }
        },
        fieldsString: function(q2, js) {
            this.buf.b += "{";
            var qZ = js.length;
            var q1 = qZ - 1;
            var i1 = true;
            var i2 = 0;
            while (i2 < qZ) {
                var q = i2++;
                var qY = js[q];
                var q0 = ar.field(q2, qY);
                if (ar.isFunction(q0)) {
                    continue
                }
                if (i1) {
                    this.nind++;
                    i1 = false
                } else {
                    this.buf.b += ","
                }
                if (this.pretty) {
                    this.buf.b += "\n"
                }
                this.ipad();
                this.quote(qY);
                this.buf.b += ":";
                if (this.pretty) {
                    this.buf.b += " "
                }
                this.write(qY, q0);
                if (q == q1) {
                    this.nind--;
                    if (this.pretty) {
                        this.buf.b += "\n"
                    }
                    this.ipad()
                }
            }
            this.buf.b += "}"
        },
        quote: function(i1) {
            this.buf.b += '"';
            var q = 0;
            while (true) {
                var i2 = cP.fastCodeAt(i1, q++);
                if (i2 != i2) {
                    break
                }
                switch (i2) {
                    case 34:
                        this.buf.b += '\\"';
                        break;
                    case 92:
                        this.buf.b += "\\\\";
                        break;
                    case 10:
                        this.buf.b += "\\n";
                        break;
                    case 13:
                        this.buf.b += "\\r";
                        break;
                    case 9:
                        this.buf.b += "\\t";
                        break;
                    case 8:
                        this.buf.b += "\\b";
                        break;
                    case 12:
                        this.buf.b += "\\f";
                        break;
                    default:
                        this.buf.b += String.fromCharCode(i2)
                }
            }
            this.buf.b += '"'
        },
        __class__: s
    };
    var g9 = function() {
        this.b = []
    };
    nt["haxe.io.BytesBuffer"] = g9;
    g9.__name__ = ["haxe", "io", "BytesBuffer"];
    g9.prototype = {
        b: null,
        add: function(qZ) {
            var i1 = this.b;
            var q = qZ.b;
            var js = 0;
            var qY = qZ.length;
            while (js < qY) {
                var i2 = js++;
                this.b.push(q[i2])
            }
        },
        addBytes: function(q0, q1, q) {
            if (q1 < 0 || q < 0 || q1 + q > q0.length) {
                throw new nM(dP.OutsideBounds)
            }
            var i2 = this.b;
            var i1 = q0.b;
            var qY = q1;
            var qZ = q1 + q;
            while (qY < qZ) {
                var js = qY++;
                this.b.push(i1[js])
            }
        },
        getBytes: function() {
            var i = new eg(new qw(this.b).buffer);
            this.b = null;
            return i
        },
        __class__: g9
    };
	//HAXE INPUT
    var g6 = function() {};
    nt["haxe.io.Input"] = g6;
    g6.__name__ = ["haxe", "io", "Input"];
    g6.prototype = {
        bigEndian: null,
        readByte: function() {
            throw new nM("Not implemented")
        },
        readBytes: function(i2, js, q) {
            var i1 = q;
            var i = i2.b;
            if (js < 0 || q < 0 || js + q > i2.length) {
                throw new nM(dP.OutsideBounds)
            }
            while (i1 > 0) {
                i[js] = this.readByte();
                js++;
                i1--
            }
            return q
        },
        set_bigEndian: function(i) {
            this.bigEndian = i;
            return i
        },
        readFullBytes: function(i1, i2, i) {
            while (i > 0) {
                var q = this.readBytes(i1, i2, i);
                i2 += q;
                i -= q
            }
        },
        read: function(q) {
            var i1 = eg.alloc(q);
            var i2 = 0;
            while (q > 0) {
                var i = this.readBytes(i1, i2, q);
                if (i == 0) {
                    throw new nM(dP.Blocked)
                }
                i2 += i;
                q -= i
            }
            return i1
        },
        readUntil: function(i) {
            var i1 = "";
            var q;
            while ((q = this.readByte()) != i) {
                i1 += String.fromCharCode(q)
            }
            return i1
        },
        readDouble: function() {
            var q = this.readInt32();
            var i = this.readInt32();
            if (this.bigEndian) {
                return pW.i64ToDouble(i, q)
            } else {
                return pW.i64ToDouble(q, i)
            }
        },
        readUInt16: function() {
            var q = this.readByte();
            var i = this.readByte();
            if (this.bigEndian) {
                return i | q << 8
            } else {
                return q | i << 8
            }
        },
        readInt32: function() {
            var i2 = this.readByte();
            var i1 = this.readByte();
            var q = this.readByte();
            var i = this.readByte();
            if (this.bigEndian) {
                return i | q << 8 | i1 << 16 | i2 << 24
            } else {
                return i2 | i1 << 8 | q << 16 | i << 24
            }
        },
        readString: function(q) {
            var i = eg.alloc(q);
            this.readFullBytes(i, 0, q);
            return i.toString()
        },
        __class__: g6,
        __properties__: {
            set_bigEndian: "set_bigEndian"
        }
    };
    var bB = function(q, i1, i) {
        if (i1 == null) {
            i1 = 0
        }
		console.log(q)
        if (i == null) {
            i = q.length - i1
        }
        if (i1 < 0 || i < 0 || i1 + i > q.length) {
            throw new nM(dP.OutsideBounds)
        }
        this.b = q.b;
        this.pos = i1;
        this.len = i;
        this.totlen = i
    };
    nt["haxe.io.BytesInput"] = bB;
    bB.__name__ = ["haxe", "io", "BytesInput"];
    bB.__super__ = g6;
    bB.prototype = lP(g6.prototype, {
        b: null,
        pos: null,
        len: null,
        totlen: null,
        readByte: function() {
            if (this.len == 0) {
                throw new nM(new b1())
            }
            this.len--;
            return this.b[this.pos++]
        },
        readBytes: function(js, q0, q) {
            if (q0 < 0 || q < 0 || q0 + q > js.length) {
                throw new nM(dP.OutsideBounds)
            }
            if (this.len == 0 && q > 0) {
                throw new nM(new b1())
            }
            if (this.len < q) {
                q = this.len
            }
            var i2 = this.b;
            var i1 = js.b;
            var qZ = 0;
            while (qZ < q) {
                var qY = qZ++;
                i1[q0 + qY] = i2[this.pos + qY]
            }
            this.pos += q;
            this.len -= q;
            return q
        },
        __class__: bB
    });
    var g = function() {};
    nt["haxe.io.Output"] = g;
    g.__name__ = ["haxe", "io", "Output"];
    g.prototype = {
        bigEndian: null,
        writeByte: function(i) {
            throw new nM("Not implemented")
        },
        writeBytes: function(i2, js, q) {
            var i1 = q;
            var i = i2.b.bufferValue;
            if (js < 0 || q < 0 || js + q > i2.length) {
                throw new nM(dP.OutsideBounds)
            }
            while (i1 > 0) {
                this.writeByte(i[js]);
                js++;
                i1--
            }
            return q
        },
        set_bigEndian: function(i) {
            this.bigEndian = i;
            return i
        },
        write: function(i1) {
            var i = i1.length;
            var i2 = 0;
            while (i > 0) {
                var q = this.writeBytes(i1, i2, i);
                if (q == 0) {
                    throw new nM(dP.Blocked)
                }
                i2 += q;
                i -= q
            }
        },
        writeFullBytes: function(i1, i2, i) {
            while (i > 0) {
                var q = this.writeBytes(i1, i2, i);
                i2 += q;
                i -= q
            }
        },
        writeDouble: function(i) {
            var q = pW.doubleToI64(i);
            if (this.bigEndian) {
                this.writeInt32(q.high);
                this.writeInt32(q.low)
            } else {
                this.writeInt32(q.low);
                this.writeInt32(q.high)
            }
        },
        writeInt32: function(i) {
            if (this.bigEndian) {
                this.writeByte(i >>> 24);
                this.writeByte(i >> 16 & 255);
                this.writeByte(i >> 8 & 255);
                this.writeByte(i & 255)
            } else {
                this.writeByte(i & 255);
                this.writeByte(i >> 8 & 255);
                this.writeByte(i >> 16 & 255);
                this.writeByte(i >>> 24)
            }
        },
        writeString: function(q) {
            var i = eg.ofString(q);
            this.writeFullBytes(i, 0, i.length)
        },
        __class__: g,
        __properties__: {
            set_bigEndian: "set_bigEndian"
        }
    };
    var eu = function() {
        this.b = new g9()
    };
    nt["haxe.io.BytesOutput"] = eu;
    eu.__name__ = ["haxe", "io", "BytesOutput"];
    eu.__super__ = g;
    eu.prototype = lP(g.prototype, {
        b: null,
        writeByte: function(i) {
            this.b.b.push(i)
        },
        writeBytes: function(q, i1, i) {
            this.b.addBytes(q, i1, i);
            return i
        },
        getBytes: function() {
            return this.b.getBytes()
        },
        __class__: eu
    });
    var b1 = function() {};
    nt["haxe.io.Eof"] = b1;
    b1.__name__ = ["haxe", "io", "Eof"];
    b1.prototype = {
        toString: function() {
            return "Eof"
        },
        __class__: b1
    };
    var dP = nt["haxe.io.Error"] = {
        __ename__: ["haxe", "io", "Error"],
        __constructs__: ["Blocked", "Overflow", "OutsideBounds", "Custom"]
    };
    dP.Blocked = ["Blocked", 0];
    dP.Blocked.toString = ea;
    dP.Blocked.__enum__ = dP;
    dP.Overflow = ["Overflow", 1];
    dP.Overflow.toString = ea;
    dP.Overflow.__enum__ = dP;
    dP.OutsideBounds = ["OutsideBounds", 2];
    dP.OutsideBounds.toString = ea;
    dP.OutsideBounds.__enum__ = dP;
    dP.Custom = function(q) {
        var i = ["Custom", 3, q];
        i.__enum__ = dP;
        i.toString = ea;
        return i
    };
    var pW = function() {};
    nt["haxe.io.FPHelper"] = pW;
    pW.__name__ = ["haxe", "io", "FPHelper"];
    pW.i32ToFloat = function(i1) {
        var q = 1 - (i1 >>> 31 << 1);
        var js = i1 >>> 23 & 255;
        var i2 = i1 & 8388607;
        if (i2 == 0 && js == 0) {
            return 0
        }
        return q * (1 + Math.pow(2, -23) * i2) * Math.pow(2, js - 127)
    };
    pW.floatToI32 = function(q) {
        if (q == 0) {
            return 0
        }
        var i;
        if (q < 0) {
            i = -q
        } else {
            i = q
        }
        var i2 = Math.floor(Math.log(i) / 0.6931471805599453);
        if (i2 < -127) {
            i2 = -127
        } else {
            if (i2 > 128) {
                i2 = 128
            }
        }
        var i1 = Math.round((i / Math.pow(2, i2) - 1) * 8388608) & 8388607;
        return (q < 0 ? -2147483648 : 0) | i2 + 127 << 23 | i1
    };
    pW.i64ToDouble = function(i, i1) {
        var q = 1 - (i1 >>> 31 << 1);
        var js = (i1 >> 20 & 2047) - 1023;
        var i2 = (i1 & 1048575) * 4294967296 + (i >>> 31) * 2147483648 + (i & 2147483647);
        if (i2 == 0 && js == -1023) {
            return 0
        }
        return q * (1 + Math.pow(2, -52) * i2) * Math.pow(2, js)
    };
    pW.doubleToI64 = function(q) {
        var qZ = pW.i64tmp;
        if (q == 0) {
            qZ.low = 0;
            qZ.high = 0
        } else {
            var qY;
            if (q < 0) {
                qY = -q
            } else {
                qY = q
            }
            var js = Math.floor(Math.log(qY) / 0.6931471805599453);
            var i2;
            var q0 = (qY / Math.pow(2, js) - 1) * 4503599627370496;
            i2 = Math.round(q0);
            var i = i2 | 0;
            var i1 = i2 / 4294967296 | 0;
            qZ.low = i;
            qZ.high = (q < 0 ? -2147483648 : 0) | js + 1023 << 20 | i1
        }
        return qZ
    };
    var nu = function(i2) {
        switch (i2) {
            case ".":
            case "..":
                this.dir = i2;
                this.file = "";
                return
        }
        var q = i2.lastIndexOf("/");
        var i = i2.lastIndexOf("\\");
        if (q < i) {
            this.dir = cj.substr(i2, 0, i);
            i2 = cj.substr(i2, i + 1, null);
            this.backslash = true
        } else {
            if (i < q) {
                this.dir = cj.substr(i2, 0, q);
                i2 = cj.substr(i2, q + 1, null)
            } else {
                this.dir = null
            }
        }
        var i1 = i2.lastIndexOf(".");
        if (i1 != -1) {
            this.ext = cj.substr(i2, i1 + 1, null);
            this.file = cj.substr(i2, 0, i1)
        } else {
            this.ext = null;
            this.file = i2
        }
    };
    nt["haxe.io.Path"] = nu;
    nu.__name__ = ["haxe", "io", "Path"];
    nu.withoutExtension = function(q) {
        var i = new nu(q);
        i.ext = null;
        return i.toString()
    };
    nu.withoutDirectory = function(q) {
        var i = new nu(q);
        i.dir = null;
        return i.toString()
    };
    nu.directory = function(q) {
        var i = new nu(q);
        if (i.dir == null) {
            return ""
        }
        return i.dir
    };
    nu.extension = function(q) {
        var i = new nu(q);
        if (i.ext == null) {
            return ""
        }
        return i.ext
    };
    nu.prototype = {
        dir: null,
        file: null,
        ext: null,
        backslash: null,
        toString: function() {
            return (this.dir == null ? "" : this.dir + (this.backslash ? "\\" : "/")) + this.file + (this.ext == null ? "" : "." + this.ext)
        },
        __class__: nu
    };
    var fL = nt["haxe.rtti.CType"] = {
        __ename__: ["haxe", "rtti", "CType"],
        __constructs__: ["CUnknown", "CEnum", "CClass", "CTypedef", "CFunction", "CAnonymous", "CDynamic", "CAbstract"]
    };
    fL.CUnknown = ["CUnknown", 0];
    fL.CUnknown.toString = ea;
    fL.CUnknown.__enum__ = fL;
    fL.CEnum = function(i, i1) {
        var q = ["CEnum", 1, i, i1];
        q.__enum__ = fL;
        q.toString = ea;
        return q
    };
    fL.CClass = function(i, i1) {
        var q = ["CClass", 2, i, i1];
        q.__enum__ = fL;
        q.toString = ea;
        return q
    };
    fL.CTypedef = function(i, i1) {
        var q = ["CTypedef", 3, i, i1];
        q.__enum__ = fL;
        q.toString = ea;
        return q
    };
    fL.CFunction = function(q, i) {
        var i1 = ["CFunction", 4, q, i];
        i1.__enum__ = fL;
        i1.toString = ea;
        return i1
    };
    fL.CAnonymous = function(i) {
        var q = ["CAnonymous", 5, i];
        q.__enum__ = fL;
        q.toString = ea;
        return q
    };
    fL.CDynamic = function(i) {
        var q = ["CDynamic", 6, i];
        q.__enum__ = fL;
        q.toString = ea;
        return q
    };
    fL.CAbstract = function(i, i1) {
        var q = ["CAbstract", 7, i, i1];
        q.__enum__ = fL;
        q.toString = ea;
        return q
    };
    var D = nt["haxe.rtti.Rights"] = {
        __ename__: ["haxe", "rtti", "Rights"],
        __constructs__: ["RNormal", "RNo", "RCall", "RMethod", "RDynamic", "RInline"]
    };
    D.RNormal = ["RNormal", 0];
    D.RNormal.toString = ea;
    D.RNormal.__enum__ = D;
    D.RNo = ["RNo", 1];
    D.RNo.toString = ea;
    D.RNo.__enum__ = D;
    D.RCall = function(i) {
        var q = ["RCall", 2, i];
        q.__enum__ = D;
        q.toString = ea;
        return q
    };
    D.RMethod = ["RMethod", 3];
    D.RMethod.toString = ea;
    D.RMethod.__enum__ = D;
    D.RDynamic = ["RDynamic", 4];
    D.RDynamic.toString = ea;
    D.RDynamic.__enum__ = D;
    D.RInline = ["RInline", 5];
    D.RInline.toString = ea;
    D.RInline.__enum__ = D;
    var i5 = nt["haxe.rtti.TypeTree"] = {
        __ename__: ["haxe", "rtti", "TypeTree"],
        __constructs__: ["TPackage", "TClassdecl", "TEnumdecl", "TTypedecl", "TAbstractdecl"]
    };
    i5.TPackage = function(i, i1, q) {
        var i2 = ["TPackage", 0, i, i1, q];
        i2.__enum__ = i5;
        i2.toString = ea;
        return i2
    };
    i5.TClassdecl = function(q) {
        var i = ["TClassdecl", 1, q];
        i.__enum__ = i5;
        i.toString = ea;
        return i
    };
    i5.TEnumdecl = function(q) {
        var i = ["TEnumdecl", 2, q];
        i.__enum__ = i5;
        i.toString = ea;
        return i
    };
    i5.TTypedecl = function(i) {
        var q = ["TTypedecl", 3, i];
        q.__enum__ = i5;
        q.toString = ea;
        return q
    };
    i5.TAbstractdecl = function(i) {
        var q = ["TAbstractdecl", 4, i];
        q.__enum__ = i5;
        q.toString = ea;
        return q
    };
    var at = function() {};
    nt["haxe.rtti.Meta"] = at;
    at.__name__ = ["haxe", "rtti", "Meta"];
    at.getMeta = function(i) {
        return i.__meta__
    };
    at.getFields = function(i) {
        var q = at.getMeta(i);
        if (q == null || q.fields == null) {
            return {}
        } else {
            return q.fields
        }
    };
    var kg = function() {};
    nt["haxe.rtti.Rtti"] = kg;
    kg.__name__ = ["haxe", "rtti", "Rtti"];
    kg.getRtti = function(qY) {
        var q = ar.field(qY, "__rtti");
        if (q == null) {
            throw new nM("Class " + kX.getClassName(qY) + " has no RTTI information, consider adding @:rtti")
        }
        var i = ky.parse(q).firstElement();
        var js = new bw().processElement(i);
        var i1 = js;
        switch (js[1]) {
            case 1:
                var i2 = js[2];
                return i2;
            default:
                throw new nM("Enum mismatch: expected TClassDecl but found " + kr.string(i1))
        }
    };
    var bw = function() {
        this.root = []
    };
    nt["haxe.rtti.XmlParser"] = bw;
    bw.__name__ = ["haxe", "rtti", "XmlParser"];
    bw.prototype = {
        root: null,
        curplatform: null,
        mkPath: function(i) {
            return i
        },
        mkTypeParams: function(q) {
            var i = q.split(":");
            if (i[0] == "") {
                return []
            }
            return i
        },
        mkRights: function(i) {
            switch (i) {
                case "null":
                    return D.RNo;
                case "method":
                    return D.RMethod;
                case "dynamic":
                    return D.RDynamic;
                case "inline":
                    return D.RInline;
                default:
                    return D.RCall(i)
            }
        },
        xerror: function(i) {
            throw new nM("Invalid " + i.get_name())
        },
        processElement: function(i) {
            var i1 = new iV(i);
            var q = i1.get_name();
            switch (q) {
                case "class":
                    return i5.TClassdecl(this.xclass(i1));
                case "enum":
                    return i5.TEnumdecl(this.xenum(i1));
                case "typedef":
                    return i5.TTypedecl(this.xtypedef(i1));
                case "abstract":
                    return i5.TAbstractdecl(this.xabstract(i1));
                default:
                    return this.xerror(i1)
            }
        },
        xmeta: function(q) {
            var qZ = [];
            var qY = q.nodes.resolve("m").iterator();
            while (qY.head != null) {
                var i;
                i = (function(q1) {
                    var q0;
                    qY.val = qY.head[0];
                    qY.head = qY.head[1];
                    q0 = qY.val;
                    return q0
                }(this));
                var i1 = [];
                var i2 = i.nodes.resolve("e").iterator();
                while (i2.head != null) {
                    var js;
                    js = (function(q1) {
                        var q0;
                        i2.val = i2.head[0];
                        i2.head = i2.head[1];
                        q0 = i2.val;
                        return q0
                    }(this));
                    i1.push(js.get_innerHTML())
                }
                qZ.push({
                    name: i.att.resolve("n"),
                    params: i1
                })
            }
            return qZ
        },
        xoverloads: function(q) {
            var i1 = new oI();
            var i2 = q.get_elements();
            while (i2.hasNext()) {
                var i = i2.next();
                i1.add(this.xclassfield(i))
            }
            return i1
        },
        xpath: function(i) {
            var i1 = this.mkPath(i.att.resolve("path"));
            var i2 = new oI();
            var q = i.get_elements();
            while (q.hasNext()) {
                var js = q.next();
                i2.add(this.xtype(js))
            }
            return {
                path: i1,
                params: i2
            }
        },
        xclass: function(qZ) {
            var i = null;
            var q0 = null;
            var i2 = null;
            var q1 = new oI();
            var i1 = new oI();
            var qY = new oI();
            var q2 = [];
            var q3 = qZ.get_elements();
            while (q3.hasNext()) {
                var js = q3.next();
                var q = js.get_name();
                switch (q) {
                    case "haxe_doc":
                        q0 = js.get_innerData();
                        break;
                    case "extends":
                        i = this.xpath(js);
                        break;
                    case "implements":
                        q1.add(this.xpath(js));
                        break;
                    case "haxe_dynamic":
                        i2 = this.xtype(new iV(js.x.firstElement()));
                        break;
                    case "meta":
                        q2 = this.xmeta(js);
                        break;
                    default:
                        if (js.x.exists("static")) {
                            qY.add(this.xclassfield(js))
                        } else {
                            i1.add(this.xclassfield(js))
                        }
                }
            }
            return {
                file: qZ.has.resolve("file") ? qZ.att.resolve("file") : null,
                path: this.mkPath(qZ.att.resolve("path")),
                module: qZ.has.resolve("module") ? this.mkPath(qZ.att.resolve("module")) : null,
                doc: q0,
                isPrivate: qZ.x.exists("private"),
                isExtern: qZ.x.exists("extern"),
                isInterface: qZ.x.exists("interface"),
                params: this.mkTypeParams(qZ.att.resolve("params")),
                superClass: i,
                interfaces: q1,
                fields: i1,
                statics: qY,
                tdynamic: i2,
                platforms: this.defplat(),
                meta: q2
            }
        },
        xclassfield: function(js, q1) {
            if (q1 == null) {
                q1 = false
            }
            var i1 = js.get_elements();
            var q0 = this.xtype(i1.next());
            var qY = null;
            var qZ = [];
            var q = null;
            while (i1.hasNext()) {
                var i2 = i1.next();
                var i = i2.get_name();
                switch (i) {
                    case "haxe_doc":
                        qY = i2.get_innerData();
                        break;
                    case "meta":
                        qZ = this.xmeta(i2);
                        break;
                    case "overloads":
                        q = this.xoverloads(i2);
                        break;
                    default:
                        this.xerror(i2)
                }
            }
            return {
                name: js.get_name(),
                type: q0,
                isPublic: js.x.exists("public") || q1,
                isOverride: js.x.exists("override"),
                line: js.has.resolve("line") ? kr.parseInt(js.att.resolve("line")) : null,
                doc: qY,
                get: js.has.resolve("get") ? this.mkRights(js.att.resolve("get")) : D.RNormal,
                set: js.has.resolve("set") ? this.mkRights(js.att.resolve("set")) : D.RNormal,
                params: js.has.resolve("params") ? this.mkTypeParams(js.att.resolve("params")) : [],
                platforms: this.defplat(),
                meta: qZ,
                overloads: q,
                expr: js.has.resolve("expr") ? js.att.resolve("expr") : null
            }
        },
        xenum: function(i) {
            var q = new oI();
            var js = null;
            var i2 = [];
            var i1 = i.get_elements();
            while (i1.hasNext()) {
                var qY = i1.next();
                if (qY.get_name() == "haxe_doc") {
                    js = qY.get_innerData()
                } else {
                    if (qY.get_name() == "meta") {
                        i2 = this.xmeta(qY)
                    } else {
                        q.add(this.xenumfield(qY))
                    }
                }
            }
            return {
                file: i.has.resolve("file") ? i.att.resolve("file") : null,
                path: this.mkPath(i.att.resolve("path")),
                module: i.has.resolve("module") ? this.mkPath(i.att.resolve("module")) : null,
                doc: js,
                isPrivate: i.x.exists("private"),
                isExtern: i.x.exists("extern"),
                params: this.mkTypeParams(i.att.resolve("params")),
                constructors: q,
                platforms: this.defplat(),
                meta: i2
            }
        },
        xenumfield: function(q0) {
            var i2 = null;
            var i1 = q0.x.elementsNamed("haxe_doc").next();
            var q1;
            if (q0.hasNode.resolve("meta")) {
                q1 = this.xmeta(q0.node.resolve("meta"))
            } else {
                q1 = []
            }
            if (q0.has.resolve("a")) {
                var qY = q0.att.resolve("a").split(":");
                var qZ = q0.get_elements();
                i2 = new oI();
                var q = 0;
                while (q < qY.length) {
                    var js = qY[q];
                    ++q;
                    var i = false;
                    if (js.charAt(0) == "?") {
                        i = true;
                        js = cj.substr(js, 1, null)
                    }
                    i2.add({
                        name: js,
                        opt: i,
                        t: this.xtype(qZ.next())
                    })
                }
            }
            return {
                name: q0.get_name(),
                args: i2,
                doc: i1 == null ? null : new iV(i1).get_innerData(),
                meta: q1,
                platforms: this.defplat()
            }
        },
        xabstract: function(qY) {
            var q1 = null;
            var i2 = null;
            var i = null;
            var q5 = [];
            var qZ = [];
            var q0 = [];
            var q6 = qY.get_elements();
            while (q6.hasNext()) {
                var js = q6.next();
                var q = js.get_name();
                switch (q) {
                    case "haxe_doc":
                        q1 = js.get_innerData();
                        break;
                    case "meta":
                        q5 = this.xmeta(js);
                        break;
                    case "to":
                        var q4 = js.get_elements();
                        while (q4.hasNext()) {
                            var q3 = q4.next();
                            qZ.push({
                                t: this.xtype(new iV(q3.x.firstElement())),
                                field: q3.has.resolve("field") ? q3.att.resolve("field") : null
                            })
                        }
                        break;
                    case "from":
                        var q2 = js.get_elements();
                        while (q2.hasNext()) {
                            var i1 = q2.next();
                            q0.push({
                                t: this.xtype(new iV(i1.x.firstElement())),
                                field: i1.has.resolve("field") ? i1.att.resolve("field") : null
                            })
                        }
                        break;
                    case "impl":
                        i2 = this.xclass(js.node.resolve("class"));
                        break;
                    case "this":
                        i = this.xtype(new iV(js.x.firstElement()));
                        break;
                    default:
                        this.xerror(js)
                }
            }
            return {
                file: qY.has.resolve("file") ? qY.att.resolve("file") : null,
                path: this.mkPath(qY.att.resolve("path")),
                module: qY.has.resolve("module") ? this.mkPath(qY.att.resolve("module")) : null,
                doc: q1,
                isPrivate: qY.x.exists("private"),
                params: this.mkTypeParams(qY.att.resolve("params")),
                platforms: this.defplat(),
                meta: q5,
                athis: i,
                to: qZ,
                from: q0,
                impl: i2
            }
        },
        xtypedef: function(i) {
            var qY = null;
            var i1 = null;
            var js = [];
            var i2 = i.get_elements();
            while (i2.hasNext()) {
                var qZ = i2.next();
                if (qZ.get_name() == "haxe_doc") {
                    qY = qZ.get_innerData()
                } else {
                    if (qZ.get_name() == "meta") {
                        js = this.xmeta(qZ)
                    } else {
                        i1 = this.xtype(qZ)
                    }
                }
            }
            var q = new io();
            if (this.curplatform != null) {
                q.set(this.curplatform, i1)
            }
            return {
                file: i.has.resolve("file") ? i.att.resolve("file") : null,
                path: this.mkPath(i.att.resolve("path")),
                module: i.has.resolve("module") ? this.mkPath(i.att.resolve("module")) : null,
                doc: qY,
                isPrivate: i.x.exists("private"),
                params: this.mkTypeParams(i.att.resolve("params")),
                type: i1,
                types: q,
                platforms: this.defplat(),
                meta: js
            }
        },
        xtype: function(js) {
            var i1 = js.get_name();
            switch (i1) {
                case "unknown":
                    return fL.CUnknown;
                case "e":
                    return fL.CEnum(this.mkPath(js.att.resolve("path")), this.xtypeparams(js));
                case "c":
                    return fL.CClass(this.mkPath(js.att.resolve("path")), this.xtypeparams(js));
                case "t":
                    return fL.CTypedef(this.mkPath(js.att.resolve("path")), this.xtypeparams(js));
                case "x":
                    return fL.CAbstract(this.mkPath(js.att.resolve("path")), this.xtypeparams(js));
                case "f":
                    var q = new oI();
                    var q5 = js.att.resolve("a").split(":");
                    var i2 = cj.iter(q5);
                    var q0;
                    if (js.has.resolve("v")) {
                        var q3 = js.att.resolve("v").split(":");
                        q0 = cj.iter(q3)
                    } else {
                        q0 = null
                    }
                    var q8 = js.get_elements();
                    while (q8.hasNext()) {
                        var q6 = q8.next();
                        var i = false;
                        var ra = i2.next();
                        if (ra == null) {
                            ra = ""
                        }
                        if (ra.charAt(0) == "?") {
                            i = true;
                            ra = cj.substr(ra, 1, null)
                        }
                        var qY;
                        if (q0 == null) {
                            qY = null
                        } else {
                            qY = q0.next()
                        }
                        q.add({
                            name: ra,
                            opt: i,
                            t: this.xtype(q6),
                            value: qY == "" ? null : qY
                        })
                    }
                    var rb = q.last();
                    q.remove(rb);
                    return fL.CFunction(q, rb.t);
                case "a":
                    var q1 = new oI();
                    var q7 = js.get_elements();
                    while (q7.hasNext()) {
                        var q4 = q7.next();
                        var q2 = this.xclassfield(q4, true);
                        q2.platforms = new oI();
                        q1.add(q2)
                    }
                    return fL.CAnonymous(q1);
                case "d":
                    var qZ = null;
                    var q9 = js.x.firstElement();
                    if (q9 != null) {
                        qZ = this.xtype(new iV(q9))
                    }
                    return fL.CDynamic(qZ);
                default:
                    return this.xerror(js)
            }
        },
        xtypeparams: function(i) {
            var i1 = new oI();
            var q = i.get_elements();
            while (q.hasNext()) {
                var i2 = q.next();
                i1.add(this.xtype(i2))
            }
            return i1
        },
        defplat: function() {
            var i = new oI();
            if (this.curplatform != null) {
                i.add(this.curplatform)
            }
            return i
        },
        __class__: bw
    };
    var hh = function(i) {
        this.__x = i
    };
    nt["haxe.xml._Fast.NodeAccess"] = hh;
    hh.__name__ = ["haxe", "xml", "_Fast", "NodeAccess"];
    hh.prototype = {
        __x: null,
        resolve: function(q) {
            var i = this.__x.elementsNamed(q).next();
            if (i == null) {
                var i1;
                if (this.__x.nodeType == ky.Document) {
                    i1 = "Document"
                } else {
                    i1 = this.__x.get_nodeName()
                }
                throw new nM(i1 + " is missing element " + q)
            }
            return new iV(i)
        },
        __class__: hh
    };
    var mM = function(i) {
        this.__x = i
    };
    nt["haxe.xml._Fast.AttribAccess"] = mM;
    mM.__name__ = ["haxe", "xml", "_Fast", "AttribAccess"];
    mM.prototype = {
        __x: null,
        resolve: function(q) {
            if (this.__x.nodeType == ky.Document) {
                throw new nM("Cannot access document attribute " + q)
            }
            var i = this.__x.get(q);
            if (i == null) {
                throw new nM(this.__x.get_nodeName() + " is missing attribute " + q)
            }
            return i
        },
        __class__: mM
    };
    var e1 = function(i) {
        this.__x = i
    };
    nt["haxe.xml._Fast.HasAttribAccess"] = e1;
    e1.__name__ = ["haxe", "xml", "_Fast", "HasAttribAccess"];
    e1.prototype = {
        __x: null,
        resolve: function(i) {
            if (this.__x.nodeType == ky.Document) {
                throw new nM("Cannot access document attribute " + i)
            }
            return this.__x.exists(i)
        },
        __class__: e1
    };
    var m2 = function(i) {
        this.__x = i
    };
    nt["haxe.xml._Fast.HasNodeAccess"] = m2;
    m2.__name__ = ["haxe", "xml", "_Fast", "HasNodeAccess"];
    m2.prototype = {
        __x: null,
        resolve: function(i) {
            return this.__x.elementsNamed(i).hasNext()
        },
        __class__: m2
    };
    var h9 = function(i) {
        this.__x = i
    };
    nt["haxe.xml._Fast.NodeListAccess"] = h9;
    h9.__name__ = ["haxe", "xml", "_Fast", "NodeListAccess"];
    h9.prototype = {
        __x: null,
        resolve: function(i1) {
            var q = new oI();
            var i2 = this.__x.elementsNamed(i1);
            while (i2.hasNext()) {
                var i = i2.next();
                q.add(new iV(i))
            }
            return q
        },
        __class__: h9
    };
    var iV = function(i) {
        if (i.nodeType != ky.Document && i.nodeType != ky.Element) {
            throw new nM("Invalid nodeType " + i.nodeType)
        }
        this.x = i;
        this.node = new hh(i);
        this.nodes = new h9(i);
        this.att = new mM(i);
        this.has = new e1(i);
        this.hasNode = new m2(i)
    };
    nt["haxe.xml.Fast"] = iV;
    iV.__name__ = ["haxe", "xml", "Fast"];
    iV.prototype = {
        x: null,
        node: null,
        nodes: null,
        att: null,
        has: null,
        hasNode: null,
        get_name: function() {
            if (this.x.nodeType == ky.Document) {
                return "Document"
            } else {
                return this.x.get_nodeName()
            }
        },
        get_innerData: function() {
            var i1 = this.x.iterator();
            if (!i1.hasNext()) {
                throw new nM(this.get_name() + " does not have data")
            }
            var i = i1.next();
            var i2 = i1.next();
            if (i2 != null) {
                if (i.nodeType == ky.PCData && i2.nodeType == ky.CData && cP.trim((function(qY) {
                        var js;
                        if (i.nodeType == ky.Document || i.nodeType == ky.Element) {
                            throw new nM("Bad node type, unexpected " + i.nodeType)
                        }
                        js = i.nodeValue;
                        return js
                    }(this))) == "") {
                    var q = i1.next();
                    if (q == null || q.nodeType == ky.PCData && cP.trim((function(qY) {
                            var js;
                            if (q.nodeType == ky.Document || q.nodeType == ky.Element) {
                                throw new nM("Bad node type, unexpected " + q.nodeType)
                            }
                            js = q.nodeValue;
                            return js
                        }(this))) == "" && i1.next() == null) {
                        if (i2.nodeType == ky.Document || i2.nodeType == ky.Element) {
                            throw new nM("Bad node type, unexpected " + i2.nodeType)
                        }
                        return i2.nodeValue
                    }
                }
                throw new nM(this.get_name() + " does not only have data")
            }
            if (i.nodeType != ky.PCData && i.nodeType != ky.CData) {
                throw new nM(this.get_name() + " does not have data")
            }
            if (i.nodeType == ky.Document || i.nodeType == ky.Element) {
                throw new nM("Bad node type, unexpected " + i.nodeType)
            }
            return i.nodeValue
        },
        get_innerHTML: function() {
            var q = new jT();
            var i1 = this.x.iterator();
            while (i1.hasNext()) {
                var i = i1.next();
                q.add(n2.print(i))
            }
            return q.b
        },
        get_elements: function() {
            var i = this.x.elements();
            return {
                hasNext: oT(i, i.hasNext),
                next: function() {
                    var q = i.next();
                    if (q == null) {
                        return null
                    }
                    return new iV(q)
                }
            }
        },
        __class__: iV,
        __properties__: {
            get_elements: "get_elements",
            get_innerHTML: "get_innerHTML",
            get_innerData: "get_innerData",
            get_name: "get_name"
        }
    };
    var nx = function() {};
    nt["haxe.xml.Parser"] = nx;
    nx.__name__ = ["haxe", "xml", "Parser"];
    nx.parse = function(i1, i) {
        if (i == null) {
            i = false
        }
        var q = ky.createDocument();
        nx.doParse(i1, i, 0, q);
        return q
    };
    nx.doParse = function(q7, rm, q2, qZ) {
        if (q2 == null) {
            q2 = 0
        }
        var q = null;
        var i2 = 1;
        var q5 = 1;
        var rd = null;
        var i1 = 0;
        var q3 = 0;
        var js = 0;
        var ri = q7.charCodeAt(q2);
        var rf = new jT();
        var q9 = 1;
        var q8 = -1;
        while (!(ri != ri)) {
            switch (i2) {
                case 0:
                    switch (ri) {
                        case 10:
                        case 13:
                        case 9:
                        case 32:
                            break;
                        default:
                            i2 = q5;
                            continue
                    }
                    break;
                case 1:
                    switch (ri) {
                        case 60:
                            i2 = 0;
                            q5 = 2;
                            break;
                        default:
                            i1 = q2;
                            i2 = 13;
                            continue
                    }
                    break;
                case 13:
                    if (ri == 60) {
                        rf.addSub(q7, i1, q2 - i1);
                        var qY = ky.createPCData(rf.b);
                        rf = new jT();
                        qZ.addChild(qY);
                        q3++;
                        i2 = 0;
                        q5 = 2
                    } else {
                        if (ri == 38) {
                            rf.addSub(q7, i1, q2 - i1);
                            i2 = 18;
                            q9 = 13;
                            i1 = q2 + 1
                        }
                    }
                    break;
                case 17:
                    if (ri == 93 && q7.charCodeAt(q2 + 1) == 93 && q7.charCodeAt(q2 + 2) == 62) {
                        var q4 = ky.createCData(cj.substr(q7, i1, q2 - i1));
                        qZ.addChild(q4);
                        q3++;
                        q2 += 2;
                        i2 = 1
                    }
                    break;
                case 2:
                    switch (ri) {
                        case 33:
                            if (q7.charCodeAt(q2 + 1) == 91) {
                                q2 += 2;
                                if (cj.substr(q7, q2, 6).toUpperCase() != "CDATA[") {
                                    throw new nM("Expected <![CDATA[")
                                }
                                q2 += 5;
                                i2 = 17;
                                i1 = q2 + 1
                            } else {
                                if (q7.charCodeAt(q2 + 1) == 68 || q7.charCodeAt(q2 + 1) == 100) {
                                    if (cj.substr(q7, q2 + 2, 6).toUpperCase() != "OCTYPE") {
                                        throw new nM("Expected <!DOCTYPE")
                                    }
                                    q2 += 8;
                                    i2 = 16;
                                    i1 = q2 + 1
                                } else {
                                    if (q7.charCodeAt(q2 + 1) != 45 || q7.charCodeAt(q2 + 2) != 45) {
                                        throw new nM("Expected <!--")
                                    } else {
                                        q2 += 2;
                                        i2 = 15;
                                        i1 = q2 + 1
                                    }
                                }
                            }
                            break;
                        case 63:
                            i2 = 14;
                            i1 = q2;
                            break;
                        case 47:
                            if (qZ == null) {
                                throw new nM("Expected node name")
                            }
                            i1 = q2 + 1;
                            i2 = 0;
                            q5 = 10;
                            break;
                        default:
                            i2 = 3;
                            i1 = q2;
                            continue
                    }
                    break;
                case 3:
                    if (!(ri >= 97 && ri <= 122 || ri >= 65 && ri <= 90 || ri >= 48 && ri <= 57 || ri == 58 || ri == 46 || ri == 95 || ri == 45)) {
                        if (q2 == i1) {
                            throw new nM("Expected node name")
                        }
                        q = ky.createElement(cj.substr(q7, i1, q2 - i1));
                        qZ.addChild(q);
                        q3++;
                        i2 = 0;
                        q5 = 4;
                        continue
                    }
                    break;
                case 4:
                    switch (ri) {
                        case 47:
                            i2 = 11;
                            break;
                        case 62:
                            i2 = 9;
                            break;
                        default:
                            i2 = 5;
                            i1 = q2;
                            continue
                    }
                    break;
                case 5:
                    if (!(ri >= 97 && ri <= 122 || ri >= 65 && ri <= 90 || ri >= 48 && ri <= 57 || ri == 58 || ri == 46 || ri == 95 || ri == 45)) {
                        var rh;
                        if (i1 == q2) {
                            throw new nM("Expected attribute name")
                        }
                        rh = cj.substr(q7, i1, q2 - i1);
                        rd = rh;
                        if (q.exists(rd)) {
                            throw new nM("Duplicate attribute")
                        }
                        i2 = 0;
                        q5 = 6;
                        continue
                    }
                    break;
                case 6:
                    switch (ri) {
                        case 61:
                            i2 = 0;
                            q5 = 7;
                            break;
                        default:
                            throw new nM("Expected =")
                    }
                    break;
                case 7:
                    switch (ri) {
                        case 34:
                        case 39:
                            rf = new jT();
                            i2 = 8;
                            i1 = q2 + 1;
                            q8 = ri;
                            break;
                        default:
                            throw new nM('Expected "')
                    }
                    break;
                case 8:
                    switch (ri) {
                        case 38:
                            rf.addSub(q7, i1, q2 - i1);
                            i2 = 18;
                            q9 = 8;
                            i1 = q2 + 1;
                            break;
                        case 62:
                            if (rm) {
                                throw new nM("Invalid unescaped " + String.fromCharCode(ri) + " in attribute value")
                            } else {
                                if (ri == q8) {
                                    rf.addSub(q7, i1, q2 - i1);
                                    var rl = rf.b;
                                    rf = new jT();
                                    q.set(rd, rl);
                                    i2 = 0;
                                    q5 = 4
                                }
                            }
                            break;
                        case 60:
                            if (rm) {
                                throw new nM("Invalid unescaped " + String.fromCharCode(ri) + " in attribute value")
                            } else {
                                if (ri == q8) {
                                    rf.addSub(q7, i1, q2 - i1);
                                    var rk = rf.b;
                                    rf = new jT();
                                    q.set(rd, rk);
                                    i2 = 0;
                                    q5 = 4
                                }
                            }
                            break;
                        default:
                            if (ri == q8) {
                                rf.addSub(q7, i1, q2 - i1);
                                var rj = rf.b;
                                rf = new jT();
                                q.set(rd, rj);
                                i2 = 0;
                                q5 = 4
                            }
                    }
                    break;
                case 9:
                    q2 = nx.doParse(q7, rm, q2, q);
                    i1 = q2;
                    i2 = 1;
                    break;
                case 11:
                    switch (ri) {
                        case 62:
                            i2 = 1;
                            break;
                        default:
                            throw new nM("Expected >")
                    }
                    break;
                case 12:
                    switch (ri) {
                        case 62:
                            if (q3 == 0) {
                                qZ.addChild(ky.createPCData(""))
                            }
                            return q2;
                        default:
                            throw new nM("Expected >")
                    }
                    break;
                case 10:
                    if (!(ri >= 97 && ri <= 122 || ri >= 65 && ri <= 90 || ri >= 48 && ri <= 57 || ri == 58 || ri == 46 || ri == 95 || ri == 45)) {
                        if (i1 == q2) {
                            throw new nM("Expected node name")
                        }
                        var q0 = cj.substr(q7, i1, q2 - i1);
                        if (q0 != (function(ro) {
                                var rn;
                                if (qZ.nodeType != ky.Element) {
                                    throw new nM("Bad node type, expected Element but found " + qZ.nodeType)
                                }
                                rn = qZ.nodeName;
                                return rn
                            }(this))) {
                            throw new nM("Expected </" + (function(ro) {
                                var rn;
                                if (qZ.nodeType != ky.Element) {
                                    throw "Bad node type, expected Element but found " + qZ.nodeType
                                }
                                rn = qZ.nodeName;
                                return rn
                            }(this)) + ">")
                        }
                        i2 = 0;
                        q5 = 12;
                        continue
                    }
                    break;
                case 15:
                    if (ri == 45 && q7.charCodeAt(q2 + 1) == 45 && q7.charCodeAt(q2 + 2) == 62) {
                        var rg = ky.createComment(cj.substr(q7, i1, q2 - i1));
                        qZ.addChild(rg);
                        q3++;
                        q2 += 2;
                        i2 = 1
                    }
                    break;
                case 16:
                    if (ri == 91) {
                        js++
                    } else {
                        if (ri == 93) {
                            js--
                        } else {
                            if (ri == 62 && js == 0) {
                                var re = ky.createDocType(cj.substr(q7, i1, q2 - i1));
                                qZ.addChild(re);
                                q3++;
                                i2 = 1
                            }
                        }
                    }
                    break;
                case 14:
                    if (ri == 63 && q7.charCodeAt(q2 + 1) == 62) {
                        q2++;
                        var i = cj.substr(q7, i1 + 1, q2 - i1 - 2);
                        var rc = ky.createProcessingInstruction(i);
                        qZ.addChild(rc);
                        q3++;
                        i2 = 1
                    }
                    break;
                case 18:
                    if (ri == 59) {
                        var q1 = cj.substr(q7, i1, q2 - i1);
                        if (q1.charCodeAt(0) == 35) {
                            var q6;
                            if (q1.charCodeAt(1) == 120) {
                                q6 = kr.parseInt("0" + cj.substr(q1, 1, q1.length - 1))
                            } else {
                                q6 = kr.parseInt(cj.substr(q1, 1, q1.length - 1))
                            }
                            rf.b += String.fromCharCode(q6)
                        } else {
                            if (!nx.escapes.exists(q1)) {
                                if (rm) {
                                    throw new nM("Undefined entity: " + q1)
                                }
                                rf.b += kr.string("&" + q1 + ";")
                            } else {
                                rf.add(nx.escapes.get(q1))
                            }
                        }
                        i1 = q2 + 1;
                        i2 = q9
                    } else {
                        if (!(ri >= 97 && ri <= 122 || ri >= 65 && ri <= 90 || ri >= 48 && ri <= 57 || ri == 58 || ri == 46 || ri == 95 || ri == 45) && ri != 35) {
                            if (rm) {
                                throw new nM("Invalid character in entity: " + String.fromCharCode(ri))
                            }
                            rf.b += "&";
                            rf.addSub(q7, i1, q2 - i1);
                            q2--;
                            i1 = q2 + 1;
                            i2 = q9
                        }
                    }
                    break
            }
            ri = cP.fastCodeAt(q7, ++q2)
        }
        if (i2 == 1) {
            i1 = q2;
            i2 = 13
        }
        if (i2 == 13) {
            if (q2 != i1 || q3 == 0) {
                rf.addSub(q7, i1, q2 - i1);
                var rb = ky.createPCData(rf.b);
                qZ.addChild(rb);
                q3++
            }
            return q2
        }
        if (!rm && i2 == 18 && q9 == 13) {
            rf.b += "&";
            rf.addSub(q7, i1, q2 - i1);
            var ra = ky.createPCData(rf.b);
            qZ.addChild(ra);
            q3++;
            return q2
        }
        throw new nM("Unexpected end")
    };
    var n2 = function(i) {
        this.output = new jT();
        this.pretty = i
    };
    nt["haxe.xml.Printer"] = n2;
    n2.__name__ = ["haxe", "xml", "Printer"];
    n2.print = function(i, q) {
        if (q == null) {
            q = false
        }
        var i1 = new n2(q);
        i1.writeNode(i, "");
        return i1.output.b
    };
    n2.prototype = {
        output: null,
        pretty: null,
        writeNode: function(qZ, qY) {
            var i1 = qZ.nodeType;
            switch (i1) {
                case 2:
                    this.output.b += kr.string(qY + "<![CDATA[");
                    this.write(cP.trim((function(q5) {
                        var q4;
                        if (qZ.nodeType == ky.Document || qZ.nodeType == ky.Element) {
                            throw new nM("Bad node type, unexpected " + qZ.nodeType)
                        }
                        q4 = qZ.nodeValue;
                        return q4
                    }(this))));
                    this.output.b += "]]>";
                    if (this.pretty) {
                        this.output.b += ""
                    }
                    break;
                case 3:
                    var q3;
                    if (qZ.nodeType == ky.Document || qZ.nodeType == ky.Element) {
                        throw new nM("Bad node type, unexpected " + qZ.nodeType)
                    }
                    q3 = qZ.nodeValue;
                    q3 = new gF("[\n\r\t]+", "g").replace(q3, "");
                    q3 = "<!--" + q3 + "-->";
                    if (qY == null) {
                        this.output.b += "null"
                    } else {
                        this.output.b += "" + qY
                    }
                    this.write(cP.trim(q3));
                    if (this.pretty) {
                        this.output.b += ""
                    }
                    break;
                case 6:
                    var q2 = (function(q5) {
                        var q4;
                        if (qZ.nodeType != ky.Document && qZ.nodeType != ky.Element) {
                            throw new nM("Bad node type, expected Element or Document but found " + qZ.nodeType)
                        }
                        q4 = cj.iter(qZ.children);
                        return q4
                    }(this));
                    while (q2.hasNext()) {
                        var i = q2.next();
                        this.writeNode(i, qY)
                    }
                    break;
                case 0:
                    this.output.b += kr.string(qY + "<");
                    this.write((function(q5) {
                        var q4;
                        if (qZ.nodeType != ky.Element) {
                            throw new nM("Bad node type, expected Element but found " + qZ.nodeType)
                        }
                        q4 = qZ.nodeName;
                        return q4
                    }(this)));
                    var q1 = qZ.attributes();
                    while (q1.hasNext()) {
                        var q = q1.next();
                        this.output.b += kr.string(" " + q + '="');
                        this.write(cP.htmlEscape(qZ.get(q), true));
                        this.output.b += '"'
                    }
                    if (this.hasChildren(qZ)) {
                        this.output.b += ">";
                        if (this.pretty) {
                            this.output.b += ""
                        }
                        var q0 = (function(q5) {
                            var q4;
                            if (qZ.nodeType != ky.Document && qZ.nodeType != ky.Element) {
                                throw new nM("Bad node type, expected Element or Document but found " + qZ.nodeType)
                            }
                            q4 = cj.iter(qZ.children);
                            return q4
                        }(this));
                        while (q0.hasNext()) {
                            var i2 = q0.next();
                            this.writeNode(i2, this.pretty ? qY + "\t" : qY)
                        }
                        this.output.b += kr.string(qY + "</");
                        this.write((function(q5) {
                            var q4;
                            if (qZ.nodeType != ky.Element) {
                                throw new nM("Bad node type, expected Element but found " + qZ.nodeType)
                            }
                            q4 = qZ.nodeName;
                            return q4
                        }(this)));
                        this.output.b += ">";
                        if (this.pretty) {
                            this.output.b += ""
                        }
                    } else {
                        this.output.b += "/>";
                        if (this.pretty) {
                            this.output.b += ""
                        }
                    }
                    break;
                case 1:
                    var js;
                    if (qZ.nodeType == ky.Document || qZ.nodeType == ky.Element) {
                        throw new nM("Bad node type, unexpected " + qZ.nodeType)
                    }
                    js = qZ.nodeValue;
                    if (js.length != 0) {
                        this.write(qY + cP.htmlEscape(js));
                        if (this.pretty) {
                            this.output.b += ""
                        }
                    }
                    break;
                case 5:
                    this.write("<?" + (function(q5) {
                        var q4;
                        if (qZ.nodeType == ky.Document || qZ.nodeType == ky.Element) {
                            throw new nM("Bad node type, unexpected " + qZ.nodeType)
                        }
                        q4 = qZ.nodeValue;
                        return q4
                    }(this)) + "?>");
                    break;
                case 4:
                    this.write("<!DOCTYPE " + (function(q5) {
                        var q4;
                        if (qZ.nodeType == ky.Document || qZ.nodeType == ky.Element) {
                            throw new nM("Bad node type, unexpected " + qZ.nodeType)
                        }
                        q4 = qZ.nodeValue;
                        return q4
                    }(this)) + ">");
                    break
            }
        },
        write: function(i) {
            if (i == null) {
                this.output.b += "null"
            } else {
                this.output.b += "" + i
            }
        },
        hasChildren: function(q) {
            var i = (function(qY) {
                var js;
                if (q.nodeType != ky.Document && q.nodeType != ky.Element) {
                    throw new nM("Bad node type, expected Element or Document but found " + q.nodeType)
                }
                js = cj.iter(q.children);
                return js
            }(this));
            while (i.hasNext()) {
                var i2 = i.next();
                var i1 = i2.nodeType;
                switch (i1) {
                    case 0:
                    case 1:
                        return true;
                    case 2:
                    case 3:
                        if (cP.ltrim((function(qY) {
                                var js;
                                if (i2.nodeType == ky.Document || i2.nodeType == ky.Element) {
                                    throw new nM("Bad node type, unexpected " + i2.nodeType)
                                }
                                js = i2.nodeValue;
                                return js
                            }(this))).length != 0) {
                            return true
                        }
                        break;
                    default:
                }
            }
            return false
        },
        __class__: n2
    };
    var fB = nt["haxe.zip.Huffman"] = {
        __ename__: ["haxe", "zip", "Huffman"],
        __constructs__: ["Found", "NeedBit", "NeedBits"]
    };
    fB.Found = function(q) {
        var i1 = ["Found", 0, q];
        i1.__enum__ = fB;
        i1.toString = ea;
        return i1
    };
    fB.NeedBit = function(i1, i) {
        var q = ["NeedBit", 1, i1, i];
        q.__enum__ = fB;
        q.toString = ea;
        return q
    };
    fB.NeedBits = function(i1, q) {
        var i = ["NeedBits", 2, i1, q];
        i.__enum__ = fB;
        i.toString = ea;
        return i
    };
    var mw = function() {};
    nt["haxe.zip.HuffTools"] = mw;
    mw.__name__ = ["haxe", "zip", "HuffTools"];
    mw.prototype = {
        treeDepth: function(js) {
            switch (js[1]) {
                case 0:
                    return 0;
                case 2:
                    throw new nM("assert");
                    break;
                case 1:
                    var i = js[3];
                    var q = js[2];
                    var i2 = this.treeDepth(q);
                    var i1 = this.treeDepth(i);
                    return 1 + (i2 < i1 ? i2 : i1)
            }
        },
        treeCompress: function(qY) {
            var q1 = this.treeDepth(qY);
            if (q1 == 0) {
                return qY
            }
            if (q1 == 1) {
                switch (qY[1]) {
                    case 1:
                        var q = qY[3];
                        var i1 = qY[2];
                        return fB.NeedBit(this.treeCompress(i1), this.treeCompress(q));
                    default:
                        throw new nM("assert")
                }
            }
            var js = 1 << q1;
            var qZ = [];
            var q0 = 0;
            while (q0 < js) {
                var i2 = q0++;
                qZ.push(fB.Found(-1))
            }
            this.treeWalk(qZ, 0, 0, q1, qY);
            return fB.NeedBits(q1, qZ)
        },
        treeWalk: function(i2, js, qZ, qY, i1) {
            switch (i1[1]) {
                case 1:
                    var i = i1[3];
                    var q = i1[2];
                    if (qY > 0) {
                        this.treeWalk(i2, js, qZ + 1, qY - 1, q);
                        this.treeWalk(i2, js | 1 << qZ, qZ + 1, qY - 1, i)
                    } else {
                        i2[js] = this.treeCompress(i1)
                    }
                    break;
                default:
                    i2[js] = this.treeCompress(i1)
            }
        },
        treeMake: function(js, i2, i1, q) {
            if (q > i2) {
                throw new nM("Invalid huffman")
            }
            var i = i1 << 5 | q;
            if (js.h.hasOwnProperty(i)) {
                return fB.Found(js.h[i])
            }
            i1 <<= 1;
            q += 1;
            return fB.NeedBit(this.treeMake(js, i2, i1, q), this.treeMake(js, i2, i1 | 1, q))
        },
        make: function(qZ, q0, q5, js) {
            var re = [];
            var rf = [];
            if (js > 32) {
                throw new nM("Invalid huffman")
            }
            var qY = 0;
            while (qY < js) {
                var rc = qY++;
                re.push(0);
                rf.push(0)
            }
            var q3 = 0;
            while (q3 < q5) {
                var ra = q3++;
                var q4 = qZ[ra + q0];
                if (q4 >= js) {
                    throw new nM("Invalid huffman")
                }
                re[q4]++
            }
            var q = 0;
            var rd = 1;
            var q2 = js - 1;
            while (rd < q2) {
                var q8 = rd++;
                q = q + re[q8] << 1;
                rf[q8] = q
            }
            var rb = new c6();
            var q1 = 0;
            while (q1 < q5) {
                var q7 = q1++;
                var q9 = qZ[q7 + q0];
                if (q9 != 0) {
                    var q6 = rf[q9 - 1];
                    rf[q9 - 1] = q6 + 1;
                    rb.h[q6 << 5 | q9] = q7
                }
            }
            return this.treeCompress(fB.NeedBit(this.treeMake(rb, js, 0, 1), this.treeMake(rb, js, 1, 1)))
        },
        __class__: mw
    };
    var lw = function(i) {
        this.buffer = eg.alloc(65536);
        this.pos = 0;
        if (i) {
            this.crc = new gS()
        }
    };
    nt["haxe.zip._InflateImpl.Window"] = lw;
    lw.__name__ = ["haxe", "zip", "_InflateImpl", "Window"];
    lw.prototype = {
        buffer: null,
        pos: null,
        crc: null,
        slide: function() {
            if (this.crc != null) {
                this.crc.update(this.buffer, 0, 32768)
            }
            var i = eg.alloc(65536);
            this.pos -= 32768;
            i.blit(0, this.buffer, 32768, this.pos);
            this.buffer = i
        },
        addBytes: function(q, i1, i) {
            if (this.pos + i > 65536) {
                this.slide()
            }
            this.buffer.blit(this.pos, q, i1, i);
            this.pos += i
        },
        addByte: function(i) {
            if (this.pos == 65536) {
                this.slide()
            }
            this.buffer.b[this.pos] = i & 255;
            this.pos++
        },
        getLastChar: function() {
            return this.buffer.b[this.pos - 1]
        },
        available: function() {
            return this.pos
        },
        checksum: function() {
            if (this.crc != null) {
                this.crc.update(this.buffer, 0, this.pos)
            }
            return this.crc
        },
        __class__: lw
    };
    var gW = nt["haxe.zip._InflateImpl.State"] = {
        __ename__: ["haxe", "zip", "_InflateImpl", "State"],
        __constructs__: ["Head", "Block", "CData", "Flat", "Crc", "Dist", "DistOne", "Done"]
    };
    gW.Head = ["Head", 0];
    gW.Head.toString = ea;
    gW.Head.__enum__ = gW;
    gW.Block = ["Block", 1];
    gW.Block.toString = ea;
    gW.Block.__enum__ = gW;
    gW.CData = ["CData", 2];
    gW.CData.toString = ea;
    gW.CData.__enum__ = gW;
    gW.Flat = ["Flat", 3];
    gW.Flat.toString = ea;
    gW.Flat.__enum__ = gW;
    gW.Crc = ["Crc", 4];
    gW.Crc.toString = ea;
    gW.Crc.__enum__ = gW;
    gW.Dist = ["Dist", 5];
    gW.Dist.toString = ea;
    gW.Dist.__enum__ = gW;
    gW.DistOne = ["DistOne", 6];
    gW.DistOne.toString = ea;
    gW.DistOne.__enum__ = gW;
    gW.Done = ["Done", 7];
    gW.Done.toString = ea;
    gW.Done.__enum__ = gW;
    var qV = function(q, qZ, js) {
        if (js == null) {
            js = true
        }
        if (qZ == null) {
            qZ = true
        }
        this["final"] = false;
        this.htools = new mw();
        this.huffman = this.buildFixedHuffman();
        this.huffdist = null;
        this.len = 0;
        this.dist = 0;
        if (qZ) {
            this.state = gW.Head
        } else {
            this.state = gW.Block
        }
        this.input = q;
        this.bits = 0;
        this.nbits = 0;
        this.needed = 0;
        this.output = null;
        this.outpos = 0;
        this.lengths = [];
        var qY = 0;
        while (qY < 19) {
            var i2 = qY++;
            this.lengths.push(-1)
        }
        this.window = new lw(js)
    };
    nt["haxe.zip.InflateImpl"] = qV;
    qV.__name__ = ["haxe", "zip", "InflateImpl"];
    qV.run = function(js, qZ) {
        if (qZ == null) {
            qZ = 65536
        }
        var i2 = eg.alloc(qZ);
        var i1 = new g9();
        var qY = new qV(js);
        while (true) {
            var q = qY.readBytes(i2, 0, qZ);
            i1.addBytes(i2, 0, q);
            if (q < qZ) {
                break
            }
        }
        return i1.getBytes()
    };
    qV.prototype = {
        nbits: null,
        bits: null,
        state: null,
        "final": null,
        huffman: null,
        huffdist: null,
        htools: null,
        len: null,
        dist: null,
        needed: null,
        output: null,
        outpos: null,
        input: null,
        lengths: null,
        window: null,
        buildFixedHuffman: function() {
            if (qV.FIXED_HUFFMAN != null) {
                return qV.FIXED_HUFFMAN
            }
            var i = [];
            var q = 0;
            while (q < 288) {
                var i1 = q++;
                i.push(i1 <= 143 ? 8 : i1 <= 255 ? 9 : i1 <= 279 ? 7 : 8)
            }
            qV.FIXED_HUFFMAN = this.htools.make(i, 0, 288, 10);
            return qV.FIXED_HUFFMAN
        },
        readBytes: function(q, i1, i) {
            this.needed = i;
            this.outpos = i1;
            this.output = q;
            if (i > 0) {
                while (this.inflateLoop()) {}
            }
            return i - this.needed
        },
        getBits: function(q) {
            while (this.nbits < q) {
                this.bits |= this.input.readByte() << this.nbits;
                this.nbits += 8
            }
            var i = this.bits & (1 << q) - 1;
            this.nbits -= q;
            this.bits >>= q;
            return i
        },
        getBit: function() {
            if (this.nbits == 0) {
                this.nbits = 8;
                this.bits = this.input.readByte()
            }
            var i = (this.bits & 1) == 1;
            this.nbits--;
            this.bits >>= 1;
            return i
        },
        getRevBits: function(i) {
            if (i == 0) {
                return 0
            } else {
                if (this.getBit()) {
                    return 1 << i - 1 | this.getRevBits(i - 1)
                } else {
                    return this.getRevBits(i - 1)
                }
            }
        },
        resetBits: function() {
            this.bits = 0;
            this.nbits = 0
        },
        addBytes: function(q, i1, i) {
            this.window.addBytes(q, i1, i);
            this.output.blit(this.outpos, q, i1, i);
            this.needed -= i;
            this.outpos += i
        },
        addByte: function(i) {
            this.window.addByte(i);
            this.output.b[this.outpos] = i & 255;
            this.needed--;
            this.outpos++
        },
        addDistOne: function(js) {
            var i2 = this.window.getLastChar();
            var i1 = 0;
            while (i1 < js) {
                var q = i1++;
                this.addByte(i2)
            }
        },
        addDist: function(q, i) {
            this.addBytes(this.window.buffer, this.window.pos - q, i)
        },
        applyHuffman: function(i2) {
            switch (i2[1]) {
                case 0:
                    var qY = i2[2];
                    return qY;
                case 1:
                    var i = i2[3];
                    var q = i2[2];
                    return this.applyHuffman(this.getBit() ? i : q);
                case 2:
                    var js = i2[3];
                    var i1 = i2[2];
                    return this.applyHuffman(js[this.getBits(i1)])
            }
        },
        inflateLengths: function(i2, q) {
            var js = 0;
            var qY = 0;
            while (js < q) {
                var qZ = this.applyHuffman(this.huffman);
                switch (qZ) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                        qY = qZ;
                        i2[js] = qZ;
                        js++;
                        break;
                    case 16:
                        var i1 = js + 3 + this.getBits(2);
                        if (i1 > q) {
                            throw new nM("Invalid data")
                        }
                        while (js < i1) {
                            i2[js] = qY;
                            js++
                        }
                        break;
                    case 17:
                        js += 3 + this.getBits(3);
                        if (js > q) {
                            throw new nM("Invalid data")
                        }
                        break;
                    case 18:
                        js += 11 + this.getBits(7);
                        if (js > q) {
                            throw new nM("Invalid data")
                        }
                        break;
                    default:
                        throw new nM("Invalid data")
                }
            }
        },
        inflateLoop: function() {
            var qZ = this.state;
            switch (qZ[1]) {
                case 0:
                    var ri = this.input.readByte();
                    var q4 = ri & 15;
                    var rm = ri >> 4;
                    if (q4 != 8) {
                        throw new nM("Invalid data")
                    }
                    var rp = this.input.readByte();
                    var q0 = (rp & 32) != 0;
                    if (((ri << 8) + rp) % 31 != 0) {
                        throw new nM("Invalid data")
                    }
                    if (q0) {
                        throw new nM("Unsupported dictionary")
                    }
                    this.state = gW.Block;
                    return true;
                case 4:
                    var q = this.window.checksum();
                    if (q == null) {
                        this.state = gW.Done;
                        return true
                    }
                    var q5 = gS.read(this.input);
                    if (!q.equals(q5)) {
                        throw new nM("Invalid CRC")
                    }
                    this.state = gW.Done;
                    return true;
                case 7:
                    return false;
                case 1:
                    this["final"] = this.getBit();
                    var q9 = this.getBits(2);
                    switch (q9) {
                        case 0:
                            this.len = this.input.readUInt16();
                            var q1 = this.input.readUInt16();
                            if (q1 != 65535 - this.len) {
                                throw new nM("Invalid data")
                            }
                            this.state = gW.Flat;
                            var ra = this.inflateLoop();
                            this.resetBits();
                            return ra;
                        case 1:
                            this.huffman = this.buildFixedHuffman();
                            this.huffdist = null;
                            this.state = gW.CData;
                            return true;
                        case 2:
                            var q6 = this.getBits(5) + 257;
                            var rl = this.getBits(5) + 1;
                            var rh = this.getBits(4) + 4;
                            var q8 = 0;
                            while (q8 < rh) {
                                var rk = q8++;
                                this.lengths[qV.CODE_LENGTHS_POS[rk]] = this.getBits(3)
                            }
                            var qY = rh;
                            while (qY < 19) {
                                var rg = qY++;
                                this.lengths[qV.CODE_LENGTHS_POS[rg]] = 0
                            }
                            this.huffman = this.htools.make(this.lengths, 0, 19, 8);
                            var q2 = [];
                            var q7 = 0;
                            var js = q6 + rl;
                            while (q7 < js) {
                                var re = q7++;
                                q2.push(0)
                            }
                            this.inflateLengths(q2, q6 + rl);
                            this.huffdist = this.htools.make(q2, q6, rl, 16);
                            this.huffman = this.htools.make(q2, 0, q6, 16);
                            this.state = gW.CData;
                            return true;
                        default:
                            throw new nM("Invalid data")
                    }
                    break;
                case 3:
                    var rj;
                    if (this.len < this.needed) {
                        rj = this.len
                    } else {
                        rj = this.needed
                    }
                    var rb = this.input.read(rj);
                    this.len -= rj;
                    this.addBytes(rb, 0, rj);
                    if (this.len == 0) {
                        if (this["final"]) {
                            this.state = gW.Crc
                        } else {
                            this.state = gW.Block
                        }
                    }
                    return this.needed > 0;
                case 6:
                    var rf;
                    if (this.len < this.needed) {
                        rf = this.len
                    } else {
                        rf = this.needed
                    }
                    this.addDistOne(rf);
                    this.len -= rf;
                    if (this.len == 0) {
                        this.state = gW.CData
                    }
                    return this.needed > 0;
                case 5:
                    while (this.len > 0 && this.needed > 0) {
                        var ro;
                        if (this.len < this.dist) {
                            ro = this.len
                        } else {
                            ro = this.dist
                        }
                        var rd;
                        if (this.needed < ro) {
                            rd = this.needed
                        } else {
                            rd = ro
                        }
                        this.addDist(this.dist, rd);
                        this.len -= rd
                    }
                    if (this.len == 0) {
                        this.state = gW.CData
                    }
                    return this.needed > 0;
                case 2:
                    var rc = this.applyHuffman(this.huffman);
                    if (rc < 256) {
                        this.addByte(rc);
                        return this.needed > 0
                    } else {
                        if (rc == 256) {
                            if (this["final"]) {
                                this.state = gW.Crc
                            } else {
                                this.state = gW.Block
                            }
                            return true
                        } else {
                            rc -= 257;
                            var q3 = qV.LEN_EXTRA_BITS_TBL[rc];
                            if (q3 == -1) {
                                throw new nM("Invalid data")
                            }
                            this.len = qV.LEN_BASE_VAL_TBL[rc] + this.getBits(q3);
                            var rn;
                            if (this.huffdist == null) {
                                rn = this.getRevBits(5)
                            } else {
                                rn = this.applyHuffman(this.huffdist)
                            }
                            q3 = qV.DIST_EXTRA_BITS_TBL[rn];
                            if (q3 == -1) {
                                throw new nM("Invalid data")
                            }
                            this.dist = qV.DIST_BASE_VAL_TBL[rn] + this.getBits(q3);
                            if (this.dist > this.window.available()) {
                                throw new nM("Invalid data")
                            }
                            if (this.dist == 1) {
                                this.state = gW.DistOne
                            } else {
                                this.state = gW.Dist
                            }
                            return true
                        }
                    }
                    break
            }
        },
        __class__: qV
    };
    var dw = function() {};
    nt["haxe.zip.Uncompress"] = dw;
    dw.__name__ = ["haxe", "zip", "Uncompress"];
    dw.run = function(q, i) {
		var t = new bB(q)
		console.log(t, "s");
        return qV.run(new bB(q), i)
    };
    var hS = function() {};
    nt["hxsignal.Signal"] = hS;
    hS.__name__ = ["hxsignal", "Signal"];
    hS.prototype = {
        connect: function(i2, i1, q, i) {},
        isConnected: function(i) {
            return false
        },
        block: function(q, i) {},
        isBlocked: function(i) {
            return false
        },
        disconnect: function(i) {
            return false
        },
        disconnectAll: function() {},
        disconnectGroup: function(i) {
            return false
        },
        numSlots: null,
        __class__: hS
    };
    var pz = nt["hxsignal.ConnectionTimes"] = {
        __ename__: ["hxsignal", "ConnectionTimes"],
        __constructs__: ["Once", "Times", "Forever"]
    };
    pz.Once = ["Once", 0];
    pz.Once.toString = ea;
    pz.Once.__enum__ = pz;
    pz.Times = function(i) {
        var q = ["Times", 1, i];
        q.__enum__ = pz;
        q.toString = ea;
        return q
    };
    pz.Forever = ["Forever", 2];
    pz.Forever.toString = ea;
    pz.Forever.__enum__ = pz;
    var ow = nt["hxsignal.ConnectPosition"] = {
        __ename__: ["hxsignal", "ConnectPosition"],
        __constructs__: ["AtBack", "AtFront"]
    };
    ow.AtBack = ["AtBack", 0];
    ow.AtBack.toString = ea;
    ow.AtBack.__enum__ = ow;
    ow.AtFront = ["AtFront", 1];
    ow.AtFront.toString = ea;
    ow.AtFront.__enum__ = ow;
    var iD = function() {
        oI.call(this)
    };
    nt["hxsignal.ds.LinkedList"] = iD;
    iD.__name__ = ["hxsignal", "ds", "LinkedList"];
    iD.__super__ = oI;
    iD.prototype = lP(oI.prototype, {
        removeNode: function(q, i) {
            if (q != null) {
                if (i == null) {
                    this.h = q[1]
                } else {
                    i[1] = q[1]
                }
                if (this.q == q) {
                    this.q = i
                }
                this.length--
            }
        },
        listIterator: function() {
            var i1 = this;
            var i = this.h;
            var i2 = null;
            var q = null;
            return {
                hasNext: function() {
                    return i != null
                },
                next: function() {
                    if (i == null) {
                        return null
                    }
                    q = i2;
                    i2 = i;
                    i = i[1];
                    return i2[0]
                },
                remove: function() {
                    if (i2 == q) {
                        return
                    }
                    if (i2 != null) {
                        if (q == null) {
                            i1.h = i2[1]
                        } else {
                            q[1] = i2[1]
                        }
                        if (i1.q == i2) {
                            i1.q = q
                        }
                        i1.length--
                    }
                    i2 = q
                }
            }
        },
        __class__: iD
    });
    var qI = function() {
        dh.call(this)
    };
    nt["hxsignal.ds.TreeMap"] = qI;
    qI.__name__ = ["hxsignal", "ds", "TreeMap"];
    qI.__super__ = dh;
    qI.prototype = lP(dh.prototype, {
        firstKey: function() {
            var i = this.getFirstNode();
            if (i != null) {
                return i.key
            } else {
                return null
            }
        },
        lastKey: function() {
            var i = this.getLastNode();
            if (i != null) {
                return i.key
            } else {
                return null
            }
        },
        firstValue: function() {
            var i = this.getFirstNode();
            if (i != null) {
                return i.value
            } else {
                return null
            }
        },
        lastValue: function() {
            var i = this.getLastNode();
            if (i != null) {
                return i.value
            } else {
                return null
            }
        },
        getFirstNode: function() {
            var i = this.root;
            if (i != null) {
                while (i.left != null) {
                    i = i.left
                }
            }
            return i
        },
        getLastNode: function() {
            var i = this.root;
            if (i != null) {
                while (i.right != null) {
                    i = i.right
                }
            }
            return i
        },
        __class__: qI
    });
    var os = function(i, i1, q) {
        this.signal = i;
        if (i1 == null) {
            throw new nM("Slot cannot be null")
        }
        this.slot = i1;
        this.times = q;
        this.blocked = false;
        this.connected = true;
        this.calledTimes = 0
    };
    nt["hxsignal.impl.Connection"] = os;
    os.__name__ = ["hxsignal", "impl", "Connection"];
    os.prototype = {
        slot: null,
        times: null,
        calledTimes: null,
        blocked: null,
        connected: null,
        groupId: null,
        signal: null,
        __class__: os
    };
    var lk = function() {
        this.slots = new d8()
    };
    nt["hxsignal.impl.SignalBase"] = lk;
    lk.__name__ = ["hxsignal", "impl", "SignalBase"];
    lk.prototype = {
        emitting: null,
        numSlots: null,
        get_numSlots: function() {
            return this.slots.get_length()
        },
        slots: null,
        connect: function(js, i2, q, i) {
            if (i2 == null) {
                i2 = pz.Forever
            }
            if (!this.updateConnection(js, i2)) {
                var i1 = new os(this, js, i2);
                this.slots.insert(i1, q, i)
            }
        },
        updateConnection: function(js, i2, i1, i) {
            var q = this.slots.get(js);
            if (q == null) {
                return false
            }
            if (i1 != null && q.groupId != i1 || i != null) {
                this.slots.disconnect(js);
                return false
            }
            q.times = i2;
            q.calledTimes = 0;
            q.connected = true;
            return true
        },
        isConnected: function(i) {
            return this.slots.has(i)
        },
        loop: function(i2) {
            this.emitting = true;
            var qZ = this.slots.groups.iterator();
            while (qZ.hasNext()) {
                var js = qZ.next();
                var i1 = js.h;
                var qY = null;
                while (i1 != null) {
                    var i;
                    i = (function(q2) {
                        var q1;
                        qY = i1[0];
                        i1 = i1[1];
                        q1 = qY;
                        return q1
                    }(this));
                    if (i.connected && !i.blocked) {
                        i.calledTimes++;
                        i2(i);
                        if (!i.connected) {
                            this.slots.disconnect(i.slot)
                        }
                        if (i.times == pz.Once) {
                            i.times = pz.Times(1)
                        }
                        var q0 = i.times;
                        switch (q0[1]) {
                            case 1:
                                var q = q0[2];
                                if (q <= i.calledTimes) {
                                    this.slots.disconnect(i.slot)
                                }
                                break;
                            default:
                        }
                    }
                }
            }
            this.emitting = false
        },
        block: function(i1, q) {
            var i = this.slots.get(i1);
            if (i == null) {
                return
            }
            i.blocked = q
        },
        isBlocked: function(q) {
            var i = this.slots.get(q);
            if (i == null) {
                return false
            }
            return i.blocked
        },
        disconnect: function(i) {
            return this.slots.disconnect(i)
        },
        disconnectAll: function() {
            if (this.emitting) {
                this.slots.disconnectAll()
            } else {
                this.slots.clear()
            }
        },
        disconnectGroup: function(i) {
            return this.slots.disconnectGroup(i)
        },
        __class__: lk,
        __properties__: {
            get_numSlots: "get_numSlots"
        }
    };
    var o0 = function() {
        lk.call(this)
    };
    nt["hxsignal.impl.Signal0"] = o0;
    o0.__name__ = ["hxsignal", "impl", "Signal0"];
    o0.__super__ = lk;
    o0.prototype = lP(lk.prototype, {
        emit: function() {
            var i = function(q) {
                q.slot()
            };
            this.loop(i)
        },
        __class__: o0
    });
    var oY = function() {
        lk.call(this)
    };
    nt["hxsignal.impl.Signal1"] = oY;
    oY.__name__ = ["hxsignal", "impl", "Signal1"];
    oY.__super__ = lk;
    oY.prototype = lP(lk.prototype, {
        emit: function(q) {
            var i = function(i1) {
                i1.slot(q)
            };
            this.loop(i)
        },
        __class__: oY
    });
    var oW = function() {
        lk.call(this)
    };
    nt["hxsignal.impl.Signal2"] = oW;
    oW.__name__ = ["hxsignal", "impl", "Signal2"];
    oW.__super__ = lk;
    oW.prototype = lP(lk.prototype, {
        emit: function(i1, q) {
            var i = function(i2) {
                i2.slot(i1, q)
            };
            this.loop(i)
        },
        __class__: oW
    });
    var oU = function() {
        lk.call(this)
    };
    nt["hxsignal.impl.Signal3"] = oU;
    oU.__name__ = ["hxsignal", "impl", "Signal3"];
    oU.__super__ = lk;
    oU.prototype = lP(lk.prototype, {
        emit: function(i2, i1, q) {
            var i = function(js) {
                js.slot(i2, i1, q)
            };
            this.loop(i)
        },
        __class__: oU
    });
    var d8 = function() {
        this.clear()
    };
    nt["hxsignal.impl.SlotMap"] = d8;
    d8.__name__ = ["hxsignal", "impl", "SlotMap"];
    d8.prototype = {
        groups: null,
        slots: null,
        clear: function() {
            this.slots = new qS();
            this.groups = new qI();
            this.groups.set(0, new iD())
        },
        insert: function(q, i1, i) {
            if (i == null) {
                i = ow.AtBack
            }
            this.slots.set(q.slot, q);
            var i2;
            if (i1 == null) {
                if (i != null) {
                    switch (i[1]) {
                        case 1:
                            i1 = this.groups.firstKey();
                            i2 = this.groups.firstValue();
                            break;
                        default:
                            i1 = this.groups.lastKey();
                            i2 = this.groups.lastValue()
                    }
                } else {
                    i1 = this.groups.lastKey();
                    i2 = this.groups.lastValue()
                }
            } else {
                i2 = this.groups.get(i1);
                if (i2 == null) {
                    i2 = new iD();
                    this.groups.set(i1, i2)
                }
            }
            q.groupId = i1;
            if (i != null) {
                switch (i[1]) {
                    case 1:
                        i2.push(q);
                        break;
                    default:
                        i2.add(q)
                }
            } else {
                i2.add(q)
            }
        },
        get: function(i) {
            return this.slots.h[i.__id__]
        },
        has: function(i) {
            return this.slots.h[i.__id__] != null
        },
        disconnect: function(q) {
            var i = this.slots.h[q.__id__];
            if (i == null) {
                return false
            }
            this.slots.remove(q);
            i.connected = false;
            return true
        },
        disconnectGroup: function(i1) {
            var js = this.groups.get(i1);
            if (js == null) {
                return false
            }
            this.groups.remove(i1);
            var q = js.h;
            var i2 = null;
            while (q != null) {
                var i;
                i = (function(qZ) {
                    var qY;
                    i2 = q[0];
                    q = q[1];
                    qY = i2;
                    return qY
                }(this));
                this.slots.remove(i.slot);
                i.connected = false
            }
            return true
        },
        disconnectAll: function() {
            var q = this.groups.keys();
            while (q.hasNext()) {
                var i = q.next();
                this.disconnectGroup(i)
            }
        },
        get_length: function() {
            return jN.count(this.slots)
        },
        __class__: d8,
        __properties__: {
            get_length: "get_length"
        }
    };
    var nM = function(i) {
        Error.call(this);
        this.val = i;
        this.message = String(i);
        if (Error.captureStackTrace) {
            Error.captureStackTrace(this, nM)
        }
    };
    nt["js._Boot.HaxeError"] = nM;
    nM.__name__ = ["js", "_Boot", "HaxeError"];
    nM.__super__ = Error;
    nM.prototype = lP(Error.prototype, {
        val: null,
        __class__: nM
    });
    var n0 = function() {};
    nt["js.Boot"] = n0;
    n0.__name__ = ["js", "Boot"];
    n0.__unhtml = function(i) {
        return i.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;")
    };
    n0.__trace = function(q, i1) {
        var qZ;
        if (i1 != null) {
            qZ = i1.fileName + ":" + i1.lineNumber + ": "
        } else {
            qZ = ""
        }
        qZ += n0.__string_rec(q, "");
        if (i1 != null && i1.customParams != null) {
            var qY = 0;
            var i2 = i1.customParams;
            while (qY < i2.length) {
                var q0 = i2[qY];
                ++qY;
                qZ += "," + n0.__string_rec(q0, "")
            }
        }
        var js;
        if (typeof(document) != "undefined" && (js = document.getElementById("haxe:trace")) != null) {
            js.innerHTML += n0.__unhtml(qZ) + "<br/>"
        } else {
            if (typeof jb != "undefined" && jb.log != null) {
                jb.log(qZ)
            }
        }
    };
    n0.getClass = function(i1) {
        if ((i1 instanceof Array) && i1.__enum__ == null) {
            return Array
        } else {
            var i = i1.__class__;
            if (i != null) {
                return i
            }
            var q = n0.__nativeClassName(i1);
            if (q != null) {
                return n0.__resolveNativeClass(q)
            }
            return null
        }
    };
    n0.__string_rec = function(q4, q1) {
        if (q4 == null) {
            return "null"
        }
        if (q1.length >= 5) {
            return "<...>"
        }
        var q0 = typeof(q4);
        if (q0 == "function" && (q4.__name__ || q4.__ename__)) {
            q0 = "object"
        }
        switch (q0) {
            case "object":
                if (q4 instanceof Array) {
                    if (q4.__enum__) {
                        if (q4.length == 2) {
                            return q4[0]
                        }
                        var q = q4[0] + "(";
                        q1 += "\t";
                        var q3 = 2;
                        var qZ = q4.length;
                        while (q3 < qZ) {
                            var q7 = q3++;
                            if (q7 != 2) {
                                q += "," + n0.__string_rec(q4[q7], q1)
                            } else {
                                q += n0.__string_rec(q4[q7], q1)
                            }
                        }
                        return q + ")"
                    }
                    var q8 = q4.length;
                    var ra;
                    var js = "[";
                    q1 += "\t";
                    var q2 = 0;
                    while (q2 < q8) {
                        var q6 = q2++;
                        js += (q6 > 0 ? "," : "") + n0.__string_rec(q4[q6], q1)
                    }
                    js += "]";
                    return js
                }
                var rb;
                try {
                    rb = q4.toString
                } catch (rc) {
                    lF.lastException = rc;
                    if (rc instanceof nM) {
                        rc = rc.val
                    }
                    return "???"
                }
                if (rb != null && rb != Object.toString && typeof(rb) == "function") {
                    var qY = q4.toString();
                    if (qY != "[object Object]") {
                        return qY
                    }
                }
                var q9 = null;
                var q5 = "{\n";
                q1 += "\t";
                var rd = q4.hasOwnProperty != null;
                for (var q9 in q4) {
                    if (rd && !q4.hasOwnProperty(q9)) {
                        continue
                    }
                    if (q9 == "prototype" || q9 == "__class__" || q9 == "__super__" || q9 == "__interfaces__" || q9 == "__properties__") {
                        continue
                    }
                    if (q5.length != 2) {
                        q5 += ", \n"
                    }
                    q5 += q1 + q9 + " : " + n0.__string_rec(q4[q9], q1)
                }
                q1 = q1.substring(1);
                q5 += "\n" + q1 + "}";
                return q5;
            case "function":
                return "<function>";
            case "string":
                return q4;
            default:
                return String(q4)
        }
    };
    n0.__interfLoop = function(q1, i2) {
        if (q1 == null) {
            return false
        }
        if (q1 == i2) {
            return true
        }
        var q = q1.__interfaces__;
        if (q != null) {
            var qZ = 0;
            var q0 = q.length;
            while (qZ < q0) {
                var js = qZ++;
                var qY = q[js];
                if (qY == i2 || n0.__interfLoop(qY, i2)) {
                    return true
                }
            }
        }
        return n0.__interfLoop(q1.__super__, i2)
    };
    n0.__instanceof = function(q, i) {
        if (i == null) {
            return false
        }
        switch (i) {
            case a:
                return (q | 0) === q;
            case ht:
                return typeof(q) == "number";
            case em:
                return typeof(q) == "boolean";
            case String:
                return typeof(q) == "string";
            case Array:
                return (q instanceof Array) && q.__enum__ == null;
            case dK:
                return true;
            default:
                if (q != null) {
                    if (typeof(i) == "function") {
                        if (q instanceof i) {
                            return true
                        }
                        if (n0.__interfLoop(n0.getClass(q), i)) {
                            return true
                        }
                    } else {
                        if (typeof(i) == "object" && n0.__isNativeObj(i)) {
                            if (q instanceof i) {
                                return true
                            }
                        }
                    }
                } else {
                    return false
                }
                if (i == nq && q.__name__ != null) {
                    return true
                }
                if (i == jo && q.__ename__ != null) {
                    return true
                }
                return q.__enum__ == i
        }
    };
    n0.__cast = function(q, i) {
        if (n0.__instanceof(q, i)) {
            return q
        } else {
            throw new nM("Cannot cast " + kr.string(q) + " to " + kr.string(i))
        }
    };
    n0.__nativeClassName = function(q) {
        var i = n0.__toStr.call(q).slice(8, -1);
        if (i == "Object" || i == "Function" || i == "Math" || i == "JSON") {
            return null
        }
        return i
    };
    n0.__isNativeObj = function(i) {
        return n0.__nativeClassName(i) != null
    };
    n0.__resolveNativeClass = function(i) {
        return mL[i]
    };
    var bq = function() {};
    nt["js.Browser"] = bq;
    bq.__name__ = ["js", "Browser"];
    bq.getLocalStorage = function() {
        try {
            var i = window.localStorage;
            i.getItem("");
            return i
        } catch (q) {
            lF.lastException = q;
            if (q instanceof nM) {
                q = q.val
            }
            return null
        }
    };
    bq.createXMLHttpRequest = function() {
        if (typeof XMLHttpRequest != "undefined") {
            return new XMLHttpRequest()
        }
        if (typeof ActiveXObject != "undefined") {
            return new ActiveXObject("Microsoft.XMLHTTP")
        }
        throw new nM("Unable to create XMLHttpRequest object.")
    };
    bq.alert = function(i) {
        window.alert(n0.__string_rec(i, ""))
    };
    var ng = function(i1) {
        if ((i1 instanceof Array) && i1.__enum__ == null) {
            this.a = i1;
            this.byteLength = i1.length
        } else {
            var q = i1;
            this.a = [];
            var js = 0;
            while (js < q) {
                var i2 = js++;
                this.a[i2] = 0
            }
            this.byteLength = q
        }
    };
    nt["js.html.compat.ArrayBuffer"] = ng;
    ng.__name__ = ["js", "html", "compat", "ArrayBuffer"];
    ng.sliceImpl = function(i2, q) {
        var i1 = new qw(this, i2, q == null ? null : q - i2);
        var i = new gf(i1.byteLength);
        var js = new qw(i);
        js.set(i1);
        return i
    };
    ng.prototype = {
        byteLength: null,
        a: null,
        slice: function(q, i) {
            return new ng(this.a.slice(q, i))
        },
        __class__: ng
    };
    var bW = function(i, i1, q) {
        this.buf = i;
        if (i1 == null) {
            this.offset = 0
        } else {
            this.offset = i1
        }
        if (q == null) {
            this.length = i.byteLength - this.offset
        } else {
            this.length = q
        }
        if (this.offset < 0 || this.length < 0 || this.offset + this.length > i.byteLength) {
            throw new nM(dP.OutsideBounds)
        }
    };
    nt["js.html.compat.DataView"] = bW;
    bW.__name__ = ["js", "html", "compat", "DataView"];
    bW.prototype = {
        buf: null,
        offset: null,
        length: null,
        getInt8: function(q) {
            var i = this.buf.a[this.offset + q];
            if (i >= 128) {
                return i - 256
            } else {
                return i
            }
        },
        getUint8: function(i) {
            return this.buf.a[this.offset + i]
        },
        getInt16: function(q, i1) {
            var i = this.getUint16(q, i1);
            if (i >= 32768) {
                return i - 65536
            } else {
                return i
            }
        },
        getUint16: function(i, q) {
            if (q) {
                return this.buf.a[this.offset + i] | this.buf.a[this.offset + i + 1] << 8
            } else {
                return this.buf.a[this.offset + i] << 8 | this.buf.a[this.offset + i + 1]
            }
        },
        getInt32: function(i1, js) {
            var i2 = this.offset + i1;
            var q = this.buf.a[i2++];
            var i = this.buf.a[i2++];
            var qZ = this.buf.a[i2++];
            var qY = this.buf.a[i2++];
            if (js) {
                return q | i << 8 | qZ << 16 | qY << 24
            } else {
                return qY | qZ << 8 | i << 16 | q << 24
            }
        },
        getUint32: function(q, i1) {
            var i = this.getInt32(q, i1);
            if (i < 0) {
                return i + 4294967296
            } else {
                return i
            }
        },
        getFloat32: function(i, q) {
            return pW.i32ToFloat(this.getInt32(i, q))
        },
        getFloat64: function(i1, i2) {
            var q = this.getInt32(i1, i2);
            var i = this.getInt32(i1 + 4, i2);
            return pW.i64ToDouble(i2 ? q : i, i2 ? i : q)
        },
        setInt8: function(i, q) {
            if (q < 0) {
                this.buf.a[i + this.offset] = q + 128 & 255
            } else {
                this.buf.a[i + this.offset] = q & 255
            }
        },
        setUint8: function(i, q) {
            this.buf.a[i + this.offset] = q & 255
        },
        setInt16: function(i, q, i1) {
            this.setUint16(i, q < 0 ? q + 65536 : q, i1)
        },
        setUint16: function(i, q, i2) {
            var i1 = i + this.offset;
            if (i2) {
                this.buf.a[i1] = q & 255;
                this.buf.a[i1++] = q >> 8 & 255
            } else {
                this.buf.a[i1++] = q >> 8 & 255;
                this.buf.a[i1] = q & 255
            }
        },
        setInt32: function(i, q, i1) {
            this.setUint32(i, q, i1)
        },
        setUint32: function(i, q, i2) {
            var i1 = i + this.offset;
            if (i2) {
                this.buf.a[i1++] = q & 255;
                this.buf.a[i1++] = q >> 8 & 255;
                this.buf.a[i1++] = q >> 16 & 255;
                this.buf.a[i1++] = q >>> 24
            } else {
                this.buf.a[i1++] = q >>> 24;
                this.buf.a[i1++] = q >> 16 & 255;
                this.buf.a[i1++] = q >> 8 & 255;
                this.buf.a[i1++] = q & 255
            }
        },
        setFloat32: function(i, q, i1) {
            this.setUint32(i, pW.floatToI32(q), i1)
        },
        setFloat64: function(i, q, i1) {
            var i2 = pW.doubleToI64(q);
            if (i1) {
                this.setUint32(i, i2.low);
                this.setUint32(i, i2.high)
            } else {
                this.setUint32(i, i2.high);
                this.setUint32(i, i2.low)
            }
        },
        __class__: bW
    };
    var pM = function() {};
    nt["js.html.compat.Uint8Array"] = pM;
    pM.__name__ = ["js", "html", "compat", "Uint8Array"];
    pM._new = function(i2, q0, qY) {
        var q;
        if (typeof(i2) == "number") {
            q = [];
            var qZ = 0;
            while (qZ < i2) {
                var js = qZ++;
                q[js] = 0
            }
            q.byteLength = q.length;
            q.byteOffset = 0;
            q.buffer = new ng(q)
        } else {
            if (n0.__instanceof(i2, ng)) {
                var i1 = i2;
                if (q0 == null) {
                    q0 = 0
                }
                if (qY == null) {
                    qY = i1.byteLength - q0
                }
                if (q0 == 0) {
                    q = i1.a
                } else {
                    q = i1.a.slice(q0, q0 + qY)
                }
                q.byteLength = q.length;
                q.byteOffset = q0;
                q.buffer = i1
            } else {
				
				function toarray (b){
				var t = new Array;
				for(var i=0; i<b.length;i++){

				t[i] = b[i];

				}

				return t;

				}
				
				//console.log(i2);
				var jihd = toarray(new Uint8Array(i2));
				
				i2 = jihd;
				
                if ((i2 instanceof Array) && i2.__enum__ == null) {
                    q = i2.slice();
                    q.byteLength = q.length;
                    q.byteOffset = 0;
                    q.buffer = new ng(q)
                } else {
                    throw new nM("TODO " + kr.string(i2))
                }
            }
        }
        q.subarray = pM._subarray;
        q.set = pM._set;
        return q
    };
    pM._set = function(q5, js) {
        var q4 = this;
        if (n0.__instanceof(q5.buffer, ng)) {
            var q3 = q5;
            if (q5.byteLength + js > q4.byteLength) {
                throw new nM("set() outside of range")
            }
            var q2 = 0;
            var q0 = q5.byteLength;
            while (q2 < q0) {
                var qZ = q2++;
                q4[qZ + js] = q3[qZ]
            }
        } else {
            if ((q5 instanceof Array) && q5.__enum__ == null) {
                var q = q5;
                if (q.length + js > q4.byteLength) {
                    throw new nM("set() outside of range")
                }
                var qY = 0;
                var q1 = q.length;
                while (qY < q1) {
                    var i2 = qY++;
                    q4[i2 + js] = q[i2]
                }
            } else {
                throw new nM("TODO")
            }
        }
    };
    pM._subarray = function(i2, q) {
        var i1 = this;
        var i = pM._new(i1.slice(i2, q));
        i.byteOffset = i2;
        return i
    };
    var qp = function() {
        this.enabled = true;
        this.audio = new io();
        this.font = new io();
        this.image = new io();
        this.version = kr["int"](Math.random() * 1000000)
    };
    nt["lime.AssetCache"] = qp;
    qp.__name__ = ["lime", "AssetCache"];
    qp.prototype = {
        audio: null,
        enabled: null,
        image: null,
        font: null,
        version: null,
        clear: function(qZ) {
            if (qZ == null) {
                this.audio = new io();
                this.font = new io();
                this.image = new io()
            } else {
                var qY = this.audio.keys();
                while (qY.hasNext()) {
                    var i1 = qY.next();
                    if (cP.startsWith(i1, qZ)) {
                        this.audio.remove(i1)
                    }
                }
                var q = this.font.keys();
                while (q.hasNext()) {
                    var js = q.next();
                    if (cP.startsWith(js, qZ)) {
                        this.font.remove(js)
                    }
                }
                var i = this.image.keys();
                while (i.hasNext()) {
                    var i2 = i.next();
                    if (cP.startsWith(i2, qZ)) {
                        this.image.remove(i2)
                    }
                }
            }
        },
        __class__: qp
    };
    var nO = function() {
        this.canceled = false;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = []
    };
    nt["lime.app.Event_Void_Void"] = nO;
    nO.__name__ = ["lime", "app", "Event_Void_Void"];
    nO.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(qY, i2, i1) {
            if (i1 == null) {
                i1 = 0
            }
            if (i2 == null) {
                i2 = false
            }
            var js = 0;
            var qZ = this.__priorities.length;
            while (js < qZ) {
                var q = js++;
                if (i1 > this.__priorities[q]) {
                    this.__listeners.splice(q, 0, qY);
                    this.__priorities.splice(q, 0, i1);
                    this.__repeat.splice(q, 0, !i2);
                    return
                }
            }
            this.__listeners.push(qY);
            this.__priorities.push(i1);
            this.__repeat.push(!i2)
        },
        cancel: function() {
            this.canceled = true
        },
        has: function(i1) {
            var i2 = 0;
            var q = this.__listeners;
            while (i2 < q.length) {
                var i = q[i2];
                ++i2;
                if (ar.compareMethods(i, i1)) {
                    return true
                }
            }
            return false
        },
        remove: function(i1) {
            var q = this.__listeners.length;
            while (--q >= 0) {
                if (ar.compareMethods(this.__listeners[q], i1)) {
                    this.__listeners.splice(q, 1);
                    this.__priorities.splice(q, 1);
                    this.__repeat.splice(q, 1)
                }
            }
        },
        __listeners: null,
        dispatch: function() {
            this.canceled = false;
            var i1 = this.__listeners;
            var i2 = this.__repeat;
            var q = 0;
            while (q < i1.length) {
                i1[q]();
                if (!i2[q]) {
                    this.remove(i1[q])
                } else {
                    q++
                }
                if (this.canceled) {
                    break
                }
            }
        },
        __class__: nO
    };
    var bY = function() {};
    nt["lime.Assets"] = bY;
    bY.__name__ = ["lime", "Assets"];
    bY.exists = function(qY, i1) {
        bY.initialize();
        if (i1 == null) {
            i1 = "BINARY"
        }
        var q = qY.substring(0, qY.indexOf(":"));
        var i2;
        var js = qY.indexOf(":") + 1;
        i2 = cj.substr(qY, js, null);
        var i = bY.getLibrary(q);
        if (i != null) {
            return i.exists(i2, i1)
        }
        return false
    };
    bY.getAudioBuffer = function(q0, i1) {
        if (i1 == null) {
            i1 = true
        }
        bY.initialize();
        if (i1 && bY.cache.enabled && bY.cache.audio.exists(q0)) {
            var qY = bY.cache.audio.get(q0);
            if (bY.isValidAudio(qY)) {
                return qY
            }
        }
        var q = q0.substring(0, q0.indexOf(":"));
        var js;
        var qZ = q0.indexOf(":") + 1;
        js = cj.substr(q0, qZ, null);
        var i = bY.getLibrary(q);
        if (i != null) {
            if (i.exists(js, "SOUND")) {
                if (i.isLocal(js, "SOUND")) {
                    var i2 = i.getAudioBuffer(js);
                    if (i1 && bY.cache.enabled) {
                        bY.cache.audio.set(q0, i2)
                    }
                    return i2
                } else {
                    eM.trace('[Assets] Audio asset "' + q0 + '" exists, but only asynchronously', {
                        fileName: "Assets.hx",
                        lineNumber: 122,
                        className: "lime.Assets",
                        methodName: "getAudioBuffer"
                    })
                }
            } else {
                eM.trace('[Assets] There is no audio asset with an ID of "' + q0 + '"', {
                    fileName: "Assets.hx",
                    lineNumber: 128,
                    className: "lime.Assets",
                    methodName: "getAudioBuffer"
                })
            }
        } else {
            eM.trace('[Assets] There is no asset library named "' + q + '"', {
                fileName: "Assets.hx",
                lineNumber: 134,
                className: "lime.Assets",
                methodName: "getAudioBuffer"
            })
        }
        return null
    };
    bY.getBytes = function(js) {
        bY.initialize();
        var q = js.substring(0, js.indexOf(":"));
        var i1;
        var i2 = js.indexOf(":") + 1;
        i1 = cj.substr(js, i2, null);
        var i = bY.getLibrary(q);
        if (i != null) {
            if (i.exists(i1, "BINARY")) {
                if (i.isLocal(i1, "BINARY")) {
                    return i.getBytes(i1)
                } else {
                    eM.trace('[Assets] String or Bytes asset "' + js + '" exists, but only asynchronously', {
                        fileName: "Assets.hx",
                        lineNumber: 171,
                        className: "lime.Assets",
                        methodName: "getBytes"
                    })
                }
            } else {
                eM.trace('[Assets] There is no String or Bytes asset with an ID of "' + js + '"', {
                    fileName: "Assets.hx",
                    lineNumber: 177,
                    className: "lime.Assets",
                    methodName: "getBytes"
                })
            }
        } else {
            eM.trace('[Assets] There is no asset library named "' + q + '"', {
                fileName: "Assets.hx",
                lineNumber: 183,
                className: "lime.Assets",
                methodName: "getBytes"
            })
        }
        return null
    };
    bY.getFont = function(qZ, i2) {
        if (i2 == null) {
            i2 = true
        }
        bY.initialize();
        if (i2 && bY.cache.enabled && bY.cache.font.exists(qZ)) {
            return bY.cache.font.get(qZ)
        }
        var i1 = qZ.substring(0, qZ.indexOf(":"));
        var js;
        var qY = qZ.indexOf(":") + 1;
        js = cj.substr(qZ, qY, null);
        var q = bY.getLibrary(i1);
        if (q != null) {
            if (q.exists(js, "FONT")) {
                if (q.isLocal(js, "FONT")) {
                    var i = q.getFont(js);
                    if (i2 && bY.cache.enabled) {
                        bY.cache.font.set(qZ, i)
                    }
                    return i
                } else {
                    eM.trace('[Assets] Font asset "' + qZ + '" exists, but only asynchronously', {
                        fileName: "Assets.hx",
                        lineNumber: 234,
                        className: "lime.Assets",
                        methodName: "getFont"
                    })
                }
            } else {
                eM.trace('[Assets] There is no Font asset with an ID of "' + qZ + '"', {
                    fileName: "Assets.hx",
                    lineNumber: 240,
                    className: "lime.Assets",
                    methodName: "getFont"
                })
            }
        } else {
            eM.trace('[Assets] There is no asset library named "' + i1 + '"', {
                fileName: "Assets.hx",
                lineNumber: 246,
                className: "lime.Assets",
                methodName: "getFont"
            })
        }
        return null
    };
    bY.getImage = function(q0, i2) {
        if (i2 == null) {
            i2 = true
        }
        bY.initialize();
        if (i2 && bY.cache.enabled && bY.cache.image.exists(q0)) {
            var qY = bY.cache.image.get(q0);
            if (bY.isValidImage(qY)) {
                return qY
            }
        }
        var i1 = q0.substring(0, q0.indexOf(":"));
        var js;
        var qZ = q0.indexOf(":") + 1;
        js = cj.substr(q0, qZ, null);
        var q = bY.getLibrary(i1);
        if (q != null) {
            if (q.exists(js, "IMAGE")) {
                if (q.isLocal(js, "IMAGE")) {
                    var i = q.getImage(js);
                    if (i2 && bY.cache.enabled) {
                        bY.cache.image.set(q0, i)
                    }
                    return i
                } else {
                    eM.trace('[Assets] Image asset "' + q0 + '" exists, but only asynchronously', {
                        fileName: "Assets.hx",
                        lineNumber: 304,
                        className: "lime.Assets",
                        methodName: "getImage"
                    })
                }
            } else {
                eM.trace('[Assets] There is no Image asset with an ID of "' + q0 + '"', {
                    fileName: "Assets.hx",
                    lineNumber: 310,
                    className: "lime.Assets",
                    methodName: "getImage"
                })
            }
        } else {
            eM.trace('[Assets] There is no asset library named "' + i1 + '"', {
                fileName: "Assets.hx",
                lineNumber: 316,
                className: "lime.Assets",
                methodName: "getImage"
            })
        }
        return null
    };
    bY.getLibrary = function(i) {
        if (i == null || i == "") {
            i = "default"
        }
        return bY.libraries.get(i)
    };
    bY.getPath = function(js) {
        bY.initialize();
        var q = js.substring(0, js.indexOf(":"));
        var i1;
        var i2 = js.indexOf(":") + 1;
        i1 = cj.substr(js, i2, null);
        var i = bY.getLibrary(q);
        if (i != null) {
            if (i.exists(i1, null)) {
                return i.getPath(i1)
            } else {
                eM.trace('[Assets] There is no asset with an ID of "' + js + '"', {
                    fileName: "Assets.hx",
                    lineNumber: 364,
                    className: "lime.Assets",
                    methodName: "getPath"
                })
            }
        } else {
            eM.trace('[Assets] There is no asset library named "' + q + '"', {
                fileName: "Assets.hx",
                lineNumber: 370,
                className: "lime.Assets",
                methodName: "getPath"
            })
        }
        return null
    };
    bY.getText = function(js) {
        bY.initialize();
        var q = js.substring(0, js.indexOf(":"));
        var i1;
        var i2 = js.indexOf(":") + 1;
        i1 = cj.substr(js, i2, null);
        var i = bY.getLibrary(q);
        if (i != null) {
            if (i.exists(i1, "TEXT")) {
                if (i.isLocal(i1, "TEXT")) {
                    return i.getText(i1)
                } else {
                    eM.trace('[Assets] String asset "' + js + '" exists, but only asynchronously', {
                        fileName: "Assets.hx",
                        lineNumber: 407,
                        className: "lime.Assets",
                        methodName: "getText"
                    })
                }
            } else {
                eM.trace('[Assets] There is no String asset with an ID of "' + js + '"', {
                    fileName: "Assets.hx",
                    lineNumber: 413,
                    className: "lime.Assets",
                    methodName: "getText"
                })
            }
        } else {
            eM.trace('[Assets] There is no asset library named "' + q + '"', {
                fileName: "Assets.hx",
                lineNumber: 419,
                className: "lime.Assets",
                methodName: "getText"
            })
        }
        return null
    };
    bY.initialize = function() {
        if (!bY.initialized) {
            bY.registerLibrary("default", new bp());
            bY.initialized = true
        }
    };
    bY.isLocal = function(qZ, i2, i1) {
        if (i1 == null) {
            i1 = true
        }
        bY.initialize();
        if (i1 && bY.cache.enabled) {
            if (i2 == "IMAGE" || i2 == null) {
                if (bY.cache.image.exists(qZ)) {
                    return true
                }
            }
            if (i2 == "FONT" || i2 == null) {
                if (bY.cache.font.exists(qZ)) {
                    return true
                }
            }
            if (i2 == "SOUND" || i2 == "MUSIC" || i2 == null) {
                if (bY.cache.audio.exists(qZ)) {
                    return true
                }
            }
        }
        var q = qZ.substring(0, qZ.indexOf(":"));
        var js;
        var qY = qZ.indexOf(":") + 1;
        js = cj.substr(qZ, qY, null);
        var i = bY.getLibrary(q);
        if (i != null) {
            return i.isLocal(js, i2)
        }
        return false
    };
    bY.isValidAudio = function(i) {
        return i != null
    };
    bY.isValidImage = function(i) {
        return true
    };
    bY.list = function(i2) {
        bY.initialize();
        var q = [];
        var js = bY.libraries.iterator();
        while (js.hasNext()) {
            var i = js.next();
            var i1 = i.list(i2);
            if (i1 != null) {
                q = q.concat(i1)
            }
        }
        return q
    };
    bY.loadAudioBuffer = function(q, i) {
        if (i == null) {
            i = true
        }
        bY.initialize();
        var q1 = new oJ();
        if (i && bY.cache.enabled && bY.cache.audio.exists(q)) {
            var qY = bY.cache.audio.get(q);
            if (bY.isValidAudio(qY)) {
                q1.complete(qY);
                return q1.future
            }
        }
        var i2 = q.substring(0, q.indexOf(":"));
        var js;
        var qZ = q.indexOf(":") + 1;
        js = cj.substr(q, qZ, null);
        var q0 = bY.getLibrary(i2);
        if (q0 != null) {
            if (q0.exists(js, "SOUND")) {
                var i1 = q0.loadAudioBuffer(js);
                if (i && bY.cache.enabled) {
                    i1.onComplete(function(q2) {
                        bY.cache.audio.set(q, q2)
                    })
                }
                q1.completeWith(i1)
            } else {
                q1.error('[Assets] There is no audio asset with an ID of "' + q + '"')
            }
        } else {
            q1.error('[Assets] There is no asset library named "' + i2 + '"')
        }
        return q1.future
    };
    bY.loadBytes = function(qY) {
        bY.initialize();
        var i2 = new oJ();
        var q = qY.substring(0, qY.indexOf(":"));
        var i1;
        var js = qY.indexOf(":") + 1;
        i1 = cj.substr(qY, js, null);
        var i = bY.getLibrary(q);
        if (i != null) {
            if (i.exists(i1, "BINARY")) {
                i2.completeWith(i.loadBytes(i1))
            } else {
                i2.error('[Assets] There is no String or Bytes asset with an ID of "' + qY + '"')
            }
        } else {
            i2.error('[Assets] There is no asset library named "' + q + '"')
        }
        return i2.future
    };
    bY.loadFont = function(qY) {
        bY.initialize();
        var i2 = new oJ();
        var q = qY.substring(0, qY.indexOf(":"));
        var i1;
        var js = qY.indexOf(":") + 1;
        i1 = cj.substr(qY, js, null);
        var i = bY.getLibrary(q);
        if (i != null) {
            if (i.exists(i1, "FONT")) {
                i2.completeWith(i.loadFont(i1))
            } else {
                i2.error('[Assets] There is no Font asset with an ID of "' + qY + '"')
            }
        } else {
            i2.error('[Assets] There is no asset library named "' + q + '"')
        }
        return i2.future
    };
    bY.loadImage = function(q, i) {
        if (i == null) {
            i = true
        }
        bY.initialize();
        var q1 = new oJ();
        if (i && bY.cache.enabled && bY.cache.image.exists(q)) {
            var js = bY.cache.image.get(q);
            if (bY.isValidImage(js)) {
                q1.complete(js);
                return q1.future
            }
        }
        var i2 = q.substring(0, q.indexOf(":"));
        var qY;
        var qZ = q.indexOf(":") + 1;
        qY = cj.substr(q, qZ, null);
        var q0 = bY.getLibrary(i2);
        if (q0 != null) {
            if (q0.exists(qY, "IMAGE")) {
                var i1 = q0.loadImage(qY);
                if (i && bY.cache.enabled) {
                    i1.onComplete(function(q2) {
                        bY.cache.image.set(q, q2)
                    })
                }
                q1.completeWith(i1)
            } else {
                q1.error('[Assets] There is no Image asset with an ID of "' + q + '"')
            }
        } else {
            q1.error('[Assets] There is no asset library named "' + i2 + '"')
        }
        return q1.future
    };
    bY.loadLibrary = function(q) {
        bY.initialize();
        var js = new oJ();
        var i1 = bY.getText("libraries/" + q + ".json");
        if (i1 != null && i1 != "") {
            var i2 = new dB(i1).parseRec();
            var i = kX.createInstance(kX.resolveClass(i2.type), i2.args);
            bY.libraries.set(q, i);
            i.onChange.add((c3 = bY.onChange, oT(c3, c3.dispatch)));
            js.completeWith(i.load())
        } else {
            js.error('[Assets] There is no asset library named "' + q + '"')
        }
        return js.future
    };
    bY.loadText = function(qY) {
        bY.initialize();
        var i2 = new oJ();
        var q = qY.substring(0, qY.indexOf(":"));
        var i1;
        var js = qY.indexOf(":") + 1;
        i1 = cj.substr(qY, js, null);
        var i = bY.getLibrary(q);
        if (i != null) {
            if (i.exists(i1, "TEXT")) {
                i2.completeWith(i.loadText(i1))
            } else {
                i2.error('[Assets] There is no String asset with an ID of "' + qY + '"')
            }
        } else {
            i2.error('[Assets] There is no asset library named "' + q + '"')
        }
        return i2.future
    };
    bY.registerLibrary = function(q, i) {
        if (bY.libraries.exists(q)) {
            if (bY.libraries.get(q) == i) {
                return
            } else {
                bY.unloadLibrary(q)
            }
        }
        if (i != null) {
            i.onChange.add(bY.library_onChange)
        }
        bY.libraries.set(q, i)
    };
    bY.unloadLibrary = function(q) {
        bY.initialize();
        var i = bY.libraries.get(q);
        if (i != null) {
            bY.cache.clear(q + ":");
            i.onChange.remove(bY.library_onChange);
            i.unload()
        }
        bY.libraries.remove(q)
    };
    bY.library_onChange = function() {
        bY.cache.clear();
        bY.onChange.dispatch()
    };
    var cK = function(i) {
        this.gameDeviceCache = new c6();
        this.parent = i;
        this.currentUpdate = 0;
        this.lastUpdate = 0;
        this.nextUpdate = 0;
        this.framePeriod = -1;
        kb.init()
    };
    nt["lime._backend.html5.HTML5Application"] = cK;
    cK.__name__ = ["lime", "_backend", "html5", "HTML5Application"];
    cK.prototype = {
        gameDeviceCache: null,
        currentUpdate: null,
        deltaTime: null,
        framePeriod: null,
        lastUpdate: null,
        nextUpdate: null,
        parent: null,
        convertKeyCode: function(i) {
            if (i >= 65 && i <= 90) {
                return i + 32
            }
            switch (i) {
                case 16:
                    return 1073742049;
                case 17:
                    return 1073742048;
                case 18:
                    return 1073742050;
                case 20:
                    return 1073741881;
                case 144:
                    return 1073741907;
                case 37:
                    return 1073741904;
                case 38:
                    return 1073741906;
                case 39:
                    return 1073741903;
                case 40:
                    return 1073741905;
                case 45:
                    return 1073741897;
                case 46:
                    return 127;
                case 36:
                    return 1073741898;
                case 35:
                    return 1073741901;
                case 33:
                    return 1073741899;
                case 34:
                    return 1073741902;
                case 112:
                    return 1073741882;
                case 113:
                    return 1073741883;
                case 114:
                    return 1073741884;
                case 115:
                    return 1073741885;
                case 116:
                    return 1073741886;
                case 117:
                    return 1073741887;
                case 118:
                    return 1073741888;
                case 119:
                    return 1073741889;
                case 120:
                    return 1073741890;
                case 121:
                    return 1073741891;
                case 122:
                    return 1073741892;
                case 123:
                    return 1073741893;
                case 124:
                    return 1073741928;
                case 125:
                    return 1073741929;
                case 126:
                    return 1073741930;
                case 186:
                    return 59;
                case 187:
                    return 61;
                case 188:
                    return 44;
                case 189:
                    return 45;
                case 190:
                    return 46;
                case 191:
                    return 47;
                case 192:
                    return 96;
                case 219:
                    return 91;
                case 220:
                    return 92;
                case 221:
                    return 93;
                case 222:
                    return 39
            }
            return i
        },
        create: function(i) {},
        exec: function() {
            window.addEventListener("keydown", oT(this, this.handleKeyEvent), false);
            window.addEventListener("keyup", oT(this, this.handleKeyEvent), false);
            window.addEventListener("focus", oT(this, this.handleWindowEvent), false);
            window.addEventListener("blur", oT(this, this.handleWindowEvent), false);
            window.addEventListener("resize", oT(this, this.handleWindowEvent), false);
            window.addEventListener("beforeunload", oT(this, this.handleWindowEvent), false);
            var q = 0;
            var i1 = ["ms", "moz", "webkit", "o"];
            for (var i = 0; i < i1.length && !window.requestAnimationFrame; ++i) {
                window.requestAnimationFrame = window[i1[i] + "RequestAnimationFrame"];
                window.cancelAnimationFrame = window[i1[i] + "CancelAnimationFrame"] || window[i1[i] + "CancelRequestAnimationFrame"]
            }
            if (!window.requestAnimationFrame) {
                window.requestAnimationFrame = function(q0, js) {
                    var i2 = new Date().getTime();
                    var qY = Math.max(0, 16 - (i2 - q));
                    var qZ = window.setTimeout(function() {
                        q0(i2 + qY)
                    }, qY);
                    q = i2 + qY;
                    return qZ
                }
            }
            if (!window.cancelAnimationFrame) {
                window.cancelAnimationFrame = function(i2) {
                    clearTimeout(i2)
                }
            }
            window.requestAnimFrame = window.requestAnimationFrame;
            this.lastUpdate = new Date().getTime();
            this.handleApplicationEvent();
            return 0
        },
        exit: function() {},
        getFrameRate: function() {
            if (this.framePeriod < 0) {
                return 60
            } else {
                if (this.framePeriod == 1000) {
                    return 0
                } else {
                    return 1000 / this.framePeriod
                }
            }
        },
        handleApplicationEvent: function(i) {
            this.updateGameDevices();
            this.currentUpdate = new Date().getTime();
            if (this.currentUpdate >= this.nextUpdate) {
                this.deltaTime = this.currentUpdate - this.lastUpdate;
                this.parent.onUpdate.dispatch(this.deltaTime | 0);
                if (this.parent.renderers[0] != null) {
                    this.parent.renderers[0].onRender.dispatch();
                    this.parent.renderers[0].flip()
                }
                if (this.framePeriod < 0) {
                    this.nextUpdate = this.currentUpdate;
                    this.nextUpdate = this.currentUpdate
                } else {
                    this.nextUpdate = this.currentUpdate + this.framePeriod
                }
                this.lastUpdate = this.currentUpdate
            }
            window.requestAnimationFrame(oT(this, this.handleApplicationEvent))
        },
        handleKeyEvent: function(q) {
            if (this.parent.windows[0] != null) {
                var i1 = this.convertKeyCode(q.keyCode != null ? q.keyCode : q.which);
                var i;
                i = (q.shiftKey ? 3 : 0) | (q.ctrlKey ? 192 : 0) | (q.altKey ? 768 : 0) | (q.metaKey ? 3072 : 0);
                if (q.type == "keydown") {
                    this.parent.windows[0].onKeyDown.dispatch(i1, i);
                    if (this.parent.windows[0].onKeyDown.canceled) {
                        q.preventDefault()
                    }
                } else {
                    this.parent.windows[0].onKeyUp.dispatch(i1, i);
                    if (this.parent.windows[0].onKeyUp.canceled) {
                        q.preventDefault()
                    }
                }
            }
        },
        handleWindowEvent: function(q) {
            if (this.parent.windows[0] != null) {
                var i2 = q.type;
                switch (i2) {
                    case "focus":
                        this.parent.windows[0].onFocusIn.dispatch();
                        this.parent.windows[0].onActivate.dispatch();
                        break;
                    case "blur":
                        this.parent.windows[0].onFocusOut.dispatch();
                        this.parent.windows[0].onDeactivate.dispatch();
                        break;
                    case "resize":
                        var i1 = this.parent.windows[0].__width;
                        var i = this.parent.windows[0].__height;
                        this.parent.windows[0].backend.handleResize();
                        if (this.parent.windows[0].__width != i1 || this.parent.windows[0].__height != i) {
                            this.parent.windows[0].onResize.dispatch(this.parent.windows[0].__width, this.parent.windows[0].__height)
                        }
                        break;
                    case "beforeunload":
                        this.parent.windows[0].onClose.dispatch();
                        break
                }
            }
        },
        setFrameRate: function(i) {
            if (i >= 60) {
                this.framePeriod = -1
            } else {
                if (i > 0) {
                    this.framePeriod = 1000 / i
                } else {
                    this.framePeriod = 1000
                }
            }
            return i
        },
        updateGameDevices: function() {
            var q7 = hr.__getDeviceData();
            if (q7 == null) {
                return
            }
            var rb;
            var q1;
            var q3;
            var ri;
            var q9;
            var ra = 0;
            var q0 = q7.length;
            while (ra < q0) {
                var rh = ra++;
                rb = rh;
                ri = q7[rb];
                if (ri == null) {
                    continue
                }
                if (!this.gameDeviceCache.h.hasOwnProperty(rb)) {
                    q9 = new j9();
                    q9.id = rb;
                    q9.connected = ri.connected;
                    var q6 = 0;
                    var q8 = ri.buttons.length;
                    while (q6 < q8) {
                        var rg = q6++;
                        q9.buttons.push(ri.buttons[rg].value)
                    }
                    var q5 = 0;
                    var qZ = ri.axes.length;
                    while (q5 < qZ) {
                        var rf = q5++;
                        q9.axes.push(ri.axes[rf])
                    }
                    if (ri.mapping == "standard") {
                        q9.isGamepad = true
                    }
                    this.gameDeviceCache.h[rb] = q9;
                    if (ri.connected) {
                        hr.__connect(rb);
                        if (q9.isGamepad) {
                            lE.__connect(rb)
                        }
                    }
                }
                q9 = this.gameDeviceCache.h[rb];
                q3 = hr.devices.h[rb];
                q1 = lE.devices.h[rb];
                if (ri.connected) {
                    var q;
                    var re;
                    var q4 = 0;
                    var qY = ri.buttons.length;
                    while (q4 < qY) {
                        var rd = q4++;
                        re = ri.buttons[rd].value;
                        if (re != q9.buttons[rd]) {
                            if (rd == 6) {
                                q3.onAxisMove.dispatch(ri.axes.length, re);
                                if (q1 != null) {
                                    q1.onAxisMove.dispatch(4, re)
                                }
                            } else {
                                if (rd == 7) {
                                    q3.onAxisMove.dispatch(ri.axes.length + 1, re);
                                    if (q1 != null) {
                                        q1.onAxisMove.dispatch(5, re)
                                    }
                                } else {
                                    if (re > 0) {
                                        q3.onButtonDown.dispatch(rd)
                                    } else {
                                        q3.onButtonUp.dispatch(rd)
                                    }
                                    if (q1 != null) {
                                        switch (rd) {
                                            case 0:
                                                q = 0;
                                                break;
                                            case 1:
                                                q = 1;
                                                break;
                                            case 2:
                                                q = 2;
                                                break;
                                            case 3:
                                                q = 3;
                                                break;
                                            case 4:
                                                q = 9;
                                                break;
                                            case 5:
                                                q = 10;
                                                break;
                                            case 8:
                                                q = 4;
                                                break;
                                            case 9:
                                                q = 6;
                                                break;
                                            case 10:
                                                q = 7;
                                                break;
                                            case 11:
                                                q = 8;
                                                break;
                                            case 12:
                                                q = 11;
                                                break;
                                            case 13:
                                                q = 12;
                                                break;
                                            case 14:
                                                q = 13;
                                                break;
                                            case 15:
                                                q = 14;
                                                break;
                                            case 16:
                                                q = 5;
                                                break;
                                            default:
                                                continue
                                        }
                                        if (re > 0) {
                                            q1.onButtonDown.dispatch(q)
                                        } else {
                                            q1.onButtonUp.dispatch(q)
                                        }
                                    }
                                }
                            }
                            q9.buttons[rd] = re
                        }
                    }
                    var q2 = 0;
                    var js = ri.axes.length;
                    while (q2 < js) {
                        var rc = q2++;
                        if (ri.axes[rc] != q9.axes[rc]) {
                            q3.onAxisMove.dispatch(rc, ri.axes[rc]);
                            if (q1 != null) {
                                q1.onAxisMove.dispatch(rc, ri.axes[rc])
                            }
                            q9.axes[rc] = ri.axes[rc]
                        }
                    }
                } else {
                    if (q9.connected) {
                        q9.connected = false;
                        hr.__disconnect(rb);
                        lE.__disconnect(rb)
                    }
                }
            }
        },
        __class__: cK
    };
    var j9 = function() {
        this.connected = true;
        this.buttons = [];
        this.axes = []
    };
    nt["lime._backend.html5.GameDeviceData"] = j9;
    j9.__name__ = ["lime", "_backend", "html5", "GameDeviceData"];
    j9.prototype = {
        connected: null,
        id: null,
        isGamepad: null,
        buttons: null,
        axes: null,
        __class__: j9
    };
    var co = function() {};
    nt["lime._backend.html5.HTML5Mouse"] = co;
    co.__name__ = ["lime", "_backend", "html5", "HTML5Mouse"];
    co.__cursor = null;
    co.__hidden = null;
    co.hide = function() {
        if (!co.__hidden) {
            co.__hidden = true;
            var i1 = 0;
            var i = dE.current.windows;
            while (i1 < i.length) {
                var q = i[i1];
                ++i1;
                q.backend.element.style.cursor = "none"
            }
        }
    };
    co.show = function() {
        if (co.__hidden) {
            co.__hidden = false;
            var i = co.__cursor;
            co.__cursor = null;
            co.set_cursor(i)
        }
    };
    co.warp = function(i, i1, q) {};
    co.get_cursor = function() {
        if (co.__cursor == null) {
            return hL.DEFAULT
        }
        return co.__cursor
    };
    co.set_cursor = function(q) {
        if (co.__cursor != q) {
            if (!co.__hidden) {
                var i2 = 0;
                var i = dE.current.windows;
                while (i2 < i.length) {
                    var i1 = i[i2];
                    ++i2;
                    switch (q[1]) {
                        case 0:
                            i1.backend.element.style.cursor = "default";
                            break;
                        case 1:
                            i1.backend.element.style.cursor = "crosshair";
                            break;
                        case 3:
                            i1.backend.element.style.cursor = "move";
                            break;
                        case 4:
                            i1.backend.element.style.cursor = "pointer";
                            break;
                        case 5:
                            i1.backend.element.style.cursor = "nesw-resize";
                            break;
                        case 6:
                            i1.backend.element.style.cursor = "ns-resize";
                            break;
                        case 7:
                            i1.backend.element.style.cursor = "nwse-resize";
                            break;
                        case 8:
                            i1.backend.element.style.cursor = "ew-resize";
                            break;
                        case 9:
                            i1.backend.element.style.cursor = "text";
                            break;
                        case 10:
                            i1.backend.element.style.cursor = "wait";
                            break;
                        case 11:
                            i1.backend.element.style.cursor = "wait";
                            break;
                        default:
                            i1.backend.element.style.cursor = "auto"
                    }
                }
            }
            co.__cursor = q
        }
        return co.__cursor
    };
    co.get_lock = function() {
        return false
    };
    co.set_lock = function(i) {
        return i
    };
    var hl = function(i) {
        this.parent = i
    };
    nt["lime._backend.html5.HTML5Renderer"] = hl;
    hl.__name__ = ["lime", "_backend", "html5", "HTML5Renderer"];
    hl.prototype = {
        parent: null,
        create: function() {
            this.createContext();
            var i = this.parent.context;
            switch (i[1]) {
                case 0:
                    this.parent.window.backend.canvas.addEventListener("webglcontextlost", oT(this, this.handleEvent), false);
                    this.parent.window.backend.canvas.addEventListener("webglcontextrestored", oT(this, this.handleEvent), false);
                    break;
                default:
            }
        },
        createContext: function() {
            if (this.parent.window.backend.div != null) {
                this.parent.context = d9.DOM(this.parent.window.backend.div);
                this.parent.type = my.DOM
            } else {
                if (this.parent.window.backend.canvas != null) {
                    var i = null;
                    if (i == null) {
                        this.parent.context = d9.CANVAS(this.parent.window.backend.canvas.getContext("2d"));
                        this.parent.type = my.CANVAS
                    } else {
                        mU.context = i;
                        this.parent.context = d9.OPENGL(mU.context);
                        this.parent.type = my.OPENGL
                    }
                }
            }
        },
        flip: function() {},
        handleEvent: function(i) {
            var q = i.type;
            switch (q) {
                case "webglcontextlost":
                    i.preventDefault();
                    this.parent.context = null;
                    this.parent.onContextLost.dispatch();
                    break;
                case "webglcontextrestored":
                    this.createContext();
                    this.parent.onContextRestored.dispatch(this.parent.context);
                    break;
                default:
            }
        },
        readPixels: function(i1) {
            if (this.parent.window.backend.canvas != null) {
                if (i1 == null) {
                    i1 = new lj(0, 0, this.parent.window.backend.canvas.width, this.parent.window.backend.canvas.height)
                } else {
                    i1.__contract(0, 0, this.parent.window.backend.canvas.width, this.parent.window.backend.canvas.height)
                }
                if (i1.width > 0 && i1.height > 0) {
                    var i = window.document.createElement("canvas");
                    i.width = i1.width | 0;
                    i.height = i1.height | 0;
                    var q = i.getContext("2d");
                    q.drawImage(this.parent.window.backend.canvas, -i1.x, -i1.y);
                    return nv.fromCanvas(i)
                }
            }
            return null
        },
        render: function() {},
        __class__: hl
    };
    var C = function(i) {
        this.unusedTouchesPool = new oI();
        this.currentTouches = new c6();
        this.parent = i;
        if (i.config != null && Object.prototype.hasOwnProperty.call(i.config, "element")) {
            this.element = i.config.element
        }
    };
    nt["lime._backend.html5.HTML5Window"] = C;
    C.__name__ = ["lime", "_backend", "html5", "HTML5Window"];
    C.textInput = null;
    C.prototype = {
        canvas: null,
        div: null,
        element: null,
        currentTouches: null,
        enableTextEvents: null,
        parent: null,
        primaryTouch: null,
        setHeight: null,
        setWidth: null,
        unusedTouchesPool: null,
        alert: function(i, q) {
            if (i != null) {
                bq.alert(i)
            }
        },
        close: function() {
            this.parent.application.removeWindow(this.parent)
        },
        create: function(i) {
            this.setWidth = this.parent.__width;
            this.setHeight = this.parent.__height;
            this.parent.id = C.windowID++;
            if (n0.__instanceof(this.element, HTMLCanvasElement)) {
                this.canvas = this.element
            } else {
                this.canvas = window.document.createElement("canvas")
            }
            if (this.canvas != null) {
                //var i1 = this.canvas.style;
               // i1.setProperty("-webkit-transform", "translateZ(0)", null);
                //i1.setProperty("transform", "translateZ(0)", null)
            } else {
                if (this.div != null) {
                    var js = this.div.style;
                    js.setProperty("-webkit-transform", "translate3D(0,0,0)", null);
                    js.setProperty("transform", "translate3D(0,0,0)", null);
                    js.position = "relative";
                    js.overflow = "hidden";
                    js.setProperty("-webkit-user-select", "none", null);
                    js.setProperty("-moz-user-select", "none", null);
                    js.setProperty("-ms-user-select", "none", null);
                    js.setProperty("-o-user-select", "none", null)
                }
            }
            if (this.parent.__width == 0 && this.parent.__height == 0) {
                if (this.element != null) {
                    this.parent.set_width(this.element.clientWidth);
                    this.parent.set_height(this.element.clientHeight)
                } else {
                    this.parent.set_width(window.innerWidth);
                    this.parent.set_height(window.innerHeight)
                }
                this.parent.set_fullscreen(true)
            }
            if (this.canvas != null) {
                this.canvas.width = this.parent.__width;
                this.canvas.height = this.parent.__height
            } else {
                this.div.style.width = this.parent.__width + "px";
                this.div.style.height = this.parent.__height + "px"
            }
            this.handleResize();
            if (this.element != null) {
                if (this.canvas != null) {
                    if (this.element != this.canvas) {
                        this.element.appendChild(this.canvas)
                    }
                } else {
                    this.element.appendChild(this.div)
                }
                var q = ["mousedown", "mouseenter", "mouseleave", "mousemove", "mouseup", "wheel"];
                var qY = 0;
                while (qY < q.length) {
                    var i2 = q[qY];
                    ++qY;
                    this.element.addEventListener(i2, oT(this, this.handleMouseEvent), true)
                }
                window.document.addEventListener("dragstart", function(qZ) {
                    if (qZ.target.nodeName.toLowerCase() == "img") {
                        qZ.preventDefault();
                        return false
                    }
                    return true
                }, false);
                this.element.addEventListener("touchstart", oT(this, this.handleTouchEvent), true);
                this.element.addEventListener("touchmove", oT(this, this.handleTouchEvent), true);
                this.element.addEventListener("touchend", oT(this, this.handleTouchEvent), true);
                this.element.addEventListener("gamepadconnected", oT(this, this.handleGamepadEvent), true);
                this.element.addEventListener("gamepaddisconnected", oT(this, this.handleGamepadEvent), true)
            }
        },
        focus: function() {},
        getDisplay: function() {
            return pg.getDisplay(0)
        },
        getEnableTextEvents: function() {
            return this.enableTextEvents
        },
        handleFocusEvent: function(i) {
            if (this.enableTextEvents) {
                og.delay(function() {
                    C.textInput.focus()
                }, 20)
            }
        },
        handleGamepadEvent: function(i) {
            var q = i.type;
            switch (q) {
                case "gamepadconnected":
                    hr.__connect(i.gamepad.index);
                    if (i.gamepad.mapping == "standard") {
                        lE.__connect(i.gamepad.index)
                    }
                    break;
                case "gamepaddisconnected":
                    hr.__disconnect(i.gamepad.index);
                    lE.__disconnect(i.gamepad.index);
                    break;
                default:
            }
        },
        handleInputEvent: function(i) {
            if (C.textInput.value != "") {
                this.parent.onTextInput.dispatch(C.textInput.value);
                C.textInput.value = ""
            }
        },
        handleMouseEvent: function(js) {
            var i = 0;
            var qZ = 0;
            if (js.type != "wheel") {
                if (this.element != null) {
                    if (this.canvas != null) {
                        var i2 = this.canvas.getBoundingClientRect();
                        i = (js.clientX - i2.left) * (this.parent.__width / i2.width);
                        qZ = (js.clientY - i2.top) * (this.parent.__height / i2.height)
                    } else {
                        if (this.div != null) {
                            var i1 = this.div.getBoundingClientRect();
                            i = js.clientX - i1.left;
                            qZ = js.clientY - i1.top
                        } else {
                            var q = this.element.getBoundingClientRect();
                            i = (js.clientX - q.left) * (this.parent.__width / q.width);
                            qZ = (js.clientY - q.top) * (this.parent.__height / q.height)
                        }
                    }
                } else {
                    i = js.clientX;
                    qZ = js.clientY
                }
                var qY = js.type;
                switch (qY) {
                    case "mousedown":
                        this.parent.onMouseDown.dispatch(i, qZ, js.button);
                        break;
                    case "mouseenter":
                        this.parent.onEnter.dispatch();
                        break;
                    case "mouseleave":
                        this.parent.onLeave.dispatch();
                        break;
                    case "mouseup":
                        this.parent.onMouseUp.dispatch(i, qZ, js.button);
                        break;
                    case "mousemove":
                        this.parent.onMouseMove.dispatch(i, qZ);
                        break;
                    default:
                }
            } else {
                this.parent.onMouseWheel.dispatch(js.deltaX, -js.deltaY)
            }
        },
        handleResize: function() {
            var q = this.parent.__fullscreen || this.setWidth == 0 && this.setHeight == 0;
            if (this.element != null && (this.div == null || this.div != null && q)) {
                if (q) {
                    if (this.parent.__width != this.element.clientWidth || this.parent.__height != this.element.clientHeight) {
                        this.parent.set_width(this.element.clientWidth);
                        this.parent.set_height(this.element.clientHeight);
                        if (this.canvas != null) {
                            if (this.element != this.canvas) {
                                this.canvas.width = this.element.clientWidth;
                                this.canvas.height = this.element.clientHeight
                            }
                        } else {
                            this.div.style.width = this.element.clientWidth + "px";
                            this.div.style.height = this.element.clientHeight + "px"
                        }
                    }
                } else {
                    var i2 = this.element.clientWidth / this.setWidth;
                    var i = this.element.clientHeight / this.setHeight;
                    var i1 = i2 / i;
                    var js = Math.min(i2, i);
                    if (this.canvas != null) {
                        if (this.element != this.canvas) {
                            this.canvas.style.width = this.setWidth * js + "px";
                            this.canvas.style.height = this.setHeight * js + "px";
                            this.canvas.style.marginLeft = (this.element.clientWidth - this.setWidth * js) / 2 + "px";
                            this.canvas.style.marginTop = (this.element.clientHeight - this.setHeight * js) / 2 + "px"
                        }
                    } else {
                        this.div.style.width = this.setWidth * js + "px";
                        this.div.style.height = this.setHeight * js + "px";
                        this.div.style.marginLeft = (this.element.clientWidth - this.setWidth * js) / 2 + "px";
                        this.div.style.marginTop = (this.element.clientHeight - this.setHeight * js) / 2 + "px"
                    }
                }
            }
        },
        handleTouchEvent: function(q) {
            q.preventDefault();
            var q6 = null;
            if (this.element != null) {
                if (this.canvas != null) {
                    q6 = this.canvas.getBoundingClientRect()
                } else {
                    if (this.div != null) {
                        q6 = this.div.getBoundingClientRect()
                    } else {
                        q6 = this.element.getBoundingClientRect()
                    }
                }
            }
            var i1 = this.setWidth;
            var i = this.setHeight;
            if (i1 == 0 || i == 0) {
                if (q6 != null) {
                    i1 = q6.width;
                    i = q6.height
                } else {
                    i1 = 1;
                    i = 1
                }
            }
            var qY = 0;
            var q3 = q.changedTouches;
            while (qY < q3.length) {
                var js = q3[qY];
                ++qY;
                var q8 = 0;
                var q5 = 0;
                if (q6 != null) {
                    q8 = (js.clientX - q6.left) * (i1 / q6.width);
                    q5 = (js.clientY - q6.top) * (i / q6.height)
                } else {
                    q8 = js.clientX;
                    q5 = js.clientY
                }
                var q2 = q.type;
                switch (q2) {
                    case "touchstart":
                        var i2 = this.unusedTouchesPool.pop();
                        if (i2 == null) {
                            i2 = new oA(q8 / i1, q5 / i, js.identifier, 0, 0, js.force, this.parent.id)
                        } else {
                            i2.x = q8 / i1;
                            i2.y = q5 / i;
                            i2.id = js.identifier;
                            i2.dx = 0;
                            i2.dy = 0;
                            i2.pressure = js.force;
                            i2.device = this.parent.id
                        }
                        this.currentTouches.h[js.identifier] = i2;
                        oA.onStart.dispatch(i2);
                        if (this.primaryTouch == null) {
                            this.primaryTouch = i2
                        }
                        if (i2 == this.primaryTouch) {
                            this.parent.onMouseDown.dispatch(q8, q5, 0)
                        }
                        break;
                    case "touchend":
                        var q0 = this.currentTouches.h[js.identifier];
                        if (q0 != null) {
                            var q7 = q0.x;
                            var q4 = q0.y;
                            q0.x = q8 / i1;
                            q0.y = q5 / i;
                            q0.dx = q0.x - q7;
                            q0.dy = q0.y - q4;
                            q0.pressure = js.force;
                            oA.onEnd.dispatch(q0);
                            this.currentTouches.remove(js.identifier);
                            this.unusedTouchesPool.add(q0);
                            if (q0 == this.primaryTouch) {
                                this.parent.onMouseUp.dispatch(q8, q5, 0);
                                this.primaryTouch = null
                            }
                        }
                        break;
                    case "touchmove":
                        var qZ = this.currentTouches.h[js.identifier];
                        if (qZ != null) {
                            var q9 = qZ.x;
                            var q1 = qZ.y;
                            qZ.x = q8 / i1;
                            qZ.y = q5 / i;
                            qZ.dx = qZ.x - q9;
                            qZ.dy = qZ.y - q1;
                            qZ.pressure = js.force;
                            oA.onMove.dispatch(qZ);
                            if (qZ == this.primaryTouch) {
                                this.parent.onMouseMove.dispatch(q8, q5)
                            }
                        }
                        break;
                    default:
                }
            }
        },
        move: function(i, q) {},
        resize: function(q, i) {},
        setBorderless: function(i) {
            return i
        },
        setEnableTextEvents: function(i) {
            if (i) {
                if (C.textInput == null) {
                    C.textInput = window.document.createElement("input");
                    C.textInput.type = "text";
                    C.textInput.style.position = "absolute";
                    C.textInput.style.opacity = "0";
                    C.textInput.style.color = "transparent";
                    C.textInput.value = "";
                    C.textInput.autocapitalize = "off";
                    C.textInput.autocorrect = "off";
                    C.textInput.autocomplete = "off";
                    C.textInput.style.left = "0px";
                    C.textInput.style.top = "50%";
                    if (new gF("(iPad|iPhone|iPod).*OS 8_", "gi").match(window.navigator.userAgent)) {
                        C.textInput.style.fontSize = "0px";
                        C.textInput.style.width = "0px";
                        C.textInput.style.height = "0px"
                    } else {
                        C.textInput.style.width = "1px";
                        C.textInput.style.height = "1px"
                    }
                    C.textInput.style.pointerEvents = "none";
                    C.textInput.style.zIndex = "-10000000";
                    window.document.body.appendChild(C.textInput)
                }
                if (!this.enableTextEvents) {
                    C.textInput.addEventListener("input", oT(this, this.handleInputEvent), true);
                    C.textInput.addEventListener("blur", oT(this, this.handleFocusEvent), true)
                }
                C.textInput.focus()
            } else {
                if (C.textInput != null) {
                    C.textInput.removeEventListener("input", oT(this, this.handleInputEvent), true);
                    C.textInput.removeEventListener("blur", oT(this, this.handleFocusEvent), true);
                    C.textInput.blur()
                }
            }
            return this.enableTextEvents = i
        },
        setFullscreen: function(i) {
            return false
        },
        setIcon: function(i) {},
        setMaximized: function(i) {
            return false
        },
        setMinimized: function(i) {
            return false
        },
        setResizable: function(i) {
            return i
        },
        setTitle: function(i) {
            return i
        },
        __class__: C
    };
    var gq = function() {};
    nt["lime.app.IModule"] = gq;
    gq.__name__ = ["lime", "app", "IModule"];
    gq.prototype = {
        onGamepadAxisMove: null,
        onGamepadButtonDown: null,
        onGamepadButtonUp: null,
        onGamepadConnect: null,
        onGamepadDisconnect: null,
        onJoystickAxisMove: null,
        onJoystickButtonDown: null,
        onJoystickButtonUp: null,
        onJoystickConnect: null,
        onJoystickDisconnect: null,
        onJoystickHatMove: null,
        onJoystickTrackballMove: null,
        onKeyDown: null,
        onKeyUp: null,
        onModuleExit: null,
        onMouseDown: null,
        onMouseMove: null,
        onMouseMoveRelative: null,
        onMouseUp: null,
        onMouseWheel: null,
        onPreloadComplete: null,
        onPreloadProgress: null,
        onRenderContextLost: null,
        onRenderContextRestored: null,
        onTextEdit: null,
        onTextInput: null,
        onTouchEnd: null,
        onTouchMove: null,
        onTouchStart: null,
        onWindowActivate: null,
        onWindowClose: null,
        onWindowCreate: null,
        onWindowDeactivate: null,
        onWindowDropFile: null,
        onWindowEnter: null,
        onWindowFocusIn: null,
        onWindowFocusOut: null,
        onWindowFullscreen: null,
        onWindowLeave: null,
        onWindowMove: null,
        onWindowMinimize: null,
        onWindowResize: null,
        onWindowRestore: null,
        render: null,
        update: null,
        __class__: gq
    };
    var mE = function() {
        this.onExit = new d6()
    };
    nt["lime.app.Module"] = mE;
    mE.__name__ = ["lime", "app", "Module"];
    mE.__interfaces__ = [gq];
    mE.prototype = {
        onExit: null,
        onGamepadAxisMove: function(i, q, i1) {},
        onGamepadButtonDown: function(q, i) {},
        onGamepadButtonUp: function(q, i) {},
        onGamepadConnect: function(i) {
            eM.trace("onGamepadConnect (module)", {
                fileName: "Module.hx",
                lineNumber: 64,
                className: "lime.app.Module",
                methodName: "onGamepadConnect"
            })
        },
        onGamepadDisconnect: function(i) {},
        onJoystickAxisMove: function(i, q, i1) {},
        onJoystickButtonDown: function(i, q) {},
        onJoystickButtonUp: function(i, q) {},
        onJoystickConnect: function(i) {},
        onJoystickDisconnect: function(i) {},
        onJoystickHatMove: function(i1, q, i) {},
        onJoystickTrackballMove: function(q, i, i1) {},
        onKeyDown: function(q, i1, i) {},
        onKeyUp: function(q, i1, i) {},
        onModuleExit: function(i) {},
        onMouseDown: function(i1, i, i2, q) {},
        onMouseMove: function(q, i, i1) {},
        onMouseMoveRelative: function(q, i, i1) {},
        onMouseUp: function(i1, i, i2, q) {},
        onMouseWheel: function(i1, q, i) {},
        onPreloadComplete: function() {},
        onPreloadProgress: function(i, q) {},
        onRenderContextLost: function(i) {},
        onRenderContextRestored: function(q, i) {},
        onTextEdit: function(q, i1, i2, i) {},
        onTextInput: function(i, q) {},
        onTouchEnd: function(i) {},
        onTouchMove: function(i) {},
        onTouchStart: function(i) {},
        onWindowActivate: function(i) {},
        onWindowClose: function(i) {},
        onWindowCreate: function(i) {},
        onWindowDeactivate: function(i) {},
        onWindowDropFile: function(q, i) {},
        onWindowEnter: function(i) {},
        onWindowFocusIn: function(i) {},
        onWindowFocusOut: function(i) {},
        onWindowFullscreen: function(i) {},
        onWindowLeave: function(i) {},
        onWindowMove: function(q, i, i1) {},
        onWindowMinimize: function(i) {},
        onWindowResize: function(i1, q, i) {},
        onWindowRestore: function(i) {},
        render: function(i) {},
        update: function(i) {},
        __class__: mE
    };
    var dE = function() {
        this.onUpdate = new d6();
        mE.call(this);
        if (dE.current == null) {
            dE.current = this
        }
        this.modules = [];
        this.renderers = [];
        this.windows = [];
        this.windowByID = new c6();
        this.backend = new cK(this);
        this.onExit.add(oT(this, this.onModuleExit));
        this.onUpdate.add(oT(this, this.update));
        lE.onConnect.add(oT(this, this.__onGamepadConnect));
        hr.onConnect.add(oT(this, this.__onJoystickConnect));
        oA.onStart.add(oT(this, this.onTouchStart));
        oA.onMove.add(oT(this, this.onTouchMove));
        oA.onEnd.add(oT(this, this.onTouchEnd))
    };
    nt["lime.app.Application"] = dE;
    dE.__name__ = ["lime", "app", "Application"];
    dE.current = null;
    dE.__super__ = mE;
    dE.prototype = lP(mE.prototype, {
        config: null,
        modules: null,
        preloader: null,
        onUpdate: null,
        renderer: null,
        renderers: null,
        window: null,
        windows: null,
        backend: null,
        windowByID: null,
        addModule: function(i) {
            this.modules.push(i);
            if (this.windows.length > 0) {
                var i2 = 0;
                var q = this.windows;
                while (i2 < q.length) {
                    var i1 = q[i2];
                    ++i2;
                    i.onWindowCreate(i1)
                }
                if (this.preloader == null || this.preloader.complete) {
                    i.onPreloadComplete()
                }
            }
        },
        addRenderer: function(i) {
            i.onRender.add((function(i1, q) {
                return function() {
                    i1(q)
                }
            })(oT(this, this.render), i));
            i.onContextLost.add((function(q, i1) {
                return function() {
                    q(i1)
                }
            })(oT(this, this.onRenderContextLost), i));
            i.onContextRestored.add((function(i1, q) {
                return function(i2) {
                    i1(q, i2)
                }
            })(oT(this, this.onRenderContextRestored), i));
            this.renderers.push(i)
        },
        create: function(q) {
            this.config = q;
            this.backend.create(q);
            if (q != null) {
                if (Object.prototype.hasOwnProperty.call(q, "fps")) {
                    this.backend.setFrameRate(q.fps)
                }
                if (Object.prototype.hasOwnProperty.call(q, "windows")) {
                    var js = 0;
                    var i1 = q.windows;
                    while (js < i1.length) {
                        var i = i1[js];
                        ++js;
                        var i2 = new h1(i);
                        this.createWindow(i2);
                        break
                    }
                }
                if (this.preloader == null || this.preloader.complete) {
                    this.onPreloadComplete()
                }
            }
        },
        createWindow: function(i) {
            i.onActivate.add((function(i2, i1) {
                return function() {
                    i2(i1)
                }
            })(oT(this, this.onWindowActivate), i));
            i.onClose.add((function(i1, i2) {
                return function() {
                    i1(i2)
                }
            })(oT(this, this.onWindowClose), i));
            i.onCreate.add((function(i2, i1) {
                return function() {
                    i2(i1)
                }
            })(oT(this, this.onWindowCreate), i));
            i.onDeactivate.add((function(i1, i2) {
                return function() {
                    i1(i2)
                }
            })(oT(this, this.onWindowDeactivate), i));
            i.onDropFile.add((function(i1, i2) {
                return function(js) {
                    i1(i2, js)
                }
            })(oT(this, this.onWindowDropFile), i));
            i.onEnter.add((function(i1, i2) {
                return function() {
                    i1(i2)
                }
            })(oT(this, this.onWindowEnter), i));
            i.onFocusIn.add((function(i1, i2) {
                return function() {
                    i1(i2)
                }
            })(oT(this, this.onWindowFocusIn), i));
            i.onFocusOut.add((function(i1, i2) {
                return function() {
                    i1(i2)
                }
            })(oT(this, this.onWindowFocusOut), i));
            i.onFullscreen.add((function(i1, i2) {
                return function() {
                    i1(i2)
                }
            })(oT(this, this.onWindowFullscreen), i));
            i.onKeyDown.add((function(i1, i2) {
                return function(js, qY) {
                    i1(i2, js, qY)
                }
            })(oT(this, this.onKeyDown), i));
            i.onKeyUp.add((function(i2, i1) {
                return function(js, qY) {
                    i2(i1, js, qY)
                }
            })(oT(this, this.onKeyUp), i));
            i.onLeave.add((function(i2, i1) {
                return function() {
                    i2(i1)
                }
            })(oT(this, this.onWindowLeave), i));
            i.onMinimize.add((function(i2, i1) {
                return function() {
                    i2(i1)
                }
            })(oT(this, this.onWindowMinimize), i));
            i.onMouseDown.add((function(i1, i2) {
                return function(js, qZ, qY) {
                    i1(i2, js, qZ, qY)
                }
            })(oT(this, this.onMouseDown), i));
            i.onMouseMove.add((function(i1, i2) {
                return function(js, qY) {
                    i1(i2, js, qY)
                }
            })(oT(this, this.onMouseMove), i));
            i.onMouseMoveRelative.add((function(i2, i1) {
                return function(js, qY) {
                    i2(i1, js, qY)
                }
            })(oT(this, this.onMouseMoveRelative), i));
            i.onMouseUp.add((function(i2, i1) {
                return function(qY, qZ, js) {
                    i2(i1, qY, qZ, js)
                }
            })(oT(this, this.onMouseUp), i));
            i.onMouseWheel.add((function(i2, i1) {
                return function(qY, js) {
                    i2(i1, qY, js)
                }
            })(oT(this, this.onMouseWheel), i));
            i.onMove.add((function(i2, i1) {
                return function(js, qY) {
                    i2(i1, js, qY)
                }
            })(oT(this, this.onWindowMove), i));
            i.onResize.add((function(i2, i1) {
                return function(qY, js) {
                    i2(i1, qY, js)
                }
            })(oT(this, this.onWindowResize), i));
            i.onRestore.add((function(i2, i1) {
                return function() {
                    i2(i1)
                }
            })(oT(this, this.onWindowRestore), i));
            i.onTextEdit.add((function(i2, i1) {
                return function(qY, js, qZ) {
                    i2(i1, qY, js, qZ)
                }
            })(oT(this, this.onTextEdit), i));
            i.onTextInput.add((function(i2, i1) {
                return function(js) {
                    i2(i1, js)
                }
            })(oT(this, this.onTextInput), i));
            if (i.renderer == null) {
                var q = new jj(i);
                this.addRenderer(q)
            }
            i.create(this);
            this.windows.push(i);
            this.windowByID.h[i.id] = i;
            i.onCreate.dispatch()
        },
        exec: function() {
            dE.current = this;
            return this.backend.exec()
        },
        onGamepadAxisMove: function(q, i1, js) {
            var qY = 0;
            var i2 = this.modules;
            while (qY < i2.length) {
                var i = i2[qY];
                ++qY;
                i.onGamepadAxisMove(q, i1, js)
            }
        },
        onGamepadButtonDown: function(i1, q) {
            var js = 0;
            var i2 = this.modules;
            while (js < i2.length) {
                var i = i2[js];
                ++js;
                i.onGamepadButtonDown(i1, q)
            }
        },
        onGamepadButtonUp: function(i1, q) {
            var js = 0;
            var i2 = this.modules;
            while (js < i2.length) {
                var i = i2[js];
                ++js;
                i.onGamepadButtonUp(i1, q)
            }
        },
        onGamepadConnect: function(q) {
            var i2 = 0;
            var i1 = this.modules;
            while (i2 < i1.length) {
                var i = i1[i2];
                ++i2;
                i.onGamepadConnect(q)
            }
        },
        onGamepadDisconnect: function(q) {
            var i2 = 0;
            var i1 = this.modules;
            while (i2 < i1.length) {
                var i = i1[i2];
                ++i2;
                i.onGamepadDisconnect(q)
            }
        },
        onJoystickAxisMove: function(i, i1, js) {
            var qY = 0;
            var i2 = this.modules;
            while (qY < i2.length) {
                var q = i2[qY];
                ++qY;
                q.onJoystickAxisMove(i, i1, js)
            }
        },
        onJoystickButtonDown: function(i, i1) {
            var js = 0;
            var i2 = this.modules;
            while (js < i2.length) {
                var q = i2[js];
                ++js;
                q.onJoystickButtonDown(i, i1)
            }
        },
        onJoystickButtonUp: function(i, i1) {
            var js = 0;
            var i2 = this.modules;
            while (js < i2.length) {
                var q = i2[js];
                ++js;
                q.onJoystickButtonUp(i, i1)
            }
        },
        onJoystickConnect: function(i) {
            var i2 = 0;
            var i1 = this.modules;
            while (i2 < i1.length) {
                var q = i1[i2];
                ++i2;
                q.onJoystickConnect(i)
            }
        },
        onJoystickDisconnect: function(i) {
            var i2 = 0;
            var i1 = this.modules;
            while (i2 < i1.length) {
                var q = i1[i2];
                ++i2;
                q.onJoystickDisconnect(i)
            }
        },
        onJoystickHatMove: function(i1, q, i) {
            var qY = 0;
            var js = this.modules;
            while (qY < js.length) {
                var i2 = js[qY];
                ++qY;
                i2.onJoystickHatMove(i1, q, i)
            }
        },
        onJoystickTrackballMove: function(q, i, js) {
            var qY = 0;
            var i2 = this.modules;
            while (qY < i2.length) {
                var i1 = i2[qY];
                ++qY;
                i1.onJoystickTrackballMove(q, i, js)
            }
        },
        onKeyDown: function(i1, js, i) {
            var qY = 0;
            var i2 = this.modules;
            while (qY < i2.length) {
                var q = i2[qY];
                ++qY;
                q.onKeyDown(i1, js, i)
            }
        },
        onKeyUp: function(i1, js, i) {
            var qY = 0;
            var i2 = this.modules;
            while (qY < i2.length) {
                var q = i2[qY];
                ++qY;
                q.onKeyUp(i1, js, i)
            }
        },
        onModuleExit: function(q) {
            var i2 = 0;
            var i1 = this.modules;
            while (i2 < i1.length) {
                var i = i1[i2];
                ++i2;
                i.onModuleExit(q)
            }
            this.backend.exit()
        },
        onMouseDown: function(i2, i, qZ, i1) {
            var qY = 0;
            var js = this.modules;
            while (qY < js.length) {
                var q = js[qY];
                ++qY;
                q.onMouseDown(i2, i, qZ, i1)
            }
        },
        onMouseMove: function(i1, i, qY) {
            var js = 0;
            var i2 = this.modules;
            while (js < i2.length) {
                var q = i2[js];
                ++js;
                q.onMouseMove(i1, i, qY)
            }
        },
        onMouseMoveRelative: function(i1, i, qY) {
            var js = 0;
            var i2 = this.modules;
            while (js < i2.length) {
                var q = i2[js];
                ++js;
                q.onMouseMoveRelative(i1, i, qY)
            }
        },
        onMouseUp: function(i2, i, qZ, i1) {
            var qY = 0;
            var js = this.modules;
            while (qY < js.length) {
                var q = js[qY];
                ++qY;
                q.onMouseUp(i2, i, qZ, i1)
            }
        },
        onMouseWheel: function(i2, q, i) {
            var qY = 0;
            var js = this.modules;
            while (qY < js.length) {
                var i1 = js[qY];
                ++qY;
                i1.onMouseWheel(i2, q, i)
            }
        },
        onPreloadComplete: function() {
            var i1 = 0;
            var q = this.modules;
            while (i1 < q.length) {
                var i = q[i1];
                ++i1;
                i.onPreloadComplete()
            }
        },
        onPreloadProgress: function(i, i1) {
            var js = 0;
            var i2 = this.modules;
            while (js < i2.length) {
                var q = i2[js];
                ++js;
                q.onPreloadProgress(i, i1)
            }
        },
        onRenderContextLost: function(i1) {
            var i2 = 0;
            var q = this.modules;
            while (i2 < q.length) {
                var i = q[i2];
                ++i2;
                i.onRenderContextLost(i1)
            }
        },
        onRenderContextRestored: function(i2, q) {
            var js = 0;
            var i1 = this.modules;
            while (js < i1.length) {
                var i = i1[js];
                ++js;
                i.onRenderContextRestored(i2, q)
            }
        },
        onTextEdit: function(i1, qY, qZ, q) {
            var js = 0;
            var i2 = this.modules;
            while (js < i2.length) {
                var i = i2[js];
                ++js;
                i.onTextEdit(i1, qY, qZ, q)
            }
        },
        onTextInput: function(q, js) {
            var i2 = 0;
            var i1 = this.modules;
            while (i2 < i1.length) {
                var i = i1[i2];
                ++i2;
                i.onTextInput(q, js)
            }
        },
        onTouchEnd: function(i2) {
            var i1 = 0;
            var q = this.modules;
            while (i1 < q.length) {
                var i = q[i1];
                ++i1;
                i.onTouchEnd(i2)
            }
        },
        onTouchMove: function(i2) {
            var i1 = 0;
            var q = this.modules;
            while (i1 < q.length) {
                var i = q[i1];
                ++i1;
                i.onTouchMove(i2)
            }
        },
        onTouchStart: function(i2) {
            var i1 = 0;
            var q = this.modules;
            while (i1 < q.length) {
                var i = q[i1];
                ++i1;
                i.onTouchStart(i2)
            }
        },
        onWindowActivate: function(q) {
            var i2 = 0;
            var i1 = this.modules;
            while (i2 < i1.length) {
                var i = i1[i2];
                ++i2;
                i.onWindowActivate(q)
            }
        },
        onWindowClose: function(q) {
            var i2 = 0;
            var i1 = this.modules;
            while (i2 < i1.length) {
                var i = i1[i2];
                ++i2;
                i.onWindowClose(q)
            }
            this.removeWindow(q)
        },
        onWindowCreate: function(q) {
            var i2 = 0;
            var i1 = this.modules;
            while (i2 < i1.length) {
                var i = i1[i2];
                ++i2;
                i.onWindowCreate(q)
            }
        },
        onWindowDeactivate: function(q) {
            var i2 = 0;
            var i1 = this.modules;
            while (i2 < i1.length) {
                var i = i1[i2];
                ++i2;
                i.onWindowDeactivate(q)
            }
        },
        onWindowDropFile: function(i1, q) {
            var js = 0;
            var i2 = this.modules;
            while (js < i2.length) {
                var i = i2[js];
                ++js;
                i.onWindowDropFile(i1, q)
            }
        },
        onWindowEnter: function(q) {
            var i2 = 0;
            var i1 = this.modules;
            while (i2 < i1.length) {
                var i = i1[i2];
                ++i2;
                i.onWindowEnter(q)
            }
        },
        onWindowFocusIn: function(q) {
            var i2 = 0;
            var i1 = this.modules;
            while (i2 < i1.length) {
                var i = i1[i2];
                ++i2;
                i.onWindowFocusIn(q)
            }
        },
        onWindowFocusOut: function(q) {
            var i2 = 0;
            var i1 = this.modules;
            while (i2 < i1.length) {
                var i = i1[i2];
                ++i2;
                i.onWindowFocusOut(q)
            }
        },
        onWindowFullscreen: function(q) {
            var i2 = 0;
            var i1 = this.modules;
            while (i2 < i1.length) {
                var i = i1[i2];
                ++i2;
                i.onWindowFullscreen(q)
            }
        },
        onWindowLeave: function(q) {
            var i2 = 0;
            var i1 = this.modules;
            while (i2 < i1.length) {
                var i = i1[i2];
                ++i2;
                i.onWindowLeave(q)
            }
        },
        onWindowMinimize: function(q) {
            var i2 = 0;
            var i1 = this.modules;
            while (i2 < i1.length) {
                var i = i1[i2];
                ++i2;
                i.onWindowMinimize(q)
            }
        },
        onWindowMove: function(i1, i, qY) {
            var js = 0;
            var i2 = this.modules;
            while (js < i2.length) {
                var q = i2[js];
                ++js;
                q.onWindowMove(i1, i, qY)
            }
        },
        onWindowResize: function(i2, i1, i) {
            var qY = 0;
            var js = this.modules;
            while (qY < js.length) {
                var q = js[qY];
                ++qY;
                q.onWindowResize(i2, i1, i)
            }
        },
        onWindowRestore: function(q) {
            var i2 = 0;
            var i1 = this.modules;
            while (i2 < i1.length) {
                var i = i1[i2];
                ++i2;
                i.onWindowRestore(q)
            }
        },
        removeModule: function(i) {
            if (i != null) {
                i.onModuleExit(0);
                cj.remove(this.modules, i)
            }
        },
        removeRenderer: function(i) {
            if (i != null && cj.indexOf(this.renderers, i, 0) > -1) {
                cj.remove(this.renderers, i)
            }
        },
        removeWindow: function(i) {
            if (i != null && this.windowByID.h.hasOwnProperty(i.id)) {
                cj.remove(this.windows, i);
                this.windowByID.remove(i.id);
                i.close();
                if (this.windows[0] == i) {
                    this.window = null
                }
            }
        },
        render: function(i1) {
            var i2 = 0;
            var q = this.modules;
            while (i2 < q.length) {
                var i = q[i2];
                ++i2;
                i.render(i1)
            }
        },
        setPreloader: function(i) {
            if (this.preloader != null) {
                this.preloader.onProgress.remove(oT(this, this.onPreloadProgress));
                this.preloader.onComplete.remove(oT(this, this.onPreloadComplete))
            }
            this.preloader = i;
            if (i.complete) {
                this.onPreloadComplete()
            } else {
                i.onProgress.add(oT(this, this.onPreloadProgress));
                i.onComplete.add(oT(this, this.onPreloadComplete))
            }
        },
        update: function(i) {
            var i2 = 0;
            var i1 = this.modules;
            while (i2 < i1.length) {
                var q = i1[i2];
                ++i2;
                q.update(i)
            }
        },
        __onGamepadConnect: function(i) {
            this.onGamepadConnect(i);
            i.onAxisMove.add((function(i1, q) {
                return function(i2, js) {
                    i1(q, i2, js)
                }
            })(oT(this, this.onGamepadAxisMove), i));
            i.onButtonDown.add((function(q, i1) {
                return function(i2) {
                    q(i1, i2)
                }
            })(oT(this, this.onGamepadButtonDown), i));
            i.onButtonUp.add((function(i1, q) {
                return function(i2) {
                    i1(q, i2)
                }
            })(oT(this, this.onGamepadButtonUp), i));
            i.onDisconnect.add((function(q, i1) {
                return function() {
                    q(i1)
                }
            })(oT(this, this.onGamepadDisconnect), i))
        },
        __onJoystickConnect: function(i) {
            this.onJoystickConnect(i);
            i.onAxisMove.add((function(i1, q) {
                return function(i2, js) {
                    i1(q, i2, js)
                }
            })(oT(this, this.onJoystickAxisMove), i));
            i.onButtonDown.add((function(q, i1) {
                return function(i2) {
                    q(i1, i2)
                }
            })(oT(this, this.onJoystickButtonDown), i));
            i.onButtonUp.add((function(i1, q) {
                return function(i2) {
                    i1(q, i2)
                }
            })(oT(this, this.onJoystickButtonUp), i));
            i.onDisconnect.add((function(q, i1) {
                return function() {
                    q(i1)
                }
            })(oT(this, this.onJoystickDisconnect), i));
            i.onHatMove.add((function(q, i1) {
                return function(i2, js) {
                    q(i1, i2, js)
                }
            })(oT(this, this.onJoystickHatMove), i));
            i.onTrackballMove.add((function(q, i1) {
                return function(i2, js) {
                    q(i1, i2, js)
                }
            })(oT(this, this.onJoystickTrackballMove), i))
        },
        get_frameRate: function() {
            return this.backend.getFrameRate()
        },
        set_frameRate: function(i) {
            return this.backend.setFrameRate(i)
        },
        get_renderer: function() {
            return this.renderers[0]
        },
        get_window: function() {
            return this.windows[0]
        },
        __class__: dE,
        __properties__: {
            get_window: "get_window",
            get_renderer: "get_renderer",
            set_frameRate: "set_frameRate",
            get_frameRate: "get_frameRate"
        }
    });
    var fl = function() {
        this.canceled = false;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = []
    };
    nt["lime.app.Event"] = fl;
    fl.__name__ = ["lime", "app", "Event"];
    fl.prototype = {
        canceled: null,
        __listeners: null,
        __repeat: null,
        __priorities: null,
        add: function(qY, i2, i1) {
            if (i1 == null) {
                i1 = 0
            }
            if (i2 == null) {
                i2 = false
            }
            var js = 0;
            var qZ = this.__priorities.length;
            while (js < qZ) {
                var q = js++;
                if (i1 > this.__priorities[q]) {
                    this.__listeners.splice(q, 0, qY);
                    this.__priorities.splice(q, 0, i1);
                    this.__repeat.splice(q, 0, !i2);
                    return
                }
            }
            this.__listeners.push(qY);
            this.__priorities.push(i1);
            this.__repeat.push(!i2)
        },
        cancel: function() {
            this.canceled = true
        },
        dispatch: null,
        has: function(i1) {
            var i2 = 0;
            var q = this.__listeners;
            while (i2 < q.length) {
                var i = q[i2];
                ++i2;
                if (ar.compareMethods(i, i1)) {
                    return true
                }
            }
            return false
        },
        remove: function(i1) {
            var q = this.__listeners.length;
            while (--q >= 0) {
                if (ar.compareMethods(this.__listeners[q], i1)) {
                    this.__listeners.splice(q, 1);
                    this.__priorities.splice(q, 1);
                    this.__repeat.splice(q, 1)
                }
            }
        },
        __class__: fl
    };
    var pm = function() {
        this.canceled = false;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = []
    };
    nt["lime.app.Event_Dynamic_Void"] = pm;
    pm.__name__ = ["lime", "app", "Event_Dynamic_Void"];
    pm.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(qY, i2, i1) {
            if (i1 == null) {
                i1 = 0
            }
            if (i2 == null) {
                i2 = false
            }
            var js = 0;
            var qZ = this.__priorities.length;
            while (js < qZ) {
                var q = js++;
                if (i1 > this.__priorities[q]) {
                    this.__listeners.splice(q, 0, qY);
                    this.__priorities.splice(q, 0, i1);
                    this.__repeat.splice(q, 0, !i2);
                    return
                }
            }
            this.__listeners.push(qY);
            this.__priorities.push(i1);
            this.__repeat.push(!i2)
        },
        cancel: function() {
            this.canceled = true
        },
        has: function(i1) {
            var i2 = 0;
            var q = this.__listeners;
            while (i2 < q.length) {
                var i = q[i2];
                ++i2;
                if (ar.compareMethods(i, i1)) {
                    return true
                }
            }
            return false
        },
        remove: function(i1) {
            var q = this.__listeners.length;
            while (--q >= 0) {
                if (ar.compareMethods(this.__listeners[q], i1)) {
                    this.__listeners.splice(q, 1);
                    this.__priorities.splice(q, 1);
                    this.__repeat.splice(q, 1)
                }
            }
        },
        __listeners: null,
        dispatch: function(q) {
            this.canceled = false;
            var i2 = this.__listeners;
            var js = this.__repeat;
            var i1 = 0;
            while (i1 < i2.length) {
                i2[i1](q);
                if (!js[i1]) {
                    this.remove(i2[i1])
                } else {
                    i1++
                }
                if (this.canceled) {
                    break
                }
            }
        },
        __class__: pm
    };
    var j2 = function() {
        this.canceled = false;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = []
    };
    nt["lime.app.Event_Float_Float_Int_Void"] = j2;
    j2.__name__ = ["lime", "app", "Event_Float_Float_Int_Void"];
    j2.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(qY, i2, i1) {
            if (i1 == null) {
                i1 = 0
            }
            if (i2 == null) {
                i2 = false
            }
            var js = 0;
            var qZ = this.__priorities.length;
            while (js < qZ) {
                var q = js++;
                if (i1 > this.__priorities[q]) {
                    this.__listeners.splice(q, 0, qY);
                    this.__priorities.splice(q, 0, i1);
                    this.__repeat.splice(q, 0, !i2);
                    return
                }
            }
            this.__listeners.push(qY);
            this.__priorities.push(i1);
            this.__repeat.push(!i2)
        },
        cancel: function() {
            this.canceled = true
        },
        has: function(i1) {
            var i2 = 0;
            var q = this.__listeners;
            while (i2 < q.length) {
                var i = q[i2];
                ++i2;
                if (ar.compareMethods(i, i1)) {
                    return true
                }
            }
            return false
        },
        remove: function(i1) {
            var q = this.__listeners.length;
            while (--q >= 0) {
                if (ar.compareMethods(this.__listeners[q], i1)) {
                    this.__listeners.splice(q, 1);
                    this.__priorities.splice(q, 1);
                    this.__repeat.splice(q, 1)
                }
            }
        },
        __listeners: null,
        dispatch: function(i2, i1, q) {
            this.canceled = false;
            var qY = this.__listeners;
            var qZ = this.__repeat;
            var js = 0;
            while (js < qY.length) {
                qY[js](i2, i1, q);
                if (!qZ[js]) {
                    this.remove(qY[js])
                } else {
                    js++
                }
                if (this.canceled) {
                    break
                }
            }
        },
        __class__: j2
    };
    var gy = function() {
        this.canceled = false;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = []
    };
    nt["lime.app.Event_Float_Float_Void"] = gy;
    gy.__name__ = ["lime", "app", "Event_Float_Float_Void"];
    gy.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(qY, i2, i1) {
            if (i1 == null) {
                i1 = 0
            }
            if (i2 == null) {
                i2 = false
            }
            var js = 0;
            var qZ = this.__priorities.length;
            while (js < qZ) {
                var q = js++;
                if (i1 > this.__priorities[q]) {
                    this.__listeners.splice(q, 0, qY);
                    this.__priorities.splice(q, 0, i1);
                    this.__repeat.splice(q, 0, !i2);
                    return
                }
            }
            this.__listeners.push(qY);
            this.__priorities.push(i1);
            this.__repeat.push(!i2)
        },
        cancel: function() {
            this.canceled = true
        },
        has: function(i1) {
            var i2 = 0;
            var q = this.__listeners;
            while (i2 < q.length) {
                var i = q[i2];
                ++i2;
                if (ar.compareMethods(i, i1)) {
                    return true
                }
            }
            return false
        },
        remove: function(i1) {
            var q = this.__listeners.length;
            while (--q >= 0) {
                if (ar.compareMethods(this.__listeners[q], i1)) {
                    this.__listeners.splice(q, 1);
                    this.__priorities.splice(q, 1);
                    this.__repeat.splice(q, 1)
                }
            }
        },
        __listeners: null,
        dispatch: function(i1, q) {
            this.canceled = false;
            var js = this.__listeners;
            var qY = this.__repeat;
            var i2 = 0;
            while (i2 < js.length) {
                js[i2](i1, q);
                if (!qY[i2]) {
                    this.remove(js[i2])
                } else {
                    i2++
                }
                if (this.canceled) {
                    break
                }
            }
        },
        __class__: gy
    };
    var bf = function() {
        this.canceled = false;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = []
    };
    nt["lime.app.Event_Int_Float_Void"] = bf;
    bf.__name__ = ["lime", "app", "Event_Int_Float_Void"];
    bf.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(qY, i2, i1) {
            if (i1 == null) {
                i1 = 0
            }
            if (i2 == null) {
                i2 = false
            }
            var js = 0;
            var qZ = this.__priorities.length;
            while (js < qZ) {
                var q = js++;
                if (i1 > this.__priorities[q]) {
                    this.__listeners.splice(q, 0, qY);
                    this.__priorities.splice(q, 0, i1);
                    this.__repeat.splice(q, 0, !i2);
                    return
                }
            }
            this.__listeners.push(qY);
            this.__priorities.push(i1);
            this.__repeat.push(!i2)
        },
        cancel: function() {
            this.canceled = true
        },
        has: function(i1) {
            var i2 = 0;
            var q = this.__listeners;
            while (i2 < q.length) {
                var i = q[i2];
                ++i2;
                if (ar.compareMethods(i, i1)) {
                    return true
                }
            }
            return false
        },
        remove: function(i1) {
            var q = this.__listeners.length;
            while (--q >= 0) {
                if (ar.compareMethods(this.__listeners[q], i1)) {
                    this.__listeners.splice(q, 1);
                    this.__priorities.splice(q, 1);
                    this.__repeat.splice(q, 1)
                }
            }
        },
        __listeners: null,
        dispatch: function(i1, q) {
            this.canceled = false;
            var js = this.__listeners;
            var qY = this.__repeat;
            var i2 = 0;
            while (i2 < js.length) {
                js[i2](i1, q);
                if (!qY[i2]) {
                    this.remove(js[i2])
                } else {
                    i2++
                }
                if (this.canceled) {
                    break
                }
            }
        },
        __class__: bf
    };
    var it = function() {
        this.canceled = false;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = []
    };
    nt["lime.app.Event_Int_Int_Void"] = it;
    it.__name__ = ["lime", "app", "Event_Int_Int_Void"];
    it.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(qY, i2, i1) {
            if (i1 == null) {
                i1 = 0
            }
            if (i2 == null) {
                i2 = false
            }
            var js = 0;
            var qZ = this.__priorities.length;
            while (js < qZ) {
                var q = js++;
                if (i1 > this.__priorities[q]) {
                    this.__listeners.splice(q, 0, qY);
                    this.__priorities.splice(q, 0, i1);
                    this.__repeat.splice(q, 0, !i2);
                    return
                }
            }
            this.__listeners.push(qY);
            this.__priorities.push(i1);
            this.__repeat.push(!i2)
        },
        cancel: function() {
            this.canceled = true
        },
        has: function(i1) {
            var i2 = 0;
            var q = this.__listeners;
            while (i2 < q.length) {
                var i = q[i2];
                ++i2;
                if (ar.compareMethods(i, i1)) {
                    return true
                }
            }
            return false
        },
        remove: function(i1) {
            var q = this.__listeners.length;
            while (--q >= 0) {
                if (ar.compareMethods(this.__listeners[q], i1)) {
                    this.__listeners.splice(q, 1);
                    this.__priorities.splice(q, 1);
                    this.__repeat.splice(q, 1)
                }
            }
        },
        __listeners: null,
        dispatch: function(i1, q) {
            this.canceled = false;
            var js = this.__listeners;
            var qY = this.__repeat;
            var i2 = 0;
            while (i2 < js.length) {
                js[i2](i1, q);
                if (!qY[i2]) {
                    this.remove(js[i2])
                } else {
                    i2++
                }
                if (this.canceled) {
                    break
                }
            }
        },
        __class__: it
    };
    var d6 = function() {
        this.canceled = false;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = []
    };
    nt["lime.app.Event_Int_Void"] = d6;
    d6.__name__ = ["lime", "app", "Event_Int_Void"];
    d6.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(qY, i2, i1) {
            if (i1 == null) {
                i1 = 0
            }
            if (i2 == null) {
                i2 = false
            }
            var js = 0;
            var qZ = this.__priorities.length;
            while (js < qZ) {
                var q = js++;
                if (i1 > this.__priorities[q]) {
                    this.__listeners.splice(q, 0, qY);
                    this.__priorities.splice(q, 0, i1);
                    this.__repeat.splice(q, 0, !i2);
                    return
                }
            }
            this.__listeners.push(qY);
            this.__priorities.push(i1);
            this.__repeat.push(!i2)
        },
        cancel: function() {
            this.canceled = true
        },
        has: function(i1) {
            var i2 = 0;
            var q = this.__listeners;
            while (i2 < q.length) {
                var i = q[i2];
                ++i2;
                if (ar.compareMethods(i, i1)) {
                    return true
                }
            }
            return false
        },
        remove: function(i1) {
            var q = this.__listeners.length;
            while (--q >= 0) {
                if (ar.compareMethods(this.__listeners[q], i1)) {
                    this.__listeners.splice(q, 1);
                    this.__priorities.splice(q, 1);
                    this.__repeat.splice(q, 1)
                }
            }
        },
        __listeners: null,
        dispatch: function(q) {
            this.canceled = false;
            var i2 = this.__listeners;
            var js = this.__repeat;
            var i1 = 0;
            while (i1 < i2.length) {
                i2[i1](q);
                if (!js[i1]) {
                    this.remove(i2[i1])
                } else {
                    i1++
                }
                if (this.canceled) {
                    break
                }
            }
        },
        __class__: d6
    };
    var ff = function() {
        this.canceled = false;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = []
    };
    nt["lime.app.Event_Int_lime_ui_JoystickHatPosition_Void"] = ff;
    ff.__name__ = ["lime", "app", "Event_Int_lime_ui_JoystickHatPosition_Void"];
    ff.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(qY, i2, i1) {
            if (i1 == null) {
                i1 = 0
            }
            if (i2 == null) {
                i2 = false
            }
            var js = 0;
            var qZ = this.__priorities.length;
            while (js < qZ) {
                var q = js++;
                if (i1 > this.__priorities[q]) {
                    this.__listeners.splice(q, 0, qY);
                    this.__priorities.splice(q, 0, i1);
                    this.__repeat.splice(q, 0, !i2);
                    return
                }
            }
            this.__listeners.push(qY);
            this.__priorities.push(i1);
            this.__repeat.push(!i2)
        },
        cancel: function() {
            this.canceled = true
        },
        has: function(i1) {
            var i2 = 0;
            var q = this.__listeners;
            while (i2 < q.length) {
                var i = q[i2];
                ++i2;
                if (ar.compareMethods(i, i1)) {
                    return true
                }
            }
            return false
        },
        remove: function(i1) {
            var q = this.__listeners.length;
            while (--q >= 0) {
                if (ar.compareMethods(this.__listeners[q], i1)) {
                    this.__listeners.splice(q, 1);
                    this.__priorities.splice(q, 1);
                    this.__repeat.splice(q, 1)
                }
            }
        },
        __listeners: null,
        dispatch: function(i1, q) {
            this.canceled = false;
            var js = this.__listeners;
            var qY = this.__repeat;
            var i2 = 0;
            while (i2 < js.length) {
                js[i2](i1, q);
                if (!qY[i2]) {
                    this.remove(js[i2])
                } else {
                    i2++
                }
                if (this.canceled) {
                    break
                }
            }
        },
        __class__: ff
    };
    var hZ = function() {
        this.canceled = false;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = []
    };
    nt["lime.app.Event_String_Int_Int_Void"] = hZ;
    hZ.__name__ = ["lime", "app", "Event_String_Int_Int_Void"];
    hZ.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(qY, i2, i1) {
            if (i1 == null) {
                i1 = 0
            }
            if (i2 == null) {
                i2 = false
            }
            var js = 0;
            var qZ = this.__priorities.length;
            while (js < qZ) {
                var q = js++;
                if (i1 > this.__priorities[q]) {
                    this.__listeners.splice(q, 0, qY);
                    this.__priorities.splice(q, 0, i1);
                    this.__repeat.splice(q, 0, !i2);
                    return
                }
            }
            this.__listeners.push(qY);
            this.__priorities.push(i1);
            this.__repeat.push(!i2)
        },
        cancel: function() {
            this.canceled = true
        },
        has: function(i1) {
            var i2 = 0;
            var q = this.__listeners;
            while (i2 < q.length) {
                var i = q[i2];
                ++i2;
                if (ar.compareMethods(i, i1)) {
                    return true
                }
            }
            return false
        },
        remove: function(i1) {
            var q = this.__listeners.length;
            while (--q >= 0) {
                if (ar.compareMethods(this.__listeners[q], i1)) {
                    this.__listeners.splice(q, 1);
                    this.__priorities.splice(q, 1);
                    this.__repeat.splice(q, 1)
                }
            }
        },
        __listeners: null,
        dispatch: function(i2, i1, q) {
            this.canceled = false;
            var qY = this.__listeners;
            var qZ = this.__repeat;
            var js = 0;
            while (js < qY.length) {
                qY[js](i2, i1, q);
                if (!qZ[js]) {
                    this.remove(qY[js])
                } else {
                    js++
                }
                if (this.canceled) {
                    break
                }
            }
        },
        __class__: hZ
    };
    var nL = function() {
        this.canceled = false;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = []
    };
    nt["lime.app.Event_String_Void"] = nL;
    nL.__name__ = ["lime", "app", "Event_String_Void"];
    nL.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(qY, i2, i1) {
            if (i1 == null) {
                i1 = 0
            }
            if (i2 == null) {
                i2 = false
            }
            var js = 0;
            var qZ = this.__priorities.length;
            while (js < qZ) {
                var q = js++;
                if (i1 > this.__priorities[q]) {
                    this.__listeners.splice(q, 0, qY);
                    this.__priorities.splice(q, 0, i1);
                    this.__repeat.splice(q, 0, !i2);
                    return
                }
            }
            this.__listeners.push(qY);
            this.__priorities.push(i1);
            this.__repeat.push(!i2)
        },
        cancel: function() {
            this.canceled = true
        },
        has: function(i1) {
            var i2 = 0;
            var q = this.__listeners;
            while (i2 < q.length) {
                var i = q[i2];
                ++i2;
                if (ar.compareMethods(i, i1)) {
                    return true
                }
            }
            return false
        },
        remove: function(i1) {
            var q = this.__listeners.length;
            while (--q >= 0) {
                if (ar.compareMethods(this.__listeners[q], i1)) {
                    this.__listeners.splice(q, 1);
                    this.__priorities.splice(q, 1);
                    this.__repeat.splice(q, 1)
                }
            }
        },
        __listeners: null,
        dispatch: function(q) {
            this.canceled = false;
            var i2 = this.__listeners;
            var js = this.__repeat;
            var i1 = 0;
            while (i1 < i2.length) {
                i2[i1](q);
                if (!js[i1]) {
                    this.remove(i2[i1])
                } else {
                    i1++
                }
                if (this.canceled) {
                    break
                }
            }
        },
        __class__: nL
    };
    var X = function() {
        this.canceled = false;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = []
    };
    nt["lime.app.Event_lime_graphics_RenderContext_Void"] = X;
    X.__name__ = ["lime", "app", "Event_lime_graphics_RenderContext_Void"];
    X.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(qY, i2, i1) {
            if (i1 == null) {
                i1 = 0
            }
            if (i2 == null) {
                i2 = false
            }
            var js = 0;
            var qZ = this.__priorities.length;
            while (js < qZ) {
                var q = js++;
                if (i1 > this.__priorities[q]) {
                    this.__listeners.splice(q, 0, qY);
                    this.__priorities.splice(q, 0, i1);
                    this.__repeat.splice(q, 0, !i2);
                    return
                }
            }
            this.__listeners.push(qY);
            this.__priorities.push(i1);
            this.__repeat.push(!i2)
        },
        cancel: function() {
            this.canceled = true
        },
        has: function(i1) {
            var i2 = 0;
            var q = this.__listeners;
            while (i2 < q.length) {
                var i = q[i2];
                ++i2;
                if (ar.compareMethods(i, i1)) {
                    return true
                }
            }
            return false
        },
        remove: function(i1) {
            var q = this.__listeners.length;
            while (--q >= 0) {
                if (ar.compareMethods(this.__listeners[q], i1)) {
                    this.__listeners.splice(q, 1);
                    this.__priorities.splice(q, 1);
                    this.__repeat.splice(q, 1)
                }
            }
        },
        __listeners: null,
        dispatch: function(q) {
            this.canceled = false;
            var i2 = this.__listeners;
            var js = this.__repeat;
            var i1 = 0;
            while (i1 < i2.length) {
                i2[i1](q);
                if (!js[i1]) {
                    this.remove(i2[i1])
                } else {
                    i1++
                }
                if (this.canceled) {
                    break
                }
            }
        },
        __class__: X
    };
    var cg = function() {
        this.canceled = false;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = []
    };
    nt["lime.app.Event_lime_ui_GamepadAxis_Float_Void"] = cg;
    cg.__name__ = ["lime", "app", "Event_lime_ui_GamepadAxis_Float_Void"];
    cg.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(qY, i2, i1) {
            if (i1 == null) {
                i1 = 0
            }
            if (i2 == null) {
                i2 = false
            }
            var js = 0;
            var qZ = this.__priorities.length;
            while (js < qZ) {
                var q = js++;
                if (i1 > this.__priorities[q]) {
                    this.__listeners.splice(q, 0, qY);
                    this.__priorities.splice(q, 0, i1);
                    this.__repeat.splice(q, 0, !i2);
                    return
                }
            }
            this.__listeners.push(qY);
            this.__priorities.push(i1);
            this.__repeat.push(!i2)
        },
        cancel: function() {
            this.canceled = true
        },
        has: function(i1) {
            var i2 = 0;
            var q = this.__listeners;
            while (i2 < q.length) {
                var i = q[i2];
                ++i2;
                if (ar.compareMethods(i, i1)) {
                    return true
                }
            }
            return false
        },
        remove: function(i1) {
            var q = this.__listeners.length;
            while (--q >= 0) {
                if (ar.compareMethods(this.__listeners[q], i1)) {
                    this.__listeners.splice(q, 1);
                    this.__priorities.splice(q, 1);
                    this.__repeat.splice(q, 1)
                }
            }
        },
        __listeners: null,
        dispatch: function(i1, q) {
            this.canceled = false;
            var js = this.__listeners;
            var qY = this.__repeat;
            var i2 = 0;
            while (i2 < js.length) {
                js[i2](i1, q);
                if (!qY[i2]) {
                    this.remove(js[i2])
                } else {
                    i2++
                }
                if (this.canceled) {
                    break
                }
            }
        },
        __class__: cg
    };
    var fm = function() {
        this.canceled = false;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = []
    };
    nt["lime.app.Event_lime_ui_GamepadButton_Void"] = fm;
    fm.__name__ = ["lime", "app", "Event_lime_ui_GamepadButton_Void"];
    fm.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(qY, i2, i1) {
            if (i1 == null) {
                i1 = 0
            }
            if (i2 == null) {
                i2 = false
            }
            var js = 0;
            var qZ = this.__priorities.length;
            while (js < qZ) {
                var q = js++;
                if (i1 > this.__priorities[q]) {
                    this.__listeners.splice(q, 0, qY);
                    this.__priorities.splice(q, 0, i1);
                    this.__repeat.splice(q, 0, !i2);
                    return
                }
            }
            this.__listeners.push(qY);
            this.__priorities.push(i1);
            this.__repeat.push(!i2)
        },
        cancel: function() {
            this.canceled = true
        },
        has: function(i1) {
            var i2 = 0;
            var q = this.__listeners;
            while (i2 < q.length) {
                var i = q[i2];
                ++i2;
                if (ar.compareMethods(i, i1)) {
                    return true
                }
            }
            return false
        },
        remove: function(i1) {
            var q = this.__listeners.length;
            while (--q >= 0) {
                if (ar.compareMethods(this.__listeners[q], i1)) {
                    this.__listeners.splice(q, 1);
                    this.__priorities.splice(q, 1);
                    this.__repeat.splice(q, 1)
                }
            }
        },
        __listeners: null,
        dispatch: function(q) {
            this.canceled = false;
            var i2 = this.__listeners;
            var js = this.__repeat;
            var i1 = 0;
            while (i1 < i2.length) {
                i2[i1](q);
                if (!js[i1]) {
                    this.remove(i2[i1])
                } else {
                    i1++
                }
                if (this.canceled) {
                    break
                }
            }
        },
        __class__: fm
    };
    var ds = function() {
        this.canceled = false;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = []
    };
    nt["lime.app.Event_lime_ui_Gamepad_Void"] = ds;
    ds.__name__ = ["lime", "app", "Event_lime_ui_Gamepad_Void"];
    ds.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(qY, i2, i1) {
            if (i1 == null) {
                i1 = 0
            }
            if (i2 == null) {
                i2 = false
            }
            var js = 0;
            var qZ = this.__priorities.length;
            while (js < qZ) {
                var q = js++;
                if (i1 > this.__priorities[q]) {
                    this.__listeners.splice(q, 0, qY);
                    this.__priorities.splice(q, 0, i1);
                    this.__repeat.splice(q, 0, !i2);
                    return
                }
            }
            this.__listeners.push(qY);
            this.__priorities.push(i1);
            this.__repeat.push(!i2)
        },
        cancel: function() {
            this.canceled = true
        },
        has: function(i1) {
            var i2 = 0;
            var q = this.__listeners;
            while (i2 < q.length) {
                var i = q[i2];
                ++i2;
                if (ar.compareMethods(i, i1)) {
                    return true
                }
            }
            return false
        },
        remove: function(i1) {
            var q = this.__listeners.length;
            while (--q >= 0) {
                if (ar.compareMethods(this.__listeners[q], i1)) {
                    this.__listeners.splice(q, 1);
                    this.__priorities.splice(q, 1);
                    this.__repeat.splice(q, 1)
                }
            }
        },
        __listeners: null,
        dispatch: function(q) {
            this.canceled = false;
            var i2 = this.__listeners;
            var js = this.__repeat;
            var i1 = 0;
            while (i1 < i2.length) {
                i2[i1](q);
                if (!js[i1]) {
                    this.remove(i2[i1])
                } else {
                    i1++
                }
                if (this.canceled) {
                    break
                }
            }
        },
        __class__: ds
    };
    var hb = function() {
        this.canceled = false;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = []
    };
    nt["lime.app.Event_lime_ui_Joystick_Void"] = hb;
    hb.__name__ = ["lime", "app", "Event_lime_ui_Joystick_Void"];
    hb.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(qY, i2, i1) {
            if (i1 == null) {
                i1 = 0
            }
            if (i2 == null) {
                i2 = false
            }
            var js = 0;
            var qZ = this.__priorities.length;
            while (js < qZ) {
                var q = js++;
                if (i1 > this.__priorities[q]) {
                    this.__listeners.splice(q, 0, qY);
                    this.__priorities.splice(q, 0, i1);
                    this.__repeat.splice(q, 0, !i2);
                    return
                }
            }
            this.__listeners.push(qY);
            this.__priorities.push(i1);
            this.__repeat.push(!i2)
        },
        cancel: function() {
            this.canceled = true
        },
        has: function(i1) {
            var i2 = 0;
            var q = this.__listeners;
            while (i2 < q.length) {
                var i = q[i2];
                ++i2;
                if (ar.compareMethods(i, i1)) {
                    return true
                }
            }
            return false
        },
        remove: function(i1) {
            var q = this.__listeners.length;
            while (--q >= 0) {
                if (ar.compareMethods(this.__listeners[q], i1)) {
                    this.__listeners.splice(q, 1);
                    this.__priorities.splice(q, 1);
                    this.__repeat.splice(q, 1)
                }
            }
        },
        __listeners: null,
        dispatch: function(q) {
            this.canceled = false;
            var i2 = this.__listeners;
            var js = this.__repeat;
            var i1 = 0;
            while (i1 < i2.length) {
                i2[i1](q);
                if (!js[i1]) {
                    this.remove(i2[i1])
                } else {
                    i1++
                }
                if (this.canceled) {
                    break
                }
            }
        },
        __class__: hb
    };
    var p9 = function() {
        this.canceled = false;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = []
    };
    nt["lime.app.Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void"] = p9;
    p9.__name__ = ["lime", "app", "Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void"];
    p9.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(qY, i2, i1) {
            if (i1 == null) {
                i1 = 0
            }
            if (i2 == null) {
                i2 = false
            }
            var js = 0;
            var qZ = this.__priorities.length;
            while (js < qZ) {
                var q = js++;
                if (i1 > this.__priorities[q]) {
                    this.__listeners.splice(q, 0, qY);
                    this.__priorities.splice(q, 0, i1);
                    this.__repeat.splice(q, 0, !i2);
                    return
                }
            }
            this.__listeners.push(qY);
            this.__priorities.push(i1);
            this.__repeat.push(!i2)
        },
        cancel: function() {
            this.canceled = true
        },
        has: function(i1) {
            var i2 = 0;
            var q = this.__listeners;
            while (i2 < q.length) {
                var i = q[i2];
                ++i2;
                if (ar.compareMethods(i, i1)) {
                    return true
                }
            }
            return false
        },
        remove: function(i1) {
            var q = this.__listeners.length;
            while (--q >= 0) {
                if (ar.compareMethods(this.__listeners[q], i1)) {
                    this.__listeners.splice(q, 1);
                    this.__priorities.splice(q, 1);
                    this.__repeat.splice(q, 1)
                }
            }
        },
        __listeners: null,
        dispatch: function(i1, q) {
            this.canceled = false;
            var js = this.__listeners;
            var qY = this.__repeat;
            var i2 = 0;
            while (i2 < js.length) {
                js[i2](i1, q);
                if (!qY[i2]) {
                    this.remove(js[i2])
                } else {
                    i2++
                }
                if (this.canceled) {
                    break
                }
            }
        },
        __class__: p9
    };
    var pE = function() {
        this.canceled = false;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = []
    };
    nt["lime.app.Event_lime_ui_Touch_Void"] = pE;
    pE.__name__ = ["lime", "app", "Event_lime_ui_Touch_Void"];
    pE.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(qY, i2, i1) {
            if (i1 == null) {
                i1 = 0
            }
            if (i2 == null) {
                i2 = false
            }
            var js = 0;
            var qZ = this.__priorities.length;
            while (js < qZ) {
                var q = js++;
                if (i1 > this.__priorities[q]) {
                    this.__listeners.splice(q, 0, qY);
                    this.__priorities.splice(q, 0, i1);
                    this.__repeat.splice(q, 0, !i2);
                    return
                }
            }
            this.__listeners.push(qY);
            this.__priorities.push(i1);
            this.__repeat.push(!i2)
        },
        cancel: function() {
            this.canceled = true
        },
        has: function(i1) {
            var i2 = 0;
            var q = this.__listeners;
            while (i2 < q.length) {
                var i = q[i2];
                ++i2;
                if (ar.compareMethods(i, i1)) {
                    return true
                }
            }
            return false
        },
        remove: function(i1) {
            var q = this.__listeners.length;
            while (--q >= 0) {
                if (ar.compareMethods(this.__listeners[q], i1)) {
                    this.__listeners.splice(q, 1);
                    this.__priorities.splice(q, 1);
                    this.__repeat.splice(q, 1)
                }
            }
        },
        __listeners: null,
        dispatch: function(q) {
            this.canceled = false;
            var i2 = this.__listeners;
            var js = this.__repeat;
            var i1 = 0;
            while (i1 < i2.length) {
                i2[i1](q);
                if (!js[i1]) {
                    this.remove(i2[i1])
                } else {
                    i1++
                }
                if (this.canceled) {
                    break
                }
            }
        },
        __class__: pE
    };
    var kL = function(i) {
        if (i != null) {
            if (kL.__threadPool == null) {
                kL.__threadPool = new dl();
                kL.__threadPool.doWork.add(kL.threadPool_doWork);
                kL.__threadPool.onComplete.add(kL.threadPool_onComplete);
                kL.__threadPool.onError.add(kL.threadPool_onError)
            }
            var q = new oJ();
            q.future = this;
            kL.__threadPool.queue({
                promise: q,
                work: i
            })
        }
    };
    nt["lime.app.Future"] = kL;
    kL.__name__ = ["lime", "app", "Future"];
    kL.__threadPool = null;
    kL.threadPool_doWork = function(q) {
        try {
            var i = q.work();
            kL.__threadPool.sendComplete({
                promise: q.promise,
                result: i
            })
        } catch (i1) {
            lF.lastException = i1;
            if (i1 instanceof nM) {
                i1 = i1.val
            }
            kL.__threadPool.sendError({
                promise: q.promise,
                error: i1
            })
        }
    };
    kL.threadPool_onComplete = function(i) {
        i.promise.complete(i.result)
    };
    kL.threadPool_onError = function(i) {
        i.promise.error(i.error)
    };
    kL.prototype = {
        isCompleted: null,
        value: null,
        __completed: null,
        __completeListeners: null,
        __errored: null,
        __errorListeners: null,
        __errorMessage: null,
        __progressListeners: null,
        onComplete: function(i) {
            if (i != null) {
                if (this.__completed) {
                    i(this.value)
                } else {
                    if (!this.__errored) {
                        if (this.__completeListeners == null) {
                            this.__completeListeners = []
                        }
                        this.__completeListeners.push(i)
                    }
                }
            }
            return this
        },
        onError: function(i) {
            if (i != null) {
                if (this.__errored) {
                    i(this.__errorMessage)
                } else {
                    if (!this.__completed) {
                        if (this.__errorListeners == null) {
                            this.__errorListeners = []
                        }
                        this.__errorListeners.push(i)
                    }
                }
            }
            return this
        },
        onProgress: function(i) {
            if (i != null) {
                if (this.__progressListeners == null) {
                    this.__progressListeners = []
                }
                this.__progressListeners.push(i)
            }
            return this
        },
        then: function(q) {
            if (this.__completed) {
                return q(this.value)
            } else {
                if (this.__errored) {
                    var i = new kL();
                    i.onError(this.__errorMessage);
                    return i
                } else {
                    var i1 = new oJ();
                    this.onError(oT(i1, i1.error));
                    this.onProgress(oT(i1, i1.progress));
                    this.onComplete(function(js) {
                        var i2 = q(js);
                        i2.onError(oT(i1, i1.error));
                        i2.onComplete(oT(i1, i1.complete))
                    });
                    return i1.future
                }
            }
        },
        get_isCompleted: function() {
            return this.__completed || this.__errored
        },
        __class__: kL,
        __properties__: {
            get_isCompleted: "get_isCompleted"
        }
    };
    var p5 = function() {
        this.total = 0;
        this.loaded = 0;
        this.onProgress = new it();
        this.onComplete = new nO();
        this.onProgress.add(oT(this, this.update))
    };
    nt["lime.app.Preloader"] = p5;
    p5.__name__ = ["lime", "app", "Preloader"];
    p5.prototype = {
        complete: null,
        onComplete: null,
        onProgress: null,
        loaded: null,
        total: null,
        create: function(i) {},
        load: function(q5, q3) {
            var i1 = null;
            var q = bY.cache.version;
            var q6 = 0;
            var q1 = q5.length;
            while (q6 < q1) {
                var q0 = q6++;
                i1 = q5[q0];
                var q4 = q3[q0];
                switch (q4) {
                    case "IMAGE":
                        if (!p5.images.exists(i1)) {
                            var js = new Image();
                            p5.images.set(i1, js);
                            js.onload = oT(this, this.image_onLoad);
                            js.src = i1 + "?" + q;
                            this.total++
                        }
                        break;
                    case "BINARY":
                        if (!p5.loaders.exists(i1)) {
                            var q7 = new gY();
                            p5.loaders.set(i1, q7);
                            this.total++
                        }
                        break;
                    case "TEXT":
                        if (!p5.loaders.exists(i1)) {
                            var qZ = new gY();
                            p5.loaders.set(i1, qZ);
                            this.total++
                        }
                        break;
                    case "FONT":
                        this.total++;
                        this.loadFont(i1);
                        break;
                    default:
                }
            }
            var q8 = p5.loaders.keys();
            while (q8.hasNext()) {
                var q2 = q8.next();
                var qY = p5.loaders.get(q2);
                var i2 = qY.load(q2 + "?" + q);
                i2.onComplete(oT(this, this.loader_onComplete))
            }
            if (this.total == 0) {
                this.start()
            }
        },
        loadFont: function(q) {
            var q0 = this;
            if (window.document.fonts && (c3 = window.document.fonts, oT(c3, c3.load))) {
                window.document.fonts.load("1em '" + q + "'").then(function(q1) {
                    q0.loaded++;
                    q0.onProgress.dispatch(q0.loaded, q0.total);
                    if (q0.loaded == q0.total) {
                        q0.start()
                    }
                })
            } else {
                var js = window.document.createElement("span");
                js.innerHTML = "giItT1WQy@!-/#";
                var i2 = js.style;
                i2.position = "absolute";
                i2.left = "-10000px";
                i2.top = "-10000px";
                i2.fontSize = "300px";
                i2.fontFamily = "sans-serif";
                i2.fontVariant = "normal";
                i2.fontStyle = "normal";
                i2.fontWeight = "normal";
                i2.letterSpacing = "0";
                window.document.body.appendChild(js);
                var i1 = js.offsetWidth;
                i2.fontFamily = "'" + q + "', sans-serif";
                var i = null;
                var qY = false;
                var qZ = function() {
                    if (js.offsetWidth != i1) {
                        if (!qY) {
                            qY = true;
                            return false
                        }
                        q0.loaded++;
                        if (i != null) {
                            window.clearInterval(i)
                        }
                        js.parentNode.removeChild(js);
                        js = null;
                        q0.onProgress.dispatch(q0.loaded, q0.total);
                        if (q0.loaded == q0.total) {
                            q0.start()
                        }
                        return true
                    }
                    return false
                };
                if (!qZ()) {
                    i = window.setInterval(qZ, 50)
                }
            }
        },
        start: function() {
            this.complete = true;
            this.onComplete.dispatch()
        },
        update: function(i, q) {},
        image_onLoad: function(i) {
            this.loaded++;
            this.onProgress.dispatch(this.loaded, this.total);
            if (this.loaded == this.total) {
                this.start()
            }
        },
        loader_onComplete: function(i) {
            this.loaded++;
            this.onProgress.dispatch(this.loaded, this.total);
            if (this.loaded == this.total) {
                this.start()
            }
        },
        __class__: p5
    };
    var oJ = function() {
        this.future = new kL()
    };
    nt["lime.app.Promise"] = oJ;
    oJ.__name__ = ["lime", "app", "Promise"];
    oJ.prototype = {
        future: null,
        isCompleted: null,
        complete: function(i1) {
            if (!this.future.__errored) {
                this.future.__completed = true;
                this.future.value = i1;
                if (this.future.__completeListeners != null) {
                    var i2 = 0;
                    var q = this.future.__completeListeners;
                    while (i2 < q.length) {
                        var i = q[i2];
                        ++i2;
                        i(i1)
                    }
                    this.future.__completeListeners = null
                }
            }
            return this
        },
        completeWith: function(i) {
            i.onComplete(oT(this, this.complete));
            i.onError(oT(this, this.error));
            i.onProgress(oT(this, this.progress));
            return this
        },
        error: function(i2) {
            if (!this.future.__completed) {
                this.future.__errored = true;
                this.future.__errorMessage = i2;
                if (this.future.__errorListeners != null) {
                    var i1 = 0;
                    var q = this.future.__errorListeners;
                    while (i1 < q.length) {
                        var i = q[i1];
                        ++i1;
                        i(i2)
                    }
                    this.future.__errorListeners = null
                }
            }
            return this
        },
        progress: function(i) {
            if (!this.future.__errored && !this.future.__completed) {
                if (this.future.__progressListeners != null) {
                    var i2 = 0;
                    var i1 = this.future.__progressListeners;
                    while (i2 < i1.length) {
                        var q = i1[i2];
                        ++i2;
                        q(i)
                    }
                }
            }
            return this
        },
        get_isCompleted: function() {
            return this.future.get_isCompleted()
        },
        __class__: oJ,
        __properties__: {
            get_isCompleted: "get_isCompleted"
        }
    };
    var F = function() {
        this.EXPONENT_DISTANCE_CLAMPED = 53254;
        this.EXPONENT_DISTANCE = 53253;
        this.LINEAR_DISTANCE_CLAMPED = 53252;
        this.LINEAR_DISTANCE = 53251;
        this.INVERSE_DISTANCE_CLAMPED = 53250;
        this.INVERSE_DISTANCE = 53249;
        this.DISTANCE_MODEL = 53248;
        this.DOPPLER_VELOCITY = 49153;
        this.SPEED_OF_SOUND = 49155;
        this.DOPPLER_FACTOR = 49152;
        this.EXTENSIONS = 45060;
        this.RENDERER = 45059;
        this.VERSION = 45058;
        this.VENDOR = 45057;
        this.OUT_OF_MEMORY = 40965;
        this.INVALID_OPERATION = 40964;
        this.INVALID_VALUE = 40963;
        this.INVALID_ENUM = 40962;
        this.INVALID_NAME = 40961;
        this.NO_ERROR = 0;
        this.SIZE = 8196;
        this.CHANNELS = 8195;
        this.BITS = 8194;
        this.FREQUENCY = 8193;
        this.FORMAT_STEREO16 = 4355;
        this.FORMAT_STEREO8 = 4354;
        this.FORMAT_MONO16 = 4353;
        this.FORMAT_MONO8 = 4352;
        this.UNDETERMINED = 4144;
        this.STREAMING = 4137;
        this.STATIC = 4136;
        this.SOURCE_TYPE = 4135;
        this.BYTE_OFFSET = 4134;
        this.SAMPLE_OFFSET = 4133;
        this.SEC_OFFSET = 4132;
        this.MAX_DISTANCE = 4131;
        this.CONE_OUTER_GAIN = 4130;
        this.ROLLOFF_FACTOR = 4129;
        this.REFERENCE_DISTANCE = 4128;
        this.BUFFERS_PROCESSED = 4118;
        this.BUFFERS_QUEUED = 4117;
        this.STOPPED = 4116;
        this.PAUSED = 4115;
        this.PLAYING = 4114;
        this.INITIAL = 4113;
        this.SOURCE_STATE = 4112;
        this.ORIENTATION = 4111;
        this.MAX_GAIN = 4110;
        this.MIN_GAIN = 4109;
        this.GAIN = 4106;
        this.BUFFER = 4105;
        this.LOOPING = 4103;
        this.VELOCITY = 4102;
        this.DIRECTION = 4101;
        this.POSITION = 4100;
        this.PITCH = 4099;
        this.CONE_OUTER_ANGLE = 4098;
        this.CONE_INNER_ANGLE = 4097;
        this.SOURCE_RELATIVE = 514;
        this.TRUE = 1;
        this.FALSE = 0;
        this.NONE = 0
    };
    nt["lime.audio.ALAudioContext"] = F;
    F.__name__ = ["lime", "audio", "ALAudioContext"];
    F.prototype = {
        NONE: null,
        FALSE: null,
        TRUE: null,
        SOURCE_RELATIVE: null,
        CONE_INNER_ANGLE: null,
        CONE_OUTER_ANGLE: null,
        PITCH: null,
        POSITION: null,
        DIRECTION: null,
        VELOCITY: null,
        LOOPING: null,
        BUFFER: null,
        GAIN: null,
        MIN_GAIN: null,
        MAX_GAIN: null,
        ORIENTATION: null,
        SOURCE_STATE: null,
        INITIAL: null,
        PLAYING: null,
        PAUSED: null,
        STOPPED: null,
        BUFFERS_QUEUED: null,
        BUFFERS_PROCESSED: null,
        REFERENCE_DISTANCE: null,
        ROLLOFF_FACTOR: null,
        CONE_OUTER_GAIN: null,
        MAX_DISTANCE: null,
        SEC_OFFSET: null,
        SAMPLE_OFFSET: null,
        BYTE_OFFSET: null,
        SOURCE_TYPE: null,
        STATIC: null,
        STREAMING: null,
        UNDETERMINED: null,
        FORMAT_MONO8: null,
        FORMAT_MONO16: null,
        FORMAT_STEREO8: null,
        FORMAT_STEREO16: null,
        FREQUENCY: null,
        BITS: null,
        CHANNELS: null,
        SIZE: null,
        NO_ERROR: null,
        INVALID_NAME: null,
        INVALID_ENUM: null,
        INVALID_VALUE: null,
        INVALID_OPERATION: null,
        OUT_OF_MEMORY: null,
        VENDOR: null,
        VERSION: null,
        RENDERER: null,
        EXTENSIONS: null,
        DOPPLER_FACTOR: null,
        SPEED_OF_SOUND: null,
        DOPPLER_VELOCITY: null,
        DISTANCE_MODEL: null,
        INVERSE_DISTANCE: null,
        INVERSE_DISTANCE_CLAMPED: null,
        LINEAR_DISTANCE: null,
        LINEAR_DISTANCE_CLAMPED: null,
        EXPONENT_DISTANCE: null,
        EXPONENT_DISTANCE_CLAMPED: null,
        bufferData: function(i, js, i1, q, i2) {
            iY.bufferData(i, js, i1, q, i2)
        },
        buffer3f: function(i1, js, i2, q, i) {
            iY.buffer3f(i1, js, i2, q, i)
        },
        buffer3i: function(i1, js, i2, q, i) {
            iY.buffer3i(i1, js, i2, q, i)
        },
        bufferf: function(i, i1, q) {
            iY.bufferf(i, i1, q)
        },
        bufferfv: function(i, i1, q) {
            iY.bufferfv(i, i1, q)
        },
        bufferi: function(i, i1, q) {
            iY.bufferi(i, i1, q)
        },
        bufferiv: function(i, i1, q) {
            iY.bufferiv(i, i1, q)
        },
        deleteBuffer: function(i) {
            iY.deleteBuffer(i)
        },
        deleteBuffers: function(i) {
            iY.deleteBuffers(i)
        },
        deleteSource: function(i) {
            iY.deleteSource(i)
        },
        deleteSources: function(i) {
            iY.deleteSources(i)
        },
        disable: function(i) {
            iY.disable(i)
        },
        distanceModel: function(i) {
            iY.distanceModel(i)
        },
        dopplerFactor: function(i) {
            iY.dopplerFactor(i)
        },
        dopplerVelocity: function(i) {
            iY.dopplerVelocity(i)
        },
        enable: function(i) {
            iY.enable(i)
        },
        genSource: function() {
            return iY.genSource()
        },
        genSources: function(i) {
            return iY.genSources(i)
        },
        genBuffer: function() {
            return iY.genBuffer()
        },
        genBuffers: function(i) {
            return iY.genBuffers(i)
        },
        getBoolean: function(i) {
            return iY.getBoolean(i)
        },
        getBooleanv: function(q, i) {
            if (i == null) {
                i = 1
            }
            return iY.getBooleanv(q, i)
        },
        getBuffer3f: function(i, q) {
            return iY.getBuffer3f(i, q)
        },
        getBuffer3i: function(i, q) {
            return iY.getBuffer3i(i, q)
        },
        getBufferf: function(i, q) {
            return iY.getBufferf(i, q)
        },
        getBufferfv: function(i, i1, q) {
            if (q == null) {
                q = 1
            }
            return iY.getBufferfv(i, i1, q)
        },
        getBufferi: function(i, q) {
            return iY.getBufferi(i, q)
        },
        getBufferiv: function(i, i1, q) {
            if (q == null) {
                q = 1
            }
            return iY.getBufferiv(i, i1, q)
        },
        getDouble: function(i) {
            return iY.getDouble(i)
        },
        getDoublev: function(q, i) {
            if (i == null) {
                i = 1
            }
            return iY.getDoublev(q, i)
        },
        getEnumValue: function(i) {
            return iY.getEnumValue(i)
        },
        getError: function() {
            return iY.getError()
        },
        getErrorString: function() {
            return iY.getErrorString()
        },
        getFloat: function(i) {
            return iY.getFloat(i)
        },
        getFloatv: function(q, i) {
            if (i == null) {
                i = 1
            }
            return iY.getFloatv(q, i)
        },
        getInteger: function(i) {
            return iY.getInteger(i)
        },
        getIntegerv: function(q, i) {
            if (i == null) {
                i = 1
            }
            return iY.getIntegerv(q, i)
        },
        getListener3f: function(i) {
            return iY.getListener3f(i)
        },
        getListener3i: function(i) {
            return iY.getListener3i(i)
        },
        getListenerf: function(i) {
            return iY.getListenerf(i)
        },
        getListenerfv: function(q, i) {
            if (i == null) {
                i = 1
            }
            return iY.getListenerfv(q, i)
        },
        getListeneri: function(i) {
            return iY.getListeneri(i)
        },
        getListeneriv: function(q, i) {
            if (i == null) {
                i = 1
            }
            return iY.getListeneriv(q, i)
        },
        getProcAddress: function(i) {
            return iY.getProcAddress(i)
        },
        getSource3f: function(i, q) {
            return iY.getSource3f(i, q)
        },
        getSourcef: function(i, q) {
            return iY.getSourcef(i, q)
        },
        getSource3i: function(i, q) {
            return iY.getSource3i(i, q)
        },
        getSourcefv: function(q, i1, i) {
            if (i == null) {
                i = 1
            }
            return iY.getSourcefv(q, i1)
        },
        getSourcei: function(i, q) {
            return iY.getSourcei(i, q)
        },
        getSourceiv: function(q, i1, i) {
            if (i == null) {
                i = 1
            }
            return iY.getSourceiv(q, i1, i)
        },
        getString: function(i) {
            return iY.getString(i)
        },
        isBuffer: function(i) {
            return iY.isBuffer(i)
        },
        isEnabled: function(i) {
            return iY.isEnabled(i)
        },
        isExtensionPresent: function(i) {
            return iY.isExtensionPresent(i)
        },
        isSource: function(i) {
            return iY.isSource(i)
        },
        listener3f: function(i2, i1, q, i) {
            iY.listener3f(i2, i1, q, i)
        },
        listener3i: function(i2, i1, q, i) {
            iY.listener3i(i2, i1, q, i)
        },
        listenerf: function(q, i) {
            iY.listenerf(q, i)
        },
        listenerfv: function(q, i) {
            iY.listenerfv(q, i)
        },
        listeneri: function(q, i) {
            iY.listeneri(q, i)
        },
        listeneriv: function(q, i) {
            iY.listeneriv(q, i)
        },
        source3f: function(i2, js, i1, q, i) {
            iY.source3f(i2, js, i1, q, i)
        },
        source3i: function(i2, js, i1, q, i) {
            iY.source3i(i2, js, i1, q, i)
        },
        sourcef: function(q, i1, i) {
            iY.sourcef(q, i1, i)
        },
        sourcefv: function(q, i1, i) {
            iY.sourcefv(q, i1, i)
        },
        sourcei: function(q, i1, i) {
            iY.sourcei(q, i1, i)
        },
        sourceiv: function(q, i1, i) {
            iY.sourceiv(q, i1, i)
        },
        sourcePlay: function(i) {
            iY.sourcePlay(i)
        },
        sourcePlayv: function(i) {
            iY.sourcePlayv(i)
        },
        sourceStop: function(i) {
            iY.sourceStop(i)
        },
        sourceStopv: function(i) {
            iY.sourceStopv(i)
        },
        sourceRewind: function(i) {
            iY.sourceRewind(i)
        },
        sourceRewindv: function(i) {
            iY.sourceRewindv(i)
        },
        sourcePause: function(i) {
            iY.sourcePause(i)
        },
        sourcePausev: function(i) {
            iY.sourcePausev(i)
        },
        sourceQueueBuffer: function(q, i) {
            iY.sourceQueueBuffer(q, i)
        },
        sourceQueueBuffers: function(i1, i, q) {
            iY.sourceQueueBuffers(i1, i, q)
        },
        sourceUnqueueBuffer: function(i) {
            return iY.sourceUnqueueBuffer(i)
        },
        sourceUnqueueBuffers: function(q, i) {
            return iY.sourceUnqueueBuffers(q, i)
        },
        speedOfSound: function(i) {
            iY.speedOfSound(i)
        },
        __class__: F
    };
    var dU = function() {
        this.ALL_DEVICES_SPECIFIER = 4115;
        this.DEFAULT_ALL_DEVICES_SPECIFIER = 4114;
        this.ENUMERATE_ALL_EXT = 1;
        this.EXTENSIONS = 4102;
        this.DEVICE_SPECIFIER = 4101;
        this.DEFAULT_DEVICE_SPECIFIER = 4100;
        this.ALL_ATTRIBUTES = 4099;
        this.ATTRIBUTES_SIZE = 4098;
        this.OUT_OF_MEMORY = 40965;
        this.INVALID_VALUE = 40964;
        this.INVALID_ENUM = 40963;
        this.INVALID_CONTEXT = 40962;
        this.INVALID_DEVICE = 40961;
        this.NO_ERROR = 0;
        this.STEREO_SOURCES = 4113;
        this.MONO_SOURCES = 4112;
        this.SYNC = 4105;
        this.REFRESH = 4104;
        this.FREQUENCY = 4103;
        this.TRUE = 1;
        this.FALSE = 0
    };
    nt["lime.audio.ALCAudioContext"] = dU;
    dU.__name__ = ["lime", "audio", "ALCAudioContext"];
    dU.prototype = {
        FALSE: null,
        TRUE: null,
        FREQUENCY: null,
        REFRESH: null,
        SYNC: null,
        MONO_SOURCES: null,
        STEREO_SOURCES: null,
        NO_ERROR: null,
        INVALID_DEVICE: null,
        INVALID_CONTEXT: null,
        INVALID_ENUM: null,
        INVALID_VALUE: null,
        OUT_OF_MEMORY: null,
        ATTRIBUTES_SIZE: null,
        ALL_ATTRIBUTES: null,
        DEFAULT_DEVICE_SPECIFIER: null,
        DEVICE_SPECIFIER: null,
        EXTENSIONS: null,
        ENUMERATE_ALL_EXT: null,
        DEFAULT_ALL_DEVICES_SPECIFIER: null,
        ALL_DEVICES_SPECIFIER: null,
        closeDevice: function(i) {
            return oB.closeDevice(i)
        },
        createContext: function(q, i) {
            return oB.createContext(q, i)
        },
        destroyContext: function(i) {
            oB.destroyContext(i)
        },
        getContextsDevice: function(i) {
            return oB.getContextsDevice(i)
        },
        getCurrentContext: function() {
            return oB.getCurrentContext()
        },
        getError: function(i) {
            return oB.getError(i)
        },
        getErrorString: function(i) {
            return oB.getErrorString(i)
        },
        getIntegerv: function(q, i1, i) {
            if (i == null) {
                i = 1
            }
            return oB.getIntegerv(q, i1, i)
        },
        getString: function(i, q) {
            return oB.getString(i, q)
        },
        makeContextCurrent: function(i) {
            return oB.makeContextCurrent(i)
        },
        openDevice: function(i) {
            return oB.openDevice(i)
        },
        processContext: function(i) {
            oB.processContext(i)
        },
        suspendContext: function(i) {
            oB.suspendContext(i)
        },
        __class__: dU
    };
    var kt = function() {
        this.id = 0
    };
    nt["lime.audio.AudioBuffer"] = kt;
    kt.__name__ = ["lime", "audio", "AudioBuffer"];
    kt.fromBytes = function(i) {
        return null
    };
    kt.fromFile = function(i) {
        return null
    };
    kt.fromURL = function(i, q) {
        if (i != null && i.indexOf("http://") == -1 && i.indexOf("https://") == -1) {
            q(kt.fromFile(i))
        } else {}
    };
    kt.prototype = {
        bitsPerSample: null,
        channels: null,
        data: null,
        id: null,
        sampleRate: null,
        src: null,
        dispose: function() {},
        __class__: kt
    };
    var eI = nt["lime.audio.AudioContext"] = {
        __ename__: ["lime", "audio", "AudioContext"],
        __constructs__: ["OPENAL", "HTML5", "WEB", "FLASH", "CUSTOM"]
    };
    eI.OPENAL = function(i, i1) {
        var q = ["OPENAL", 0, i, i1];
        q.__enum__ = eI;
        q.toString = ea;
        return q
    };
    eI.HTML5 = function(i) {
        var q = ["HTML5", 1, i];
        q.__enum__ = eI;
        q.toString = ea;
        return q
    };
    eI.WEB = function(i) {
        var q = ["WEB", 2, i];
        q.__enum__ = eI;
        q.toString = ea;
        return q
    };
    eI.FLASH = function(i) {
        var q = ["FLASH", 3, i];
        q.__enum__ = eI;
        q.toString = ea;
        return q
    };
    eI.CUSTOM = function(q) {
        var i = ["CUSTOM", 4, q];
        i.__enum__ = eI;
        i.toString = ea;
        return i
    };
    var kb = function() {};
    nt["lime.audio.AudioManager"] = kb;
    kb.__name__ = ["lime", "audio", "AudioManager"];
    kb.context = null;
    kb.init = function(i) {
        if (kb.context == null) {
            if (i == null) {
                try {
                    window.AudioContext = window.AudioContext || window.webkitAudioContext;
                    kb.context = eI.WEB(new AudioContext())
                } catch (q) {
                    lF.lastException = q;
                    if (q instanceof nM) {
                        q = q.val
                    }
                    kb.context = eI.HTML5(new aE())
                }
            } else {
                kb.context = i
            }
        }
    };
    kb.resume = function() {
        if (kb.context != null) {
            var i1 = kb.context;
            switch (i1[1]) {
                case 0:
                    var q = i1[3];
                    var i = i1[2];
                    i.processContext(i.getCurrentContext());
                    break;
                default:
            }
        }
    };
    kb.shutdown = function() {
        if (kb.context != null) {
            var js = kb.context;
            switch (js[1]) {
                case 0:
                    var i2 = js[3];
                    var q = js[2];
                    var i = q.getCurrentContext();
                    if (i != null) {
                        var i1 = q.getContextsDevice(i);
                        q.makeContextCurrent(null);
                        q.destroyContext(i);
                        q.closeDevice(i1)
                    }
                    break;
                default:
            }
        }
    };
    kb.suspend = function() {
        if (kb.context != null) {
            var i1 = kb.context;
            switch (i1[1]) {
                case 0:
                    var q = i1[3];
                    var i = i1[2];
                    i.suspendContext(i.getCurrentContext());
                    break;
                default:
            }
        }
    };
    var f5 = function(q, i2, i1, i) {
        if (i == null) {
            i = 0
        }
        if (i2 == null) {
            i2 = 0
        }
        this.onComplete = new nO();
        this.buffer = q;
        this.offset = i2;
        if (i1 != null && i1 != 0) {
            this.set_length(i1)
        }
        this.set_loops(i);
        this.id = 0;
        if (q != null) {
            this.init()
        }
    };
    nt["lime.audio.AudioSource"] = f5;
    f5.__name__ = ["lime", "audio", "AudioSource"];
    f5.prototype = {
        onComplete: null,
        buffer: null,
        offset: null,
        id: null,
        playing: null,
        pauseTime: null,
        __length: null,
        __loops: null,
        dispose: function() {
            var i1 = kb.context;
            switch (i1[1]) {
                case 0:
                    var q = i1[3];
                    var i = i1[2];
                    if (this.id != 0) {
                        q.deleteSource(this.id)
                    }
                    break;
                default:
            }
        },
        init: function() {
            var i2 = kb.context;
            switch (i2[1]) {
                case 0:
                    var i1 = i2[3];
                    var i = i2[2];
                    if (this.buffer.id == 0) {
                        this.buffer.id = i1.genBuffer();
                        var q = 0;
                        if (this.buffer.channels == 1) {
                            if (this.buffer.bitsPerSample == 8) {
                                q = i1.FORMAT_MONO8
                            } else {
                                if (this.buffer.bitsPerSample == 16) {
                                    q = i1.FORMAT_MONO16
                                }
                            }
                        } else {
                            if (this.buffer.channels == 2) {
                                if (this.buffer.bitsPerSample == 8) {
                                    q = i1.FORMAT_STEREO8
                                } else {
                                    if (this.buffer.bitsPerSample == 16) {
                                        q = i1.FORMAT_STEREO16
                                    }
                                }
                            }
                        }
                        i1.bufferData(this.buffer.id, q, this.buffer.data, this.buffer.data.length, this.buffer.sampleRate)
                    }
                    this.id = i1.genSource();
                    i1.sourcei(this.id, i1.BUFFER, this.buffer.id);
                    break;
                default:
            }
        },
        play: function() {},
        pause: function() {},
        stop: function() {},
        timer_onRun: function() {},
        get_currentTime: function() {
            return 0
        },
        set_currentTime: function(i) {
            return this.pauseTime = i
        },
        get_gain: function() {
            return 1
        },
        set_gain: function(i) {
            return 1
        },
        get_length: function() {
            if (this.__length != null) {
                return this.__length
            }
            return 0
        },
        set_length: function(i) {
            return this.__length = i
        },
        get_loops: function() {
            return this.__loops
        },
        set_loops: function(i) {
            return this.__loops = i
        },
        __class__: f5,
        __properties__: {
            set_loops: "set_loops",
            get_loops: "get_loops",
            set_length: "set_length",
            get_length: "get_length",
            set_gain: "set_gain",
            get_gain: "get_gain",
            set_currentTime: "set_currentTime",
            get_currentTime: "get_currentTime"
        }
    };
    var fC = function() {};
    nt["lime.audio.FlashAudioContext"] = fC;
    fC.__name__ = ["lime", "audio", "FlashAudioContext"];
    fC.prototype = {
        createBuffer: function(q, i) {
            return null
        },
        getBytesLoaded: function(i) {
            return 0
        },
        getBytesTotal: function(i) {
            return 0
        },
        getID3: function(i) {
            return null
        },
        getIsBuffering: function(i) {
            return false
        },
        getIsURLInaccessible: function(i) {
            return false
        },
        getLength: function(i) {
            return 0
        },
        getURL: function(i) {
            return null
        },
        close: function(i) {},
        extract: function(i, i2, i1, q) {
            if (q == null) {
                q = -1
            }
            return 0
        },
        load: function(i, i1, q) {},
        loadCompressedDataFromByteArray: function(q, i, i1) {},
        loadPCMFromByteArray: function(q, i, js, qY, i1, i2) {
            if (i2 == null) {
                i2 = 44100
            }
            if (i1 == null) {
                i1 = true
            }
        },
        play: function(i1, i2, q, i) {
            if (q == null) {
                q = 0
            }
            if (i2 == null) {
                i2 = 0
            }
            return null
        },
        __class__: fC
    };
    var aE = function() {
        this.NETWORK_NO_SOURCE = 3;
        this.NETWORK_LOADING = 2;
        this.NETWORK_IDLE = 1;
        this.NETWORK_EMPTY = 0;
        this.HAVE_NOTHING = 0;
        this.HAVE_METADATA = 1;
        this.HAVE_FUTURE_DATA = 3;
        this.HAVE_ENOUGH_DATA = 4;
        this.HAVE_CURRENT_DATA = 2
    };
    nt["lime.audio.HTML5AudioContext"] = aE;
    aE.__name__ = ["lime", "audio", "HTML5AudioContext"];
    aE.prototype = {
        HAVE_CURRENT_DATA: null,
        HAVE_ENOUGH_DATA: null,
        HAVE_FUTURE_DATA: null,
        HAVE_METADATA: null,
        HAVE_NOTHING: null,
        NETWORK_EMPTY: null,
        NETWORK_IDLE: null,
        NETWORK_LOADING: null,
        NETWORK_NO_SOURCE: null,
        canPlayType: function(i, q) {
            if (i.src != null) {
                return i.src.canPlayType(q)
            }
            return null
        },
        createBuffer: function(q) {
            var i = new kt();
            i.src = new Audio();
            i.src.src = q;
            return i
        },
        getAutoplay: function(i) {
            if (i.src != null) {
                return i.src.autoplay
            }
            return false
        },
        getBuffered: function(i) {
            if (i.src != null) {
                return i.src.buffered
            }
            return null
        },
        getCurrentSrc: function(i) {
            if (i.src != null) {
                return i.src.currentSrc
            }
            return null
        },
        getCurrentTime: function(i) {
            if (i.src != null) {
                return i.src.currentTime
            }
            return 0
        },
        getDefaultPlaybackRate: function(i) {
            if (i.src != null) {
                return i.src.defaultPlaybackRate
            }
            return 1
        },
        getDuration: function(i) {
            if (i.src != null) {
                return i.src.duration
            }
            return 0
        },
        getEnded: function(i) {
            if (i.src != null) {
                return i.src.ended
            }
            return false
        },
        getError: function(i) {
            if (i.src != null) {
                return i.src.error
            }
            return null
        },
        getLoop: function(i) {
            if (i.src != null) {
                return i.src.loop
            }
            return false
        },
        getMuted: function(i) {
            if (i.src != null) {
                return i.src.muted
            }
            return false
        },
        getNetworkState: function(i) {
            if (i.src != null) {
                return i.src.networkState
            }
            return 0
        },
        getPaused: function(i) {
            if (i.src != null) {
                return i.src.paused
            }
            return false
        },
        getPlaybackRate: function(i) {
            if (i.src != null) {
                return i.src.playbackRate
            }
            return 1
        },
        getPlayed: function(i) {
            if (i.src != null) {
                return i.src.played
            }
            return null
        },
        getPreload: function(i) {
            if (i.src != null) {
                return i.src.preload
            }
            return null
        },
        getReadyState: function(i) {
            if (i.src != null) {
                return i.src.readyState
            }
            return 0
        },
        getSeekable: function(i) {
            if (i.src != null) {
                return i.src.seekable
            }
            return null
        },
        getSeeking: function(i) {
            if (i.src != null) {
                return i.src.seeking
            }
            return false
        },
        getSrc: function(i) {
            if (i.src != null) {
                return i.src.src
            }
            return null
        },
        getStartTime: function(i) {
            if (i.src != null) {
                return i.src.playbackRate
            }
            return 0
        },
        getVolume: function(i) {
            if (i.src != null) {
                return i.src.volume
            }
            return 1
        },
        load: function(i) {
            if (i.src != null) {
                return i.src.load()
            }
        },
        pause: function(i) {
            if (i.src != null) {
                return i.src.pause()
            }
        },
        play: function(i) {
            if (i.src != null) {
                return i.src.play()
            }
        },
        setAutoplay: function(i, q) {
            if (i.src != null) {
                i.src.autoplay = q
            }
        },
        setCurrentTime: function(i, q) {
            if (i.src != null) {
                i.src.currentTime = q
            }
        },
        setDefaultPlaybackRate: function(i, q) {
            if (i.src != null) {
                i.src.defaultPlaybackRate = q
            }
        },
        setLoop: function(i, q) {
            if (i.src != null) {
                i.src.loop = q
            }
        },
        setMuted: function(i, q) {
            if (i.src != null) {
                i.src.muted = q
            }
        },
        setPlaybackRate: function(i, q) {
            if (i.src != null) {
                i.src.playbackRate = q
            }
        },
        setPreload: function(i, q) {
            if (i.src != null) {
                i.src.preload = q
            }
        },
        setSrc: function(i, q) {
            if (i.src != null) {
                i.src.src = q
            }
        },
        setVolume: function(i, q) {
            if (i.src != null) {
                i.src.volume = q
            }
        },
        __class__: aE
    };
    var iY = function() {};
    nt["lime.audio.openal.AL"] = iY;
    iY.__name__ = ["lime", "audio", "openal", "AL"];
    iY.bufferData = function(i, js, i1, q, i2) {};
    iY.buffer3f = function(i1, js, i2, q, i) {};
    iY.buffer3i = function(i1, js, i2, q, i) {};
    iY.bufferf = function(i, i1, q) {};
    iY.bufferfv = function(i, i1, q) {};
    iY.bufferi = function(i, i1, q) {};
    iY.bufferiv = function(i, i1, q) {};
    iY.deleteBuffer = function(i) {};
    iY.deleteBuffers = function(i) {};
    iY.deleteSource = function(i) {};
    iY.deleteSources = function(i) {};
    iY.disable = function(i) {};
    iY.distanceModel = function(i) {};
    iY.dopplerFactor = function(i) {};
    iY.dopplerVelocity = function(i) {};
    iY.enable = function(i) {};
    iY.genSource = function() {
        return 0
    };
    iY.genSources = function(i) {
        return null
    };
    iY.genBuffer = function() {
        return 0
    };
    iY.genBuffers = function(i) {
        return null
    };
    iY.getBoolean = function(i) {
        return false
    };
    iY.getBooleanv = function(q, i) {
        if (i == null) {
            i = 1
        }
        return null
    };
    iY.getBuffer3f = function(i, q) {
        return null
    };
    iY.getBuffer3i = function(i, q) {
        return null
    };
    iY.getBufferf = function(i, q) {
        return 0
    };
    iY.getBufferfv = function(i, i1, q) {
        if (q == null) {
            q = 1
        }
        return null
    };
    iY.getBufferi = function(i, q) {
        return 0
    };
    iY.getBufferiv = function(i, i1, q) {
        if (q == null) {
            q = 1
        }
        return null
    };
    iY.getDouble = function(i) {
        return 0
    };
    iY.getDoublev = function(q, i) {
        if (i == null) {
            i = 1
        }
        return null
    };
    iY.getEnumValue = function(i) {
        return 0
    };
    iY.getError = function() {
        return 0
    };
    iY.getErrorString = function() {
        var i = iY.getError();
        switch (i) {
            case 40961:
                return "INVALID_NAME: Invalid parameter name";
            case 40962:
                return "INVALID_ENUM: Invalid enum value";
            case 40963:
                return "INVALID_VALUE: Invalid parameter value";
            case 40964:
                return "INVALID_OPERATION: Illegal operation or call";
            case 40965:
                return "OUT_OF_MEMORY: OpenAL has run out of memory";
            default:
                return ""
        }
    };
    iY.getFloat = function(i) {
        return 0
    };
    iY.getFloatv = function(q, i) {
        if (i == null) {
            i = 1
        }
        return null
    };
    iY.getInteger = function(i) {
        return 0
    };
    iY.getIntegerv = function(q, i) {
        if (i == null) {
            i = 1
        }
        return null
    };
    iY.getListener3f = function(i) {
        return null
    };
    iY.getListener3i = function(i) {
        return null
    };
    iY.getListenerf = function(i) {
        return 0
    };
    iY.getListenerfv = function(q, i) {
        if (i == null) {
            i = 1
        }
        return null
    };
    iY.getListeneri = function(i) {
        return 0
    };
    iY.getListeneriv = function(q, i) {
        if (i == null) {
            i = 1
        }
        return null
    };
    iY.getProcAddress = function(i) {
        return null
    };
    iY.getSource3f = function(i, q) {
        return null
    };
    iY.getSourcef = function(i, q) {
        return 0
    };
    iY.getSource3i = function(i, q) {
        return null
    };
    iY.getSourcefv = function(q, i1, i) {
        if (i == null) {
            i = 1
        }
        return null
    };
    iY.getSourcei = function(i, q) {
        return 0
    };
    iY.getSourceiv = function(q, i1, i) {
        if (i == null) {
            i = 1
        }
        return null
    };
    iY.getString = function(i) {
        return null
    };
    iY.isBuffer = function(i) {
        return false
    };
    iY.isEnabled = function(i) {
        return false
    };
    iY.isExtensionPresent = function(i) {
        return false
    };
    iY.isSource = function(i) {
        return false
    };
    iY.listener3f = function(i2, i1, q, i) {};
    iY.listener3i = function(i2, i1, q, i) {};
    iY.listenerf = function(q, i) {};
    iY.listenerfv = function(q, i) {};
    iY.listeneri = function(q, i) {};
    iY.listeneriv = function(q, i) {};
    iY.source3f = function(i2, js, i1, q, i) {};
    iY.source3i = function(i2, js, i1, q, i) {};
    iY.sourcef = function(q, i1, i) {};
    iY.sourcefv = function(q, i1, i) {};
    iY.sourcei = function(q, i1, i) {};
    iY.sourceiv = function(q, i1, i) {};
    iY.sourcePlay = function(i) {};
    iY.sourcePlayv = function(i) {};
    iY.sourceStop = function(i) {};
    iY.sourceStopv = function(i) {};
    iY.sourceRewind = function(i) {};
    iY.sourceRewindv = function(i) {};
    iY.sourcePause = function(i) {};
    iY.sourcePausev = function(i) {};
    iY.sourceQueueBuffer = function(q, i) {};
    iY.sourceQueueBuffers = function(i1, i, q) {};
    iY.sourceUnqueueBuffer = function(i) {
        return 0
    };
    iY.sourceUnqueueBuffers = function(q, i) {
        return null
    };
    iY.speedOfSound = function(i) {};
    var oB = function() {};
    nt["lime.audio.openal.ALC"] = oB;
    oB.__name__ = ["lime", "audio", "openal", "ALC"];
    oB.closeDevice = function(i) {
        return false
    };
    oB.createContext = function(q, i) {
        return null
    };
    oB.destroyContext = function(i) {};
    oB.getContextsDevice = function(i) {
        return null
    };
    oB.getCurrentContext = function() {
        return null
    };
    oB.getError = function(i) {
        return 0
    };
    oB.getErrorString = function(i) {
        var q = oB.getError(i);
        switch (q) {
            case 40961:
                return "INVALID_DEVICE: Invalid device (or no device?)";
            case 40962:
                return "INVALID_CONTEXT: Invalid context (or no context?)";
            case 40963:
                return "INVALID_ENUM: Invalid enum value";
            case 40964:
                return "INVALID_VALUE: Invalid param value";
            case 40965:
                return "OUT_OF_MEMORY: OpenAL has run out of memory";
            default:
                return ""
        }
    };
    oB.getIntegerv = function(q, i1, i) {
        return null
    };
    oB.getString = function(i, q) {
        return null
    };
    oB.makeContextCurrent = function(i) {
        return false
    };
    oB.openDevice = function(i) {
        return null
    };
    oB.processContext = function(i) {};
    oB.suspendContext = function(i) {};
    var a6 = {};
    nt["lime.audio.openal._ALContext.ALContext_Impl_"] = a6;
    a6.__name__ = ["lime", "audio", "openal", "_ALContext", "ALContext_Impl_"];
    a6._new = function(i) {
        return i
    };
    var iW = {};
    nt["lime.audio.openal._ALDevice.ALDevice_Impl_"] = iW;
    iW.__name__ = ["lime", "audio", "openal", "_ALDevice", "ALDevice_Impl_"];
    iW._new = function(i) {
        return i
    };
    var cT = function() {};
    nt["lime.graphics.ConsoleRenderContext"] = cT;
    cT.__name__ = ["lime", "graphics", "ConsoleRenderContext"];
    cT.prototype = {
        createIndexBuffer: function(q, i) {
            return new eb()
        },
        createVertexBuffer: function(i, q) {
            return new w()
        },
        lookupShader: function(i) {
            return new hz()
        },
        clear: function(js, i2, i, q, qY, i1) {
            if (i1 == null) {
                i1 = 0
            }
            if (qY == null) {
                qY = 1
            }
        },
        bindShader: function(i) {},
        setViewport: function(q, qY, i2, i, i1, js) {
            if (js == null) {
                js = 1
            }
            if (i1 == null) {
                i1 = 0
            }
        },
        setVertexShaderConstantF: function(i1, i, q) {},
        setVertexSource: function(i) {},
        setIndexSource: function(i) {},
        draw: function(i, i1, q) {},
        drawIndexed: function(i, q, i2, i1) {},
        get_width: function() {
            return 0
        },
        get_height: function() {
            return 0
        },
        __class__: cT,
        __properties__: {
            get_height: "get_height",
            get_width: "get_width"
        }
    };
    var pv = function() {};
    nt["lime.graphics.FlashRenderContext"] = pv;
    pv.__name__ = ["lime", "graphics", "FlashRenderContext"];
    pv.prototype = {
        accessibilityImplementation: null,
        accessibilityProperties: null,
        alpha: null,
        blendMode: null,
        blendShader: null,
        buttonMode: null,
        cacheAsBitmap: null,
        contextMenu: null,
        doubleClickEnabled: null,
        dropTarget: null,
        filters: null,
        focusRect: null,
        graphics: null,
        height: null,
        hitArea: null,
        loaderInfo: null,
        mask: null,
        mouseChildren: null,
        mouseEnabled: null,
        mouseX: null,
        mouseY: null,
        name: null,
        needsSoftKeyboard: null,
        numChildren: null,
        opaqueBackground: null,
        parent: null,
        root: null,
        rotation: null,
        rotationX: null,
        rotationY: null,
        rotationZ: null,
        scale9Grid: null,
        scaleX: null,
        scaleY: null,
        scaleZ: null,
        scrollRect: null,
        softKeyboardInputAreaOfInterest: null,
        soundTransform: null,
        stage: null,
        tabChildren: null,
        tabEnabled: null,
        tabIndex: null,
        textSnapshot: null,
        transform: null,
        useHandCursor: null,
        visible: null,
        width: null,
        x: null,
        y: null,
        z: null,
        addChild: function(i) {
            return null
        },
        addChildAt: function(q, i) {
            return null
        },
        addEventListener: function(i1, js, i, q, i2) {
            if (i2 == null) {
                i2 = false
            }
            if (q == null) {
                q = 0
            }
            if (i == null) {
                i = false
            }
        },
        areInaccessibleObjectsUnderPoint: function(i) {
            return false
        },
        contains: function(i) {
            return false
        },
        dispatchEvent: function(i) {
            return false
        },
        getBounds: function(i) {
            return null
        },
        getChildAt: function(i) {
            return null
        },
        getChildByName: function(i) {
            return null
        },
        getChildIndex: function(i) {
            return 0
        },
        getObjectsUnderPoint: function(i) {
            return null
        },
        getRect: function(i) {
            return null
        },
        globalToLocal: function(i) {
            return null
        },
        globalToLocal3D: function(i) {
            return null
        },
        hasEventListener: function(i) {
            return false
        },
        hitTestObject: function(i) {
            return false
        },
        hitTestPoint: function(i, i1, q) {
            if (q == null) {
                q = false
            }
            return false
        },
        local3DToGlobal: function(i) {
            return null
        },
        localToGlobal: function(i) {
            return null
        },
        removeChild: function(i) {
            return null
        },
        removeChildAt: function(i) {
            return null
        },
        removeChildren: function(i, q) {
            if (q == null) {
                q = 2147483647
            }
            if (i == null) {
                i = 0
            }
        },
        removeEventListener: function(q, i1, i) {
            if (i == null) {
                i = false
            }
        },
        requestSoftKeyboard: function() {
            return false
        },
        setChildIndex: function(q, i) {},
        startDrag: function(i, q) {
            if (i == null) {
                i = false
            }
        },
        startTouchDrag: function(i1, i, q) {
            if (i == null) {
                i = false
            }
        },
        stopAllMovieClips: function() {},
        stopDrag: function() {},
        stopTouchDrag: function(i) {},
        swapChildren: function(q, i) {},
        swapChildrenAt: function(q, i) {},
        toString: function() {
            return null
        },
        willTrigger: function(i) {
            return false
        },
        __class__: pv
    };
    var nv = function(i1, qY, i2, i, q1, q, q0) {
        if (q1 == null) {
            q1 = -1
        }
        if (i == null) {
            i = -1
        }
        if (i2 == null) {
            i2 = 0
        }
        if (qY == null) {
            qY = 0
        }
        this.offsetX = qY;
        this.offsetY = i2;
        this.width = i;
        this.height = q1;
        if (q0 == null) {
            if (dE.current != null && dE.current.renderers[0] != null) {
                var js = dE.current.renderers[0].context;
                switch (js[1]) {
                    case 2:
                    case 1:
                        this.type = fY.CANVAS;
                        break;
                    case 3:
                        this.type = fY.FLASH;
                        break;
                    default:
                        this.type = fY.DATA
                }
            } else {
                this.type = fY.DATA
            }
        } else {
            this.type = q0
        }
        if (i1 == null) {
            if (i > 0 && q1 > 0) {
                var qZ = this.type;
                switch (qZ[1]) {
                    case 0:
                        this.buffer = new oG(null, i, q1);
                        x.createCanvas(this, i, q1);
                        if (q != null) {
                            this.fillRect(new lj(0, 0, i, q1), q)
                        }
                        break;
                    case 1:
                        this.buffer = new oG((function(q5) {
                            var q3;
                            var q4 = i * q1 * 4;
                            var q2;
                            if (q4 != null) {
                                q2 = new qw(q4)
                            } else {
                                q2 = null
                            }
                            q3 = q2;
                            return q3
                        }(this)), i, q1);
                        if (q != null) {
                            this.fillRect(new lj(0, 0, i, q1), q)
                        }
                        break;
                    case 2:
                        break;
                    default:
                }
            }
        } else {
            this.__fromImageBuffer(i1)
        }
    };
    nt["lime.graphics.Image"] = nv;
    nv.__name__ = ["lime", "graphics", "Image"];
    nv.__base64Encoder = null;
    nv.fromBase64 = function(i, q, i2) {
        if (i == null) {
            return null
        }
        var i1 = new nv();
        i1.__fromBase64(i, q, i2);
        return i1
    };
    nv.fromBitmapData = function(i) {
        if (i == null) {
            return null
        }
        return i.image
    };
    nv.fromBytes = function(i, i1) {
        if (i == null) {
            return null
        }
        var q = new nv();
        q.__fromBytes(i, i1);
        return q
    };
    nv.fromCanvas = function(q) {
        if (q == null) {
            return null
        }
        var i = new oG(null, q.width, q.height);
        i.set_src(q);
        return new nv(i)
    };
    nv.fromFile = function(i2, i1, i) {
        var q = new nv();
        q.__fromFile(i2, i1, i);
        return q
    };
    nv.fromImageElement = function(q) {
        if (q == null) {
            return null
        }
        var i = new oG(null, q.width, q.height);
        i.set_src(q);
        return new nv(i)
    };
    nv.__base64Encode = function(i) {
        var i1;
        var q = i.length % 3;
        switch (q) {
            case 1:
                i1 = "==";
                break;
            case 2:
                i1 = "=";
                break;
            default:
                i1 = ""
        }
        if (nv.__base64Encoder == null) {
            nv.__base64Encoder = new ha(eg.ofString(nv.__base64Chars))
        }
        return nv.__base64Encoder.encodeBytes(i).toString() + i1
    };
    nv.__isJPG = function(i) {
        return i.b[0] == 255 && i.b[1] == 216
    };
    nv.__isPNG = function(i) {
        return i.b[0] == 137 && i.b[1] == 80 && i.b[2] == 78 && i.b[3] == 71 && i.b[4] == 13 && i.b[5] == 10 && i.b[6] == 26 && i.b[7] == 10
    };
    nv.__isGIF = function(q) {
        if (q.b[0] == 71 && q.b[1] == 73 && q.b[2] == 70 && q.b[3] == 56) {
            var i = q.b[4];
            return (i == 55 || i == 57) && q.b[5] == 97
        }
        return false
    };
    nv.prototype = {
        buffer: null,
        dirty: null,
        height: null,
        offsetX: null,
        offsetY: null,
        rect: null,
        type: null,
        width: null,
        x: null,
        y: null,
        clone: function() {
            if (this.buffer != null) {
                if (this.type == fY.CANVAS && this.buffer.__srcImage == null) {
                    x.convertToCanvas(this);
                    x.sync(this, true)
                }
                var i = new nv(this.buffer.clone(), this.offsetX, this.offsetY, this.width, this.height, null, this.type);
                i.dirty = this.dirty;
                return i
            } else {
                return new nv(null, this.offsetX, this.offsetY, this.width, this.height, null, this.type)
            }
        },
        colorTransform: function(q, i) {
            q = this.__clipRect(q);
            if (this.buffer == null || q == null) {
                return
            }
            var i1 = this.type;
            switch (i1[1]) {
                case 0:
                    x.colorTransform(this, q, i);
                    break;
                case 1:
                    x.convertToData(this);
                    iv.colorTransform(this, q, i);
                    break;
                case 2:
                    q.offset(this.offsetX, this.offsetY);
                    this.buffer.__srcBitmapData.colorTransform(q.__toFlashRectangle(), qQ.__toFlashColorTransform(i));
                    break;
                default:
            }
        },
        copyChannel: function(js, i2, i, i1, q0) {
            i2 = this.__clipRect(i2);
            if (this.buffer == null || i2 == null) {
                return
            }
            if (q0 == dn.ALPHA && !this.get_transparent()) {
                return
            }
            if (i2.width <= 0 || i2.height <= 0) {
                return
            }
            if (i2.x + i2.width > js.width) {
                i2.width = js.width - i2.x
            }
            if (i2.y + i2.height > js.height) {
                i2.height = js.height - i2.y
            }
            var qZ = this.type;
            switch (qZ[1]) {
                case 0:
                    x.copyChannel(this, js, i2, i, i1, q0);
                    break;
                case 1:
                    x.convertToData(this);
                    iv.copyChannel(this, js, i2, i, i1, q0);
                    break;
                case 2:
                    var q;
                    switch (i1[1]) {
                        case 0:
                            q = 1;
                            break;
                        case 1:
                            q = 2;
                            break;
                        case 2:
                            q = 4;
                            break;
                        case 3:
                            q = 8;
                            break
                    }
                    var qY;
                    switch (q0[1]) {
                        case 0:
                            qY = 1;
                            break;
                        case 1:
                            qY = 2;
                            break;
                        case 2:
                            qY = 4;
                            break;
                        case 3:
                            qY = 8;
                            break
                    }
                    i2.offset(js.offsetX, js.offsetY);
                    i.offset(this.offsetX, this.offsetY);
                    this.buffer.__srcBitmapData.copyChannel(js.buffer.get_src(), i2.__toFlashRectangle(), i.__toFlashPoint(), q, qY);
                    break;
                default:
            }
        },
        copyPixels: function(js, i2, q, i, i1, qY) {
            if (qY == null) {
                qY = false
            }
            if (this.buffer == null || js == null) {
                return
            }
            if (i2.width <= 0 || i2.height <= 0) {
                return
            }
            if (this.width <= 0 || this.height <= 0) {
                return
            }
            if (i2.x + i2.width > js.width) {
                i2.width = js.width - i2.x
            }
            if (i2.y + i2.height > js.height) {
                i2.height = js.height - i2.y
            }
            if (i2.x < 0) {
                i2.width += i2.x;
                i2.x = 0
            }
            if (i2.y < 0) {
                i2.height += i2.y;
                i2.y = 0
            }
            if (q.x + i2.width > this.width) {
                i2.width = this.width - q.x
            }
            if (q.y + i2.height > this.height) {
                i2.height = this.height - q.y
            }
            if (q.x < 0) {
                i2.width += q.x;
                i2.x = -q.x;
                q.x = 0
            }
            if (q.y < 0) {
                i2.height += q.y;
                i2.y = -q.y;
                q.y = 0
            }
            var qZ = this.type;
            switch (qZ[1]) {
                case 0:
                    x.convertToCanvas(this);
                    x.copyPixels(this, js, i2, q, i, i1, qY);
                    break;
                case 1:
                    x.convertToData(this);
                    x.convertToData(js);
                    iv.copyPixels(this, js, i2, q, i, i1, qY);
                    break;
                case 2:
                    i2.offset(js.offsetX, js.offsetY);
                    q.offset(this.offsetX, this.offsetY);
                    if (i != null && i1 != null) {
                        i1.offset(i.offsetX, i.offsetY)
                    }
                    this.buffer.__srcBitmapData.copyPixels(js.buffer.__srcBitmapData, i2.__toFlashRectangle(), q.__toFlashPoint(), i != null ? i.buffer.get_src() : null, i1 != null ? i1.__toFlashPoint() : null, qY);
                    break;
                default:
            }
        },
        encode: function(i, q) {
            if (q == null) {
                q = 90
            }
            if (i == null) {
                i = "png"
            }
            switch (i) {
                case "png":
                    return np.encode(this);
                case "jpg":
                case "jpeg":
                    return a3.encode(this, q);
                case "bmp":
                    return jx.encode(this);
                default:
            }
            return null
        },
        fillRect: function(qY, q, qZ) {
            qY = this.__clipRect(qY);
            if (this.buffer == null || qY == null) {
                return
            }
            var i2 = this.type;
            switch (i2[1]) {
                case 0:
                    x.fillRect(this, qY, q, qZ);
                    break;
                case 1:
                    x.convertToData(this);
                    if (this.buffer.data.length == 0) {
                        return
                    }
                    iv.fillRect(this, qY, q, qZ);
                    break;
                case 2:
                    qY.offset(this.offsetX, this.offsetY);
                    var i1;
                    if (qZ != null) {
                        switch (qZ) {
                            case 1:
                                i1 = q;
                                break;
                            case 2:
                                var q2 = q;
                                var q3 = 0;
                                q3 = (q2 & 255 & 255) << 24 | (q2 >> 8 & 255 & 255) << 16 | (q2 >> 16 & 255 & 255) << 8 | q2 >> 24 & 255 & 255;
                                i1 = q3;
                                break;
                            default:
                                var i = q;
                                var q1 = 0;
                                q1 = (i & 255 & 255) << 24 | (i >> 24 & 255 & 255) << 16 | (i >> 16 & 255 & 255) << 8 | i >> 8 & 255 & 255;
                                i1 = q1
                        }
                    } else {
                        var js = q;
                        var q0 = 0;
                        q0 = (js & 255 & 255) << 24 | (js >> 24 & 255 & 255) << 16 | (js >> 16 & 255 & 255) << 8 | js >> 8 & 255 & 255;
                        i1 = q0
                    }
                    this.buffer.__srcBitmapData.fillRect(qY.__toFlashRectangle(), i1);
                    break;
                default:
            }
        },
        floodFill: function(qZ, qY, q, q0) {
            if (this.buffer == null) {
                return
            }
            var i2 = this.type;
            switch (i2[1]) {
                case 0:
                    x.floodFill(this, qZ, qY, q, q0);
                    break;
                case 1:
                    x.convertToData(this);
                    iv.floodFill(this, qZ, qY, q, q0);
                    break;
                case 2:
                    var i1;
                    if (q0 != null) {
                        switch (q0) {
                            case 1:
                                i1 = q;
                                break;
                            case 2:
                                var q3 = q;
                                var q4 = 0;
                                q4 = (q3 & 255 & 255) << 24 | (q3 >> 8 & 255 & 255) << 16 | (q3 >> 16 & 255 & 255) << 8 | q3 >> 24 & 255 & 255;
                                i1 = q4;
                                break;
                            default:
                                var i = q;
                                var q2 = 0;
                                q2 = (i & 255 & 255) << 24 | (i >> 24 & 255 & 255) << 16 | (i >> 16 & 255 & 255) << 8 | i >> 8 & 255 & 255;
                                i1 = q2
                        }
                    } else {
                        var js = q;
                        var q1 = 0;
                        q1 = (js & 255 & 255) << 24 | (js >> 24 & 255 & 255) << 16 | (js >> 16 & 255 & 255) << 8 | js >> 8 & 255 & 255;
                        i1 = q1
                    }
                    this.buffer.__srcBitmapData.floodFill(qZ + this.offsetX, qY + this.offsetY, i1);
                    break;
                default:
            }
        },
        getColorBoundsRect: function(i, i1, q, js) {
            if (q == null) {
                q = true
            }
            if (this.buffer == null) {
                return null
            }
            var qY = this.type;
            switch (qY[1]) {
                case 0:
                    x.convertToData(this);
                    return iv.getColorBoundsRect(this, i, i1, q, js);
                case 1:
                    return iv.getColorBoundsRect(this, i, i1, q, js);
                case 2:
                    var i2 = this.buffer.__srcBitmapData.getColorBoundsRect(i, i1, q);
                    return new lj(i2.x, i2.y, i2.width, i2.height);
                default:
                    return null
            }
        },
        getPixel: function(q1, q0, q2) {
            if (this.buffer == null || q1 < 0 || q0 < 0 || q1 >= this.width || q0 >= this.height) {
                return 0
            }
            var i1 = this.type;
            switch (i1[1]) {
                case 0:
                    return x.getPixel(this, q1, q0, q2);
                case 1:
                    x.convertToData(this);
                    return iv.getPixel(this, q1, q0, q2);
                case 2:
                    var q = this.buffer.__srcBitmapData.getPixel(q1 + this.offsetX, q0 + this.offsetY);
                    if (q2 != null) {
                        switch (q2) {
                            case 1:
                                return q;
                            case 2:
                                var q3;
                                var i2 = 0;
                                i2 = (q & 255 & 255) << 24 | (q >> 8 & 255 & 255) << 16 | (q >> 16 & 255 & 255) << 8 | q >> 24 & 255 & 255;
                                q3 = i2;
                                return q3;
                            default:
                                var i;
                                var qZ = 0;
                                qZ = (q >> 16 & 255 & 255) << 24 | (q >> 8 & 255 & 255) << 16 | (q & 255 & 255) << 8 | q >> 24 & 255 & 255;
                                i = qZ;
                                return i
                        }
                    } else {
                        var qY;
                        var js = 0;
                        js = (q >> 16 & 255 & 255) << 24 | (q >> 8 & 255 & 255) << 16 | (q & 255 & 255) << 8 | q >> 24 & 255 & 255;
                        qY = js;
                        return qY
                    }
                    break;
                default:
                    return 0
            }
        },
        getPixel32: function(q1, q0, q2) {
            if (this.buffer == null || q1 < 0 || q0 < 0 || q1 >= this.width || q0 >= this.height) {
                return 0
            }
            var i1 = this.type;
            switch (i1[1]) {
                case 0:
                    return x.getPixel32(this, q1, q0, q2);
                case 1:
                    x.convertToData(this);
                    return iv.getPixel32(this, q1, q0, q2);
                case 2:
                    var q = this.buffer.__srcBitmapData.getPixel32(q1 + this.offsetX, q0 + this.offsetY);
                    if (q2 != null) {
                        switch (q2) {
                            case 1:
                                return q;
                            case 2:
                                var q3;
                                var i2 = 0;
                                i2 = (q & 255 & 255) << 24 | (q >> 8 & 255 & 255) << 16 | (q >> 16 & 255 & 255) << 8 | q >> 24 & 255 & 255;
                                q3 = i2;
                                return q3;
                            default:
                                var i;
                                var qZ = 0;
                                qZ = (q >> 16 & 255 & 255) << 24 | (q >> 8 & 255 & 255) << 16 | (q & 255 & 255) << 8 | q >> 24 & 255 & 255;
                                i = qZ;
                                return i
                        }
                    } else {
                        var qY;
                        var js = 0;
                        js = (q >> 16 & 255 & 255) << 24 | (q >> 8 & 255 & 255) << 16 | (q & 255 & 255) << 8 | q >> 24 & 255 & 255;
                        qY = js;
                        return qY
                    }
                    break;
                default:
                    return 0
            }
        },
        getPixels: function(i, q) {
            if (this.buffer == null) {
                return null
            }
            var i1 = this.type;
            switch (i1[1]) {
                case 0:
                    return x.getPixels(this, i, q);
                case 1:
                    x.convertToData(this);
                    return iv.getPixels(this, i, q);
                case 2:
                    return null;
                default:
                    return null
            }
        },
        merge: function(i2, i1, i, q, q0, qY, qZ) {
            if (this.buffer == null || i2 == null) {
                return
            }
            var js = this.type;
            switch (js[1]) {
                case 0:
                    x.convertToCanvas(this);
                    x.merge(this, i2, i1, i, q, q0, qY, qZ);
                    break;
                case 1:
                    x.convertToData(this);
                    x.convertToData(i2);
                    iv.merge(this, i2, i1, i, q, q0, qY, qZ);
                    break;
                case 2:
                    i1.offset(this.offsetX, this.offsetY);
                    this.buffer.__srcBitmapData.merge(i2.buffer.__srcBitmapData, i1.__toFlashRectangle(), i.__toFlashPoint(), q, q0, qY, qZ);
                    break;
                default:
                    return null
            }
        },
        resize: function(q, i) {
            var i1 = this.type;
            switch (i1[1]) {
                case 0:
                    x.resize(this, q, i);
                    break;
                case 1:
                    iv.resize(this, q, i);
                    break;
                case 2:
                    break;
                default:
            }
            this.buffer.width = q;
            this.buffer.height = i;
            this.offsetX = 0;
            this.offsetY = 0;
            this.width = q;
            this.height = i
        },
        scroll: function(i, i1) {
            if (this.buffer == null) {
                return
            }
            var q = this.type;
            switch (q[1]) {
                case 0:
                    x.scroll(this, i, i1);
                    break;
                case 1:
                    this.copyPixels(this, this.get_rect(), new eD(i, i1));
                    break;
                case 2:
                    this.buffer.__srcBitmapData.scroll(i + this.offsetX, i1 + this.offsetX);
                    break;
                default:
            }
        },
        setPixel: function(qZ, qY, q, q0) {
            if (this.buffer == null || qZ < 0 || qY < 0 || qZ >= this.width || qY >= this.height) {
                return
            }
            var i2 = this.type;
            switch (i2[1]) {
                case 0:
                    x.setPixel(this, qZ, qY, q, q0);
                    break;
                case 1:
                    x.convertToData(this);
                    iv.setPixel(this, qZ, qY, q, q0);
                    break;
                case 2:
                    var i1;
                    if (q0 != null) {
                        switch (q0) {
                            case 1:
                                i1 = q;
                                break;
                            case 2:
                                var q3 = q;
                                var q4 = 0;
                                q4 = (q3 & 255 & 255) << 24 | (q3 >> 8 & 255 & 255) << 16 | (q3 >> 16 & 255 & 255) << 8 | q3 >> 24 & 255 & 255;
                                i1 = q4;
                                break;
                            default:
                                var i = q;
                                var q2 = 0;
                                q2 = (i & 255 & 255) << 24 | (i >> 24 & 255 & 255) << 16 | (i >> 16 & 255 & 255) << 8 | i >> 8 & 255 & 255;
                                i1 = q2
                        }
                    } else {
                        var js = q;
                        var q1 = 0;
                        q1 = (js & 255 & 255) << 24 | (js >> 24 & 255 & 255) << 16 | (js >> 16 & 255 & 255) << 8 | js >> 8 & 255 & 255;
                        i1 = q1
                    }
                    this.buffer.__srcBitmapData.setPixel(qZ + this.offsetX, qY + this.offsetX, i1);
                    break;
                default:
            }
        },
        setPixel32: function(qZ, qY, q, q0) {
            if (this.buffer == null || qZ < 0 || qY < 0 || qZ >= this.width || qY >= this.height) {
                return
            }
            var i2 = this.type;
            switch (i2[1]) {
                case 0:
                    x.setPixel32(this, qZ, qY, q, q0);
                    break;
                case 1:
                    x.convertToData(this);
                    iv.setPixel32(this, qZ, qY, q, q0);
                    break;
                case 2:
                    var i1;
                    if (q0 != null) {
                        switch (q0) {
                            case 1:
                                i1 = q;
                                break;
                            case 2:
                                var q3 = q;
                                var q4 = 0;
                                q4 = (q3 & 255 & 255) << 24 | (q3 >> 8 & 255 & 255) << 16 | (q3 >> 16 & 255 & 255) << 8 | q3 >> 24 & 255 & 255;
                                i1 = q4;
                                break;
                            default:
                                var i = q;
                                var q2 = 0;
                                q2 = (i & 255 & 255) << 24 | (i >> 24 & 255 & 255) << 16 | (i >> 16 & 255 & 255) << 8 | i >> 8 & 255 & 255;
                                i1 = q2
                        }
                    } else {
                        var js = q;
                        var q1 = 0;
                        q1 = (js & 255 & 255) << 24 | (js >> 24 & 255 & 255) << 16 | (js >> 16 & 255 & 255) << 8 | js >> 8 & 255 & 255;
                        i1 = q1
                    }
                    this.buffer.__srcBitmapData.setPixel32(qZ + this.offsetX, qY + this.offsetY, i1);
                    break;
                default:
            }
        },
        setPixels: function(q, i, i1) {
            q = this.__clipRect(q);
            if (this.buffer == null || q == null) {
                return
            }
            var i2 = this.type;
            switch (i2[1]) {
                case 0:
                    x.setPixels(this, q, i, i1);
                    break;
                case 1:
                    x.convertToData(this);
                    iv.setPixels(this, q, i, i1);
                    break;
                case 2:
                    break;
                default:
            }
        },
        threshold: function(q8, q1, q5, q7, q0, ra, rb, js, rc) {
            if (js == null) {
                js = false
            }
            if (rb == null) {
                rb = -1
            }
            if (ra == null) {
                ra = 0
            }
            if (this.buffer == null || q8 == null || q1 == null) {
                return 0
            }
            var qZ = this.type;
            switch (qZ[1]) {
                case 0:
                case 1:
                    x.convertToData(this);
                    return iv.threshold(this, q8, q1, q5, q7, q0, ra, rb, js, rc);
                case 2:
                    var q3;
                    if (rc != null) {
                        switch (rc) {
                            case 1:
                                q3 = ra;
                                break;
                            case 2:
                                var q4 = ra;
                                var q9 = 0;
                                q9 = (q4 & 255 & 255) << 24 | (q4 >> 8 & 255 & 255) << 16 | (q4 >> 16 & 255 & 255) << 8 | q4 >> 24 & 255 & 255;
                                q3 = q9;
                                break;
                            default:
                                var q2 = ra;
                                var qY = 0;
                                qY = (q2 & 255 & 255) << 24 | (q2 >> 24 & 255 & 255) << 16 | (q2 >> 16 & 255 & 255) << 8 | q2 >> 8 & 255 & 255;
                                q3 = qY
                        }
                    } else {
                        var rg = ra;
                        var i2 = 0;
                        i2 = (rg & 255 & 255) << 24 | (rg >> 24 & 255 & 255) << 16 | (rg >> 16 & 255 & 255) << 8 | rg >> 8 & 255 & 255;
                        q3 = i2
                    }
                    var q6;
                    if (rc != null) {
                        switch (rc) {
                            case 1:
                                q6 = rb;
                                break;
                            case 2:
                                var rf = rb;
                                var i1 = 0;
                                i1 = (rf & 255 & 255) << 24 | (rf >> 8 & 255 & 255) << 16 | (rf >> 16 & 255 & 255) << 8 | rf >> 24 & 255 & 255;
                                q6 = i1;
                                break;
                            default:
                                var re = rb;
                                var q = 0;
                                q = (re & 255 & 255) << 24 | (re >> 24 & 255 & 255) << 16 | (re >> 16 & 255 & 255) << 8 | re >> 8 & 255 & 255;
                                q6 = q
                        }
                    } else {
                        var rd = rb;
                        var i = 0;
                        i = (rd & 255 & 255) << 24 | (rd >> 24 & 255 & 255) << 16 | (rd >> 16 & 255 & 255) << 8 | rd >> 8 & 255 & 255;
                        q6 = i
                    }
                    q1.offset(q8.offsetX, q8.offsetY);
                    q5.offset(this.offsetX, this.offsetY);
                    return this.buffer.__srcBitmapData.threshold(q8.buffer.get_src(), q1.__toFlashRectangle(), q5.__toFlashPoint(), q7, q0, q3, q6, js);
                default:
            }
            return 0
        },
        __clipRect: function(i) {
            if (i == null) {
                return null
            }
            if (i.x < 0) {
                i.width -= -i.x;
                i.x = 0;
                if (i.x + i.width <= 0) {
                    return null
                }
            }
            if (i.y < 0) {
                i.height -= -i.y;
                i.y = 0;
                if (i.y + i.height <= 0) {
                    return null
                }
            }
            if (i.x + i.width >= this.width) {
                i.width -= i.x + i.width - this.width;
                if (i.width <= 0) {
                    return null
                }
            }
            if (i.y + i.height >= this.height) {
                i.height -= i.y + i.height - this.height;
                if (i.height <= 0) {
                    return null
                }
            }
            return i
        },
        __fromBase64: function(i, q, i2) {
            var qY = this;
            var i1 = new Image();
            i1.crossOrigin = "Anonymous";
            var js = function(qZ) {
                qY.buffer = new oG(null, i1.width, i1.height);
                qY.buffer.__srcImage = i1;
                qY.offsetX = 0;
                qY.offsetY = 0;
                qY.width = qY.buffer.width;
                qY.height = qY.buffer.height;
                if (i2 != null) {
                    i2(qY)
                }
            };
            i1.addEventListener("load", js, false);
            i1.src = "data:" + q + ";base64," + i
        },
        __fromBytes: function(i, i1) {
            var q = "";
            if (nv.__isPNG(i)) {
                q = "image/png"
            } else {
                if (nv.__isJPG(i)) {
                    q = "image/jpeg"
                } else {
                    if (nv.__isGIF(i)) {
                        q = "image/gif"
                    } else {
                        throw new nM("Image tried to read PNG/JPG Bytes, but found an invalid header.")
                    }
                }
            }
            this.__fromBase64(nv.__base64Encode(i), q, i1)
        },
        __fromFile: function(i2, i1, i) {
            var js = this;
            var q = new Image();
            q.crossOrigin = "Anonymous";
            q.onload = function(qY) {
                js.buffer = new oG(null, q.width, q.height);
                js.buffer.__srcImage = q;
                js.width = q.width;
                js.height = q.height;
                if (i1 != null) {
                    i1(js)
                }
            };
            q.onerror = function(qY) {
                if (i != null) {
                    i()
                }
            };
            q.src = i2;
            if (q.complete) {}
        },
        __fromImageBuffer: function(i) {
            this.buffer = i;
            if (i != null) {
                if (this.width == -1) {
                    this.width = i.width
                }
                if (this.height == -1) {
                    this.height = i.height
                }
            }
        },
        get_data: function() {
            if (this.buffer.data == null && this.buffer.width > 0 && this.buffer.height > 0) {
                x.convertToCanvas(this);
                x.sync(this, false);
                x.createImageData(this)
            }
            return this.buffer.data
        },
        set_data: function(i) {
            return this.buffer.data = i
        },
        get_format: function() {
            return this.buffer.format
        },
        set_format: function(i) {
            if (this.buffer.format != i) {
                var q = this.type;
                switch (q[1]) {
                    case 1:
                        iv.setFormat(this, i);
                        break;
                    default:
                }
            }
            return this.buffer.format = i
        },
        get_powerOfTwo: function() {
            return this.buffer.width != 0 && (this.buffer.width & ~this.buffer.width + 1) == this.buffer.width && (this.buffer.height != 0 && (this.buffer.height & ~this.buffer.height + 1) == this.buffer.height)
        },
        set_powerOfTwo: function(i1) {
            if (i1 != this.get_powerOfTwo()) {
                var q = 1;
                var i = 1;
                while (q < this.buffer.width) {
                    q <<= 1
                }
                while (i < this.buffer.height) {
                    i <<= 1
                }
                var i2 = this.type;
                switch (i2[1]) {
                    case 0:
                        break;
                    case 1:
                        iv.resizeBuffer(this, q, i);
                        break;
                    case 2:
                        break;
                    default:
                }
            }
            return i1
        },
        get_premultiplied: function() {
            return this.buffer.premultiplied
        },
        set_premultiplied: function(q) {
            if (q && !this.buffer.premultiplied) {
                var i1 = this.type;
                switch (i1[1]) {
                    case 1:
                        x.convertToData(this);
                        iv.multiplyAlpha(this);
                        break;
                    default:
                }
            } else {
                if (!q && this.buffer.premultiplied) {
                    var i = this.type;
                    switch (i[1]) {
                        case 1:
                            x.convertToData(this);
                            iv.unmultiplyAlpha(this);
                            break;
                        default:
                    }
                }
            }
            return q
        },
        get_rect: function() {
            return new lj(0, 0, this.width, this.height)
        },
        get_src: function() {
            if (this.buffer.__srcCanvas == null) {
                x.convertToCanvas(this)
            }
            return this.buffer.get_src()
        },
        set_src: function(i) {
            return this.buffer.set_src(i)
        },
        get_transparent: function() {
            if (this.buffer == null) {
                return false
            }
            return this.buffer.transparent
        },
        set_transparent: function(i) {
            if (this.buffer == null) {
                return false
            }
            return this.buffer.transparent = i
        },
        __class__: nv,
        __properties__: {
            set_transparent: "set_transparent",
            get_transparent: "get_transparent",
            set_src: "set_src",
            get_src: "get_src",
            get_rect: "get_rect",
            set_premultiplied: "set_premultiplied",
            get_premultiplied: "get_premultiplied",
            set_powerOfTwo: "set_powerOfTwo",
            get_powerOfTwo: "get_powerOfTwo",
            set_format: "set_format",
            get_format: "get_format",
            set_data: "set_data",
            get_data: "get_data"
        }
    };
    var oG = function(i1, q, i, js, i2) {
        if (js == null) {
            js = 32
        }
        if (i == null) {
            i = 0
        }
        if (q == null) {
            q = 0
        }
        this.data = i1;
        this.width = q;
        this.height = i;
        this.bitsPerPixel = js;
        if (i2 == null) {
            this.format = 0
        } else {
            this.format = i2
        }
        this.transparent = true
    };
    nt["lime.graphics.ImageBuffer"] = oG;
    oG.__name__ = ["lime", "graphics", "ImageBuffer"];
    oG.prototype = {
        bitsPerPixel: null,
        data: null,
        format: null,
        height: null,
        premultiplied: null,
        transparent: null,
        width: null,
        __srcBitmapData: null,
        __srcCanvas: null,
        __srcContext: null,
        __srcCustom: null,
        __srcImage: null,
        __srcImageData: null,
        clone: function() {
            var i2 = new oG(this.data, this.width, this.height, this.bitsPerPixel);
            if (this.data != null) {
                var qY = this.data.byteLength;
                var i1;
                if (qY != null) {
                    i1 = new qw(qY)
                } else {
                    i1 = null
                }
                i2.data = i1;
                var qZ;
                var q = this.data;
                var i;
                if (q != null) {
                    i = new qw(q)
                } else {
                    i = null
                }
                qZ = i;
                i2.data.set(qZ)
            } else {
                if (this.__srcImageData != null) {
                    i2.__srcCanvas = window.document.createElement("canvas");
                    i2.__srcContext = i2.__srcCanvas.getContext("2d");
                    i2.__srcCanvas.width = this.__srcImageData.width;
                    i2.__srcCanvas.height = this.__srcImageData.height;
                    i2.__srcImageData = i2.__srcContext.createImageData(this.__srcImageData.width, this.__srcImageData.height);
                    var js = new Uint8ClampedArray(this.__srcImageData.data);
                    i2.__srcImageData.data.set(js)
                } else {
                    if (this.__srcCanvas != null) {
                        i2.__srcCanvas = window.document.createElement("canvas");
                        i2.__srcContext = i2.__srcCanvas.getContext("2d");
                        i2.__srcCanvas.width = this.__srcCanvas.width;
                        i2.__srcCanvas.height = this.__srcCanvas.height;
                        i2.__srcContext.drawImage(this.__srcCanvas, 0, 0)
                    } else {
                        i2.__srcImage = this.__srcImage
                    }
                }
            }
            i2.bitsPerPixel = this.bitsPerPixel;
            i2.format = this.format;
            i2.premultiplied = this.premultiplied;
            i2.transparent = this.transparent;
            return i2
        },
        get_src: function() {
            if (this.__srcImage != null) {
                return this.__srcImage
            }
            return this.__srcCanvas
        },
        set_src: function(i) {
            if (n0.__instanceof(i, Image)) {
                this.__srcImage = i
            } else {
                if (n0.__instanceof(i, HTMLCanvasElement)) {
                    this.__srcCanvas = i;
                    this.__srcContext = this.__srcCanvas.getContext("2d")
                }
            }
            return i
        },
        get_stride: function() {
            return this.width * 4
        },
        __class__: oG,
        __properties__: {
            get_stride: "get_stride",
            set_src: "set_src",
            get_src: "get_src"
        }
    };
    var dn = nt["lime.graphics.ImageChannel"] = {
        __ename__: ["lime", "graphics", "ImageChannel"],
        __constructs__: ["RED", "GREEN", "BLUE", "ALPHA"]
    };
    dn.RED = ["RED", 0];
    dn.RED.toString = ea;
    dn.RED.__enum__ = dn;
    dn.GREEN = ["GREEN", 1];
    dn.GREEN.toString = ea;
    dn.GREEN.__enum__ = dn;
    dn.BLUE = ["BLUE", 2];
    dn.BLUE.toString = ea;
    dn.BLUE.__enum__ = dn;
    dn.ALPHA = ["ALPHA", 3];
    dn.ALPHA.toString = ea;
    dn.ALPHA.__enum__ = dn;
    var fY = nt["lime.graphics.ImageType"] = {
        __ename__: ["lime", "graphics", "ImageType"],
        __constructs__: ["CANVAS", "DATA", "FLASH", "CUSTOM"]
    };
    fY.CANVAS = ["CANVAS", 0];
    fY.CANVAS.toString = ea;
    fY.CANVAS.__enum__ = fY;
    fY.DATA = ["DATA", 1];
    fY.DATA.toString = ea;
    fY.DATA.__enum__ = fY;
    fY.FLASH = ["FLASH", 2];
    fY.FLASH.toString = ea;
    fY.FLASH.__enum__ = fY;
    fY.CUSTOM = ["CUSTOM", 3];
    fY.CUSTOM.toString = ea;
    fY.CUSTOM.__enum__ = fY;
    var d9 = nt["lime.graphics.RenderContext"] = {
        __ename__: ["lime", "graphics", "RenderContext"],
        __constructs__: ["OPENGL", "CANVAS", "DOM", "FLASH", "CAIRO", "CONSOLE", "CUSTOM", "NONE"]
    };
    d9.OPENGL = function(q) {
        var i = ["OPENGL", 0, q];
        i.__enum__ = d9;
        i.toString = ea;
        return i
    };
    d9.CANVAS = function(i) {
        var q = ["CANVAS", 1, i];
        q.__enum__ = d9;
        q.toString = ea;
        return q
    };
    d9.DOM = function(i) {
        var q = ["DOM", 2, i];
        q.__enum__ = d9;
        q.toString = ea;
        return q
    };
    d9.FLASH = function(i) {
        var q = ["FLASH", 3, i];
        q.__enum__ = d9;
        q.toString = ea;
        return q
    };
    d9.CAIRO = function(q) {
        var i = ["CAIRO", 4, q];
        i.__enum__ = d9;
        i.toString = ea;
        return i
    };
    d9.CONSOLE = function(i) {
        var q = ["CONSOLE", 5, i];
        q.__enum__ = d9;
        q.toString = ea;
        return q
    };
    d9.CUSTOM = function(q) {
        var i = ["CUSTOM", 6, q];
        i.__enum__ = d9;
        i.toString = ea;
        return i
    };
    d9.NONE = ["NONE", 7];
    d9.NONE.toString = ea;
    d9.NONE.__enum__ = d9;
    var jj = function(i) {
        this.onRender = new nO();
        this.onContextRestored = new X();
        this.onContextLost = new nO();
        this.window = i;
        this.backend = new hl(this);
        this.window.renderer = this
    };
    nt["lime.graphics.Renderer"] = jj;
    jj.__name__ = ["lime", "graphics", "Renderer"];
    jj.prototype = {
        context: null,
        onContextLost: null,
        onContextRestored: null,
        onRender: null,
        type: null,
        window: null,
        backend: null,
        create: function() {
            this.backend.create()
        },
        flip: function() {
            this.backend.flip()
        },
        readPixels: function(i) {
            return this.backend.readPixels(i)
        },
        render: function() {
            this.backend.render()
        },
        __class__: jj
    };
    var my = nt["lime.graphics.RendererType"] = {
        __ename__: ["lime", "graphics", "RendererType"],
        __constructs__: ["OPENGL", "CANVAS", "DOM", "FLASH", "CAIRO", "CONSOLE", "CUSTOM"]
    };
    my.OPENGL = ["OPENGL", 0];
    my.OPENGL.toString = ea;
    my.OPENGL.__enum__ = my;
    my.CANVAS = ["CANVAS", 1];
    my.CANVAS.toString = ea;
    my.CANVAS.__enum__ = my;
    my.DOM = ["DOM", 2];
    my.DOM.toString = ea;
    my.DOM.__enum__ = my;
    my.FLASH = ["FLASH", 3];
    my.FLASH.toString = ea;
    my.FLASH.__enum__ = my;
    my.CAIRO = ["CAIRO", 4];
    my.CAIRO.toString = ea;
    my.CAIRO.__enum__ = my;
    my.CONSOLE = ["CONSOLE", 5];
    my.CONSOLE.toString = ea;
    my.CONSOLE.__enum__ = my;
    my.CUSTOM = ["CUSTOM", 6];
    my.CUSTOM.toString = ea;
    my.CUSTOM.__enum__ = my;
    var bR = function(i) {
        if (i != null) {}
    };
    nt["lime.graphics.cairo.Cairo"] = bR;
    bR.__name__ = ["lime", "graphics", "cairo", "Cairo"];
    bR.__properties__ = {
        get_versionString: "get_versionString",
        get_version: "get_version"
    };
    bR.version = null;
    bR.versionString = null;
    bR.get_version = function() {
        return 0
    };
    bR.get_versionString = function() {
        return ""
    };
    bR.prototype = {
        target: null,
        userData: null,
        handle: null,
        arc: function(i1, js, i, i2, q) {},
        arcNegative: function(i1, js, i, i2, q) {},
        clip: function() {},
        clipExtents: function(q, i2, i, i1) {},
        clipPreserve: function() {},
        closePath: function() {},
        copyPage: function() {},
        curveTo: function(i2, qY, q, js, i, i1) {},
        fill: function() {},
        fillExtents: function(q, i2, i, i1) {},
        fillPreserve: function() {},
        identityMatrix: function() {},
        inClip: function(i, q) {
            return false
        },
        inFill: function(i, q) {
            return false
        },
        inStroke: function(i, q) {
            return false
        },
        lineTo: function(i, q) {},
        moveTo: function(i, q) {},
        mask: function(i) {},
        maskSurface: function(q, i, i1) {},
        newPath: function() {},
        paint: function() {},
        paintWithAlpha: function(i) {},
        popGroup: function() {
            return null
        },
        popGroupToSource: function() {},
        pushGroup: function() {},
        pushGroupWithContent: function(i) {},
        recreate: function(i) {},
        rectangle: function(q, i2, i1, i) {},
        relCurveTo: function(qY, q, i2, i, i1, js) {},
        relLineTo: function(q, i) {},
        relMoveTo: function(q, i) {},
        resetClip: function() {},
        restore: function() {},
        save: function() {},
        setFontSize: function(i) {},
        setSourceRGB: function(i1, q, i) {},
        setSourceRGBA: function(i2, i1, i, q) {},
        setSourceSurface: function(q, i, i1) {},
        showPage: function() {},
        showText: function(i) {},
        status: function() {
            return 0
        },
        stroke: function() {},
        strokeExtents: function(q, i2, i, i1) {},
        strokePreserve: function() {},
        transform: function(i) {},
        rotate: function(i) {},
        scale: function(i, q) {},
        translate: function(i, q) {},
        get_antialias: function() {
            return 0
        },
        set_antialias: function(i) {
            return i
        },
        get_currentPoint: function() {
            return null
        },
        get_dash: function() {
            return []
        },
        set_dash: function(i) {
            return i
        },
        get_dashCount: function() {
            return 0
        },
        get_fillRule: function() {
            return 0
        },
        set_fillRule: function(i) {
            return i
        },
        get_fontFace: function() {
            return 0
        },
        set_fontFace: function(i) {
            return i
        },
        get_fontOptions: function() {
            return null
        },
        set_fontOptions: function(i) {
            return i
        },
        get_groupTarget: function() {
            return 0
        },
        get_hasCurrentPoint: function() {
            return false
        },
        get_lineCap: function() {
            return 0
        },
        set_lineCap: function(i) {
            return i
        },
        get_lineJoin: function() {
            return 0
        },
        set_lineJoin: function(i) {
            return i
        },
        get_lineWidth: function() {
            return 0
        },
        set_lineWidth: function(i) {
            return i
        },
        get_matrix: function() {
            return null
        },
        set_matrix: function(i) {
            return i
        },
        get_miterLimit: function() {
            return 0
        },
        set_miterLimit: function(i) {
            return i
        },
        get_operator: function() {
            return 0
        },
        set_operator: function(i) {
            return i
        },
        get_source: function() {
            return 0
        },
        set_source: function(i) {
            return i
        },
        get_target: function() {
            return 0
        },
        get_tolerance: function() {
            return 0
        },
        set_tolerance: function(i) {
            return i
        },
        __class__: bR,
        __properties__: {
            set_tolerance: "set_tolerance",
            get_tolerance: "get_tolerance",
            get_target: "get_target",
            set_source: "set_source",
            get_source: "get_source",
            set_operator: "set_operator",
            get_operator: "get_operator",
            set_miterLimit: "set_miterLimit",
            get_miterLimit: "get_miterLimit",
            set_matrix: "set_matrix",
            get_matrix: "get_matrix",
            set_lineWidth: "set_lineWidth",
            get_lineWidth: "get_lineWidth",
            set_lineJoin: "set_lineJoin",
            get_lineJoin: "get_lineJoin",
            set_lineCap: "set_lineCap",
            get_lineCap: "get_lineCap",
            get_hasCurrentPoint: "get_hasCurrentPoint",
            get_groupTarget: "get_groupTarget",
            set_fontOptions: "set_fontOptions",
            get_fontOptions: "get_fontOptions",
            set_fontFace: "set_fontFace",
            get_fontFace: "get_fontFace",
            set_fillRule: "set_fillRule",
            get_fillRule: "get_fillRule",
            get_dashCount: "get_dashCount",
            set_dash: "set_dash",
            get_dash: "get_dash",
            get_currentPoint: "get_currentPoint",
            set_antialias: "set_antialias",
            get_antialias: "get_antialias"
        }
    };
    var hd = {};
    nt["lime.graphics.cairo._CairoFTFontFace.CairoFTFontFace_Impl_"] = hd;
    hd.__name__ = ["lime", "graphics", "cairo", "_CairoFTFontFace", "CairoFTFontFace_Impl_"];
    hd._new = function() {
        return 0
    };
    hd.create = function(q, i) {
        return 0
    };
    var hT = {};
    nt["lime.graphics.cairo._CairoFontFace.CairoFontFace_Impl_"] = hT;
    hT.__name__ = ["lime", "graphics", "cairo", "_CairoFontFace", "CairoFontFace_Impl_"];
    hT._new = function() {
        return null
    };
    hT.status = function(i) {
        return 0
    };
    var ia = {};
    nt["lime.graphics.cairo._CairoFontOptions.CairoFontOptions_Impl_"] = ia;
    ia.__name__ = ["lime", "graphics", "cairo", "_CairoFontOptions", "CairoFontOptions_Impl_"];
    ia.__properties__ = {
        set_subpixelOrder: "set_subpixelOrder",
        get_subpixelOrder: "get_subpixelOrder",
        set_hintStyle: "set_hintStyle",
        get_hintStyle: "get_hintStyle",
        set_hintMetrics: "set_hintMetrics",
        get_hintMetrics: "get_hintMetrics",
        set_antialias: "set_antialias",
        get_antialias: "get_antialias"
    };
    ia._new = function() {
        return null
    };
    ia.get_antialias = function(i) {
        return 0
    };
    ia.set_antialias = function(i, q) {
        return q
    };
    ia.get_hintMetrics = function(i) {
        return 0
    };
    ia.set_hintMetrics = function(i, q) {
        return q
    };
    ia.get_hintStyle = function(i) {
        return 0
    };
    ia.set_hintStyle = function(i, q) {
        return q
    };
    ia.get_subpixelOrder = function(i) {
        return 0
    };
    ia.set_subpixelOrder = function(i, q) {
        return q
    };
    var iJ = {};
    nt["lime.graphics.cairo._CairoImageSurface.CairoImageSurface_Impl_"] = iJ;
    iJ.__name__ = ["lime", "graphics", "cairo", "_CairoImageSurface", "CairoImageSurface_Impl_"];
    iJ.__properties__ = {
        get_width: "get_width",
        get_stride: "get_stride",
        get_height: "get_height",
        get_format: "get_format",
        get_data: "get_data"
    };
    iJ._new = function(i1, q, i) {
        return 0
    };
    iJ.create = function(i2, js, q, i, i1) {
        return 0
    };
    iJ.fromImage = function(i) {
        return null
    };
    iJ.get_data = function(i) {
        return null
    };
    iJ.get_format = function(i) {
        return 0
    };
    iJ.get_height = function(i) {
        return 0
    };
    iJ.get_stride = function(i) {
        return 0
    };
    iJ.get_width = function(i) {
        return 0
    };
    var jp = {};
    nt["lime.graphics.cairo._CairoPattern.CairoPattern_Impl_"] = jp;
    jp.__name__ = ["lime", "graphics", "cairo", "_CairoPattern", "CairoPattern_Impl_"];
    jp.__properties__ = {
        set_matrix: "set_matrix",
        get_matrix: "get_matrix",
        set_filter: "set_filter",
        get_filter: "get_filter",
        set_extend: "set_extend",
        get_extend: "get_extend",
        get_colorStopCount: "get_colorStopCount"
    };
    jp._new = function(i) {
        return i
    };
    jp.addColorStopRGB = function(q, js, i2, i1, i) {};
    jp.addColorStopRGBA = function(i1, qY, js, i2, i, q) {};
    jp.createForSurface = function(i) {
        return 0
    };
    jp.createLinear = function(q, i2, i, i1) {
        return 0
    };
    jp.createRadial = function(i1, qY, js, i, i2, q) {
        return 0
    };
    jp.createRGB = function(i1, q, i) {
        return 0
    };
    jp.createRGBA = function(i2, i1, i, q) {
        return 0
    };
    jp.get_colorStopCount = function(i) {
        return 0
    };
    jp.get_extend = function(i) {
        return 0
    };
    jp.set_extend = function(i, q) {
        return q
    };
    jp.get_filter = function(i) {
        return 0
    };
    jp.set_filter = function(i, q) {
        return q
    };
    jp.get_matrix = function(i) {
        return null
    };
    jp.set_matrix = function(i, q) {
        return q
    };
    var hu = {};
    nt["lime.graphics.cairo._CairoSurface.CairoSurface_Impl_"] = hu;
    hu.__name__ = ["lime", "graphics", "cairo", "_CairoSurface", "CairoSurface_Impl_"];
    hu.flush = function(i) {};
    var eb = function() {};
    nt["lime.graphics.console.IndexBuffer"] = eb;
    eb.__name__ = ["lime", "graphics", "console", "IndexBuffer"];
    eb.prototype = {
        __class__: eb
    };
    var iR = nt["lime.graphics.console.Primitive"] = {
        __ename__: ["lime", "graphics", "console", "Primitive"],
        __constructs__: ["Point", "Line", "LineStrip", "Triangle", "TriangleStrip"]
    };
    iR.Point = ["Point", 0];
    iR.Point.toString = ea;
    iR.Point.__enum__ = iR;
    iR.Line = ["Line", 1];
    iR.Line.toString = ea;
    iR.Line.__enum__ = iR;
    iR.LineStrip = ["LineStrip", 2];
    iR.LineStrip.toString = ea;
    iR.LineStrip.__enum__ = iR;
    iR.Triangle = ["Triangle", 3];
    iR.Triangle.toString = ea;
    iR.Triangle.__enum__ = iR;
    iR.TriangleStrip = ["TriangleStrip", 4];
    iR.TriangleStrip.toString = ea;
    iR.TriangleStrip.__enum__ = iR;
    var hz = function() {};
    nt["lime.graphics.console.Shader"] = hz;
    hz.__name__ = ["lime", "graphics", "console", "Shader"];
    hz.prototype = {
        __class__: hz
    };
    var w = function() {};
    nt["lime.graphics.console.VertexBuffer"] = w;
    w.__name__ = ["lime", "graphics", "console", "VertexBuffer"];
    w.prototype = {
        lock: function() {
            return new d()
        },
        unlock: function() {},
        __class__: w
    };
    var d = function() {};
    nt["lime.graphics.console.VertexOutput"] = d;
    d.__name__ = ["lime", "graphics", "console", "VertexOutput"];
    d.prototype = {
        vec2: function(i, q) {},
        vec3: function(i, i1, q) {},
        color: function(i2, i1, i, q) {},
        __class__: d
    };
    var jx = function() {};
    nt["lime.graphics.format.BMP"] = jx;
    jx.__name__ = ["lime", "graphics", "format", "BMP"];
    jx.encode = function(i2, rv) {
        if (i2.get_premultiplied() || i2.get_format() != 0) {
            i2 = i2.clone();
            i2.set_premultiplied(false);
            i2.set_format(0)
        }
        if (rv == null) {
            rv = aZ.RGB
        }
        var q7 = 14;
        var q = 40;
        var rt = i2.width * i2.height * 4;
        if (rv != null) {
            switch (rv[1]) {
                case 1:
                    q = 108;
                    break;
                case 2:
                    q7 = 0;
                    rt += i2.width * i2.height;
                    break;
                case 0:
                    rt = i2.width * 3 + i2.width * 3 % 4 + i2.height * 3 + i2.height * 3;
                    break;
                default:
            }
        } else {}
        var rq = eg.alloc(q7 + q + rt);
        var rc = 0;
        if (q7 > 0) {
            rq.set(rc++, 66);
            rq.set(rc++, 77);
            rq.setInt32(rc, rq.length);
            rc += 4;
            rq.setUInt16(rc, 0);
            rc += 2;
            rq.setUInt16(rc, 0);
            rc += 2;
            rq.setInt32(rc, q7 + q);
            rc += 4
        }
        rq.setInt32(rc, q);
        rc += 4;
        rq.setInt32(rc, i2.width);
        rc += 4;
        rq.setInt32(rc, rv == aZ.ICO ? i2.height * 2 : i2.height);
        rc += 4;
        rq.setUInt16(rc, 1);
        rc += 2;
        rq.setUInt16(rc, rv == aZ.RGB ? 24 : 32);
        rc += 2;
        rq.setInt32(rc, rv == aZ.BITFIELD ? 3 : 0);
        rc += 4;
        rq.setInt32(rc, rt);
        rc += 4;
        rq.setInt32(rc, 11824);
        rc += 4;
        rq.setInt32(rc, 11824);
        rc += 4;
        rq.setInt32(rc, 0);
        rc += 4;
        rq.setInt32(rc, 0);
        rc += 4;
        if (rv == aZ.BITFIELD) {
            rq.setInt32(rc, 16711680);
            rc += 4;
            rq.setInt32(rc, 65280);
            rc += 4;
            rq.setInt32(rc, 255);
            rc += 4;
            rq.setInt32(rc, -16777216);
            rc += 4;
            rq.set(rc++, 32);
            rq.set(rc++, 110);
            rq.set(rc++, 105);
            rq.set(rc++, 87);
            var rp = 0;
            while (rp < 48) {
                var rl = rp++;
                rq.set(rc++, 0)
            }
        }
        var js = i2.getPixels(new lj(0, 0, i2.width, i2.height), 1);
        var q6 = 0;
        var rs;
        var re;
        var rn;
        var rr;
        if (rv != null) {
            switch (rv[1]) {
                case 1:
                    var rj = 0;
                    var ri = i2.height;
                    while (rj < ri) {
                        var ra = rj++;
                        q6 = (i2.height - 1 - ra) * 4 * i2.width;
                        var rh = 0;
                        var q2 = i2.width;
                        while (rh < q2) {
                            var rb = rh++;
                            rs = js.get(q6++);
                            re = js.get(q6++);
                            rn = js.get(q6++);
                            rr = js.get(q6++);
                            rq.set(rc++, rr);
                            rq.set(rc++, rn);
                            rq.set(rc++, re);
                            rq.set(rc++, rs)
                        }
                    }
                    break;
                case 2:
                    var q5 = eg.alloc(i2.width * i2.height);
                    var rd = 0;
                    var q9 = 0;
                    var rg = i2.height;
                    while (q9 < rg) {
                        var rw = q9++;
                        q6 = (i2.height - 1 - rw) * 4 * i2.width;
                        var ro = 0;
                        var q1 = i2.width;
                        while (ro < q1) {
                            var q4 = ro++;
                            rs = js.get(q6++);
                            re = js.get(q6++);
                            rn = js.get(q6++);
                            rr = js.get(q6++);
                            rq.set(rc++, rr);
                            rq.set(rc++, rn);
                            rq.set(rc++, re);
                            rq.set(rc++, rs);
                            q5.set(rd++, 0)
                        }
                    }
                    rq.blit(rc, q5, 0, i2.width * i2.height);
                    break;
                case 0:
                    var q8 = 0;
                    var rf = i2.height;
                    while (q8 < rf) {
                        var ru = q8++;
                        q6 = (i2.height - 1 - ru) * 4 * i2.width;
                        var rm = 0;
                        var q0 = i2.width;
                        while (rm < q0) {
                            var q3 = rm++;
                            rs = js.get(q6++);
                            re = js.get(q6++);
                            rn = js.get(q6++);
                            rr = js.get(q6++);
                            rq.set(rc++, rr);
                            rq.set(rc++, rn);
                            rq.set(rc++, re)
                        }
                        var rk = 0;
                        var qY = i2.width * 3 % 4;
                        while (rk < qY) {
                            var qZ = rk++;
                            rq.set(rc++, 0)
                        }
                    }
                    break;
                default:
            }
        } else {}
        return rq
    };
    var aZ = nt["lime.graphics.format.BMPType"] = {
        __ename__: ["lime", "graphics", "format", "BMPType"],
        __constructs__: ["RGB", "BITFIELD", "ICO"]
    };
    aZ.RGB = ["RGB", 0];
    aZ.RGB.toString = ea;
    aZ.RGB.__enum__ = aZ;
    aZ.BITFIELD = ["BITFIELD", 1];
    aZ.BITFIELD.toString = ea;
    aZ.BITFIELD.__enum__ = aZ;
    aZ.ICO = ["ICO", 2];
    aZ.ICO.toString = ea;
    aZ.ICO.__enum__ = aZ;
    var a3 = function() {};
    nt["lime.graphics.format.JPEG"] = a3;
    a3.__name__ = ["lime", "graphics", "format", "JPEG"];
    a3.decodeBytes = function(i, q) {
        if (q == null) {
            q = true
        }
        return null
    };
    a3.decodeFile = function(i, q) {
        if (q == null) {
            q = true
        }
        return null
    };
    a3.encode = function(qZ, q1) {
        if (qZ.get_premultiplied() || qZ.get_format() != 0) {
            qZ = qZ.clone();
            qZ.set_premultiplied(false);
            qZ.set_format(0)
        }
        x.sync(qZ, false);
        if (qZ.buffer.__srcCanvas != null) {
            var qY = qZ.buffer.__srcCanvas.toDataURL("image/jpeg", q1 / 100);
            var i1 = window.atob(qY.split(";base64,")[1]);
            var q = eg.alloc(i1.length);
            var js = 0;
            var q0 = i1.length;
            while (js < q0) {
                var i2 = js++;
                q.set(i2, cj.cca(i1, i2))
            }
            return q
        }
        return null
    };
    var np = function() {};
    nt["lime.graphics.format.PNG"] = np;
    np.__name__ = ["lime", "graphics", "format", "PNG"];
    np.decodeBytes = function(i, q) {
        if (q == null) {
            q = true
        }
        return null
    };
    np.decodeFile = function(i, q) {
        if (q == null) {
            q = true
        }
        return null
    };
    np.encode = function(qZ) {
        if (qZ.get_premultiplied() || qZ.get_format() != 0) {
            qZ = qZ.clone();
            qZ.set_premultiplied(false);
            qZ.set_format(0)
        }
        x.sync(qZ, false);
        if (qZ.buffer.__srcCanvas != null) {
            var qY = qZ.buffer.__srcCanvas.toDataURL("image/png");
            var i1 = window.atob(qY.split(";base64,")[1]);
            var q = eg.alloc(i1.length);
            var js = 0;
            var q0 = i1.length;
            while (js < q0) {
                var i2 = js++;
                q.set(i2, cj.cca(i1, i2))
            }
            return q
        }
        return null
    };
    var mU = function() {};
    nt["lime.graphics.opengl.GL"] = mU;
    mU.__name__ = ["lime", "graphics", "opengl", "GL"];
    mU.__properties__ = {
        get_version: "get_version"
    };
    mU.version = null;
    mU.context = null;
    mU.activeTexture = function(i) {
        mU.context.activeTexture(i)
    };
    mU.attachShader = function(i, q) {
        mU.context.attachShader(i, q)
    };
    mU.bindAttribLocation = function(i, i1, q) {
        mU.context.bindAttribLocation(i, i1, q)
    };
    mU.bindBuffer = function(q, i) {
        mU.context.bindBuffer(q, i)
    };
    mU.bindFramebuffer = function(q, i) {
        mU.context.bindFramebuffer(q, i)
    };
    mU.bindRenderbuffer = function(q, i) {
        mU.context.bindRenderbuffer(q, i)
    };
    mU.bindTexture = function(q, i) {
        mU.context.bindTexture(q, i)
    };
    mU.blendColor = function(i2, q, i, i1) {
        mU.context.blendColor(i2, q, i, i1)
    };
    mU.blendEquation = function(i) {
        mU.context.blendEquation(i)
    };
    mU.blendEquationSeparate = function(i, q) {
        mU.context.blendEquationSeparate(i, q)
    };
    mU.blendFunc = function(q, i) {
        mU.context.blendFunc(q, i)
    };
    mU.blendFuncSeparate = function(i2, q, i1, i) {
        mU.context.blendFuncSeparate(i2, q, i1, i)
    };
    mU.bufferData = function(i1, q, i) {
        mU.context.bufferData(i1, q, i)
    };
    mU.bufferSubData = function(q, i1, i) {
        mU.context.bufferSubData(q, i1, i)
    };
    mU.checkFramebufferStatus = function(i) {
        return mU.context.checkFramebufferStatus(i)
    };
    mU.clear = function(i) {
        mU.context.clear(i)
    };
    mU.clearColor = function(i2, q, i, i1) {
        mU.context.clearColor(i2, q, i, i1)
    };
    mU.clearDepth = function(i) {
        mU.context.clearDepth(i)
    };
    mU.clearStencil = function(i) {
        mU.context.clearStencil(i)
    };
    mU.colorMask = function(i2, q, i, i1) {
        mU.context.colorMask(i2, q, i, i1)
    };
    mU.compileShader = function(i) {
        mU.context.compileShader(i)
    };
    mU.compressedTexImage2D = function(qY, qZ, i2, i1, i, q, js) {
        mU.context.compressedTexImage2D(qY, qZ, i2, i1, i, q, js)
    };
    mU.compressedTexSubImage2D = function(qY, q0, js, qZ, q, i, i2, i1) {
        mU.context.compressedTexSubImage2D(qY, q0, js, qZ, q, i, i2, i1)
    };
    mU.copyTexImage2D = function(qY, q0, js, q, qZ, i2, i, i1) {
        mU.context.copyTexImage2D(qY, q0, js, q, qZ, i2, i, i1)
    };
    mU.copyTexSubImage2D = function(js, q0, i2, qZ, q, qY, i1, i) {
        mU.context.copyTexSubImage2D(js, q0, i2, qZ, q, qY, i1, i)
    };
    mU.createBuffer = function() {
        return mU.context.createBuffer()
    };
    mU.createFramebuffer = function() {
        return mU.context.createFramebuffer()
    };
    mU.createProgram = function() {
        return mU.context.createProgram()
    };
    mU.createRenderbuffer = function() {
        return mU.context.createRenderbuffer()
    };
    mU.createShader = function(i) {
        return mU.context.createShader(i)
    };
    mU.createTexture = function() {
        return mU.context.createTexture()
    };
    mU.cullFace = function(i) {
        mU.context.cullFace(i)
    };
    mU.deleteBuffer = function(i) {
        mU.context.deleteBuffer(i)
    };
    mU.deleteFramebuffer = function(i) {
        mU.context.deleteFramebuffer(i)
    };
    mU.deleteProgram = function(i) {
        mU.context.deleteProgram(i)
    };
    mU.deleteRenderbuffer = function(i) {
        mU.context.deleteRenderbuffer(i)
    };
    mU.deleteShader = function(i) {
        mU.context.deleteShader(i)
    };
    mU.deleteTexture = function(i) {
        mU.context.deleteTexture(i)
    };
    mU.depthFunc = function(i) {
        mU.context.depthFunc(i)
    };
    mU.depthMask = function(i) {
        mU.context.depthMask(i)
    };
    mU.depthRange = function(q, i) {
        mU.context.depthRange(q, i)
    };
    mU.detachShader = function(i, q) {
        mU.context.detachShader(i, q)
    };
    mU.disable = function(i) {
        mU.context.disable(i)
    };
    mU.disableVertexAttribArray = function(i) {
        mU.context.disableVertexAttribArray(i)
    };
    mU.drawArrays = function(i1, q, i) {
        mU.context.drawArrays(i1, q, i)
    };
    mU.drawElements = function(i2, q, i, i1) {
        mU.context.drawElements(i2, q, i, i1)
    };
    mU.enable = function(i) {
        mU.context.enable(i)
    };
    mU.enableVertexAttribArray = function(i) {
        mU.context.enableVertexAttribArray(i)
    };
    mU.finish = function() {
        mU.context.finish()
    };
    mU.flush = function() {
        mU.context.flush()
    };
    mU.framebufferRenderbuffer = function(q, i1, i2, i) {
        mU.context.framebufferRenderbuffer(q, i1, i2, i)
    };
    mU.framebufferTexture2D = function(q, i1, js, i, i2) {
        mU.context.framebufferTexture2D(q, i1, js, i, i2)
    };
    mU.frontFace = function(i) {
        mU.context.frontFace(i)
    };
    mU.generateMipmap = function(i) {
        mU.context.generateMipmap(i)
    };
    mU.getActiveAttrib = function(i, q) {
        return mU.context.getActiveAttrib(i, q)
    };
    mU.getActiveUniform = function(i, q) {
        return mU.context.getActiveUniform(i, q)
    };
    mU.getAttachedShaders = function(i) {
        return mU.context.getAttachedShaders(i)
    };
    mU.getAttribLocation = function(i, q) {
        return mU.context.getAttribLocation(i, q)
    };
    mU.getBufferParameter = function(q, i) {
        return mU.context.getBufferParameter(q, i)
    };
    mU.getContextAttributes = function() {
        return mU.context.getContextAttributes()
    };
    mU.getError = function() {
        return mU.context.getError()
    };
    mU.getExtension = function(i) {
        return mU.context.getExtension(i)
    };
    mU.getFramebufferAttachmentParameter = function(q, i1, i) {
        return mU.context.getFramebufferAttachmentParameter(q, i1, i)
    };
    mU.getParameter = function(i) {
        return mU.context.getParameter(i)
    };
    mU.getProgramInfoLog = function(i) {
        return mU.context.getProgramInfoLog(i)
    };
    mU.getProgramParameter = function(i, q) {
        return mU.context.getProgramParameter(i, q)
    };
    mU.getRenderbufferParameter = function(q, i) {
        return mU.context.getRenderbufferParameter(q, i)
    };
    mU.getShaderInfoLog = function(i) {
        return mU.context.getShaderInfoLog(i)
    };
    mU.getShaderParameter = function(q, i) {
        return mU.context.getShaderParameter(q, i)
    };
    mU.getShaderPrecisionFormat = function(q, i) {
        return mU.context.getShaderPrecisionFormat(q, i)
    };
    mU.getShaderSource = function(i) {
        return mU.context.getShaderSource(i)
    };
    mU.getSupportedExtensions = function() {
        return mU.context.getSupportedExtensions()
    };
    mU.getTexParameter = function(q, i) {
        return mU.context.getTexParameter(q, i)
    };
    mU.getUniform = function(q, i) {
        return mU.context.getUniform(q, i)
    };
    mU.getUniformLocation = function(i, q) {
        return mU.context.getUniformLocation(i, q)
    };
    mU.getVertexAttrib = function(i, q) {
        return mU.context.getVertexAttrib(i, q)
    };
    mU.getVertexAttribOffset = function(i, q) {
        return mU.context.getVertexAttribOffset(i, q)
    };
    mU.hint = function(i, q) {
        mU.context.hint(i, q)
    };
    mU.isBuffer = function(i) {
        return mU.context.isBuffer(i)
    };
    mU.isContextLost = function() {
        return mU.context.isContextLost()
    };
    mU.isEnabled = function(i) {
        return mU.context.isEnabled(i)
    };
    mU.isFramebuffer = function(i) {
        return mU.context.isFramebuffer(i)
    };
    mU.isProgram = function(i) {
        return mU.context.isProgram(i)
    };
    mU.isRenderbuffer = function(i) {
        return mU.context.isRenderbuffer(i)
    };
    mU.isShader = function(i) {
        return mU.context.isShader(i)
    };
    mU.isTexture = function(i) {
        return mU.context.isTexture(i)
    };
    mU.lineWidth = function(i) {
        mU.context.lineWidth(i)
    };
    mU.linkProgram = function(i) {
        mU.context.linkProgram(i)
    };
    mU.pixelStorei = function(i, q) {
        mU.context.pixelStorei(i, q)
    };
    mU.polygonOffset = function(q, i) {
        mU.context.polygonOffset(q, i)
    };
    mU.readPixels = function(q, qZ, i2, i, js, i1, qY) {
        mU.context.readPixels(q, qZ, i2, i, js, i1, qY)
    };
    mU.renderbufferStorage = function(i2, i1, q, i) {
        mU.context.renderbufferStorage(i2, i1, q, i)
    };
    mU.sampleCoverage = function(i, q) {
        mU.context.sampleCoverage(i, q)
    };
    mU.scissor = function(q, i2, i1, i) {
        mU.context.scissor(q, i2, i1, i)
    };
    mU.shaderSource = function(i, q) {
        mU.context.shaderSource(i, q)
    };
    mU.stencilFunc = function(i1, q, i) {
        mU.context.stencilFunc(i1, q, i)
    };
    mU.stencilFuncSeparate = function(i2, i1, q, i) {
        mU.context.stencilFuncSeparate(i2, i1, q, i)
    };
    mU.stencilMask = function(i) {
        mU.context.stencilMask(i)
    };
    mU.stencilMaskSeparate = function(q, i) {
        mU.context.stencilMaskSeparate(q, i)
    };
    mU.stencilOp = function(q, i1, i) {
        mU.context.stencilOp(q, i1, i)
    };
    mU.stencilOpSeparate = function(i2, q, i1, i) {
        mU.context.stencilOpSeparate(i2, q, i1, i)
    };
    mU.texImage2D = function(qY, i, q, i1, q1, js, q0, qZ, i2) {
        mU.context.texImage2D(qY, i, q, i1, q1, js, q0, qZ, i2)
    };
    mU.texParameterf = function(q, i, i1) {
        mU.context.texParameterf(q, i, i1)
    };
    mU.texParameteri = function(q, i, i1) {
        mU.context.texParameteri(q, i, i1)
    };
    mU.texSubImage2D = function(js, q, qY, i, i1, q1, q0, qZ, i2) {
        mU.context.texSubImage2D(js, q, qY, i, i1, q1, q0, qZ, i2)
    };
    mU.uniform1f = function(q, i) {
        mU.context.uniform1f(q, i)
    };
    mU.uniform1fv = function(q, i) {
        mU.context.uniform1fv(q, i)
    };
    mU.uniform1i = function(q, i) {
        mU.context.uniform1i(q, i)
    };
    mU.uniform1iv = function(i, q) {
        mU.context.uniform1iv(i, q)
    };
    mU.uniform2f = function(q, i, i1) {
        mU.context.uniform2f(q, i, i1)
    };
    mU.uniform2fv = function(i, q) {
        mU.context.uniform2fv(i, q)
    };
    mU.uniform2i = function(q, i, i1) {
        mU.context.uniform2i(q, i, i1)
    };
    mU.uniform2iv = function(i, q) {
        mU.context.uniform2iv(i, q)
    };
    mU.uniform3f = function(q, i, i2, i1) {
        mU.context.uniform3f(q, i, i2, i1)
    };
    mU.uniform3fv = function(i, q) {
        mU.context.uniform3fv(i, q)
    };
    mU.uniform3i = function(q, i, i2, i1) {
        mU.context.uniform3i(q, i, i2, i1)
    };
    mU.uniform3iv = function(i, q) {
        mU.context.uniform3iv(i, q)
    };
    mU.uniform4f = function(i1, i, js, i2, q) {
        mU.context.uniform4f(i1, i, js, i2, q)
    };
    mU.uniform4fv = function(i, q) {
        mU.context.uniform4fv(i, q)
    };
    mU.uniform4i = function(i1, i, js, i2, q) {
        mU.context.uniform4i(i1, i, js, i2, q)
    };
    mU.uniform4iv = function(i, q) {
        mU.context.uniform4iv(i, q)
    };
    mU.uniformMatrix2fv = function(i, i1, q) {
        mU.context.uniformMatrix2fv(i, i1, q)
    };
    mU.uniformMatrix3fv = function(i, i1, q) {
        mU.context.uniformMatrix3fv(i, i1, q)
    };
    mU.uniformMatrix4fv = function(i, i1, q) {
        mU.context.uniformMatrix4fv(i, i1, q)
    };
    mU.useProgram = function(i) {
        mU.context.useProgram(i)
    };
    mU.validateProgram = function(i) {
        mU.context.validateProgram(i)
    };
    mU.vertexAttrib1f = function(q, i) {
        mU.context.vertexAttrib1f(q, i)
    };
    mU.vertexAttrib1fv = function(q, i) {
        mU.context.vertexAttrib1fv(q, i)
    };
    mU.vertexAttrib2f = function(q, i, i1) {
        mU.context.vertexAttrib2f(q, i, i1)
    };
    mU.vertexAttrib2fv = function(q, i) {
        mU.context.vertexAttrib2fv(q, i)
    };
    mU.vertexAttrib3f = function(q, i, i2, i1) {
        mU.context.vertexAttrib3f(q, i, i2, i1)
    };
    mU.vertexAttrib3fv = function(q, i) {
        mU.context.vertexAttrib3fv(q, i)
    };
    mU.vertexAttrib4f = function(i1, i, js, i2, q) {
        mU.context.vertexAttrib4f(i1, i, js, i2, q)
    };
    mU.vertexAttrib4fv = function(q, i) {
        mU.context.vertexAttrib4fv(q, i)
    };
    mU.vertexAttribPointer = function(i1, i, q, qY, i2, js) {
        mU.context.vertexAttribPointer(i1, i, q, qY, i2, js)
    };
    mU.viewport = function(q, i2, i1, i) {
        mU.context.viewport(q, i2, i1, i)
    };
    mU.get_version = function() {
        return 2
    };
    var x = function() {};
    nt["lime.graphics.utils.ImageCanvasUtil"] = x;
    x.__name__ = ["lime", "graphics", "utils", "ImageCanvasUtil"];
    x.colorTransform = function(i1, q, i) {
        x.convertToCanvas(i1);
        x.createImageData(i1);
        iv.colorTransform(i1, q, i)
    };
    x.convertToCanvas = function(q) {
        var i = q.buffer;
        if (i.__srcImage != null) {
            if (i.__srcCanvas == null) {
                x.createCanvas(q, i.__srcImage.width, i.__srcImage.height);
                i.__srcContext.drawImage(i.__srcImage, 0, 0)
            }
            i.__srcImage = null
        } else {
            if (i.data != null && i.__srcCanvas == null) {
                x.createCanvas(q, i.width, i.height);
                x.createImageData(q)
            } else {
                if (i.data == null && i.__srcImageData != null) {
                    i.data = i.__srcImageData.data
                }
            }
        }
    };
    x.convertToData = function(i) {
        if (i.buffer.data == null) {
            x.convertToCanvas(i);
            x.sync(i, false);
            x.createImageData(i);
            i.buffer.__srcCanvas = null;
            i.buffer.__srcContext = null
        }
    };
    x.copyChannel = function(js, i2, i1, i, q, qY) {
        x.convertToCanvas(i2);
        x.createImageData(i2);
        x.convertToCanvas(js);
        x.createImageData(js);
        iv.copyChannel(js, i2, i1, i, q, qY)
    };
    x.copyPixels = function(q0, js, i2, q, i, i1, qY) {
        if (qY == null) {
            qY = false
        }
        if (q == null || q.x >= q0.width || q.y >= q0.height || i2 == null || i2.width < 1 || i2.height < 1) {
            return
        }
        if (i != null && i.get_transparent()) {
            if (i1 == null) {
                i1 = new eD()
            }
            var qZ = q0.clone();
            qZ.copyChannel(i, new lj(i1.x, i1.y, i2.width, i2.height), new eD(i2.x, i2.y), dn.ALPHA, dn.ALPHA);
            js = qZ
        }
        x.sync(q0, true);
        if (!qY) {
            if (q0.get_transparent() && js.get_transparent()) {
                q0.buffer.__srcContext.clearRect(q.x + q0.offsetX, q.y + q0.offsetY, i2.width + q0.offsetX, i2.height + q0.offsetY)
            }
        }
        x.sync(js, false);
        if (js.buffer.get_src() != null) {
            q0.buffer.__srcContext.drawImage(js.buffer.get_src(), i2.x + js.offsetX | 0, i2.y + js.offsetY | 0, i2.width | 0, i2.height | 0, q.x + q0.offsetX | 0, q.y + q0.offsetY | 0, i2.width | 0, i2.height | 0)
        }
    };
    x.createCanvas = function(i2, i1, i) {
        var q = i2.buffer;
        if (q.__srcCanvas == null) {
            q.__srcCanvas = window.document.createElement("canvas");
            q.__srcCanvas.width = i1;
            q.__srcCanvas.height = i;
            if (!i2.get_transparent()) {
                if (!i2.get_transparent()) {
                    q.__srcCanvas.setAttribute("moz-opaque", "true")
                }
                q.__srcContext = q.__srcCanvas.getContext("2d", {
                    alpha: false
                })
            } else {
                q.__srcContext = q.__srcCanvas.getContext("2d")
            }
            q.__srcContext.mozImageSmoothingEnabled = false;
            q.__srcContext.msImageSmoothingEnabled = false;
            q.__srcContext.imageSmoothingEnabled = false
        }
    };
    x.createImageData = function(i2) {
        var q = i2.buffer;
        if (q.__srcImageData == null) {
            if (q.data == null) {
                q.__srcImageData = q.__srcContext.getImageData(0, 0, q.width, q.height)
            } else {
                q.__srcImageData = q.__srcContext.createImageData(q.width, q.height);
                q.__srcImageData.data.set(q.data)
            }
            var i1 = q.__srcImageData.data.buffer;
            var i;
            if (i1 != null) {
                i = new qw(i1)
            } else {
                i = null
            }
            q.data = i
        }
    };
    x.fillRect = function(q0, qY, i1, qZ) {
        x.convertToCanvas(q0);
        x.sync(q0, true);
        if (qY.x == 0 && qY.y == 0 && qY.width == q0.width && qY.height == q0.height) {
            if (q0.get_transparent() && (i1 & 255) == 0) {
                q0.buffer.__srcCanvas.width = q0.buffer.width;
                return
            }
        }
        var js;
        var i2;
        var i;
        var q;
        if (qZ == 1) {
            js = i1 >> 16 & 255;
            i2 = i1 >> 8 & 255;
            i = i1 & 255;
            if (q0.get_transparent()) {
                q = i1 >> 24 & 255
            } else {
                q = 255
            }
        } else {
            js = i1 >> 24 & 255;
            i2 = i1 >> 16 & 255;
            i = i1 >> 8 & 255;
            if (q0.get_transparent()) {
                q = i1 & 255
            } else {
                q = 255
            }
        }
        q0.buffer.__srcContext.fillStyle = "rgba(" + js + ", " + i2 + ", " + i + ", " + q / 255 + ")";
        q0.buffer.__srcContext.fillRect(qY.x + q0.offsetX, qY.y + q0.offsetY, qY.width + q0.offsetX, qY.height + q0.offsetY)
    };
    x.floodFill = function(i2, i, js, q, i1) {
        x.convertToCanvas(i2);
        x.createImageData(i2);
        iv.floodFill(i2, i, js, q, i1)
    };
    x.getPixel = function(i1, i, i2, q) {
        x.convertToCanvas(i1);
        x.createImageData(i1);
        return iv.getPixel(i1, i, i2, q)
    };
    x.getPixel32 = function(i1, i, i2, q) {
        x.convertToCanvas(i1);
        x.createImageData(i1);
        return iv.getPixel32(i1, i, i2, q)
    };
    x.getPixels = function(i1, i, q) {
        x.convertToCanvas(i1);
        x.createImageData(i1);
        return iv.getPixels(i1, i, q)
    };
    x.merge = function(js, i2, i1, i, q, q0, qY, qZ) {
        x.convertToCanvas(i2);
        x.createImageData(i2);
        x.convertToCanvas(js);
        x.createImageData(js);
        iv.merge(js, i2, i1, i, q, q0, qY, qZ)
    };
    x.resize = function(i2, i1, q) {
        var i = i2.buffer;
        if (i.__srcCanvas == null) {
            x.createCanvas(i2, i1, q);
            i.__srcContext.drawImage(i.get_src(), 0, 0, i1, q)
        } else {
            x.sync(i2, true);
            var js = i.__srcCanvas;
            i.__srcCanvas = null;
            x.createCanvas(i2, i1, q);
            i.__srcContext.drawImage(js, 0, 0, i1, q)
        }
    };
    x.scroll = function(q, i, i1) {
        if (i % q.width == 0 && i1 % q.height == 0) {
            return
        }
        x.convertToCanvas(q);
        x.sync(q, true);
        q.buffer.__srcContext.clearRect(i, i1, q.width, q.height);
        q.buffer.__srcContext.drawImage(q.buffer.__srcCanvas, i, i1)
    };
    x.setPixel = function(i2, i, js, q, i1) {
        x.convertToCanvas(i2);
        x.createImageData(i2);
        iv.setPixel(i2, i, js, q, i1)
    };
    x.setPixel32 = function(i2, i, js, q, i1) {
        x.convertToCanvas(i2);
        x.createImageData(i2);
        iv.setPixel32(i2, i, js, q, i1)
    };
    x.setPixels = function(i2, q, i, i1) {
        x.convertToCanvas(i2);
        x.createImageData(i2);
        iv.setPixels(i2, q, i, i1)
    };
    x.sync = function(q, i) {
        if (q.dirty && q.buffer.__srcImageData != null && q.type != fY.DATA) {
            q.buffer.__srcContext.putImageData(q.buffer.__srcImageData, 0, 0);
            q.buffer.data = null;
            q.dirty = false
        }
        if (i) {
            q.buffer.__srcImageData = null;
            q.buffer.data = null
        }
    };
    var iv = function() {};
    nt["lime.graphics.utils.ImageDataUtil"] = iv;
    iv.__name__ = ["lime", "graphics", "utils", "ImageDataUtil"];
    iv.colorTransform = function(q8, q, q9) {
        var rh = q8.buffer.data;
        if (rh == null) {
            return
        }
        var rd = q8.buffer.format;
        var i1 = q8.buffer.premultiplied;
        var i = new dm(q8, q);
        var re = qQ.getAlphaTable(q9);
        var rb = qQ.getRedTable(q9);
        var ri = qQ.getGreenTable(q9);
        var q2 = qQ.getBlueTable(q9);
        var qZ;
        var qY;
        var js;
        var q7 = 0;
        var i2 = i.height;
        while (q7 < i2) {
            var q0 = q7++;
            qZ = i.offset + i.stride * q0;
            var q3 = 0;
            var q4 = i.width;
            while (q3 < q4) {
                var q1 = q3++;
                qY = qZ + q1 * 4;
                switch (rd) {
                    case 2:
                        js = (rh[qY + 2] & 255) << 24 | (rh[qY + 1] & 255) << 16 | (rh[qY] & 255) << 8 | rh[qY + 3] & 255;
                        break;
                    case 0:
                        js = (rh[qY] & 255) << 24 | (rh[qY + 1] & 255) << 16 | (rh[qY + 2] & 255) << 8 | rh[qY + 3] & 255;
                        break;
                    case 1:
                        js = (rh[qY + 1] & 255) << 24 | (rh[qY + 2] & 255) << 16 | (rh[qY + 3] & 255) << 8 | rh[qY] & 255;
                        break
                }
                if (i1) {
                    if ((js & 255) != 0 && (js & 255) != 255) {
                        pL.unmult = 255 / (js & 255);
                        var q6;
                        var q5 = Math.round((js >> 24 & 255) * pL.unmult);
                        q6 = pL.__clamp[q5];
                        var rf;
                        var rc = Math.round((js >> 16 & 255) * pL.unmult);
                        rf = pL.__clamp[rc];
                        var rg;
                        var ra = Math.round((js >> 8 & 255) * pL.unmult);
                        rg = pL.__clamp[ra];
                        js = (q6 & 255) << 24 | (rf & 255) << 16 | (rg & 255) << 8 | js & 255 & 255
                    }
                }
                js = (rb[js >> 24 & 255] & 255) << 24 | (ri[js >> 16 & 255] & 255) << 16 | (q2[js >> 8 & 255] & 255) << 8 | re[js & 255] & 255;
                if (i1) {
                    if ((js & 255) == 0) {
                        if (js != 0) {
                            js = 0
                        }
                    } else {
                        if ((js & 255) != 255) {
                            pL.a16 = pL.__alpha16[js & 255];
                            js = ((js >> 24 & 255) * pL.a16 >> 16 & 255) << 24 | ((js >> 16 & 255) * pL.a16 >> 16 & 255) << 16 | ((js >> 8 & 255) * pL.a16 >> 16 & 255) << 8 | js & 255 & 255
                        }
                    }
                }
                switch (rd) {
                    case 2:
                        rh[qY] = js >> 8 & 255;
                        rh[qY + 1] = js >> 16 & 255;
                        rh[qY + 2] = js >> 24 & 255;
                        rh[qY + 3] = js & 255;
                        break;
                    case 0:
                        rh[qY] = js >> 24 & 255;
                        rh[qY + 1] = js >> 16 & 255;
                        rh[qY + 2] = js >> 8 & 255;
                        rh[qY + 3] = js & 255;
                        break;
                    case 1:
                        rh[qY] = js & 255;
                        rh[qY + 1] = js >> 24 & 255;
                        rh[qY + 2] = js >> 16 & 255;
                        rh[qY + 3] = js >> 8 & 255;
                        break
                }
            }
        }
        q8.dirty = true
    };
    iv.copyChannel = function(q, qY, q6, i, rp, q1) {
        var i2;
        switch (q1[1]) {
            case 0:
                i2 = 0;
                break;
            case 1:
                i2 = 1;
                break;
            case 2:
                i2 = 2;
                break;
            case 3:
                i2 = 3;
                break
        }
        var q3;
        switch (rp[1]) {
            case 0:
                q3 = 0;
                break;
            case 1:
                q3 = 1;
                break;
            case 2:
                q3 = 2;
                break;
            case 3:
                q3 = 3;
                break
        }
        var ri = qY.buffer.data;
        var q4 = q.buffer.data;
        if (ri == null || q4 == null) {
            return
        }
        var rv = new dm(qY, q6);
        var q9 = new dm(q, new lj(i.x, i.y, rv.width, rv.height));
        var js = qY.buffer.format;
        var i1 = q.buffer.format;
        var ru = qY.buffer.premultiplied;
        var q2 = q.buffer.premultiplied;
        var q0;
        var q7;
        var q8;
        var rn;
        var rc = 0;
        var ro = 0;
        var rr = q9.height;
        while (ro < rr) {
            var ra = ro++;
            q0 = rv.offset + rv.stride * ra;
            q7 = q9.offset + q9.stride * ra;
            var rk = 0;
            var rl = q9.width;
            while (rk < rl) {
                var rb = rk++;
                switch (js) {
                    case 2:
                        q8 = (ri[q0 + 2] & 255) << 24 | (ri[q0 + 1] & 255) << 16 | (ri[q0] & 255) << 8 | ri[q0 + 3] & 255;
                        break;
                    case 0:
                        q8 = (ri[q0] & 255) << 24 | (ri[q0 + 1] & 255) << 16 | (ri[q0 + 2] & 255) << 8 | ri[q0 + 3] & 255;
                        break;
                    case 1:
                        q8 = (ri[q0 + 1] & 255) << 24 | (ri[q0 + 2] & 255) << 16 | (ri[q0 + 3] & 255) << 8 | ri[q0] & 255;
                        break
                }
                if (ru) {
                    if ((q8 & 255) != 0 && (q8 & 255) != 255) {
                        pL.unmult = 255 / (q8 & 255);
                        var rd;
                        var rs = Math.round((q8 >> 24 & 255) * pL.unmult);
                        rd = pL.__clamp[rs];
                        var rq;
                        var rj = Math.round((q8 >> 16 & 255) * pL.unmult);
                        rq = pL.__clamp[rj];
                        var rt;
                        var rh = Math.round((q8 >> 8 & 255) * pL.unmult);
                        rt = pL.__clamp[rh];
                        q8 = (rd & 255) << 24 | (rq & 255) << 16 | (rt & 255) << 8 | q8 & 255 & 255
                    }
                }
                switch (i1) {
                    case 2:
                        rn = (q4[q7 + 2] & 255) << 24 | (q4[q7 + 1] & 255) << 16 | (q4[q7] & 255) << 8 | q4[q7 + 3] & 255;
                        break;
                    case 0:
                        rn = (q4[q7] & 255) << 24 | (q4[q7 + 1] & 255) << 16 | (q4[q7 + 2] & 255) << 8 | q4[q7 + 3] & 255;
                        break;
                    case 1:
                        rn = (q4[q7 + 1] & 255) << 24 | (q4[q7 + 2] & 255) << 16 | (q4[q7 + 3] & 255) << 8 | q4[q7] & 255;
                        break
                }
                if (q2) {
                    if ((rn & 255) != 0 && (rn & 255) != 255) {
                        pL.unmult = 255 / (rn & 255);
                        var qZ;
                        var rg = Math.round((rn >> 24 & 255) * pL.unmult);
                        qZ = pL.__clamp[rg];
                        var rm;
                        var rf = Math.round((rn >> 16 & 255) * pL.unmult);
                        rm = pL.__clamp[rf];
                        var q5;
                        var re = Math.round((rn >> 8 & 255) * pL.unmult);
                        q5 = pL.__clamp[re];
                        rn = (qZ & 255) << 24 | (rm & 255) << 16 | (q5 & 255) << 8 | rn & 255 & 255
                    }
                }
                switch (q3) {
                    case 0:
                        rc = q8 >> 24 & 255;
                        break;
                    case 1:
                        rc = q8 >> 16 & 255;
                        break;
                    case 2:
                        rc = q8 >> 8 & 255;
                        break;
                    case 3:
                        rc = q8 & 255;
                        break
                }
                switch (i2) {
                    case 0:
                        rn = (rc & 255) << 24 | (rn >> 16 & 255 & 255) << 16 | (rn >> 8 & 255 & 255) << 8 | rn & 255 & 255;
                        rc;
                        break;
                    case 1:
                        rn = (rn >> 24 & 255 & 255) << 24 | (rc & 255) << 16 | (rn >> 8 & 255 & 255) << 8 | rn & 255 & 255;
                        rc;
                        break;
                    case 2:
                        rn = (rn >> 24 & 255 & 255) << 24 | (rn >> 16 & 255 & 255) << 16 | (rc & 255) << 8 | rn & 255 & 255;
                        rc;
                        break;
                    case 3:
                        rn = (rn >> 24 & 255 & 255) << 24 | (rn >> 16 & 255 & 255) << 16 | (rn >> 8 & 255 & 255) << 8 | rc & 255;
                        rc;
                        break
                }
                if (q2) {
                    if ((rn & 255) == 0) {
                        if (rn != 0) {
                            rn = 0
                        }
                    } else {
                        if ((rn & 255) != 255) {
                            pL.a16 = pL.__alpha16[rn & 255];
                            rn = ((rn >> 24 & 255) * pL.a16 >> 16 & 255) << 24 | ((rn >> 16 & 255) * pL.a16 >> 16 & 255) << 16 | ((rn >> 8 & 255) * pL.a16 >> 16 & 255) << 8 | rn & 255 & 255
                        }
                    }
                }
                switch (i1) {
                    case 2:
                        q4[q7] = rn >> 8 & 255;
                        q4[q7 + 1] = rn >> 16 & 255;
                        q4[q7 + 2] = rn >> 24 & 255;
                        q4[q7 + 3] = rn & 255;
                        break;
                    case 0:
                        q4[q7] = rn >> 24 & 255;
                        q4[q7 + 1] = rn >> 16 & 255;
                        q4[q7 + 2] = rn >> 8 & 255;
                        q4[q7 + 3] = rn & 255;
                        break;
                    case 1:
                        q4[q7] = rn & 255;
                        q4[q7 + 1] = rn >> 24 & 255;
                        q4[q7 + 2] = rn >> 16 & 255;
                        q4[q7 + 3] = rn >> 8 & 255;
                        break
                }
                q0 += 4;
                q7 += 4
            }
        }
        q.dirty = true
    };
    iv.copyPixels = function(rU, q9, rY, rQ, rz, sb, rh) {
        if (rh == null) {
            rh = false
        }
        var sw = q9.buffer.data;
        var rc = rU.buffer.data;
        if (sw == null || rc == null) {
            return
        }
        var rv = new dm(q9, rY);
        var rJ = new dm(rU, new lj(rQ.x, rQ.y, rv.width, rv.height));
        var q1 = q9.buffer.format;
        var rs = rU.buffer.format;
        var sy = q9.buffer.premultiplied;
        var q7 = rU.buffer.premultiplied;
        var q8;
        var r8;
        var rg;
        if (!rh || !q9.get_transparent()) {
            var q5 = 0;
            var q4 = rJ.height;
            while (q5 < q4) {
                var rq = q5++;
                q8 = rv.offset + rv.stride * rq;
                r8 = rJ.offset + rJ.stride * rq;
                var q0 = 0;
                var q2 = rJ.width;
                while (q0 < q2) {
                    var rr = q0++;
                    switch (q1) {
                        case 2:
                            rg = (sw[q8 + 2] & 255) << 24 | (sw[q8 + 1] & 255) << 16 | (sw[q8] & 255) << 8 | sw[q8 + 3] & 255;
                            break;
                        case 0:
                            rg = (sw[q8] & 255) << 24 | (sw[q8 + 1] & 255) << 16 | (sw[q8 + 2] & 255) << 8 | sw[q8 + 3] & 255;
                            break;
                        case 1:
                            rg = (sw[q8 + 1] & 255) << 24 | (sw[q8 + 2] & 255) << 16 | (sw[q8 + 3] & 255) << 8 | sw[q8] & 255;
                            break
                    }
                    if (sy) {
                        if ((rg & 255) != 0 && (rg & 255) != 255) {
                            pL.unmult = 255 / (rg & 255);
                            var ru;
                            var sj = Math.round((rg >> 24 & 255) * pL.unmult);
                            ru = pL.__clamp[sj];
                            var rw;
                            var su = Math.round((rg >> 16 & 255) * pL.unmult);
                            rw = pL.__clamp[su];
                            var ry;
                            var ss = Math.round((rg >> 8 & 255) * pL.unmult);
                            ry = pL.__clamp[ss];
                            rg = (ru & 255) << 24 | (rw & 255) << 16 | (ry & 255) << 8 | rg & 255 & 255
                        }
                    }
                    if (q7) {
                        if ((rg & 255) == 0) {
                            if (rg != 0) {
                                rg = 0
                            }
                        } else {
                            if ((rg & 255) != 255) {
                                pL.a16 = pL.__alpha16[rg & 255];
                                rg = ((rg >> 24 & 255) * pL.a16 >> 16 & 255) << 24 | ((rg >> 16 & 255) * pL.a16 >> 16 & 255) << 16 | ((rg >> 8 & 255) * pL.a16 >> 16 & 255) << 8 | rg & 255 & 255
                            }
                        }
                    }
                    switch (rs) {
                        case 2:
                            rc[r8] = rg >> 8 & 255;
                            rc[r8 + 1] = rg >> 16 & 255;
                            rc[r8 + 2] = rg >> 24 & 255;
                            rc[r8 + 3] = rg & 255;
                            break;
                        case 0:
                            rc[r8] = rg >> 24 & 255;
                            rc[r8 + 1] = rg >> 16 & 255;
                            rc[r8 + 2] = rg >> 8 & 255;
                            rc[r8 + 3] = rg & 255;
                            break;
                        case 1:
                            rc[r8] = rg & 255;
                            rc[r8 + 1] = rg >> 24 & 255;
                            rc[r8 + 2] = rg >> 16 & 255;
                            rc[r8 + 3] = rg >> 8 & 255;
                            break
                    }
                    q8 += 4;
                    r8 += 4
                }
            }
        } else {
            var sx;
            var ro;
            var sc;
            var rn;
            var rA;
            if (rz == null) {
                var q6 = 0;
                var qZ = rJ.height;
                while (q6 < qZ) {
                    var rb = q6++;
                    q8 = rv.offset + rv.stride * rb;
                    r8 = rJ.offset + rJ.stride * rb;
                    var rT = 0;
                    var sv = rJ.width;
                    while (rT < sv) {
                        var rm = rT++;
                        switch (q1) {
                            case 2:
                                rg = (sw[q8 + 2] & 255) << 24 | (sw[q8 + 1] & 255) << 16 | (sw[q8] & 255) << 8 | sw[q8 + 3] & 255;
                                break;
                            case 0:
                                rg = (sw[q8] & 255) << 24 | (sw[q8 + 1] & 255) << 16 | (sw[q8 + 2] & 255) << 8 | sw[q8 + 3] & 255;
                                break;
                            case 1:
                                rg = (sw[q8 + 1] & 255) << 24 | (sw[q8 + 2] & 255) << 16 | (sw[q8 + 3] & 255) << 8 | sw[q8] & 255;
                                break
                        }
                        if (sy) {
                            if ((rg & 255) != 0 && (rg & 255) != 255) {
                                pL.unmult = 255 / (rg & 255);
                                var rj;
                                var sr = Math.round((rg >> 24 & 255) * pL.unmult);
                                rj = pL.__clamp[sr];
                                var qY;
                                var sq = Math.round((rg >> 16 & 255) * pL.unmult);
                                qY = pL.__clamp[sq];
                                var si;
                                var sp = Math.round((rg >> 8 & 255) * pL.unmult);
                                si = pL.__clamp[sp];
                                rg = (rj & 255) << 24 | (qY & 255) << 16 | (si & 255) << 8 | rg & 255 & 255
                            }
                        }
                        switch (rs) {
                            case 2:
                                rA = (rc[r8 + 2] & 255) << 24 | (rc[r8 + 1] & 255) << 16 | (rc[r8] & 255) << 8 | rc[r8 + 3] & 255;
                                break;
                            case 0:
                                rA = (rc[r8] & 255) << 24 | (rc[r8 + 1] & 255) << 16 | (rc[r8 + 2] & 255) << 8 | rc[r8 + 3] & 255;
                                break;
                            case 1:
                                rA = (rc[r8 + 1] & 255) << 24 | (rc[r8 + 2] & 255) << 16 | (rc[r8 + 3] & 255) << 8 | rc[r8] & 255;
                                break
                        }
                        if (q7) {
                            if ((rA & 255) != 0 && (rA & 255) != 255) {
                                pL.unmult = 255 / (rA & 255);
                                var ri;
                                var sn = Math.round((rA >> 24 & 255) * pL.unmult);
                                ri = pL.__clamp[sn];
                                var i2;
                                var sl = Math.round((rA >> 16 & 255) * pL.unmult);
                                i2 = pL.__clamp[sl];
                                var sf;
                                var sh = Math.round((rA >> 8 & 255) * pL.unmult);
                                sf = pL.__clamp[sh];
                                rA = (ri & 255) << 24 | (i2 & 255) << 16 | (sf & 255) << 8 | rA & 255 & 255
                            }
                        }
                        sx = (rg & 255) / 255;
                        ro = (rA & 255) / 255;
                        sc = 1 - sx;
                        rn = sx + ro * sc;
                        if (rn == 0) {
                            rA = 0
                        } else {
                            var rt;
                            var se = Math.round(((rg >> 24 & 255) * sx + (rA >> 24 & 255) * ro * sc) / rn);
                            rt = pL.__clamp[se];
                            rA = (rt & 255) << 24 | (rA >> 16 & 255 & 255) << 16 | (rA >> 8 & 255 & 255) << 8 | rA & 255 & 255;
                            rt;
                            var rI;
                            var so = Math.round(((rg >> 16 & 255) * sx + (rA >> 16 & 255) * ro * sc) / rn);
                            rI = pL.__clamp[so];
                            rA = (rA >> 24 & 255 & 255) << 24 | (rI & 255) << 16 | (rA >> 8 & 255 & 255) << 8 | rA & 255 & 255;
                            rI;
                            var rH;
                            var sm = Math.round(((rg >> 8 & 255) * sx + (rA >> 8 & 255) * ro * sc) / rn);
                            rH = pL.__clamp[sm];
                            rA = (rA >> 24 & 255 & 255) << 24 | (rA >> 16 & 255 & 255) << 16 | (rH & 255) << 8 | rA & 255 & 255;
                            rH;
                            var rG;
                            var sk = Math.round(rn * 255);
                            rG = pL.__clamp[sk];
                            rA = (rA >> 24 & 255 & 255) << 24 | (rA >> 16 & 255 & 255) << 16 | (rA >> 8 & 255 & 255) << 8 | rG & 255;
                            rG
                        }
                        if (q7) {
                            if ((rA & 255) == 0) {
                                if (rA != 0) {
                                    rA = 0
                                }
                            } else {
                                if ((rA & 255) != 255) {
                                    pL.a16 = pL.__alpha16[rA & 255];
                                    rA = ((rA >> 24 & 255) * pL.a16 >> 16 & 255) << 24 | ((rA >> 16 & 255) * pL.a16 >> 16 & 255) << 16 | ((rA >> 8 & 255) * pL.a16 >> 16 & 255) << 8 | rA & 255 & 255
                                }
                            }
                        }
                        switch (rs) {
                            case 2:
                                rc[r8] = rA >> 8 & 255;
                                rc[r8 + 1] = rA >> 16 & 255;
                                rc[r8 + 2] = rA >> 24 & 255;
                                rc[r8 + 3] = rA & 255;
                                break;
                            case 0:
                                rc[r8] = rA >> 24 & 255;
                                rc[r8 + 1] = rA >> 16 & 255;
                                rc[r8 + 2] = rA >> 8 & 255;
                                rc[r8 + 3] = rA & 255;
                                break;
                            case 1:
                                rc[r8] = rA & 255;
                                rc[r8 + 1] = rA >> 24 & 255;
                                rc[r8 + 2] = rA >> 16 & 255;
                                rc[r8 + 3] = rA >> 8 & 255;
                                break
                        }
                        q8 += 4;
                        r8 += 4
                    }
                }
            } else {
                if (sb == null) {
                    sb = new eD()
                }
                var rk = rz.buffer.data;
                var rp = rz.buffer.format;
                var rB = rz.buffer.premultiplied;
                var rV = new dm(rz, new lj(sb.x, sb.y, rJ.width, rJ.height));
                var rx;
                var rR;
                var q3 = 0;
                var js = rV.height;
                while (q3 < js) {
                    var ra = q3++;
                    q8 = rv.offset + rv.stride * ra;
                    r8 = rJ.offset + rJ.stride * ra;
                    rx = rV.offset + rV.stride * ra;
                    var rS = 0;
                    var st = rV.width;
                    while (rS < st) {
                        var rl = rS++;
                        switch (q1) {
                            case 2:
                                rg = (sw[q8 + 2] & 255) << 24 | (sw[q8 + 1] & 255) << 16 | (sw[q8] & 255) << 8 | sw[q8 + 3] & 255;
                                break;
                            case 0:
                                rg = (sw[q8] & 255) << 24 | (sw[q8 + 1] & 255) << 16 | (sw[q8 + 2] & 255) << 8 | sw[q8 + 3] & 255;
                                break;
                            case 1:
                                rg = (sw[q8 + 1] & 255) << 24 | (sw[q8 + 2] & 255) << 16 | (sw[q8 + 3] & 255) << 8 | sw[q8] & 255;
                                break
                        }
                        if (sy) {
                            if ((rg & 255) != 0 && (rg & 255) != 255) {
                                pL.unmult = 255 / (rg & 255);
                                var rf;
                                var sg = Math.round((rg >> 24 & 255) * pL.unmult);
                                rf = pL.__clamp[sg];
                                var i1;
                                var sd = Math.round((rg >> 16 & 255) * pL.unmult);
                                i1 = pL.__clamp[sd];
                                var sa;
                                var r9 = Math.round((rg >> 8 & 255) * pL.unmult);
                                sa = pL.__clamp[r9];
                                rg = (rf & 255) << 24 | (i1 & 255) << 16 | (sa & 255) << 8 | rg & 255 & 255
                            }
                        }
                        switch (rs) {
                            case 2:
                                rA = (rc[r8 + 2] & 255) << 24 | (rc[r8 + 1] & 255) << 16 | (rc[r8] & 255) << 8 | rc[r8 + 3] & 255;
                                break;
                            case 0:
                                rA = (rc[r8] & 255) << 24 | (rc[r8 + 1] & 255) << 16 | (rc[r8 + 2] & 255) << 8 | rc[r8 + 3] & 255;
                                break;
                            case 1:
                                rA = (rc[r8 + 1] & 255) << 24 | (rc[r8 + 2] & 255) << 16 | (rc[r8 + 3] & 255) << 8 | rc[r8] & 255;
                                break
                        }
                        if (q7) {
                            if ((rA & 255) != 0 && (rA & 255) != 255) {
                                pL.unmult = 255 / (rA & 255);
                                var re;
                                var r7 = Math.round((rA >> 24 & 255) * pL.unmult);
                                re = pL.__clamp[r7];
                                var q;
                                var r0 = Math.round((rA >> 16 & 255) * pL.unmult);
                                q = pL.__clamp[r0];
                                var r6;
                                var rX = Math.round((rA >> 8 & 255) * pL.unmult);
                                r6 = pL.__clamp[rX];
                                rA = (re & 255) << 24 | (q & 255) << 16 | (r6 & 255) << 8 | rA & 255 & 255
                            }
                        }
                        switch (rp) {
                            case 2:
                                rR = (rk[rx + 2] & 255) << 24 | (rk[rx + 1] & 255) << 16 | (rk[rx] & 255) << 8 | rk[rx + 3] & 255;
                                break;
                            case 0:
                                rR = (rk[rx] & 255) << 24 | (rk[rx + 1] & 255) << 16 | (rk[rx + 2] & 255) << 8 | rk[rx + 3] & 255;
                                break;
                            case 1:
                                rR = (rk[rx + 1] & 255) << 24 | (rk[rx + 2] & 255) << 16 | (rk[rx + 3] & 255) << 8 | rk[rx] & 255;
                                break
                        }
                        if (rB) {
                            if ((rR & 255) != 0 && (rR & 255) != 255) {
                                pL.unmult = 255 / (rR & 255);
                                var rd;
                                var rW = Math.round((rR >> 24 & 255) * pL.unmult);
                                rd = pL.__clamp[rW];
                                var i;
                                var rP = Math.round((rR >> 16 & 255) * pL.unmult);
                                i = pL.__clamp[rP];
                                var rZ;
                                var rO = Math.round((rR >> 8 & 255) * pL.unmult);
                                rZ = pL.__clamp[rO];
                                rR = (rd & 255) << 24 | (i & 255) << 16 | (rZ & 255) << 8 | rR & 255 & 255
                            }
                        }
                        sx = (rR & 255) / 255;
                        ro = (rA & 255) / 255;
                        sc = 1 - sx;
                        rn = sx + ro * sc;
                        if (rn == 0) {
                            rA = 0
                        } else {
                            var rF;
                            var rN = Math.round(((rg >> 24 & 255) * sx + (rA >> 24 & 255) * ro * sc) / rn);
                            rF = pL.__clamp[rN];
                            rA = (rF & 255) << 24 | (rA >> 16 & 255 & 255) << 16 | (rA >> 8 & 255 & 255) << 8 | rA & 255 & 255;
                            rF;
                            var rE;
                            var rM = Math.round(((rg >> 16 & 255) * sx + (rA >> 16 & 255) * ro * sc) / rn);
                            rE = pL.__clamp[rM];
                            rA = (rA >> 24 & 255 & 255) << 24 | (rE & 255) << 16 | (rA >> 8 & 255 & 255) << 8 | rA & 255 & 255;
                            rE;
                            var rD;
                            var rL = Math.round(((rg >> 8 & 255) * sx + (rA >> 8 & 255) * ro * sc) / rn);
                            rD = pL.__clamp[rL];
                            rA = (rA >> 24 & 255 & 255) << 24 | (rA >> 16 & 255 & 255) << 16 | (rD & 255) << 8 | rA & 255 & 255;
                            rD;
                            var rC;
                            var rK = Math.round(rn * 255);
                            rC = pL.__clamp[rK];
                            rA = (rA >> 24 & 255 & 255) << 24 | (rA >> 16 & 255 & 255) << 16 | (rA >> 8 & 255 & 255) << 8 | rC & 255;
                            rC
                        }
                        if (q7) {
                            if ((rA & 255) == 0) {
                                if (rA != 0) {
                                    rA = 0
                                }
                            } else {
                                if ((rA & 255) != 255) {
                                    pL.a16 = pL.__alpha16[rA & 255];
                                    rA = ((rA >> 24 & 255) * pL.a16 >> 16 & 255) << 24 | ((rA >> 16 & 255) * pL.a16 >> 16 & 255) << 16 | ((rA >> 8 & 255) * pL.a16 >> 16 & 255) << 8 | rA & 255 & 255
                                }
                            }
                        }
                        switch (rs) {
                            case 2:
                                rc[r8] = rA >> 8 & 255;
                                rc[r8 + 1] = rA >> 16 & 255;
                                rc[r8 + 2] = rA >> 24 & 255;
                                rc[r8 + 3] = rA & 255;
                                break;
                            case 0:
                                rc[r8] = rA >> 24 & 255;
                                rc[r8 + 1] = rA >> 16 & 255;
                                rc[r8 + 2] = rA >> 8 & 255;
                                rc[r8 + 3] = rA & 255;
                                break;
                            case 1:
                                rc[r8] = rA & 255;
                                rc[r8 + 1] = rA >> 24 & 255;
                                rc[r8 + 2] = rA >> 16 & 255;
                                rc[r8 + 3] = rA >> 8 & 255;
                                break
                        }
                        q8 += 4;
                        r8 += 4
                    }
                }
            }
        }
        rU.dirty = true
    };
    iv.fillRect = function(q8, q, ra, rb) {
        var js;
        switch (rb) {
            case 1:
                var q4 = ra;
                var qY = 0;
                qY = (q4 >> 16 & 255 & 255) << 24 | (q4 >> 8 & 255 & 255) << 16 | (q4 & 255 & 255) << 8 | q4 >> 24 & 255 & 255;
                js = qY;
                break;
            case 2:
                var q1 = ra;
                var rc = 0;
                rc = (q1 >> 8 & 255 & 255) << 24 | (q1 >> 16 & 255 & 255) << 16 | (q1 >> 24 & 255 & 255) << 8 | q1 & 255 & 255;
                js = rc;
                break;
            default:
                js = ra
        }
        if (!q8.get_transparent()) {
            js = (js >> 24 & 255 & 255) << 24 | (js >> 16 & 255 & 255) << 16 | (js >> 8 & 255 & 255) << 8 | 255;
            255
        }
        var rd = q8.buffer.data;
        if (rd == null) {
            return
        }
        var q9 = q8.buffer.format;
        var i1 = q8.buffer.premultiplied;
        var i = new dm(q8, q);
        var q0;
        var q7 = 0;
        var i2 = i.height;
        while (q7 < i2) {
            var q2 = q7++;
            q0 = i.offset + i.stride * q2;
            var q5 = 0;
            var q6 = i.width;
            while (q5 < q6) {
                var q3 = q5++;
                var qZ = q0 + q3 * 4;
                if (i1) {
                    if ((js & 255) == 0) {
                        if (js != 0) {
                            js = 0
                        }
                    } else {
                        if ((js & 255) != 255) {
                            pL.a16 = pL.__alpha16[js & 255];
                            js = ((js >> 24 & 255) * pL.a16 >> 16 & 255) << 24 | ((js >> 16 & 255) * pL.a16 >> 16 & 255) << 16 | ((js >> 8 & 255) * pL.a16 >> 16 & 255) << 8 | js & 255 & 255
                        }
                    }
                }
                switch (q9) {
                    case 2:
                        rd[qZ] = js >> 8 & 255;
                        rd[qZ + 1] = js >> 16 & 255;
                        rd[qZ + 2] = js >> 24 & 255;
                        rd[qZ + 3] = js & 255;
                        break;
                    case 0:
                        rd[qZ] = js >> 24 & 255;
                        rd[qZ + 1] = js >> 16 & 255;
                        rd[qZ + 2] = js >> 8 & 255;
                        rd[qZ + 3] = js & 255;
                        break;
                    case 1:
                        rd[qZ] = js & 255;
                        rd[qZ + 1] = js >> 24 & 255;
                        rd[qZ + 2] = js >> 16 & 255;
                        rd[qZ + 3] = js >> 8 & 255;
                        break
                }
            }
        }
        q8.dirty = true
    };
    iv.floodFill = function(qZ, rd, rc, q8, q9) {
        var rr = qZ.buffer.data;
        if (rr == null) {
            return
        }
        if (q9 == 1) {
            q8 = (q8 & 16777215) << 8 | q8 >> 24 & 255
        }
        var q6 = qZ.buffer.format;
        var rt = qZ.buffer.premultiplied;
        var rv = q8;
        var ra;
        var re = (rc + qZ.offsetY) * (qZ.buffer.width * 4) + (rd + qZ.offsetX) * 4;
        switch (q6) {
            case 2:
                ra = (rr[re + 2] & 255) << 24 | (rr[re + 1] & 255) << 16 | (rr[re] & 255) << 8 | rr[re + 3] & 255;
                break;
            case 0:
                ra = (rr[re] & 255) << 24 | (rr[re + 1] & 255) << 16 | (rr[re + 2] & 255) << 8 | rr[re + 3] & 255;
                break;
            case 1:
                ra = (rr[re + 1] & 255) << 24 | (rr[re + 2] & 255) << 16 | (rr[re + 3] & 255) << 8 | rr[re] & 255;
                break
        }
        if (rt) {
            if ((ra & 255) != 0 && (ra & 255) != 255) {
                pL.unmult = 255 / (ra & 255);
                var rh;
                var rs = Math.round((ra >> 24 & 255) * pL.unmult);
                rh = pL.__clamp[rs];
                var rp;
                var rm = Math.round((ra >> 16 & 255) * pL.unmult);
                rp = pL.__clamp[rm];
                var ru;
                var rl = Math.round((ra >> 8 & 255) * pL.unmult);
                ru = pL.__clamp[rl];
                ra = (rh & 255) << 24 | (rp & 255) << 16 | (ru & 255) << 8 | ra & 255 & 255
            }
        }
        if (!qZ.get_transparent()) {
            rv = (rv >> 24 & 255 & 255) << 24 | (rv >> 16 & 255 & 255) << 16 | (rv >> 8 & 255 & 255) << 8 | 255;
            255;
            ra = (ra >> 24 & 255 & 255) << 24 | (ra >> 16 & 255 & 255) << 16 | (ra >> 8 & 255 & 255) << 8 | 255;
            255
        }
        if (rv == ra) {
            return
        }
        var q0 = [0, -1, 1, 0];
        var js = [-1, 0, 0, 1];
        var rg = -qZ.offsetX;
        var rf = -qZ.offsetY;
        var q5 = rg + qZ.width;
        var q4 = rf + qZ.height;
        var q1 = [];
        q1.push(rd);
        q1.push(rc);
        var qY;
        var i2;
        var i1;
        var q;
        var q3;
        var rb;
        while (q1.length > 0) {
            i2 = q1.pop();
            qY = q1.pop();
            var rq = 0;
            while (rq < 4) {
                var ro = rq++;
                i1 = qY + q0[ro];
                q = i2 + js[ro];
                if (i1 < rg || q < rf || i1 >= q5 || q >= q4) {
                    continue
                }
                q3 = (q * qZ.width + i1) * 4;
                switch (q6) {
                    case 2:
                        rb = (rr[q3 + 2] & 255) << 24 | (rr[q3 + 1] & 255) << 16 | (rr[q3] & 255) << 8 | rr[q3 + 3] & 255;
                        break;
                    case 0:
                        rb = (rr[q3] & 255) << 24 | (rr[q3 + 1] & 255) << 16 | (rr[q3 + 2] & 255) << 8 | rr[q3 + 3] & 255;
                        break;
                    case 1:
                        rb = (rr[q3 + 1] & 255) << 24 | (rr[q3 + 2] & 255) << 16 | (rr[q3 + 3] & 255) << 8 | rr[q3] & 255;
                        break
                }
                if (rt) {
                    if ((rb & 255) != 0 && (rb & 255) != 255) {
                        pL.unmult = 255 / (rb & 255);
                        var q2;
                        var rk = Math.round((rb >> 24 & 255) * pL.unmult);
                        q2 = pL.__clamp[rk];
                        var rn;
                        var rj = Math.round((rb >> 16 & 255) * pL.unmult);
                        rn = pL.__clamp[rj];
                        var q7;
                        var ri = Math.round((rb >> 8 & 255) * pL.unmult);
                        q7 = pL.__clamp[ri];
                        rb = (q2 & 255) << 24 | (rn & 255) << 16 | (q7 & 255) << 8 | rb & 255 & 255
                    }
                }
                if (rb == ra) {
                    if (rt) {
                        if ((rv & 255) == 0) {
                            if (rv != 0) {
                                rv = 0
                            }
                        } else {
                            if ((rv & 255) != 255) {
                                pL.a16 = pL.__alpha16[rv & 255];
                                rv = ((rv >> 24 & 255) * pL.a16 >> 16 & 255) << 24 | ((rv >> 16 & 255) * pL.a16 >> 16 & 255) << 16 | ((rv >> 8 & 255) * pL.a16 >> 16 & 255) << 8 | rv & 255 & 255
                            }
                        }
                    }
                    switch (q6) {
                        case 2:
                            rr[q3] = rv >> 8 & 255;
                            rr[q3 + 1] = rv >> 16 & 255;
                            rr[q3 + 2] = rv >> 24 & 255;
                            rr[q3 + 3] = rv & 255;
                            break;
                        case 0:
                            rr[q3] = rv >> 24 & 255;
                            rr[q3 + 1] = rv >> 16 & 255;
                            rr[q3 + 2] = rv >> 8 & 255;
                            rr[q3 + 3] = rv & 255;
                            break;
                        case 1:
                            rr[q3] = rv & 255;
                            rr[q3 + 1] = rv >> 24 & 255;
                            rr[q3 + 2] = rv >> 16 & 255;
                            rr[q3 + 3] = rv >> 8 & 255;
                            break
                    }
                    q1.push(i1);
                    q1.push(q)
                }
            }
        }
        qZ.dirty = true
    };
    iv.getColorBoundsRect = function(i2, rr, rb, ru, rf) {
        if (ru == null) {
            ru = true
        }
        var js = i2.width + 1;
        var rm = 0;
        var qY = i2.height + 1;
        var i = 0;
        var rh;
        var rt;
        switch (rf) {
            case 1:
                var rD = rb;
                var rw = 0;
                rw = (rD >> 16 & 255 & 255) << 24 | (rD >> 8 & 255 & 255) << 16 | (rD & 255 & 255) << 8 | rD >> 24 & 255 & 255;
                rh = rw;
                var ro = rr;
                var re = 0;
                re = (ro >> 16 & 255 & 255) << 24 | (ro >> 8 & 255 & 255) << 16 | (ro & 255 & 255) << 8 | ro >> 24 & 255 & 255;
                rt = re;
                break;
            case 2:
                var q = rb;
                var rc = 0;
                rc = (q >> 8 & 255 & 255) << 24 | (q >> 16 & 255 & 255) << 16 | (q >> 24 & 255 & 255) << 8 | q & 255 & 255;
                rh = rc;
                var i1 = rr;
                var ra = 0;
                ra = (i1 >> 8 & 255 & 255) << 24 | (i1 >> 16 & 255 & 255) << 16 | (i1 >> 24 & 255 & 255) << 8 | i1 & 255 & 255;
                rt = ra;
                break;
            default:
                rh = rb;
                rt = rr
        }
        if (!i2.get_transparent()) {
            rh = (rh >> 24 & 255 & 255) << 24 | (rh >> 16 & 255 & 255) << 16 | (rh >> 8 & 255 & 255) << 8 | 255;
            255;
            rt = (rt >> 24 & 255 & 255) << 24 | (rt >> 16 & 255 & 255) << 16 | (rt >> 8 & 255 & 255) << 8 | 255;
            255
        }
        var q6;
        var q7;
        var rv = 0;
        var rB = i2.width;
        while (rv < rB) {
            var rj = rv++;
            q7 = false;
            var rq = 0;
            var rs = i2.height;
            while (rq < rs) {
                var ri = rq++;
                q6 = i2.getPixel32(rj, ri, 0);
                if (ru) {
                    q7 = (q6 & rt) == rh
                } else {
                    q7 = (q6 & rt) != rh
                }
                if (q7) {
                    if (rj < js) {
                        js = rj
                    }
                    break
                }
            }
            if (q7) {
                break
            }
        }
        var q8;
        var rg = 0;
        var rp = i2.width;
        while (rg < rp) {
            var q4 = rg++;
            q8 = i2.width - 1 - q4;
            q7 = false;
            var rA = 0;
            var q1 = i2.height;
            while (rA < q1) {
                var rF = rA++;
                q6 = i2.getPixel32(q8, rF, 0);
                if (ru) {
                    q7 = (q6 & rt) == rh
                } else {
                    q7 = (q6 & rt) != rh
                }
                if (q7) {
                    if (q8 > rm) {
                        rm = q8
                    }
                    break
                }
            }
            if (q7) {
                break
            }
        }
        var rd = 0;
        var rn = i2.height;
        while (rd < rn) {
            var rE = rd++;
            q7 = false;
            var rz = 0;
            var q0 = i2.width;
            while (rz < q0) {
                var q3 = rz++;
                q6 = i2.getPixel32(q3, rE, 0);
                if (ru) {
                    q7 = (q6 & rt) == rh
                } else {
                    q7 = (q6 & rt) != rh
                }
                if (q7) {
                    if (rE < qY) {
                        qY = rE
                    }
                    break
                }
            }
            if (q7) {
                break
            }
        }
        var q5;
        var q9 = 0;
        var rl = i2.height;
        while (q9 < rl) {
            var rC = q9++;
            q5 = i2.height - 1 - rC;
            q7 = false;
            var rx = 0;
            var qZ = i2.width;
            while (rx < qZ) {
                var q2 = rx++;
                q6 = i2.getPixel32(q2, q5, 0);
                if (ru) {
                    q7 = (q6 & rt) == rh
                } else {
                    q7 = (q6 & rt) != rh
                }
                if (q7) {
                    if (q5 > i) {
                        i = q5
                    }
                    break
                }
            }
            if (q7) {
                break
            }
        }
        var rk = rm - js;
        var ry = i - qY;
        if (rk > 0) {
            rk++
        }
        if (ry > 0) {
            ry++
        }
        if (rk < 0) {
            rk = 0
        }
        if (ry < 0) {
            ry = 0
        }
        if (js == rm) {
            rk = 1
        }
        if (qY == i) {
            ry = 1
        }
        if (js > i2.width) {
            js = 0
        }
        if (qY > i2.height) {
            qY = 0
        }
        return new lj(js, qY, rk, ry)
    };
    iv.getPixel = function(i1, q3, q2, q5) {
        var q;
        var qY = i1.buffer.data;
        var i2 = 4 * (q2 + i1.offsetY) * i1.buffer.width + (q3 + i1.offsetX) * 4;
        switch (i1.buffer.format) {
            case 2:
                q = (qY[i2 + 2] & 255) << 24 | (qY[i2 + 1] & 255) << 16 | (qY[i2] & 255) << 8 | qY[i2 + 3] & 255;
                break;
            case 0:
                q = (qY[i2] & 255) << 24 | (qY[i2 + 1] & 255) << 16 | (qY[i2 + 2] & 255) << 8 | qY[i2 + 3] & 255;
                break;
            case 1:
                q = (qY[i2 + 1] & 255) << 24 | (qY[i2 + 2] & 255) << 16 | (qY[i2 + 3] & 255) << 8 | qY[i2] & 255;
                break
        }
        if (i1.buffer.premultiplied) {
            if ((q & 255) != 0 && (q & 255) != 255) {
                pL.unmult = 255 / (q & 255);
                var i;
                var q4 = Math.round((q >> 24 & 255) * pL.unmult);
                i = pL.__clamp[q4];
                var q0;
                var qZ = Math.round((q >> 16 & 255) * pL.unmult);
                q0 = pL.__clamp[qZ];
                var q1;
                var js = Math.round((q >> 8 & 255) * pL.unmult);
                q1 = pL.__clamp[js];
                q = (i & 255) << 24 | (q0 & 255) << 16 | (q1 & 255) << 8 | q & 255 & 255
            }
        }
        q = (q >> 24 & 255 & 255) << 24 | (q >> 16 & 255 & 255) << 16 | (q >> 8 & 255 & 255) << 8 | 0;
        0;
        switch (q5) {
            case 1:
                return (function(q7) {
                    var q6;
                    var q8 = 0;
                    q8 = (q & 255 & 255) << 24 | (q >> 24 & 255 & 255) << 16 | (q >> 16 & 255 & 255) << 8 | q >> 8 & 255 & 255;
                    q6 = q8;
                    return q6
                }(this));
            case 2:
                return (function(q8) {
                    var q6;
                    var q7 = 0;
                    q7 = (q >> 8 & 255 & 255) << 24 | (q >> 16 & 255 & 255) << 16 | (q >> 24 & 255 & 255) << 8 | q & 255 & 255;
                    q6 = q7;
                    return q6
                }(this));
            default:
                return q
        }
    };
    iv.getPixel32 = function(i1, q3, q2, q5) {
        var q;
        var qY = i1.buffer.data;
        var i2 = 4 * (q2 + i1.offsetY) * i1.buffer.width + (q3 + i1.offsetX) * 4;
        switch (i1.buffer.format) {
            case 2:
                q = (qY[i2 + 2] & 255) << 24 | (qY[i2 + 1] & 255) << 16 | (qY[i2] & 255) << 8 | qY[i2 + 3] & 255;
                break;
            case 0:
                q = (qY[i2] & 255) << 24 | (qY[i2 + 1] & 255) << 16 | (qY[i2 + 2] & 255) << 8 | qY[i2 + 3] & 255;
                break;
            case 1:
                q = (qY[i2 + 1] & 255) << 24 | (qY[i2 + 2] & 255) << 16 | (qY[i2 + 3] & 255) << 8 | qY[i2] & 255;
                break
        }
        if (i1.buffer.premultiplied) {
            if ((q & 255) != 0 && (q & 255) != 255) {
                pL.unmult = 255 / (q & 255);
                var i;
                var q4 = Math.round((q >> 24 & 255) * pL.unmult);
                i = pL.__clamp[q4];
                var q0;
                var qZ = Math.round((q >> 16 & 255) * pL.unmult);
                q0 = pL.__clamp[qZ];
                var q1;
                var js = Math.round((q >> 8 & 255) * pL.unmult);
                q1 = pL.__clamp[js];
                q = (i & 255) << 24 | (q0 & 255) << 16 | (q1 & 255) << 8 | q & 255 & 255
            }
        }
        switch (q5) {
            case 1:
                return (function(q7) {
                    var q6;
                    var q8 = 0;
                    q8 = (q & 255 & 255) << 24 | (q >> 24 & 255 & 255) << 16 | (q >> 16 & 255 & 255) << 8 | q >> 8 & 255 & 255;
                    q6 = q8;
                    return q6
                }(this));
            case 2:
                return (function(q8) {
                    var q6;
                    var q7 = 0;
                    q7 = (q >> 8 & 255 & 255) << 24 | (q >> 16 & 255 & 255) << 16 | (q >> 24 & 255 & 255) << 8 | q & 255 & 255;
                    q6 = q7;
                    return q6
                }(this));
            default:
                return q
        }
    };
    iv.getPixels = function(rc, i1, rf) {
        if (rc.buffer.data == null) {
            return null
        }
        var qZ = i1.width * i1.height | 0;
        var rb = eg.alloc(qZ * 4);
        var rk = rc.buffer.data;
        var q2 = rc.buffer.format;
        var i2 = rc.buffer.premultiplied;
        var q = new dm(rc, i1);
        var rj;
        var q5;
        var q1;
        var q0;
        var i = 0;
        var ra = 0;
        var qY = q.height;
        while (ra < qY) {
            var q3 = ra++;
            rj = q.offset + q.stride * q3;
            var q6 = 0;
            var q7 = q.width;
            while (q6 < q7) {
                var q4 = q6++;
                switch (q2) {
                    case 2:
                        q0 = (rk[rj + 2] & 255) << 24 | (rk[rj + 1] & 255) << 16 | (rk[rj] & 255) << 8 | rk[rj + 3] & 255;
                        break;
                    case 0:
                        q0 = (rk[rj] & 255) << 24 | (rk[rj + 1] & 255) << 16 | (rk[rj + 2] & 255) << 8 | rk[rj + 3] & 255;
                        break;
                    case 1:
                        q0 = (rk[rj + 1] & 255) << 24 | (rk[rj + 2] & 255) << 16 | (rk[rj + 3] & 255) << 8 | rk[rj] & 255;
                        break
                }
                if (i2) {
                    if ((q0 & 255) != 0 && (q0 & 255) != 255) {
                        pL.unmult = 255 / (q0 & 255);
                        var q9;
                        var q8 = Math.round((q0 >> 24 & 255) * pL.unmult);
                        q9 = pL.__clamp[q8];
                        var rg;
                        var re = Math.round((q0 >> 16 & 255) * pL.unmult);
                        rg = pL.__clamp[re];
                        var ri;
                        var rd = Math.round((q0 >> 8 & 255) * pL.unmult);
                        ri = pL.__clamp[rd];
                        q0 = (q9 & 255) << 24 | (rg & 255) << 16 | (ri & 255) << 8 | q0 & 255 & 255
                    }
                }
                switch (rf) {
                    case 1:
                        var js = 0;
                        js = (q0 & 255 & 255) << 24 | (q0 >> 24 & 255 & 255) << 16 | (q0 >> 16 & 255 & 255) << 8 | q0 >> 8 & 255 & 255;
                        q5 = js;
                        q0 = q5;
                        break;
                    case 2:
                        var rh = 0;
                        rh = (q0 >> 8 & 255 & 255) << 24 | (q0 >> 16 & 255 & 255) << 16 | (q0 >> 24 & 255 & 255) << 8 | q0 & 255 & 255;
                        q1 = rh;
                        q0 = q1;
                        break;
                    default:
                }
                rb.set(i++, q0 >> 24 & 255);
                rb.set(i++, q0 >> 16 & 255);
                rb.set(i++, q0 >> 8 & 255);
                rb.set(i++, q0 & 255);
                rj += 4
            }
        }
        return rb
    };
    iv.merge = function(q, qY, q7, i, i2, q9, q3, i1) {
        if (q.buffer.data == null || qY.buffer.data == null) {
            return
        }
        var ry = new dm(qY, q7);
        var ra = new dm(q, new lj(i.x, i.y, ry.width, ry.height));
        var rs = qY.buffer.data;
        var q4 = q.buffer.data;
        var q1 = qY.buffer.format;
        var js = q.buffer.format;
        var q6 = qY.buffer.premultiplied;
        var q2 = q.buffer.premultiplied;
        var q0;
        var q8;
        var rb;
        var rq;
        var rr = 0;
        var rv = ra.height;
        while (rr < rv) {
            var rf = rr++;
            q0 = ry.offset + ry.stride * rf;
            q8 = ra.offset + ra.stride * rf;
            var ro = 0;
            var rp = ra.width;
            while (ro < rp) {
                var rg = ro++;
                switch (q1) {
                    case 2:
                        rb = (rs[q0 + 2] & 255) << 24 | (rs[q0 + 1] & 255) << 16 | (rs[q0] & 255) << 8 | rs[q0 + 3] & 255;
                        break;
                    case 0:
                        rb = (rs[q0] & 255) << 24 | (rs[q0 + 1] & 255) << 16 | (rs[q0 + 2] & 255) << 8 | rs[q0 + 3] & 255;
                        break;
                    case 1:
                        rb = (rs[q0 + 1] & 255) << 24 | (rs[q0 + 2] & 255) << 16 | (rs[q0 + 3] & 255) << 8 | rs[q0] & 255;
                        break
                }
                if (q6) {
                    if ((rb & 255) != 0 && (rb & 255) != 255) {
                        pL.unmult = 255 / (rb & 255);
                        var ri;
                        var rw = Math.round((rb >> 24 & 255) * pL.unmult);
                        ri = pL.__clamp[rw];
                        var ru;
                        var rn = Math.round((rb >> 16 & 255) * pL.unmult);
                        ru = pL.__clamp[rn];
                        var rx;
                        var rm = Math.round((rb >> 8 & 255) * pL.unmult);
                        rx = pL.__clamp[rm];
                        rb = (ri & 255) << 24 | (ru & 255) << 16 | (rx & 255) << 8 | rb & 255 & 255
                    }
                }
                switch (js) {
                    case 2:
                        rq = (q4[q8 + 2] & 255) << 24 | (q4[q8 + 1] & 255) << 16 | (q4[q8] & 255) << 8 | q4[q8 + 3] & 255;
                        break;
                    case 0:
                        rq = (q4[q8] & 255) << 24 | (q4[q8 + 1] & 255) << 16 | (q4[q8 + 2] & 255) << 8 | q4[q8 + 3] & 255;
                        break;
                    case 1:
                        rq = (q4[q8 + 1] & 255) << 24 | (q4[q8 + 2] & 255) << 16 | (q4[q8 + 3] & 255) << 8 | q4[q8] & 255;
                        break
                }
                if (q2) {
                    if ((rq & 255) != 0 && (rq & 255) != 255) {
                        pL.unmult = 255 / (rq & 255);
                        var qZ;
                        var rl = Math.round((rq >> 24 & 255) * pL.unmult);
                        qZ = pL.__clamp[rl];
                        var rt;
                        var rk = Math.round((rq >> 16 & 255) * pL.unmult);
                        rt = pL.__clamp[rk];
                        var q5;
                        var rj = Math.round((rq >> 8 & 255) * pL.unmult);
                        q5 = pL.__clamp[rj];
                        rq = (qZ & 255) << 24 | (rt & 255) << 16 | (q5 & 255) << 8 | rq & 255 & 255
                    }
                }
                var rh = ((rb >> 24 & 255) * i2 + (rq >> 24 & 255) * (256 - i2)) / 256 | 0;
                rq = (rh & 255) << 24 | (rq >> 16 & 255 & 255) << 16 | (rq >> 8 & 255 & 255) << 8 | rq & 255 & 255;
                rh;
                var re = ((rb >> 16 & 255) * q9 + (rq >> 16 & 255) * (256 - q9)) / 256 | 0;
                rq = (rq >> 24 & 255 & 255) << 24 | (re & 255) << 16 | (rq >> 8 & 255 & 255) << 8 | rq & 255 & 255;
                re;
                var rd = ((rb >> 8 & 255) * q3 + (rq >> 8 & 255) * (256 - q3)) / 256 | 0;
                rq = (rq >> 24 & 255 & 255) << 24 | (rq >> 16 & 255 & 255) << 16 | (rd & 255) << 8 | rq & 255 & 255;
                rd;
                var rc = ((rb & 255) * i1 + (rq & 255) * (256 - i1)) / 256 | 0;
                rq = (rq >> 24 & 255 & 255) << 24 | (rq >> 16 & 255 & 255) << 16 | (rq >> 8 & 255 & 255) << 8 | rc & 255;
                rc;
                if (q2) {
                    if ((rq & 255) == 0) {
                        if (rq != 0) {
                            rq = 0
                        }
                    } else {
                        if ((rq & 255) != 255) {
                            pL.a16 = pL.__alpha16[rq & 255];
                            rq = ((rq >> 24 & 255) * pL.a16 >> 16 & 255) << 24 | ((rq >> 16 & 255) * pL.a16 >> 16 & 255) << 16 | ((rq >> 8 & 255) * pL.a16 >> 16 & 255) << 8 | rq & 255 & 255
                        }
                    }
                }
                switch (js) {
                    case 2:
                        q4[q8] = rq >> 8 & 255;
                        q4[q8 + 1] = rq >> 16 & 255;
                        q4[q8 + 2] = rq >> 24 & 255;
                        q4[q8 + 3] = rq & 255;
                        break;
                    case 0:
                        q4[q8] = rq >> 24 & 255;
                        q4[q8 + 1] = rq >> 16 & 255;
                        q4[q8 + 2] = rq >> 8 & 255;
                        q4[q8 + 3] = rq & 255;
                        break;
                    case 1:
                        q4[q8] = rq & 255;
                        q4[q8 + 1] = rq >> 24 & 255;
                        q4[q8 + 2] = rq >> 16 & 255;
                        q4[q8 + 3] = rq >> 8 & 255;
                        break
                }
                q0 += 4;
                q8 += 4
            }
        }
        q.dirty = true
    };
    iv.multiplyAlpha = function(js) {
        var qZ = js.buffer.data;
        if (qZ == null || !js.buffer.transparent) {
            return
        }
        var q2 = js.buffer.format;
        var i2 = qZ.length / 4 | 0;
        var q;
        var q1 = 0;
        while (q1 < i2) {
            var q0 = q1++;
            var qY = q0 * 4;
            switch (q2) {
                case 2:
                    q = (qZ[qY + 2] & 255) << 24 | (qZ[qY + 1] & 255) << 16 | (qZ[qY] & 255) << 8 | qZ[qY + 3] & 255;
                    break;
                case 0:
                    q = (qZ[qY] & 255) << 24 | (qZ[qY + 1] & 255) << 16 | (qZ[qY + 2] & 255) << 8 | qZ[qY + 3] & 255;
                    break;
                case 1:
                    q = (qZ[qY + 1] & 255) << 24 | (qZ[qY + 2] & 255) << 16 | (qZ[qY + 3] & 255) << 8 | qZ[qY] & 255;
                    break
            }
            var i1 = q0 * 4;
            if ((q & 255) == 0) {
                if (q != 0) {
                    q = 0
                }
            } else {
                if ((q & 255) != 255) {
                    pL.a16 = pL.__alpha16[q & 255];
                    q = ((q >> 24 & 255) * pL.a16 >> 16 & 255) << 24 | ((q >> 16 & 255) * pL.a16 >> 16 & 255) << 16 | ((q >> 8 & 255) * pL.a16 >> 16 & 255) << 8 | q & 255 & 255
                }
            }
            switch (q2) {
                case 2:
                    qZ[i1] = q >> 8 & 255;
                    qZ[i1 + 1] = q >> 16 & 255;
                    qZ[i1 + 2] = q >> 24 & 255;
                    qZ[i1 + 3] = q & 255;
                    break;
                case 0:
                    qZ[i1] = q >> 24 & 255;
                    qZ[i1 + 1] = q >> 16 & 255;
                    qZ[i1 + 2] = q >> 8 & 255;
                    qZ[i1 + 3] = q & 255;
                    break;
                case 1:
                    qZ[i1] = q & 255;
                    qZ[i1 + 1] = q >> 24 & 255;
                    qZ[i1 + 2] = q >> 16 & 255;
                    qZ[i1 + 3] = q >> 8 & 255;
                    break
            }
        }
        js.buffer.premultiplied = true;
        js.dirty = true
    };
    iv.resize = function(q8, q4, rb) {
        var rc = q8.buffer;
        if (rc.width == q4 && rc.height == rb) {
            return
        }
        var re = new oG((function(rp) {
            var rn;
            var ro = q4 * rb * 4;
            var rm;
            if (ro != null) {
                rm = new qw(ro)
            } else {
                rm = null
            }
            rn = rm;
            return rn
        }(this)), q4, rb);
        var q2 = q8.width;
        var rf = q8.height;
        var rj = q8.get_data();
        var q0 = re.data;
        var js;
        var q;
        var rl;
        var i;
        var qZ;
        var ra;
        var q9;
        var q6;
        var q5;
        var ri;
        var i1;
        var qY;
        var rd;
        var i2 = 0;
        while (i2 < rb) {
            var q1 = i2++;
            var q7 = 0;
            while (q7 < q4) {
                var q3 = q7++;
                q6 = (q3 + 0.5) / q4 * q2 - 0.5;
                q5 = (q1 + 0.5) / rb * rf - 0.5;
                ra = q6 | 0;
                q9 = q5 | 0;
                js = (q9 * q2 + ra) * 4;
                if (ra < q2 - 1) {
                    q = js + 4
                } else {
                    q = js
                }
                if (q9 < rf - 1) {
                    rl = js + q2 * 4
                } else {
                    rl = js
                }
                if (q != js) {
                    i = rl + 4
                } else {
                    i = rl
                }
                qZ = (q1 * q4 + q3) * 4;
                ri = q6 - ra;
                i1 = q5 - q9;
                qY = 1 - ri;
                rd = 1 - i1;
                var rk = kr["int"]((fq.toFloat(rj[js]) * qY + fq.toFloat(rj[q]) * ri) * rd + (fq.toFloat(rj[rl]) * qY + fq.toFloat(rj[i]) * ri) * i1);
                q0[qZ] = rk;
                var rh = kr["int"]((fq.toFloat(rj[js + 1]) * qY + fq.toFloat(rj[q + 1]) * ri) * rd + (fq.toFloat(rj[rl + 1]) * qY + fq.toFloat(rj[i + 1]) * ri) * i1);
                q0[qZ + 1] = rh;
                var rg = kr["int"]((fq.toFloat(rj[js + 2]) * qY + fq.toFloat(rj[q + 2]) * ri) * rd + (fq.toFloat(rj[rl + 2]) * qY + fq.toFloat(rj[i + 2]) * ri) * i1);
                q0[qZ + 2] = rg;
                if (rj[q + 3] == 0 || rj[rl + 3] == 0 || rj[i + 3] == 0) {
                    q0[qZ + 3] = 0
                } else {
                    q0[qZ + 3] = rj[js + 3]
                }
            }
        }
        rc.data = re.data;
        rc.width = q4;
        rc.height = rb
    };
    iv.resizeBuffer = function(i1, qY, q) {
        var i2 = i1.buffer;
        var js = i1.get_data();
        var q8;
        var i = qY * q * 4;
        var q0;
        if (i != null) {
            q0 = new qw(i)
        } else {
            q0 = null
        }
        q8 = q0;
        var q2;
        var q1;
        var q5 = 0;
        var qZ = i2.height;
        while (q5 < qZ) {
            var q6 = q5++;
            var q3 = 0;
            var q4 = i2.width;
            while (q3 < q4) {
                var q7 = q3++;
                q2 = (q6 * i2.width + q7) * 4;
                q1 = (q6 * qY + q7) * 4;
                q8[q1] = js[q2];
                q8[q1 + 1] = js[q2 + 1];
                q8[q1 + 2] = js[q2 + 2];
                q8[q1 + 3] = js[q2 + 3]
            }
        }
        i2.data = q8;
        i2.width = qY;
        i2.height = q
    };
    iv.setFormat = function(q3, q7) {
        var rc = q3.buffer.data;
        if (rc == null) {
            return
        }
        var q0;
        var i2;
        var js = rc.length / 4 | 0;
        var q6;
        var q;
        var qZ;
        var rd;
        var q4;
        var re;
        var qY;
        var rb;
        var q2;
        var q8;
        var q9;
        var ra;
        var i1 = q3.get_format();
        switch (i1) {
            case 0:
                q6 = 0;
                q = 1;
                qZ = 2;
                rd = 3;
                break;
            case 1:
                q6 = 1;
                q = 2;
                qZ = 3;
                rd = 0;
                break;
            case 2:
                q6 = 2;
                q = 1;
                qZ = 0;
                rd = 3;
                break
        }
        switch (q7) {
            case 0:
                q4 = 0;
                re = 1;
                qY = 2;
                rb = 3;
                break;
            case 1:
                q4 = 1;
                re = 2;
                qY = 3;
                rb = 0;
                break;
            case 2:
                q4 = 2;
                re = 1;
                qY = 0;
                rb = 3;
                break
        }
        var q1 = 0;
        while (q1 < js) {
            var q5 = q1++;
            q0 = q5 * 4;
            q2 = rc[q0 + q6];
            q8 = rc[q0 + q];
            q9 = rc[q0 + qZ];
            ra = rc[q0 + rd];
            rc[q0 + q4] = q2;
            rc[q0 + re] = q8;
            rc[q0 + qY] = q9;
            rc[q0 + rb] = ra
        }
        q3.buffer.format = q7;
        q3.dirty = true
    };
    iv.setPixel = function(q3, qZ, qY, q7, ra) {
        var i;
        switch (ra) {
            case 1:
                var q0 = q7;
                var q = 0;
                q = (q0 >> 16 & 255 & 255) << 24 | (q0 >> 8 & 255 & 255) << 16 | (q0 & 255 & 255) << 8 | q0 >> 24 & 255 & 255;
                i = q;
                break;
            case 2:
                var js = q7;
                var rc = 0;
                rc = (js >> 8 & 255 & 255) << 24 | (js >> 16 & 255 & 255) << 16 | (js >> 24 & 255 & 255) << 8 | js & 255 & 255;
                i = rc;
                break;
            default:
                i = q7
        }
        var q4 = 0;
        var re = q3.buffer.data;
        var i1 = 4 * (qY + q3.offsetY) * q3.buffer.width + (qZ + q3.offsetX) * 4;
        switch (q3.buffer.format) {
            case 2:
                q4 = (re[i1 + 2] & 255) << 24 | (re[i1 + 1] & 255) << 16 | (re[i1] & 255) << 8 | re[i1 + 3] & 255;
                break;
            case 0:
                q4 = (re[i1] & 255) << 24 | (re[i1 + 1] & 255) << 16 | (re[i1 + 2] & 255) << 8 | re[i1 + 3] & 255;
                break;
            case 1:
                q4 = (re[i1 + 1] & 255) << 24 | (re[i1 + 2] & 255) << 16 | (re[i1 + 3] & 255) << 8 | re[i1] & 255;
                break
        }
        if (q3.buffer.premultiplied) {
            if ((q4 & 255) != 0 && (q4 & 255) != 255) {
                pL.unmult = 255 / (q4 & 255);
                var q2;
                var q1 = Math.round((q4 >> 24 & 255) * pL.unmult);
                q2 = pL.__clamp[q1];
                var rb;
                var q9 = Math.round((q4 >> 16 & 255) * pL.unmult);
                rb = pL.__clamp[q9];
                var rd;
                var q8 = Math.round((q4 >> 8 & 255) * pL.unmult);
                rd = pL.__clamp[q8];
                q4 = (q2 & 255) << 24 | (rb & 255) << 16 | (rd & 255) << 8 | q4 & 255 & 255
            }
        }
        var q6 = q4 & 255;
        i = (i >> 24 & 255 & 255) << 24 | (i >> 16 & 255 & 255) << 16 | (i >> 8 & 255 & 255) << 8 | q6 & 255;
        q6;
        var i2 = q3.buffer.data;
        var q5 = 4 * (qY + q3.offsetY) * q3.buffer.width + (qZ + q3.offsetX) * 4;
        if (q3.buffer.premultiplied) {
            if ((i & 255) == 0) {
                if (i != 0) {
                    i = 0
                }
            } else {
                if ((i & 255) != 255) {
                    pL.a16 = pL.__alpha16[i & 255];
                    i = ((i >> 24 & 255) * pL.a16 >> 16 & 255) << 24 | ((i >> 16 & 255) * pL.a16 >> 16 & 255) << 16 | ((i >> 8 & 255) * pL.a16 >> 16 & 255) << 8 | i & 255 & 255
                }
            }
        }
        switch (q3.buffer.format) {
            case 2:
                i2[q5] = i >> 8 & 255;
                i2[q5 + 1] = i >> 16 & 255;
                i2[q5 + 2] = i >> 24 & 255;
                i2[q5 + 3] = i & 255;
                break;
            case 0:
                i2[q5] = i >> 24 & 255;
                i2[q5 + 1] = i >> 16 & 255;
                i2[q5 + 2] = i >> 8 & 255;
                i2[q5 + 3] = i & 255;
                break;
            case 1:
                i2[q5] = i & 255;
                i2[q5 + 1] = i >> 24 & 255;
                i2[q5 + 2] = i >> 16 & 255;
                i2[q5 + 3] = i >> 8 & 255;
                break
        }
        q3.dirty = true
    };
    iv.setPixel32 = function(q, q2, q1, i2, q3) {
        var i;
        switch (q3) {
            case 1:
                var qY = i2;
                var i1 = 0;
                i1 = (qY >> 16 & 255 & 255) << 24 | (qY >> 8 & 255 & 255) << 16 | (qY & 255 & 255) << 8 | qY >> 24 & 255 & 255;
                i = i1;
                break;
            case 2:
                var q4 = i2;
                var q0 = 0;
                q0 = (q4 >> 8 & 255 & 255) << 24 | (q4 >> 16 & 255 & 255) << 16 | (q4 >> 24 & 255 & 255) << 8 | q4 & 255 & 255;
                i = q0;
                break;
            default:
                i = i2
        }
        if (!q.get_transparent()) {
            i = (i >> 24 & 255 & 255) << 24 | (i >> 16 & 255 & 255) << 16 | (i >> 8 & 255 & 255) << 8 | 255;
            255
        }
        var qZ = q.buffer.data;
        var js = 4 * (q1 + q.offsetY) * q.buffer.width + (q2 + q.offsetX) * 4;
        if (q.buffer.premultiplied) {
            if ((i & 255) == 0) {
                if (i != 0) {
                    i = 0
                }
            } else {
                if ((i & 255) != 255) {
                    pL.a16 = pL.__alpha16[i & 255];
                    i = ((i >> 24 & 255) * pL.a16 >> 16 & 255) << 24 | ((i >> 16 & 255) * pL.a16 >> 16 & 255) << 16 | ((i >> 8 & 255) * pL.a16 >> 16 & 255) << 8 | i & 255 & 255
                }
            }
        }
        switch (q.buffer.format) {
            case 2:
                qZ[js] = i >> 8 & 255;
                qZ[js + 1] = i >> 16 & 255;
                qZ[js + 2] = i >> 24 & 255;
                qZ[js + 3] = i & 255;
                break;
            case 0:
                qZ[js] = i >> 24 & 255;
                qZ[js + 1] = i >> 16 & 255;
                qZ[js + 2] = i >> 8 & 255;
                qZ[js + 3] = i & 255;
                break;
            case 1:
                qZ[js] = i & 255;
                qZ[js + 1] = i >> 24 & 255;
                qZ[js + 2] = i >> 16 & 255;
                qZ[js + 3] = i >> 8 & 255;
                break
        }
        q.dirty = true
    };
    iv.setPixels = function(rb, q, ra, rd) {
        if (rb.buffer.data == null) {
            return
        }
        var rg = rb.buffer.data;
        var q2 = rb.buffer.format;
        var i1 = rb.buffer.premultiplied;
        var i = new dm(rb, q);
        var q1;
        var rc;
        var js;
        var rf = rb.get_transparent();
        var q8 = 0;
        var q9 = 0;
        var i2 = i.height;
        while (q9 < i2) {
            var q3 = q9++;
            q1 = i.offset + i.stride * q3;
            var q6 = 0;
            var q7 = i.width;
            while (q6 < q7) {
                var q4 = q6++;
                rc = ra.b[q8 + 3] | ra.b[q8 + 2] << 8 | ra.b[q8 + 1] << 16 | ra.b[q8] << 24;
                q8 += 4;
                switch (rd) {
                    case 1:
                        var q5 = rc;
                        var qY = 0;
                        qY = (q5 >> 16 & 255 & 255) << 24 | (q5 >> 8 & 255 & 255) << 16 | (q5 & 255 & 255) << 8 | q5 >> 24 & 255 & 255;
                        js = qY;
                        break;
                    case 2:
                        var q0 = rc;
                        var re = 0;
                        re = (q0 >> 8 & 255 & 255) << 24 | (q0 >> 16 & 255 & 255) << 16 | (q0 >> 24 & 255 & 255) << 8 | q0 & 255 & 255;
                        js = re;
                        break;
                    default:
                        js = rc
                }
                if (!rf) {
                    js = (js >> 24 & 255 & 255) << 24 | (js >> 16 & 255 & 255) << 16 | (js >> 8 & 255 & 255) << 8 | 255;
                    255
                }
                var qZ = q1 + q4 * 4;
                if (i1) {
                    if ((js & 255) == 0) {
                        if (js != 0) {
                            js = 0
                        }
                    } else {
                        if ((js & 255) != 255) {
                            pL.a16 = pL.__alpha16[js & 255];
                            js = ((js >> 24 & 255) * pL.a16 >> 16 & 255) << 24 | ((js >> 16 & 255) * pL.a16 >> 16 & 255) << 16 | ((js >> 8 & 255) * pL.a16 >> 16 & 255) << 8 | js & 255 & 255
                        }
                    }
                }
                switch (q2) {
                    case 2:
                        rg[qZ] = js >> 8 & 255;
                        rg[qZ + 1] = js >> 16 & 255;
                        rg[qZ + 2] = js >> 24 & 255;
                        rg[qZ + 3] = js & 255;
                        break;
                    case 0:
                        rg[qZ] = js >> 24 & 255;
                        rg[qZ + 1] = js >> 16 & 255;
                        rg[qZ + 2] = js >> 8 & 255;
                        rg[qZ + 3] = js & 255;
                        break;
                    case 1:
                        rg[qZ] = js & 255;
                        rg[qZ + 1] = js >> 24 & 255;
                        rg[qZ + 2] = js >> 16 & 255;
                        rg[qZ + 3] = js >> 8 & 255;
                        break
                }
            }
        }
        rb.dirty = true
    };
    iv.threshold = function(qY, q2, q8, i, rl, q, re, rz, rt, rh) {
        var ri;
        var rA;
        var ro;
        switch (rh) {
            case 1:
                var rI = re;
                var rD = 0;
                rD = (rI >> 16 & 255 & 255) << 24 | (rI >> 8 & 255 & 255) << 16 | (rI & 255 & 255) << 8 | rI >> 24 & 255 & 255;
                ri = rD;
                var rs = rz;
                var rg = 0;
                rg = (rs >> 16 & 255 & 255) << 24 | (rs >> 8 & 255 & 255) << 16 | (rs & 255 & 255) << 8 | rs >> 24 & 255 & 255;
                rA = rg;
                var rr = q;
                var rf = 0;
                rf = (rr >> 16 & 255 & 255) << 24 | (rr >> 8 & 255 & 255) << 16 | (rr & 255 & 255) << 8 | rr >> 24 & 255 & 255;
                ro = rf;
                break;
            case 2:
                var i2 = re;
                var rd = 0;
                rd = (i2 >> 8 & 255 & 255) << 24 | (i2 >> 16 & 255 & 255) << 16 | (i2 >> 24 & 255 & 255) << 8 | i2 & 255 & 255;
                ri = rd;
                var js = rz;
                var rc = 0;
                rc = (js >> 8 & 255 & 255) << 24 | (js >> 16 & 255 & 255) << 16 | (js >> 24 & 255 & 255) << 8 | js & 255 & 255;
                rA = rc;
                var i1 = q;
                var rb = 0;
                rb = (i1 >> 8 & 255 & 255) << 24 | (i1 >> 16 & 255 & 255) << 16 | (i1 >> 24 & 255 & 255) << 8 | i1 & 255 & 255;
                ro = rb;
                break;
            default:
                ri = re;
                rA = rz;
                ro = q
        }
        var q5;
        switch (rl) {
            case "!=":
                q5 = 0;
                break;
            case "==":
                q5 = 1;
                break;
            case "<":
                q5 = 2;
                break;
            case "<=":
                q5 = 3;
                break;
            case ">":
                q5 = 4;
                break;
            case ">=":
                q5 = 5;
                break;
            default:
                q5 = -1
        }
        if (q5 == -1) {
            return 0
        }
        var rx = q2.buffer.data;
        var q7 = qY.buffer.data;
        if (rx == null || q7 == null) {
            return 0
        }
        var q6 = 0;
        var rK = new dm(q2, q8);
        var rk = new dm(qY, new lj(i.x, i.y, rK.width, rK.height));
        var q1 = q2.buffer.format;
        var qZ = qY.buffer.format;
        var rJ = q2.buffer.premultiplied;
        var q4 = qY.buffer.premultiplied;
        var q3;
        var ra;
        var rj;
        var rC;
        var q9;
        var q0;
        var rp;
        var rB = 0;
        var rF = rk.height;
        while (rB < rF) {
            var rm = rB++;
            q3 = rK.offset + rK.stride * rm;
            ra = rk.offset + rk.stride * rm;
            var rw = 0;
            var ry = rk.width;
            while (rw < ry) {
                var rn = rw++;
                switch (q1) {
                    case 2:
                        rj = (rx[q3 + 2] & 255) << 24 | (rx[q3 + 1] & 255) << 16 | (rx[q3] & 255) << 8 | rx[q3 + 3] & 255;
                        break;
                    case 0:
                        rj = (rx[q3] & 255) << 24 | (rx[q3 + 1] & 255) << 16 | (rx[q3 + 2] & 255) << 8 | rx[q3 + 3] & 255;
                        break;
                    case 1:
                        rj = (rx[q3 + 1] & 255) << 24 | (rx[q3 + 2] & 255) << 16 | (rx[q3 + 3] & 255) << 8 | rx[q3] & 255;
                        break
                }
                if (rJ) {
                    if ((rj & 255) != 0 && (rj & 255) != 255) {
                        pL.unmult = 255 / (rj & 255);
                        var rq;
                        var rG = Math.round((rj >> 24 & 255) * pL.unmult);
                        rq = pL.__clamp[rG];
                        var rE;
                        var rv = Math.round((rj >> 16 & 255) * pL.unmult);
                        rE = pL.__clamp[rv];
                        var rH;
                        var ru = Math.round((rj >> 8 & 255) * pL.unmult);
                        rH = pL.__clamp[ru];
                        rj = (rq & 255) << 24 | (rE & 255) << 16 | (rH & 255) << 8 | rj & 255 & 255
                    }
                }
                q9 = rj & rA;
                rp = iv.__pixelCompare(q9, ro);
                switch (q5) {
                    case 0:
                        q0 = rp != 0;
                        break;
                    case 1:
                        q0 = rp == 0;
                        break;
                    case 2:
                        q0 = rp == -1;
                        break;
                    case 3:
                        q0 = rp == 0 || rp == -1;
                        break;
                    case 4:
                        q0 = rp == 1;
                        break;
                    case 5:
                        q0 = rp == 0 || rp == 1;
                        break;
                    default:
                        q0 = false
                }
                if (q0) {
                    if (q4) {
                        if ((ri & 255) == 0) {
                            if (ri != 0) {
                                ri = 0
                            }
                        } else {
                            if ((ri & 255) != 255) {
                                pL.a16 = pL.__alpha16[ri & 255];
                                ri = ((ri >> 24 & 255) * pL.a16 >> 16 & 255) << 24 | ((ri >> 16 & 255) * pL.a16 >> 16 & 255) << 16 | ((ri >> 8 & 255) * pL.a16 >> 16 & 255) << 8 | ri & 255 & 255
                            }
                        }
                    }
                    switch (qZ) {
                        case 2:
                            q7[ra] = ri >> 8 & 255;
                            q7[ra + 1] = ri >> 16 & 255;
                            q7[ra + 2] = ri >> 24 & 255;
                            q7[ra + 3] = ri & 255;
                            break;
                        case 0:
                            q7[ra] = ri >> 24 & 255;
                            q7[ra + 1] = ri >> 16 & 255;
                            q7[ra + 2] = ri >> 8 & 255;
                            q7[ra + 3] = ri & 255;
                            break;
                        case 1:
                            q7[ra] = ri & 255;
                            q7[ra + 1] = ri >> 24 & 255;
                            q7[ra + 2] = ri >> 16 & 255;
                            q7[ra + 3] = ri >> 8 & 255;
                            break
                    }
                    q6++
                } else {
                    if (rt) {
                        if (q4) {
                            if ((rj & 255) == 0) {
                                if (rj != 0) {
                                    rj = 0
                                }
                            } else {
                                if ((rj & 255) != 255) {
                                    pL.a16 = pL.__alpha16[rj & 255];
                                    rj = ((rj >> 24 & 255) * pL.a16 >> 16 & 255) << 24 | ((rj >> 16 & 255) * pL.a16 >> 16 & 255) << 16 | ((rj >> 8 & 255) * pL.a16 >> 16 & 255) << 8 | rj & 255 & 255
                                }
                            }
                        }
                        switch (qZ) {
                            case 2:
                                q7[ra] = rj >> 8 & 255;
                                q7[ra + 1] = rj >> 16 & 255;
                                q7[ra + 2] = rj >> 24 & 255;
                                q7[ra + 3] = rj & 255;
                                break;
                            case 0:
                                q7[ra] = rj >> 24 & 255;
                                q7[ra + 1] = rj >> 16 & 255;
                                q7[ra + 2] = rj >> 8 & 255;
                                q7[ra + 3] = rj & 255;
                                break;
                            case 1:
                                q7[ra] = rj & 255;
                                q7[ra + 1] = rj >> 24 & 255;
                                q7[ra + 2] = rj >> 16 & 255;
                                q7[ra + 3] = rj >> 8 & 255;
                                break
                        }
                    }
                }
                q3 += 4;
                ra += 4
            }
        }
        if (q6 > 0) {
            qY.dirty = true
        }
        return q6
    };
    iv.unmultiplyAlpha = function(qY) {
        var q1 = qY.buffer.data;
        if (q1 == null) {
            return
        }
        var q8 = qY.buffer.format;
        var js = q1.length / 4 | 0;
        var i1;
        var q4 = 0;
        while (q4 < js) {
            var q2 = q4++;
            var qZ = q2 * 4;
            switch (q8) {
                case 2:
                    i1 = (q1[qZ + 2] & 255) << 24 | (q1[qZ + 1] & 255) << 16 | (q1[qZ] & 255) << 8 | q1[qZ + 3] & 255;
                    break;
                case 0:
                    i1 = (q1[qZ] & 255) << 24 | (q1[qZ + 1] & 255) << 16 | (q1[qZ + 2] & 255) << 8 | q1[qZ + 3] & 255;
                    break;
                case 1:
                    i1 = (q1[qZ + 1] & 255) << 24 | (q1[qZ + 2] & 255) << 16 | (q1[qZ + 3] & 255) << 8 | q1[qZ] & 255;
                    break
            }
            if ((i1 & 255) != 0 && (i1 & 255) != 255) {
                pL.unmult = 255 / (i1 & 255);
                var q;
                var q7 = Math.round((i1 >> 24 & 255) * pL.unmult);
                q = pL.__clamp[q7];
                var q5;
                var q3 = Math.round((i1 >> 16 & 255) * pL.unmult);
                q5 = pL.__clamp[q3];
                var q6;
                var q0 = Math.round((i1 >> 8 & 255) * pL.unmult);
                q6 = pL.__clamp[q0];
                i1 = (q & 255) << 24 | (q5 & 255) << 16 | (q6 & 255) << 8 | i1 & 255 & 255
            }
            var i2 = q2 * 4;
            switch (q8) {
                case 2:
                    q1[i2] = i1 >> 8 & 255;
                    q1[i2 + 1] = i1 >> 16 & 255;
                    q1[i2 + 2] = i1 >> 24 & 255;
                    q1[i2 + 3] = i1 & 255;
                    break;
                case 0:
                    q1[i2] = i1 >> 24 & 255;
                    q1[i2 + 1] = i1 >> 16 & 255;
                    q1[i2 + 2] = i1 >> 8 & 255;
                    q1[i2 + 3] = i1 & 255;
                    break;
                case 1:
                    q1[i2] = i1 & 255;
                    q1[i2 + 1] = i1 >> 24 & 255;
                    q1[i2 + 2] = i1 >> 16 & 255;
                    q1[i2 + 3] = i1 >> 8 & 255;
                    break
            }
        }
        qY.buffer.premultiplied = false;
        qY.dirty = true
    };
    iv.__pixelCompare = function(i1, i) {
        var i2;
        var q;
        i2 = i1 >> 24 & 255;
        q = i >> 24 & 255;
        if (i2 != q) {
            if (i2 > q) {
                return 1
            } else {
                return -1
            }
        } else {
            i2 = i1 >> 16 & 255;
            q = i >> 16 & 255;
            if (i2 != q) {
                if (i2 > q) {
                    return 1
                } else {
                    return -1
                }
            } else {
                i2 = i1 >> 8 & 255;
                q = i >> 8 & 255;
                if (i2 != q) {
                    if (i2 > q) {
                        return 1
                    } else {
                        return -1
                    }
                } else {
                    i2 = i1 & 255;
                    q = i & 255;
                    if (i2 != q) {
                        if (i2 > q) {
                            return 1
                        } else {
                            return -1
                        }
                    } else {
                        return 0
                    }
                }
            }
        }
    };
    var dm = function(q, i) {
        this.image = q;
        if (i == null) {
            this.rect = q.get_rect()
        } else {
            if (i.x < 0) {
                i.x = 0
            }
            if (i.y < 0) {
                i.y = 0
            }
            if (i.x + i.width > q.width) {
                i.width = q.width - i.x
            }
            if (i.y + i.height > q.height) {
                i.height = q.height - i.y
            }
            if (i.width < 0) {
                i.width = 0
            }
            if (i.height < 0) {
                i.height = 0
            }
            this.rect = i
        }
        this.stride = q.buffer.get_stride();
        this.x = Math.ceil(this.rect.x);
        this.y = Math.ceil(this.rect.y);
        this.width = Math.floor(this.rect.width);
        this.height = Math.floor(this.rect.height);
        this.offset = this.stride * (this.y + q.offsetY) + (this.x + q.offsetX) * 4
    };
    nt["lime.graphics.utils._ImageDataUtil.ImageDataView"] = dm;
    dm.__name__ = ["lime", "graphics", "utils", "_ImageDataUtil", "ImageDataView"];
    dm.prototype = {
        x: null,
        y: null,
        height: null,
        width: null,
        image: null,
        offset: null,
        rect: null,
        stride: null,
        clip: function(q, i2, i1, i) {
            this.rect.__contract(q, i2, i1, i);
            this.x = Math.ceil(this.rect.x);
            this.y = Math.ceil(this.rect.y);
            this.width = Math.floor(this.rect.width);
            this.height = Math.floor(this.rect.height);
            this.offset = this.stride * (this.y + this.image.offsetY) + (this.x + this.image.offsetX) * 4
        },
        row: function(i) {
            return this.offset + this.stride * i
        },
        __class__: dm
    };
    var qQ = {};
    nt["lime.math._ColorMatrix.ColorMatrix_Impl_"] = qQ;
    qQ.__name__ = ["lime", "math", "_ColorMatrix", "ColorMatrix_Impl_"];
    qQ.__properties__ = {
        set_redOffset: "set_redOffset",
        get_redOffset: "get_redOffset",
        set_redMultiplier: "set_redMultiplier",
        get_redMultiplier: "get_redMultiplier",
        set_greenOffset: "set_greenOffset",
        get_greenOffset: "get_greenOffset",
        set_greenMultiplier: "set_greenMultiplier",
        get_greenMultiplier: "get_greenMultiplier",
        set_color: "set_color",
        get_color: "get_color",
        set_blueOffset: "set_blueOffset",
        get_blueOffset: "get_blueOffset",
        set_blueMultiplier: "set_blueMultiplier",
        get_blueMultiplier: "get_blueMultiplier",
        set_alphaOffset: "set_alphaOffset",
        get_alphaOffset: "get_alphaOffset",
        set_alphaMultiplier: "set_alphaMultiplier",
        get_alphaMultiplier: "get_alphaMultiplier"
    };
    qQ._new = function(i1) {
        var q;
        if (i1 != null && i1.length == 20) {
            q = i1
        } else {
            var i2 = qQ.__identity;
            var i;
            if (i2 != null) {
                i = new Float32Array(i2)
            } else {
                i = null
            }
            q = i
        }
        return q
    };
    qQ.clone = function(i) {
        return qQ._new((function(i2) {
            var i1;
            var q;
            if (i != null) {
                q = new Float32Array(i)
            } else {
                q = null
            }
            i1 = q;
            return i1
        }(this)))
    };
    qQ.concat = function(i, q) {
        var qY = i;
        qY[0] = qY[0] + q[0];
        var js = i;
        js[6] = js[6] + q[6];
        var i2 = i;
        i2[12] = i2[12] + q[12];
        var i1 = i;
        i1[18] = i1[18] + q[18]
    };
    qQ.copyFrom = function(q, i) {
        q.set(i)
    };
    qQ.identity = function(i) {
        i[0] = 1;
        i[1] = 0;
        i[2] = 0;
        i[3] = 0;
        i[4] = 0;
        i[5] = 0;
        i[6] = 1;
        i[7] = 0;
        i[8] = 0;
        i[9] = 0;
        i[10] = 0;
        i[11] = 0;
        i[12] = 1;
        i[13] = 0;
        i[14] = 0;
        i[15] = 0;
        i[16] = 0;
        i[17] = 0;
        i[18] = 1;
        i[19] = 0
    };
    qQ.getAlphaTable = function(i1) {
        var js;
        var q;
        q = new qw(256);
        js = q;
        var q1 = i1[18];
        var q0 = i1[19] * 255;
        var qY;
        var qZ = 0;
        while (qZ < 256) {
            var i2 = qZ++;
            qY = Math.floor(i2 * q1 + q0);
            if (qY > 255) {
                qY = 255
            }
            if (qY < 0) {
                qY = 0
            }
            js[i2] = qY
        }
        return js
    };
    qQ.getBlueTable = function(i1) {
        var js;
        var q;
        q = new qw(256);
        js = q;
        var q1 = i1[12];
        var q0 = i1[14] * 255;
        var qY;
        var qZ = 0;
        while (qZ < 256) {
            var i2 = qZ++;
            qY = Math.floor(i2 * q1 + q0);
            if (qY > 255) {
                qY = 255
            }
            if (qY < 0) {
                qY = 0
            }
            js[i2] = qY
        }
        return js
    };
    qQ.getGreenTable = function(i1) {
        var js;
        var q;
        q = new qw(256);
        js = q;
        var q1 = i1[6];
        var q0 = i1[9] * 255;
        var qY;
        var qZ = 0;
        while (qZ < 256) {
            var i2 = qZ++;
            qY = Math.floor(i2 * q1 + q0);
            if (qY > 255) {
                qY = 255
            }
            if (qY < 0) {
                qY = 0
            }
            js[i2] = qY
        }
        return js
    };
    qQ.getRedTable = function(i1) {
        var js;
        var q;
        q = new qw(256);
        js = q;
        var q1 = i1[0];
        var q0 = i1[4] * 255;
        var qY;
        var qZ = 0;
        while (qZ < 256) {
            var i2 = qZ++;
            qY = Math.floor(i2 * q1 + q0);
            if (qY > 255) {
                qY = 255
            }
            if (qY < 0) {
                qY = 0
            }
            js[i2] = qY
        }
        return js
    };
    qQ.__toFlashColorTransform = function(i) {
        return null
    };
    qQ.get_alphaMultiplier = function(i) {
        return i[18]
    };
    qQ.set_alphaMultiplier = function(i, q) {
        return i[18] = q
    };
    qQ.get_alphaOffset = function(i) {
        return i[19] * 255
    };
    qQ.set_alphaOffset = function(i, q) {
        return i[19] = q / 255
    };
    qQ.get_blueMultiplier = function(i) {
        return i[12]
    };
    qQ.set_blueMultiplier = function(i, q) {
        return i[12] = q
    };
    qQ.get_blueOffset = function(i) {
        return i[14] * 255
    };
    qQ.set_blueOffset = function(i, q) {
        return i[14] = q / 255
    };
    qQ.get_color = function(i) {
        return (i[4] * 255 | 0) << 16 | (i[9] * 255 | 0) << 8 | (i[14] * 255 | 0)
    };
    qQ.set_color = function(i, q) {
        i[4] = (q >> 16 & 255) / 255;
        i[9] = (q >> 8 & 255) / 255;
        i[14] = (q & 255) / 255;
        i[0] = 0;
        i[6] = 0;
        i[12] = 0;
        return qQ.get_color(i)
    };
    qQ.get_greenMultiplier = function(i) {
        return i[6]
    };
    qQ.set_greenMultiplier = function(i, q) {
        return i[6] = q
    };
    qQ.get_greenOffset = function(i) {
        return i[9] * 255
    };
    qQ.set_greenOffset = function(i, q) {
        return i[9] = q / 255
    };
    qQ.get_redMultiplier = function(i) {
        return i[0]
    };
    qQ.set_redMultiplier = function(i, q) {
        return i[0] = q
    };
    qQ.get_redOffset = function(i) {
        return i[4] * 255
    };
    qQ.set_redOffset = function(i, q) {
        return i[4] = q / 255
    };
    qQ.get = function(i, q) {
        return i[q]
    };
    qQ.set = function(i, q, i1) {
        return i[q] = i1
    };
    var iP = function(i2, q, qY, js, i1, i) {
        if (i == null) {
            i = 0
        }
        if (i1 == null) {
            i1 = 0
        }
        if (js == null) {
            js = 1
        }
        if (qY == null) {
            qY = 0
        }
        if (q == null) {
            q = 0
        }
        if (i2 == null) {
            i2 = 1
        }
        this.a = i2;
        this.b = q;
        this.c = qY;
        this.d = js;
        this.tx = i1;
        this.ty = i
    };
    nt["lime.math.Matrix3"] = iP;
    iP.__name__ = ["lime", "math", "Matrix3"];
    iP.prototype = {
        a: null,
        b: null,
        c: null,
        d: null,
        tx: null,
        ty: null,
        clone: function() {
            return new iP(this.a, this.b, this.c, this.d, this.tx, this.ty)
        },
        concat: function(i) {
            var i1 = this.a * i.a + this.b * i.c;
            this.b = this.a * i.b + this.b * i.d;
            this.a = i1;
            var i2 = this.c * i.a + this.d * i.c;
            this.d = this.c * i.b + this.d * i.d;
            this.c = i2;
            var q = this.tx * i.a + this.ty * i.c + i.tx;
            this.ty = this.tx * i.b + this.ty * i.d + i.ty;
            this.tx = q
        },
        copyColumnFrom: function(q, i) {
            if (q > 2) {
                throw new nM("Column " + q + " out of bounds (2)")
            } else {
                if (q == 0) {
                    this.a = i.x;
                    this.c = i.y
                } else {
                    if (q == 1) {
                        this.b = i.x;
                        this.d = i.y
                    } else {
                        this.tx = i.x;
                        this.ty = i.y
                    }
                }
            }
        },
        copyColumnTo: function(q, i) {
            if (q > 2) {
                throw new nM("Column " + q + " out of bounds (2)")
            } else {
                if (q == 0) {
                    i.x = this.a;
                    i.y = this.c;
                    i.z = 0
                } else {
                    if (q == 1) {
                        i.x = this.b;
                        i.y = this.d;
                        i.z = 0
                    } else {
                        i.x = this.tx;
                        i.y = this.ty;
                        i.z = 1
                    }
                }
            }
        },
        copyFrom: function(i) {
            this.a = i.a;
            this.b = i.b;
            this.c = i.c;
            this.d = i.d;
            this.tx = i.tx;
            this.ty = i.ty
        },
        copyRowFrom: function(q, i) {
            if (q > 2) {
                throw new nM("Row " + q + " out of bounds (2)")
            } else {
                if (q == 0) {
                    this.a = i.x;
                    this.c = i.y
                } else {
                    if (q == 1) {
                        this.b = i.x;
                        this.d = i.y
                    } else {
                        this.tx = i.x;
                        this.ty = i.y
                    }
                }
            }
        },
        copyRowTo: function(q, i) {
            if (q > 2) {
                throw new nM("Row " + q + " out of bounds (2)")
            } else {
                if (q == 0) {
                    i.x = this.a;
                    i.y = this.b;
                    i.z = this.tx
                } else {
                    if (q == 1) {
                        i.x = this.c;
                        i.y = this.d;
                        i.z = this.ty
                    } else {
                        i.x = 0;
                        i.y = 0;
                        i.z = 1
                    }
                }
            }
        },
        createBox: function(i2, i1, js, q, i) {
            if (i == null) {
                i = 0
            }
            if (q == null) {
                q = 0
            }
            if (js == null) {
                js = 0
            }
            this.a = i2;
            this.d = i1;
            this.b = js;
            this.tx = q;
            this.ty = i
        },
        createGradientBox: function(qY, q, js, i1, i) {
            if (i == null) {
                i = 0
            }
            if (i1 == null) {
                i1 = 0
            }
            if (js == null) {
                js = 0
            }
            this.a = qY / 1638.4;
            this.d = q / 1638.4;
            if (js != 0) {
                var qZ = Math.cos(js);
                var i2 = Math.sin(js);
                this.b = i2 * this.d;
                this.c = -i2 * this.a;
                this.a *= qZ;
                this.d *= qZ
            } else {
                this.b = 0;
                this.c = 0
            }
            this.tx = i1 + qY / 2;
            this.ty = i + q / 2
        },
        equals: function(i) {
            return i != null && this.tx == i.tx && this.ty == i.ty && this.a == i.a && this.b == i.b && this.c == i.c && this.d == i.d
        },
        deltaTransformVector2: function(i) {
            return new eD(i.x * this.a + i.y * this.c, i.x * this.b + i.y * this.d)
        },
        identity: function() {
            this.a = 1;
            this.b = 0;
            this.c = 0;
            this.d = 1;
            this.tx = 0;
            this.ty = 0
        },
        invert: function() {
            var i1 = this.a * this.d - this.b * this.c;
            if (i1 == 0) {
                this.a = this.b = this.c = this.d = 0;
                this.tx = -this.tx;
                this.ty = -this.ty
            } else {
                i1 = 1 / i1;
                var q = this.d * i1;
                this.d = this.a * i1;
                this.a = q;
                this.b *= -i1;
                this.c *= -i1;
                var i = -this.a * this.tx - this.c * this.ty;
                this.ty = -this.b * this.tx - this.d * this.ty;
                this.tx = i
            }
            return this
        },
        mult: function(q) {
            var i = new iP(this.a, this.b, this.c, this.d, this.tx, this.ty);
            i.concat(q);
            return i
        },
        rotate: function(i2) {
            var qY = Math.cos(i2);
            var i1 = Math.sin(i2);
            var q = this.a * qY - this.b * i1;
            this.b = this.a * i1 + this.b * qY;
            this.a = q;
            var js = this.c * qY - this.d * i1;
            this.d = this.c * i1 + this.d * qY;
            this.c = js;
            var i = this.tx * qY - this.ty * i1;
            this.ty = this.tx * i1 + this.ty * qY;
            this.tx = i
        },
        scale: function(q, i) {
            this.a *= q;
            this.b *= i;
            this.c *= q;
            this.d *= i;
            this.tx *= q;
            this.ty *= i
        },
        setRotation: function(i, q) {
            if (q == null) {
                q = 1
            }
            this.a = Math.cos(i) * q;
            this.c = Math.sin(i) * q;
            this.b = -this.c;
            this.d = this.a
        },
        setTo: function(i2, q, qY, js, i1, i) {
            this.a = i2;
            this.b = q;
            this.c = qY;
            this.d = js;
            this.tx = i1;
            this.ty = i
        },
        to3DString: function(i) {
            if (i == null) {
                i = false
            }
            if (i) {
                return "Matrix33d(" + this.a + ", " + this.b + ", 0, 0, " + this.c + ", " + this.d + ", 0, 0, 0, 0, 1, 0, " + (this.tx | 0) + ", " + (this.ty | 0) + ", 0, 1)"
            } else {
                return "Matrix33d(" + this.a + ", " + this.b + ", 0, 0, " + this.c + ", " + this.d + ", 0, 0, 0, 0, 1, 0, " + this.tx + ", " + this.ty + ", 0, 1)"
            }
        },
        toMozString: function() {
            return "Matrix3(" + this.a + ", " + this.b + ", " + this.c + ", " + this.d + ", " + this.tx + "px, " + this.ty + "px)"
        },
        toString: function() {
            return "Matrix3(" + this.a + ", " + this.b + ", " + this.c + ", " + this.d + ", " + this.tx + ", " + this.ty + ")"
        },
        transformVector2: function(i) {
            return new eD(i.x * this.a + i.y * this.c + this.tx, i.x * this.b + i.y * this.d + this.ty)
        },
        translate: function(q, i) {
            this.tx += q;
            this.ty += i
        },
        __cleanValues: function() {
            this.a = Math.round(this.a * 1000) / 1000;
            this.b = Math.round(this.b * 1000) / 1000;
            this.c = Math.round(this.c * 1000) / 1000;
            this.d = Math.round(this.d * 1000) / 1000;
            this.tx = Math.round(this.tx * 10) / 10;
            this.ty = Math.round(this.ty * 10) / 10
        },
        __transformX: function(i) {
            return i.x * this.a + i.y * this.c + this.tx
        },
        __transformY: function(i) {
            return i.x * this.b + i.y * this.d + this.ty
        },
        __translateTransformed: function(i) {
            this.tx = i.x * this.a + i.y * this.c + this.tx;
            this.ty = i.x * this.b + i.y * this.d + this.ty
        },
        __class__: iP
    };
    var d1 = {};
    nt["lime.math._Matrix4.Matrix4_Impl_"] = d1;
    d1.__name__ = ["lime", "math", "_Matrix4", "Matrix4_Impl_"];
    d1.__properties__ = {
        set_position: "set_position",
        get_position: "get_position",
        get_determinant: "get_determinant"
    };
    d1._new = function(i1) {
        var q;
        if (i1 != null && i1.length == 16) {
            q = i1
        } else {
            var i2 = d1.__identity;
            var i;
            if (i2 != null) {
                i = new Float32Array(i2)
            } else {
                i = null
            }
            q = i
        }
        return q
    };
    d1.append = function(qY, re) {
        var rp = qY[0];
        var q1 = qY[4];
        var rd = qY[8];
        var rq = qY[12];
        var rm = qY[1];
        var q0 = qY[5];
        var rc = qY[9];
        var ro = qY[13];
        var rl = qY[2];
        var qZ = qY[6];
        var rb = qY[10];
        var rn = qY[14];
        var rj = qY[3];
        var js = qY[7];
        var ra = qY[11];
        var rk = qY[15];
        var q8 = d1.get(re, 0);
        var ri = d1.get(re, 4);
        var i2 = d1.get(re, 8);
        var q9 = d1.get(re, 12);
        var q6 = d1.get(re, 1);
        var rh = d1.get(re, 5);
        var i1 = d1.get(re, 9);
        var q7 = d1.get(re, 13);
        var q4 = d1.get(re, 2);
        var rg = d1.get(re, 6);
        var q = d1.get(re, 10);
        var q5 = d1.get(re, 14);
        var q2 = d1.get(re, 3);
        var rf = d1.get(re, 7);
        var i = d1.get(re, 11);
        var q3 = d1.get(re, 15);
        qY[0] = rp * q8 + rm * ri + rl * i2 + rj * q9;
        qY[1] = rp * q6 + rm * rh + rl * i1 + rj * q7;
        qY[2] = rp * q4 + rm * rg + rl * q + rj * q5;
        qY[3] = rp * q2 + rm * rf + rl * i + rj * q3;
        qY[4] = q1 * q8 + q0 * ri + qZ * i2 + js * q9;
        qY[5] = q1 * q6 + q0 * rh + qZ * i1 + js * q7;
        qY[6] = q1 * q4 + q0 * rg + qZ * q + js * q5;
        qY[7] = q1 * q2 + q0 * rf + qZ * i + js * q3;
        qY[8] = rd * q8 + rc * ri + rb * i2 + ra * q9;
        qY[9] = rd * q6 + rc * rh + rb * i1 + ra * q7;
        qY[10] = rd * q4 + rc * rg + rb * q + ra * q5;
        qY[11] = rd * q2 + rc * rf + rb * i + ra * q3;
        qY[12] = rq * q8 + ro * ri + rn * i2 + rk * q9;
        qY[13] = rq * q6 + ro * rh + rn * i1 + rk * q7;
        qY[14] = rq * q4 + ro * rg + rn * q + rk * q5;
        qY[15] = rq * q2 + ro * rf + rn * i + rk * q3
    };
    d1.appendRotation = function(q, qY, i2, i1) {
        var i = d1.getAxisRotation(i2.x, i2.y, i2.z, qY);
        if (i1 != null) {
            var js = i1;
            d1.appendTranslation(i, js.x, js.y, js.z)
        }
        d1.append(q, i)
    };
    d1.appendScale = function(i, i2, i1, q) {
        d1.append(i, d1._new((function(qZ) {
            var qY;
            var q0 = [i2, 0, 0, 0, 0, i1, 0, 0, 0, 0, q, 0, 0, 0, 0, 1];
            var js;
            if (q0 != null) {
                js = new Float32Array(q0)
            } else {
                js = null
            }
            qY = js;
            return qY
        }(this))))
    };
    d1.appendTranslation = function(q, i, i2, i1) {
        q[12] = q[12] + i;
        q[13] = q[13] + i2;
        q[14] = q[14] + i1
    };
    d1.clone = function(i) {
        return d1._new((function(i2) {
            var i1;
            var q;
            if (i != null) {
                q = new Float32Array(i)
            } else {
                q = null
            }
            i1 = q;
            return i1
        }(this)))
    };
    d1.copyColumnFrom = function(q, i1, i) {
        switch (i1) {
            case 0:
                q[0] = i.x;
                q[1] = i.y;
                q[2] = i.z;
                q[3] = i.w;
                break;
            case 1:
                q[4] = i.x;
                q[5] = i.y;
                q[6] = i.z;
                q[7] = i.w;
                break;
            case 2:
                q[8] = i.x;
                q[9] = i.y;
                q[10] = i.z;
                q[11] = i.w;
                break;
            case 3:
                q[12] = i.x;
                q[13] = i.y;
                q[14] = i.z;
                q[15] = i.w;
                break;
            default:
                throw new nM("Error, Column " + i1 + " out of bounds [0, ..., 3]")
        }
    };
    d1.copyColumnTo = function(q, i1, i) {
        switch (i1) {
            case 0:
                i.x = q[0];
                i.y = q[1];
                i.z = q[2];
                i.w = q[3];
                break;
            case 1:
                i.x = q[4];
                i.y = q[5];
                i.z = q[6];
                i.w = q[7];
                break;
            case 2:
                i.x = q[8];
                i.y = q[9];
                i.z = q[10];
                i.w = q[11];
                break;
            case 3:
                i.x = q[12];
                i.y = q[13];
                i.z = q[14];
                i.w = q[15];
                break;
            default:
                throw new nM("Error, Column " + i1 + " out of bounds [0, ..., 3]")
        }
    };
    d1.copyFrom = function(q, i) {
        q.set(i)
    };
    d1.copythisFrom = function(i1, qZ, i2, i) {
        if (i == null) {
            i = false
        }
        if (i2 == null) {
            i2 = 0
        }
        if (i) {
            d1.transpose(i1)
        }
        var q = qZ.length - i2;
        var js = 0;
        while (js < q) {
            var qY = js++;
            i1[qY] = qZ[qY + i2]
        }
        if (i) {
            d1.transpose(i1)
        }
    };
    d1.copythisTo = function(i1, qZ, i2, i) {
        if (i == null) {
            i = false
        }
        if (i2 == null) {
            i2 = 0
        }
        if (i) {
            d1.transpose(i1)
        }
        var q = i1.length;
        var js = 0;
        while (js < q) {
            var qY = js++;
            qZ[qY + i2] = i1[qY]
        }
        if (i) {
            d1.transpose(i1)
        }
    };
    d1.copyRowFrom = function(q, i1, i) {
        switch (i1) {
            case 0:
                q[0] = i.x;
                q[4] = i.y;
                q[8] = i.z;
                q[12] = i.w;
                break;
            case 1:
                q[1] = i.x;
                q[5] = i.y;
                q[9] = i.z;
                q[13] = i.w;
                break;
            case 2:
                q[2] = i.x;
                q[6] = i.y;
                q[10] = i.z;
                q[14] = i.w;
                break;
            case 3:
                q[3] = i.x;
                q[7] = i.y;
                q[11] = i.z;
                q[15] = i.w;
                break;
            default:
                throw new nM("Error, Row " + kr.string(fq.toFloat(i1)) + " out of bounds [0, ..., 3]")
        }
    };
    d1.create2D = function(i, qZ, js, i1) {
        if (i1 == null) {
            i1 = 0
        }
        if (js == null) {
            js = 1
        }
        var q = i1 * Math.PI / 180;
        var qY = Math.cos(q);
        var i2 = Math.sin(q);
        return d1._new((function(q2) {
            var q1;
            var q3 = [qY * js, -i2 * js, 0, 0, i2 * js, qY * js, 0, 0, 0, 0, 1, 0, i, qZ, 0, 1];
            var q0;
            if (q3 != null) {
                q0 = new Float32Array(q3)
            } else {
                q0 = null
            }
            q1 = q0;
            return q1
        }(this)))
    };
    d1.createABCD = function(i2, q, qY, js, i1, i) {
        return d1._new((function(q1) {
            var q0;
            var q2 = [i2, q, 0, 0, qY, js, 0, 0, 0, 0, 1, 0, i1, i, 0, 1];
            var qZ;
            if (q2 != null) {
                qZ = new Float32Array(q2)
            } else {
                qZ = null
            }
            q0 = qZ;
            return q0
        }(this)))
    };
    d1.createOrtho = function(q, i, q1, q0, i1, js) {
        var qZ = 1 / (i - q);
        var qY = 1 / (q0 - q1);
        var i2 = 1 / (js - i1);
        return d1._new((function(q4) {
            var q3;
            var q5 = [2 * qZ, 0, 0, 0, 0, 2 * qY, 0, 0, 0, 0, -2 * i2, 0, -(q + i) * qZ, -(q1 + q0) * qY, -(i1 + js) * i2, 1];
            var q2;
            if (q5 != null) {
                q2 = new Float32Array(q5)
            } else {
                q2 = null
            }
            q3 = q2;
            return q3
        }(this)))
    };
    d1.copyRowTo = function(q, i1, i) {
        switch (i1) {
            case 0:
                i.x = q[0];
                i.y = q[4];
                i.z = q[8];
                i.w = q[12];
                break;
            case 1:
                i.x = q[1];
                i.y = q[5];
                i.z = q[9];
                i.w = q[13];
                break;
            case 2:
                i.x = q[2];
                i.y = q[6];
                i.z = q[10];
                i.w = q[14];
                break;
            case 3:
                i.x = q[3];
                i.y = q[7];
                i.z = q[11];
                i.w = q[15];
                break;
            default:
                throw new nM("Error, Row " + i1 + " out of bounds [0, ..., 3]")
        }
    };
    d1.copyToMatrix4 = function(q, i) {
        (n0.__cast(i, Float32Array)).set(q)
    };
    d1.deltaTransformVector = function(q, i1) {
        var i = i1.x;
        var js = i1.y;
        var i2 = i1.z;
        return new eC(i * q[0] + js * q[4] + i2 * q[8] + q[3], i * q[1] + js * q[5] + i2 * q[9] + q[7], i * q[2] + js * q[6] + i2 * q[10] + q[11], 0)
    };
    d1.identity = function(i) {
        i[0] = 1;
        i[1] = 0;
        i[2] = 0;
        i[3] = 0;
        i[4] = 0;
        i[5] = 1;
        i[6] = 0;
        i[7] = 0;
        i[8] = 0;
        i[9] = 0;
        i[10] = 1;
        i[11] = 0;
        i[12] = 0;
        i[13] = 0;
        i[14] = 0;
        i[15] = 1
    };
    d1.interpolate = function(js, i1, qY) {
        var q = d1._new();
        var qZ = 0;
        while (qZ < 16) {
            var i2 = qZ++;
            d1.set(q, i2, d1.get(js, i2) + (d1.get(i1, i2) - d1.get(js, i2)) * qY)
        }
        return q
    };
    d1.interpolateTo = function(i1, q, js) {
        var qZ = 0;
        while (qZ < 16) {
            var i2 = qZ++;
            var qY = i1[i2] + (d1.get(q, i2) - i1[i2]) * js;
            i1[i2] = qY
        }
    };
    d1.invert = function(i1) {
        var q3 = d1.get_determinant(i1);
        var q2 = Math.abs(q3) > 1e-11;
        if (q2) {
            q3 = 1 / q3;
            var q9 = i1[0];
            var js = i1[4];
            var q1 = i1[8];
            var rb = i1[12];
            var q7 = i1[1];
            var i2 = i1[5];
            var q0 = i1[9];
            var ra = i1[13];
            var q6 = i1[2];
            var q = i1[6];
            var qZ = i1[10];
            var q8 = i1[14];
            var q4 = i1[3];
            var i = i1[7];
            var qY = i1[11];
            var q5 = i1[15];
            i1[0] = q3 * (i2 * (qZ * q5 - q8 * qY) - q0 * (q * q5 - q8 * i) + ra * (q * qY - qZ * i));
            i1[1] = -q3 * (q7 * (qZ * q5 - q8 * qY) - q0 * (q6 * q5 - q8 * q4) + ra * (q6 * qY - qZ * q4));
            i1[2] = q3 * (q7 * (q * q5 - q8 * i) - i2 * (q6 * q5 - q8 * q4) + ra * (q6 * i - q * q4));
            i1[3] = -q3 * (q7 * (q * qY - qZ * i) - i2 * (q6 * qY - qZ * q4) + q0 * (q6 * i - q * q4));
            i1[4] = -q3 * (js * (qZ * q5 - q8 * qY) - q1 * (q * q5 - q8 * i) + rb * (q * qY - qZ * i));
            i1[5] = q3 * (q9 * (qZ * q5 - q8 * qY) - q1 * (q6 * q5 - q8 * q4) + rb * (q6 * qY - qZ * q4));
            i1[6] = -q3 * (q9 * (q * q5 - q8 * i) - js * (q6 * q5 - q8 * q4) + rb * (q6 * i - q * q4));
            i1[7] = q3 * (q9 * (q * qY - qZ * i) - js * (q6 * qY - qZ * q4) + q1 * (q6 * i - q * q4));
            i1[8] = q3 * (js * (q0 * q5 - ra * qY) - q1 * (i2 * q5 - ra * i) + rb * (i2 * qY - q0 * i));
            i1[9] = -q3 * (q9 * (q0 * q5 - ra * qY) - q1 * (q7 * q5 - ra * q4) + rb * (q7 * qY - q0 * q4));
            i1[10] = q3 * (q9 * (i2 * q5 - ra * i) - js * (q7 * q5 - ra * q4) + rb * (q7 * i - i2 * q4));
            i1[11] = -q3 * (q9 * (i2 * qY - q0 * i) - js * (q7 * qY - q0 * q4) + q1 * (q7 * i - i2 * q4));
            i1[12] = -q3 * (js * (q0 * q8 - ra * qZ) - q1 * (i2 * q8 - ra * q) + rb * (i2 * qZ - q0 * q));
            i1[13] = q3 * (q9 * (q0 * q8 - ra * qZ) - q1 * (q7 * q8 - ra * q6) + rb * (q7 * qZ - q0 * q6));
            i1[14] = -q3 * (q9 * (i2 * q8 - ra * q) - js * (q7 * q8 - ra * q6) + rb * (q7 * q - i2 * q6));
            i1[15] = q3 * (q9 * (i2 * qZ - q0 * q) - js * (q7 * qZ - q0 * q6) + q1 * (q7 * q - i2 * q6))
        }
        return q2
    };
    d1.pointAt = function(i2, q0, q, i) {
        if (q == null) {
            q = new eC(0, 0, -1)
        }
        if (i == null) {
            i = new eC(0, -1, 0)
        }
        var js = new eC(q.x - q0.x, q.y - q0.y, q.z - q0.z);
        var i1 = new eC(i.x, i.y, i.z, i.w);
        var qY;
        js.normalize();
        i1.normalize();
        var qZ = new eC(js.x, js.y, js.z, js.w);
        qZ.scaleBy(i1.x * js.x + i1.y * js.y + i1.z * js.z);
        i1 = new eC(i1.x - qZ.x, i1.y - qZ.y, i1.z - qZ.z);
        if (Math.sqrt(i1.x * i1.x + i1.y * i1.y + i1.z * i1.z) > 0) {
            i1.normalize()
        } else {
            if (js.x != 0) {
                i1 = new eC(-js.y, js.x, 0)
            } else {
                i1 = new eC(1, 0, 0)
            }
        }
        qY = new eC(i1.y * js.z - i1.z * js.y, i1.z * js.x - i1.x * js.z, i1.x * js.y - i1.y * js.x, 1);
        qY.normalize();
        i2[0] = qY.x;
        i2[4] = qY.y;
        i2[8] = qY.z;
        i2[12] = 0;
        i2[1] = i1.x;
        i2[5] = i1.y;
        i2[9] = i1.z;
        i2[13] = 0;
        i2[2] = js.x;
        i2[6] = js.y;
        i2[10] = js.z;
        i2[14] = 0;
        i2[3] = q0.x;
        i2[7] = q0.y;
        i2[11] = q0.z;
        i2[15] = 1
    };
    d1.prepend = function(qZ, i) {
        var rp = d1.get(i, 0);
        var q2 = d1.get(i, 4);
        var re = d1.get(i, 8);
        var rq = d1.get(i, 12);
        var rm = d1.get(i, 1);
        var q1 = d1.get(i, 5);
        var rd = d1.get(i, 9);
        var ro = d1.get(i, 13);
        var rl = d1.get(i, 2);
        var q0 = d1.get(i, 6);
        var rc = d1.get(i, 10);
        var rn = d1.get(i, 14);
        var rj = d1.get(i, 3);
        var qY = d1.get(i, 7);
        var rb = d1.get(i, 11);
        var rk = d1.get(i, 15);
        var q9 = qZ[0];
        var ri = qZ[4];
        var js = qZ[8];
        var ra = qZ[12];
        var q7 = qZ[1];
        var rh = qZ[5];
        var i2 = qZ[9];
        var q8 = qZ[13];
        var q5 = qZ[2];
        var rg = qZ[6];
        var i1 = qZ[10];
        var q6 = qZ[14];
        var q3 = qZ[3];
        var rf = qZ[7];
        var q = qZ[11];
        var q4 = qZ[15];
        qZ[0] = rp * q9 + rm * ri + rl * js + rj * ra;
        qZ[1] = rp * q7 + rm * rh + rl * i2 + rj * q8;
        qZ[2] = rp * q5 + rm * rg + rl * i1 + rj * q6;
        qZ[3] = rp * q3 + rm * rf + rl * q + rj * q4;
        qZ[4] = q2 * q9 + q1 * ri + q0 * js + qY * ra;
        qZ[5] = q2 * q7 + q1 * rh + q0 * i2 + qY * q8;
        qZ[6] = q2 * q5 + q1 * rg + q0 * i1 + qY * q6;
        qZ[7] = q2 * q3 + q1 * rf + q0 * q + qY * q4;
        qZ[8] = re * q9 + rd * ri + rc * js + rb * ra;
        qZ[9] = re * q7 + rd * rh + rc * i2 + rb * q8;
        qZ[10] = re * q5 + rd * rg + rc * i1 + rb * q6;
        qZ[11] = re * q3 + rd * rf + rc * q + rb * q4;
        qZ[12] = rq * q9 + ro * ri + rn * js + rk * ra;
        qZ[13] = rq * q7 + ro * rh + rn * i2 + rk * q8;
        qZ[14] = rq * q5 + ro * rg + rn * i1 + rk * q6;
        qZ[15] = rq * q3 + ro * rf + rn * q + rk * q4
    };
    d1.prependRotation = function(q, qY, i2, i1) {
        var i = d1.getAxisRotation(i2.x, i2.y, i2.z, qY);
        if (i1 != null) {
            var js = i1;
            d1.appendTranslation(i, js.x, js.y, js.z)
        }
        d1.prepend(q, i)
    };
    d1.prependScale = function(i, i2, i1, q) {
        d1.prepend(i, d1._new((function(qZ) {
            var qY;
            var q0 = [i2, 0, 0, 0, 0, i1, 0, 0, 0, 0, q, 0, 0, 0, 0, 1];
            var js;
            if (q0 != null) {
                js = new Float32Array(q0)
            } else {
                js = null
            }
            qY = js;
            return qY
        }(this))))
    };
    d1.prependTranslation = function(i1, q, js, i2) {
        var i = d1._new();
        d1.set_position(i, new eC(q, js, i2));
        d1.prepend(i1, i)
    };
    d1.transformVector = function(q, i1) {
        var i = i1.x;
        var js = i1.y;
        var i2 = i1.z;
        return new eC(i * q[0] + js * q[4] + i2 * q[8] + q[12], i * q[1] + js * q[5] + i2 * q[9] + q[13], i * q[2] + js * q[6] + i2 * q[10] + q[14], i * q[3] + js * q[7] + i2 * q[11] + q[15])
    };
    d1.transformVectors = function(i1, js, qZ) {
        var i2 = 0;
        while (i2 + 3 <= js.length) {
            var q = js[i2];
            var q0 = js[i2 + 1];
            var qY = js[i2 + 2];
            qZ[i2] = q * i1[0] + q0 * i1[4] + qY * i1[8] + i1[12];
            qZ[i2 + 1] = q * i1[1] + q0 * i1[5] + qY * i1[9] + i1[13];
            qZ[i2 + 2] = q * i1[2] + q0 * i1[6] + qY * i1[10] + i1[14];
            i2 += 3
        }
    };
    d1.transpose = function(q) {
        var i1;
        var i;
        if (q != null) {
            i = new Float32Array(q)
        } else {
            i = null
        }
        i1 = i;
        q[1] = i1[4];
        q[2] = i1[8];
        q[3] = i1[12];
        q[4] = i1[1];
        q[6] = i1[9];
        q[7] = i1[13];
        q[8] = i1[2];
        q[9] = i1[6];
        q[11] = i1[14];
        q[12] = i1[3];
        q[13] = i1[7];
        q[14] = i1[11]
    };
    d1.getAxisRotation = function(q2, q1, qZ, i2) {
        var q = d1._new();
        var i = new eC(q2, q1, qZ);
        var q0 = -i2 * (Math.PI / 180);
        var qY = Math.cos(q0);
        var q4 = Math.sin(q0);
        var q3 = 1 - qY;
        d1.set(q, 0, qY + i.x * i.x * q3);
        d1.set(q, 5, qY + i.y * i.y * q3);
        d1.set(q, 10, qY + i.z * i.z * q3);
        var js = i.x * i.y * q3;
        var i1 = i.z * q4;
        d1.set(q, 4, js + i1);
        d1.set(q, 1, js - i1);
        js = i.x * i.z * q3;
        i1 = i.y * q4;
        d1.set(q, 8, js - i1);
        d1.set(q, 2, js + i1);
        js = i.y * i.z * q3;
        i1 = i.x * q4;
        d1.set(q, 9, js + i1);
        d1.set(q, 6, js - i1);
        return q
    };
    d1.get_determinant = function(i) {
        return (i[0] * i[5] - i[4] * i[1]) * (i[10] * i[15] - i[14] * i[11]) - (i[0] * i[9] - i[8] * i[1]) * (i[6] * i[15] - i[14] * i[7]) + (i[0] * i[13] - i[12] * i[1]) * (i[6] * i[11] - i[10] * i[7]) + (i[4] * i[9] - i[8] * i[5]) * (i[2] * i[15] - i[14] * i[3]) - (i[4] * i[13] - i[12] * i[5]) * (i[2] * i[11] - i[10] * i[3]) + (i[8] * i[13] - i[12] * i[9]) * (i[2] * i[7] - i[6] * i[3])
    };
    d1.get_position = function(i) {
        return new eC(i[12], i[13], i[14])
    };
    d1.set_position = function(i, q) {
        i[12] = q.x;
        i[13] = q.y;
        i[14] = q.z;
        return q
    };
    d1.get = function(i, q) {
        return i[q]
    };
    d1.set = function(i, q, i1) {
        i[q] = i1;
        return i1
    };
    var lj = function(q, i2, i1, i) {
        if (i == null) {
            i = 0
        }
        if (i1 == null) {
            i1 = 0
        }
        if (i2 == null) {
            i2 = 0
        }
        if (q == null) {
            q = 0
        }
        this.x = q;
        this.y = i2;
        this.width = i1;
        this.height = i
    };
    nt["lime.math.Rectangle"] = lj;
    lj.__name__ = ["lime", "math", "Rectangle"];
    lj.prototype = {
        height: null,
        width: null,
        x: null,
        y: null,
        clone: function() {
            return new lj(this.x, this.y, this.width, this.height)
        },
        contains: function(i, q) {
            return i >= this.x && q >= this.y && i < this.get_right() && q < this.get_bottom()
        },
        containsPoint: function(i) {
            return this.contains(i.x, i.y)
        },
        containsRect: function(i) {
            if (i.width <= 0 || i.height <= 0) {
                return i.x > this.x && i.y > this.y && i.get_right() < this.get_right() && i.get_bottom() < this.get_bottom()
            } else {
                return i.x >= this.x && i.y >= this.y && i.get_right() <= this.get_right() && i.get_bottom() <= this.get_bottom()
            }
        },
        copyFrom: function(i) {
            this.x = i.x;
            this.y = i.y;
            this.width = i.width;
            this.height = i.height
        },
        equals: function(i) {
            return i != null && this.x == i.x && this.y == i.y && this.width == i.width && this.height == i.height
        },
        inflate: function(q, i) {
            this.x -= q;
            this.width += q * 2;
            this.y -= i;
            this.height += i * 2
        },
        inflatePoint: function(i) {
            this.inflate(i.x, i.y)
        },
        intersection: function(i) {
            var i1;
            if (this.x < i.x) {
                i1 = i.x
            } else {
                i1 = this.x
            }
            var q;
            if (this.get_right() > i.get_right()) {
                q = i.get_right()
            } else {
                q = this.get_right()
            }
            if (q <= i1) {
                return new lj()
            }
            var js;
            if (this.y < i.y) {
                js = i.y
            } else {
                js = this.y
            }
            var i2;
            if (this.get_bottom() > i.get_bottom()) {
                i2 = i.get_bottom()
            } else {
                i2 = this.get_bottom()
            }
            if (i2 <= js) {
                return new lj()
            }
            return new lj(i1, js, q - i1, i2 - js)
        },
        intersects: function(i) {
            var i1;
            if (this.x < i.x) {
                i1 = i.x
            } else {
                i1 = this.x
            }
            var q;
            if (this.get_right() > i.get_right()) {
                q = i.get_right()
            } else {
                q = this.get_right()
            }
            if (q <= i1) {
                return false
            }
            var js;
            if (this.y < i.y) {
                js = i.y
            } else {
                js = this.y
            }
            var i2;
            if (this.get_bottom() > i.get_bottom()) {
                i2 = i.get_bottom()
            } else {
                i2 = this.get_bottom()
            }
            return i2 > js
        },
        isEmpty: function() {
            return this.width <= 0 || this.height <= 0
        },
        offset: function(q, i) {
            this.x += q;
            this.y += i
        },
        offsetPoint: function(i) {
            this.x += i.x;
            this.y += i.y
        },
        setEmpty: function() {
            this.x = this.y = this.width = this.height = 0
        },
        setTo: function(i2, i, q, i1) {
            this.x = i2;
            this.y = i;
            this.width = q;
            this.height = i1
        },
        transform: function(q) {
            var js = q.a * this.x + q.c * this.y;
            var i2 = js;
            var qZ = q.b * this.x + q.d * this.y;
            var qY = qZ;
            var i1 = q.a * (this.x + this.width) + q.c * this.y;
            var i = q.b * (this.x + this.width) + q.d * this.y;
            if (i1 < js) {
                js = i1
            }
            if (i < qZ) {
                qZ = i
            }
            if (i1 > i2) {
                i2 = i1
            }
            if (i > qY) {
                qY = i
            }
            i1 = q.a * (this.x + this.width) + q.c * (this.y + this.height);
            i = q.b * (this.x + this.width) + q.d * (this.y + this.height);
            if (i1 < js) {
                js = i1
            }
            if (i < qZ) {
                qZ = i
            }
            if (i1 > i2) {
                i2 = i1
            }
            if (i > qY) {
                qY = i
            }
            i1 = q.a * this.x + q.c * (this.y + this.height);
            i = q.b * this.x + q.d * (this.y + this.height);
            if (i1 < js) {
                js = i1
            }
            if (i < qZ) {
                qZ = i
            }
            if (i1 > i2) {
                i2 = i1
            }
            if (i > qY) {
                qY = i
            }
            return new lj(js + q.tx, qZ + q.ty, i2 - js, qY - qZ)
        },
        union: function(i) {
            if (this.width == 0 || this.height == 0) {
                return i.clone()
            } else {
                if (i.width == 0 || i.height == 0) {
                    return this.clone()
                }
            }
            var i1;
            if (this.x > i.x) {
                i1 = i.x
            } else {
                i1 = this.x
            }
            var q;
            if (this.get_right() < i.get_right()) {
                q = i.get_right()
            } else {
                q = this.get_right()
            }
            var js;
            if (this.y > i.y) {
                js = i.y
            } else {
                js = this.y
            }
            var i2;
            if (this.get_bottom() < i.get_bottom()) {
                i2 = i.get_bottom()
            } else {
                i2 = this.get_bottom()
            }
            return new lj(i1, js, q - i1, i2 - js)
        },
        __contract: function(q, i2, i1, i) {
            if (this.width == 0 && this.height == 0) {
                return
            }
            if (this.x < q) {
                this.x = q
            }
            if (this.y < i2) {
                this.y = i2
            }
            if (this.get_right() > q + i1) {
                this.width = q + i1 - this.x
            }
            if (this.get_bottom() > i2 + i) {
                this.height = i2 + i - this.y
            }
        },
        __expand: function(q, qY, i2, i) {
            if (this.width == 0 && this.height == 0) {
                this.x = q;
                this.y = qY;
                this.width = i2;
                this.height = i;
                return
            }
            var js = this.get_right();
            var i1 = this.get_bottom();
            if (this.x > q) {
                this.x = q
            }
            if (this.y > qY) {
                this.y = qY
            }
            if (js < q + i2) {
                this.width = q + i2 - this.x
            }
            if (i1 < qY + i) {
                this.height = qY + i - this.y
            }
        },
        __toFlashRectangle: function() {
            return null
        },
        get_bottom: function() {
            return this.y + this.height
        },
        set_bottom: function(i) {
            this.height = i - this.y;
            return i
        },
        get_bottomRight: function() {
            return new eD(this.x + this.width, this.y + this.height)
        },
        set_bottomRight: function(i) {
            this.width = i.x - this.x;
            this.height = i.y - this.y;
            return i.clone()
        },
        get_left: function() {
            return this.x
        },
        set_left: function(i) {
            this.width -= i - this.x;
            this.x = i;
            return i
        },
        get_right: function() {
            return this.x + this.width
        },
        set_right: function(i) {
            this.width = i - this.x;
            return i
        },
        get_size: function() {
            return new eD(this.width, this.height)
        },
        set_size: function(i) {
            this.width = i.x;
            this.height = i.y;
            return i.clone()
        },
        get_top: function() {
            return this.y
        },
        set_top: function(i) {
            this.height -= i - this.y;
            this.y = i;
            return i
        },
        get_topLeft: function() {
            return new eD(this.x, this.y)
        },
        set_topLeft: function(i) {
            this.x = i.x;
            this.y = i.y;
            return i.clone()
        },
        __class__: lj,
        __properties__: {
            set_topLeft: "set_topLeft",
            get_topLeft: "get_topLeft",
            set_top: "set_top",
            get_top: "get_top",
            set_size: "set_size",
            get_size: "get_size",
            set_right: "set_right",
            get_right: "get_right",
            set_left: "set_left",
            get_left: "get_left",
            set_bottomRight: "set_bottomRight",
            get_bottomRight: "get_bottomRight",
            set_bottom: "set_bottom",
            get_bottom: "get_bottom"
        }
    };
    var eD = function(i, q) {
        if (q == null) {
            q = 0
        }
        if (i == null) {
            i = 0
        }
        this.x = i;
        this.y = q
    };
    nt["lime.math.Vector2"] = eD;
    eD.__name__ = ["lime", "math", "Vector2"];
    eD.distance = function(i2, i1) {
        var q = i2.x - i1.x;
        var i = i2.y - i1.y;
        return Math.sqrt(q * q + i * i)
    };
    eD.interpolate = function(i1, q, i) {
        return new eD(q.x + i * (i1.x - q.x), q.y + i * (i1.y - q.y))
    };
    eD.polar = function(i, q) {
        return new eD(i * Math.cos(q), i * Math.sin(q))
    };
    eD.prototype = {
        length: null,
        x: null,
        y: null,
        add: function(i) {
            return new eD(i.x + this.x, i.y + this.y)
        },
        clone: function() {
            return new eD(this.x, this.y)
        },
        equals: function(i) {
            return i != null && i.x == this.x && i.y == this.y
        },
        normalize: function(q) {
            if (this.x == 0 && this.y == 0) {
                return
            } else {
                var i = q / Math.sqrt(this.x * this.x + this.y * this.y);
                this.x *= i;
                this.y *= i
            }
        },
        offset: function(q, i) {
            this.x += q;
            this.y += i
        },
        setTo: function(q, i) {
            this.x = q;
            this.y = i
        },
        subtract: function(i) {
            return new eD(this.x - i.x, this.y - i.y)
        },
        __toFlashPoint: function() {
            return null
        },
        get_length: function() {
            return Math.sqrt(this.x * this.x + this.y * this.y)
        },
        __class__: eD,
        __properties__: {
            get_length: "get_length"
        }
    };
    var eC = function(i, i2, i1, q) {
        if (q == null) {
            q = 0
        }
        if (i1 == null) {
            i1 = 0
        }
        if (i2 == null) {
            i2 = 0
        }
        if (i == null) {
            i = 0
        }
        this.w = q;
        this.x = i;
        this.y = i2;
        this.z = i1
    };
    nt["lime.math.Vector4"] = eC;
    eC.__name__ = ["lime", "math", "Vector4"];
    eC.__properties__ = {
        get_Z_AXIS: "get_Z_AXIS",
        get_Y_AXIS: "get_Y_AXIS",
        get_X_AXIS: "get_X_AXIS"
    };
    eC.X_AXIS = null;
    eC.Y_AXIS = null;
    eC.Z_AXIS = null;
    eC.angleBetween = function(q, i) {
        var i1 = new eC(q.x, q.y, q.z, q.w);
        i1.normalize();
        var i2 = new eC(i.x, i.y, i.z, i.w);
        i2.normalize();
        return Math.acos(i1.x * i2.x + i1.y * i2.y + i1.z * i2.z)
    };
    eC.distance = function(i2, q) {
        var i = q.x - i2.x;
        var js = q.y - i2.y;
        var i1 = q.z - i2.z;
        return Math.sqrt(i * i + js * js + i1 * i1)
    };
    eC.get_X_AXIS = function() {
        return new eC(1, 0, 0)
    };
    eC.get_Y_AXIS = function() {
        return new eC(0, 1, 0)
    };
    eC.get_Z_AXIS = function() {
        return new eC(0, 0, 1)
    };
    eC.prototype = {
        length: null,
        lengthSquared: null,
        w: null,
        x: null,
        y: null,
        z: null,
        add: function(i) {
            return new eC(this.x + i.x, this.y + i.y, this.z + i.z)
        },
        clone: function() {
            return new eC(this.x, this.y, this.z, this.w)
        },
        copyFrom: function(i) {
            this.x = i.x;
            this.y = i.y;
            this.z = i.z
        },
        crossProduct: function(i) {
            return new eC(this.y * i.z - this.z * i.y, this.z * i.x - this.x * i.z, this.x * i.y - this.y * i.x, 1)
        },
        decrementBy: function(i) {
            this.x -= i.x;
            this.y -= i.y;
            this.z -= i.z
        },
        dotProduct: function(i) {
            return this.x * i.x + this.y * i.y + this.z * i.z
        },
        equals: function(i, q) {
            if (q == null) {
                q = false
            }
            return this.x == i.x && this.y == i.y && this.z == i.z && (!q || this.w == i.w)
        },
        incrementBy: function(i) {
            this.x += i.x;
            this.y += i.y;
            this.z += i.z
        },
        nearEquals: function(q, i, i1) {
            if (i1 == null) {
                i1 = false
            }
            return Math.abs(this.x - q.x) < i && Math.abs(this.y - q.y) < i && Math.abs(this.z - q.z) < i && (!i1 || Math.abs(this.w - q.w) < i)
        },
        negate: function() {
            this.x *= -1;
            this.y *= -1;
            this.z *= -1
        },
        normalize: function() {
            var i = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
            if (i != 0) {
                this.x /= i;
                this.y /= i;
                this.z /= i
            }
            return i
        },
        project: function() {
            this.x /= this.w;
            this.y /= this.w;
            this.z /= this.w
        },
        scaleBy: function(i) {
            this.x *= i;
            this.y *= i;
            this.z *= i
        },
        setTo: function(i1, i, q) {
            this.x = i1;
            this.y = i;
            this.z = q
        },
        subtract: function(i) {
            return new eC(this.x - i.x, this.y - i.y, this.z - i.z)
        },
        toString: function() {
            return "Vector4(" + this.x + ", " + this.y + ", " + this.z + ")"
        },
        get_length: function() {
            return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)
        },
        get_lengthSquared: function() {
            return this.x * this.x + this.y * this.y + this.z * this.z
        },
        __class__: eC,
        __properties__: {
            get_lengthSquared: "get_lengthSquared",
            get_length: "get_length"
        }
    };
    var pw = {};
    nt["lime.math.color._ARGB.ARGB_Impl_"] = pw;
    pw.__name__ = ["lime", "math", "color", "_ARGB", "ARGB_Impl_"];
    pw.__properties__ = {
        set_r: "set_r",
        get_r: "get_r",
        set_g: "set_g",
        get_g: "get_g",
        set_b: "set_b",
        get_b: "get_b",
        set_a: "set_a",
        get_a: "get_a"
    };
    pw.a16 = null;
    pw.unmult = null;
    pw._new = function(i) {
        if (i == null) {
            i = 0
        }
        return i
    };
    pw.create = function(q, i2, i1, i) {
        var js = 0;
        js = (q & 255) << 24 | (i2 & 255) << 16 | (i1 & 255) << 8 | i & 255;
        return js
    };
    pw.multiplyAlpha = function(i) {
        if ((i >> 24 & 255) == 0) {
            i = 0
        } else {
            if ((i >> 24 & 255) != 255) {
                pw.a16 = pL.__alpha16[i >> 24 & 255];
                i = (i >> 24 & 255 & 255) << 24 | ((i >> 16 & 255) * pw.a16 >> 16 & 255) << 16 | ((i >> 8 & 255) * pw.a16 >> 16 & 255) << 8 | (i & 255) * pw.a16 >> 16 & 255
            }
        }
    };
    pw.readUInt8 = function(qY, i2, q, q2, q0) {
        if (q0 == null) {
            q0 = false
        }
        if (q2 == null) {
            q2 = 0
        }
        switch (q2) {
            case 2:
                qY = (i2[q + 1] & 255) << 24 | (i2[q] & 255) << 16 | (i2[q + 3] & 255) << 8 | i2[q + 2] & 255;
                break;
            case 0:
                qY = (i2[q + 1] & 255) << 24 | (i2[q + 2] & 255) << 16 | (i2[q + 3] & 255) << 8 | i2[q] & 255;
                break;
            case 1:
                qY = (i2[q + 2] & 255) << 24 | (i2[q + 3] & 255) << 16 | (i2[q] & 255) << 8 | i2[q + 1] & 255;
                break
        }
        if (q0) {
            if ((qY >> 24 & 255) != 0 && (qY >> 24 & 255) != 255) {
                pw.unmult = 255 / (qY >> 24 & 255);
                var i;
                var q3 = Math.floor((qY >> 16 & 255) * pw.unmult);
                i = pL.__clamp[q3];
                var qZ;
                var js = Math.floor((qY >> 8 & 255) * pw.unmult);
                qZ = pL.__clamp[js];
                var q1;
                var i1 = Math.floor((qY & 255) * pw.unmult);
                q1 = pL.__clamp[i1];
                qY = (qY >> 24 & 255 & 255) << 24 | (i & 255) << 16 | (qZ & 255) << 8 | q1 & 255
            }
        }
    };
    pw.set = function(i1, q, js, i2, i) {
        i1 = (q & 255) << 24 | (js & 255) << 16 | (i2 & 255) << 8 | i & 255
    };
    pw.unmultiplyAlpha = function(i1) {
        if ((i1 >> 24 & 255) != 0 && (i1 >> 24 & 255) != 255) {
            pw.unmult = 255 / (i1 >> 24 & 255);
            var qZ;
            var q = Math.floor((i1 >> 16 & 255) * pw.unmult);
            qZ = pL.__clamp[q];
            var qY;
            var js = Math.floor((i1 >> 8 & 255) * pw.unmult);
            qY = pL.__clamp[js];
            var i;
            var i2 = Math.floor((i1 & 255) * pw.unmult);
            i = pL.__clamp[i2];
            i1 = (i1 >> 24 & 255 & 255) << 24 | (qZ & 255) << 16 | (qY & 255) << 8 | i & 255
        }
    };
    pw.writeUInt8 = function(i, q, i2, i1, js) {
        if (js == null) {
            js = false
        }
        if (i1 == null) {
            i1 = 0
        }
        if (js) {
            if ((i >> 24 & 255) == 0) {
                i = 0
            } else {
                if ((i >> 24 & 255) != 255) {
                    pw.a16 = pL.__alpha16[i >> 24 & 255];
                    i = (i >> 24 & 255 & 255) << 24 | ((i >> 16 & 255) * pw.a16 >> 16 & 255) << 16 | ((i >> 8 & 255) * pw.a16 >> 16 & 255) << 8 | (i & 255) * pw.a16 >> 16 & 255
                }
            }
        }
        switch (i1) {
            case 2:
                q[i2] = i & 255;
                q[i2 + 1] = i >> 8 & 255;
                q[i2 + 2] = i >> 16 & 255;
                q[i2 + 3] = i >> 24 & 255;
                break;
            case 0:
                q[i2] = i >> 16 & 255;
                q[i2 + 1] = i >> 8 & 255;
                q[i2 + 2] = i & 255;
                q[i2 + 3] = i >> 24 & 255;
                break;
            case 1:
                q[i2] = i >> 24 & 255;
                q[i2 + 1] = i >> 16 & 255;
                q[i2 + 2] = i >> 8 & 255;
                q[i2 + 3] = i & 255;
                break
        }
    };
    pw.__fromBGRA = function(i) {
        var q = 0;
        q = (i & 255 & 255) << 24 | (i >> 8 & 255 & 255) << 16 | (i >> 16 & 255 & 255) << 8 | i >> 24 & 255 & 255;
        return q
    };
    pw.__fromRGBA = function(i) {
        var q = 0;
        q = (i & 255 & 255) << 24 | (i >> 24 & 255 & 255) << 16 | (i >> 16 & 255 & 255) << 8 | i >> 8 & 255 & 255;
        return q
    };
    pw.get_a = function(i) {
        return i >> 24 & 255
    };
    pw.set_a = function(i, q) {
        i = (q & 255) << 24 | (i >> 16 & 255 & 255) << 16 | (i >> 8 & 255 & 255) << 8 | i & 255 & 255;
        return q
    };
    pw.get_b = function(i) {
        return i & 255
    };
    pw.set_b = function(i, q) {
        i = (i >> 24 & 255 & 255) << 24 | (i >> 16 & 255 & 255) << 16 | (i >> 8 & 255 & 255) << 8 | q & 255;
        return q
    };
    pw.get_g = function(i) {
        return i >> 8 & 255
    };
    pw.set_g = function(i, q) {
        i = (i >> 24 & 255 & 255) << 24 | (i >> 16 & 255 & 255) << 16 | (q & 255) << 8 | i & 255 & 255;
        return q
    };
    pw.get_r = function(i) {
        return i >> 16 & 255
    };
    pw.set_r = function(i, q) {
        i = (i >> 24 & 255 & 255) << 24 | (q & 255) << 16 | (i >> 8 & 255 & 255) << 8 | i & 255 & 255;
        return q
    };
    var eq = {};
    nt["lime.math.color._BGRA.BGRA_Impl_"] = eq;
    eq.__name__ = ["lime", "math", "color", "_BGRA", "BGRA_Impl_"];
    eq.__properties__ = {
        set_r: "set_r",
        get_r: "get_r",
        set_g: "set_g",
        get_g: "get_g",
        set_b: "set_b",
        get_b: "get_b",
        set_a: "set_a",
        get_a: "get_a"
    };
    eq.a16 = null;
    eq.unmult = null;
    eq._new = function(i) {
        if (i == null) {
            i = 0
        }
        return i
    };
    eq.create = function(i, i2, i1, q) {
        var js = 0;
        js = (i & 255) << 24 | (i2 & 255) << 16 | (i1 & 255) << 8 | q & 255;
        return js
    };
    eq.multiplyAlpha = function(i) {
        if ((i & 255) == 0) {
            i = 0
        } else {
            if ((i & 255) != 255) {
                eq.a16 = pL.__alpha16[i & 255];
                i = ((i >> 24 & 255) * eq.a16 >> 16 & 255) << 24 | ((i >> 16 & 255) * eq.a16 >> 16 & 255) << 16 | ((i >> 8 & 255) * eq.a16 >> 16 & 255) << 8 | i & 255 & 255
            }
        }
    };
    eq.readUInt8 = function(qY, i2, q, q2, q0) {
        if (q0 == null) {
            q0 = false
        }
        if (q2 == null) {
            q2 = 0
        }
        switch (q2) {
            case 2:
                qY = (i2[q] & 255) << 24 | (i2[q + 1] & 255) << 16 | (i2[q + 2] & 255) << 8 | i2[q + 3] & 255;
                break;
            case 0:
                qY = (i2[q + 2] & 255) << 24 | (i2[q + 1] & 255) << 16 | (i2[q] & 255) << 8 | i2[q + 3] & 255;
                break;
            case 1:
                qY = (i2[q + 3] & 255) << 24 | (i2[q + 2] & 255) << 16 | (i2[q + 1] & 255) << 8 | i2[q] & 255;
                break
        }
        if (q0) {
            if ((qY & 255) != 0 && (qY & 255) != 255) {
                eq.unmult = 255 / (qY & 255);
                var q1;
                var q3 = Math.floor((qY >> 24 & 255) * eq.unmult);
                q1 = pL.__clamp[q3];
                var qZ;
                var js = Math.floor((qY >> 16 & 255) * eq.unmult);
                qZ = pL.__clamp[js];
                var i;
                var i1 = Math.floor((qY >> 8 & 255) * eq.unmult);
                i = pL.__clamp[i1];
                qY = (q1 & 255) << 24 | (qZ & 255) << 16 | (i & 255) << 8 | qY & 255 & 255
            }
        }
    };
    eq.set = function(i1, i, js, i2, q) {
        i1 = (i & 255) << 24 | (js & 255) << 16 | (i2 & 255) << 8 | q & 255
    };
    eq.unmultiplyAlpha = function(i1) {
        if ((i1 & 255) != 0 && (i1 & 255) != 255) {
            eq.unmult = 255 / (i1 & 255);
            var q;
            var i = Math.floor((i1 >> 24 & 255) * eq.unmult);
            q = pL.__clamp[i];
            var qZ;
            var js = Math.floor((i1 >> 16 & 255) * eq.unmult);
            qZ = pL.__clamp[js];
            var qY;
            var i2 = Math.floor((i1 >> 8 & 255) * eq.unmult);
            qY = pL.__clamp[i2];
            i1 = (q & 255) << 24 | (qZ & 255) << 16 | (qY & 255) << 8 | i1 & 255 & 255
        }
    };
    eq.writeUInt8 = function(i, q, i2, i1, js) {
        if (js == null) {
            js = false
        }
        if (i1 == null) {
            i1 = 0
        }
        if (js) {
            if ((i & 255) == 0) {
                i = 0
            } else {
                if ((i & 255) != 255) {
                    eq.a16 = pL.__alpha16[i & 255];
                    i = ((i >> 24 & 255) * eq.a16 >> 16 & 255) << 24 | ((i >> 16 & 255) * eq.a16 >> 16 & 255) << 16 | ((i >> 8 & 255) * eq.a16 >> 16 & 255) << 8 | i & 255 & 255
                }
            }
        }
        switch (i1) {
            case 2:
                q[i2] = i >> 24 & 255;
                q[i2 + 1] = i >> 16 & 255;
                q[i2 + 2] = i >> 8 & 255;
                q[i2 + 3] = i & 255;
                break;
            case 0:
                q[i2] = i >> 8 & 255;
                q[i2 + 1] = i >> 16 & 255;
                q[i2 + 2] = i >> 24 & 255;
                q[i2 + 3] = i & 255;
                break;
            case 1:
                q[i2] = i & 255;
                q[i2 + 1] = i >> 8 & 255;
                q[i2 + 2] = i >> 16 & 255;
                q[i2 + 3] = i >> 24 & 255;
                break
        }
    };
    eq.__fromARGB = function(q) {
        var i = 0;
        i = (q & 255 & 255) << 24 | (q >> 8 & 255 & 255) << 16 | (q >> 16 & 255 & 255) << 8 | q >> 24 & 255 & 255;
        return i
    };
    eq.__fromRGBA = function(i) {
        var q = 0;
        q = (i >> 8 & 255 & 255) << 24 | (i >> 16 & 255 & 255) << 16 | (i >> 24 & 255 & 255) << 8 | i & 255 & 255;
        return q
    };
    eq.get_a = function(i) {
        return i & 255
    };
    eq.set_a = function(i, q) {
        i = (i >> 24 & 255 & 255) << 24 | (i >> 16 & 255 & 255) << 16 | (i >> 8 & 255 & 255) << 8 | q & 255;
        return q
    };
    eq.get_b = function(i) {
        return i >> 24 & 255
    };
    eq.set_b = function(i, q) {
        i = (q & 255) << 24 | (i >> 16 & 255 & 255) << 16 | (i >> 8 & 255 & 255) << 8 | i & 255 & 255;
        return q
    };
    eq.get_g = function(i) {
        return i >> 16 & 255
    };
    eq.set_g = function(i, q) {
        i = (i >> 24 & 255 & 255) << 24 | (q & 255) << 16 | (i >> 8 & 255 & 255) << 8 | i & 255 & 255;
        return q
    };
    eq.get_r = function(i) {
        return i >> 8 & 255
    };
    eq.set_r = function(i, q) {
        i = (i >> 24 & 255 & 255) << 24 | (i >> 16 & 255 & 255) << 16 | (q & 255) << 8 | i & 255 & 255;
        return q
    };
    var pL = {};
    nt["lime.math.color._RGBA.RGBA_Impl_"] = pL;
    pL.__name__ = ["lime", "math", "color", "_RGBA", "RGBA_Impl_"];
    pL.__properties__ = {
        set_r: "set_r",
        get_r: "get_r",
        set_g: "set_g",
        get_g: "get_g",
        set_b: "set_b",
        get_b: "get_b",
        set_a: "set_a",
        get_a: "get_a"
    };
    pL.__alpha16 = null;
    pL.__clamp = null;
    pL.a16 = null;
    pL.unmult = null;
    pL._new = function(i) {
        if (i == null) {
            i = 0
        }
        return i
    };
    pL.create = function(js, i2, i, q) {
        var i1 = 0;
        i1 = (js & 255) << 24 | (i2 & 255) << 16 | (i & 255) << 8 | q & 255;
        return i1
    };
    pL.multiplyAlpha = function(i) {
        if ((i & 255) == 0) {
            if (i != 0) {
                i = 0
            }
        } else {
            if ((i & 255) != 255) {
                pL.a16 = pL.__alpha16[i & 255];
                i = ((i >> 24 & 255) * pL.a16 >> 16 & 255) << 24 | ((i >> 16 & 255) * pL.a16 >> 16 & 255) << 16 | ((i >> 8 & 255) * pL.a16 >> 16 & 255) << 8 | i & 255 & 255
            }
        }
    };
    pL.readUInt8 = function(qY, i2, q, q2, q0) {
        if (q0 == null) {
            q0 = false
        }
        if (q2 == null) {
            q2 = 0
        }
        switch (q2) {
            case 2:
                qY = (i2[q + 2] & 255) << 24 | (i2[q + 1] & 255) << 16 | (i2[q] & 255) << 8 | i2[q + 3] & 255;
                break;
            case 0:
                qY = (i2[q] & 255) << 24 | (i2[q + 1] & 255) << 16 | (i2[q + 2] & 255) << 8 | i2[q + 3] & 255;
                break;
            case 1:
                qY = (i2[q + 1] & 255) << 24 | (i2[q + 2] & 255) << 16 | (i2[q + 3] & 255) << 8 | i2[q] & 255;
                break
        }
        if (q0) {
            if ((qY & 255) != 0 && (qY & 255) != 255) {
                pL.unmult = 255 / (qY & 255);
                var i;
                var q3 = Math.round((qY >> 24 & 255) * pL.unmult);
                i = pL.__clamp[q3];
                var qZ;
                var js = Math.round((qY >> 16 & 255) * pL.unmult);
                qZ = pL.__clamp[js];
                var q1;
                var i1 = Math.round((qY >> 8 & 255) * pL.unmult);
                q1 = pL.__clamp[i1];
                qY = (i & 255) << 24 | (qZ & 255) << 16 | (q1 & 255) << 8 | qY & 255 & 255
            }
        }
    };
    pL.set = function(i1, js, i2, i, q) {
        i1 = (js & 255) << 24 | (i2 & 255) << 16 | (i & 255) << 8 | q & 255
    };
    pL.unmultiplyAlpha = function(i1) {
        if ((i1 & 255) != 0 && (i1 & 255) != 255) {
            pL.unmult = 255 / (i1 & 255);
            var qZ;
            var q = Math.round((i1 >> 24 & 255) * pL.unmult);
            qZ = pL.__clamp[q];
            var qY;
            var js = Math.round((i1 >> 16 & 255) * pL.unmult);
            qY = pL.__clamp[js];
            var i;
            var i2 = Math.round((i1 >> 8 & 255) * pL.unmult);
            i = pL.__clamp[i2];
            i1 = (qZ & 255) << 24 | (qY & 255) << 16 | (i & 255) << 8 | i1 & 255 & 255
        }
    };
    pL.writeUInt8 = function(i, q, i2, i1, js) {
        if (js == null) {
            js = false
        }
        if (i1 == null) {
            i1 = 0
        }
        if (js) {
            if ((i & 255) == 0) {
                if (i != 0) {
                    i = 0
                }
            } else {
                if ((i & 255) != 255) {
                    pL.a16 = pL.__alpha16[i & 255];
                    i = ((i >> 24 & 255) * pL.a16 >> 16 & 255) << 24 | ((i >> 16 & 255) * pL.a16 >> 16 & 255) << 16 | ((i >> 8 & 255) * pL.a16 >> 16 & 255) << 8 | i & 255 & 255
                }
            }
        }
        switch (i1) {
            case 2:
                q[i2] = i >> 8 & 255;
                q[i2 + 1] = i >> 16 & 255;
                q[i2 + 2] = i >> 24 & 255;
                q[i2 + 3] = i & 255;
                break;
            case 0:
                q[i2] = i >> 24 & 255;
                q[i2 + 1] = i >> 16 & 255;
                q[i2 + 2] = i >> 8 & 255;
                q[i2 + 3] = i & 255;
                break;
            case 1:
                q[i2] = i & 255;
                q[i2 + 1] = i >> 24 & 255;
                q[i2 + 2] = i >> 16 & 255;
                q[i2 + 3] = i >> 8 & 255;
                break
        }
    };
    pL.__fromARGB = function(q) {
        var i = 0;
        i = (q >> 16 & 255 & 255) << 24 | (q >> 8 & 255 & 255) << 16 | (q & 255 & 255) << 8 | q >> 24 & 255 & 255;
        return i
    };
    pL.__fromBGRA = function(q) {
        var i = 0;
        i = (q >> 8 & 255 & 255) << 24 | (q >> 16 & 255 & 255) << 16 | (q >> 24 & 255 & 255) << 8 | q & 255 & 255;
        return i
    };
    pL.get_a = function(i) {
        return i & 255
    };
    pL.set_a = function(i, q) {
        i = (i >> 24 & 255 & 255) << 24 | (i >> 16 & 255 & 255) << 16 | (i >> 8 & 255 & 255) << 8 | q & 255;
        return q
    };
    pL.get_b = function(i) {
        return i >> 8 & 255
    };
    pL.set_b = function(i, q) {
        i = (i >> 24 & 255 & 255) << 24 | (i >> 16 & 255 & 255) << 16 | (q & 255) << 8 | i & 255 & 255;
        return q
    };
    pL.get_g = function(i) {
        return i >> 16 & 255
    };
    pL.set_g = function(i, q) {
        i = (i >> 24 & 255 & 255) << 24 | (q & 255) << 16 | (i >> 8 & 255 & 255) << 8 | i & 255 & 255;
        return q
    };
    pL.get_r = function(i) {
        return i >> 24 & 255
    };
    pL.set_r = function(i, q) {
        i = (q & 255) << 24 | (i >> 16 & 255 & 255) << 16 | (i >> 8 & 255 & 255) << 8 | i & 255 & 255;
        return q
    };
    var gY = function() {
        this.promise = new oJ()
    };
    nt["lime.net.HTTPRequest"] = gY;
    gY.__name__ = ["lime", "net", "HTTPRequest"];
    gY.prototype = {
        bytes: null,
        bytesLoaded: null,
        bytesTotal: null,
        promise: null,
        load: function(i) {
          /*  var i1 = this;
            this.bytesLoaded = 0;
            this.bytesTotal = 0;
            var q = new XMLHttpRequest();
            q.addEventListener("progress", oT(this, this.request_onProgress), false);
            q.onreadystatechange = function() {
                if (q.readyState != 4) {
                    return
                }
                if (q.status != null && q.status >= 200 && q.status <= 400) {
					console.log(q);
                    i1.bytes = r.ofData(q.response);
                    i1.promise.complete(i1.bytes)
                } else {
                    i1.promise.error(q.status)
                }
            };
            q.open("GET", i, true);
            q.responseType = "arraybuffer";
            q.send("");*/
            return this.promise.future
        },
        curl_onProgress: function(i2, i, i1, q) {
            if (q > this.bytesLoaded || i > this.bytesLoaded || i1 > this.bytesTotal || i2 > this.bytesTotal) {
                if (q > this.bytesLoaded) {
                    this.bytesLoaded = q | 0
                }
                if (i > this.bytesLoaded) {
                    this.bytesLoaded = i | 0
                }
                if (i1 > this.bytesTotal) {
                    this.bytesTotal = i1 | 0
                }
                if (i2 > this.bytesTotal) {
                    this.bytesTotal = i2 | 0
                }
                this.promise.progress(this.bytesLoaded / this.bytesTotal)
            }
            return 0
        },
        curl_onWrite: function(i, i2, i1) {
            var q = this.bytes;
            this.bytes = r.alloc(this.bytes.length + i.length);
            this.bytes.blit(0, q, 0, q.length);
            this.bytes.blit(q.length, i, 0, i.length);
            return i2 * i1
        },
        request_onProgress: function(i) {
            this.promise.progress(i.loaded / i.total)
        },
        __class__: gY
    };
    var eQ = {};
    nt["lime.net.curl._CURL.CURL_Impl_"] = eQ;
    eQ.__name__ = ["lime", "net", "curl", "_CURL", "CURL_Impl_"];
    eQ.getDate = function(q, i) {
        return 0
    };
    eQ.globalCleanup = function() {};
    eQ.globalInit = function(i) {
        return 0
    };
    eQ.version = function() {
        return null
    };
    eQ.versionInfo = function(i) {
        return null
    };
    eQ.intGt = function(q, i) {
        return q > i
    };
    var eY = function() {};
    nt["lime.net.curl.CURLEasy"] = eY;
    eY.__name__ = ["lime", "net", "curl", "CURLEasy"];
    eY.cleanup = function(i) {};
    eY.duphandle = function(i) {
        return 0
    };
    eY.escape = function(i1, i, q) {
        return null
    };
    eY.getinfo = function(i, q) {
        return null
    };
    eY.init = function() {
        return 0
    };
    eY.pause = function(i, q) {
        return 0
    };
    eY.perform = function(i) {
        return 0
    };
    eY.reset = function(i) {};
    eY.setopt = function(q, i, i1) {
        return 0
    };
    eY.strerror = function(i) {
        return null
    };
    eY.unescape = function(i2, i1, i, q) {
        return null
    };
    eY.__writeCallback = function(i2, i, i1, q) {
        return 0
    };
    var c2 = function() {
        this.onProgress = new pm();
        this.onError = new pm();
        this.onComplete = new pm();
        this.doWork = new pm()
    };
    nt["lime.system.BackgroundWorker"] = c2;
    c2.__name__ = ["lime", "system", "BackgroundWorker"];
    c2.prototype = {
        canceled: null,
        doWork: null,
        onComplete: null,
        onError: null,
        onProgress: null,
        __runMessage: null,
        cancel: function() {
            this.canceled = true
        },
        run: function(i) {
            this.canceled = false;
            this.__runMessage = i;
            this.__doWork()
        },
        sendComplete: function(i) {
            if (!this.canceled) {
                this.canceled = true;
                this.onComplete.dispatch(i)
            }
        },
        sendError: function(i) {
            if (!this.canceled) {
                this.canceled = true;
                this.onError.dispatch(i)
            }
        },
        sendProgress: function(i) {
            if (!this.canceled) {
                this.onProgress.dispatch(i)
            }
        },
        __doWork: function() {
            this.doWork.dispatch(this.__runMessage)
        },
        __update: function(i) {},
        __class__: c2
    };
    var mW = function() {};
    nt["lime.system.CFFI"] = mW;
    mW.__name__ = ["lime", "system", "CFFI"];
    mW.available = null;
    mW.enabled = null;
    mW.load = function(q, js, i1, i2) {
        if (i2 == null) {
            i2 = false
        }
        if (i1 == null) {
            i1 = 0
        }
        if (!mW.enabled) {
            return ar.makeVarArgs(function(qY) {
                return {}
            })
        }
        var i = null;
        return i
    };
    mW.__findHaxelib = function(i) {
        return ""
    };
    mW.__loaderTrace = function(i) {};
    mW.__sysName = function() {
        return null
    };
    mW.__tryLoad = function(i1, i, i2, q) {
        return null
    };
    var jI = {};
    nt["lime.system._CFFIPointer.CFFIPointer_Impl_"] = jI;
    jI.__name__ = ["lime", "system", "_CFFIPointer", "CFFIPointer_Impl_"];
    jI._new = function(i) {
        return i
    };
    jI.get = function(i) {
        if (i != null) {}
        return 0
    };
    jI.equals = function(q, i) {
        return jI.get(q) == i
    };
    jI.equalsPointer = function(q, i) {
        return jI.get(q) == jI.get(i)
    };
    jI.greaterThan = function(q, i) {
        return jI.get(q) > i
    };
    jI.greaterThanPointer = function(q, i) {
        return jI.get(q) > jI.get(i)
    };
    jI.greaterThanOrEqual = function(q, i) {
        return jI.get(q) >= i
    };
    jI.greaterThanOrEqualPointer = function(q, i) {
        return jI.get(q) >= jI.get(i)
    };
    jI.lessThan = function(q, i) {
        return jI.get(q) < i
    };
    jI.lessThanPointer = function(q, i) {
        return jI.get(q) < jI.get(i)
    };
    jI.lessThanOrEqual = function(q, i) {
        return jI.get(q) <= i
    };
    jI.lessThanOrEqualPointer = function(q, i) {
        return jI.get(q) <= jI.get(i)
    };
    jI.notEquals = function(q, i) {
        return jI.get(q) != i
    };
    jI.notEqualsPointer = function(q, i) {
        return jI.get(q) != jI.get(i)
    };
    var oc = function() {};
    nt["lime.system.Clipboard"] = oc;
    oc.__name__ = ["lime", "system", "Clipboard"];
    oc.__properties__ = {
        set_text: "set_text",
        get_text: "get_text"
    };
    oc.get_text = function() {
        return null
    };
    oc.set_text = function(i) {
        return null
    };
    var j0 = function() {};
    nt["lime.system.Display"] = j0;
    j0.__name__ = ["lime", "system", "Display"];
    j0.prototype = {
        bounds: null,
        currentMode: null,
        id: null,
        dpi: null,
        name: null,
        supportedModes: null,
        __class__: j0
    };
    var gc = function(i2, i, i1, q) {
        this.width = i2;
        this.height = i;
        this.refreshRate = i1;
        this.pixelFormat = q
    };
    nt["lime.system.DisplayMode"] = gc;
    gc.__name__ = ["lime", "system", "DisplayMode"];
    gc.prototype = {
        height: null,
        pixelFormat: null,
        refreshRate: null,
        width: null,
        __class__: gc
    };
    var n1 = nt["lime.system.Endian"] = {
        __ename__: ["lime", "system", "Endian"],
        __constructs__: ["LITTLE_ENDIAN", "BIG_ENDIAN"]
    };
    n1.LITTLE_ENDIAN = ["LITTLE_ENDIAN", 0];
    n1.LITTLE_ENDIAN.toString = ea;
    n1.LITTLE_ENDIAN.__enum__ = n1;
    n1.BIG_ENDIAN = ["BIG_ENDIAN", 1];
    n1.BIG_ENDIAN.toString = ea;
    n1.BIG_ENDIAN.__enum__ = n1;
    var pg = function() {};
    nt["lime.system.System"] = pg;
    pg.__name__ = ["lime", "system", "System"];
    pg.__properties__ = {
        get_userDirectory: "get_userDirectory",
        get_numDisplays: "get_numDisplays",
        get_fontsDirectory: "get_fontsDirectory",
        get_endianness: "get_endianness",
        get_documentsDirectory: "get_documentsDirectory",
        get_desktopDirectory: "get_desktopDirectory",
        get_applicationStorageDirectory: "get_applicationStorageDirectory",
        get_applicationDirectory: "get_applicationDirectory",
        set_allowScreenTimeout: "set_allowScreenTimeout",
        get_allowScreenTimeout: "get_allowScreenTimeout"
    };
    pg.applicationDirectory = null;
    pg.applicationStorageDirectory = null;
    pg.desktopDirectory = null;
    pg.disableCFFI = null;
    pg.documentsDirectory = null;
    pg.endianness = null;
    pg.fontsDirectory = null;
    pg.numDisplays = null;
    pg.userDirectory = null;
    pg.embed = bD.lime.embed = function(js, qY, i, i2, i1) {
        var qZ = null;
        if (typeof(js) == "string") {
            qZ = window.document.getElementById(n0.__cast(js, String))
        } else {
            if (js == null) {
                qZ = window.document.createElement("div")
            } else {
                qZ = js
            }
        }
        var q = null;
        if (i2 != null) {
            i2 = cP.replace(i2, "#", "");
            if (i2.indexOf("0x") > -1) {
                q = kr.parseInt(i2)
            } else {
                q = kr.parseInt("0x" + i2)
            }
        }
        if (qY == null) {
            qY = 0
        }
        if (i == null) {
            i = 0
        }
        cb.config.windows[0].background = q;
        cb.config.windows[0].element = qZ;
        cb.config.windows[0].width = qY;
        cb.config.windows[0].height = i;
        cb.config.assetsPrefix = i1;
        cb.create()
    };
    pg.exit = function(i) {};
    pg.getDisplay = function(q) {
        if (q == 0) {
            var i = new j0();
            i.id = 0;
            i.name = "Generic Display";
            i.dpi = 96;
            i.currentMode = new gc(window.screen.width, window.screen.height, 60, 1);
            i.supportedModes = [i.currentMode];
            i.bounds = new lj(0, 0, i.currentMode.width, i.currentMode.height);
            return i
        }
        return null
    };
    pg.getTimer = function() {
        return new Date().getTime()
    };
    pg.load = function(i, i2, q, i1) {
        if (i1 == null) {
            i1 = false
        }
        if (q == null) {
            q = 0
        }
        return mW.load(i, i2, q, i1)
    };
    pg.get_allowScreenTimeout = function() {
        return true
    };
    pg.set_allowScreenTimeout = function(i) {
        return true
    };
    pg.get_applicationDirectory = function() {
        return null
    };
    pg.get_applicationStorageDirectory = function() {
        var i = "MyCompany";
        var q = "MyApplication";
        if (dE.current != null && dE.current.config != null) {
            if (dE.current.config.company != null) {
                i = dE.current.config.company
            }
            if (dE.current.config.file != null) {
                q = dE.current.config.file
            }
        }
        return null
    };
    pg.get_desktopDirectory = function() {
        return null
    };
    pg.get_documentsDirectory = function() {
        return null
    };
    pg.get_fontsDirectory = function() {
        return null
    };
    pg.get_numDisplays = function() {
        return 1
    };
    pg.get_userDirectory = function() {
        return null
    };
    pg.get_endianness = function() {
        return n1.LITTLE_ENDIAN
    };
    var dl = function(q, i) {
        if (i == null) {
            i = 1
        }
        if (q == null) {
            q = 0
        }
        this.onProgress = new pm();
        this.onError = new pm();
        this.onComplete = new pm();
        this.doWork = new pm();
        this.minThreads = q;
        this.maxThreads = i;
        this.currentThreads = 0
    };
    nt["lime.system.ThreadPool"] = dl;
    dl.__name__ = ["lime", "system", "ThreadPool"];
    dl.prototype = {
        currentThreads: null,
        doWork: null,
        maxThreads: null,
        minThreads: null,
        onComplete: null,
        onError: null,
        onProgress: null,
        queue: function(i) {
            this.doWork.dispatch(i)
        },
        sendComplete: function(i) {
            this.onComplete.dispatch(i)
        },
        sendError: function(i) {
            this.onError.dispatch(i)
        },
        sendProgress: function(i) {
            this.onProgress.dispatch(i)
        },
        __class__: dl
    };
    var br = nt["lime.system._ThreadPool.ThreadPoolMessageType"] = {
        __ename__: ["lime", "system", "_ThreadPool", "ThreadPoolMessageType"],
        __constructs__: ["COMPLETE", "ERROR", "EXIT", "PROGRESS", "WORK"]
    };
    br.COMPLETE = ["COMPLETE", 0];
    br.COMPLETE.toString = ea;
    br.COMPLETE.__enum__ = br;
    br.ERROR = ["ERROR", 1];
    br.ERROR.toString = ea;
    br.ERROR.__enum__ = br;
    br.EXIT = ["EXIT", 2];
    br.EXIT.toString = ea;
    br.EXIT.__enum__ = br;
    br.PROGRESS = ["PROGRESS", 3];
    br.PROGRESS.toString = ea;
    br.PROGRESS.__enum__ = br;
    br.WORK = ["WORK", 4];
    br.WORK.toString = ea;
    br.WORK.__enum__ = br;
    var m9 = function(i, q) {
        this.type = i;
        this.state = q
    };
    nt["lime.system._ThreadPool.ThreadPoolMessage"] = m9;
    m9.__name__ = ["lime", "system", "_ThreadPool", "ThreadPoolMessage"];
    m9.prototype = {
        state: null,
        type: null,
        __class__: m9
    };
    var gK = function(i) {
        if (i != null) {
            this.name = i
        }
        if (this.__fontPath != null) {
            this.__fromFile(this.__fontPath)
        }
    };
    nt["lime.text.Font"] = gK;
    gK.__name__ = ["lime", "text", "Font"];
    gK.fromBytes = function(i) {
        var q = new gK();
        q.__fromBytes(i);
        return q
    };
    gK.fromFile = function(q) {
        var i = new gK();
        i.__fromFile(q);
        return i
    };
    gK.prototype = {
        ascender: null,
        descender: null,
        height: null,
        name: null,
        numGlyphs: null,
        src: null,
        underlinePosition: null,
        underlineThickness: null,
        unitsPerEM: null,
        __fontPath: null,
        decompose: function() {
            return null
        },
        getGlyph: function(i) {
            return -1
        },
        getGlyphs: function(i) {
            if (i == null) {
                i = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^`'\"/\\&*()[]{}<>|:;_-+=?,. "
            }
            return null
        },
        getGlyphMetrics: function(i) {
            return null
        },
        renderGlyph: function(i, q) {
            return null
        },
        renderGlyphs: function(i, q) {
            return null
        },
        __fromBytes: function(i) {
            this.__fontPath = null
        },
        __fromFile: function(i) {
            this.__fontPath = i
        },
        __setSize: function(i) {},
        get_ascender: function() {
            return 0
        },
        get_descender: function() {
            return 0
        },
        get_height: function() {
            return 0
        },
        get_numGlyphs: function() {
            return 0
        },
        get_underlinePosition: function() {
            return 0
        },
        get_underlineThickness: function() {
            return 0
        },
        get_unitsPerEM: function() {
            return 0
        },
        __class__: gK,
        __properties__: {
            get_unitsPerEM: "get_unitsPerEM",
            get_underlineThickness: "get_underlineThickness",
            get_underlinePosition: "get_underlinePosition",
            get_numGlyphs: "get_numGlyphs",
            get_height: "get_height",
            get_descender: "get_descender",
            get_ascender: "get_ascender"
        }
    };
    var ou = {};
    nt["lime.text._Glyph.Glyph_Impl_"] = ou;
    ou.__name__ = ["lime", "text", "_Glyph", "Glyph_Impl_"];
    ou._new = function(q) {
        return q
    };
    var pS = function() {};
    nt["lime.text.GlyphMetrics"] = pS;
    pS.__name__ = ["lime", "text", "GlyphMetrics"];
    pS.prototype = {
        advance: null,
        height: null,
        horizontalBearing: null,
        verticalBearing: null,
        __class__: pS
    };
    var oE = function(i, q, i1) {
        this.glyph = i;
        this.advance = q;
        if (i1 != null) {
            this.offset = i1
        } else {
            this.offset = new eD()
        }
    };
    nt["lime.text.GlyphPosition"] = oE;
    oE.__name__ = ["lime", "text", "GlyphPosition"];
    oE.prototype = {
        advance: null,
        glyph: null,
        offset: null,
        __class__: oE
    };
    var iU = {};
    nt["lime.text._TextDirection.TextDirection_Impl_"] = iU;
    iU.__name__ = ["lime", "text", "_TextDirection", "TextDirection_Impl_"];
    iU.__properties__ = {
        get_vertical: "get_vertical",
        get_horizontal: "get_horizontal",
        get_forward: "get_forward",
        get_backward: "get_backward"
    };
    iU.reverse = function(i) {
        i = i ^ 1
    };
    iU.toString = function(i) {
        switch (i) {
            case 4:
                return "leftToRight";
            case 5:
                return "rightToLeft";
            case 6:
                return "topToBottom";
            case 7:
                return "bottomToTop";
            default:
                return ""
        }
    };
    iU.get_backward = function(i) {
        return (i & -3) == 5
    };
    iU.get_forward = function(i) {
        return (i & -3) == 4
    };
    iU.get_horizontal = function(i) {
        return (i & -2) == 4
    };
    iU.get_vertical = function(i) {
        return (i & -2) == 6
    };
    var dZ = function(js, q, i1, i2, i, qY) {
        if (qY == null) {
            qY = "en"
        }
        if (i == null) {
            i = "Zyyy"
        }
        if (i2 == null) {
            i2 = 4
        }
        if (i1 == null) {
            i1 = 12
        }
        if (js == null) {
            js = ""
        }
        this.set_text(js);
        this.set_font(q);
        this.set_size(i1);
        this.__direction = i2;
        this.__script = i;
        this.__language = qY;
        this.positions = [];
        this.__dirty = true
    };
    nt["lime.text.TextLayout"] = dZ;
    dZ.__name__ = ["lime", "text", "TextLayout"];
    dZ.prototype = {
        font: null,
        glyphs: null,
        positions: null,
        size: null,
        text: null,
        __dirty: null,
        __buffer: null,
        __direction: null,
        __handle: null,
        __language: null,
        __script: null,
        __position: function() {
            this.positions = []
        },
        get_positions: function() {
            if (this.__dirty) {
                this.__dirty = false;
                this.__position()
            }
            return this.positions
        },
        get_direction: function() {
            return this.__direction
        },
        set_direction: function(i) {
            if (i == this.__direction) {
                return i
            }
            this.__direction = i;
            this.__dirty = true;
            return i
        },
        set_font: function(i) {
            if (i == this.font) {
                return i
            }
            this.font = i;
            this.__dirty = true;
            return i
        },
        get_glyphs: function() {
            var q = [];
            var i2 = 0;
            var i1 = this.get_positions();
            while (i2 < i1.length) {
                var i = i1[i2];
                ++i2;
                q.push(i.glyph)
            }
            return q
        },
        get_language: function() {
            return this.__language
        },
        set_language: function(i) {
            if (i == this.__language) {
                return i
            }
            this.__language = i;
            this.__dirty = true;
            return i
        },
        get_script: function() {
            return this.__script
        },
        set_script: function(i) {
            if (i == this.__script) {
                return i
            }
            this.__script = i;
            this.__dirty = true;
            return i
        },
        set_size: function(i) {
            if (i == this.size) {
                return i
            }
            this.size = i;
            this.__dirty = true;
            return i
        },
        set_text: function(i) {
            if (i == this.text) {
                return i
            }
            this.text = i;
            this.__dirty = true;
            return i
        },
        __class__: dZ,
        __properties__: {
            set_text: "set_text",
            set_size: "set_size",
            set_script: "set_script",
            get_script: "get_script",
            get_positions: "get_positions",
            set_language: "set_language",
            get_language: "get_language",
            get_glyphs: "get_glyphs",
            set_font: "set_font",
            set_direction: "set_direction",
            get_direction: "get_direction"
        }
    };
    var hW = {};
    nt["lime.text._TextScript.TextScript_Impl_"] = hW;
    hW.__name__ = ["lime", "text", "_TextScript", "TextScript_Impl_"];
    hW.__properties__ = {
        get_rightToLeft: "get_rightToLeft"
    };
    hW.get_rightToLeft = function(i) {
        switch (i) {
            case "Hebr":
            case "Arab":
            case "Syrc":
            case "Thaa":
            case "Nkoo":
            case "Samr":
            case "Mand":
            case "Armi":
            case "Phnx":
            case "Lydi":
            case "Cprt":
            case "Khar":
            case "Sarb":
            case "Avst":
            case "Phli":
            case "Phlp":
            case "Orkh":
                return true;
            default:
                return false
        }
    };
    var mF = function() {};
    nt["lime.tools.helpers.StringHelper"] = mF;
    mF.__name__ = ["lime", "tools", "helpers", "StringHelper"];
    mF.base64Encoder = null;
    mF.base64Decode = function(q) {
        q = cP.trim(q);
        q = cP.replace(q, "=", "");
        if (mF.base64Encoder == null) {
            mF.base64Encoder = new ha(eg.ofString(mF.base64Chars))
        }
        var i = mF.base64Encoder.decodeBytes(eg.ofString(q));
        return i
    };
    mF.base64Encode = function(i) {
        var i1;
        var q = i.length % 3;
        switch (q) {
            case 1:
                i1 = "==";
                break;
            case 2:
                i1 = "=";
                break;
            default:
                i1 = ""
        }
        if (mF.base64Encoder == null) {
            mF.base64Encoder = new ha(eg.ofString(mF.base64Chars))
        }
        return mF.base64Encoder.encodeBytes(i).toString() + i1
    };
    mF.formatArray = function(qY) {
        var q = "[ ";
        var i2 = 0;
        var js = qY.length;
        while (i2 < js) {
            var i1 = i2++;
            q += kr.string(qY[i1]);
            if (i1 < qY.length - 1) {
                q += ", "
            } else {
                q += " "
            }
        }
        q += "]";
        return q
    };
    mF.formatEnum = function(i) {
        return kX.getEnumName(kX.getEnum(i)) + "." + kr.string(i)
    };
    mF.formatUppercaseVariable = function(q) {
        var i2 = new gF("[A-Z0-9]", "i");
        var q0 = "";
        var q2 = false;
        var i1 = true;
        var qZ = 0;
        var qY = q.length;
        while (qZ < qY) {
            var js = qZ++;
            var q1 = q.charAt(js);
            if (!i2.match(q1)) {
                q0 += "_";
                q2 = false;
                i1 = false
            } else {
                if (q1 == q1.toUpperCase() && js > 0) {
                    if (q2) {
                        if (js == q.length - 1 || q.charAt(js + 1) == q.charAt(js + 1).toUpperCase()) {
                            q0 += q1
                        } else {
                            q0 += "_" + q1
                        }
                    } else {
                        if (i1) {
                            q0 += "_" + q1
                        } else {
                            q0 += q1
                        }
                    }
                    q2 = true
                } else {
                    q0 += q1.toUpperCase();
                    q2 = js == 0 && q1 == q1.toUpperCase()
                }
                i1 = true
            }
        }
        return q0
    };
    mF.generateHashCode = function(js) {
        var qY = 5381;
        var i1 = js.length;
        var i2 = 0;
        var qZ = js.length;
        while (i2 < qZ) {
            var q = i2++;
            qY = (qY << 5) + qY + cj.cca(js, q)
        }
        return qY
    };
    mF.generateUUID = function(qZ, js, q) {
        var qY = mF.uuidChars.split("");
        if (js == null || js > qY.length) {
            js = qY.length
        } else {
            if (js < 2) {
                js = 2
            }
        }
        if (q == null) {
            q = Math.floor(Math.random() * 2147483647)
        }
        var i2 = [];
        var q0 = Math.round(Math.abs(q));
        var q1 = 0;
        while (q1 < qZ) {
            var i1 = q1++;
            q0 = q0 * 16807 % 2147483647 | 0;
            i2[i1] = qY[0 | (q0 / 2147483647 * js | 0)]
        }
        return i2.join("")
    };
    mF.getFlatName = function(i1) {
        var qY = i1.toLowerCase();
        var q1 = "";
        var qZ = 0;
        var q0 = qY.length;
        while (qZ < q0) {
            var i2 = qZ++;
            var js = cj.cca(qY, i2);
            if (i2 > 0 && js >= cj.cca("0", 0) && js <= cj.cca("9", 0) || js >= cj.cca("a", 0) && js <= cj.cca("z", 0) || js == cj.cca("_", 0)) {
                q1 += qY.charAt(i2)
            } else {
                q1 += "_"
            }
        }
        if (q1 == "") {
            q1 = "_"
        }
        if (cj.substr(q1, 0, 1) == "_") {
            q1 = "file" + q1
        }
        while (mF.usedFlatNames.exists(q1)) {
            var q = new gF("(.*?)(\\d+)", "");
            if (q.match(q1)) {
                q1 = q.matched(1) + (kr.parseInt(q.matched(2)) + 1)
            } else {
                q1 += "1"
            }
        }
        mF.usedFlatNames.set(q1, "1");
        return q1
    };
    mF.getUniqueID = function() {
        return cP.hex(mF.seedNumber++, 8)
    };
    mF.underline = function(i, q) {
        if (q == null) {
            q = "="
        }
        return i + "\n" + cP.lpad("", q, i.length)
    };
    var lE = function(i) {
        this.onDisconnect = new nO();
        this.onButtonUp = new fm();
        this.onButtonDown = new fm();
        this.onAxisMove = new cg();
        this.id = i;
        this.connected = true
    };
    nt["lime.ui.Gamepad"] = lE;
    lE.__name__ = ["lime", "ui", "Gamepad"];
    lE.addMappings = function(i) {};
    lE.__connect = function(q) {
        if (!lE.devices.h.hasOwnProperty(q)) {
            var i = new lE(q);
            lE.devices.h[q] = i;
            lE.onConnect.dispatch(i)
        }
    };
    lE.__disconnect = function(q) {
        var i = lE.devices.h[q];
        if (i != null) {
            i.connected = false
        }
        lE.devices.remove(q);
        if (i != null) {
            i.onDisconnect.dispatch()
        }
    };
    lE.prototype = {
        connected: null,
        id: null,
        onAxisMove: null,
        onButtonDown: null,
        onButtonUp: null,
        onDisconnect: null,
        get_guid: function() {
            var i = hr.__getDeviceData();
            return i[this.id].id
        },
        get_name: function() {
            var i = hr.__getDeviceData();
            return i[this.id].id
        },
        __class__: lE,
        __properties__: {
            get_name: "get_name",
            get_guid: "get_guid"
        }
    };
    var pT = {};
    nt["lime.ui._GamepadAxis.GamepadAxis_Impl_"] = pT;
    pT.__name__ = ["lime", "ui", "_GamepadAxis", "GamepadAxis_Impl_"];
    pT.toString = function(i) {
        switch (i) {
            case 0:
                return "LEFT_X";
            case 1:
                return "LEFT_Y";
            case 2:
                return "RIGHT_X";
            case 3:
                return "RIGHT_Y";
            case 4:
                return "TRIGGER_LEFT";
            case 5:
                return "TRIGGER_RIGHT";
            default:
                return "UNKNOWN (" + i + ")"
        }
    };
    var lo = {};
    nt["lime.ui._GamepadButton.GamepadButton_Impl_"] = lo;
    lo.__name__ = ["lime", "ui", "_GamepadButton", "GamepadButton_Impl_"];
    lo.toString = function(i) {
        switch (i) {
            case 0:
                return "A";
            case 1:
                return "B";
            case 2:
                return "X";
            case 3:
                return "Y";
            case 4:
                return "BACK";
            case 5:
                return "GUIDE";
            case 6:
                return "START";
            case 7:
                return "LEFT_STICK";
            case 8:
                return "RIGHT_STICK";
            case 9:
                return "LEFT_SHOULDER";
            case 10:
                return "RIGHT_SHOULDER";
            case 11:
                return "DPAD_UP";
            case 12:
                return "DPAD_DOWN";
            case 13:
                return "DPAD_LEFT";
            case 14:
                return "DPAD_RIGHT";
            default:
                return "UNKNOWN (" + i + ")"
        }
    };
    var hr = function(i) {
        this.onTrackballMove = new bf();
        this.onHatMove = new ff();
        this.onDisconnect = new nO();
        this.onButtonUp = new d6();
        this.onButtonDown = new d6();
        this.onAxisMove = new bf();
        this.id = i;
        this.connected = true
    };
    nt["lime.ui.Joystick"] = hr;
    hr.__name__ = ["lime", "ui", "Joystick"];
    hr.__connect = function(q) {
        if (!hr.devices.h.hasOwnProperty(q)) {
            var i = new hr(q);
            hr.devices.h[q] = i;
            hr.onConnect.dispatch(i)
        }
    };
    hr.__disconnect = function(q) {
        var i = hr.devices.h[q];
        if (i != null) {
            i.connected = false
        }
        hr.devices.remove(q);
        if (i != null) {
            i.onDisconnect.dispatch()
        }
    };
    hr.__getDeviceData = function() {
        if (navigator.getGamepads) {
            return navigator.getGamepads()
        } else {
            if (navigator.webkitGetGamepads) {
                return navigator.webkitGetGamepads()
            } else {
                return null
            }
        }
    };
    hr.prototype = {
        connected: null,
        id: null,
        onAxisMove: null,
        onButtonDown: null,
        onButtonUp: null,
        onDisconnect: null,
        onHatMove: null,
        onTrackballMove: null,
        get_guid: function() {
            var i = hr.__getDeviceData();
            return i[this.id].id
        },
        get_name: function() {
            var i = hr.__getDeviceData();
            return i[this.id].id
        },
        get_numAxes: function() {
            var i = hr.__getDeviceData();
            return i[this.id].axes.length
        },
        get_numButtons: function() {
            var i = hr.__getDeviceData();
            return i[this.id].buttons.length
        },
        get_numHats: function() {
            return 0
        },
        get_numTrackballs: function() {
            return 0
        },
        __class__: hr,
        __properties__: {
            get_numTrackballs: "get_numTrackballs",
            get_numHats: "get_numHats",
            get_numButtons: "get_numButtons",
            get_numAxes: "get_numAxes",
            get_name: "get_name",
            get_guid: "get_guid"
        }
    };
    var dD = {};
    nt["lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_"] = dD;
    dD.__name__ = ["lime", "ui", "_JoystickHatPosition", "JoystickHatPosition_Impl_"];
    dD.__properties__ = {
        set_up: "set_up",
        get_up: "get_up",
        set_right: "set_right",
        get_right: "get_right",
        set_left: "set_left",
        get_left: "get_left",
        set_down: "set_down",
        get_down: "get_down",
        set_center: "set_center",
        get_center: "get_center"
    };
    dD._new = function(i) {
        return i
    };
    dD.get_center = function(i) {
        return i == 0
    };
    dD.set_center = function(i, q) {
        if (q) {
            i = 0
        }
        return q
    };
    dD.get_down = function(i) {
        return (i & 4) > 0
    };
    dD.set_down = function(i, q) {
        if (q) {
            i |= 4
        } else {
            i &= 268435455 - 4
        }
        return q
    };
    dD.get_left = function(i) {
        return (i & 8) > 0
    };
    dD.set_left = function(i, q) {
        if (q) {
            i |= 8
        } else {
            i &= 268435455 - 8
        }
        return q
    };
    dD.get_right = function(i) {
        return (i & 2) > 0
    };
    dD.set_right = function(i, q) {
        if (q) {
            i |= 2
        } else {
            i &= 268435455 - 2
        }
        return q
    };
    dD.get_up = function(i) {
        return (i & 1) > 0
    };
    dD.set_up = function(i, q) {
        if (q) {
            i |= 1
        } else {
            i &= 268435455 - 1
        }
        return q
    };
    var O = {};
    nt["lime.ui._KeyCode.KeyCode_Impl_"] = O;
    O.__name__ = ["lime", "ui", "_KeyCode", "KeyCode_Impl_"];
    O.gt = function(q, i) {
        return q > i
    };
    O.gte = function(q, i) {
        return q >= i
    };
    O.lt = function(q, i) {
        return q < i
    };
    O.lte = function(q, i) {
        return q <= i
    };
    O.plus = function(q, i) {
        return q + i
    };
    var dW = {};
    nt["lime.ui._KeyModifier.KeyModifier_Impl_"] = dW;
    dW.__name__ = ["lime", "ui", "_KeyModifier", "KeyModifier_Impl_"];
    dW.__properties__ = {
        set_shiftKey: "set_shiftKey",
        get_shiftKey: "get_shiftKey",
        set_numLock: "set_numLock",
        get_numLock: "get_numLock",
        set_metaKey: "set_metaKey",
        get_metaKey: "get_metaKey",
        set_ctrlKey: "set_ctrlKey",
        get_ctrlKey: "get_ctrlKey",
        set_capsLock: "set_capsLock",
        get_capsLock: "get_capsLock",
        set_altKey: "set_altKey",
        get_altKey: "get_altKey"
    };
    dW.get_altKey = function(i) {
        return (i & 256) > 0 || (i & 512) > 0
    };
    dW.set_altKey = function(i, q) {
        if (q) {
            i |= 768
        } else {
            i &= 268435455 - 768
        }
        return q
    };
    dW.get_capsLock = function(i) {
        return (i & 8192) > 0 || (i & 8192) > 0
    };
    dW.set_capsLock = function(i, q) {
        if (q) {
            i |= 8192
        } else {
            i &= 268435455 - 8192
        }
        return q
    };
    dW.get_ctrlKey = function(i) {
        return (i & 64) > 0 || (i & 128) > 0
    };
    dW.set_ctrlKey = function(i, q) {
        if (q) {
            i |= 192
        } else {
            i &= 268435455 - 192
        }
        return q
    };
    dW.get_metaKey = function(i) {
        return (i & 1024) > 0 || (i & 2048) > 0
    };
    dW.set_metaKey = function(i, q) {
        if (q) {
            i |= 3072
        } else {
            i &= 268435455 - 3072
        }
        return q
    };
    dW.get_numLock = function(i) {
        return (i & 4096) > 0 || (i & 4096) > 0
    };
    dW.set_numLock = function(i, q) {
        if (q) {
            i |= 4096
        } else {
            i &= 268435455 - 4096
        }
        return q
    };
    dW.get_shiftKey = function(i) {
        return (i & 1) > 0 || (i & 2) > 0
    };
    dW.set_shiftKey = function(i, q) {
        if (q) {
            i |= 3
        } else {
            i &= 268435455 - 3
        }
        return q
    };
    var ad = function() {};
    nt["lime.ui.Mouse"] = ad;
    ad.__name__ = ["lime", "ui", "Mouse"];
    ad.__properties__ = {
        set_lock: "set_lock",
        get_lock: "get_lock",
        set_cursor: "set_cursor",
        get_cursor: "get_cursor"
    };
    ad.hide = function() {
        co.hide()
    };
    ad.show = function() {
        co.show()
    };
    ad.warp = function(i, i1, q) {
        co.warp(i, i1, q)
    };
    ad.get_cursor = function() {
        return co.get_cursor()
    };
    ad.set_cursor = function(i) {
        return co.set_cursor(i)
    };
    ad.get_lock = function() {
        return co.get_lock()
    };
    ad.set_lock = function(i) {
        return co.set_lock(i)
    };
    var hL = nt["lime.ui.MouseCursor"] = {
        __ename__: ["lime", "ui", "MouseCursor"],
        __constructs__: ["ARROW", "CROSSHAIR", "DEFAULT", "MOVE", "POINTER", "RESIZE_NESW", "RESIZE_NS", "RESIZE_NWSE", "RESIZE_WE", "TEXT", "WAIT", "WAIT_ARROW", "CUSTOM"]
    };
    hL.ARROW = ["ARROW", 0];
    hL.ARROW.toString = ea;
    hL.ARROW.__enum__ = hL;
    hL.CROSSHAIR = ["CROSSHAIR", 1];
    hL.CROSSHAIR.toString = ea;
    hL.CROSSHAIR.__enum__ = hL;
    hL.DEFAULT = ["DEFAULT", 2];
    hL.DEFAULT.toString = ea;
    hL.DEFAULT.__enum__ = hL;
    hL.MOVE = ["MOVE", 3];
    hL.MOVE.toString = ea;
    hL.MOVE.__enum__ = hL;
    hL.POINTER = ["POINTER", 4];
    hL.POINTER.toString = ea;
    hL.POINTER.__enum__ = hL;
    hL.RESIZE_NESW = ["RESIZE_NESW", 5];
    hL.RESIZE_NESW.toString = ea;
    hL.RESIZE_NESW.__enum__ = hL;
    hL.RESIZE_NS = ["RESIZE_NS", 6];
    hL.RESIZE_NS.toString = ea;
    hL.RESIZE_NS.__enum__ = hL;
    hL.RESIZE_NWSE = ["RESIZE_NWSE", 7];
    hL.RESIZE_NWSE.toString = ea;
    hL.RESIZE_NWSE.__enum__ = hL;
    hL.RESIZE_WE = ["RESIZE_WE", 8];
    hL.RESIZE_WE.toString = ea;
    hL.RESIZE_WE.__enum__ = hL;
    hL.TEXT = ["TEXT", 9];
    hL.TEXT.toString = ea;
    hL.TEXT.__enum__ = hL;
    hL.WAIT = ["WAIT", 10];
    hL.WAIT.toString = ea;
    hL.WAIT.__enum__ = hL;
    hL.WAIT_ARROW = ["WAIT_ARROW", 11];
    hL.WAIT_ARROW.toString = ea;
    hL.WAIT_ARROW.__enum__ = hL;
    hL.CUSTOM = ["CUSTOM", 12];
    hL.CUSTOM.toString = ea;
    hL.CUSTOM.__enum__ = hL;
    var oA = function(i, qZ, qY, i1, q, js, i2) {
        this.x = i;
        this.y = qZ;
        this.id = qY;
        this.dx = i1;
        this.dy = q;
        this.pressure = js;
        this.device = i2
    };
    nt["lime.ui.Touch"] = oA;
    oA.__name__ = ["lime", "ui", "Touch"];
    oA.prototype = {
        device: null,
        dx: null,
        dy: null,
        id: null,
        pressure: null,
        x: null,
        y: null,
        __class__: oA
    };
    var h1 = function(i) {
        this.onTextInput = new nL();
        this.onTextEdit = new hZ();
        this.onRestore = new nO();
        this.onResize = new it();
        this.onMove = new gy();
        this.onMouseWheel = new gy();
        this.onMouseUp = new j2();
        this.onMouseMoveRelative = new gy();
        this.onMouseMove = new gy();
        this.onMouseDown = new j2();
        this.onMinimize = new nO();
        this.onLeave = new nO();
        this.onKeyUp = new p9();
        this.onKeyDown = new p9();
        this.onFullscreen = new nO();
        this.onFocusOut = new nO();
        this.onFocusIn = new nO();
        this.onEnter = new nO();
        this.onDropFile = new nL();
        this.onDeactivate = new nO();
        this.onCreate = new nO();
        this.onClose = new nO();
        this.onActivate = new nO();
        this.config = i;
        this.__width = 0;
        this.__height = 0;
        this.__fullscreen = false;
        this.__scale = 1;
        this.__x = 0;
        this.__y = 0;
        this.__title = "";
        this.id = -1;
        if (i != null) {
            if (Object.prototype.hasOwnProperty.call(i, "width")) {
                this.__width = i.width
            }
            if (Object.prototype.hasOwnProperty.call(i, "height")) {
                this.__height = i.height
            }
            if (Object.prototype.hasOwnProperty.call(i, "x")) {
                this.__x = i.x
            }
            if (Object.prototype.hasOwnProperty.call(i, "y")) {
                this.__y = i.y
            }
            if (Object.prototype.hasOwnProperty.call(i, "fullscreen")) {
                this.__fullscreen = i.fullscreen
            }
            if (Object.prototype.hasOwnProperty.call(i, "borderless")) {
                this.__borderless = i.borderless
            }
            if (Object.prototype.hasOwnProperty.call(i, "resizable")) {
                this.__resizable = i.resizable
            }
            if (Object.prototype.hasOwnProperty.call(i, "title")) {
                this.__title = i.title
            }
        }
        this.backend = new C(this)
    };
    nt["lime.ui.Window"] = h1;
    h1.__name__ = ["lime", "ui", "Window"];
    h1.prototype = {
        application: null,
        config: null,
        display: null,
        id: null,
        onActivate: null,
        onClose: null,
        onCreate: null,
        onDeactivate: null,
        onDropFile: null,
        onEnter: null,
        onFocusIn: null,
        onFocusOut: null,
        onFullscreen: null,
        onKeyDown: null,
        onKeyUp: null,
        onLeave: null,
        onMinimize: null,
        onMouseDown: null,
        onMouseMove: null,
        onMouseMoveRelative: null,
        onMouseUp: null,
        onMouseWheel: null,
        onMove: null,
        onResize: null,
        onRestore: null,
        onTextEdit: null,
        onTextInput: null,
        renderer: null,
        scale: null,
        stage: null,
        backend: null,
        __borderless: null,
        __fullscreen: null,
        __height: null,
        __maximized: null,
        __minimized: null,
        __resizable: null,
        __scale: null,
        __title: null,
        __width: null,
        __x: null,
        __y: null,
        alert: function(i, q) {
            this.backend.alert(i, q)
        },
        close: function() {
            this.backend.close()
        },
        create: function(i) {
            this.application = i;
            this.backend.create(i);
            if (this.renderer != null) {
                this.renderer.create()
            }
        },
        focus: function() {
            this.backend.focus()
        },
        move: function(i, q) {
            this.backend.move(i, q);
            this.__x = i;
            this.__y = q
        },
        resize: function(q, i) {
            this.backend.resize(q, i);
            this.__width = q;
            this.__height = i
        },
        setIcon: function(i) {
            if (i == null) {
                return
            }
            this.backend.setIcon(i)
        },
        toString: function() {
            return "[object Window]"
        },
        get_display: function() {
            return this.backend.getDisplay()
        },
        get_borderless: function() {
            return this.__borderless
        },
        set_borderless: function(i) {
            return this.__borderless = this.backend.setBorderless(i)
        },
        get_enableTextEvents: function() {
            return this.backend.getEnableTextEvents()
        },
        set_enableTextEvents: function(i) {
            return this.backend.setEnableTextEvents(i)
        },
        get_fullscreen: function() {
            return this.__fullscreen
        },
        set_fullscreen: function(i) {
            return this.__fullscreen = this.backend.setFullscreen(i)
        },
        get_height: function() {
            return this.__height
        },
        set_height: function(i) {
            this.resize(this.__width, i);
            return this.__height
        },
        get_maximized: function() {
            return this.__maximized
        },
        set_maximized: function(i) {
            this.__minimized = false;
            return this.__maximized = this.backend.setMaximized(i)
        },
        get_minimized: function() {
            return this.__minimized
        },
        set_minimized: function(i) {
            this.__maximized = false;
            return this.__minimized = this.backend.setMinimized(i)
        },
        get_resizable: function() {
            return this.__resizable
        },
        set_resizable: function(i) {
            this.__resizable = this.backend.setResizable(i);
            return this.__resizable
        },
        get_scale: function() {
            return this.__scale
        },
        get_title: function() {
            return this.__title
        },
        set_title: function(i) {
            return this.__title = this.backend.setTitle(this.__title)
        },
        get_width: function() {
            return this.__width
        },
        set_width: function(i) {
            this.resize(i, this.__height);
            return this.__width
        },
        get_x: function() {
            return this.__x
        },
        set_x: function(i) {
            this.move(i, this.__y);
            return this.__x
        },
        get_y: function() {
            return this.__y
        },
        set_y: function(i) {
            this.move(this.__x, i);
            return this.__y
        },
        __class__: h1,
        __properties__: {
            set_y: "set_y",
            get_y: "get_y",
            set_x: "set_x",
            get_x: "get_x",
            set_width: "set_width",
            get_width: "get_width",
            set_title: "set_title",
            get_title: "get_title",
            get_scale: "get_scale",
            set_resizable: "set_resizable",
            get_resizable: "get_resizable",
            set_minimized: "set_minimized",
            get_minimized: "get_minimized",
            set_maximized: "set_maximized",
            get_maximized: "get_maximized",
            set_height: "set_height",
            get_height: "get_height",
            set_fullscreen: "set_fullscreen",
            get_fullscreen: "get_fullscreen",
            set_enableTextEvents: "set_enableTextEvents",
            get_enableTextEvents: "get_enableTextEvents",
            get_display: "get_display",
            set_borderless: "set_borderless",
            get_borderless: "get_borderless"
        }
    };
    var ix = nt["lime.utils.TAError"] = {
        __ename__: ["lime", "utils", "TAError"],
        __constructs__: ["RangeError"]
    };
    ix.RangeError = ["RangeError", 0];
    ix.RangeError.toString = ea;
    ix.RangeError.__enum__ = ix;
    var r = function(i, q) {
        eg.call(this, q)
    };
    nt["lime.utils.Bytes"] = r;
    r.__name__ = ["lime", "utils", "Bytes"];
    r.alloc = function(q) {
        var i = eg.alloc(q);
        return new r(i.length, i.b.bufferValue)
    };
    r.fastGet = function(i, q) {
        return i.bytes[q]
    };
    r.ofData = function(i) {
		console.log(i);
        var q = eg.ofData(i);
        return new r(q.length, q.b.bufferValue)
    };
    r.ofString = function(q) {
        var i = eg.ofString(q);
        return new r(i.length, i.b.bufferValue)
    };
    r.readFile = function(i) {
        return null
    };
    r.lime_bytes_from_data_pointer = function(q, i) {
        return r.cffi_lime_bytes_from_data_pointer(q, i)
    };
    r.lime_bytes_get_data_pointer = function(i) {
        return r.cffi_lime_bytes_get_data_pointer(i)
    };
    r.lime_bytes_read_file = function(i) {
        return r.cffi_lime_bytes_read_file(i)
    };
    r.__super__ = eg;
    r.prototype = lP(eg.prototype, {
        __class__: r
    });
    var nV = {};
    nt["lime.utils._Float32Array.Float32Array_Impl_"] = nV;
    nV.__name__ = ["lime", "utils", "_Float32Array", "Float32Array_Impl_"];
    nV.__set = function(q, i, i1) {
        return q[i] = i1
    };
    nV.__get = function(q, i) {
        return q[i]
    };
    nV.fromBytes = function(q, i1, i) {
        if (i1 == null) {
            i1 = 0
        }
        if (i1 == null) {
            return new Float32Array(q.b.bufferValue)
        }
        if (i == null) {
            return new Float32Array(q.b.bufferValue, i1)
        }
        return new Float32Array(q.b.bufferValue, i1, i)
    };
    nV.toBytes = function(i) {
        return new eg(new qw(i.buffer))
    };
    nV.toString = function(i) {
        if (i != null) {
            return "Float32Array [byteLength:" + i.byteLength + ", length:" + i.length + "]"
        } else {
            return null
        }
    };
    var ca = function() {};
    nt["lime.utils.GLUtils"] = ca;
    ca.__name__ = ["lime", "utils", "GLUtils"];
    ca.compileShader = function(i1, i) {
        var q = mU.context.createShader(i);
        mU.context.shaderSource(q, i1);
        mU.context.compileShader(q);
        if (mU.context.getShaderParameter(q, 35713) == 0) {
            switch (i) {
                case 35633:
                    throw new nM("Error compiling vertex shader");
                    break;
                case 35632:
                    throw new nM("Error compiling fragment shader");
                    break;
                default:
                    throw new nM("Error compiling unknown shader type")
            }
        }
        return q
    };
    ca.createProgram = function(js, i1) {
        var i2 = ca.compileShader(js, 35633);
        var i = ca.compileShader(i1, 35632);
        var q = mU.context.createProgram();
        mU.context.attachShader(q, i2);
        mU.context.attachShader(q, i);
        mU.context.linkProgram(q);
        if (mU.context.getProgramParameter(q, 35714) == 0) {
            throw new nM("Unable to initialize the shader program.")
        }
        return q
    };
    var dY = {};
    nt["lime.utils._Int16Array.Int16Array_Impl_"] = dY;
    dY.__name__ = ["lime", "utils", "_Int16Array", "Int16Array_Impl_"];
    dY.__set = function(q, i, i1) {
        return q[i] = i1
    };
    dY.__get = function(q, i) {
        return q[i]
    };
    dY.fromBytes = function(q, i1, i) {
        if (i1 == null) {
            i1 = 0
        }
        if (i1 == null) {
            return new Int16Array(q.b.bufferValue)
        }
        if (i == null) {
            return new Int16Array(q.b.bufferValue, i1)
        }
        return new Int16Array(q.b.bufferValue, i1, i)
    };
    dY.toBytes = function(i) {
        return new eg(new qw(i.buffer))
    };
    dY.toString = function(i) {
        if (i != null) {
            return "Int16Array [byteLength:" + i.byteLength + ", length:" + i.length + "]"
        } else {
            return null
        }
    };
    var jX = {};
    nt["lime.utils._Int32Array.Int32Array_Impl_"] = jX;
    jX.__name__ = ["lime", "utils", "_Int32Array", "Int32Array_Impl_"];
    jX.__set = function(q, i, i1) {
        return q[i] = i1
    };
    jX.__get = function(q, i) {
        return q[i]
    };
    jX.fromBytes = function(q, i1, i) {
        if (i1 == null) {
            i1 = 0
        }
        if (i1 == null) {
            return new Int32Array(q.b.bufferValue)
        }
        if (i == null) {
            return new Int32Array(q.b.bufferValue, i1)
        }
        return new Int32Array(q.b.bufferValue, i1, i)
    };
    jX.toBytes = function(i) {
        return new eg(new qw(i.buffer))
    };
    jX.toString = function(i) {
        if (i != null) {
            return "Int32Array [byteLength:" + i.byteLength + ", length:" + i.length + "]"
        } else {
            return null
        }
    };
    var E = function() {};
    nt["lime.utils.LZMA"] = E;
    E.__name__ = ["lime", "utils", "LZMA"];
    E.decode = function(i) {
        return null
    };
    E.encode = function(i) {
        return null
    };
    var j7 = function() {};
    nt["lime.utils.Log"] = j7;
    j7.__name__ = ["lime", "utils", "Log"];
    j7.level = null;
    j7.debug = function(i, q) {
        if (j7.level >= 4) {
            jb.log("[" + q.className + "] " + i)
        }
    };
    j7.error = function(i, q) {
        if (j7.level >= 1) {
            jb.log("[" + q.className + "] ERROR: " + i)
        }
    };
    j7.info = function(i, q) {
        if (j7.level >= 3) {
            jb.log("[" + q.className + "] " + i)
        }
    };
    j7.print = function(i) {
        jb.log(i)
    };
    j7.println = function(i) {
        jb.log(i)
    };
    j7.verbose = function(i, q) {
        if (j7.level >= 5) {
            jb.log("[" + q.className + "] " + i)
        }
    };
    j7.warn = function(i, q) {
        if (j7.level >= 2) {
            jb.log("[" + q.className + "] WARNING: " + i)
        }
    };
    var aV = {};
    nt["lime.utils._Log.LogLevel_Impl_"] = aV;
    aV.__name__ = ["lime", "utils", "_Log", "LogLevel_Impl_"];
    aV.gt = function(q, i) {
        return q > i
    };
    aV.gte = function(q, i) {
        return q >= i
    };
    aV.lt = function(q, i) {
        return q < i
    };
    aV.lte = function(q, i) {
        return q <= i
    };
    var qP = {};
    nt["lime.utils._UInt16Array.UInt16Array_Impl_"] = qP;
    qP.__name__ = ["lime", "utils", "_UInt16Array", "UInt16Array_Impl_"];
    qP.__set = function(q, i, i1) {
        return q[i] = i1
    };
    qP.__get = function(q, i) {
        return q[i]
    };
    qP.fromBytes = function(q, i1, i) {
        if (i1 == null) {
            i1 = 0
        }
        if (i1 == null) {
            return new Uint16Array(q.b.bufferValue)
        }
        if (i == null) {
            return new Uint16Array(q.b.bufferValue, i1)
        }
        return new Uint16Array(q.b.bufferValue, i1, i)
    };
    qP.toBytes = function(i) {
        return new eg(new qw(i.buffer))
    };
    qP.toString = function(i) {
        if (i != null) {
            return "UInt16Array [byteLength:" + i.byteLength + ", length:" + i.length + "]"
        } else {
            return null
        }
    };
    var M = {};
    nt["lime.utils._UInt32Array.UInt32Array_Impl_"] = M;
    M.__name__ = ["lime", "utils", "_UInt32Array", "UInt32Array_Impl_"];
    M.__set = function(q, i, i1) {
        return q[i] = i1
    };
    M.__get = function(q, i) {
        return q[i]
    };
    M.fromBytes = function(q, i1, i) {
        if (i1 == null) {
            i1 = 0
        }
        if (i1 == null) {
            return new Uint32Array(q.b.bufferValue)
        }
        if (i == null) {
            return new Uint32Array(q.b.bufferValue, i1)
        }
        return new Uint32Array(q.b.bufferValue, i1, i)
    };
    M.toBytes = function(i) {
        return new eg(new qw(i.buffer))
    };
    M.toString = function(i) {
        if (i != null) {
            return "UInt32Array [byteLength:" + i.byteLength + ", length:" + i.length + "]"
        } else {
            return null
        }
    };
    var ev = {};
    nt["lime.utils._UInt8Array.UInt8Array_Impl_"] = ev;
    ev.__name__ = ["lime", "utils", "_UInt8Array", "UInt8Array_Impl_"];
    ev.__set = function(q, i, i1) {
        return q[i] = i1
    };
    ev.__get = function(q, i) {
        return q[i]
    };
    ev.fromBytes = function(q, i1, i) {
        if (i1 == null) {
            return new qw(q.b.bufferValue)
        }
        if (i == null) {
            return new qw(q.b.bufferValue, i1)
        }
        return new qw(q.b.bufferValue, i1, i)
    };
    ev.toBytes = function(i) {
        return new eg(new qw(i.buffer))
    };
    ev.toString = function(i) {
        if (i != null) {
            return "UInt8Array [byteLength:" + i.byteLength + ", length:" + i.length + "]"
        } else {
            return null
        }
    };
    var db = function() {};
    nt["miniclip.core.Color"] = db;
    db.__name__ = ["miniclip", "core", "Color"];
    db.Rgb2Hex = function(i1, q, i) {
        return i1 << 16 | q << 8 | i
    };
    db.prototype = {
        __class__: db
    };
    var iw = function() {};
    nt["miniclip.core.DateUtils"] = iw;
    iw.__name__ = ["miniclip", "core", "DateUtils"];
    iw.getUnixTimestamp = function(i) {
        return i.getTime()
    };
    iw.fromTime = function(i) {
        var q = new Date();
        q.setTime(i);
        return q
    };
    iw.getNextDateForParams = function(i1, q2) {
        var i2 = iw.fromTime(i1);
        var q;
        if (q2.year > 0) {
            q = q2.year
        } else {
            q = i2.getFullYear()
        }
        var q3;
        if (q2.month > 0) {
            q3 = q2.month - 1
        } else {
            q3 = i2.getMonth()
        }
        var qZ;
        if (q2.day > 0) {
            qZ = q2.day
        } else {
            qZ = i2.getDate()
        }
        var q1;
        if (q2.hour > -1) {
            q1 = q2.hour
        } else {
            q1 = i2.getHours()
        }
        var q0;
        if (q2.minute > -1) {
            q0 = q2.minute
        } else {
            q0 = i2.getMinutes()
        }
        var js = q2.second;
        if (q2.year == 0 && q2.month > 0) {
            if (q3 < i2.getMonth()) {
                q++
            } else {
                if (q3 == i2.getMonth() && q2.day > 0) {
                    if (qZ < i2.getDay()) {
                        q++
                    } else {
                        if (qZ == i2.getDay() && q2.hour > -1) {
                            if (q1 < i2.getHours()) {
                                q++
                            } else {
                                if (q1 == i2.getHours() && q2.minute > -1) {
                                    if (q0 < i2.getMinutes()) {
                                        q++
                                    } else {
                                        if (q0 == i2.getMinutes() && js < i2.getSeconds()) {
                                            q++
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        } else {
            if (q < i2.getFullYear()) {
                return -1
            }
        }
        if (q2.month == 0 && q2.day > 0) {
            if (qZ < i2.getDay()) {
                q3++
            } else {
                if (qZ == i2.getDay() && q2.hour > -1) {
                    if (q1 < i2.getHours()) {
                        q3++
                    } else {
                        if (q1 == i2.getHours() && q2.minute > -1) {
                            if (q0 < i2.getMinutes()) {
                                q3++
                            } else {
                                if (q0 == i2.getMinutes() && js < i2.getSeconds()) {
                                    q3++
                                }
                            }
                        }
                    }
                }
            }
        } else {
            if (q3 < i2.getMonth()) {
                return -1
            }
        }
        if (q2.day == 0 && q2.hour > -1) {
            if (q1 < i2.getHours()) {
                qZ++
            } else {
                if (q1 == i2.getHours() && q2.minute > -1) {
                    if (q0 < i2.getMinutes()) {
                        qZ++
                    } else {
                        if (q0 == i2.getMinutes() && js < i2.getSeconds()) {
                            qZ++
                        }
                    }
                }
            }
        } else {
            if (qZ < i2.getDay()) {
                return -1
            }
        }
        if (q2.hour == -1 && q2.minute > -1) {
            if (q0 < i2.getMinutes()) {
                q1++
            } else {
                if (q0 == i2.getMinutes() && js < i2.getSeconds()) {
                    q1++
                }
            }
        } else {
            if (q1 < i2.getHours()) {
                return -1
            }
        }
        if (q2.minute == -1 && js < i2.getSeconds()) {
            q0++
        } else {
            if (q0 < i2.getMinutes()) {
                return -1
            }
        }
        var qY = true;
        while (qY) {
            qY = false;
            if (q0 > 59) {
                if (q2.hour == -1) {
                    q0 = 0;
                    q1++;
                    qY = true
                } else {
                    return -1
                }
            }
            if (q1 > 23) {
                if (q2.day == 0) {
                    q1 = 0;
                    qZ++;
                    qY = true
                } else {
                    return -1
                }
            }
            if (qZ > iS.getMonthDays(new Date(q, q3, 0, 0, 0, 0))) {
                if (q2.month == 0) {
                    qZ = 1;
                    q3++;
                    qY = true
                } else {
                    return -1
                }
            }
            if (q3 > 11) {
                if (q2.year == 0) {
                    q3 = 0;
                    q++;
                    qY = true
                } else {
                    return -1
                }
            }
        }
        var i = new Date(q, q3, qZ, q1, q0, js).getTime();
        return i
    };
    var du = function() {};
    nt["miniclip.core.PSDebug"] = du;
    du.__name__ = ["miniclip", "core", "PSDebug"];
    du.genSpaces = function(i) {
        return ((function(js) {
            var q;
            var qY = [];
            var i2 = 0;
            while (i2 < i) {
                var i1 = i2++;
                qY.push("|    ")
            }
            q = qY;
            return q
        }(this))).join("")
    };
    var lT = function(i1, i2) {
        this._promoSystem = i1;
        this._dataAccessList = new io();
        var i = n0.getClass(this);
        var q = kX.getClassName(i);
        this.loadFieldInfo(q, i, true);
        this.setValues(i2)
    };
    nt["miniclip.core.PromoVO"] = lT;
    lT.__name__ = ["miniclip", "core", "PromoVO"];
    lT.addFieldDeclaration = function(i1, js, i) {
        if (!lT.classCache.exists(i1)) {
            var i2 = new io();
            lT.classCache.set(i1, i2)
        }
        var q = lT.classCache.get(i1);
        if (pN[js] != null) {
            q.setReserved(js, i)
        } else {
            q.h[js] = i
        }
    };
    lT.classHasField = function(i, i1) {
        if (lT.classCache.exists(i)) {
            var q = lT.classCache.get(i);
            if (pN[i1] != null ? q.existsReserved(i1) : q.h.hasOwnProperty(i1)) {
                return true
            }
        }
        return false
    };
    lT.getClassFields = function(i) {
        if (lT.classCache.exists(i)) {
            return lT.classCache.get(i)
        }
        return null
    };
    lT.prototype = {
        _promoSystem: null,
        dataAccess: null,
        _dataAccessList: null,
        _className: null,
        handleSpecialTypes: function(q, i) {
            return false
        },
        hasField: function(q) {
            var i = kX.getInstanceFields(n0.getClass(this));
            var i2 = 0;
            while (i2 < i.length) {
                var i1 = i[i2];
                ++i2;
                if (i1 == q) {
                    return true
                }
            }
            return false
        },
        initializeField: function(q1, q4, i1, q3) {
            if (q3 == null) {
                q3 = false
            }
            try {
                if (q3) {
                    var q2 = ar.getProperty(this, q4);
                    var js = q2 == null;
                    var i2 = n0.__instanceof(q2, lT);
                    if (!js && i2) {
                        (n0.__cast(q2, lT)).setValues(i1);
                        return
                    }
                }
                var qY = this.getDeclaredTypeOfField(q1, q4);
                var q0 = this._parse(qY, i1);
                var i = false;
                switch (qY[1]) {
                    case 0:
                        var q = qY[2];
                        i = true;
                        break;
                    default:
                        i = false
                }
                if (!(i && i1 != null && this.isDataAccess(i1))) {
                    ar.setProperty(this, q4, q0)
                }
            } catch (qZ) {
                lF.lastException = qZ;
                if (qZ instanceof nM) {
                    qZ = qZ.val
                }
                null
            }
        },
        handleDataAccessFields: function(i1, i) {
            if (this.isDataAccess(i)) {
                var q = kH.getDataAccess(i.dataAccess);
                this._dataAccessList.set(i1, q);
                return true
            }
            return false
        },
        setValues: function(i2) {
            if (i2 == null) {
                return
            }
            if (kX["typeof"](i2) != bu.TObject) {
                return
            }
            var i;
            if (this._className == null) {
                this._className = kX.getClassName(n0.getClass(this))
            }
            i = this._className;
            if (this.isDataAccess(i2)) {
                this.dataAccess = kH.getDataAccess(i2.dataAccess);
                return
            }
            var i1 = ar.fields(i2);
            var js = 0;
            while (js < i1.length) {
                var qY = i1[js];
                ++js;
                if (cP.endsWith(qY, "_")) {
                    continue
                }
                var q = ar.getProperty(i2, qY);
                if (this.handleDataAccessFields(qY, q)) {
                    continue
                }
                if (this.handleSpecialTypes(qY, q)) {
                    continue
                }
                if (lT.classHasField(i, qY)) {
                    this.initializeField(i, qY, q)
                } else {
                    null
                }
            }
        },
        isDataAccessClass: function(q) {
            switch (q[1]) {
                case 4:
                    var i = q[2];
                    return true;
                default:
                    return false
            }
            return false
        },
        isVT_Array: function(i) {
            switch (i[1]) {
                case 3:
                    var q = i[2];
                    return true;
                default:
                    return false
            }
            return false
        },
        _parse: function(q0, q1) {
            switch (q0[1]) {
                case 0:
                    var i = q0[2];
                    return q1;
                case 3:
                    var i1 = q0[2];
                    var q = this.resolveVOType(i1);
                    return this._parseArray(q, i1, q1);
                case 2:
                    var qY = q0[3];
                    var i2 = q0[2];
                    var q2 = this.resolveVOType(i2);
                    var qZ = this.resolveVOType(qY);
                    return this._parseMap(q2, i2, qZ, qY, q1);
                case 1:
                    var js = q0[2];
                    return this._parseClass(js, q1);
                default:
                    return null
            }
            return null
        },
        _parseClass: function(i1, q) {
            try {
                var i = kX.resolveClass(i1);
                return kX.createInstance(i, [this._promoSystem, q])
            } catch (i2) {
                lF.lastException = i2;
                if (i2 instanceof nM) {
                    i2 = i2.val
                }
                null
            }
            return null
        },
        resolveVOType: function(i1) {
            switch (i1[1]) {
                case 0:
                    var i = i1[2];
                    var js = kX.resolveClass(i);
                    return js;
                case 1:
                    var i2 = i1[2];
                    var q = kX.resolveClass(i2);
                    return q;
                default:
                    return null
            }
            return null
        },
        _parseArray: function(i2, q, i) {
            var q1 = [];
            if (this.isDataAccess(i)) {
                return q1
            }
            var js = i;
            try {
                var qZ = 0;
                var i1 = js.length;
                while (qZ < i1) {
                    var q0 = qZ++;
                    q1.push(this._parse(q, js[q0]))
                }
            } catch (qY) {
                lF.lastException = qY;
                if (qY instanceof nM) {
                    qY = qY.val
                }
                null
            }
            return q1
        },
        _parseMap: function(q1, js, i2, q, i) {
            var q3 = new io();
            if (this.isDataAccess(i)) {
                return q3
            }
            try {
                var i1 = 0;
                var qZ = ar.fields(i);
                while (i1 < qZ.length) {
                    var q2 = qZ[i1];
                    ++i1;
                    var q0 = ar.field(i, q2);
                    if (pN[q2] != null) {
                        q3.setReserved(q2, q0)
                    } else {
                        q3.h[q2] = q0
                    }
                }
            } catch (qY) {
                lF.lastException = qY;
                if (qY instanceof nM) {
                    qY = qY.val
                }
                null
            }
            return q3
        },
        parseRTTIFields: function(q) {
            switch (q[1]) {
                case 7:
                    var js = q[3];
                    var i = q[2];
                    return this.parseFieldType(i, js);
                case 2:
                    var i1 = q[3];
                    var i2 = q[2];
                    return this.parseFieldType(i2, i1);
                default:
            }
            return lq.VT_Unknown
        },
        parseFieldType: function(js, qZ) {
            switch (js) {
                case "String":
                case "Int":
                case "Float":
                case "Bool":
                case "Date":
                    return lq.VT_Native(js);
                case "Array":
                    var qY = this.parseRTTIFields(qZ.pop());
                    if (qY != null) {
                        return lq.VT_Array(qY)
                    }
                    break;
                case "Map":
                    var i2 = this.parseRTTIFields(qZ.pop());
                    var i = this.parseRTTIFields(qZ.pop());
                    if (i2 != null && i != null) {
                        return lq.VT_Map(i2, i)
                    }
                    break;
                case "miniclip.promotionsystem.core.model.vo.DataAccess":
                    var i1 = this.parseRTTIFields(qZ.pop());
                    if (i1 != null) {
                        return lq.VT_DataAccess(i1)
                    }
                    break;
                case "miniclip.promotionsystem.core.model.vo.CoreDataAccess":
                    var q = this.parseRTTIFields(qZ.pop());
                    if (q != null) {
                        return lq.VT_CoreDataAccess(q)
                    }
                    break;
                default:
            }
            return lq.VT_Class(js)
        },
        loadFieldInfo: function(q1, q, q4) {
            if (q4 == null) {
                q4 = false
            }
            if (q4 && lT.classCache.exists(q1)) {
                return
            }
            var qZ = kg.getRtti(q);
            var qY = qZ.fields.h;
            var q0 = null;
            while (qY != null) {
                var q2;
                q2 = (function(q6) {
                    var q5;
                    q0 = qY[0];
                    qY = qY[1];
                    q5 = q0;
                    return q5
                }(this));
                if (q2.isPublic) {
                    var i2 = q2.type;
                    switch (i2[1]) {
                        case 7:
                            var i1 = i2[3];
                            var i = i2[2];
                            lT.addFieldDeclaration(q1, q2.name, this.parseFieldType(i, i1));
                            break;
                        case 2:
                            var q3 = i2[3];
                            var js = i2[2];
                            lT.addFieldDeclaration(q1, q2.name, this.parseFieldType(js, q3));
                            break;
                        default:
                    }
                }
            }
            if (qZ.superClass != null) {
                this.loadFieldInfo(q1, kX.resolveClass(qZ.superClass.path), false)
            }
        },
        getDeclaredTypeOfField: function(i, i1) {
            if (lT.classCache.exists(i)) {
                var q = lT.classCache.get(i);
                if (pN[i1] != null ? q.existsReserved(i1) : q.h.hasOwnProperty(i1)) {
                    return pN[i1] != null ? q.getReserved(i1) : q.h[i1]
                }
            }
            return lq.VT_Unknown
        },
        isDataAccess: function(i) {
            var q = kX["typeof"](i);
            switch (q[1]) {
                case 4:
                    return i.dataAccess != null;
                default:
                    return false
            }
        },
        getClassName: function() {
            if (this._className == null) {
                this._className = kX.getClassName(n0.getClass(this))
            }
            return this._className
        },
        resolveField: function(i1) {
            if (this._dataAccessList.exists(i1)) {
                var q = this._dataAccessList.get(i1);
                var i = kH.solve(q);
                if (!this.handleSpecialTypes(i1, i)) {
                    this.initializeField((function(js) {
                        var i2;
                        if (js._className == null) {
                            js._className = kX.getClassName(n0.getClass(js))
                        }
                        i2 = js._className;
                        return i2
                    }(this)), i1, i, true)
                }
            }
        },
        resolve: function(i2, qZ) {
            if (qZ == null) {
                qZ = 0
            }
            if (i2 == null) {
                i2 = false
            }
            var q3;
            if (this._className == null) {
                this._className = kX.getClassName(n0.getClass(this))
            }
            q3 = this._className;
            if (this.dataAccess != null) {
                var q = kH.solve(this.dataAccess);
                this.setValues(q)
            }
            if (this._dataAccessList != null) {
                var js = this._dataAccessList.keys();
                while (js.hasNext()) {
                    var q7 = js.next();
                    this.resolveField(q7)
                }
            }
            if (i2) {
                var q5 = lT.getClassFields((function(rb) {
                    var ra;
                    if (rb._className == null) {
                        rb._className = kX.getClassName(n0.getClass(rb))
                    }
                    ra = rb._className;
                    return ra
                }(this)));
                if (q5 == null) {
                    return
                }
                var q0 = q5.keys();
                var q1;
                while (q0.hasNext()) {
                    var q6 = q0.next();
                    if (q6 == "dataAccess") {
                        continue
                    }
                    q1 = pN[q6] != null ? q5.getReserved(q6) : q5.h[q6];
                    switch (q1[1]) {
                        case 1:
                            var i = q1[2];
                            var i1 = ar.getProperty(this, q6);
                            if (i1 != null && n0.__instanceof(i1, lT)) {
                                (n0.__cast(i1, lT)).resolve(i2, qZ + 1)
                            }
                            break;
                        case 3:
                            var q4 = q1[2];
                            var qY = ar.getProperty(this, q6);
                            if (qY == null) {
                                continue
                            }
                            var q9 = qY;
                            if (q9 == null) {
                                continue
                            }
                            var q8 = mH(q9)();
                            while (q8.hasNext()) {
                                var q2 = q8.next();
                                if (n0.__instanceof(q2, lT)) {
                                    (n0.__cast(q2, lT)).resolve(i2, qZ + 1)
                                }
                            }
                            break;
                        default:
                            continue
                    }
                }
            }
        },
        getFields: function() {
            return lT.getClassFields((function(q) {
                var i;
                if (q._className == null) {
                    q._className = kX.getClassName(n0.getClass(q))
                }
                i = q._className;
                return i
            }(this)))
        },
        __class__: lT
    };
    var lq = nt["miniclip.core.VOTypes"] = {
        __ename__: ["miniclip", "core", "VOTypes"],
        __constructs__: ["VT_Native", "VT_Class", "VT_Map", "VT_Array", "VT_DataAccess", "VT_CoreDataAccess", "VT_Unknown"]
    };
    lq.VT_Native = function(i) {
        var q = ["VT_Native", 0, i];
        q.__enum__ = lq;
        q.toString = ea;
        return q
    };
    lq.VT_Class = function(i) {
        var q = ["VT_Class", 1, i];
        q.__enum__ = lq;
        q.toString = ea;
        return q
    };
    lq.VT_Map = function(i, i1) {
        var q = ["VT_Map", 2, i, i1];
        q.__enum__ = lq;
        q.toString = ea;
        return q
    };
    lq.VT_Array = function(q) {
        var i = ["VT_Array", 3, q];
        i.__enum__ = lq;
        i.toString = ea;
        return i
    };
    lq.VT_DataAccess = function(q) {
        var i = ["VT_DataAccess", 4, q];
        i.__enum__ = lq;
        i.toString = ea;
        return i
    };
    lq.VT_CoreDataAccess = function(q) {
        var i = ["VT_CoreDataAccess", 5, q];
        i.__enum__ = lq;
        i.toString = ea;
        return i
    };
    lq.VT_Unknown = ["VT_Unknown", 6];
    lq.VT_Unknown.toString = ea;
    lq.VT_Unknown.__enum__ = lq;
    var m6 = function() {};
    nt["miniclip.promotionsystem.Utils"] = m6;
    m6.__name__ = ["miniclip", "promotionsystem", "Utils"];
    m6.isTimeTrigger = function(i) {
        return i != null && n0.__instanceof(i, fZ)
    };
    m6.isStringEmpty = function(i) {
        return i == null || i == ""
    };
    m6.isCollectionEmpty = function(i) {
        return i == null || i.length == 0
    };
    m6.remove_last_instance_of_object = function(i1, i2) {
        var q;
        var i = i2;
        q = cj.lastIndexOf(i1, i, i1.length - 1);
        if (q != -1) {
            i1.splice(q, 1);
            return true
        }
        return false
    };
    m6.isNaN = function(i) {
        return isNaN(i)
    };
    m6.convertPlist = function(q) {
        var i = h8.read(q);
        return i
    };
    var qO = function() {
        this._promoClients = new io();
        this._promoConfigs = new io()
    };
    nt["miniclip.promotionsystem.client.PromotionManager"] = qO;
    qO.__name__ = ["miniclip", "promotionsystem", "client", "PromotionManager"];
    qO.prototype = {
        encryptPassword: null,
        userId: null,
        clientDelegate: null,
        get_clientDelegate: function() {
            return this._clientDelegate
        },
        _promoClients: null,
        _promoConfigs: null,
        _systemDelegate: null,
        _clientDelegate: null,
        initWithPromotionClientDelegate: function(i, q) {
            this.setupPromotionClientDelegate(i, q)
        },
        setupPromotionClientWithConfigObject: function(i1, i, i2) {
            if (this._clientDelegate == null) {
                return false
            } else {
                var q = new m8();
                q.getClientWithConfiguration(i1, i, this.userId, this._clientDelegate, this._systemDelegate, i2);
                if (q == null) {
                    return false
                } else {
                    this._promoClients.set(i, q);
                    var js = i1;
                    this._promoConfigs.set(i, js);
                    return true
                }
            }
        },
        setCurrentTimestamp: function(q) {
            var i1 = this._promoClients.keys();
            while (i1.hasNext()) {
                var i = i1.next();
                this._promoClients.get(i).setCurrentTimestamp(q)
            }
        },
        setIndirectDataAccess: function(i) {
            kH.loadIndirectData(i)
        },
        setPromotionDataAccessProtocol: function(i) {
            iK.initWithDelegate(i)
        },
        getClientForSystem: function(i) {
            return this._promoClients.get(i)
        },
        getNextShowablePopupForSystem: function(i) {
            var q = this._promoClients.get(i);
            if (q == null) {
                return null
            }
            return q.getNextShowablePopup()
        },
        getNextShowableOfferForSystem: function(i) {
            var q = this._promoClients.get(i);
            if (q == null) {
                return null
            }
            return q.getNextShowablePopupOfferId()
        },
        getCustomDataForOffer: function(i1, i) {
            var q = this._promoClients.get(i);
            if (q == null) {
                return null
            }
            return q.get_promoSystem().getPopUpInfoForOffer(i1).customData
        },
        isProductActivated: function(i1) {
            var q = this._promoClients.iterator();
            while (q.hasNext()) {
                var i = q.next();
                if (i.get_promoSystem().isProductActivated(i1)) {
                    return true
                }
            }
            return false
        },
        isProductDeactivated: function(i1) {
            var q = this._promoClients.iterator();
            while (q.hasNext()) {
                var i = q.next();
                if (i.get_promoSystem().isProductDeactivated(i1)) {
                    return true
                }
            }
            return false
        },
        getProductReplacement: function(i2) {
            var i1 = this._promoClients.iterator();
            while (i1.hasNext()) {
                var i = i1.next();
                var q = i.get_promoSystem().getProductReplacement(i2);
                if (q != null) {
                    return q
                }
            }
            return null
        },
        getReplacedProduct: function(i2) {
            var i1 = this._promoClients.iterator();
            while (i1.hasNext()) {
                var i = i1.next();
                var q = i.get_promoSystem().getReplacedProduct(i2);
                if (q != null) {
                    return q
                }
            }
            return null
        },
        setupPromotionClientDelegate: function(i, q) {
            this._clientDelegate = i;
            this._systemDelegate = q
        },
        reloadSystems: function() {
            var i1 = this._promoClients.keys();
            while (i1.hasNext()) {
                var i = i1.next();
                var q = this._promoConfigs.get(i);
                if (q != null) {
                    this.reloadSystem(q, i)
                }
            }
        },
        reloadSystem: function(i1, i) {
            var q = this._promoClients.get(i);
            if (q == null) {
                return false
            }
            if (i1 == null) {
                return false
            }
            return q.get_promoSystem().loadOffersConfiguration(i1)
        },
        resetSystems: function() {
            var q = this._promoClients.iterator();
            while (q.hasNext()) {
                var i = q.next();
                i.get_gameDelegate().hideCurrentBadgeForSystem(i.get_promoSystem());
                i.reset()
            }
        },
        __class__: qO,
        __properties__: {
            get_clientDelegate: "get_clientDelegate"
        }
    };
    var nb = function() {};
    nt["miniclip.promotionsystem.core.interfaces.IPromotionActionDelegate"] = nb;
    nb.__name__ = ["miniclip", "promotionsystem", "core", "interfaces", "IPromotionActionDelegate"];
    nb.prototype = {
        executeAction: null,
        getActionType: null,
        __class__: nb
    };
    var fA = function() {};
    nt["miniclip.promotionsystem.client.interfaces.IPromotionSystemClient"] = fA;
    fA.__name__ = ["miniclip", "promotionsystem", "client", "interfaces", "IPromotionSystemClient"];
    fA.__interfaces__ = [nb];
    fA.prototype = {
        get_promoSystem: null,
        get_gameDelegate: null,
        promoSystem: null,
        gameDelegate: null,
        initClientForSystem: null,
        reset: null,
        setCurrentTimestamp: null,
        getPopupForOffer: null,
        getBadgeForOffer: null,
        getNextShowablePopupOfferId: null,
        getNextShowablePopupOfferIdIsAuto: null,
        getNextShowablePopup: null,
        getNextShowablePopupIsAuto: null,
        activateBadgeCycling: null,
        deactivateBadgeCycling: null,
        getTopShowableBadgeOfferId: null,
        getNextShowableBadge: null,
        __class__: fA,
        __properties__: {
            get_gameDelegate: "get_gameDelegate",
            get_promoSystem: "get_promoSystem"
        }
    };
    var m8 = function() {
        this.PREVIOUSLY_SHOWN_BADGES_STATE_FOR_SYSTEM_AND_USER = "PromoClient_PreviouslyShownBadges-";
        this.BadgeCyclingTimerPeriod = 1000
    };
    nt["miniclip.promotionsystem.client.PromotionSystemClient"] = m8;
    m8.__name__ = ["miniclip", "promotionsystem", "client", "PromotionSystemClient"];
    m8.__interfaces__ = [fA];
    m8.prototype = {
        BadgeCyclingTimerPeriod: null,
        PREVIOUSLY_SHOWN_BADGES_STATE_FOR_SYSTEM_AND_USER: null,
        promoSystem: null,
        get_promoSystem: function() {
            return this._promoSystem
        },
        gameDelegate: null,
        get_gameDelegate: function() {
            return this._gameDelegate
        },
        _promoSystem: null,
        _gameDelegate: null,
        _shownPopupForOfferIds: null,
        _shownBadgeForOfferIds: null,
        _lastBadgeChange: null,
        _badgeCyclingActive: null,
        _updateBadgeTimer: null,
        _oldBadge: null,
        getClientWithConfiguration: function(qZ, i, i1, q, js, i2) {
            var qY = new ij();
            qY.set_promoSystemId(i);
            qY.set_defaultSaveDataKey("${systemId}SaveData");
            qY.set_delegate(js);
            qY.initWithOffersConfiguration(qZ, i2, this);
            this.initClientForSystem(qY, q)
        },
        initClientForSystem: function(q, i) {
            this.reset();
            this._promoSystem = q;
            this._gameDelegate = i
        },
        reset: function() {
            this._shownPopupForOfferIds = [];
            this.deactivateBadgeCycling();
            this._lastBadgeChange = -1;
            this._badgeCyclingActive = false;
            this._oldBadge = null;
            if (this.get_promoSystem() != null) {
                this.get_promoSystem().reset()
            }
        },
        loadPreviouslyShownOffers: function() {
            if (this._shownBadgeForOfferIds != null) {
                this._shownBadgeForOfferIds.splice(0, this._shownBadgeForOfferIds.length)
            }
            if (this._badgeCyclingActive) {
                var q = this._gameDelegate.getCurrentUserId();
                var i = this.PREVIOUSLY_SHOWN_BADGES_STATE_FOR_SYSTEM_AND_USER + "%" + this._promoSystem.get_promoSystemId() + "-%" + q;
                var i1 = null;
                if (i1 == null) {
                    this._shownBadgeForOfferIds = []
                }
            } else {
                this._shownBadgeForOfferIds = []
            }
            this._lastBadgeChange = -1
        },
        setCurrentTimestamp: function(i) {
            this._promoSystem.set_currentTimestamp(i);
            this.checkIfOffersShouldBeKilled()
        },
        getPopupForOffer: function(i1, i) {
            if (i == null) {
                i = false
            }
            if (i1 == null) {
                return null
            }
            if (this._gameDelegate.canShowOfferPopup(i1, this._promoSystem, i)) {
                var q = this._gameDelegate.getPopupForOffer(i1, this, this._promoSystem);
                if (q != null) {
                    this.addOfferIdToShownPopups(i1);
                    var i2 = this._promoSystem.getOfferFromId(i1);
                    i2.setPopupActiveState(true)
                }
                return q
            }
            return null
        },
        getBadgeForOffer: function(i1) {
            var js = this;
            if (this._gameDelegate.canShowOfferBadge(i1, this._promoSystem)) {
                var i2 = this._promoSystem.getOfferFromId(i1);
                var q = this._promoSystem.getBadgeInfoForOffer(i1);
                var i = this._gameDelegate.getPromoButtonForOffer(i2, q, function() {
                    js._gameDelegate.badgeButtonPressed(i1, js._promoSystem)
                }, this._promoSystem);
                return i
            }
            return null
        },
        getNextShowablePopupOfferId: function() {
            return this.getNextShowablePopupOfferIdIsAuto(true)
        },
        getNextShowablePopupOfferIdIsAuto: function(q) {
            var qY = this._promoSystem.getActiveOffers();
            var q0 = 0;
            var q1 = qY.length;
            while (q0 < q1) {
                var js = q0++;
                var qZ = qY[js];
                if (qZ == null || m6.isStringEmpty(qZ.offerName)) {
                    continue
                }
                var i1 = true;
                if (q) {
                    i1 = this._promoSystem.isOfferPopUpActive(qZ.offerName)
                }
                if (!i1) {
                    continue
                }
                var i2 = this._gameDelegate.canShowOfferPopup(qZ.offerName, this._promoSystem, q);
                if (i2) {
                    return qZ.offerName
                }
            }
            return null
        },
        getNextShowablePopup: function() {
            return this.getNextShowablePopupIsAuto(true)
        },
        getNextShowablePopupIsAuto: function(i) {
            return this.getPopupForOffer(this.getNextShowablePopupOfferIdIsAuto(i), i)
        },
        deactivateBadgeCycling: function() {
            this._lastBadgeChange = -1;
            this._badgeCyclingActive = false;
            if (this._updateBadgeTimer != null) {
                this._updateBadgeTimer.stop();
                this._updateBadgeTimer = null
            }
        },
        activateBadgeCycling: function() {
            if (this._badgeCyclingActive) {
                return
            }
            var i = this.getBadgeCycleCooldownTime();
            var q = i != -1;
            if (q && !this._badgeCyclingActive) {
                this._badgeCyclingActive = true
            }
            this.loadPreviouslyShownOffers();
            if (this._updateBadgeTimer != null) {
                this._updateBadgeTimer.stop();
                this._updateBadgeTimer = null
            }
            this._updateBadgeTimer = new og(1000);
            this._updateBadgeTimer.run = oT(this, this.updatePromotionBadge)
        },
        updatePromotionBadge: function() {
            var i1 = this.getNextShowableBadgeOfferId();
            if (m6.isStringEmpty(i1)) {
                if (!m6.isCollectionEmpty(this._shownBadgeForOfferIds)) {
                    this.resetShownBadges();
                    this._gameDelegate.hideCurrentBadgeForSystem(this._promoSystem)
                }
                return
            }
            if (i1 != this._shownBadgeForOfferIds[this._shownBadgeForOfferIds.length - 1]) {
                var q = this._promoSystem.getOfferFromId(i1);
                var i = this.getBadgeForOffer(i1);
                if (i != null) {
                    this.addOfferIdToShownBadges(i1);
                    if (this._oldBadge == null || this._oldBadge.get_offerId() != i.get_offerId()) {
                        this._oldBadge = i;
                        this._gameDelegate.showBadge(i, this._promoSystem)
                    }
                }
            }
        },
        getBadgeCycleCooldownTime: function() {
            var i;
            try {
                i = this._gameDelegate.getDefaultBadgeCycleCooldownForSystem(this._promoSystem)
            } catch (js) {
                lF.lastException = js;
                if (js instanceof nM) {
                    js = js.val
                }
                return -1
            }
            if (i <= 0) {
                return -1
            }
            var q;
            if (m6.isCollectionEmpty(this._shownBadgeForOfferIds)) {
                q = null
            } else {
                q = this._shownBadgeForOfferIds[this._shownBadgeForOfferIds.length - 1]
            }
            var i1 = -1;
            if (!m6.isStringEmpty(q)) {
                var i2 = this._promoSystem.getOfferFromId(q);
                i1 = i2.badgeCycleCooldown;
                if (i1 == 0) {
                    return -1
                }
            }
            if (i1 > 0) {
                return i1
            } else {
                return i
            }
        },
        getTopShowableBadgeOfferId: function() {
            return null
        },
        getNextShowableBadge: function() {
            return null
        },
        getNextShowableBadgeOfferId: function() {
            var q = this.getBadgeCycleCooldownTime();
            var i1 = this._promoSystem.get_currentTimestamp();
            var i2 = this._lastBadgeChange == -1 || i1 - this._lastBadgeChange > q && q != -1;
            var q2 = this._badgeCyclingActive && i2;
            var q0 = null;
            var q1 = this._promoSystem.getActiveOffers();
            var js = 0;
            while (js < q1.length) {
                var qZ = q1[js];
                ++js;
                if (m6.isStringEmpty(qZ.offerName)) {
                    continue
                }
                if (!this.offerHasBadgeConfiguration(qZ.offerName)) {
                    continue
                }
                if (this._gameDelegate.canShowOfferBadge(qZ.offerName, this._promoSystem)) {
                    if (qZ.offerName == this._shownBadgeForOfferIds[this._shownBadgeForOfferIds.length - 1] && !q2) {
                        return qZ.offerName
                    }
                    if (m6.isStringEmpty(q0)) {
                        q0 = qZ.offerName
                    }
                    if (cj.indexOf(this._shownBadgeForOfferIds, qZ.offerName, 0) > -1) {
                        continue
                    }
                    return qZ.offerName
                }
            }
            var qY = cj.indexOf(this._shownBadgeForOfferIds, q0, 0) > -1;
            if (qY) {
                this.resetShownBadges()
            }
            var i = q0 == this._shownBadgeForOfferIds[this._shownBadgeForOfferIds.length - 1];
            if (i) {
                this.addOfferIdToShownBadges(q0)
            }
            return q0
        },
        offerHasBadgeConfiguration: function(i) {
            var q = this._promoSystem.getBadgeInfoForOffer(i);
            if (q == null) {
                return false
            }
            var i2 = !m6.isStringEmpty(q.text) && !m6.isStringEmpty(q.image);
            var i1 = q.badgeConfiguration != null;
            if (i2 || i1) {
                return true
            }
            return false
        },
        resetShownBadges: function() {
            if (this._shownBadgeForOfferIds.length > 0) {
                this._shownBadgeForOfferIds.splice(0, this._shownBadgeForOfferIds.length)
            }
            this._oldBadge = null
        },
        checkIfOffersShouldBeKilled: function() {
            var q = this._promoSystem.getActiveOffers();
            var js = 0;
            while (js < q.length) {
                var i = q[js];
                ++js;
                var qY = i.popUpCustomData;
                if (qY != null) {
                    var i2 = qY.productsThatKill;
                    var i1 = qY.needAllProductsToKill;
                    if (i2 != null && this._gameDelegate.userOwnsProductsInList(i2, i1, this._promoSystem)) {
                        i.kill()
                    }
                }
            }
        },
        executeAction: function(qY, q2, q0, q4, qZ, js) {
            if (qY == "dismiss") {
                return k5.PROMOTION_ACTION_RETURN_TYPE_SUCCESS
            } else {
                if (qY == "redirect") {
                    var i2 = ar.getProperty(q2, "target");
                    if (m6.isStringEmpty(i2)) {
                        return k5.PROMOTION_ACTION_RETURN_TYPE_FAILURE
                    }
                    return this._gameDelegate.redirectToTarget(i2, q2, this.get_promoSystem())
                } else {
                    if (qY == "transaction") {
                        var q1 = ar.getProperty(q2, "transactionId");
                        if (m6.isStringEmpty(q1)) {
                            return k5.PROMOTION_ACTION_RETURN_TYPE_FAILURE
                        }
                        return this._gameDelegate.makePurchase(q1, this._shownPopupForOfferIds[this._shownPopupForOfferIds.length - 1], q0, q4, qZ, js, this.get_promoSystem())
                    } else {
                        if (qY == "url") {
                            var i = ar.getProperty(q2, "url");
                            if (m6.isStringEmpty(i)) {
                                return k5.PROMOTION_ACTION_RETURN_TYPE_FAILURE
                            }
                            try {
                                return this._gameDelegate.openBrowserWithURL(i, this.get_promoSystem())
                            } catch (q) {
                                lF.lastException = q;
                                if (q instanceof nM) {
                                    q = q.val
                                }
                                if (n0.__instanceof(q, String)) {
                                    return k5.PROMOTION_ACTION_RETURN_TYPE_FAILURE
                                } else {
                                    throw (q)
                                }
                            }
                        } else {
                            if (qY == "url") {
                                var q3 = ar.getProperty(q2, "appId");
                                if (m6.isStringEmpty(q3)) {
                                    return k5.PROMOTION_ACTION_RETURN_TYPE_FAILURE
                                }
                                try {
                                    return this._gameDelegate.openStoreWithAppId(q3, this.get_promoSystem())
                                } catch (i1) {
                                    lF.lastException = i1;
                                    if (i1 instanceof nM) {
                                        i1 = i1.val
                                    }
                                    if (n0.__instanceof(i1, String)) {
                                        return k5.PROMOTION_ACTION_RETURN_TYPE_FAILURE
                                    } else {
                                        throw (i1)
                                    }
                                }
                            } else {
                                return k5.PROMOTION_ACTION_RETURN_TYPE_FAILURE
                            }
                        }
                    }
                }
            }
        },
        getActionType: function(i1, i2, i, qY, q, js) {
            null
        },
        addOfferIdToShownPopups: function(i) {
            if (cj.indexOf(this._shownPopupForOfferIds, i, 0) == -1) {
                this._shownPopupForOfferIds.push(i)
            }
        },
        addOfferIdToShownBadges: function(i) {
            var q = cj.indexOf(this._shownBadgeForOfferIds, i, 0);
            if (q > -1) {
                this._shownBadgeForOfferIds.splice(q, 1)
            }
            if (this._badgeCyclingActive) {}
            this._lastBadgeChange = this._promoSystem.get_currentTimestamp();
            this._shownBadgeForOfferIds.push(i)
        },
        __class__: m8,
        __properties__: {
            get_gameDelegate: "get_gameDelegate",
            get_promoSystem: "get_promoSystem"
        }
    };
    var g3 = function() {};
    nt["miniclip.promotionsystem.client.interfaces.IPromotionPopupInfo"] = g3;
    g3.__name__ = ["miniclip", "promotionsystem", "client", "interfaces", "IPromotionPopupInfo"];
    g3.prototype = {
        buttonText: null,
        image: null,
        dismissEvent: null,
        killEvent: null,
        customData: null,
        initWithImage: null,
        __class__: g3
    };
    var iK = function() {};
    nt["miniclip.promotionsystem.core.PromotionDataAccessManager"] = iK;
    iK.__name__ = ["miniclip", "promotionsystem", "core", "PromotionDataAccessManager"];
    iK._delegate = null;
    iK.initWithDelegate = function(i) {
        iK._delegate = i
    };
    iK.getGroupForTest = function(i) {
        if (iK._delegate != null) {
            return iK._delegate.getGroupForTest(i)
        } else {
            return "default"
        }
    };
    iK.getClientLanguage = function() {
        if (iK._delegate != null) {
            return iK._delegate.getClientLanguage()
        } else {
            return "default"
        }
    };
    iK.currentPlatformType = function() {
        if (iK._delegate != null) {
            return iK._delegate.currentPlatformType()
        } else {
            return "default"
        }
    };
    iK.getPropertyType = function(i, q) {
        if (iK._delegate != null) {
            return iK._delegate.getPropertyType(i, q)
        } else {
            return "default"
        }
    };
    iK.getNumberPropertyType = function(i) {
        if (iK._delegate != null) {
            return iK._delegate.getNumberPropertyType(i)
        } else {
            return 0
        }
    };
    var ew = function() {};
    nt["partials.Partial"] = ew;
    ew.__name__ = ["partials", "Partial"];
    var nB = function() {};
    nt["miniclip.promotionsystem.core.interfaces.IPromotionOfferDelegate"] = nB;
    nB.__name__ = ["miniclip", "promotionsystem", "core", "interfaces", "IPromotionOfferDelegate"];
    nB.prototype = {
        showOfferPopUp: null,
        hideOfferPopUp: null,
        offerActivated: null,
        offerDeactivated: null,
        activateStoreChanges: null,
        deactivateStoreChanges: null,
        __class__: nB
    };
    var a5 = function() {};
    nt["miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"] = a5;
    a5.__name__ = ["miniclip", "promotionsystem", "core", "interfaces", "IPromotionSystemBase"];
    a5.__interfaces__ = [nB];
    a5.prototype = {
        get_promoSystemId: null,
        set_promoSystemId: null,
        get_currentTimestamp: null,
        set_currentTimestamp: null,
        get_delegate: null,
        set_delegate: null,
        get_defaultSaveDataKey: null,
        set_defaultSaveDataKey: null,
        get_currentSaveDataKey: null,
        set_currentSaveDataKey: null,
        dirtyFlag: null,
        loadData: null,
        saveData: null,
        resetData: null,
        saveDataAndSynchronize: null,
        reset: null,
        getProductReplacement: null,
        getReplacedProduct: null,
        getProductReplacements: null,
        isProductActivated: null,
        isProductDeactivated: null,
        getActivatedProducts: null,
        getDeactivatedProducts: null,
        getProductReplacementsForOffer: null,
        getActivatedProductsForOffer: null,
        getDeactivatedProductsForOffer: null,
        getOffers: null,
        isOfferActive: null,
        activateOffer: null,
        isOfferKilled: null,
        isOfferHidden: null,
        getActiveOffers: null,
        setOfferPopUpState: null,
        isOfferPopUpActive: null,
        getOfferFromId: null,
        getTopActiveOffer: null,
        getBadgeInfoForOffer: null,
        getRemainingBadgeTimeForOffer: null,
        getEnqueuedOfferPopUps: null,
        getTopOfferPopUp: null,
        getPopUpInfoForOffer: null,
        runPopUpAction: null,
        getPopupActionDataForOffer: null,
        getSaveDataKeyForUser: null,
        loadOffersConfiguration: null,
        registerForEvent: null,
        unregisterForEvent: null,
        postEvent: null,
        __class__: a5,
        __properties__: {
            set_currentSaveDataKey: "set_currentSaveDataKey",
            get_currentSaveDataKey: "get_currentSaveDataKey",
            set_defaultSaveDataKey: "set_defaultSaveDataKey",
            get_defaultSaveDataKey: "get_defaultSaveDataKey",
            set_delegate: "set_delegate",
            get_delegate: "get_delegate",
            set_currentTimestamp: "set_currentTimestamp",
            get_currentTimestamp: "get_currentTimestamp",
            set_promoSystemId: "set_promoSystemId",
            get_promoSystemId: "get_promoSystemId"
        }
    };
    var ij = function() {
        this._numDisabledOffersToCheck = 1;
        this._disabledOfferIndex = 0;
        this.dirtyFlag = false;
        this.set_currentTimestamp(-1);
        this._offers = new io();
        this._activeOffers = [];
        this._offerPopupQueue = [];
        this._offerPopupPrioritizedQueue = [];
        this._dispatcher = new jt();
        this._disabledOffers = [];
        this._storeChangesProductActivationState = new io();
        this._storeChangesReplacedProducts = new io()
    };
    nt["miniclip.promotionsystem.core.PromotionSystem"] = ij;
    ij.__name__ = ["miniclip", "promotionsystem", "core", "PromotionSystem"];
    ij.__interfaces__ = [ew, a5];
    ij.sortString = function(q, i) {
        if (q < i) {
            return -1
        } else {
            if (q > i) {
                return 1
            } else {
                return 0
            }
        }
    };
    ij.prototype = {
        dirtyFlag: null,
        promoSystemId: null,
        get_promoSystemId: function() {
            return this.promoSystemId
        },
        set_promoSystemId: function(i) {
            return this.promoSystemId = i
        },
        currentTimestamp: null,
        get_currentTimestamp: function() {
            return this.currentTimestamp
        },
        set_currentTimestamp: function(qY) {
            if (!this._initialized) {
                return this.get_currentTimestamp()
            }
            this.currentTimestamp = qY;
            if (this._disabledOffers.length > 0) {
                var js;
                if (this._numDisabledOffersToCheck == 0) {
                    js = this._disabledOffers.length
                } else {
                    js = this._numDisabledOffersToCheck
                }
                var qZ = 0;
                while (qZ < js) {
                    var i1 = qZ++;
                    if (this._disabledOfferIndex >= this._disabledOffers.length) {
                        this._disabledOfferIndex = 0
                    }
                    var q = this._disabledOffers[this._disabledOfferIndex];
                    q.updateDisableOffer();
                    if (!q.disableOffer) {
                        this.addOffer(q);
                        this._disabledOffers.splice(this._disabledOfferIndex, 1);
                        if (this._disabledOffers.length <= 0) {
                            break
                        }
                    } else {
                        ++this._disabledOfferIndex
                    }
                }
            }
            var i2 = this._offers.iterator();
            while (i2.hasNext()) {
                var i = i2.next();
                i.set_currentTimestamp(qY)
            }
            if (this.dirtyFlag) {
                this.dirtyFlag = false;
                this.saveData()
            }
            return this.currentTimestamp = qY
        },
        delegate: null,
        get_delegate: function() {
            return this.delegate
        },
        set_delegate: function(i) {
            return this.delegate = i
        },
        defaultSaveDataKey: null,
        get_defaultSaveDataKey: function() {
            return this.defaultSaveDataKey
        },
        set_defaultSaveDataKey: function(i) {
            return this.defaultSaveDataKey = i
        },
        currentSaveDataKey: null,
        get_currentSaveDataKey: function() {
            return this.currentSaveDataKey
        },
        set_currentSaveDataKey: function(i) {
            return this.currentSaveDataKey = i
        },
        _offers: null,
        _activeOffers: null,
        _offerPopupPrioritizedQueue: null,
        _offerPopupQueue: null,
        _disabledOffers: null,
        _disabledOfferIndex: null,
        _numDisabledOffersToCheck: null,
        _initialized: null,
        _storeChangesProductActivationState: null,
        _storeChangesReplacedProducts: null,
        _dispatcher: null,
        _defaultActionDelegate: null,
        _persistanceDelegate: null,
        initWithOffersConfiguration: function(qZ, q, q0, i2, q2) {
            if (q2 == null) {
                q2 = 1
            }
            this._numDisabledOffersToCheck = q2;
            var js = this.getSaveDataKeyForUser(i2);
            var q1 = js == this.get_currentSaveDataKey();
            this.set_defaultSaveDataKey("promotionSystemBaseSaveData");
            if (q1 && this._initialized) {
                return
            }
            if (this._initialized) {
                this.saveData();
                this.reset()
            }
            this.set_currentSaveDataKey(js);
            var i = 0;
            while (i < qZ.length) {
                var qY = qZ[i];
                ++i;
                var i1 = new kf(this, qY);
                i1.delegate = this;
                if (i1.shouldInstanceOffer) {
                    if (!i1.disableOffer) {
                        this.addOffer(i1)
                    } else {
                        this._disabledOffers.push(i1)
                    }
                }
            }
            this._persistanceDelegate = q;
            this._defaultActionDelegate = q0;
            this._initialized = true;
            this.loadData()
        },
        loadData: function() {
            if (!this._initialized) {
                return
            }
            var i = null;
            if (this._persistanceDelegate != null) {
                i = this._persistanceDelegate.loadData()
            } else {
                null
            }
            if (i != "" && i != null) {
                this.setState(new dB(i).parseRec())
            }
        },
        resetData: function() {
            if (!this._initialized) {
                return
            }
            if (this._persistanceDelegate != null) {
                this._persistanceDelegate.saveData(null)
            }
        },
        saveData: function() {
            if (!this._initialized) {
                return
            }
            var i = this.getState();
            if (this._persistanceDelegate != null) {
                this._persistanceDelegate.saveData(s.print(i, null, null))
            }
            null
        },
        saveDataAndSynchronize: function(i) {
            throw new nM("not implemented!")
        },
        reset: function() {
            if (!this._initialized) {
                return
            }
            this._storeChangesProductActivationState = new io();
            this._storeChangesReplacedProducts = new io();
            this._activeOffers = [];
            this._offerPopupQueue = [];
            this._offerPopupPrioritizedQueue = [];
            var q = this._offers.iterator();
            while (q.hasNext()) {
                var i = q.next();
                i.reset()
            }
            this._disabledOfferIndex = 0;
            this.set_currentTimestamp(-1)
        },
        activateOffer: function(i) {
            var q = this.getOfferFromId(i);
            if (q == null) {
                return
            }
            q.setOfferState(cH.ACTIVE, this.get_currentTimestamp())
        },
        loadOffersConfiguration: function(i1) {
            if (!this._initialized || i1 == null || i1.length <= 0) {
                return false
            }
            if (this.get_currentTimestamp() >= 0) {
                this.reset()
            }
            this.clearOffers();
            var i2 = 0;
            var js = i1.length;
            while (i2 < js) {
                var q = i2++;
                this.addOffer(new kf(this, i1[q]))
            }
            return true
        },
        clearOffers: function() {
            if (this._offers != null) {
                this._offers = new io()
            }
        },
        addOffers: function(i1) {
            var i2 = 0;
            var js = i1.length;
            while (i2 < js) {
                var q = i2++;
                this.addOffer(i1[q])
            }
        },
        hasPromotions: function() {
            return this._offers != null
        },
        hasActivePromotions: function() {
            return this._activeOffers != null && this._activeOffers.length > 0
        },
        addOffer: function(i) {
            this._offers.set(i.offerName, i)
        },
        getOffers: function() {
            var i = [];
            var i1 = this._offers.iterator();
            while (i1.hasNext()) {
                var q = i1.next();
                i.push(q)
            }
            return i
        },
        isOfferActive: function(i) {
            if (!this._initialized || !this.hasPromotions()) {
                return false
            }
            var i1 = this.getOfferFromId(i);
            if (i1 == null) {
                return false
            }
            if (!i1.isOfferActive()) {
                return false
            }
            var q = this.getActivePromotionIndex(i1);
            return q > -1
        },
        isOfferKilled: function(i) {
            var q = this.getOfferFromId(i);
            if (q != null) {
                return q.getOfferState() == cH.KILLED
            }
            return false
        },
        isOfferHidden: function(i) {
            if (!this._initialized || !this.hasPromotions()) {
                return false
            }
            var q = this.getOfferFromId(i);
            if (q == null) {
                return false
            }
            return q.get_hidePromotion()
        },
        getOfferFromId: function(i) {
            if (!this._initialized || !this.hasPromotions()) {
                return null
            }
            return this._offers.get(i)
        },
        getActivePromotionIndex: function(i) {
            return cj.indexOf(this._activeOffers, i, 0)
        },
        addActivePromotion: function(i) {
            this._activeOffers.push(i);
            this._activeOffers.sort(oT(this, this.sortPromotions))
        },
        removeActivePromotion: function(i) {
            this._activeOffers.splice(i, 1)
        },
        getTopActiveOffer: function() {
            if (this._activeOffers != null && this._activeOffers.length > 0) {
                return this._activeOffers[0]
            } else {
                return null
            }
        },
        getActiveOffers: function() {
            return this._activeOffers
        },
        getActiveOffersTokens: function() {
            throw new nM("not implemented!");
            return null
        },
        getTokenForOffer: function(i, q) {
            throw new nM("not implemented!");
            return null
        },
        getAllOffersPrioritized: function() {
            throw new nM("not implemented!");
            return null
        },
        getActivatedProducts: function() {
            if (!this._initialized) {
                return null
            }
            var js = [];
            var i2 = this._storeChangesProductActivationState.keys();
            while (i2.hasNext()) {
                var i1 = i2.next();
                var i = this._storeChangesProductActivationState.get(i1);
                if (m6.isCollectionEmpty(i)) {
                    continue
                }
                var q = i[i.length - 1];
                if (q) {
                    js.push(i1)
                }
            }
            return js
        },
        getDeactivatedProducts: function() {
            if (!this._initialized) {
                return null
            }
            var js = [];
            var i2 = this._storeChangesProductActivationState.keys();
            while (i2.hasNext()) {
                var i1 = i2.next();
                var i = this._storeChangesProductActivationState.get(i1);
                if (m6.isCollectionEmpty(i)) {
                    continue
                }
                var q = i[i.length - 1];
                if (q) {
                    js.push(i1)
                }
            }
            return js
        },
        isProductActivated: function(i1) {
            if (!this._initialized || m6.isStringEmpty(i1)) {
                return false
            }
            var i = this._storeChangesProductActivationState.get(i1);
            if (m6.isCollectionEmpty(i)) {
                return false
            }
            var q = i[i.length - 1];
            return q
        },
        isProductDeactivated: function(i1) {
            if (!this._initialized || m6.isStringEmpty(i1)) {
                return false
            }
            var i = this._storeChangesProductActivationState.get(i1);
            if (m6.isCollectionEmpty(i)) {
                return false
            }
            var q = i[i.length - 1];
            return !q
        },
        getActivatedProductsForOffer: function(i) {
            throw new nM("not implemented!");
            return null
        },
        getDeactivatedProductsForOffer: function(i) {
            throw new nM("not implemented!");
            return null
        },
        getProductReplacementsForOffer: function(i) {
            throw new nM("not implemented!");
            return null
        },
        getProductReplacement: function(i) {
            if (!this._initialized || m6.isStringEmpty(i)) {
                return null
            }
            var q = this._storeChangesReplacedProducts.get(i);
            if (!m6.isCollectionEmpty(q)) {
                return q[q.length - 1]
            } else {
                return null
            }
        },
        getReplacedProduct: function(i2) {
            if (!this._initialized || m6.isStringEmpty(i2)) {
                return null
            }
            var qZ = this._storeChangesReplacedProducts.keys();
            while (qZ.hasNext()) {
                var qY = qZ.next();
                var i1 = this._storeChangesReplacedProducts.get(qY);
                var js = 0;
                var q0 = i1.length;
                while (js < q0) {
                    var q = js++;
                    if (i1[q] == i2) {
                        return qY
                    }
                }
            }
            return null
        },
        getProductReplacements: function() {
            if (!this._initialized) {
                return null
            }
            var i = new io();
            var i1 = this._storeChangesReplacedProducts.keys();
            while (i1.hasNext()) {
                var q = i1.next();
                var i2 = this._storeChangesReplacedProducts.get(q);
                if (!m6.isCollectionEmpty(i2)) {
                    i.set(q, i2[i2.length - 1])
                }
            }
            return i
        },
        getBadgeInfoForOffer: function(i) {
            var i1 = this.getOfferFromId(i);
            if (i1 == null) {
                return null
            }
            var q;
            if (i1.badgeConfigurationWeb != null) {
                q = i1.badgeConfigurationWeb
            } else {
                q = i1.badgeConfiguration
            }
            if (q == null) {
                if (i1.badgeImage == null && i1.badgeText == null) {
                    return null
                } else {
                    f9.iniWithImage(i1.badgeImage, i1.badgeText)
                }
            }
            return f9.iniWithConfiguration(q)
        },
        getRemainingBadgeTimeForOffer: function(i) {
            if (!this._initialized || m6.isStringEmpty(i)) {
                return -1
            }
            var q = this.getOfferFromId(i);
            if (q == null) {
                return -1
            }
            return q.get_badgeRemainingTime()
        },
        setOfferPopUpState: function(i, q) {
            var i1;
            i1 = n0.__cast(this.getOfferFromId(i), kf);
            i1.setPopupActiveState(q)
        },
        isOfferPopUpActive: function(i) {
            var q = this.getOfferFromId(i);
            return q.isPopUpActive()
        },
        getEnqueuedOfferPopUps: function() {
            if (this._offerPopupPrioritizedQueue != null) {
                return this._offerPopupPrioritizedQueue
            } else {
                return this._offerPopupQueue
            }
        },
        getTopOfferPopUp: function() {
            if (!this._initialized) {
                return null
            }
            if (this._offerPopupPrioritizedQueue != null && this._offerPopupPrioritizedQueue.length > 0) {
                return this._offerPopupPrioritizedQueue[0]
            }
            if (this._offerPopupQueue != null && this._offerPopupQueue.length > 0) {
                return this._offerPopupQueue[0]
            }
            return null
        },
        getPopUpInfoForOffer: function(q) {
            if (!this._initialized || m6.isStringEmpty(q)) {
                return null
            }
            var i1 = this.getOfferFromId(q);
            if (i1 == null) {
                return null
            }
            var i = new p1();
            i.initWithImage(i1.popupImage, i1.popUpButtonText, i1.getPopupDismissedEvent(), i1.getKillEvent(), i1.popUpCustomData);
            return i
        },
        runPopUpAction: function(qY, i, i1) {
            if (!this._initialized || m6.isStringEmpty(i)) {
                return
            }
            var i2 = this.getOfferFromId(i);
            if (i2 == null) {
                return
            }
            var q;
            if (i2.getOfferState() == cH.ACTIVE) {
                if (i1 != null) {
                    q = i1
                } else {
                    q = this._defaultActionDelegate
                }
            } else {
                q = null
            }
            if (q == null) {
                return
            }
            if (qY != null) {
                var js = i2.popUpActions.get(qY);
                if (js == null) {
                    return
                }
                js.run(q)
            }
            return
        },
        runPopUpActionForOffer: function(i, q) {
            throw new nM("not implemented!")
        },
        getPopupActionDataForOffer: function(i, q) {
            throw new nM("not implemented!")
        },
        showOfferPopUp: function(i1, q) {
            if (!this._initialized || i1 == null) {
                return
            }
            var i = this.getPrioritizedQueueIndex(i1);
            if (i != -1) {
                return
            }
            i = this.getQueueIndex(i1);
            if (i != -1) {
                if (q) {
                    this.removeFromQueue(i)
                } else {
                    return
                }
            }
            if (q) {
                this.addToPrioritizedQueue(i1)
            } else {
                this.addToQueue(i1)
            }
            if (this.get_delegate() != null) {
                this.get_delegate().offerPopUpAddedToQueue(i1.offerName)
            }
        },
        hideOfferPopUp: function(q) {
            if (!this._initialized || q == null) {
                return
            }
            var i = this.getPrioritizedQueueIndex(q);
            if (i != -1) {
                this.removeFromPrioritizedQueue(i)
            } else {
                i = this.getQueueIndex(q);
                if (i != -1) {
                    this.removeFromQueue(i)
                } else {
                    return
                }
            }
            if (this.get_delegate() != null) {
                this.get_delegate().offerPopUpRemovedFromQueue(q.offerName)
            }
        },
        offerActivated: function(q) {
            if (!this._initialized || q == null) {
                return
            }
            var i = this.getActivePromotionIndex(q);
            if (i != -1) {
                return
            }
            this.addActivePromotion(q);
            if (this.get_delegate() != null) {
                this.get_delegate().offerWasActivated(q.offerName)
            }
        },
        offerDeactivated: function(q) {
            if (!this._initialized || q == null) {
                return
            }
            var i = this.getActivePromotionIndex(q);
            if (i == -1) {
                return
            }
            this.removeActivePromotion(i);
            if (this.get_delegate() != null) {
                this.get_delegate().offerWasDeactivated(q.offerName)
            }
        },
        activateStoreChanges: function(q, i) {
            if (!this._initialized || i == null || i.length == 0) {
                return
            }
            var i1 = 0;
            while (i1 < i.length) {
                var i2 = i[i1];
                ++i1;
                this.addStoreChange(i2)
            }
        },
        deactivateStoreChanges: function(q, i) {
            if (!this._initialized || i == null || i.length == 0) {
                return
            }
            var i1 = 0;
            while (i1 < i.length) {
                var i2 = i[i1];
                ++i1;
                this.removeStoreChange(i2)
            }
        },
        addToPrioritizedQueue: function(i) {
            this._offerPopupPrioritizedQueue.push(i);
            this._offerPopupPrioritizedQueue.sort(oT(this, this.sortPromotions))
        },
        getQueueIndex: function(i) {
            return cj.indexOf(this._offerPopupQueue, i, 0)
        },
        addToQueue: function(i) {
            this._offerPopupQueue.push(i)
        },
        removeFromQueue: function(i) {
            this._offerPopupQueue.splice(i, 1)
        },
        getSaveDataKeyForUser: function(i) {
            if (m6.isStringEmpty(i)) {
                return this.get_defaultSaveDataKey()
            }
            return this.get_defaultSaveDataKey() + "For" + i
        },
        registerForEvent: function(i, q, i1) {
            this._dispatcher.registerForEvent(i, q, i1)
        },
        unregisterForEvent: function(i, q) {
            this._dispatcher.unregisterForEvent(i, q)
        },
        postEvent: function(i, q) {
            this._dispatcher.postEvent(i, q)
        },
        isOfferCloseToBegin: function(i) {
            if (!this._initialized || m6.isStringEmpty(i)) {
                return false
            }
            var q = this.getOfferFromId(i);
            if (q == null) {
                return false
            }
            return q.isOfferCloseToBegin()
        },
        isOfferCloseToEnd: function(i) {
            if (!this._initialized || m6.isStringEmpty(i)) {
                return false
            }
            var q = this.getOfferFromId(i);
            if (q == null) {
                return false
            }
            return q.isOfferCloseToEnd()
        },
        getDeltaToDisplayCloseToBeginNotificationForOffer: function(i) {
            var q = this.getOfferFromId(i);
            if (q == null) {
                return -1
            }
            return q.getDeltaToDisplayCloseToBeginNotification()
        },
        getDeltaToDisplayActiveNotificationForOffer: function(i) {
            var q = this.getOfferFromId(i);
            if (q == null) {
                return -1
            }
            return q.getDeltaToDisplayActiveNotification()
        },
        getDeltaToDisplayCloseToEndNotificationForOffer: function(i) {
            var q = this.getOfferFromId(i);
            if (q == null) {
                return -1
            }
            return q.getDeltaToDisplayCloseToEndNotification()
        },
        getDeltaToDisplayAfterStartDateNotificationForOffer: function(i) {
            var q = this.getOfferFromId(i);
            if (q == null) {
                return -1
            }
            return q.getDeltaToDisplayAfterStartDateNotification()
        },
        getDeltaToDisplayBeforeEndDateNotificationForOffer: function(i) {
            var q = this.getOfferFromId(i);
            if (q == null) {
                return -1
            }
            return q.getDeltaToDisplayBeforeEndDateNotification()
        },
        getPrioritizedQueueIndex: function(i) {
            return cj.indexOf(this._offerPopupPrioritizedQueue, i, 0)
        },
        removeFromPrioritizedQueue: function(i) {
            this._offerPopupPrioritizedQueue.splice(i, 1)
        },
        sortPromotions: function(q, i) {
            if (q == null || i == null || m6.isStringEmpty(q.offerName) || m6.isStringEmpty(i.offerName)) {
                null
            }
            if (q.badgePriority < i.badgePriority) {
                return 1
            }
            if (q.badgePriority > i.badgePriority) {
                return -1
            }
            if (q.get_badgeRemainingTime() < i.get_badgeRemainingTime() && q.get_badgeRemainingTime() > 0) {
                return -1
            }
            if (q.get_badgeRemainingTime() > i.get_badgeRemainingTime() && i.get_badgeRemainingTime() > 0) {
                return 1
            }
            if (q.lastActivationTimestamp > i.lastActivationTimestamp) {
                return -1
            }
            if (q.lastActivationTimestamp < i.lastActivationTimestamp) {
                return 1
            }
            return ij.sortString(q.offerName, i.offerName)
        },
        addStoreChange: function(i2) {
            var i1;
            var qZ = i2.activateProduct;
            if (!m6.isStringEmpty(qZ)) {
                i1 = ar.field(this._storeChangesProductActivationState, qZ);
                if (i1 == null) {
                    i1 = [];
                    this._storeChangesProductActivationState.set(qZ, i1)
                }
                i1.push(true)
            }
            var q = i2.deactivateProduct;
            if (!m6.isStringEmpty(q)) {
                i1 = ar.field(this._storeChangesProductActivationState, q);
                if (i1 == null) {
                    i1 = [];
                    this._storeChangesProductActivationState.set(q, i1)
                }
                i1.push(false)
            }
            var js = i2.get_replacementProductToActivate();
            var i = i2.get_replacementProductToDeactivate();
            if (!m6.isStringEmpty(js) && !m6.isStringEmpty(i)) {
                var qY = ar.field(this._storeChangesReplacedProducts, i);
                if (qY == null) {
                    qY = [];
                    this._storeChangesReplacedProducts.set(i, qY)
                }
                qY.push(js)
            }
        },
        removeStoreChange: function(i2) {
            var i1;
            var qZ = i2.activateProduct;
            if (!m6.isStringEmpty(qZ)) {
                i1 = this._storeChangesProductActivationState.get(qZ);
                if (i1 != null) {
                    m6.remove_last_instance_of_object(i1, true);
                    if (i1.length == 0) {
                        this._storeChangesProductActivationState.remove(qZ)
                    }
                }
            }
            var q = i2.deactivateProduct;
            if (!m6.isStringEmpty(q)) {
                i1 = this._storeChangesProductActivationState.get(q);
                if (i1 != null) {
                    m6.remove_last_instance_of_object(i1, false);
                    if (i1.length == 0) {
                        this._storeChangesProductActivationState.remove(q)
                    }
                }
            }
            var js = i2.get_replacementProductToActivate();
            var i = i2.get_replacementProductToDeactivate();
            if (!m6.isStringEmpty(js) && !m6.isStringEmpty(i)) {
                var qY = this._storeChangesReplacedProducts.get(i);
                if (qY != null) {
                    m6.remove_last_instance_of_object(qY, js);
                    if (qY.length == 0) {
                        this._storeChangesReplacedProducts.remove(i)
                    }
                }
            }
        },
        removeAllStoreChanges: function() {
            this._storeChangesProductActivationState = new io();
            this._storeChangesReplacedProducts = new io()
        },
        getState: function() {
            var i = {};
            var i1 = {};
            var q9 = this._offers.keys();
            while (q9.hasNext()) {
                var i2 = q9.next();
                var q8 = this._offers.get(i2);
                ar.setProperty(i1, q8.offerName, q8.getState())
            }
            var q4 = [];
            var q0 = 0;
            var q6 = this._activeOffers;
            while (q0 < q6.length) {
                var q7 = q6[q0];
                ++q0;
                q4.push(q7.offerName)
            }
            var qZ = [];
            var q3 = 0;
            var js = this._offerPopupPrioritizedQueue;
            while (q3 < js.length) {
                var q5 = js[q3];
                ++q3;
                qZ.push(q5.offerName)
            }
            var qY = [];
            var q1 = 0;
            var q = this._offerPopupQueue;
            while (q1 < q.length) {
                var q2 = q[q1];
                ++q1;
                qY.push(q2.offerName)
            }
            ar.setProperty(i, "currentTimestampState", this.get_currentTimestamp());
            ar.setProperty(i, "offersState", i1);
            ar.setProperty(i, "activeOffersState", q4);
            ar.setProperty(i, "OfferPopUpQueueState", qZ);
            ar.setProperty(i, "OfferPopUpPrioritizedQueueState", qY);
            return i
        },
        setState: function(js) {
            if (js == null) {
                throw new nM("Cannot continue without appropriate state defined")
            }
            try {
                var ri = js;
                var rc = ar.getProperty(ri, "currentTimestampState");
                var q8 = ar.getProperty(ri, "offersState");
                var q = ar.getProperty(ri, "activeOffersState");
                var rb = ar.getProperty(ri, "OfferPopUpQueueState");
                var rd = ar.getProperty(ri, "OfferPopUpPrioritizedQueueState");
                if (q8 != null) {
                    var i1 = 0;
                    var q7 = ar.fields(q8);
                    while (i1 < q7.length) {
                        var ra = q7[i1];
                        ++i1;
                        var rg = ar.field(q8, ra);
                        var i = this._offers.get(ra);
                        if (i == null) {
                            continue
                        }
                        i.setState(rg)
                    }
                }
                var rj = this._storeChangesProductActivationState.keys();
                while (rj.hasNext()) {
                    var rl = rj.next();
                    this._storeChangesProductActivationState.remove(rl)
                }
                var rh = this._storeChangesReplacedProducts.keys();
                while (rh.hasNext()) {
                    var rk = rh.next();
                    this._storeChangesReplacedProducts.remove(rk)
                }
                this._activeOffers.splice(0, this._activeOffers.length);
                this._offerPopupPrioritizedQueue.splice(0, this._offerPopupPrioritizedQueue.length);
                this._offerPopupQueue.splice(0, this._offerPopupQueue.length);
                if (q != null) {
                    var q5 = 0;
                    while (q5 < q.length) {
                        var q6 = q[q5];
                        ++q5;
                        var q0 = this._offers.get(q6);
                        if (q0 == null) {
                            continue
                        }
                        if (q0.getOfferState() != cH.ACTIVE) {
                            continue
                        }
                        if (!q0.get_hidePromotion()) {
                            this._activeOffers.push(q0);
                            var q9 = q0.storeChanges;
                            if (!m6.isCollectionEmpty(q9)) {
                                var re = 0;
                                while (re < q9.length) {
                                    var i2 = q9[re];
                                    ++re;
                                    this.addStoreChange(i2)
                                }
                            }
                        }
                    }
                }
                this._activeOffers.sort(oT(this, this.sortPromotions));
                if (rb != null) {
                    var q3 = 0;
                    while (q3 < rb.length) {
                        var q4 = rb[q3];
                        ++q3;
                        var qZ = this._offers.get(q4);
                        if (qZ == null) {
                            continue
                        }
                        if (qZ.getOfferState() != cH.ACTIVE) {
                            continue
                        }
                        if (!qZ.get_hidePromotion()) {
                            this._offerPopupPrioritizedQueue.push(qZ)
                        }
                    }
                }
                this._offerPopupPrioritizedQueue.sort(oT(this, this.sortPromotions));
                if (rd != null) {
                    var q1 = 0;
                    while (q1 < rd.length) {
                        var q2 = rd[q1];
                        ++q1;
                        var qY = this._offers.get(q2);
                        if (qY == null) {
                            continue
                        }
                        if (qY.getOfferState() != cH.ACTIVE) {
                            continue
                        }
                        if (!qY.get_hidePromotion()) {
                            this._offerPopupQueue.push(qY)
                        }
                    }
                }
                this.set_currentTimestamp(rc)
            } catch (rf) {
                lF.lastException = rf;
                if (rf instanceof nM) {
                    rf = rf.val
                }
                eM.trace("Failed to set promotion system state.", {
                    fileName: "PromotionSystem.hx",
                    lineNumber: 1221,
                    className: "miniclip.promotionsystem.core.PromotionSystem",
                    methodName: "setState"
                });
                null
            }
        },
        __class__: ij,
        __properties__: {
            set_currentSaveDataKey: "set_currentSaveDataKey",
            get_currentSaveDataKey: "get_currentSaveDataKey",
            set_defaultSaveDataKey: "set_defaultSaveDataKey",
            get_defaultSaveDataKey: "get_defaultSaveDataKey",
            set_delegate: "set_delegate",
            get_delegate: "get_delegate",
            set_currentTimestamp: "set_currentTimestamp",
            get_currentTimestamp: "get_currentTimestamp",
            set_promoSystemId: "set_promoSystemId",
            get_promoSystemId: "get_promoSystemId"
        }
    };
    var kP = function() {};
    nt["miniclip.promotionsystem.core.interfaces.IListableResources"] = kP;
    kP.__name__ = ["miniclip", "promotionsystem", "core", "interfaces", "IListableResources"];
    kP.prototype = {
        getResourceList: null,
        __class__: kP
    };
    var pd = function() {};
    nt["miniclip.promotionsystem.core.interfaces.IMultiTriggerEvent"] = pd;
    pd.__name__ = ["miniclip", "promotionsystem", "core", "interfaces", "IMultiTriggerEvent"];
    pd.prototype = {
        activateOnFirstEvent: null,
        triggerEvents: null,
        activate: null,
        reset: null,
        S_TriggerActivated: null,
        __class__: pd
    };
    var b = function() {};
    nt["miniclip.promotionsystem.core.interfaces.IPromotionAction"] = b;
    b.__name__ = ["miniclip", "promotionsystem", "core", "interfaces", "IPromotionAction"];
    b.prototype = {
        type: null,
        parameters: null,
        successDelegateSelector: null,
        failureDelegateSelector: null,
        popUpActionDismissesPopup: null,
        popUpActionDeactivatesOffer: null,
        popUpActionKillsOffer: null,
        getActionFromConfiguration: null,
        initWithConfiguration: null,
        reset: null,
        getState: null,
        setState: null,
        run: null,
        getData: null,
        __class__: b
    };
    var ak = function() {};
    nt["miniclip.promotionsystem.core.interfaces.PromotionClientActionType"] = ak;
    ak.__name__ = ["miniclip", "promotionsystem", "core", "interfaces", "PromotionClientActionType"];
    var le = function() {};
    nt["miniclip.promotionsystem.core.interfaces.PromotionClientActionParams"] = le;
    le.__name__ = ["miniclip", "promotionsystem", "core", "interfaces", "PromotionClientActionParams"];
    var k5 = nt["miniclip.promotionsystem.core.interfaces.PromotionActionDelegateReturnType"] = {
        __ename__: ["miniclip", "promotionsystem", "core", "interfaces", "PromotionActionDelegateReturnType"],
        __constructs__: ["PROMOTION_ACTION_RETURN_TYPE_SUCCESS", "PROMOTION_ACTION_RETURN_TYPE_FAILURE", "PROMOTION_ACTION_RETURN_TYPE_DELAYED_RESPONSE", "PROMOTION_ACTION_RETURN_TYPE_NUM"]
    };
    k5.PROMOTION_ACTION_RETURN_TYPE_SUCCESS = ["PROMOTION_ACTION_RETURN_TYPE_SUCCESS", 0];
    k5.PROMOTION_ACTION_RETURN_TYPE_SUCCESS.toString = ea;
    k5.PROMOTION_ACTION_RETURN_TYPE_SUCCESS.__enum__ = k5;
    k5.PROMOTION_ACTION_RETURN_TYPE_FAILURE = ["PROMOTION_ACTION_RETURN_TYPE_FAILURE", 1];
    k5.PROMOTION_ACTION_RETURN_TYPE_FAILURE.toString = ea;
    k5.PROMOTION_ACTION_RETURN_TYPE_FAILURE.__enum__ = k5;
    k5.PROMOTION_ACTION_RETURN_TYPE_DELAYED_RESPONSE = ["PROMOTION_ACTION_RETURN_TYPE_DELAYED_RESPONSE", 2];
    k5.PROMOTION_ACTION_RETURN_TYPE_DELAYED_RESPONSE.toString = ea;
    k5.PROMOTION_ACTION_RETURN_TYPE_DELAYED_RESPONSE.__enum__ = k5;
    k5.PROMOTION_ACTION_RETURN_TYPE_NUM = ["PROMOTION_ACTION_RETURN_TYPE_NUM", 3];
    k5.PROMOTION_ACTION_RETURN_TYPE_NUM.toString = ea;
    k5.PROMOTION_ACTION_RETURN_TYPE_NUM.__enum__ = k5;
    var kE = function() {};
    nt["miniclip.promotionsystem.core.interfaces.IPromotionSystemDelegate"] = kE;
    kE.__name__ = ["miniclip", "promotionsystem", "core", "interfaces", "IPromotionSystemDelegate"];
    kE.prototype = {
        offerWasActivated: null,
        offerWasDeactivated: null,
        offerPopUpAddedToQueue: null,
        offerPopUpRemovedFromQueue: null,
        __class__: kE
    };
    var oz = function() {};
    nt["miniclip.promotionsystem.core.interfaces.ITriggerEvent"] = oz;
    oz.__name__ = ["miniclip", "promotionsystem", "core", "interfaces", "ITriggerEvent"];
    oz.prototype = {
        set_enabled: null,
        delegateTarget: null,
        delegateParameter: null,
        enabled: null,
        eventLevels: null,
        reveivedEvent: null,
        description: null,
        activate: null,
        reset: null,
        S_TriggerActivated: null,
        __class__: oz,
        __properties__: {
            set_enabled: "set_enabled"
        }
    };
    var kH = function() {};
    nt["miniclip.promotionsystem.core.model.DataAccessSolver"] = kH;
    kH.__name__ = ["miniclip", "promotionsystem", "core", "model", "DataAccessSolver"];
    kH.solve = function(i) {
        if (i == null) {
            return null
        }
        var q = i.execute();
        if (kH.isDataAccess(q)) {
            if (n0.__instanceof(q, e4)) {
                return kH.solve(q)
            }
            return kH.solve(kH.getDataAccess(ar.getProperty(q, "dataAccess")))
        }
        return q
    };
    kH.isDataAccess = function(i) {
        var q = kX["typeof"](i);
        switch (q[1]) {
            case 4:
                return i.dataAccess != null;
            default:
                return false
        }
    };
    kH.loadIndirectData = function(i) {
        kH.indirections = i
    };
    kH.getIndirectDataForKey = function(i) {
        var q = kH.indirections;
        var i1 = "";
        var js = 0;
        while (js < i.length) {
            var i2 = i[js];
            ++js;
            i1 += i2 + ".";
            q = ar.field(q, i2);
            if (q == null) {
                break
            }
        }
        return q
    };
    kH.getDataAccess = function(q) {
        if (Object.prototype.hasOwnProperty.call(q, "type")) {
            var i = ar.field(q, "type");
            switch (i) {
                case "MCPromoDataAccessIndirect":
                    return new kI(null, q);
                case "MCPromoDataAccessLocalization":
                    return new gk(null, q);
                case "MCPromoDataAccessPlatform":
                    return new o6(null, q);
                case "MCPromoDataAccessABtest":
                    return new aH(null, q);
                case "MCPromoDataAccessUserProperty":
                    return new cR(null, q);
                case "MCPromoDataAccessNumberProperty":
                    return new fX(null, q);
                case "MCPromoDataAccessIndirectTemplate":
                    return new h0(null, q);
                default:
                    null
            }
        }
        return null
    };
    var jt = function() {
        this.observersList = new io();
        this.eventsList = new oI()
    };
    nt["miniclip.promotionsystem.core.model.PromoEventDispatcher"] = jt;
    jt.__name__ = ["miniclip", "promotionsystem", "core", "model", "PromoEventDispatcher"];
    jt.prototype = {
        observersList: null,
        eventsList: null,
        parentsList: null,
        registerForEvent: function(q, i1, i2) {
            var i;
            if (this.observersList.exists(q)) {
                i = this.observersList.get(q)
            } else {
                i = new oY();
                this.observersList.set(q, i)
            }
            this.eventsList.push({
                name: q,
                caller: i1,
                callback: i2,
                observer: i
            });
            i.connect(i2)
        },
        unregisterForEvent: function(q, i1) {
            if (this.observersList.exists(q)) {
                var i = this.observersList.get(q);
                i.disconnect(i1)
            }
        },
        unregisterObserverForAllEvents: function(i) {
            var q = this.eventsList.h;
            var js = null;
            while (q != null) {
                var i1;
                i1 = (function(qZ) {
                    var qY;
                    js = q[0];
                    q = q[1];
                    qY = js;
                    return qY
                }(this));
                if (i1.caller == i) {
                    if (this.observersList.exists(i1.name)) {
                        var i2 = this.observersList.get(i1.name);
                        i2.disconnect(i1.callback)
                    }
                    this.eventsList.remove(i1)
                }
            }
        },
        postEvent: function(q, i2) {
            if (this.observersList.exists(q)) {
                var i = this.observersList.get(q);
                var i1 = {
                    name: q,
                    data: i2
                };
                i.emit(i1)
            }
        },
        __class__: jt
    };
    var jc = function() {};
    nt["miniclip.promotionsystem.core.model.PromotionFactory"] = jc;
    jc.__name__ = ["miniclip", "promotionsystem", "core", "model", "PromotionFactory"];
    jc.createTrigger = function(q, i1) {
        if (Object.prototype.hasOwnProperty.call(i1, "triggerType")) {
            var i = ar.field(i1, "triggerType");
            switch (i) {
                case "MCPromoWaitForDeltaTimeTrigger":
                    return new hQ(q, i1);
                case "MCPromoWaitForTimeTrigger":
                    return new mJ(q, i1);
                case "MCPromoWaitForEventTrigger":
                    return new ae(q, i1);
                case "MCPromoWaitForNestedTriggersTrigger":
                    return new or(q, i1);
                case "MCPromoWaitForSequencedNestedTriggersTrigger":
                    return new nW(q, i1);
                case "MCPromoWaitForMultiTimeTrigger":
                    return new aR(q, i1);
                default:
                    return new c0(i1)
            }
        }
        return null
    };
    var di = function(i, q) {
        this.seconds = 0;
        this.minutes = 0;
        this.hours = 0;
        this.days = 0;
        this.weeks = 0;
        this.months = 0;
        this.years = 0;
        lT.call(this, i, q)
    };
    nt["miniclip.promotionsystem.core.model.TimeVO"] = di;
    di.__name__ = ["miniclip", "promotionsystem", "core", "model", "TimeVO"];
    di.__super__ = lT;
    di.prototype = lP(lT.prototype, {
        years: null,
        months: null,
        weeks: null,
        days: null,
        hours: null,
        minutes: null,
        seconds: null,
        toMiliseconds: function() {
            var i = this.years * 31536000;
            i += this.months * 2678400;
            i += this.weeks * 604800;
            i += this.days * 86400;
            i += this.hours * 3600;
            i += this.minutes * 60;
            i += this.seconds;
            i *= 1000;
            return i
        },
        __class__: di
    });
    var lu = function(i, q) {
        this.anchorY = 0.5;
        this.anchorX = 0.5;
        this.zOrder = 0;
        this.offsetY = 0;
        this.offsetX = 0;
        this.rightX = 0;
        this.leftX = 0;
        this.maximumScale = 1;
        this.minimumScale = 0.2;
        this.maxHeight = NaN;
        this.maxWidth = NaN;
        this.rotation = 0;
        lT.call(this, i, q)
    };
    nt["miniclip.promotionsystem.core.model.vo.AssetConfigVO"] = lu;
    lu.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "AssetConfigVO"];
    lu.__super__ = lT;
    lu.prototype = lP(lT.prototype, {
        useBasePack: null,
        rotation: null,
        maxWidth: null,
        maxHeight: null,
        minimumScale: null,
        maximumScale: null,
        colorData: null,
        leftX: null,
        rightX: null,
        offsetX: null,
        offsetY: null,
        zOrder: null,
        anchorX: null,
        anchorY: null,
        imageEntries: null,
        textEntries: null,
        __class__: lu
    });
    var lI = function() {
        this.isFramedSprite = false;
        this.isBitmapFont = false;
        this.isAtlas = false
    };
    nt["miniclip.promotionsystem.core.model.vo.AssetDefinition"] = lI;
    lI.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "AssetDefinition"];
    lI.prototype = {
        type: null,
        isAtlas: null,
        isBitmapFont: null,
        isFramedSprite: null,
        name: null,
        spriteName: null,
        atlasName: null,
        __class__: lI
    };
    var f9 = function() {};
    nt["miniclip.promotionsystem.core.model.vo.BadgeInfo"] = f9;
    f9.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "BadgeInfo"];
    f9.iniWithConfiguration = function(q) {
        var i = new f9();
        i.badgeConfiguration = q;
        return i
    };
    f9.iniWithImage = function(q, i1) {
        var i = new f9();
        i.image = q;
        i.text = i1;
        return i
    };
    f9.prototype = {
        text: null,
        image: null,
        badgeConfiguration: null,
        __class__: f9
    };
    var fS = function(i, q) {
        this.darkenIfDisabled = true;
        this.isButtonDisabled = false;
        this.darkenOnPress = false;
        this.displayRemainingTimeOnBadge = false;
        this.buttonAction = null;
        lT.call(this, i, q)
    };
    nt["miniclip.promotionsystem.core.model.vo.ButtonConfigurationVO"] = fS;
    fS.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "ButtonConfigurationVO"];
    fS.__interfaces__ = [kP];
    fS.__super__ = lT;
    fS.prototype = lP(lT.prototype, {
        timerConfiguration: null,
        buttonIconImages: null,
        buttonTextLabels: null,
        buttonBackgroundImage: null,
        buttonAction: null,
        displayRemainingTimeOnBadge: null,
        darkenOnPress: null,
        isButtonDisabled: null,
        darkenIfDisabled: null,
        enabledButton: null,
        disabledButton: null,
        colorData: null,
        getResourceList: function(q) {
            if (this.buttonIconImages != null) {
                var qZ = 0;
                var i2 = this.buttonIconImages;
                while (qZ < i2.length) {
                    var js = i2[qZ];
                    ++qZ;
                    js.getResourceList(q)
                }
            }
            if (this.buttonBackgroundImage != null) {
                this.buttonBackgroundImage.getResourceList(q)
            }
            if (this.buttonTextLabels != null) {
                var i1 = 0;
                var i = this.buttonTextLabels;
                while (i1 < i.length) {
                    var qY = i[i1];
                    ++i1;
                    qY.getResourceList(q)
                }
            }
            if (this.timerConfiguration != null) {
                this.timerConfiguration.getResourceList(q)
            }
            if (this.enabledButton != null) {
                this.enabledButton.getResourceList(q)
            }
            if (this.disabledButton != null) {
                this.disabledButton.getResourceList(q)
            }
            return q
        },
        __class__: fS
    });
    var H = function(i, q) {
        lT.call(this, i, q)
    };
    nt["miniclip.promotionsystem.core.model.vo.ColorDataVO"] = H;
    H.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "ColorDataVO"];
    H.__super__ = lT;
    H.prototype = lP(lT.prototype, {
        r: null,
        g: null,
        b: null,
        a: null,
        hex: null,
        get_hex: function() {
            return this.r << 16 | this.g << 8 | this.b
        },
        _r: null,
        _g: null,
        _b: null,
        _a: null,
        __class__: H,
        __properties__: {
            get_hex: "get_hex"
        }
    });
    var gJ = function(i, q) {
        this.second = 0;
        this.minute = -1;
        this.hour = -1;
        this.day = 0;
        this.month = 0;
        this.year = 0;
        lT.call(this, i, q)
    };
    nt["miniclip.promotionsystem.core.model.vo.DateVO"] = gJ;
    gJ.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "DateVO"];
    gJ.__super__ = lT;
    gJ.prototype = lP(lT.prototype, {
        year: null,
        month: null,
        day: null,
        hour: null,
        minute: null,
        second: null,
        __class__: gJ
    });
    var eO = function(i, q) {
        this.spriteFilename = null;
        this.plistFilename = null;
        lT.call(this, i, q)
    };
    nt["miniclip.promotionsystem.core.model.vo.ImageDataVO"] = eO;
    eO.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "ImageDataVO"];
    eO.__super__ = lT;
    eO.prototype = lP(lT.prototype, {
        frameName: null,
        plistFilename: null,
        spriteFilename: null,
        __class__: eO
    });
    var nn = function(i, q) {
        this.spriteFilename = null;
        this.plistFilename = null;
        lu.call(this, i, q)
    };
    nt["miniclip.promotionsystem.core.model.vo.ImageEntryVO"] = nn;
    nn.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "ImageEntryVO"];
    nn.__interfaces__ = [kP];
    nn.__super__ = lu;
    nn.prototype = lP(lu.prototype, {
        type: null,
        params: null,
        isAtlas: null,
        get_isAtlas: function() {
            return this.imageData != null && this.imageData.plistFilename != null && this.imageData.frameName != null || this.plistFilename != null && this.frameName != null
        },
        isSpecialImage: null,
        get_isSpecialImage: function() {
            return this.type != null
        },
        frameName: null,
        frameDescription: null,
        plistFilename: null,
        spriteFilename: null,
        actionKey: null,
        imageData: null,
        removeExtension: function(i) {
            var q = new gF("\\\\.(png|jpg|gif)$", "g");
            return q.replace(i, "")
        },
        getResourceList: function(i) {
            var q = new lI();
            if (this.imageData != null) {
                q.isAtlas = this.get_isAtlas();
                if (this.get_isAtlas()) {
                    q.name = this.imageData.frameName
                } else {
                    q.name = this.imageData.spriteFilename
                }
                if (this.get_isAtlas()) {
                    q.atlasName = this.imageData.plistFilename
                } else {
                    q.atlasName = null
                }
                if (this.imageData.spriteFilename != null) {
                    q.spriteName = this.imageData.spriteFilename
                } else {
                    q.spriteName = this.imageData.frameName
                }
            } else {
                q.isAtlas = this.get_isAtlas();
                if (this.get_isAtlas()) {
                    q.name = this.frameName
                } else {
                    q.name = this.spriteFilename
                }
                if (this.get_isAtlas()) {
                    q.atlasName = this.plistFilename
                } else {
                    q.atlasName = null
                }
                if (this.spriteFilename != null) {
                    q.spriteName = this.spriteFilename
                } else {
                    q.spriteName = this.frameName
                }
            }
            q.type = this.type;
            var i1 = this.type;
            switch (i1) {
                case "FramedSprite":
                    q.spriteName = this.frameName + ".plist";
                    q.isFramedSprite = true;
                    break;
                case "HorizontalStretchFrame":
                    q.spriteName = this.frameDescription;
                    if (this.plistFilename != null) {
                        q.atlasName = this.plistFilename;
                        q.isAtlas = true
                    }
                    q.isFramedSprite = true;
                    break;
                default:
            }
            i.push(q);
            return i
        },
        __class__: nn,
        __properties__: {
            get_isSpecialImage: "get_isSpecialImage",
            get_isAtlas: "get_isAtlas"
        }
    });
    var ly = function(i, q) {
        this.deltaTime = -1;
        lT.call(this, i, q)
    };
    nt["miniclip.promotionsystem.core.model.vo.NotificationDataVO"] = ly;
    ly.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "NotificationDataVO"];
    ly.__super__ = lT;
    ly.prototype = lP(lT.prototype, {
        deltaTime: null,
        time: null,
        text: null,
        handleSpecialTypes: function(q, i) {
            if (q == "beforeBeginNotificationTime" || q == "activeNotificationTime" || q == "beforeEndNotificationTime" || q == "afterStartDateNotificationTime" || q == "beforeEndDateNotificationTime") {
                ar.setField(this, "time", new di(this._promoSystem, i));
                this.deltaTime = this.time.toMiliseconds();
                return true
            } else {
                if (q == "beforeBeginNotificationText" || q == "activeNotificationText" || q == "beforeEndNotificationText" || q == "afterStartDateNotificationText" || q == "beforeEndDateNotificationText") {
                    this.text = i;
                    return true
                }
            }
            return lT.prototype.handleSpecialTypes.call(this, q, i)
        },
        __class__: ly
    });
    var gT = function(i, q) {
        this.productId = -1;
        this.tier = -1;
        lT.call(this, i, q)
    };
    nt["miniclip.promotionsystem.core.model.vo.PopupActionParametersVO"] = gT;
    gT.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "PopupActionParametersVO"];
    gT.__super__ = lT;
    gT.prototype = lP(lT.prototype, {
        target: null,
        tier: null,
        productId: null,
        transactionId: null,
        appId: null,
        url: null,
        urlAndroid: null,
        actionToken: null,
        promoParamSkinShopTabName: null,
        __class__: gT
    });
    var g2 = function(i2, js, q0, qY) {
        lT.call(this, i2, qY);
        if (this.successTrigger == null) {
            var qZ = [js + "_" + q0 + "_SuccessEvent"];
            var q2 = [js + "_" + q0 + "_SuccessOnActivationEvent"];
            var q1 = js + "_" + q0 + "_SuccessTrigger";
            this.successTrigger = this.createDefaultWaitForEventTrigger(i2, q1, qZ, q2)
        }
        if (this.failureTrigger == null) {
            var i = [js + "_" + q0 + "_FailureEvent"];
            var q = [js + "_" + q0 + "_FailureOnActivationEvent"];
            var i1 = js + "_" + q0 + "_FailureTrigger";
            this.failureTrigger = this.createDefaultWaitForEventTrigger(i2, i1, i, q)
        }
    };
    nt["miniclip.promotionsystem.core.model.vo.PopupActionVO"] = g2;
    g2.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "PopupActionVO"];
    g2.__interfaces__ = [b];
    g2.__super__ = lT;
    g2.prototype = lP(lT.prototype, {
        type: null,
        actionType: null,
        successTrigger: null,
        failureTrigger: null,
        parameters: null,
        successDelegateSelector: null,
        failureDelegateSelector: null,
        popUpActionDismissesPopup: null,
        popUpActionDeactivatesOffer: null,
        popUpActionKillsOffer: null,
        createDefaultWaitForEventTrigger: function(qY, i, q, i2) {
            var qZ = new cG(qY);
            qZ.addEvent(q);
            var js = new kA(qY);
            js.activationEvent = qZ;
            js.onActivationEvents = i2;
            var i1 = new ae(qY);
            i1.parameters = js;
            i1.triggerName = i;
            i1.triggerType = "MCPromoWaitForEventTrigger";
            return i1
        },
        initWithConfiguration: function(i) {
            throw new nM("not implemented!")
        },
        getData: function(i) {
            throw new nM("not implemented!")
        },
        getActionFromConfiguration: function(i) {
            throw new nM("not implemented!");
            return null
        },
        reset: function() {
            if (this.successTrigger != null) {
                this.successTrigger.reset();
                this.successTrigger.set_enabled(false)
            }
            if (this.failureTrigger != null) {
                this.failureTrigger.reset();
                this.failureTrigger.set_enabled(false)
            }
        },
        success: function() {
            this.reset();
            if (this.successDelegateSelector != null) {
                this.successDelegateSelector(this)
            }
        },
        failure: function() {
            this.reset();
            if (this.failureDelegateSelector != null) {
                this.failureDelegateSelector(this)
            }
        },
        getState: function() {
            var q = {};
            if (this.successTrigger != null) {
                var i = this.successTrigger.getState();
                ar.setProperty(q, "successTriggerState", i)
            }
            if (this.successTrigger != null) {
                var i1 = this.failureTrigger.getState();
                ar.setProperty(q, "failureTriggerState", i1)
            }
            return q
        },
        setState: function(i) {
            if (i == null) {
                throw new nM("Cannot continue without appropriate state defined")
            }
            var q = i;
            this.successTrigger.setState(ar.getProperty(q, "successTriggerState"));
            this.failureTrigger.setState(ar.getProperty(q, "failureTriggerState"))
        },
        run: function(i2) {
            if (i2 == null) {
                throw new nM("Cannot continue without appropriate delegate defined")
            }
            this.successTrigger.reset();
            this.successTrigger.set_enabled(true);
            var qY;
            qY = (n0.__cast(this.successTrigger.parameters, kA)).activationEvent.activateOnFirstEvent;
            var js;
            js = (n0.__cast(this.failureTrigger.parameters, kA)).activationEvent.activateOnFirstEvent;
            var i;
            i = (n0.__cast(this.successTrigger.parameters, kA)).activationEvent.events;
            var i1;
            i1 = (n0.__cast(this.failureTrigger.parameters, kA)).activationEvent.events;
            var q = i2.executeAction(this.actionType, this.parameters, i, qY, i1, js);
            switch (q[1]) {
                case 0:
                    this.success();
                    break;
                case 1:
                    this.failure();
                    break;
                case 2:
                    break;
                default:
                    throw new nM("Return type unknown")
            }
        },
        __class__: g2
    });
    var j3 = nt["miniclip.promotionsystem.core.model.vo.PopupActionReturnType"] = {
        __ename__: ["miniclip", "promotionsystem", "core", "model", "vo", "PopupActionReturnType"],
        __constructs__: ["SUCCESS", "FAILURE", "DELAYED_RESPONSE", "NUM"]
    };
    j3.SUCCESS = ["SUCCESS", 0];
    j3.SUCCESS.toString = ea;
    j3.SUCCESS.__enum__ = j3;
    j3.FAILURE = ["FAILURE", 1];
    j3.FAILURE.toString = ea;
    j3.FAILURE.__enum__ = j3;
    j3.DELAYED_RESPONSE = ["DELAYED_RESPONSE", 2];
    j3.DELAYED_RESPONSE.toString = ea;
    j3.DELAYED_RESPONSE.__enum__ = j3;
    j3.NUM = ["NUM", 3];
    j3.NUM.toString = ea;
    j3.NUM.__enum__ = j3;
    var qo = function(i, q) {
        this.buttonsConfiguration = [];
        lT.call(this, i, q)
    };
    nt["miniclip.promotionsystem.core.model.vo.PopupCustomData"] = qo;
    qo.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "PopupCustomData"];
    qo.__interfaces__ = [kP];
    qo.__super__ = lT;
    qo.prototype = lP(lT.prototype, {
        timerConfiguration: null,
        textEntries: null,
        imageEntries: null,
        popUpImage: null,
        buttonConfiguration: null,
        buttonsConfiguration: null,
        productsThatKill: null,
        needAllProductsToKill: null,
        doNotShowIfUsingBundleConfiguration: null,
        shouldHaveFrame: null,
        hideVIPBadge: null,
        uniqueId: null,
        shouldHaveExitButton: null,
        allowedStates: null,
        appsThatKill: null,
        hideIfAppInstalledIOS: null,
        hideIfAppInstalledAndroid: null,
        getResourceList: function(q3) {
            if (this.imageEntries != null) {
                var js = 0;
                var q0 = this.imageEntries;
                while (js < q0.length) {
                    var q = q0[js];
                    ++js;
                    q.getResourceList(q3)
                }
            }
            if (this.popUpImage != null) {
                var q1 = new lI();
                q1.isAtlas = false;
                q1.name = this.popUpImage;
                q1.spriteName = this.popUpImage;
                q3.push(q1)
            }
            if (this.buttonConfiguration != null) {
                this.buttonConfiguration.getResourceList(q3)
            }
            if (this.buttonsConfiguration != null) {
                var qZ = 0;
                var i2 = this.buttonsConfiguration;
                while (qZ < i2.length) {
                    var i = i2[qZ];
                    ++qZ;
                    i.getResourceList(q3)
                }
            }
            if (this.timerConfiguration != null) {
                this.timerConfiguration.getResourceList(q3)
            }
            if (this.textEntries != null) {
                var qY = 0;
                var i1 = this.textEntries;
                while (qY < i1.length) {
                    var q2 = i1[qY];
                    ++qY;
                    q2.getResourceList(q3)
                }
            }
            return q3
        },
        __class__: qo
    });
    var kf = function(q, js) {
        this.popUpActive = false;
        this.activatePopUpOnOfferActivation = true;
        this.disableOffer = false;
        this.shouldInstanceOffer = true;
        this.set_currentTimestamp(-1);
        this.delegate = q;
        this._state = cH.NOT_STARTED;
        this.interruptPromotion = false;
        if (js == null) {
            null
        }
        this.popUpActions = new io();
        lT.call(this, q, js);
        this.resolve(true);
        if (!this.shouldInstanceOffer) {
            return
        }
        if (this.offerName == null) {
            throw new nM("Cannot continue with empty promotion name")
        }
        this.popUpDismissedTrigger = new ae(this._promoSystem, {
            triggerName: "PROMO_OFFER_POP_UP_TRIGGER",
            parameters: {
                maxActivations: 1,
                onActivationEvents: ["PROMO_OFFER_POP_UP_DISMISSED_" + this.offerName],
                activationEvent: {
                    events: [
                        ["PROMO_OFFER_POP_UP_DISMISS_" + this.offerName]
                    ]
                }
            }
        });
        this.popUpDismissedTrigger.S_TriggerActivated.connect(oT(this, this.onPopupDismissedTriggerActivated));
        if (this.badgeEndTrigger != null) {
            this.badgeEndTrigger.S_TriggerActivated.connect(oT(this, this.onBadgeEndTriggerActivated))
        }
        if (this.wakeUpTrigger != null) {
            this.wakeUpTrigger.S_TriggerActivated.connect(oT(this, this.onWakeUpTriggerActivated))
        }
        if (this.startTrigger != null) {
            this.startTrigger.S_TriggerActivated.connect(oT(this, this.onStartTriggerActivated))
        }
        if (this.popUpTrigger != null) {
            this.popUpTrigger.S_TriggerActivated.connect(oT(this, this.onPopUpTriggerActivated))
        }
        if (this.killTrigger != null) {
            this.killTrigger.S_TriggerActivated.connect(oT(this, this.onKillTriggerActivated))
        }
        if (this.resetTrigger != null) {
            this.resetTrigger.S_TriggerActivated.connect(oT(this, this.onResetTriggerActivated))
        }
        if (this.interruptTrigger != null) {
            this.interruptTrigger.S_TriggerActivated.connect(oT(this, this.onInterruptTriggerActivated))
        }
        if (this.resumeTrigger != null) {
            this.resumeTrigger.S_TriggerActivated.connect(oT(this, this.onResumeTriggerActivated))
        }
        if (this.popUpAction != null) {
            this.popUpActions.set("", this.popUpAction)
        }
        var i2 = this.popUpActions.keys();
        while (i2.hasNext()) {
            var i = i2.next();
            var i1 = this.popUpActions.get(i);
            i1.successDelegateSelector = oT(this, this.actionSuccess);
            i1.failureDelegateSelector = oT(this, this.actionFailure);
            if (i1.successTrigger != null) {
                i1.successTrigger.S_TriggerActivated.connect(oT(this, this.onSuccessTriggerActivated_Popup))
            }
            if (i1.failureTrigger != null) {
                i1.failureTrigger.S_TriggerActivated.connect(oT(this, this.onFailureTriggerActivated_Popup))
            }
        }
        if (this.startDate != null) {
            this._startTimestamp = iw.getUnixTimestamp(this.startDate)
        } else {
            this._startTimestamp = -1
        }
        if (this.endDate != null) {
            this._endTimestamp = iw.getUnixTimestamp(this.endDate)
        } else {
            this._endTimestamp = -1
        }
        if (this.endOfActivationDate != null) {
            this._endOfActivationTimestamp = iw.getUnixTimestamp(this.endOfActivationDate)
        } else {
            this._endOfActivationTimestamp = -1
        }
    };
    nt["miniclip.promotionsystem.core.model.vo.PromotionOffer"] = kf;
    kf.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "PromotionOffer"];
    kf.__interfaces__ = [kP, ew];
    kf.__super__ = lT;
    kf.prototype = lP(lT.prototype, {
        uniqueId: null,
        offerName: null,
        startDate: null,
        endDate: null,
        endOfActivationDate: null,
        startTrigger: null,
        promoToken: null,
        promoTokenParameter: null,
        wakeUpTrigger: null,
        killTrigger: null,
        resetTrigger: null,
        interruptTrigger: null,
        resumeTrigger: null,
        storeChanges: null,
        badgePriority: null,
        badgeText: null,
        badgeImage: null,
        badgeEndTrigger: null,
        popupImage: null,
        popUpButtonText: null,
        popUpAction: null,
        popUpActions: null,
        popUpActionKillsOffer: null,
        popUpActionDeactivatesOffer: null,
        popUpActionDismissesPopUp: null,
        popUpTrigger: null,
        popUpCustomData: null,
        shouldInstanceOffer: null,
        disableOffer: null,
        beforeBeginNotification: null,
        activeNotification: null,
        beforeEndNotification: null,
        afterStartDateNotification: null,
        beforeEndDateNotification: null,
        badgeConfiguration: null,
        badgeConfigurationWeb: null,
        badgeCycleCooldown: null,
        hidePromotion: null,
        get_hidePromotion: function() {
            return this.hidePromotion || this.get_hidePromotionWeb()
        },
        set_hidePromotion: function(i) {
            this.hidePromotion = i;
            return i
        },
        hidePromotionMobile: null,
        hidePromotionIOS: null,
        hidePromotionAmazon: null,
        hidePromotionAndroid: null,
        hidePromotionWeb: null,
        get_hidePromotionWeb: function() {
            return this.hidePromotionWeb || this.hidePromotionMiniclip || this.hidePromotionFacebook
        },
        set_hidePromotionWeb: function(i) {
            this.hidePromotionWeb = i;
            return i
        },
        hidePromotionMiniclip: null,
        hidePromotionFacebook: null,
        activatePopUpOnOfferActivation: null,
        lastActivationTimestamp: null,
        badgeRemainingTime: null,
        get_badgeRemainingTime: function() {
            if (this._state != cH.ACTIVE || this.currentTimestamp < 0) {
                return -1
            }
            var i = -1;
            if (this.badgeEndTrigger != null) {
                if (n0.__instanceof(this.badgeEndTrigger, fZ)) {
                    i = (n0.__cast(this.badgeEndTrigger, fZ)).get_timeToNextActivation()
                } else {
                    return -1
                }
            }
            if (i < 0 || i > this._endTimestamp && this._endTimestamp != -1) {
                i = this._endTimestamp
            }
            if (i >= 0 && this.currentTimestamp <= i) {
                return i - this.currentTimestamp
            } else {
                return -1
            }
        },
        popUpActive: null,
        popUpDismissedTrigger: null,
        _initialized: null,
        interruptPromotion: null,
        currentTimestamp: null,
        set_currentTimestamp: function(i2) {
            if (this._state == cH.KILLED) {
                return i2
            }
            if (this.get_hidePromotion()) {
                return i2
            }
            if (i2 < 0) {
                return i2
            }
            i2 = Math.floor(i2 * 0.001) * 1000;
            if (this.currentTimestamp < 0) {
                this.currentTimestamp = i2
            } else {
                if (i2 < this.currentTimestamp) {
                    null
                }
            }
            this.currentTimestamp = i2;
            var i = this._state == cH.WAIT_WAKE_UP_TRIGGER || this._state == cH.WAIT_START_TRIGGER;
            var q = this._endTimestamp >= 0 && this.currentTimestamp >= this._endTimestamp;
            var i1 = this._endOfActivationTimestamp > 0 && this.currentTimestamp >= this._endOfActivationTimestamp;
            if (q || i1 && i) {
                this.currentTimestamp = this._endTimestamp;
                if (this._state == cH.ACTIVE) {
                    if (this.storeChanges != null && this.storeChanges.length > 0) {
                        this.delegate.deactivateStoreChanges(this, this.storeChanges)
                    }
                    this.delegate.offerDeactivated(this);
                    if (this.popUpActive) {
                        this.delegate.hideOfferPopUp(this)
                    }
                    this.setPopupActiveState(false)
                }
                this.setOfferState(cH.KILLED, i2);
                return i2
            }
            this.processTime(i2);
            return i2
        },
        _startTimestamp: null,
        _endTimestamp: null,
        _endOfActivationTimestamp: null,
        _state: null,
        offerState: null,
        get_offerState: function() {
            return this._state
        },
        delegate: null,
        handleSpecialTypes: function(i1, js) {
            if (lT.prototype.handleSpecialTypes.call(this, i1, js)) {
                return true
            }
            if (i1 == "popUpActions") {
                var i = ar.fields(js);
                var qY = 0;
                while (qY < i.length) {
                    var i2 = i[qY];
                    ++qY;
                    if (i2 != "dataAccess") {
                        this.popUpActions.set(i2, new g2(this._promoSystem, this.offerName, i2, ar.getProperty(js, i2)))
                    } else {
                        null
                    }
                }
                return true
            } else {
                if (i1 == "popUpAction") {
                    this.popUpActions.set("", new g2(this._promoSystem, this.offerName, "popUpAction", js));
                    return true
                }
            }
            if (i1 == "badgeEndTrigger" || i1 == "wakeUpTrigger" || i1 == "startTrigger" || i1 == "popUpTrigger" || i1 == "killTrigger" || i1 == "resetTrigger" || i1 == "interruptTrigger" || i1 == "resumeTrigger") {
                var q = jc.createTrigger(this._promoSystem, js);
                this[i1] = q;
                return true
            }
            return false
        },
        isOfferActive: function() {
            return !this.get_hidePromotion() && !this.interruptPromotion && this.get_offerState() == cH.ACTIVE
        },
        processTime: function(q) {
            try {
                while (true) {
                    var i = this._state;
                    if (this._state != cH.NOT_STARTED && this._state != cH.KILLED) {
                        if (this.killTrigger != null) {
                            this.killTrigger.set_currentTimestamp(q)
                        }
                        if (this.resetTrigger != null) {
                            this.resetTrigger.set_currentTimestamp(q)
                        }
                        if (this.interruptTrigger != null) {
                            this.interruptTrigger.set_currentTimestamp(q)
                        }
                        if (this.resumeTrigger != null) {
                            this.resumeTrigger.set_currentTimestamp(q)
                        }
                    }
                    var i2 = this._state;
                    switch (i2[1]) {
                        case 0:
                            if (q >= this._startTimestamp) {
                                this.setOfferState(cH.WAIT_START_TRIGGER, this._startTimestamp >= 0 ? this._startTimestamp : q)
                            }
                            break;
                        case 2:
                            if (this.startTrigger == null) {
                                throw "__break__"
                            }
                            if (this.startTrigger != null) {
                                this.startTrigger.set_currentTimestamp(q)
                            }
                            break;
                        case 3:
                            if (this.popUpTrigger != null) {
                                this.popUpTrigger.set_currentTimestamp(q)
                            }
                            if (this.badgeEndTrigger != null) {
                                this.badgeEndTrigger.set_currentTimestamp(q)
                            }
                            break;
                        case 1:
                            if (this.wakeUpTrigger == null) {
                                throw "__break__"
                            }
                            if (this.wakeUpTrigger != null) {
                                this.wakeUpTrigger.set_currentTimestamp(q)
                            }
                            break;
                        case 4:
                            break
                    }
                    if (i == this._state) {
                        throw "__break__"
                    }
                }
            } catch (i1) {
                if (i1 != "__break__") {
                    throw i1
                }
            }
        },
        updateDisableOffer: function() {
            this.resolve(false)
        },
        getOfferState: function() {
            return this._state
        },
        setOfferState: function(q, i) {
            if (i == null) {
                i = -1
            }
            if (this.get_hidePromotion()) {
                return
            }
            if (this._state == q) {
                return
            }
            switch (q[1]) {
                case 0:
                    this.set_offer_state_not_started(i);
                    break;
                case 2:
                    this.set_offer_wait_start_trigger(i);
                    break;
                case 1:
                    this.set_offer_wait_wake_up_trigger(i);
                    break;
                case 3:
                    this.set_offer_state_active(i);
                    break;
                case 4:
                    this.set_offer_state_killed(i);
                    break
            }
        },
        getResourceList: function(i) {
            if (!this.get_hidePromotion()) {
                if (this.popUpCustomData != null) {
                    this.popUpCustomData.getResourceList(i)
                }
                if (this.badgeConfigurationWeb != null) {
                    this.badgeConfigurationWeb.getResourceList(i)
                }
                if (this.badgeConfiguration != null) {
                    this.badgeConfiguration.getResourceList(i)
                }
            }
            return i
        },
        set_offer_state_not_started: function(i1) {
            this._state = cH.NOT_STARTED;
            this.set_currentTimestamp(-1);
            this.popUpActive = false;
            if (this.startTrigger != null) {
                this.startTrigger.reset();
                this.startTrigger.set_enabled(false)
            }
            if (this.wakeUpTrigger != null) {
                this.wakeUpTrigger.reset();
                this.wakeUpTrigger.set_enabled(false)
            }
            if (this.killTrigger != null) {
                this.killTrigger.reset();
                this.killTrigger.set_enabled(false)
            }
            if (this.resetTrigger != null) {
                this.resetTrigger.reset();
                this.resetTrigger.set_enabled(false)
            }
            if (this.badgeEndTrigger != null) {
                this.badgeEndTrigger.reset();
                this.badgeEndTrigger.set_enabled(false)
            }
            if (this.interruptTrigger != null) {
                this.interruptTrigger.reset();
                this.interruptTrigger.set_enabled(false)
            }
            if (this.resumeTrigger != null) {
                this.resumeTrigger.reset();
                this.resumeTrigger.set_enabled(false)
            }
            if (this.popUpTrigger != null) {
                this.popUpTrigger.reset();
                this.popUpTrigger.set_enabled(false)
            }
            if (this.popUpDismissedTrigger != null) {
                this.popUpDismissedTrigger.reset();
                this.popUpDismissedTrigger.set_enabled(false)
            }
            if (this.popUpActions != null) {
                var q = this.popUpActions.keys();
                while (q.hasNext()) {
                    var i = q.next();
                    this.popUpActions.get(i).reset()
                }
            }
        },
        set_offer_wait_start_trigger: function(q) {
            var i = this._state;
            this._state = cH.WAIT_START_TRIGGER;
            if (i == cH.NOT_STARTED) {
                if (this.killTrigger != null) {
                    this.killTrigger.set_enabled(true);
                    this.killTrigger.set_currentTimestamp(q)
                }
                if (this.resetTrigger != null) {
                    this.resetTrigger.set_enabled(true);
                    this.resetTrigger.set_currentTimestamp(q)
                }
            }
            if (this.interruptTrigger != null) {
                this.interruptTrigger.set_enabled(true);
                this.interruptPromotion = false;
                this.interruptTrigger.set_currentTimestamp(q)
            }
            if (this.startTrigger == null) {
                if (this._endOfActivationTimestamp > 0 && q >= this._endOfActivationTimestamp) {
                    this.kill()
                } else {
                    this.setOfferState(cH.ACTIVE, q)
                }
                return
            }
            this.startTrigger.set_enabled(true);
            this.startTrigger.set_currentTimestamp(q)
        },
        set_offer_state_active: function(q) {
            var i = this._state;
            this._state = cH.ACTIVE;
            this.lastActivationTimestamp = q;
            if (this.delegate != null) {
                if (this.storeChanges != null && this.storeChanges.length > 0) {
                    this.delegate.activateStoreChanges(this, this.storeChanges)
                }
                this.delegate.offerActivated(this);
                if (this.activatePopUpOnOfferActivation) {
                    this.delegate.showOfferPopUp(this, true)
                }
            }
            if (this.activatePopUpOnOfferActivation) {
                this.popUpActive = true;
                this.popUpDismissedTrigger.set_enabled(true)
            } else {
                if (this.popUpTrigger != null) {
                    this.popUpTrigger.set_enabled(true);
                    this.popUpTrigger.set_currentTimestamp(q)
                }
            }
            if (this.badgeEndTrigger != null) {
                this.badgeEndTrigger.set_enabled(true);
                this.badgeEndTrigger.set_currentTimestamp(q)
            }
        },
        set_offer_wait_wake_up_trigger: function(i) {
            this._state = cH.WAIT_WAKE_UP_TRIGGER;
            if (this.wakeUpTrigger == null) {
                this.setOfferState(cH.WAIT_START_TRIGGER, i);
                return
            }
            this.wakeUpTrigger.set_enabled(true);
            this.wakeUpTrigger.set_currentTimestamp(i);
            if (this.interruptTrigger != null) {
                this.interruptTrigger.set_enabled(true);
                this.interruptTrigger.set_currentTimestamp(i);
                if (this.resumeTrigger != null) {
                    this.resumeTrigger.set_enabled(false)
                }
                this.interruptPromotion = false
            }
        },
        set_offer_state_killed: function(i2) {
            var i = this._state;
            this._state = cH.KILLED;
            if (this.startTrigger != null) {
                this.startTrigger.set_enabled(false)
            }
            if (this.wakeUpTrigger != null) {
                this.wakeUpTrigger.set_enabled(false)
            }
            if (this.killTrigger != null) {
                this.killTrigger.set_enabled(false)
            }
            if (this.resetTrigger != null) {
                this.resetTrigger.set_enabled(false)
            }
            if (this.interruptTrigger != null) {
                this.interruptTrigger.set_enabled(false)
            }
            if (this.resumeTrigger != null) {
                this.resumeTrigger.set_enabled(false)
            }
            if (this.badgeEndTrigger != null) {
                this.badgeEndTrigger.set_enabled(false)
            }
            if (this.popUpTrigger != null) {
                this.popUpTrigger.set_enabled(false)
            }
            if (this.popUpDismissedTrigger != null) {
                this.popUpDismissedTrigger.set_enabled(false)
            }
            if (this.popUpActions != null) {
                var i1 = this.popUpActions.keys();
                while (i1.hasNext()) {
                    var q = i1.next();
                    this.popUpActions.get(q).reset()
                }
            }
        },
        setPopupActiveState: function(i) {
            if (this.popUpActive && !i) {
                var q = this.getPopupDismissedEvent();
                if (q != null) {
                    this._promoSystem.postEvent(q)
                }
            } else {
                if (!this.popUpActive && i) {
                    if (this.popUpTrigger != null) {
                        this.popUpTrigger.set_enabled(!i)
                    }
                    this.popUpDismissedTrigger.set_enabled(i);
                    this.popUpActive = i
                }
            }
        },
        isOfferCloseToBegin: function() {
            if (this.get_hidePromotion() || this.interruptTrigger != null) {
                return false
            }
            if (this._state == cH.ACTIVE || this._state == cH.KILLED) {
                return false
            }
            if (this._state == cH.NOT_STARTED) {
                if (this.startTrigger == null) {
                    return this._startTimestamp - this.currentTimestamp <= this.beforeBeginNotification.deltaTime
                } else {
                    if (m6.isTimeTrigger(this.startTrigger)) {
                        var i = (n0.__cast(this.startTrigger, fZ)).get_timeToNextActivation() - this.currentTimestamp;
                        return i <= this.beforeBeginNotification.deltaTime
                    } else {
                        return false
                    }
                }
            }
            var q;
            if (this._state == cH.WAIT_START_TRIGGER) {
                if (m6.isTimeTrigger(this.startTrigger)) {
                    q = (n0.__cast(this.startTrigger, fZ)).get_timeToNextActivation()
                } else {
                    return false
                }
                if (this._endOfActivationTimestamp > 0 && q >= this._endOfActivationTimestamp) {
                    return false
                }
                return q - this.currentTimestamp <= this.beforeBeginNotification.deltaTime
            }
            if (this._state == cH.WAIT_WAKE_UP_TRIGGER) {
                if (m6.isTimeTrigger(this.wakeUpTrigger)) {
                    q = (n0.__cast(this.wakeUpTrigger, fZ)).get_timeToNextActivation()
                } else {
                    return false
                }
                if (this._endOfActivationTimestamp > 0 && q >= this._endOfActivationTimestamp) {
                    return false
                }
                return q - this.currentTimestamp <= this.beforeBeginNotification.deltaTime
            }
            return false
        },
        isOfferCloseToEnd: function() {
            if (this.get_hidePromotion() || this.interruptTrigger != null) {
                return false
            }
            if (this._state == cH.NOT_STARTED || this._state == cH.WAIT_START_TRIGGER || this._state == cH.KILLED || this._state == cH.WAIT_WAKE_UP_TRIGGER) {
                return false
            }
            if (this.get_badgeRemainingTime() != -1 && this.beforeEndNotification.deltaTime != -1) {
                return this.get_badgeRemainingTime() <= this.beforeEndNotification.deltaTime
            }
            return false
        },
        getDeltaToDisplayCloseToBeginNotification: function() {
            if (this.get_hidePromotion()) {
                return -1
            }
            if (this._state == cH.ACTIVE || this._state == cH.KILLED) {
                return -1
            }
            if (this.beforeBeginNotification.deltaTime == -1) {
                return -1
            }
            if (this._state == cH.NOT_STARTED) {
                if (this.startTrigger == null) {
                    var i1 = this._startTimestamp - this.currentTimestamp;
                    if (i1 > this.beforeBeginNotification.deltaTime) {
                        return i1 - this.beforeBeginNotification.deltaTime
                    }
                    return -1
                } else {
                    if (n0.__instanceof(this.startTrigger, hQ)) {
                        var q;
                        q = this._startTimestamp + (n0.__cast(this.startTrigger, hQ)).deltaTime - this.currentTimestamp;
                        if (q > this.beforeBeginNotification.deltaTime) {
                            return q - this.beforeBeginNotification.deltaTime
                        }
                        return -1
                    } else {
                        if (m6.isTimeTrigger(this.startTrigger)) {
                            var i = (n0.__cast(this.startTrigger, fZ)).get_timeToNextActivation() - this.currentTimestamp;
                            if (i > this.beforeBeginNotification.deltaTime) {
                                return i - this.beforeBeginNotification.deltaTime
                            }
                            return -1
                        } else {
                            return -1
                        }
                    }
                }
            }
            var i2;
            if (this._state == cH.WAIT_START_TRIGGER) {
                if (m6.isTimeTrigger(this.startTrigger)) {
                    i2 = (n0.__cast(this.startTrigger, fZ)).get_timeToNextActivation()
                } else {
                    return -1
                }
                if (this._endOfActivationTimestamp > 0 && i2 >= this._endOfActivationTimestamp) {
                    return -1
                }
                var qY = i2 - this.currentTimestamp;
                if (qY > this.beforeBeginNotification.deltaTime) {
                    return qY - this.beforeBeginNotification.deltaTime
                }
                return -1
            }
            if (this._state == cH.WAIT_WAKE_UP_TRIGGER) {
                if (m6.isTimeTrigger(this.wakeUpTrigger)) {
                    i2 = (n0.__cast(this.wakeUpTrigger, fZ)).get_timeToNextActivation()
                } else {
                    return -1
                }
                if (this._endOfActivationTimestamp > 0 && i2 >= this._endOfActivationTimestamp) {
                    return -1
                }
                var js = i2 - this.currentTimestamp;
                if (js > this.beforeBeginNotification.deltaTime) {
                    return js - this.beforeBeginNotification.deltaTime
                }
                return -1
            }
            return -1
        },
        getDeltaToDisplayActiveNotification: function() {
            if (this.get_hidePromotion()) {
                return -1
            }
            if (this._state == cH.KILLED) {
                return -1
            }
            if (this.activeNotification.deltaTime == -1) {
                return -1
            }
            if (this._state == cH.NOT_STARTED) {
                if (this.startTrigger == null) {
                    return this._startTimestamp + this.activeNotification.deltaTime - this.currentTimestamp
                } else {
                    if (n0.__instanceof(this.startTrigger, hQ)) {
                        var i1;
                        i1 = this._startTimestamp + (n0.__cast(this.startTrigger, hQ)).deltaTime - this.currentTimestamp;
                        return i1 + this.beforeBeginNotification.deltaTime
                    } else {
                        if (m6.isTimeTrigger(this.startTrigger)) {
                            var q = (n0.__cast(this.startTrigger, fZ)).get_timeToNextActivation() - this.currentTimestamp;
                            return q + this.activeNotification.deltaTime
                        } else {
                            return -1
                        }
                    }
                }
            }
            if (this._state == cH.WAIT_START_TRIGGER) {
                if (m6.isTimeTrigger(this.startTrigger)) {
                    var js = (n0.__cast(this.startTrigger, fZ)).get_timeToNextActivation();
                    if (this._endOfActivationTimestamp > 0 && js >= this._endOfActivationTimestamp) {
                        return -1
                    }
                    var i = js - this.currentTimestamp;
                    return i + this.activeNotification.deltaTime
                } else {
                    return -1
                }
            }
            if (this._state == cH.WAIT_WAKE_UP_TRIGGER) {
                if (m6.isTimeTrigger(this.startTrigger)) {
                    var i2 = (n0.__cast(this.wakeUpTrigger, fZ)).get_timeToNextActivation();
                    if (this._endOfActivationTimestamp > 0 && i2 >= this._endOfActivationTimestamp) {
                        return -1
                    }
                    var qZ = i2 - this.currentTimestamp;
                    return qZ + this.activeNotification.deltaTime
                } else {
                    return -1
                }
            }
            if (this._state == cH.ACTIVE) {
                var qY = this.lastActivationTimestamp + this.activeNotification.deltaTime;
                return qY - this.currentTimestamp
            }
            return -1
        },
        getDeltaToDisplayCloseToEndNotification: function() {
            if (this.get_hidePromotion()) {
                return -1
            }
            if (this.beforeEndNotification.deltaTime == -1) {
                return -1
            }
            if (this._state == cH.NOT_STARTED || this._state == cH.WAIT_START_TRIGGER || this._state == cH.KILLED || this._state == cH.WAIT_WAKE_UP_TRIGGER) {
                return -1
            }
            if (this.get_badgeRemainingTime() != -1 && this.beforeEndNotification.deltaTime != -1) {
                return this.get_badgeRemainingTime() - this.beforeEndNotification.deltaTime
            }
            return -1
        },
        getDeltaToDisplayAfterStartDateNotification: function() {
            if (this.get_hidePromotion()) {
                return -1
            }
            if (this.afterStartDateNotification.deltaTime == -1) {
                return -1
            }
            if (this._state == cH.KILLED || this._state == cH.WAIT_WAKE_UP_TRIGGER || this._state == cH.ACTIVE) {
                return -1
            }
            if (this.lastActivationTimestamp != -1) {
                return -1
            }
            if (this.currentTimestamp >= this._endTimestamp) {
                return -1
            }
            var i = this._startTimestamp + this.afterStartDateNotification.deltaTime;
            if ((this._state == cH.NOT_STARTED || this._state == cH.WAIT_START_TRIGGER) && i >= this._endTimestamp) {
                return -1
            }
            if (this._endTimestamp > 0 && i >= this._endTimestamp) {
                return -1
            }
            return i - this.currentTimestamp
        },
        getDeltaToDisplayBeforeEndDateNotification: function() {
            if (this.get_hidePromotion()) {
                return -1
            }
            if (this.beforeEndDateNotification.deltaTime == -1) {
                return -1
            }
            if (this._state == cH.KILLED) {
                return -1
            }
            if (this.currentTimestamp >= this._endTimestamp) {
                return -1
            }
            if (this._endTimestamp - this.beforeEndDateNotification.deltaTime < this._startTimestamp) {
                return -1
            }
            var q = this._endTimestamp - this.beforeEndDateNotification.deltaTime - this.currentTimestamp;
            var i = this._state == cH.WAIT_WAKE_UP_TRIGGER || this._state == cH.WAIT_START_TRIGGER;
            if (this._endOfActivationTimestamp > 0 && i && q >= this._endOfActivationTimestamp) {
                return -1
            }
            return q
        },
        isPopUpActive: function() {
            return this.popUpActive
        },
        actionSuccess: function(i2) {
            if (this._state != cH.ACTIVE) {
                return
            }
            if (this.get_hidePromotion()) {
                return
            }
            var js = this.popUpActionKillsOffer || i2.popUpActionKillsOffer;
            var i = this.popUpActionDeactivatesOffer || i2.popUpActionDeactivatesOffer;
            var q = this.popUpActionDismissesPopUp || i2.popUpActionDismissesPopup;
            if (q || i || js) {
                if (!i && !js) {
                    this._promoSystem.postEvent(this.getPopupDismissedEvent())
                } else {
                    if (this.delegate != null && this.popUpActive) {
                        this.delegate.hideOfferPopUp(this)
                    }
                    if (this.popUpActive) {
                        this.setPopupActiveState(false)
                    }
                }
            } else {
                this._promoSystem.postEvent("PROMO_OFFER_ACTION_SUCCESS_" + this.offerName);
                return
            }
            if (i || js) {
                if (this.delegate != null) {
                    if (this.storeChanges != null && this.storeChanges.length > 0) {
                        this.delegate.deactivateStoreChanges(this, this.storeChanges)
                    }
                    this.delegate.offerDeactivated(this)
                }
            }
            var i1 = 0;
            if (i) {
                if (this.badgeEndTrigger != null) {
                    this.badgeEndTrigger.reset();
                    this.badgeEndTrigger.set_enabled(false)
                }
                if (this.popUpTrigger != null) {
                    this.popUpTrigger.reset();
                    this.popUpTrigger.set_enabled(false)
                }
                this.popUpDismissedTrigger.reset();
                this.popUpDismissedTrigger.set_enabled(false);
                if (this._state == cH.ACTIVE) {
                    this.setOfferState(cH.WAIT_WAKE_UP_TRIGGER, i1)
                }
            } else {
                if (js) {
                    this.setOfferState(cH.KILLED, i1)
                }
            }
            this._promoSystem.postEvent("PROMO_OFFER_ACTION_SUCCESS_" + this.offerName)
        },
        actionFailure: function(i) {
            if (this.get_hidePromotion()) {
                return
            }
            this._promoSystem.postEvent("PROMO_OFFER_ACITON_FAILURE_" + this.offerName);
            null
        },
        getState: function() {
            var qY;
            if (this.startTrigger != null) {
                qY = this.startTrigger.getState()
            } else {
                qY = null
            }
            var q0;
            if (this.wakeUpTrigger != null) {
                q0 = this.wakeUpTrigger.getState()
            } else {
                q0 = null
            }
            var i1;
            if (this.badgeEndTrigger != null) {
                i1 = this.badgeEndTrigger.getState()
            } else {
                i1 = null
            }
            var i2;
            if (this.popUpTrigger != null) {
                i2 = this.popUpTrigger.getState()
            } else {
                i2 = null
            }
            var q1;
            if (this.popUpDismissedTrigger != null) {
                q1 = this.popUpDismissedTrigger.getState()
            } else {
                q1 = null
            }
            var q6;
            if (this.killTrigger != null) {
                q6 = this.killTrigger.getState()
            } else {
                q6 = null
            }
            var qZ;
            if (this.resetTrigger != null) {
                qZ = this.resetTrigger.getState()
            } else {
                qZ = null
            }
            var q3;
            if (this.interruptTrigger != null) {
                q3 = this.interruptTrigger.getState()
            } else {
                q3 = null
            }
            var q5;
            if (this.resetTrigger != null) {
                q5 = this.resetTrigger.getState()
            } else {
                q5 = null
            }
            var q2 = {};
            if (this.popUpActions != null) {
                var q7 = this.popUpActions.keys();
                while (q7.hasNext()) {
                    var q4 = q7.next();
                    var i = this.popUpActions.get(q4);
                    try {
                        ar.setProperty(q2, q4, i.getState())
                    } catch (q) {
                        lF.lastException = q;
                        if (q instanceof nM) {
                            q = q.val
                        }
                        null
                    }
                }
            }
            var js = {};
            if (qY != null) {
                ar.setProperty(js, "startTriggerState", qY)
            }
            if (q0 != null) {
                ar.setProperty(js, "wakeupTriggerState", q0)
            }
            if (i1 != null) {
                ar.setProperty(js, "badgeEndTriggerState", i1)
            }
            if (i2 != null) {
                ar.setProperty(js, "popUpTriggerState", i2)
            }
            if (q1 != null) {
                ar.setProperty(js, "popUpDismissedTriggerState", q1)
            }
            if (q6 != null) {
                ar.setProperty(js, "killTriggerState", q6)
            }
            if (qZ != null) {
                ar.setProperty(js, "resetTriggerState", qZ)
            }
            if (q3 != null) {
                ar.setProperty(js, "interruptTriggerState", q3)
            }
            if (q5 != null) {
                ar.setProperty(js, "resumeTriggerState", q5)
            }
            if (q2 != null) {
                ar.setProperty(js, "promotionActionsState", q2)
            }
            ar.setProperty(js, "currentTimestampState", this.currentTimestamp);
            ar.setProperty(js, "lastActivation", this.lastActivationTimestamp);
            ar.setProperty(js, "promotionOfferState", this._state[1]);
            ar.setProperty(js, "popupActiveState", this.isPopUpActive());
            ar.setProperty(js, "interrumptPromotionState", this.interruptPromotion);
            return js
        },
        setState: function(i1) {
            if (i1 == null) {
                throw new nM("Cannot continue without appropriate state defined")
            }
            var rb = i1;
            var i2 = ar.getProperty(rb, "startTriggerState");
            var q5 = ar.getProperty(rb, "wakeupTriggerState");
            var js = ar.getProperty(rb, "badgeEndTriggerState");
            var q0 = ar.getProperty(rb, "popUpTriggerState");
            var q8 = ar.getProperty(rb, "popUpDismissedTriggerState");
            var q1 = ar.getProperty(rb, "killTriggerState");
            var rc = ar.getProperty(rb, "resetTriggerState");
            var qY = ar.getProperty(rb, "interruptTriggerState");
            var q4 = ar.getProperty(rb, "resumeTriggerState");
            var re = ar.getProperty(rb, "promotionActionsState");
            if (i2 != null && this.startTrigger != null) {
                this.startTrigger.setState(i2)
            }
            if (q5 != null && this.wakeUpTrigger != null) {
                this.wakeUpTrigger.setState(q5)
            }
            if (js != null && this.badgeEndTrigger != null) {
                this.badgeEndTrigger.setState(js)
            }
            if (q0 != null && this.popUpTrigger != null) {
                this.popUpTrigger.setState(q0)
            }
            if (q8 != null && this.popUpDismissedTrigger != null) {
                this.popUpDismissedTrigger.setState(q8)
            }
            if (q1 != null && this.killTrigger != null) {
                this.killTrigger.setState(q1)
            }
            if (rc != null && this.resetTrigger != null) {
                this.resetTrigger.setState(rc)
            }
            if (qY != null && this.interruptTrigger != null) {
                this.interruptTrigger.setState(qY)
            }
            if (q4 != null && this.resetTrigger != null) {
                this.resetTrigger.setState(q4)
            }
            if (q5 != null && this.wakeUpTrigger != null) {
                this.wakeUpTrigger.setState(q5)
            }
            if (re != null && this.popUpActions != null) {
                var ra = ar.fields(re);
                var i = 0;
                while (i < ra.length) {
                    var rd = ra[i];
                    ++i;
                    var q3 = this.popUpActions.get(rd);
                    var q9 = ar.field(re, rd);
                    q3.setState(q9)
                }
            }
            var q7 = ar.getProperty(rb, "currentTimestampState");
            var q6 = ar.getProperty(rb, "lastActivation");
            var q = ar.getProperty(rb, "popupActiveState");
            var qZ = ar.getProperty(rb, "interrumptPromotionState");
            var q2 = ar.getProperty(rb, "promotionOfferState");
            this._state = kX.createEnumIndex(cH, q2, null);
            this.lastActivationTimestamp = q6;
            this.popUpActive = q;
            this.interruptPromotion = qZ;
            this.set_currentTimestamp(q7)
        },
        getPopupDismissedEvent: function() {
            var i = this.popUpDismissedTrigger.getActivationEvents();
            if (i.length > 0) {
                return i[0]
            }
            return ""
        },
        getKillEvent: function() {
            return null
        },
        onStartTriggerActivated: function(i) {
            if (this.startTrigger == null) {
                return
            }
            if (this.get_hidePromotion()) {
                return
            }
            if (this._state != cH.WAIT_START_TRIGGER) {
                return
            }
            if (this._endOfActivationTimestamp > 0 && this.currentTimestamp >= this._endOfActivationTimestamp) {
                this.kill();
                return
            }
            var q;
            if (m6.isTimeTrigger(this.startTrigger)) {
                q = (n0.__cast(this.startTrigger, fZ)).lastActivationTimestamp
            } else {
                q = this.currentTimestamp
            }
            this.startTrigger.reset(true);
            this.startTrigger.set_enabled(false);
            this.setOfferState(cH.ACTIVE, q)
        },
        onPopUpTriggerActivated: function(i) {
            if (this.popUpTrigger == null) {
                return
            }
            if (this.get_hidePromotion()) {
                return
            }
            if (this._state != cH.ACTIVE) {
                return
            }
            if (this.popUpActive) {
                return
            }
            this.popUpActive = true;
            var q;
            if (m6.isTimeTrigger(this.popUpTrigger)) {
                q = (n0.__cast(this.popUpTrigger, fZ)).lastActivationTimestamp
            } else {
                q = this.currentTimestamp
            }
            this.popUpTrigger.reset(true);
            this.popUpTrigger.set_enabled(false);
            this.popUpDismissedTrigger.set_enabled(true);
            if (this.delegate != null) {
                this.delegate.showOfferPopUp(this, false)
            }
        },
        onPopupDismissedTriggerActivated: function(i) {
            if (this.popUpDismissedTrigger == null || this._state != cH.ACTIVE) {
                return
            }
            if (this.get_hidePromotion()) {
                return
            }
            if (this._state != cH.ACTIVE) {
                return
            }
            if (!this.popUpActive) {
                return
            }
            this.popUpActive = false;
            var q = this.currentTimestamp;
            if (this.delegate != null) {
                this.delegate.hideOfferPopUp(this)
            }
            this.popUpDismissedTrigger.reset();
            this.popUpDismissedTrigger.set_enabled(false);
            if (this.popUpTrigger != null) {
                if (this.badgeEndTrigger == null && this.popUpTrigger.reachedMaxActivations()) {
                    if (this.delegate != null) {
                        if (this.storeChanges != null && this.storeChanges.length > 0) {
                            this.delegate.deactivateStoreChanges(this, this.storeChanges)
                        }
                        this.delegate.offerDeactivated(this)
                    }
                    this.setOfferState(cH.WAIT_WAKE_UP_TRIGGER, q)
                } else {
                    this.popUpTrigger.set_enabled(true);
                    this.popUpTrigger.set_currentTimestamp(q)
                }
            }
        },
        onBadgeEndTriggerActivated: function(i) {
            if (this.badgeEndTrigger == null) {
                return
            }
            if (this.get_hidePromotion()) {
                return
            }
            if (this._state != cH.ACTIVE) {
                return
            }
            var q;
            if (m6.isTimeTrigger(this.badgeEndTrigger)) {
                q = (n0.__cast(this.badgeEndTrigger, fZ)).lastActivationTimestamp
            } else {
                q = this.currentTimestamp
            }
            if (this.delegate != null) {
                if (this.storeChanges != null && this.storeChanges.length > 0) {
                    this.delegate.deactivateStoreChanges(this, this.storeChanges)
                }
                if (this.popUpActive) {
                    this.setPopupActiveState(false)
                }
                this.delegate.offerDeactivated(this)
            }
            this.badgeEndTrigger.reset(true);
            this.badgeEndTrigger.set_enabled(false);
            if (this.popUpTrigger != null) {
                this.popUpTrigger.reset();
                this.popUpTrigger.set_enabled(false)
            }
            this.popUpDismissedTrigger.reset();
            this.popUpDismissedTrigger.set_enabled(false);
            if (this.popUpActive) {
                this.setPopupActiveState(false)
            }
            if (this.interruptTrigger != null && this.resumeTrigger != null) {
                this.interruptPromotion = false
            }
            this.setOfferState(cH.WAIT_WAKE_UP_TRIGGER, q)
        },
        onWakeUpTriggerActivated: function(i) {
            if (this.wakeUpTrigger == null) {
                return
            }
            if (this.get_hidePromotion()) {
                return
            }
            if (this._state != cH.WAIT_WAKE_UP_TRIGGER) {
                return
            }
            var q;
            if (m6.isTimeTrigger(this.wakeUpTrigger)) {
                q = (n0.__cast(this.wakeUpTrigger, fZ)).lastActivationTimestamp
            } else {
                q = this.currentTimestamp
            }
            this.wakeUpTrigger.reset(true);
            this.wakeUpTrigger.set_enabled(false);
            this.setOfferState(cH.WAIT_START_TRIGGER, q)
        },
        onKillTriggerActivated: function(i) {
            if (this.killTrigger == null) {
                return
            }
            if (this.get_hidePromotion()) {
                return
            }
            if (this._state == cH.NOT_STARTED || this._state == cH.KILLED) {
                return
            }
            var q;
            if (m6.isTimeTrigger(this.killTrigger)) {
                q = (n0.__cast(this.killTrigger, fZ)).lastActivationTimestamp
            } else {
                q = this.currentTimestamp
            }
            this.kill()
        },
        onResetTriggerActivated: function(i) {
            if (this.resetTrigger == null) {
                return
            }
            if (this.get_hidePromotion()) {
                return
            }
            if (this._state == cH.NOT_STARTED || this._state == cH.KILLED) {
                return
            }
            var q;
            if (m6.isTimeTrigger(this.resetTrigger)) {
                q = (n0.__cast(this.resetTrigger, fZ)).lastActivationTimestamp
            } else {
                q = this.currentTimestamp
            }
            if (this.delegate != null) {
                if (this._state == cH.ACTIVE) {
                    if (this.storeChanges != null && this.storeChanges.length > 0) {
                        this.delegate.deactivateStoreChanges(this, this.storeChanges)
                    }
                    this.delegate.offerDeactivated(this)
                }
                if (this.popUpActive) {
                    this.delegate.hideOfferPopUp(this)
                }
                this.setPopupActiveState(false)
            }
            this.setOfferState(cH.NOT_STARTED, q)
        },
        onInterruptTriggerActivated: function(i) {
            if (this.interruptTrigger == null) {
                return
            }
            this.interruptPromotion = true;
            if (this.delegate != null) {
                this.delegate.offerDeactivated(this);
                if (this.storeChanges != null && this.storeChanges.length > 0) {
                    this.delegate.deactivateStoreChanges(this, this.storeChanges)
                }
            }
            if (this.resumeTrigger != null) {
                this.resumeTrigger.set_enabled(true);
                if (m6.isTimeTrigger(this.interruptTrigger)) {
                    this.resumeTrigger.set_currentTimestamp((n0.__cast(this.interruptTrigger, fZ)).lastActivationTimestamp)
                }
                this.interruptTrigger.set_enabled(false)
            }
        },
        onResumeTriggerActivated: function(i) {
            if (this.resumeTrigger == null) {
                return
            }
            if (!this.interruptPromotion) {
                return
            }
            this.interruptPromotion = false;
            if (this.delegate != null && !this.get_hidePromotion() && this._state == cH.ACTIVE) {
                this.delegate.offerDeactivated(this);
                if (this.storeChanges != null && this.storeChanges.length > 0) {
                    this.delegate.activateStoreChanges(this, this.storeChanges)
                }
            }
            this.interruptTrigger.set_enabled(true)
        },
        onSuccessTriggerActivated_Popup: function(i) {
            if (this.popUpActionKillsOffer == true) {
                this.kill()
            } else {
                if (this.popUpActionDeactivatesOffer == true) {
                    this.onBadgeEndTriggerActivated()
                }
            }
        },
        onFailureTriggerActivated_Popup: function(i) {
            null
        },
        kill: function() {
            if (this.delegate != null) {
                if (this._state == cH.ACTIVE) {
                    if (this.storeChanges != null && this.storeChanges.length > 0) {
                        this.delegate.deactivateStoreChanges(this, this.storeChanges)
                    }
                    this.delegate.offerDeactivated(this)
                }
                if (this.popUpActive) {
                    this.delegate.hideOfferPopUp(this);
                    this.setPopupActiveState(false)
                }
            }
            this.setOfferState(cH.KILLED, this.currentTimestamp)
        },
        toString: function() {
            return "" + this.offerName + " - start: " + kr.string(this.startDate) + "   end: " + kr.string(this.endDate)
        },
        reset: function() {
            if (this.get_hidePromotion()) {
                return
            }
            if (this._state == cH.ACTIVE) {
                if (!m6.isCollectionEmpty(this.storeChanges)) {
                    this.delegate.deactivateStoreChanges(this, this.storeChanges)
                }
                this.delegate.offerDeactivated(this);
                if (this.popUpActive) {
                    this.delegate.hideOfferPopUp(this)
                }
                this.popUpActive = false
            }
            this.setOfferState(cH.NOT_STARTED)
        },
        __class__: kf,
        __properties__: {
            get_offerState: "get_offerState",
            set_currentTimestamp: "set_currentTimestamp",
            get_badgeRemainingTime: "get_badgeRemainingTime",
            set_hidePromotionWeb: "set_hidePromotionWeb",
            get_hidePromotionWeb: "get_hidePromotionWeb",
            set_hidePromotion: "set_hidePromotion",
            get_hidePromotion: "get_hidePromotion"
        }
    });
    var p1 = function() {};
    nt["miniclip.promotionsystem.core.model.vo.PromotionPopupInfo"] = p1;
    p1.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "PromotionPopupInfo"];
    p1.__interfaces__ = [g3];
    p1.prototype = {
        buttonText: null,
        image: null,
        dismissEvent: null,
        killEvent: null,
        customData: null,
        initWithImage: function(i1, q, i2, i, js) {
            this.image = i1;
            this.buttonText = q;
            this.dismissEvent = i2;
            this.killEvent = i;
            this.customData = js
        },
        __class__: p1
    };
    var eA = function(i, q) {
        lT.call(this, i, q)
    };
    nt["miniclip.promotionsystem.core.model.vo.ReplaceProductVO"] = eA;
    eA.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "ReplaceProductVO"];
    eA.__super__ = lT;
    eA.prototype = lP(lT.prototype, {
        activate: null,
        deactivate: null,
        __class__: eA
    });
    var cH = nt["miniclip.promotionsystem.core.model.vo.StateOffer"] = {
        __ename__: ["miniclip", "promotionsystem", "core", "model", "vo", "StateOffer"],
        __constructs__: ["NOT_STARTED", "WAIT_WAKE_UP_TRIGGER", "WAIT_START_TRIGGER", "ACTIVE", "KILLED"]
    };
    cH.NOT_STARTED = ["NOT_STARTED", 0];
    cH.NOT_STARTED.toString = ea;
    cH.NOT_STARTED.__enum__ = cH;
    cH.WAIT_WAKE_UP_TRIGGER = ["WAIT_WAKE_UP_TRIGGER", 1];
    cH.WAIT_WAKE_UP_TRIGGER.toString = ea;
    cH.WAIT_WAKE_UP_TRIGGER.__enum__ = cH;
    cH.WAIT_START_TRIGGER = ["WAIT_START_TRIGGER", 2];
    cH.WAIT_START_TRIGGER.toString = ea;
    cH.WAIT_START_TRIGGER.__enum__ = cH;
    cH.ACTIVE = ["ACTIVE", 3];
    cH.ACTIVE.toString = ea;
    cH.ACTIVE.__enum__ = cH;
    cH.KILLED = ["KILLED", 4];
    cH.KILLED.toString = ea;
    cH.KILLED.__enum__ = cH;
    var dq = function(i, q) {
        lT.call(this, i, q)
    };
    nt["miniclip.promotionsystem.core.model.vo.StoreChangeVO"] = dq;
    dq.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "StoreChangeVO"];
    dq.__super__ = lT;
    dq.prototype = lP(lT.prototype, {
        activateProduct: null,
        deactivateProduct: null,
        replaceProduct: null,
        get_replacementProductToActivate: function() {
            if (this.replaceProduct == null) {
                return null
            }
            return this.replaceProduct.activate
        },
        get_replacementProductToDeactivate: function() {
            if (this.replaceProduct == null) {
                return null
            }
            return this.replaceProduct.deactivate
        },
        __class__: dq,
        __properties__: {
            get_replacementProductToDeactivate: "get_replacementProductToDeactivate",
            get_replacementProductToActivate: "get_replacementProductToActivate"
        }
    });
    var dy = function(i, q) {
        this.productIdMultiplier = 1;
        this.productMultiplier = 1;
        this.productIndex = 0;
        this.productId = null;
        this.ttfFontSize = 30;
        this.ttfFontName = null;
        this.jsonQuery = null;
        this.transactionId = null;
        this.tag = null;
        lu.call(this, i, q)
    };
    nt["miniclip.promotionsystem.core.model.vo.TextEntryVO"] = dy;
    dy.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "TextEntryVO"];
    dy.__interfaces__ = [kP];
    dy.__super__ = lu;
    dy.prototype = lP(lu.prototype, {
        dataType: null,
        tag: null,
        transactionId: null,
        jsonQuery: null,
        bitmapFontName: null,
        ttfFontName: null,
        ttfFontSize: null,
        ttfFontOutline: null,
        ttfFontOutlineSize: null,
        ttfFontOutlineColor: null,
        productId: null,
        productIndex: null,
        productMultiplier: null,
        shouldGetSum: null,
        shouldFormatValue: null,
        shouldLocalizeValue: null,
        shouldDisplayCurrencyIcon: null,
        shouldDisplayCoinIcon: null,
        shouldDisplayCashIcon: null,
        multiline: null,
        horizontalStrikethrough: null,
        diagonalStrikethrough: null,
        actionKey: null,
        productIdMultiplier: null,
        getResourceList: function(i) {
            if (this.bitmapFontName != null) {
                var q = new lI();
                q.isBitmapFont = true;
                q.name = this.bitmapFontName;
                q.atlasName = this.bitmapFontName;
                q.spriteName = cP.replace(this.bitmapFontName, ".fnt", ".png");
                i.push(q)
            }
            return i
        },
        __class__: dy
    });
    var e4 = function(i, q) {
        lT.call(this, i, q)
    };
    nt["miniclip.promotionsystem.core.model.vo.dataAccess.DataAccessBaseVO"] = e4;
    e4.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "dataAccess", "DataAccessBaseVO"];
    e4.__super__ = lT;
    e4.prototype = lP(lT.prototype, {
        type: null,
        execute: function() {
            throw new nM("DataAccessBaseVO:This method should be overrided: " + this.type)
        },
        __class__: e4
    });
    var aH = function(i, q) {
        e4.call(this, i, q)
    };
    nt["miniclip.promotionsystem.core.model.vo.dataAccess.DataAccessABTestVO"] = aH;
    aH.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "dataAccess", "DataAccessABTestVO"];
    aH.__super__ = e4;
    aH.prototype = lP(e4.prototype, {
        valueForGroup: null,
        testId: null,
        execute: function() {
            var js = iK.getGroupForTest(this.testId);
            var i2 = 0;
            var qY = this.valueForGroup.length;
            while (i2 < qY) {
                var q = i2++;
                if (this.valueForGroup[q].hasGroup(js)) {
                    this.valueForGroup[q].resolve();
                    return this.valueForGroup[q].value
                }
            }
            var i = 0;
            var i1 = this.valueForGroup.length;
            while (i < i1) {
                var qZ = i++;
                if (this.valueForGroup[qZ].hasGroup("default")) {
                    this.valueForGroup[qZ].resolve();
                    return this.valueForGroup[qZ].value
                }
            }
            return null
        },
        __class__: aH
    });
    var oV = function(i, q) {
        lT.call(this, i, q)
    };
    nt["miniclip.promotionsystem.core.model.vo.dataAccess.DataAccessEntryVO"] = oV;
    oV.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "dataAccess", "DataAccessEntryVO"];
    oV.__super__ = lT;
    oV.prototype = lP(lT.prototype, {
        value: null,
        handleSpecialTypes: function(q, i) {
            if (q == "value") {
                this[q] = i;
                return true
            }
            return false
        },
        __class__: oV
    });
    var G = function(i, q) {
        oV.call(this, i, q)
    };
    nt["miniclip.promotionsystem.core.model.vo.dataAccess.ABTestVO"] = G;
    G.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "dataAccess", "ABTestVO"];
    G.__super__ = oV;
    G.prototype = lP(oV.prototype, {
        groups: null,
        hasGroup: function(i) {
            return this.groups != null && cj.indexOf(this.groups, i, 0) > -1
        },
        __class__: G
    });
    var h0 = function(i, q) {
        e4.call(this, i, q)
    };
    nt["miniclip.promotionsystem.core.model.vo.dataAccess.DataAccessIndirectTemplateVO"] = h0;
    h0.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "dataAccess", "DataAccessIndirectTemplateVO"];
    h0.__super__ = e4;
    h0.prototype = lP(e4.prototype, {
        target: null,
        replacements: null,
        execute: function() {
            if (typeof(this.target) == "string") {
                this.target = ["TemplateConfig", this.target]
            }
            var i1 = kH.getIndirectDataForKey(this.target);
            var q0 = 0;
            var qY = this.replacements;
            while (q0 < qY.length) {
                var q = qY[q0];
                ++q0;
                var i2 = 0;
                var i = ar.fields(i1);
                while (i2 < i.length) {
                    var qZ = i[i2];
                    ++i2;
                    if (ar.field(i1, qZ) == q.replaceTag) {
                        var js = q.replaceValue;
                        if (kH.isDataAccess(js)) {
                            js = kH.solve(kH.getDataAccess(ar.field(js, "dataAccess")))
                        }
                        i1[qZ] = js
                    }
                }
            }
            return i1
        },
        handleSpecialTypes: function(q, i) {
            if (q == "target") {
                this.target = i;
                return true
            }
            return e4.prototype.handleSpecialTypes.call(this, q, i)
        },
        __class__: h0
    });
    var c1 = function(i, q) {
        lT.call(this, i, q)
    };
    nt["miniclip.promotionsystem.core.model.vo.dataAccess.ReplacementVO"] = c1;
    c1.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "dataAccess", "ReplacementVO"];
    c1.__super__ = lT;
    c1.prototype = lP(lT.prototype, {
        replaceTag: null,
        replaceValue: null,
        handleSpecialTypes: function(q, i) {
            if (q == "replaceValue") {
                this[q] = i;
                return true
            }
            return false
        },
        __class__: c1
    });
    var kI = function(i, q) {
        e4.call(this, i, q)
    };
    nt["miniclip.promotionsystem.core.model.vo.dataAccess.DataAccessIndirectVO"] = kI;
    kI.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "dataAccess", "DataAccessIndirectVO"];
    kI.__super__ = e4;
    kI.prototype = lP(e4.prototype, {
        target: null,
        execute: function() {
            if (typeof(this.target) == "string") {
                this.target = ["IndirectConfig", this.target]
            }
            return kH.getIndirectDataForKey(this.target)
        },
        handleSpecialTypes: function(q, i) {
            if (q == "target") {
                this.target = i;
                return true
            }
            return e4.prototype.handleSpecialTypes.call(this, q, i)
        },
        __class__: kI
    });
    var gk = function(i, q) {
        e4.call(this, i, q)
    };
    nt["miniclip.promotionsystem.core.model.vo.dataAccess.DataAccessLocalizationVO"] = gk;
    gk.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "dataAccess", "DataAccessLocalizationVO"];
    gk.__super__ = e4;
    gk.prototype = lP(e4.prototype, {
        valueForLanguage: null,
        execute: function() {
            var qZ = iK.getClientLanguage();
            var i2 = 0;
            var js = this.valueForLanguage.length;
            while (i2 < js) {
                var q = i2++;
                if (this.valueForLanguage[q].hasLanguage(qZ)) {
                    this.valueForLanguage[q].resolve();
                    return this.valueForLanguage[q].value
                }
            }
            var i = 0;
            var i1 = this.valueForLanguage.length;
            while (i < i1) {
                var qY = i++;
                if (this.valueForLanguage[qY].hasLanguage("default")) {
                    this.valueForLanguage[qY].resolve();
                    return this.valueForLanguage[qY].value
                }
            }
            return null
        },
        __class__: gk
    });
    var he = function(i, q) {
        oV.call(this, i, q)
    };
    nt["miniclip.promotionsystem.core.model.vo.dataAccess.LanguageVO"] = he;
    he.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "dataAccess", "LanguageVO"];
    he.__super__ = oV;
    he.prototype = lP(oV.prototype, {
        languages: null,
        hasLanguage: function(i) {
            return this.languages != null && cj.indexOf(this.languages, i, 0) > -1
        },
        __class__: he
    });
    var fX = function(i, q) {
        e4.call(this, i, q)
    };
    nt["miniclip.promotionsystem.core.model.vo.dataAccess.DataAccessNumberPropertyVO"] = fX;
    fX.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "dataAccess", "DataAccessNumberPropertyVO"];
    fX.__super__ = e4;
    fX.prototype = lP(e4.prototype, {
        valueForRange: null,
        propertyType: null,
        execute: function() {
            var i1 = iK.getNumberPropertyType(this.propertyType);
            var i = null;
            if (m6.isNaN(i1)) {
                i1 = 0
            }
            var i2 = 0;
            var js = this.valueForRange.length;
            while (i2 < js) {
                var q = i2++;
                if (this.valueForRange[q].hasNumber(i1)) {
                    this.valueForRange[q].resolve();
                    return this.valueForRange[q].value
                }
                if (this.valueForRange[q].isDefault()) {
                    this.valueForRange[q].resolve();
                    i = this.valueForRange[q].value
                }
            }
            return i
        },
        __class__: fX
    });
    var kp = function(i, q) {
        oV.call(this, i, q)
    };
    nt["miniclip.promotionsystem.core.model.vo.dataAccess.NumberVO"] = kp;
    kp.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "dataAccess", "NumberVO"];
    kp.__super__ = oV;
    kp.prototype = lP(oV.prototype, {
        ranges: null,
        hasNumber: function(q) {
            var i1 = 0;
            var i2 = this.ranges.length;
            while (i1 < i2) {
                var i = i1++;
                if (this.ranges[i].onRange(q)) {
                    return true
                }
            }
            return false
        },
        isDefault: function() {
            var q = 0;
            var i1 = this.ranges.length;
            while (q < i1) {
                var i = q++;
                if (this.ranges[i].isDefault) {
                    return true
                }
            }
            return false
        },
        __class__: kp
    });
    var P = function(i, q) {
        this.superior = NaN;
        this.inferior = NaN;
        lT.call(this, i, q);
        this.isDefault = typeof(q) == "string" && q == "default"
    };
    nt["miniclip.promotionsystem.core.model.vo.dataAccess.RangeVO"] = P;
    P.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "dataAccess", "RangeVO"];
    P.__super__ = lT;
    P.prototype = lP(lT.prototype, {
        inferior: null,
        superior: null,
        excludeInferior: null,
        excludeSuperior: null,
        isDefault: null,
        onRange: function(q) {
            var i1;
            i1 = m6.isNaN(this.inferior) || (this.excludeInferior ? q > this.inferior : q >= this.inferior);
            var i;
            i = m6.isNaN(this.superior) || (this.excludeSuperior ? q < this.superior : q <= this.superior);
            return i1 && i
        },
        __class__: P
    });
    var o6 = function(i, q) {
        e4.call(this, i, q)
    };
    nt["miniclip.promotionsystem.core.model.vo.dataAccess.DataAccessPlatformVO"] = o6;
    o6.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "dataAccess", "DataAccessPlatformVO"];
    o6.__super__ = e4;
    o6.prototype = lP(e4.prototype, {
        valueForPlatform: null,
        execute: function() {
            var q = iK.currentPlatformType();
            var js = 0;
            var qY = this.valueForPlatform.length;
            while (js < qY) {
                var i1 = js++;
                if (this.valueForPlatform[i1].hasPlatform(q)) {
                    this.valueForPlatform[i1].resolve();
                    return this.valueForPlatform[i1].value
                }
            }
            var i = 0;
            var i2 = this.valueForPlatform.length;
            while (i < i2) {
                var qZ = i++;
                if (this.valueForPlatform[qZ].hasPlatform("default")) {
                    this.valueForPlatform[qZ].resolve();
                    return this.valueForPlatform[qZ].value
                }
            }
            return null
        },
        __class__: o6
    });
    var jn = function(i, q) {
        oV.call(this, i, q)
    };
    nt["miniclip.promotionsystem.core.model.vo.dataAccess.PlatformVO"] = jn;
    jn.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "dataAccess", "PlatformVO"];
    jn.__super__ = oV;
    jn.prototype = lP(oV.prototype, {
        platforms: null,
        hasPlatform: function(i) {
            return this.platforms != null && cj.indexOf(this.platforms, i, 0) > -1
        },
        __class__: jn
    });
    var cR = function(i, q) {
        e4.call(this, i, q)
    };
    nt["miniclip.promotionsystem.core.model.vo.dataAccess.DataAccessUserPropertyVO"] = cR;
    cR.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "dataAccess", "DataAccessUserPropertyVO"];
    cR.__super__ = e4;
    cR.prototype = lP(e4.prototype, {
        valueForProperty: null,
        propertyType: null,
        propertyInfo: null,
        execute: function() {
            var js = iK.getPropertyType(this.propertyType, this.propertyInfo);
            var i2 = 0;
            var qY = this.valueForProperty.length;
            while (i2 < qY) {
                var q = i2++;
                if (this.valueForProperty[q].hasProperty(js)) {
                    this.valueForProperty[q].resolve();
                    return this.valueForProperty[q].value
                }
            }
            var i = 0;
            var i1 = this.valueForProperty.length;
            while (i < i1) {
                var qZ = i++;
                if (this.valueForProperty[qZ].hasProperty("default")) {
                    this.valueForProperty[qZ].resolve();
                    return this.valueForProperty[qZ].value
                }
            }
            return null
        },
        __class__: cR
    });
    var hF = function(i, q) {
        oV.call(this, i, q)
    };
    nt["miniclip.promotionsystem.core.model.vo.dataAccess.UserPropertiesVO"] = hF;
    hF.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "dataAccess", "UserPropertiesVO"];
    hF.__super__ = oV;
    hF.prototype = lP(oV.prototype, {
        properties: null,
        hasProperty: function(i) {
            return this.properties != null && cj.indexOf(this.properties, i, 0) > -1
        },
        __class__: hF
    });
    var cG = function(q, i2) {
        this.S_TriggerActivated = new o0();
        this.triggerEvents = new io();
        lT.call(this, q, i2);
        if (this.events != null) {
            var js = 0;
            var i1 = this.events;
            while (js < i1.length) {
                var i = i1[js];
                ++js;
                this.addEvent(i)
            }
        }
    };
    nt["miniclip.promotionsystem.core.model.vo.triggers.PromotionMultiEventVO"] = cG;
    cG.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "triggers", "PromotionMultiEventVO"];
    cG.__interfaces__ = [pd];
    cG.__super__ = lT;
    cG.prototype = lP(lT.prototype, {
        activateOnFirstEvent: null,
        events: null,
        triggerEvents: null,
        S_TriggerActivated: null,
        enabled: null,
        set_enabled: function(i) {
            if (this.enabled == i) {
                return this.enabled
            }
            this.enabled = i;
            if (i) {
                this.enableEvents()
            } else {
                this.disableEvents()
            }
            var i1 = this.triggerEvents.keys();
            while (i1.hasNext()) {
                var q = i1.next();
                this.triggerEvents.get(q).set_enabled(i)
            }
            return this.enabled
        },
        reset: function() {
            if (this.triggerEvents != null) {
                var q = this.triggerEvents.iterator();
                while (q.hasNext()) {
                    var i = q.next();
                    i.receivedEvent = false
                }
            }
        },
        getEvents: function() {
            var i1 = [];
            if (this.triggerEvents != null) {
                var q = this.triggerEvents.keys();
                while (q.hasNext()) {
                    var i = q.next();
                    i1.push(i)
                }
            }
            return i1
        },
        addEvent: function(i1) {
            if (i1 == null || i1.length == 0) {
                throw new nM("Cannot continue with empty event levels")
            }
            var i = "";
            var js = 0;
            while (js < i1.length) {
                var q = i1[js];
                ++js;
                if (i != "") {
                    i += "_"
                }
                i += q
            }
            if (i != "") {
                var i2 = new c0(this._promoSystem);
                i2.triggerName = i;
                i2.set_enabled(true);
                i2.receivedEvent = false;
                this.triggerEvents.set(i, i2)
            }
        },
        disableEvents: function() {
            var q = this.triggerEvents.keys();
            while (q.hasNext()) {
                var i = q.next();
                this._promoSystem.unregisterForEvent(i, oT(this, this.eventReceived))
            }
        },
        enableEvents: function() {
            var q = this.triggerEvents.keys();
            while (q.hasNext()) {
                var i = q.next();
                this._promoSystem.registerForEvent(i, this, oT(this, this.eventReceived))
            }
        },
        eventReceived: function(i2) {
            if (i2 == null) {
                return
            }
            var i = this.triggerEvents.get(i2.name);
            if (i == null) {
                return
            }
            var js = true;
            if (!this.activateOnFirstEvent) {
                i.receivedEvent = true;
                var i1 = this.triggerEvents.keys();
                while (i1.hasNext()) {
                    var q = i1.next();
                    i = this.triggerEvents.get(q);
                    if (i.receivedEvent == false) {
                        js = false;
                        break
                    }
                }
            }
            if (js == true) {
                this.activate()
            }
            if (this._promoSystem != null) {
                this._promoSystem.dirtyFlag = true
            }
        },
        activate: function() {
            this.S_TriggerActivated.emit();
            this.reset()
        },
        getState: function() {
            var q = {};
            ar.setProperty(q, "enabledState", this.enabled);
            var js = {};
            var i2 = 0;
            var i1 = this.triggerEvents.keys();
            while (i1.hasNext()) {
                var i = i1.next();
                ar.setField(js, i, this.triggerEvents.get(i).getState());
                i2++
            }
            if (i2 > 0) {
                ar.setProperty(q, "triggerEventsState", js)
            }
            return q
        },
        setState: function(i) {
            if (i == null) {
                throw new nM("Cannot continue without appropriate state defined")
            }
            var q = i;
            var qZ = ar.getProperty(q, "enabledState");
            var q2 = ar.getProperty(q, "triggerEventsState");
            if (q2 == null) {
                throw new nM("Cannot continue without state or trigger defined")
            }
            var qY = 0;
            var i1 = ar.fields(q2);
            var i2 = 0;
            while (i2 < i1.length) {
                var q0 = i1[i2];
                ++i2;
                var q1 = this.triggerEvents.get(q0);
                if (q1 == null) {
                    throw new nM("Cannot continue with trigger data mismatch")
                }
                var js = ar.getProperty(q2, q0);
                q1.setState(js)
            }
            this.set_enabled(qZ)
        },
        __class__: cG,
        __properties__: {
            set_enabled: "set_enabled"
        }
    });
    var c0 = function(i, q) {
        this.currentTimestamp = -1;
        this.numActivations = 0;
        this._enabled = false;
        var i1 = this;
        lT.call(this, i, q);
        this.receivedEvent = false;
        this.S_TriggerActivated = new oY();
        if (this.parameters != null) {
            if (this.parameters.resetEvent != null) {
                this.parameters.resetEvent.S_TriggerActivated.connect(function() {
                    i1.reset()
                })
            }
            if (this.parameters.enableEvent != null) {
                this.parameters.enableEvent.S_TriggerActivated.connect(function() {
                    i1.set_enabled(true)
                })
            }
            if (this.parameters.disableEvent != null) {
                this.parameters.disableEvent.S_TriggerActivated.connect(function() {
                    i1.set_enabled(false)
                })
            }
        }
    };
    nt["miniclip.promotionsystem.core.model.vo.triggers.TriggerEventVO"] = c0;
    c0.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "triggers", "TriggerEventVO"];
    c0.__super__ = lT;
    c0.prototype = lP(lT.prototype, {
        _enabled: null,
        get_enabled: function() {
            return this._enabled
        },
        set_enabled: function(i) {
            if (this._enabled == i) {
                return this._enabled
            }
            this._enabled = i;
            if (this.parameters != null) {
                if (!this._enabled && this.parameters.resetOnDisable) {
                    this.reset()
                }
                if (this.parameters.resetEvent != null) {
                    this.parameters.resetEvent.set_enabled(i)
                }
                if (this.parameters.enableEvent != null) {
                    this.parameters.enableEvent.set_enabled(i)
                }
                if (this.parameters.disableEvent != null) {
                    this.parameters.disableEvent.set_enabled(i)
                }
            }
            return i
        },
        numActivations: null,
        triggerName: null,
        triggerType: null,
        parameters: null,
        currentTimestamp: null,
        set_currentTimestamp: function(i) {
            if (!this.get_enabled()) {
                return i
            }
            this.currentTimestamp = i;
            return i
        },
        eventLevels: null,
        receivedEvent: null,
        S_TriggerActivated: null,
        handleSpecialTypes: function(i, q) {
            if (i == "parameters") {
                ar.setField(this, i, new nU(this._promoSystem, q));
                return true
            }
            return lT.prototype.handleSpecialTypes.call(this, i, q)
        },
        reset: function(i) {
            if (i == null) {
                i = false
            }
            if (!i) {
                this.numActivations = 0;
                this.receivedEvent = false
            }
            if (this.parameters != null) {
                this.parameters.reset(i)
            }
        },
        trigger: function() {
            if (!this.get_enabled()) {
                return false
            }
            if (this.get_canActivate()) {
                if (this.parameters.maxActivations > 0) {
                    this.numActivations++
                }
                if (this.parameters != null) {
                    this.parameters.dispatchEvents()
                }
                this.S_TriggerActivated.emit(this.triggerName);
                if (this._promoSystem != null) {
                    this._promoSystem.dirtyFlag = true
                }
                return true
            } else {
                null
            }
            return false
        },
        get_canActivate: function() {
            return this.get_enabled() && !this.reachedMaxActivations()
        },
        description: function() {
            var i = "EVENT_";
            var i2 = 0;
            var i1 = this.eventLevels;
            while (i2 < i1.length) {
                var q = i1[i2];
                ++i2;
                i += q
            }
            return i
        },
        getState: function() {
            var i = {};
            ar.setProperty(i, "enabledState", this.get_enabled() == true);
            ar.setProperty(i, "numActivationsState", this.numActivations);
            ar.setProperty(i, "receivedEvent", this.receivedEvent);
            if (this.parameters != null) {
                ar.setProperty(i, "resetOnDisableState", this.parameters.resetOnDisable);
                ar.setProperty(i, "maxActivations", this.parameters.maxActivations);
                if (this.parameters.resetEvent != null) {
                    ar.setProperty(i, "resetEventState", this.parameters.resetEvent.getState())
                }
                if (this.parameters.enableEvent != null) {
                    ar.setProperty(i, "enableEventState", this.parameters.enableEvent.getState())
                }
                if (this.parameters.disableEvent != null) {
                    ar.setProperty(i, "disableEventState", this.parameters.disableEvent.getState())
                }
            }
            return i
        },
        setState: function(i2) {
            if (i2 == null) {
                throw new nM("Cannot continue without appropriate state defined")
            }
            var q = i2;
            if (this.parameters != null) {
                this.parameters.resetOnDisable = ar.getProperty(q, "resetOnDisableState");
                this.parameters.maxActivations = ar.getProperty(q, "maxActivations");
                if (this.parameters.resetEvent != null) {
                    this.parameters.resetEvent.setState(ar.getProperty(q, "resetEventState"))
                }
                if (this.parameters.enableEvent != null) {
                    this.parameters.enableEvent.setState(ar.getProperty(q, "enableEventState"))
                }
                if (this.parameters.disableEvent != null) {
                    this.parameters.disableEvent.setState(ar.getProperty(q, "disableEventState"))
                }
            }
            var js = ar.getProperty(q, "enabledState");
            var i = ar.getProperty(q, "numActivationsState");
            var i1 = ar.getProperty(q, "receivedEvent");
            this.set_enabled(js);
            this.numActivations = i;
            this.receivedEvent = i1
        },
        reachedMaxActivations: function() {
            return this.parameters != null && this.parameters.maxActivations > 0 && this.numActivations >= this.parameters.maxActivations
        },
        __class__: c0,
        __properties__: {
            get_canActivate: "get_canActivate",
            set_enabled: "set_enabled",
            get_enabled: "get_enabled"
        }
    });
    var nU = function(i, q) {
        this.resetOnDisable = false;
        lT.call(this, i, q)
    };
    nt["miniclip.promotionsystem.core.model.vo.triggers.TriggerParametersVO"] = nU;
    nU.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "triggers", "TriggerParametersVO"];
    nU.__super__ = lT;
    nU.prototype = lP(lT.prototype, {
        resetOnDisable: null,
        maxActivations: null,
        onActivationEvents: null,
        resetEvent: null,
        enableEvent: null,
        disableEvent: null,
        dispatchEvents: function() {
            if (this.onActivationEvents != null) {
                var i1 = 0;
                var q = this.onActivationEvents;
                while (i1 < q.length) {
                    var i = q[i1];
                    ++i1;
                    this._promoSystem.postEvent(i)
                }
            }
        },
        reset: function(i) {
            if (i) {
                return
            }
            if (this.resetEvent != null) {
                this.resetEvent.reset()
            }
            if (this.enableEvent != null) {
                this.enableEvent.reset()
            }
            if (this.disableEvent != null) {
                this.disableEvent.reset()
            }
        },
        __class__: nU
    });
    var fZ = function(i, q) {
        this.startTimestamp = -1;
        this.lastActivationTimestamp = -1;
        c0.call(this, i, q)
    };
    nt["miniclip.promotionsystem.core.model.vo.triggers.WaitForTimeBaseTrigger"] = fZ;
    fZ.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "triggers", "WaitForTimeBaseTrigger"];
    fZ.__super__ = c0;
    fZ.prototype = lP(c0.prototype, {
        lastActivationTimestamp: null,
        startTimestamp: null,
        get_timeToNextActivation: function() {
            return -1
        },
        reset: function(i) {
            if (i == null) {
                i = false
            }
            this.currentTimestamp = -1;
            this.startTimestamp = -1;
            if (!i) {
                this.lastActivationTimestamp = -1
            }
            c0.prototype.reset.call(this, i)
        },
        getState: function() {
            var i = c0.prototype.getState.call(this);
            ar.setProperty(i, "lastActivationState", this.lastActivationTimestamp);
            ar.setProperty(i, "startTimestampState", this.startTimestamp);
            ar.setProperty(i, "currentTimestampState", this.currentTimestamp);
            return i
        },
        setState: function(i) {
            c0.prototype.setState.call(this, i);
            this.lastActivationTimestamp = ar.getProperty(i, "lastActivationState");
            this.startTimestamp = ar.getProperty(i, "startTimestampState");
            this.currentTimestamp = ar.getProperty(i, "currentTimestampState")
        },
        __class__: fZ,
        __properties__: lP(c0.prototype.__properties__, {
            get_timeToNextActivation: "get_timeToNextActivation"
        })
    });
    var hQ = function(i, q) {
        fZ.call(this, i, q);
        this.initialize()
    };
    nt["miniclip.promotionsystem.core.model.vo.triggers.WaitForDeltaTimeTrigger"] = hQ;
    hQ.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "triggers", "WaitForDeltaTimeTrigger"];
    hQ.__super__ = fZ;
    hQ.prototype = lP(fZ.prototype, {
        deltaTime: null,
        initialize: function() {
            this.deltaTime = 0;
            if (this.parameters != null && n0.__instanceof(this.parameters, dA)) {
                var i;
                try {
                    i = n0.__cast(this.parameters, dA)
                } catch (q) {
                    lF.lastException = q;
                    if (q instanceof nM) {
                        q = q.val
                    }
                    i = null
                }
                this.deltaTime += i.years * 31536000;
                this.deltaTime += i.months * 2678400;
                this.deltaTime += i.weeks * 604800;
                this.deltaTime += i.days * 86400;
                this.deltaTime += i.hours * 3600;
                this.deltaTime += i.minutes * 60;
                this.deltaTime += i.seconds;
                this.deltaTime *= 1000
            }
        },
        get_timeToNextActivation: function() {
            if (this.startTimestamp < 0) {
                return -1
            }
            var i = this.deltaTime - (this.currentTimestamp - this.startTimestamp);
            if (i < 0) {
                return -1
            }
            return this.currentTimestamp + i
        },
        set_currentTimestamp: function(i2) {
            if (!this.get_enabled() || this.parameters == null) {
                return i2
            }
            if (i2 < 0) {
                return i2
            }
            if (this.currentTimestamp < 0) {
                this.currentTimestamp = i2;
                this.startTimestamp = i2
            } else {
                if (i2 <= this.currentTimestamp) {
                    return i2
                }
            }
            var js = i2 - this.startTimestamp;
            if (this.deltaTime > 0 && js >= this.deltaTime && this.get_canActivate()) {
                var q = js / this.deltaTime | 0;
                if (q > 1 && (n0.__cast(this.parameters, dA)).allowTriggerMoreThanOnceOnUpdate) {
                    var qY = 0;
                    while (qY < q) {
                        var i1 = qY++;
                        if (this.get_canActivate()) {
                            this.startTimestamp = this.lastActivationTimestamp = this.startTimestamp + this.deltaTime;
                            this.trigger()
                        }
                        if (!this.get_enabled() || this.startTimestamp < 0) {
                            break
                        }
                    }
                } else {
                    this.startTimestamp = this.lastActivationTimestamp = this.startTimestamp + this.deltaTime;
                    this.trigger()
                }
            }
            return i2
        },
        handleSpecialTypes: function(i, q) {
            if (i == "parameters") {
                ar.setField(this, i, new dA(this._promoSystem, q));
                return true
            }
            return fZ.prototype.handleSpecialTypes.call(this, i, q)
        },
        __class__: hQ
    });
    var dA = function(i, q) {
        nU.call(this, i, q)
    };
    nt["miniclip.promotionsystem.core.model.vo.triggers.WaitForDeltaTimeTriggerParameters"] = dA;
    dA.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "triggers", "WaitForDeltaTimeTriggerParameters"];
    dA.__super__ = nU;
    dA.prototype = lP(nU.prototype, {
        years: null,
        months: null,
        weeks: null,
        days: null,
        hours: null,
        minutes: null,
        seconds: null,
        allowTriggerMoreThanOnceOnUpdate: null,
        __class__: dA
    });
    var ae = function(i, q) {
        this.nCount = 0;
        c0.call(this, i, q);
        this.initialize()
    };
    nt["miniclip.promotionsystem.core.model.vo.triggers.WaitForEventTrigger"] = ae;
    ae.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "triggers", "WaitForEventTrigger"];
    ae.__super__ = c0;
    ae.prototype = lP(c0.prototype, {
        nCount: null,
        set_enabled: function(q) {
            if (this._enabled == q) {
                return this._enabled
            }
            var i;
            i = n0.__cast(this.parameters, kA);
            if (i != null) {
                if (i.activationEvent != null) {
                    i.activationEvent.set_enabled(q)
                }
            }
            return c0.prototype.set_enabled.call(this, q)
        },
        handleSpecialTypes: function(i, q) {
            if (i == "parameters") {
                ar.setField(this, i, new kA(this._promoSystem, q));
                return true
            }
            return c0.prototype.handleSpecialTypes.call(this, i, q)
        },
        initialize: function() {
            var i;
            i = n0.__cast(this.parameters, kA);
            if (i != null && i.activationEvent != null) {
                i.activationEvent.S_TriggerActivated.connect(oT(this, this.trigger))
            }
        },
        trigger: function() {
            this.nCount++;
            if (this.nCount >= (n0.__cast(this.parameters, kA)).count) {
                return c0.prototype.trigger.call(this)
            }
            return false
        },
        reset: function(i) {
            if (i == null) {
                i = false
            }
            this.nCount = 0;
            c0.prototype.reset.call(this, i)
        },
        getActivationEvents: function() {
            var i;
            i = n0.__cast(this.parameters, kA);
            if (i == null || i.activationEvent == null) {
                return null
            }
            return i.activationEvent.getEvents()
        },
        __class__: ae
    });
    var kA = function(i, q) {
        this.count = 1;
        nU.call(this, i, q)
    };
    nt["miniclip.promotionsystem.core.model.vo.triggers.WaitForEventTriggerParameters"] = kA;
    kA.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "triggers", "WaitForEventTriggerParameters"];
    kA.__super__ = nU;
    kA.prototype = lP(nU.prototype, {
        activationEvent: null,
        count: null,
        reset: function(i) {
            nU.prototype.reset.call(this, i);
            if (this.activationEvent != null && !i) {
                this.activationEvent.reset()
            }
        },
        __class__: kA
    });
    var aR = function(i, q) {
        fZ.call(this, i, q)
    };
    nt["miniclip.promotionsystem.core.model.vo.triggers.WaitForMultiTimeTrigger"] = aR;
    aR.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "triggers", "WaitForMultiTimeTrigger"];
    aR.__super__ = fZ;
    aR.prototype = lP(fZ.prototype, {
        handleSpecialTypes: function(i, q) {
            if (i == "parameters") {
                ar.setField(this, i, new pU(this._promoSystem, q));
                return true
            }
            return fZ.prototype.handleSpecialTypes.call(this, i, q)
        },
        set_currentTimestamp: function(q) {
            if (!this.get_enabled()) {
                return this.currentTimestamp
            }
            if (q < 0) {
                return this.currentTimestamp
            }
            if (this.currentTimestamp < 0) {
                this.currentTimestamp = q
            } else {
                if (q <= this.currentTimestamp) {
                    return this.currentTimestamp
                }
            }
            var i = this.currentTimestamp;
            this.currentTimestamp = q;
            var i1 = this.get_timeToNextActivation();
            if (i1 >= i && i1 <= this.currentTimestamp && i1 > this.lastActivationTimestamp) {
                if (this.trigger()) {
                    this.lastActivationTimestamp = i1
                }
            }
            return this.currentTimestamp
        },
        get_timeToNextActivation: function() {
            var q;
            q = n0.__cast(this.parameters, pU);
            if (this.currentTimestamp < 0 || q == null) {
                return -1
            }
            var i2 = -1;
            var qY;
            var js = 0;
            var i1 = q.activationDates;
            while (js < i1.length) {
                var i = i1[js];
                ++js;
                qY = iw.getNextDateForParams(this.currentTimestamp, i);
                if (qY >= this.currentTimestamp && (i2 == -1 || qY < i2)) {
                    i2 = qY
                }
            }
            return i2
        },
        reachedMaxActivations: function() {
            try {
                var q;
                q = n0.__cast(this.parameters, pU);
                if (q != null && q.activationDates.length == 1) {
                    return fZ.prototype.reachedMaxActivations.call(this)
                }
            } catch (i) {
                lF.lastException = i;
                if (i instanceof nM) {
                    i = i.val
                }
                return fZ.prototype.reachedMaxActivations.call(this)
            }
            return false
        },
        __class__: aR
    });
    var pU = function(i, q) {
        nU.call(this, i, q)
    };
    nt["miniclip.promotionsystem.core.model.vo.triggers.WaitForMultiTimeTriggerParameters"] = pU;
    pU.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "triggers", "WaitForMultiTimeTriggerParameters"];
    pU.__super__ = nU;
    pU.prototype = lP(nU.prototype, {
        activationDates: null,
        __class__: pU
    });
    var nW = function(i, q) {
        c0.call(this, i, q);
        this.initialize()
    };
    nt["miniclip.promotionsystem.core.model.vo.triggers.WaitForSequencedNestedTriggersTrigger"] = nW;
    nW.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "triggers", "WaitForSequencedNestedTriggersTrigger"];
    nW.__super__ = c0;
    nW.prototype = lP(c0.prototype, {
        triggersMap: null,
        handleSpecialTypes: function(i, q) {
            if (i == "parameters") {
                ar.setField(this, i, new pF(this._promoSystem, q));
                return true
            }
            return c0.prototype.handleSpecialTypes.call(this, i, q)
        },
        set_enabled: function(i) {
            if (this.get_enabled() == i) {
                return this.get_enabled()
            }
            this.enableTriggers(i);
            return c0.prototype.set_enabled.call(this, i)
        },
        enableTriggers: function(js) {
            if (this.parameters != null) {
                var i1;
                i1 = n0.__cast(this.parameters, pF);
                var i2 = 0;
                var qY = i1.activationTriggers.length;
                while (i2 < qY) {
                    var q = i2++;
                    i1.activationTriggers[q].set_enabled(q == 0 ? js : false)
                }
            }
        },
        set_currentTimestamp: function(js) {
            if (!this.get_enabled()) {
                return js
            }
            if (this.parameters != null) {
                var i1;
                i1 = n0.__cast(this.parameters, pF);
                var i2 = 0;
                var qY = i1.activationTriggers.length;
                while (i2 < qY) {
                    var q = i2++;
                    i1.activationTriggers[q].set_currentTimestamp(js)
                }
            }
            return c0.prototype.set_currentTimestamp.call(this, js)
        },
        initialize: function() {
            this.triggersMap = new io();
            var i1;
            i1 = n0.__cast(this.parameters, pF);
            if (i1 != null && i1.activationTriggers != null) {
                var i2 = 0;
                var js = i1.activationTriggers.length;
                while (i2 < js) {
                    var q = i2++;
                    this.triggersMap.set(i1.activationTriggers[q].triggerName, q);
                    i1.activationTriggers[q].S_TriggerActivated.connect(oT(this, this.onTriggerActivated))
                }
            }
        },
        onTriggerActivated: function(i) {
            var q = this.triggersMap.get(i);
            var i1;
            i1 = n0.__cast(this.parameters, pF);
            i1.activationTriggers[q].receivedEvent = true;
            if (i1.activateOnFirstTrigger) {
                this.trigger()
            } else {
                if (q < i1.activationTriggers.length - 1) {
                    i1.activationTriggers[q + 1].set_enabled(true)
                } else {
                    this.trigger()
                }
            }
            if (this._promoSystem != null) {
                this._promoSystem.dirtyFlag = true
            }
        },
        trigger: function() {
            if (c0.prototype.trigger.call(this)) {
                var i1;
                i1 = n0.__cast(this.parameters, pF);
                var i2 = 0;
                var js = i1.activationTriggers.length;
                while (i2 < js) {
                    var q = i2++;
                    i1.activationTriggers[q].receivedEvent = false;
                    i1.activationTriggers[q].reset(true)
                }
                return true
            }
            return false
        },
        getState: function() {
            var q = c0.prototype.getState.call(this);
            var i1 = {};
            var qY = 0;
            var i2;
            i2 = n0.__cast(this.parameters, pF);
            var js = this.triggersMap.keys();
            while (js.hasNext()) {
                var i = js.next();
                ar.setField(i1, i, i2.activationTriggers[this.triggersMap.get(i)].getState());
                qY++
            }
            if (qY > 0) {
                ar.setProperty(q, "triggersMapState", i1)
            }
            return q
        },
        setState: function(i) {
            if (i == null) {
                throw new nM("Cannot continue without appropriate state defined")
            }
            var q = i;
            var js = ar.getProperty(q, "triggersMapState");
            if (js == null) {
                throw new nM("Cannot continue without state or trigger defined")
            }
            var q0;
            q0 = n0.__cast(this.parameters, pF);
            var i1 = ar.fields(js);
            c0.prototype.setState.call(this, i);
            var i2 = 0;
            while (i2 < i1.length) {
                var qZ = i1[i2];
                ++i2;
                var q1 = q0.activationTriggers[this.triggersMap.get(qZ)];
                if (q1 == null) {
                    throw new nM("Cannot continue with trigger data mismatch")
                }
                var qY = ar.getProperty(js, qZ);
                q1.setState(qY)
            }
        },
        __class__: nW
    });
    var or = function(i, q) {
        nW.call(this, i, q)
    };
    nt["miniclip.promotionsystem.core.model.vo.triggers.WaitForNestedTriggersTrigger"] = or;
    or.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "triggers", "WaitForNestedTriggersTrigger"];
    or.__super__ = nW;
    or.prototype = lP(nW.prototype, {
        handleSpecialTypes: function(i, q) {
            if (i == "parameters") {
                ar.setField(this, i, new on(this._promoSystem, q));
                return true
            }
            return nW.prototype.handleSpecialTypes.call(this, i, q)
        },
        enableTriggers: function(js) {
            if (this.parameters != null) {
                var i1;
                i1 = n0.__cast(this.parameters, on);
                var i2 = 0;
                var qY = i1.activationTriggers.length;
                while (i2 < qY) {
                    var q = i2++;
                    i1.activationTriggers[q].set_enabled(js)
                }
            }
        },
        onTriggerActivated: function(q) {
            var i1 = this.triggersMap.get(q);
            var js;
            js = n0.__cast(this.parameters, on);
            js.activationTriggers[i1].receivedEvent = true;
            if (this._promoSystem != null) {
                this._promoSystem.dirtyFlag = true
            }
            if (!js.activateOnFirstTrigger) {
                var qY = 0;
                var qZ = js.activationTriggers.length;
                while (qY < qZ) {
                    var i2 = qY++;
                    if (js.activationTriggers[i2].receivedEvent == false) {
                        return
                    }
                }
            }
            this.trigger()
        },
        __class__: or
    });
    var pF = function(i, q) {
        nU.call(this, i, q)
    };
    nt["miniclip.promotionsystem.core.model.vo.triggers.WaitForSequencedNestedTriggersTriggerParameters"] = pF;
    pF.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "triggers", "WaitForSequencedNestedTriggersTriggerParameters"];
    pF.__super__ = nU;
    pF.prototype = lP(nU.prototype, {
        activationTriggers: null,
        activateOnFirstTrigger: null,
        reset: function(q) {
            var i2 = 0;
            var js = this.activationTriggers.length;
            while (i2 < js) {
                var i1 = i2++;
                this.activationTriggers[i1].reset(q)
            }
            nU.prototype.reset.call(this, q)
        },
        handleSpecialTypes: function(i2, qY) {
            if (i2 == "activationTriggers") {
                var q0 = [];
                var js = 0;
                var qZ = qY.length;
                while (js < qZ) {
                    var i1 = js++;
                    var q = jc.createTrigger(this._promoSystem, qY[i1]);
                    if (q != null) {
                        q0.push(q)
                    }
                }
                this[i2] = q0;
                return true
            }
            return nU.prototype.handleSpecialTypes.call(this, i2, qY)
        },
        __class__: pF
    });
    var on = function(i, q) {
        pF.call(this, i, q)
    };
    nt["miniclip.promotionsystem.core.model.vo.triggers.WaitForNestedTriggersTriggerParameters"] = on;
    on.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "triggers", "WaitForNestedTriggersTriggerParameters"];
    on.__super__ = pF;
    on.prototype = lP(pF.prototype, {
        __class__: on
    });
    var mJ = function(i, q) {
        aR.call(this, i, q)
    };
    nt["miniclip.promotionsystem.core.model.vo.triggers.WaitForTimeTrigger"] = mJ;
    mJ.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "triggers", "WaitForTimeTrigger"];
    mJ.__super__ = aR;
    mJ.prototype = lP(aR.prototype, {
        handleSpecialTypes: function(i, q) {
            if (i == "parameters") {
                ar.setField(this, i, new qU(this._promoSystem, q));
                return true
            }
            return aR.prototype.handleSpecialTypes.call(this, i, q)
        },
        __class__: mJ
    });
    var qU = function(i, q) {
        this.second = 0;
        this.minute = -1;
        this.hour = -1;
        this.day = 0;
        this.month = 0;
        this.year = 0;
        pU.call(this, i, q);
        this.activationDates = [];
        this.activationDates.push(new gJ(i, {
            year: this.year,
            month: this.month,
            day: this.day,
            hour: this.hour,
            minute: this.minute,
            second: this.second
        }))
    };
    nt["miniclip.promotionsystem.core.model.vo.triggers.WaitForTimeTriggerParameters"] = qU;
    qU.__name__ = ["miniclip", "promotionsystem", "core", "model", "vo", "triggers", "WaitForTimeTriggerParameters"];
    qU.__super__ = pU;
    qU.prototype = lP(pU.prototype, {
        year: null,
        month: null,
        day: null,
        hour: null,
        minute: null,
        second: null,
        __class__: qU
    });
    var hD = function() {};
    nt["motion.actuators.IGenericActuator"] = hD;
    hD.__name__ = ["motion", "actuators", "IGenericActuator"];
    hD.prototype = {
        autoVisible: null,
        delay: null,
        ease: null,
        onComplete: null,
        onRepeat: null,
        onUpdate: null,
        reflect: null,
        repeat: null,
        reverse: null,
        smartRotation: null,
        snapping: null,
        onPause: null,
        onResume: null,
        apply: null,
        move: null,
        pause: null,
        resume: null,
        stop: null,
        __class__: hD
    };
    var gx = function(i1, q, i) {
        this._autoVisible = true;
        this._delay = 0;
        this._reflect = false;
        this._repeat = 0;
        this._reverse = false;
        this._smartRotation = false;
        this._snapping = false;
        this.special = false;
        this.target = i1;
        this.properties = i;
        this.duration = q;
        this._ease = d3.defaultEase
    };
    nt["motion.actuators.GenericActuator"] = gx;
    gx.__name__ = ["motion", "actuators", "GenericActuator"];
    gx.__interfaces__ = [hD];
    gx.prototype = {
        duration: null,
        id: null,
        properties: null,
        target: null,
        _autoVisible: null,
        _delay: null,
        _ease: null,
        _onComplete: null,
        _onCompleteParams: null,
        _onRepeat: null,
        _onRepeatParams: null,
        _onUpdate: null,
        _onUpdateParams: null,
        _onResume: null,
        _onResumeParams: null,
        _onPause: null,
        _onPauseParams: null,
        _reflect: null,
        _repeat: null,
        _reverse: null,
        _smartRotation: null,
        _snapping: null,
        special: null,
        apply: function() {
            var i2 = 0;
            var i1 = ar.fields(this.properties);
            while (i2 < i1.length) {
                var q = i1[i2];
                ++i2;
                if (Object.prototype.hasOwnProperty.call(this.target, q)) {
                    ar.setField(this.target, q, ar.field(this.properties, q))
                } else {
                    ar.setProperty(this.target, q, ar.field(this.properties, q))
                }
            }
        },
        autoVisible: function(i) {
            if (i == null) {
                i = true
            }
            this._autoVisible = i;
            return this
        },
        callMethod: function(q, i) {
            if (i == null) {
                i = []
            }
            return ar.callMethod(q, q, i)
        },
        change: function() {
            if (this._onUpdate != null) {
                this.callMethod(this._onUpdate, this._onUpdateParams)
            }
        },
        complete: function(i) {
            if (i == null) {
                i = true
            }
            if (i) {
                this.change();
                if (this._onComplete != null) {
                    this.callMethod(this._onComplete, this._onCompleteParams)
                }
            }
            d3.unload(this)
        },
        delay: function(i) {
            this._delay = i;
            return this
        },
        ease: function(i) {
            this._ease = i;
            return this
        },
        move: function() {},
        onComplete: function(i, q) {
            this._onComplete = i;
            if (q == null) {
                this._onCompleteParams = []
            } else {
                this._onCompleteParams = q
            }
            if (this.duration == 0) {
                this.complete()
            }
            return this
        },
        onRepeat: function(i, q) {
            this._onRepeat = i;
            if (q == null) {
                this._onRepeatParams = []
            } else {
                this._onRepeatParams = q
            }
            return this
        },
        onUpdate: function(i, q) {
            this._onUpdate = i;
            if (q == null) {
                this._onUpdateParams = []
            } else {
                this._onUpdateParams = q
            }
            return this
        },
        onPause: function(i, q) {
            this._onPause = i;
            if (q == null) {
                this._onPauseParams = []
            } else {
                this._onPauseParams = q
            }
            return this
        },
        onResume: function(i, q) {
            this._onResume = i;
            if (q == null) {
                this._onResumeParams = []
            } else {
                this._onResumeParams = q
            }
            return this
        },
        pause: function() {
            if (this._onPause != null) {
                this.callMethod(this._onPause, this._onPauseParams)
            }
        },
        reflect: function(i) {
            if (i == null) {
                i = true
            }
            this._reflect = i;
            this.special = true;
            return this
        },
        repeat: function(i) {
            if (i == null) {
                i = -1
            }
            this._repeat = i;
            return this
        },
        resume: function() {
            if (this._onResume != null) {
                this.callMethod(this._onResume, this._onResumeParams)
            }
        },
        reverse: function(i) {
            if (i == null) {
                i = true
            }
            this._reverse = i;
            this.special = true;
            return this
        },
        smartRotation: function(i) {
            if (i == null) {
                i = true
            }
            this._smartRotation = i;
            this.special = true;
            return this
        },
        snapping: function(i) {
            if (i == null) {
                i = true
            }
            this._snapping = i;
            this.special = true;
            return this
        },
        stop: function(q, i, i1) {},
        __class__: gx
    };
    var cy = function(i1, q, i) {
        this.active = true;
        this.propertyDetails = [];
        this.sendChange = false;
        this.paused = false;
        this.cacheVisible = false;
        this.initialized = false;
        this.setVisible = false;
        this.toggleVisible = false;
        this.startTime = ns.getTimer() / 1000;
        gx.call(this, i1, q, i);
        if (!cy.addedEvent) {
            cy.addedEvent = true;
            ns.current.stage.addEventListener("enterFrame", cy.stage_onEnterFrame)
        }
    };
    nt["motion.actuators.SimpleActuator"] = cy;
    cy.__name__ = ["motion", "actuators", "SimpleActuator"];
    cy.stage_onEnterFrame = function(qY) {
        var js = ns.getTimer() / 1000;
        var q0;
        var q = 0;
        var i2 = false;
        var qZ = 0;
        var q1 = cy.actuatorsLength;
        while (qZ < q1) {
            var i1 = qZ++;
            q0 = cy.actuators[q];
            if (q0 != null && q0.active) {
                if (js >= q0.timeOffset) {
                    q0.update(js)
                }
                q++
            } else {
                cy.actuators.splice(q, 1);
                --cy.actuatorsLength
            }
        }
    };
    cy.__super__ = gx;
    cy.prototype = lP(gx.prototype, {
        setField_openfl_geom_Transform: function(i1, i, q) {
            if (Object.prototype.hasOwnProperty.call(i1, i)) {
                i1[i] = q
            } else {
                ar.setProperty(i1, i, q)
            }
        },
        setField_motion_actuators_TransformActuator_T: function(i1, i, q) {
            if (Object.prototype.hasOwnProperty.call(i1, i)) {
                i1[i] = q
            } else {
                ar.setProperty(i1, i, q)
            }
        },
        setField_motion_actuators_MotionPathActuator_T: function(i1, i, q) {
            if (Object.prototype.hasOwnProperty.call(i1, i)) {
                i1[i] = q
            } else {
                ar.setProperty(i1, i, q)
            }
        },
        setField_openfl_display_DisplayObject: function(i1, i, q) {
            if (Object.prototype.hasOwnProperty.call(i1, i)) {
                i1[i] = q
            } else {
                ar.setProperty(i1, i, q)
            }
        },
        setField_motion_actuators_SimpleActuator_T: function(i1, i, q) {
            if (Object.prototype.hasOwnProperty.call(i1, i)) {
                i1[i] = q
            } else {
                ar.setProperty(i1, i, q)
            }
        },
        timeOffset: null,
        active: null,
        cacheVisible: null,
        detailsLength: null,
        initialized: null,
        paused: null,
        pauseTime: null,
        propertyDetails: null,
        sendChange: null,
        setVisible: null,
        startTime: null,
        toggleVisible: null,
        autoVisible: function(i) {
            if (i == null) {
                i = true
            }
            this._autoVisible = i;
            if (!i) {
                this.toggleVisible = false;
                if (this.setVisible) {
                    this.setField_motion_actuators_SimpleActuator_T(this.target, "visible", this.cacheVisible)
                }
            }
            return this
        },
        delay: function(i) {
            this._delay = i;
            this.timeOffset = this.startTime + i;
            return this
        },
        getField: function(i1, i) {
            var q = null;
            if (Object.prototype.hasOwnProperty.call(i1, i)) {
                q = ar.field(i1, i)
            } else {
                q = ar.getProperty(i1, i)
            }
            return q
        },
        initialize: function() {
            var i1;
            var q0;
            var qY = 0;
            var js = ar.fields(this.properties);
            while (qY < js.length) {
                var q = js[qY];
                ++qY;
                var qZ = true;
                if (Object.prototype.hasOwnProperty.call(this.target, q) && !(this.target.__properties__ && this.target.__properties__["set_" + q])) {
                    q0 = ar.field(this.target, q)
                } else {
                    qZ = false;
                    q0 = ar.getProperty(this.target, q)
                }
                if (typeof(q0) == "number") {
                    var i2 = this.getField(this.properties, q);
                    if (q0 == null) {
                        q0 = 0
                    }
                    if (i2 == null) {
                        i2 = 0
                    }
                    i1 = new hG(this.target, q, q0, i2 - q0, qZ);
                    this.propertyDetails.push(i1)
                }
            }
            this.detailsLength = this.propertyDetails.length;
            this.initialized = true
        },
        move: function() {
            this.toggleVisible = Object.prototype.hasOwnProperty.call(this.properties, "alpha") && n0.__instanceof(this.target, eH);
            if (this.toggleVisible && this.properties.alpha != 0 && !this.getField(this.target, "visible")) {
                this.setVisible = true;
                this.cacheVisible = this.getField(this.target, "visible");
                this.setField_motion_actuators_SimpleActuator_T(this.target, "visible", true)
            }
            this.timeOffset = this.startTime;
            cy.actuators.push(this);
            ++cy.actuatorsLength
        },
        onUpdate: function(i, q) {
            this._onUpdate = i;
            if (q == null) {
                this._onUpdateParams = []
            } else {
                this._onUpdateParams = q
            }
            this.sendChange = true;
            return this
        },
        pause: function() {
            if (!this.paused) {
                this.paused = true;
                gx.prototype.pause.call(this);
                this.pauseTime = ns.getTimer()
            }
        },
        resume: function() {
            if (this.paused) {
                this.paused = false;
                this.timeOffset += (ns.getTimer() - this.pauseTime) / 1000;
                gx.prototype.resume.call(this)
            }
        },
        setProperty: function(i, q) {
            if (i.isField) {
                i.target[i.propertyName] = q
            } else {
                ar.setProperty(i.target, i.propertyName, q)
            }
        },
        stop: function(i2, q, qZ) {
            if (this.active) {
                if (i2 == null) {
                    this.active = false;
                    if (q) {
                        this.apply()
                    }
                    this.complete(qZ);
                    return
                }
                var qY = 0;
                var js = ar.fields(i2);
                while (qY < js.length) {
                    var i1 = js[qY];
                    ++qY;
                    if (Object.prototype.hasOwnProperty.call(this.properties, i1)) {
                        this.active = false;
                        if (q) {
                            this.apply()
                        }
                        this.complete(qZ);
                        return
                    }
                }
            }
        },
        update: function(js) {
            if (!this.paused) {
                var q;
                var q5;
                var q1;
                var q3 = (js - this.timeOffset) / this.duration;
                if (q3 > 1) {
                    q3 = 1
                }
                if (!this.initialized) {
                    this.initialize()
                }
                if (!this.special) {
                    q5 = this._ease.calculate(q3);
                    var q6 = 0;
                    var q2 = this.detailsLength;
                    while (q6 < q2) {
                        var qZ = q6++;
                        q = this.propertyDetails[qZ];
                        this.setProperty(q, q.start + q.change * q5)
                    }
                } else {
                    if (!this._reverse) {
                        q5 = this._ease.calculate(q3)
                    } else {
                        q5 = this._ease.calculate(1 - q3)
                    }
                    var q7;
                    var q0 = 0;
                    var q4 = this.detailsLength;
                    while (q0 < q4) {
                        var qY = q0++;
                        q = this.propertyDetails[qY];
                        if (this._smartRotation && (q.propertyName == "rotation" || q.propertyName == "rotationX" || q.propertyName == "rotationY" || q.propertyName == "rotationZ")) {
                            var q8 = q.change % 360;
                            if (q8 > 180) {
                                q8 -= 360
                            } else {
                                if (q8 < -180) {
                                    q8 += 360
                                }
                            }
                            q7 = q.start + q8 * q5
                        } else {
                            q7 = q.start + q.change * q5
                        }
                        if (!this._snapping) {
                            if (q.isField) {
                                q.target[q.propertyName] = q7
                            } else {
                                ar.setProperty(q.target, q.propertyName, q7)
                            }
                        } else {
                            this.setProperty(q, Math.round(q7))
                        }
                    }
                }
                if (q3 == 1) {
                    if (this._repeat == 0) {
                        this.active = false;
                        if (this.toggleVisible && this.getField(this.target, "alpha") == 0) {
                            this.setField_motion_actuators_SimpleActuator_T(this.target, "visible", false)
                        }
                        this.complete(true);
                        return
                    } else {
                        if (this._onRepeat != null) {
                            this.callMethod(this._onRepeat, this._onRepeatParams)
                        }
                        if (this._reflect) {
                            this._reverse = !this._reverse
                        }
                        this.startTime = js;
                        this.timeOffset = this.startTime + this._delay;
                        if (this._repeat > 0) {
                            this._repeat--
                        }
                    }
                }
                if (this.sendChange) {
                    this.change()
                }
            }
        },
        __class__: cy
    });
    var gB = function() {};
    nt["motion.easing.Expo"] = gB;
    gB.__name__ = ["motion", "easing", "Expo"];
    gB.__properties__ = {
        get_easeOut: "get_easeOut",
        get_easeInOut: "get_easeInOut",
        get_easeIn: "get_easeIn"
    };
    gB.get_easeIn = function() {
        return new da()
    };
    gB.get_easeInOut = function() {
        return new hK()
    };
    gB.get_easeOut = function() {
        return new fG()
    };
    var ic = function() {};
    nt["motion.easing.IEasing"] = ic;
    ic.__name__ = ["motion", "easing", "IEasing"];
    ic.prototype = {
        calculate: null,
        ease: null,
        __class__: ic
    };
    var fG = function() {};
    nt["motion.easing.ExpoEaseOut"] = fG;
    fG.__name__ = ["motion", "easing", "ExpoEaseOut"];
    fG.__interfaces__ = [ic];
    fG.prototype = {
        calculate: function(i) {
            if (i == 1) {
                return 1
            } else {
                return 1 - Math.pow(2, -10 * i)
            }
        },
        ease: function(q, i, i2, i1) {
            if (q == i1) {
                return i + i2
            } else {
                return i2 * (1 - Math.pow(2, -10 * q / i1)) + i
            }
        },
        __class__: fG
    };
    var d3 = function() {};
    nt["motion.Actuate"] = d3;
    d3.__name__ = ["motion", "Actuate"];
    d3.apply = function(i2, i, q) {
        d3.stop(i2, i);
        if (q == null) {
            q = d3.defaultActuator
        }
        var i1 = kX.createInstance(q, [i2, 0, i]);
        i1.apply();
        return i1
    };
    d3.effects = function(i1, q, i) {
        if (i == null) {
            i = true
        }
        return new jD(i1, q, i)
    };
    d3.getLibrary = function(q, i) {
        if (i == null) {
            i = true
        }
        if (!(d3.targetLibraries.h.__keys__[q.__id__] != null) && i) {
            d3.targetLibraries.set(q, [])
        }
        return d3.targetLibraries.h[q.__id__]
    };
    d3.isActive = function() {
        var i = false;
        var i1 = d3.targetLibraries.iterator();
        while (i1.hasNext()) {
            var q = i1.next();
            i = true;
            break
        }
        return i
    };
    d3.motionPath = function(i2, i1, q, i) {
        if (i == null) {
            i = true
        }
        return d3.tween(i2, i1, q, i, j6)
    };
    d3.pause = function(i2) {
        if (n0.__instanceof(i2, hD)) {
            var i1 = i2;
            i1.pause()
        } else {
            var q = d3.getLibrary(i2, false);
            if (q != null) {
                var js = 0;
                while (js < q.length) {
                    var i = q[js];
                    ++js;
                    i.pause()
                }
            }
        }
    };
    d3.pauseAll = function() {
        var q = d3.targetLibraries.iterator();
        while (q.hasNext()) {
            var i = q.next();
            var i2 = 0;
            while (i2 < i.length) {
                var i1 = i[i2];
                ++i2;
                i1.pause()
            }
        }
    };
    d3.reset = function() {
        var i2 = d3.targetLibraries.iterator();
        while (i2.hasNext()) {
            var q = i2.next();
            var i1 = q.length - 1;
            while (i1 >= 0) {
                q[i1].stop(null, false, false);
                i1--
            }
        }
        d3.targetLibraries = new qS()
    };
    d3.resume = function(i2) {
        if (n0.__instanceof(i2, hD)) {
            var i1 = i2;
            i1.resume()
        } else {
            var q = d3.getLibrary(i2, false);
            if (q != null) {
                var js = 0;
                while (js < q.length) {
                    var i = q[js];
                    ++js;
                    i.resume()
                }
            }
        }
    };
    d3.resumeAll = function() {
        var q = d3.targetLibraries.iterator();
        while (q.hasNext()) {
            var i = q.next();
            var i2 = 0;
            while (i2 < i.length) {
                var i1 = i[i2];
                ++i2;
                i1.resume()
            }
        }
    };
    d3.stop = function(qZ, q0, i1, q5) {
        if (q5 == null) {
            q5 = true
        }
        if (i1 == null) {
            i1 = false
        }
        if (qZ != null) {
            if (n0.__instanceof(qZ, hD)) {
                var q = qZ;
                q.stop(null, i1, q5)
            } else {
                var q2 = d3.getLibrary(qZ, false);
                if (q2 != null) {
                    if (typeof(q0) == "string") {
                        var q4 = {};
                        ar.setField(q4, q0, null);
                        q0 = q4
                    } else {
                        if ((q0 instanceof Array) && q0.__enum__ == null) {
                            var i2 = {};
                            var qY = 0;
                            var q1;
                            q1 = n0.__cast(q0, Array);
                            while (qY < q1.length) {
                                var q3 = q1[qY];
                                ++qY;
                                ar.setField(i2, q3, null)
                            }
                            q0 = i2
                        }
                    }
                    var js = q2.length - 1;
                    while (js >= 0) {
                        q2[js].stop(q0, i1, q5);
                        js--
                    }
                }
            }
        }
    };
    d3.timer = function(q, i) {
        return d3.tween(new fu(0), q, new fu(1), false, i)
    };
    d3.transform = function(i1, q, i) {
        if (i == null) {
            i = true
        }
        if (q == null) {
            q = 0
        }
        return new o4(i1, q, i)
    };
    d3.tween = function(q1, q0, js, i1, qY) {
        if (i1 == null) {
            i1 = true
        }
        if (q1 != null) {
            if (q0 > 0) {
                if (qY == null) {
                    qY = d3.defaultActuator
                }
                var qZ = kX.createInstance(qY, [q1, q0, js]);
                var q = d3.getLibrary(qZ.target);
                if (i1) {
                    var i2 = q.length - 1;
                    while (i2 >= 0) {
                        q[i2].stop(qZ.properties, false, false);
                        i2--
                    }
                    q = d3.getLibrary(qZ.target)
                }
                q.push(qZ);
                qZ.move();
                return qZ
            } else {
                return d3.apply(q1, js, qY)
            }
        }
        return null
    };
    d3.unload = function(q) {
        var i = q.target;
        if (d3.targetLibraries.h.__keys__[i.__id__] != null) {
            cj.remove(d3.targetLibraries.h[i.__id__], q);
            if (d3.targetLibraries.h[i.__id__].length == 0) {
                d3.targetLibraries.remove(i)
            }
        }
    };
    d3.update = function(js, i2, qY, i, q) {
        if (q == null) {
            q = true
        }
        var i1 = {
            start: qY,
            end: i
        };
        return d3.tween(js, i2, i1, q, lQ)
    };
    var jD = function(i1, q, i) {
        this.target = i1;
        this.duration = q;
        this.overwrite = i
    };
    nt["motion._Actuate.EffectsOptions"] = jD;
    jD.__name__ = ["motion", "_Actuate", "EffectsOptions"];
    jD.prototype = {
        duration: null,
        overwrite: null,
        target: null,
        filter: function(i, q) {
            q.filter = i;
            return d3.tween(this.target, this.duration, q, this.overwrite, aL)
        },
        __class__: jD
    };
    var o4 = function(i1, q, i) {
        this.target = i1;
        this.duration = q;
        this.overwrite = i
    };
    nt["motion._Actuate.TransformOptions"] = o4;
    o4.__name__ = ["motion", "_Actuate", "TransformOptions"];
    o4.prototype = {
        duration: null,
        overwrite: null,
        target: null,
        color: function(q, i2, i1) {
            if (i2 == null) {
                i2 = 1
            }
            if (q == null) {
                q = 0
            }
            var i = {
                colorValue: q,
                colorStrength: i2
            };
            if (i1 != null) {
                i.colorAlpha = i1
            }
            return d3.tween(this.target, this.duration, i, this.overwrite, mD)
        },
        sound: function(q, i1) {
            var i = {};
            if (q != null) {
                i.soundVolume = q
            }
            if (i1 != null) {
                i.soundPan = i1
            }
            return d3.tween(this.target, this.duration, i, this.overwrite, mD)
        },
        __class__: o4
    };
    var fu = function(i) {
        this.progress = i
    };
    nt["motion._Actuate.TweenTimer"] = fu;
    fu.__name__ = ["motion", "_Actuate", "TweenTimer"];
    fu.prototype = {
        progress: null,
        __class__: fu
    };
    var gA = function() {
        this._x = new en();
        this._y = new en();
        this._rotation = null
    };
    nt["motion.MotionPath"] = gA;
    gA.__name__ = ["motion", "MotionPath"];
    gA.prototype = {
        rotation: null,
        x: null,
        y: null,
        _rotation: null,
        _x: null,
        _y: null,
        bezier: function(i, js, i1, q, i2) {
            if (i2 == null) {
                i2 = 1
            }
            this._x.addPath(new fv(i, i1, i2));
            this._y.addPath(new fv(js, q, i2));
            return this
        },
        line: function(i, i1, q) {
            if (q == null) {
                q = 1
            }
            this._x.addPath(new ai(i, q));
            this._y.addPath(new ai(i1, q));
            return this
        },
        get_rotation: function() {
            if (this._rotation == null) {
                this._rotation = new eJ(this._x, this._y)
            }
            return this._rotation
        },
        get_x: function() {
            return this._x
        },
        get_y: function() {
            return this._y
        },
        __class__: gA,
        __properties__: {
            get_y: "get_y",
            get_x: "get_x",
            get_rotation: "get_rotation"
        }
    };
    var ji = function() {};
    nt["motion.IComponentPath"] = ji;
    ji.__name__ = ["motion", "IComponentPath"];
    ji.prototype = {
        get_end: null,
        end: null,
        start: null,
        calculate: null,
        __class__: ji,
        __properties__: {
            get_end: "get_end"
        }
    };
    var en = function() {
        this.paths = [];
        this.start = 0;
        this.totalStrength = 0
    };
    nt["motion.ComponentPath"] = en;
    en.__name__ = ["motion", "ComponentPath"];
    en.__interfaces__ = [ji];
    en.prototype = {
        start: null,
        end: null,
        paths: null,
        totalStrength: null,
        addPath: function(i) {
            this.paths.push(i);
            this.totalStrength += i.strength
        },
        calculate: function(i) {
            if (this.paths.length == 1) {
                return this.paths[0].calculate(this.start, i)
            } else {
                var q = i * this.totalStrength;
                var qY = this.start;
                var js = 0;
                var i1 = this.paths;
                while (js < i1.length) {
                    var i2 = i1[js];
                    ++js;
                    if (q > i2.strength) {
                        q -= i2.strength;
                        qY = i2.end
                    } else {
                        return i2.calculate(qY, q / i2.strength)
                    }
                }
            }
            return 0
        },
        get_end: function() {
            if (this.paths.length > 0) {
                var i = this.paths[this.paths.length - 1];
                return i.end
            } else {
                return this.start
            }
        },
        __class__: en,
        __properties__: {
            get_end: "get_end"
        }
    };
    var fv = function(i, q, i1) {
        this.end = i;
        this.control = q;
        this.strength = i1
    };
    nt["motion.BezierPath"] = fv;
    fv.__name__ = ["motion", "BezierPath"];
    fv.prototype = {
        control: null,
        end: null,
        strength: null,
        calculate: function(q, i) {
            return (1 - i) * (1 - i) * q + 2 * (1 - i) * i * this.control + i * i * this.end
        },
        __class__: fv
    };
    var ai = function(i, q) {
        fv.call(this, i, 0, q)
    };
    nt["motion.LinearPath"] = ai;
    ai.__name__ = ["motion", "LinearPath"];
    ai.__super__ = fv;
    ai.prototype = lP(fv.prototype, {
        calculate: function(q, i) {
            return q + i * (this.end - q)
        },
        __class__: ai
    });
    var eJ = function(i, q) {
        this.step = 0.01;
        this._x = i;
        this._y = q;
        this.offset = 0;
        this.start = this.calculate(0)
    };
    nt["motion.RotationPath"] = eJ;
    eJ.__name__ = ["motion", "RotationPath"];
    eJ.__interfaces__ = [ji];
    eJ.prototype = {
        end: null,
        offset: null,
        start: null,
        step: null,
        _x: null,
        _y: null,
        calculate: function(i1) {
            var q = this._x.calculate(i1) - this._x.calculate(i1 + this.step);
            var i = this._y.calculate(i1) - this._y.calculate(i1 + this.step);
            var i2 = Math.atan2(i, q) * (180 / Math.PI);
            i2 = (i2 + this.offset) % 360;
            return i2
        },
        get_end: function() {
            return this.calculate(1)
        },
        __class__: eJ,
        __properties__: {
            get_end: "get_end"
        }
    };
    var aL = function(js, i2, i) {
        this.filterIndex = -1;
        cy.call(this, js, i2, i);
        if (n0.__instanceof(i.filter, nq)) {
            this.filterClass = i.filter;
            if (js.get_filters().length == 0) {
                js.set_filters([kX.createInstance(this.filterClass, [])])
            }
            var qY = 0;
            var i1 = js.get_filters();
            while (qY < i1.length) {
                var q = i1[qY];
                ++qY;
                if (n0.__instanceof(q, this.filterClass)) {
                    this.filter = q
                }
            }
        } else {
            this.filterIndex = i.filter;
            this.filter = js.get_filters()[this.filterIndex]
        }
    };
    nt["motion.actuators.FilterActuator"] = aL;
    aL.__name__ = ["motion", "actuators", "FilterActuator"];
    aL.__super__ = cy;
    aL.prototype = lP(cy.prototype, {
        filter: null,
        filterClass: null,
        filterIndex: null,
        apply: function() {
            var i2 = 0;
            var i1 = ar.fields(this.properties);
            while (i2 < i1.length) {
                var i = i1[i2];
                ++i2;
                if (i != "filter") {
                    ar.setField(this.filter, i, ar.field(this.properties, i))
                }
            }
            var q = this.getField(this.target, "filters");
            ar.setField(q, this.properties.filter, this.filter);
            this.setField_openfl_display_DisplayObject(this.target, "filters", q)
        },
        initialize: function() {
            var q;
            var js;
            var i2 = 0;
            var i1 = ar.fields(this.properties);
            while (i2 < i1.length) {
                var i = i1[i2];
                ++i2;
                if (i != "filter") {
                    js = this.getField(this.filter, i);
                    q = new hG(this.filter, i, js, ar.field(this.properties, i) - js);
                    this.propertyDetails.push(q)
                }
            }
            this.detailsLength = this.propertyDetails.length;
            this.initialized = true
        },
        update: function(i2) {
            cy.prototype.update.call(this, i2);
            var i1 = this.target.get_filters();
            if (this.filterIndex > -1) {
                ar.setField(i1, this.properties.filter, this.filter)
            } else {
                var js = 0;
                var qY = i1.length;
                while (js < qY) {
                    var q = js++;
                    if (n0.__instanceof(i1[q], this.filterClass)) {
                        i1[q] = this.filter
                    }
                }
            }
            this.setField_openfl_display_DisplayObject(this.target, "filters", i1)
        },
        __class__: aL
    });
    var lQ = function(qY, js, i1) {
        this.currentParameters = [];
        this.tweenProperties = {};
        cy.call(this, qY, js, i1);
        if (!Object.prototype.hasOwnProperty.call(i1, "start")) {
            this.properties.start = []
        }
        if (!Object.prototype.hasOwnProperty.call(i1, "end")) {
            this.properties.end = this.properties.start
        }
        var i2 = 0;
        var qZ = this.properties.start.length;
        while (i2 < qZ) {
            var q = i2++;
            this.currentParameters.push(this.properties.start[q])
        }
    };
    nt["motion.actuators.MethodActuator"] = lQ;
    lQ.__name__ = ["motion", "actuators", "MethodActuator"];
    lQ.__super__ = cy;
    lQ.prototype = lP(cy.prototype, {
        currentParameters: null,
        tweenProperties: null,
        apply: function() {
            this.callMethod(this.target, this.properties.end)
        },
        complete: function(js) {
            if (js == null) {
                js = true
            }
            var i1 = 0;
            var i2 = this.properties.start.length;
            while (i1 < i2) {
                var q = i1++;
                this.currentParameters[q] = ar.field(this.tweenProperties, "param" + q)
            }
            this.callMethod(this.target, this.currentParameters);
            cy.prototype.complete.call(this, js)
        },
        initialize: function() {
            var i2;
            var q;
            var qZ;
            var js = 0;
            var qY = this.properties.start.length;
            while (js < qY) {
                var i1 = js++;
                q = "param" + i1;
                qZ = this.properties.start[i1];
                this.tweenProperties[q] = qZ;
                if (typeof(qZ) == "number" || ((qZ | 0) === qZ)) {
                    i2 = new hG(this.tweenProperties, q, qZ, this.properties.end[i1] - qZ);
                    this.propertyDetails.push(i2)
                }
            }
            this.detailsLength = this.propertyDetails.length;
            this.initialized = true
        },
        update: function(i1) {
            cy.prototype.update.call(this, i1);
            if (this.active && !this.paused) {
                var i2 = 0;
                var js = this.properties.start.length;
                while (i2 < js) {
                    var q = i2++;
                    this.currentParameters[q] = ar.field(this.tweenProperties, "param" + q)
                }
                this.callMethod(this.target, this.currentParameters)
            }
        },
        __class__: lQ
    });
    var j6 = function(i1, q, i) {
        cy.call(this, i1, q, i)
    };
    nt["motion.actuators.MotionPathActuator"] = j6;
    j6.__name__ = ["motion", "actuators", "MotionPathActuator"];
    j6.__super__ = cy;
    j6.prototype = lP(cy.prototype, {
        apply: function() {
            var i1 = 0;
            var q = ar.fields(this.properties);
            while (i1 < q.length) {
                var i = q[i1];
                ++i1;
                if (Object.prototype.hasOwnProperty.call(this.target, i)) {
                    ar.setField(this.target, i, (n0.__cast(ar.field(this.properties, i), ji)).get_end())
                } else {
                    ar.setProperty(this.target, i, (n0.__cast(ar.field(this.properties, i), ji)).get_end())
                }
            }
        },
        initialize: function() {
            var q;
            var i2;
            var js = 0;
            var i1 = ar.fields(this.properties);
            while (js < i1.length) {
                var i = i1[js];
                ++js;
                i2 = n0.__cast(ar.field(this.properties, i), ji);
                if (i2 != null) {
                    var qY = true;
                    if (Object.prototype.hasOwnProperty.call(this.target, i)) {
                        i2.start = ar.field(this.target, i)
                    } else {
                        qY = false;
                        i2.start = ar.getProperty(this.target, i)
                    }
                    q = new t(this.target, i, i2, qY);
                    this.propertyDetails.push(q)
                }
            }
            this.detailsLength = this.propertyDetails.length;
            this.initialized = true
        },
        update: function(q) {
            if (!this.paused) {
                var i;
                var qZ;
                var js = (q - this.timeOffset) / this.duration;
                if (js > 1) {
                    js = 1
                }
                if (!this.initialized) {
                    this.initialize()
                }
                if (!this.special) {
                    qZ = this._ease.calculate(js);
                    var i2 = 0;
                    var q0 = this.propertyDetails;
                    while (i2 < q0.length) {
                        var q3 = q0[i2];
                        ++i2;
                        if (q3.isField) {
                            ar.setField(q3.target, q3.propertyName, (n0.__cast(q3, t)).path.calculate(qZ))
                        } else {
                            ar.setProperty(q3.target, q3.propertyName, (n0.__cast(q3, t)).path.calculate(qZ))
                        }
                    }
                } else {
                    if (!this._reverse) {
                        qZ = this._ease.calculate(js)
                    } else {
                        qZ = this._ease.calculate(1 - js)
                    }
                    var q1;
                    var qY = 0;
                    var i1 = this.propertyDetails;
                    while (qY < i1.length) {
                        var q2 = i1[qY];
                        ++qY;
                        if (!this._snapping) {
                            if (q2.isField) {
                                ar.setField(q2.target, q2.propertyName, (n0.__cast(q2, t)).path.calculate(qZ))
                            } else {
                                ar.setProperty(q2.target, q2.propertyName, (n0.__cast(q2, t)).path.calculate(qZ))
                            }
                        } else {
                            if (q2.isField) {
                                ar.setField(q2.target, q2.propertyName, Math.round((n0.__cast(q2, t)).path.calculate(qZ)))
                            } else {
                                ar.setProperty(q2.target, q2.propertyName, Math.round((n0.__cast(q2, t)).path.calculate(qZ)))
                            }
                        }
                    }
                }
                if (js == 1) {
                    if (this._repeat == 0) {
                        this.active = false;
                        if (this.toggleVisible && this.getField(this.target, "alpha") == 0) {
                            this.setField_motion_actuators_MotionPathActuator_T(this.target, "visible", false)
                        }
                        this.complete(true);
                        return
                    } else {
                        if (this._onRepeat != null) {
                            this.callMethod(this._onRepeat, this._onRepeatParams)
                        }
                        if (this._reflect) {
                            this._reverse = !this._reverse
                        }
                        this.startTime = q;
                        this.timeOffset = this.startTime + this._delay;
                        if (this._repeat > 0) {
                            this._repeat--
                        }
                    }
                }
                if (this.sendChange) {
                    this.change()
                }
            }
        },
        __class__: j6
    });
    var hG = function(q, i, js, i2, i1) {
        if (i1 == null) {
            i1 = true
        }
        this.target = q;
        this.propertyName = i;
        this.start = js;
        this.change = i2;
        this.isField = i1
    };
    nt["motion.actuators.PropertyDetails"] = hG;
    hG.__name__ = ["motion", "actuators", "PropertyDetails"];
    hG.prototype = {
        change: null,
        isField: null,
        propertyName: null,
        start: null,
        target: null,
        __class__: hG
    };
    var t = function(i1, i, q, i2) {
        if (i2 == null) {
            i2 = true
        }
        hG.call(this, i1, i, 0, 0, i2);
        this.path = q
    };
    nt["motion.actuators.PropertyPathDetails"] = t;
    t.__name__ = ["motion", "actuators", "PropertyPathDetails"];
    t.__super__ = hG;
    t.prototype = lP(hG.prototype, {
        path: null,
        __class__: t
    });
    var mD = function(i1, q, i) {
        cy.call(this, i1, q, i)
    };
    nt["motion.actuators.TransformActuator"] = mD;
    mD.__name__ = ["motion", "actuators", "TransformActuator"];
    mD.__super__ = cy;
    mD.prototype = lP(cy.prototype, {
        endColorTransform: null,
        endSoundTransform: null,
        tweenColorTransform: null,
        tweenSoundTransform: null,
        apply: function() {
            this.initialize();
            if (this.endColorTransform != null) {
                var i = this.getField(this.target, "transform");
                this.setField_openfl_geom_Transform(i, "colorTransform", this.endColorTransform)
            }
            if (this.endSoundTransform != null) {
                this.setField_motion_actuators_TransformActuator_T(this.target, "soundTransform", this.endSoundTransform)
            }
        },
        initialize: function() {
            if (Object.prototype.hasOwnProperty.call(this.properties, "colorValue") && n0.__instanceof(this.target, eH)) {
                this.initializeColor()
            }
            if (Object.prototype.hasOwnProperty.call(this.properties, "soundVolume") || Object.prototype.hasOwnProperty.call(this.properties, "soundPan")) {
                this.initializeSound()
            }
            this.detailsLength = this.propertyDetails.length;
            this.initialized = true
        },
        initializeColor: function() {
            this.endColorTransform = new n();
            var qZ = this.properties.colorValue;
            var i1 = this.properties.colorStrength;
            if (i1 < 1) {
                var q3;
                var q0;
                if (i1 < 0.5) {
                    q3 = 1;
                    q0 = i1 * 2
                } else {
                    q3 = 1 - (i1 - 0.5) * 2;
                    q0 = 1
                }
                this.endColorTransform.redMultiplier = q3;
                this.endColorTransform.greenMultiplier = q3;
                this.endColorTransform.blueMultiplier = q3;
                this.endColorTransform.redOffset = q0 * (qZ >> 16 & 255);
                this.endColorTransform.greenOffset = q0 * (qZ >> 8 & 255);
                this.endColorTransform.blueOffset = q0 * (qZ & 255)
            } else {
                this.endColorTransform.redMultiplier = 0;
                this.endColorTransform.greenMultiplier = 0;
                this.endColorTransform.blueMultiplier = 0;
                this.endColorTransform.redOffset = qZ >> 16 & 255;
                this.endColorTransform.greenOffset = qZ >> 8 & 255;
                this.endColorTransform.blueOffset = qZ & 255
            }
            var qY = ["redMultiplier", "greenMultiplier", "blueMultiplier", "redOffset", "greenOffset", "blueOffset"];
            if (Object.prototype.hasOwnProperty.call(this.properties, "colorAlpha")) {
                this.endColorTransform.alphaMultiplier = this.properties.colorAlpha;
                qY.push("alphaMultiplier")
            } else {
                this.endColorTransform.alphaMultiplier = this.getField(this.target, "alpha")
            }
            var js = this.getField(this.target, "transform");
            var i2 = this.getField(js, "colorTransform");
            this.tweenColorTransform = new n();
            var i;
            var q;
            var q1 = 0;
            while (q1 < qY.length) {
                var q2 = qY[q1];
                ++q1;
                q = this.getField(i2, q2);
                i = new hG(this.tweenColorTransform, q2, q, this.getField(this.endColorTransform, q2) - q);
                this.propertyDetails.push(i)
            }
        },
        initializeSound: function() {
            if (this.getField(this.target, "soundTransform") == null) {
                this.setField_motion_actuators_TransformActuator_T(this.target, "soundTransform", new nr())
            }
            var i = this.getField(this.target, "soundTransform");
            this.endSoundTransform = this.getField(this.target, "soundTransform");
            this.tweenSoundTransform = new nr();
            if (Object.prototype.hasOwnProperty.call(this.properties, "soundVolume")) {
                this.endSoundTransform.volume = this.properties.soundVolume;
                this.propertyDetails.push(new hG(this.tweenSoundTransform, "volume", i.volume, this.endSoundTransform.volume - i.volume))
            }
            if (Object.prototype.hasOwnProperty.call(this.properties, "soundPan")) {
                this.endSoundTransform.pan = this.properties.soundPan;
                this.propertyDetails.push(new hG(this.tweenSoundTransform, "pan", i.pan, this.endSoundTransform.pan - i.pan))
            }
        },
        update: function(q) {
            cy.prototype.update.call(this, q);
            if (this.endColorTransform != null) {
                var i = this.getField(this.target, "transform");
                this.setField_openfl_geom_Transform(i, "colorTransform", this.tweenColorTransform)
            }
            if (this.endSoundTransform != null) {
                this.setField_motion_actuators_TransformActuator_T(this.target, "soundTransform", this.tweenSoundTransform)
            }
        },
        __class__: mD
    });
    var b6 = function() {};
    nt["motion.easing.Elastic"] = b6;
    b6.__name__ = ["motion", "easing", "Elastic"];
    b6.__properties__ = {
        get_easeOut: "get_easeOut",
        get_easeInOut: "get_easeInOut",
        get_easeIn: "get_easeIn"
    };
    b6.get_easeIn = function() {
        return new qc(0.1, 0.4)
    };
    b6.get_easeInOut = function() {
        return new oj(0.1, 0.4)
    };
    b6.get_easeOut = function() {
        return new n5(0.1, 0.4)
    };
    var qc = function(i, q) {
        this.a = i;
        this.p = q
    };
    nt["motion.easing.ElasticEaseIn"] = qc;
    qc.__name__ = ["motion", "easing", "ElasticEaseIn"];
    qc.__interfaces__ = [ic];
    qc.prototype = {
        a: null,
        p: null,
        calculate: function(i) {
            if (i == 0) {
                return 0
            }
            if (i == 1) {
                return 1
            }
            var q;
            if (this.a < 1) {
                this.a = 1;
                q = this.p / 4
            } else {
                q = this.p / (2 * Math.PI) * Math.asin(1 / this.a)
            }
            return -(this.a * Math.pow(2, 10 * (i -= 1)) * Math.sin((i - q) * (2 * Math.PI) / this.p))
        },
        ease: function(q, i, js, i2) {
            if (q == 0) {
                return i
            }
            if ((q /= i2) == 1) {
                return i + js
            }
            var i1;
            if (this.a < Math.abs(js)) {
                this.a = js;
                i1 = this.p / 4
            } else {
                i1 = this.p / (2 * Math.PI) * Math.asin(js / this.a)
            }
            return -(this.a * Math.pow(2, 10 * (q -= 1)) * Math.sin((q * i2 - i1) * (2 * Math.PI) / this.p)) + i
        },
        __class__: qc
    };
    var oj = function(i, q) {
        this.a = i;
        this.p = q
    };
    nt["motion.easing.ElasticEaseInOut"] = oj;
    oj.__name__ = ["motion", "easing", "ElasticEaseInOut"];
    oj.__interfaces__ = [ic];
    oj.prototype = {
        a: null,
        p: null,
        calculate: function(q) {
            if (q == 0) {
                return 0
            }
            if ((q /= 0.5) == 2) {
                return 1
            }
            var i2 = 0.44999999999999996;
            var i = 1;
            var i1 = i2 / 4;
            if (q < 1) {
                return -0.5 * (Math.pow(2, 10 * (q -= 1)) * Math.sin((q - i1) * (2 * Math.PI) / i2))
            }
            return Math.pow(2, -10 * (q -= 1)) * Math.sin((q - i1) * (2 * Math.PI) / i2) * 0.5 + 1
        },
        ease: function(q, i, js, i2) {
            if (q == 0) {
                return i
            }
            if ((q /= i2 / 2) == 2) {
                return i + js
            }
            var i1;
            if (this.a < Math.abs(js)) {
                this.a = js;
                i1 = this.p / 4
            } else {
                i1 = this.p / (2 * Math.PI) * Math.asin(js / this.a)
            }
            if (q < 1) {
                return -0.5 * (this.a * Math.pow(2, 10 * (q -= 1)) * Math.sin((q * i2 - i1) * (2 * Math.PI) / this.p)) + i
            }
            return this.a * Math.pow(2, -10 * (q -= 1)) * Math.sin((q * i2 - i1) * (2 * Math.PI) / this.p) * 0.5 + js + i
        },
        __class__: oj
    };
    var n5 = function(i, q) {
        this.a = i;
        this.p = q
    };
    nt["motion.easing.ElasticEaseOut"] = n5;
    n5.__name__ = ["motion", "easing", "ElasticEaseOut"];
    n5.__interfaces__ = [ic];
    n5.prototype = {
        a: null,
        p: null,
        calculate: function(i) {
            if (i == 0) {
                return 0
            }
            if (i == 1) {
                return 1
            }
            var q;
            if (this.a < 1) {
                this.a = 1;
                q = this.p / 4
            } else {
                q = this.p / (2 * Math.PI) * Math.asin(1 / this.a)
            }
            return this.a * Math.pow(2, -10 * i) * Math.sin((i - q) * (2 * Math.PI) / this.p) + 1
        },
        ease: function(q, i, js, i2) {
            if (q == 0) {
                return i
            }
            if ((q /= i2) == 1) {
                return i + js
            }
            var i1;
            if (this.a < Math.abs(js)) {
                this.a = js;
                i1 = this.p / 4
            } else {
                i1 = this.p / (2 * Math.PI) * Math.asin(js / this.a)
            }
            return this.a * Math.pow(2, -10 * q) * Math.sin((q * i2 - i1) * (2 * Math.PI) / this.p) + js + i
        },
        __class__: n5
    };
    var da = function() {};
    nt["motion.easing.ExpoEaseIn"] = da;
    da.__name__ = ["motion", "easing", "ExpoEaseIn"];
    da.__interfaces__ = [ic];
    da.prototype = {
        calculate: function(i) {
            if (i == 0) {
                return 0
            } else {
                return Math.pow(2, 10 * (i - 1))
            }
        },
        ease: function(q, i, i2, i1) {
            if (q == 0) {
                return i
            } else {
                return i2 * Math.pow(2, 10 * (q / i1 - 1)) + i
            }
        },
        __class__: da
    };
    var hK = function() {};
    nt["motion.easing.ExpoEaseInOut"] = hK;
    hK.__name__ = ["motion", "easing", "ExpoEaseInOut"];
    hK.__interfaces__ = [ic];
    hK.prototype = {
        calculate: function(i) {
            if (i == 0) {
                return 0
            }
            if (i == 1) {
                return 1
            }
            if ((i /= 0.5) < 1) {
                return 0.5 * Math.pow(2, 10 * (i - 1))
            }
            return 0.5 * (2 - Math.pow(2, -10 * --i))
        },
        ease: function(q, i, i2, i1) {
            if (q == 0) {
                return i
            }
            if (q == i1) {
                return i + i2
            }
            if ((q /= i1 / 2) < 1) {
                return i2 / 2 * Math.pow(2, 10 * (q - 1)) + i
            }
            return i2 / 2 * (2 - Math.pow(2, -10 * --q)) + i
        },
        __class__: hK
    };
    var gQ = function() {};
    nt["motion.easing.Linear"] = gQ;
    gQ.__name__ = ["motion", "easing", "Linear"];
    gQ.__properties__ = {
        get_easeNone: "get_easeNone"
    };
    gQ.get_easeNone = function() {
        return new pV()
    };
    var pV = function() {};
    nt["motion.easing.LinearEaseNone"] = pV;
    pV.__name__ = ["motion", "easing", "LinearEaseNone"];
    pV.__interfaces__ = [ic];
    pV.prototype = {
        calculate: function(i) {
            return i
        },
        ease: function(q, i, i2, i1) {
            return i2 * q / i1 + i
        },
        __class__: pV
    };
    var qr = function(q, i) {
        go.call(this, [q, i])
    };
    nt["msignal.Signal2"] = qr;
    qr.__name__ = ["msignal", "Signal2"];
    qr.__super__ = go;
    qr.prototype = lP(go.prototype, {
        dispatch: function(q, i) {
            var i1 = this.slots;
            while (i1.nonEmpty) {
                i1.head.execute(q, i);
                i1 = i1.tail
            }
        },
        createSlot: function(i1, q, i) {
            if (i == null) {
                i = 0
            }
            if (q == null) {
                q = false
            }
            return new dd(this, i1, q, i)
        },
        __class__: qr
    });
    var id = function(i2, i1, q, i) {
        if (i == null) {
            i = 0
        }
        if (q == null) {
            q = false
        }
        this.signal = i2;
        this.set_listener(i1);
        this.once = q;
        this.priority = i;
        this.enabled = true
    };
    nt["msignal.Slot"] = id;
    id.__name__ = ["msignal", "Slot"];
    id.prototype = {
        listener: null,
        once: null,
        priority: null,
        enabled: null,
        signal: null,
        remove: function() {
            this.signal.remove(this.listener)
        },
        set_listener: function(i) {
            if (i == null) {
                throw new nM("listener cannot be null")
            }
            return this.listener = i
        },
        __class__: id,
        __properties__: {
            set_listener: "set_listener"
        }
    };
    var dg = function(i2, i1, q, i) {
        if (i == null) {
            i = 0
        }
        if (q == null) {
            q = false
        }
        id.call(this, i2, i1, q, i)
    };
    nt["msignal.Slot0"] = dg;
    dg.__name__ = ["msignal", "Slot0"];
    dg.__super__ = id;
    dg.prototype = lP(id.prototype, {
        execute: function() {
            if (!this.enabled) {
                return
            }
            if (this.once) {
                this.remove()
            }
            this.listener()
        },
        __class__: dg
    });
    var de = function(i2, i1, q, i) {
        if (i == null) {
            i = 0
        }
        if (q == null) {
            q = false
        }
        id.call(this, i2, i1, q, i)
    };
    nt["msignal.Slot1"] = de;
    de.__name__ = ["msignal", "Slot1"];
    de.__super__ = id;
    de.prototype = lP(id.prototype, {
        param: null,
        execute: function(i) {
            if (!this.enabled) {
                return
            }
            if (this.once) {
                this.remove()
            }
            if (this.param != null) {
                i = this.param
            }
            this.listener(i)
        },
        __class__: de
    });
    var dd = function(i2, i1, q, i) {
        if (i == null) {
            i = 0
        }
        if (q == null) {
            q = false
        }
        id.call(this, i2, i1, q, i)
    };
    nt["msignal.Slot2"] = dd;
    dd.__name__ = ["msignal", "Slot2"];
    dd.__super__ = id;
    dd.prototype = lP(id.prototype, {
        param1: null,
        param2: null,
        execute: function(q, i) {
            if (!this.enabled) {
                return
            }
            if (this.once) {
                this.remove()
            }
            if (this.param1 != null) {
                q = this.param1
            }
            if (this.param2 != null) {
                i = this.param2
            }
            this.listener(q, i)
        },
        __class__: dd
    });
    var hA = function() {
        this._commands = new io()
    };
    nt["oaktree.ext.commands.Commands"] = hA;
    hA.__name__ = ["oaktree", "ext", "commands", "Commands"];
    hA.prototype = {
        _commands: null,
        initialize: function(i) {
            var i1 = 0;
            while (i1 < i.length) {
                var q = i[i1];
                ++i1;
                this._commands.set(q.event, q);
                this.addCommand(q)
            }
        },
        addCommand: function(i) {
            px.events.addEventListener(i.event, oT(this, this.handleCommandEvent))
        },
        removeCommand: function(i) {
            px.events.removeEventListener(i.event, oT(this, this.handleCommandEvent))
        },
        handleCommandEvent: function(q) {
            var i2 = this._commands.get(q.type);
            var i = i2.command;
            var i1 = kX.createEmptyInstance(i);
            i1.execute(q);
            i1 = null;
            if (i2.oneTime) {
                this.removeCommand(i2);
                this._commands.remove(q.type)
            }
        },
        __class__: hA
    };
    var hI = function() {
        this.eventDispatcher = new lR()
    };
    nt["oaktree.core.events.Dispatcher"] = hI;
    hI.__name__ = ["oaktree", "core", "events", "Dispatcher"];
    hI.prototype = {
        eventDispatcher: null,
        dispatchEventWith: function(q, i1, i) {
            if (i == null) {
                i = false
            }
            this.eventDispatcher.dispatchEvent(new oy(q, i1, i))
        },
        addEventListener: function(i1, i2, i, q) {
            if (q == null) {
                q = 0
            }
            if (i == null) {
                i = false
            }
            if (this.eventDispatcher.hasEventListener(i1)) {
                this.eventDispatcher.removeEventListener(i1, i2)
            }
            this.eventDispatcher.addEventListener(i1, i2, i, q)
        },
        removeEventListener: function(i, q) {
            this.eventDispatcher.removeEventListener(i, q)
        },
        fire: function(i, q) {
            this.dispatchEventWith(i, q)
        },
        listen: function(i, q) {
            this.eventDispatcher.addEventListener(i, q)
        },
        unlisten: function(i, q) {
            this.eventDispatcher.removeEventListener(i, q)
        },
        __class__: hI
    };
    var px = function() {};
    nt["oaktree.OakTree"] = px;
    px.__name__ = ["oaktree", "OakTree"];
    px.__properties__ = {
        get_fontName: "get_fontName",
        get_scenes: "get_scenes"
    };
    px.scenes = null;
    px.engine = null;
    px.stage = null;
    px.fontName = null;
    px.fontFile = null;
    px.init = function() {
        if (px._isInitialized) {
            eM.trace("OakTree already initialized", {
                fileName: "OakTree.hx",
                lineNumber: 34,
                className: "oaktree.OakTree",
                methodName: "init"
            });
            return
        }
        ih.store("oaktree-logo", k9.getBitmapData("core-assets/oaktree.png"));
        ih.store("dialog-closebutton", k9.getBitmapData("core-assets/Close.png"));
        ih.store("dialog-closebutton-disabled", k9.getBitmapData("core-assets/Close_disabled.png"));
        px._isInitialized = true
    };
    px.onEngineAddedToStage = function(i, q) {
        px.engine = i;
        px.stage = q
    };
    px.get_fontName = function() {
        return "_sans"
    };
    px.get_scenes = function() {
//        return px.engine.scenes
    };
    var oa = function(i) {
        if (i == null) {
            i = false
        }
        this.standalone = false;
        this.parentEntity = null;
        this._id = oa._idCounter + 1;
        this._components = [];
        this._entities = [];
        this._entitiesToAdd = [];
        this._entitiesToRemove = [];
        this.set_standalone(i);
        if (this.standalone) {
            px.engine.entities.registerEntity(this)
        }
    };
    nt["oaktree.core.Entity"] = oa;
    oa.__name__ = ["oaktree", "core", "Entity"];
    oa.__interfaces__ = [gC, fw];
    oa.prototype = {
        _id: null,
        handle: null,
        scene: null,
        parentEntity: null,
        _components: null,
        _entities: null,
        _entitiesToAdd: null,
        _entitiesToRemove: null,
        dispose: function() {
            this.removeEntitiesFromQueue();
            this._entitiesToRemove = null;
            this.addEntitiesFromQueue();
            this._entitiesToAdd = null;
            var js = 0;
            var i1 = this._entities;
            while (js < i1.length) {
                var i2 = i1[js];
                ++js;
                i2.dispose()
            }
            var q = 0;
            var i = this._components;
            while (q < i.length) {
                var qY = i[q];
                ++q;
                qY.dispose()
            }
            this._components = null;
            this.scene = null;
            if (this.standalone) {
                this.set_standalone(false);
                px.engine.entities.unregisterEntity(this)
            }
        },
        getId: function() {
            return this._id
        },
        onAddedToScene: function(q) {
            this.scene = q;
            var qY = 0;
            var i2 = this._components;
            while (qY < i2.length) {
                var qZ = i2[qY];
                ++qY;
                qZ.onEntityAddedToScene(this.scene)
            }
            var i1 = 0;
            var i = this._entities;
            while (i1 < i.length) {
                var js = i[i1];
                ++i1;
                js.onAddedToScene(this.scene)
            }
        },
        onRemovedFromScene: function() {
            var js = 0;
            var i1 = this._components;
            while (js < i1.length) {
                var qY = i1[js];
                ++js;
                qY.onEntityRemovedFromScene()
            }
            var q = 0;
            var i = this._entities;
            while (q < i.length) {
                var i2 = i[q];
                ++q;
                i2.onRemovedFromScene()
            }
            this.scene = null
        },
        addComponent: function(i) {
            this._components.push(i);
            this._components.sort(oT(this, this.sortOnPriority));
            i.onAddedToEntity(this);
            if (this.scene != null) {
                i.onEntityAddedToScene(this.scene)
            }
            return i
        },
        removeComponent: function(i) {
            if (this.scene != null) {
                i.onEntityRemovedFromScene()
            }
            this._components.slice(aG.indexOf(this._components, i), 1);
            i.onRemovedFromEntity();
            return i
        },
        removeAllComponents: function() {
            var q = 0;
            var i = this._components;
            while (q < i.length) {
                var i1 = i[q];
                ++q;
                if (this.scene != null) {
                    i1.onEntityRemovedFromScene()
                }
                i1.onRemovedFromEntity()
            }
            this._components = []
        },
        sortOnPriority: function(q, i) {
            return q.priority - i.priority
        },
        addEntity: function(i) {
            this._entitiesToAdd.push(i);
            return i
        },
        removeEntity: function(i) {
            this._entitiesToRemove.push(i);
            return i
        },
        update: function(qY) {
            var js;
            var i2;
            this.addEntitiesFromQueue();
            js = this._components.length;
            while (--js >= 0) {
                i2 = this._components[js];
                if (i2.enabled) {
                    i2.update(qY)
                }
            }
            var i1 = 0;
            var i = this._entities;
            while (i1 < i.length) {
                var q = i[i1];
                ++i1;
                q.update(qY)
            }
            this.removeEntitiesFromQueue()
        },
        internal_addEntity: function(i) {
            this._entities.push(i);
            if (this.scene != null) {
                i.onAddedToScene(this.scene)
            }
        },
        internal_removeEntity: function(i) {
            this._entities.splice(aG.indexOf(this._entities, i), 1);
            i.onRemovedFromScene();
            i.dispose()
        },
        addEntitiesFromQueue: function() {
            var q;
            if (this._entitiesToAdd.length > 0) {
                var i2 = 0;
                var i = this._entitiesToAdd;
                while (i2 < i.length) {
                    var i1 = i[i2];
                    ++i2;
                    this.internal_addEntity(i1)
                }
                this._entitiesToAdd = []
            }
        },
        removeEntitiesFromQueue: function() {
            var q = this._entitiesToRemove.length;
            var i;
            if (q > 0) {
                while (--q >= 0) {
                    i = this._entitiesToRemove[q];
                    this.internal_removeEntity(i)
                }
                this._entitiesToRemove = []
            }
        },
        entities: null,
        get_entities: function() {
            return this._entities
        },
        id: null,
        get_id: function() {
            return this._id
        },
        standalone: null,
        set_standalone: function(i) {
            if (this.standalone != i) {
                if (i) {
                    px.engine.entities.registerEntity(this)
                } else {
                    px.engine.entities.unregisterEntity(this)
                }
            }
            this.standalone = i;
            return i
        },
        __class__: oa,
        __properties__: {
            set_standalone: "set_standalone",
            get_id: "get_id",
            get_entities: "get_entities"
        }
    };
    var hn = function() {
        this.entityList = new oI()
    };
    nt["oaktree.core.EntityManager"] = hn;
    hn.__name__ = ["oaktree", "core", "EntityManager"];
    hn.prototype = {
        entityList: null,
        registerEntity: function(i) {
            this.entityList.add(i)
        },
        unregisterEntity: function(i) {
            this.entityList.remove(i)
        },
        update: function(i1) {
            var q = this.entityList.h;
            var i2 = null;
            while (q != null) {
                var i;
                i = (function(qY) {
                    var js;
                    i2 = q[0];
                    q = q[1];
                    js = i2;
                    return js
                }(this));
                i.update(i1)
            }
        },
        __class__: hn
    };
    var bI = function(i) {
        if (i == null) {
            i = 8.333333333333334
        }
        this._now = 0;
        this._spentTime = 0;
        this.taskQueue = new oI();
        this._timePerUpdate = i
    };
    nt["oaktree.core.JobScheduler"] = bI;
    bI.__name__ = ["oaktree", "core", "JobScheduler"];
    bI.prototype = {
        taskQueue: null,
        _timePerUpdate: null,
        _task: null,
        _spentTime: null,
        _now: null,
        schedule: function(i) {
            this.taskQueue.add({
                callback: i
            })
        },
        update: function() {
            this._now = px.engine.get_time();
            while (this.taskQueue.length > 0) {
                this._task = this.taskQueue.pop();
                this._task.callback();
                if (px.engine.get_time() - this._now > this._timePerUpdate) {
                    break
                }
            }
        },
        __class__: bI
    };
    var ql = function() {};
    nt["oaktree.core.Log"] = ql;
    ql.__name__ = ["oaktree", "core", "Log"];
    ql._filter = null;
    ql._exclude = null;
    ql.getLogContext = function(i1) {
        var q = nu.withoutDirectory(i1);
        var i = nu.withoutExtension(q).toLowerCase();
        var i2 = ql._get_spacing(q);
        return "" + i2 + " / " + i + " /"
    };
    ql._get_spacing = function(q) {
        var js = "";
        var qY = q.length + 4;
        var i2 = ql._log_width - qY;
        if (i2 > 0) {
            var qZ = 0;
            while (qZ < i2) {
                var i1 = qZ++;
                js += " "
            }
        }
        return js
    };
    var i0 = nt["oaktree.core.FileType"] = {
        __ename__: ["oaktree", "core", "FileType"],
        __constructs__: ["AUTO", "IMAGE", "TEXT", "BINARY", "SOUND", "FONT"]
    };
    i0.AUTO = ["AUTO", 0];
    i0.AUTO.toString = ea;
    i0.AUTO.__enum__ = i0;
    i0.IMAGE = ["IMAGE", 1];
    i0.IMAGE.toString = ea;
    i0.IMAGE.__enum__ = i0;
    i0.TEXT = ["TEXT", 2];
    i0.TEXT.toString = ea;
    i0.TEXT.__enum__ = i0;
    i0.BINARY = ["BINARY", 3];
    i0.BINARY.toString = ea;
    i0.BINARY.__enum__ = i0;
    i0.SOUND = ["SOUND", 4];
    i0.SOUND.toString = ea;
    i0.SOUND.__enum__ = i0;
    i0.FONT = ["FONT", 5];
    i0.FONT.toString = ea;
    i0.FONT.__enum__ = i0;
    var mh = nt["oaktree.core.VOTypes"] = {
        __ename__: ["oaktree", "core", "VOTypes"],
        __constructs__: ["VT_Native", "VT_Class", "VT_Map", "VT_Array", "VT_Unknown"]
    };
    mh.VT_Native = function(i) {
        var q = ["VT_Native", 0, i];
        q.__enum__ = mh;
        q.toString = ea;
        return q
    };
    mh.VT_Class = function(i) {
        var q = ["VT_Class", 1, i];
        q.__enum__ = mh;
        q.toString = ea;
        return q
    };
    mh.VT_Map = function(i, i1) {
        var q = ["VT_Map", 2, i, i1];
        q.__enum__ = mh;
        q.toString = ea;
        return q
    };
    mh.VT_Array = function(q) {
        var i = ["VT_Array", 3, q];
        i.__enum__ = mh;
        i.toString = ea;
        return i
    };
    mh.VT_Unknown = ["VT_Unknown", 4];
    mh.VT_Unknown.toString = ea;
    mh.VT_Unknown.__enum__ = mh;
    var cd = function() {
        this.enabled = true;
        this.priority = 0;
        this.entity = null
    };
    nt["oaktree.core.components.Component"] = cd;
    cd.__name__ = ["oaktree", "core", "components", "Component"];
    cd.prototype = {
        entity: null,
        priority: null,
        enabled: null,
        dispose: function() {
            this.entity = null
        },
        onAddedToEntity: function(i) {
            this.entity = i
        },
        onRemovedFromEntity: function() {
            this.entity = null
        },
        onEntityAddedToScene: function(i) {},
        onEntityRemovedFromScene: function() {},
        update: function(i) {},
        __class__: cd
    };
    var ny = function(i1, i2, q, i) {
        if (i == null) {
            i = false
        }
        if (q == null) {
            q = false
        }
        oy.call(this, i1, i2, q, i)
    };
    nt["oaktree.core.events.ConnectionEvent"] = ny;
    ny.__name__ = ["oaktree", "core", "events", "ConnectionEvent"];
    ny.__super__ = oy;
    ny.prototype = lP(oy.prototype, {
        __class__: ny
    });
    var W = function(i1, i2, q, i) {
        if (i == null) {
            i = false
        }
        if (q == null) {
            q = false
        }
        oy.call(this, i1, i2, q, i)
    };
    nt["oaktree.core.events.UserEvent"] = W;
    W.__name__ = ["oaktree", "core", "events", "UserEvent"];
    W.__super__ = oy;
    W.prototype = lP(oy.prototype, {
        __class__: W
    });
    var bm = function() {};
    nt["oaktree.core.io.IO"] = bm;
    bm.__name__ = ["oaktree", "core", "io", "IO"];
    bm.addMapping = function(q, i) {
        bm._ftypeMapping.set(q, i)
    };
    bm.getFileTypeFromExtension = function(i) {
        var q = i.split("?")[0].split(".");
        var i1 = "";
        if (q.length > 1) {
            i1 = q[q.length - 1]
        }
        switch (i1) {
            case "png":
            case "jpg":
            case "bmp":
                return i0.IMAGE;
            case "xml":
            case "json":
            case "txt":
                return i0.TEXT;
            default:
                if (bm._ftypeMapping.exists(i1)) {
                    return bm._ftypeMapping.get(i1)
                }
                return i0.BINARY
        }
        return i0.BINARY
    };
    bm.data_load = function(i2, i1) {
        var js = new cN();
        if (i1 == null) {
            i1 = {}
        }
        if (i1.filetype == null) {
            i1.filetype = i0.AUTO
        }
        i1.filetype;
        var q;
        if (i1.filetype == i0.AUTO) {
            q = bm.getFileTypeFromExtension(i2)
        } else {
            q = i1.filetype
        }
        var i;
        switch (q[1]) {
            case 1:
                i = new dR(i2);
                break;
            case 2:
                i = new o9(i2);
                break;
            case 4:
                i = new mm(i2);
                break;
            default:
                i = new ph(i2)
        }
        i.addEventListener("complete", function(qY) {
            if (i.status == qs.LOADED) {
                js.resolve(i.data)
            } else {
                js.handleError("" + kr.string(i.status) + " - " + i2)
            }
        });
        i.start();
        return js.boundPromise
    };
    bm.data_flow = function(i1, q, i2) {
        if (i2 == null) {
            i2 = bm.default_provider
        }
        var i = new eo();
        i2(i1).then(function(js) {
            if (q != null) {
                q(i1, js).then(function(qY) {
                    i.resolve(qY)
                }).errorThen(function(qY) {
                    i.handleError(qY)
                })
            } else {
                i.resolve(js)
            }
        }).errorThen(function(js) {
            i.handleError(js)
        });
        return i.promise()
    };
    bm.default_provider = function(i) {
        return bm.data_load(i)
    };
    var cs = nt["oaktree.core.io.SaveSlotTarget"] = {
        __ename__: ["oaktree", "core", "io", "SaveSlotTarget"],
        __constructs__: ["LOCAL_STORAGE", "SHARED_OBJECT", "CUSTOM"]
    };
    cs.LOCAL_STORAGE = ["LOCAL_STORAGE", 0];
    cs.LOCAL_STORAGE.toString = ea;
    cs.LOCAL_STORAGE.__enum__ = cs;
    cs.SHARED_OBJECT = ["SHARED_OBJECT", 1];
    cs.SHARED_OBJECT.toString = ea;
    cs.SHARED_OBJECT.__enum__ = cs;
    cs.CUSTOM = function(q) {
        var i = ["CUSTOM", 2, q];
        i.__enum__ = cs;
        i.toString = ea;
        return i
    };
    var bK = function(i1, q) {
        this.data = "";
        this._target = cs.LOCAL_STORAGE;
        this.id = "_";
        if (bK._targetList == null) {
            bK._targetList = new kz();
            var i2 = new jv();
            bK._targetList.set(cs.LOCAL_STORAGE, i2);
            var i = new bC();
            bK._targetList.set(cs.SHARED_OBJECT, i)
        }
        if (q == null) {
            q = cs.LOCAL_STORAGE
        }
        this.id = i1;
        this._target = q
    };
    nt["oaktree.core.io.SaveSlot"] = bK;
    bK.__name__ = ["oaktree", "core", "io", "SaveSlot"];
    bK._targetList = null;
    bK.prototype = {
        id: null,
        _target: null,
        data: null,
        load: function() {
            if (!bK._targetList.exists(this._target)) {
                eM.trace("Non existant SaveSlot target!", {
                    fileName: "SaveSlot.hx",
                    lineNumber: 73,
                    className: "oaktree.core.io.SaveSlot",
                    methodName: "load"
                });
                return ""
            }
            var i = bK._targetList.get(this._target);
            this.data = i.load(this.id);
            return this.data
        },
        save: function() {
            if (!bK._targetList.exists(this._target)) {
                eM.trace("Non existant SaveSlot target!", {
                    fileName: "SaveSlot.hx",
                    lineNumber: 86,
                    className: "oaktree.core.io.SaveSlot",
                    methodName: "save"
                });
                return false
            }
            return bK._targetList.get(this._target).save(this.id, this.data)
        },
        __class__: bK
    };
    var fz = function() {};
    nt["oaktree.core.io.ISlotTarget"] = fz;
    fz.__name__ = ["oaktree", "core", "io", "ISlotTarget"];
    fz.prototype = {
        save: null,
        load: null,
        __class__: fz
    };
    var jv = function() {
        this._localStorageAvailable = false;
        this._localStorageAvailable = bq.getLocalStorage() != null
    };
    nt["oaktree.core.io.LocalStorageSaveSlot"] = jv;
    jv.__name__ = ["oaktree", "core", "io", "LocalStorageSaveSlot"];
    jv.__interfaces__ = [fz];
    jv.prototype = {
        _localStorageAvailable: null,
        save: function(i, q) {
            if (!this._localStorageAvailable) {
                return false
            }
            try {
                bq.getLocalStorage().setItem(i, q)
            } catch (i1) {
                lF.lastException = i1;
                if (i1 instanceof nM) {
                    i1 = i1.val
                }
                return false
            }
            return true
        },
        load: function(i) {
            if (!this._localStorageAvailable) {
                return ""
            }
            return bq.getLocalStorage().getItem(i)
        },
        __class__: jv
    };
    var bC = function() {};
    nt["oaktree.core.io.SharedObjectSaveSlot"] = bC;
    bC.__name__ = ["oaktree", "core", "io", "SharedObjectSaveSlot"];
    bC.__interfaces__ = [fz];
    bC.prototype = {
        save: function(i1, i2) {
            var i = hP.getLocal(i1);
            var q = null;
            try {
                i.data.data = i2;
                q = i.flush()
            } catch (js) {
                lF.lastException = js;
                if (js instanceof nM) {
                    js = js.val
                }
                return false
            }
            return true
        },
        load: function(q) {
            var i = hP.getLocal(q);
            if (i != null && i.data.data != null) {
                return i.data.data
            }
            return ""
        },
        __class__: bC
    };
    var gg = function(q, i) {
        this._loaded = false;
        this.saveOnSet = true;
        this._map = new io();
        bK.call(this, q, i)
    };
    nt["oaktree.core.io.KVSaveSlot"] = gg;
    gg.__name__ = ["oaktree", "core", "io", "KVSaveSlot"];
    gg.__super__ = bK;
    gg.prototype = lP(bK.prototype, {
        _map: null,
        saveOnSet: null,
        _loaded: null,
        set: function(i, q) {
            this._map.set(i, q);
            if (this.saveOnSet) {
                this.save()
            }
        },
        get: function(q, i) {
            if (!this._loaded) {
                this.load()
            }
            if (!this._map.exists(q)) {
                return i
            } else {
                return this._map.get(q)
            }
        },
        save: function() {
            this.data = ot.run(this._map);
            return bK.prototype.save.call(this)
        },
        load: function() {
            var i = false;
            bK.prototype.load.call(this);
            try {
                this._map = ln.run(this.data);
                i = true
            } catch (q) {
                lF.lastException = q;
                if (q instanceof nM) {
                    q = q.val
                }
                i = false;
                null
            }
            this._loaded = true;
            return this.data
        },
        __class__: gg
    });
    var oM = function(i) {
        this._dirty = true;
        this._scenesCounter = 0;
        this._container = i;
        this._scenesList = [];
        this._scenesToRemove = [];
        this.onLateUpdate = new o0()
    };
    nt["oaktree.core.scene.SceneManager"] = oM;
    oM.__name__ = ["oaktree", "core", "scene", "SceneManager"];
    oM.prototype = {
        onLateUpdate: null,
        _scenesCounter: null,
        _container: null,
        _scenesList: null,
        _scenesToRemove: null,
        _dirty: null,
        add: function(q, i) {
            if (i == null) {
                i = 0
            }
            var i1 = n0.__instanceof(q, aY);
            this._scenesCounter++;
            this._scenesList.push({
                scene: q,
                priority: i,
                insertOrder: this._scenesCounter,
                isIScene: i1
            });
            this._scenesList.sort(oT(this, this.sceneSortFunc));
            this._dirty = true
        },
        remove: function(i1) {
            var i2 = 0;
            var q = this._scenesList;
            while (i2 < q.length) {
                var i = q[i2];
                ++i2;
                if (i.scene == i1) {
                    cj.remove(this._scenesList, i);
                    this._scenesToRemove.push(i);
                    return
                }
            }
        },
        reset: function() {
            var i1 = 0;
            var q = this._scenesList;
            while (i1 < q.length) {
                var i = q[i1];
                ++i1;
                this._scenesToRemove.push(i)
            }
            this._scenesList = null;
            this._scenesList = []
        },
        update: function(i2) {
            var i1 = 0;
            var i = this._scenesList;
            while (i1 < i.length) {
                var q = i[i1];
                ++i1;
                if (q.isIScene) {
                    (n0.__cast(q.scene, aY)).update(i2)
                }
            }
        },
        lateUpdate: function() {
            if (this._scenesToRemove.length > 0) {
                var qZ = 0;
                var js = this._scenesToRemove;
                while (qZ < js.length) {
                    var qY = js[qZ];
                    ++qZ;
                    if (this._container.contains(qY.scene)) {
                        this._container.removeChild(qY.scene);
                        cj.remove(this._scenesToRemove, qY);
                        if (qY.isIScene) {
                            (n0.__cast(qY.scene, aY)).onRemoved()
                        }
                    }
                }
            }
            if (this._dirty) {
                var i1 = 0;
                var i2 = 0;
                var q = this._scenesList;
                while (i2 < q.length) {
                    var i = q[i2];
                    ++i2;
                    if (!this._container.contains(i.scene)) {
                        this._container.addChild(i.scene);
                        if (i.isIScene) {
                            (n0.__cast(i.scene, aY)).onAdded()
                        }
                    }
                    if (this._container.getChildIndex(i.scene) != i1 && i1 < this._container.get_numChildren()) {
                        this._container.setChildIndex(i.scene, i1)
                    }
                    i1++;
                    if (i.isIScene) {
                        (n0.__cast(i.scene, aY)).lateUpdate()
                    }
                }
                this._dirty = false
            }
            this.onLateUpdate.emit()
        },
        get_container: function() {
            return this._container
        },
        set_container: function(i) {
            this._container = i;
            return i
        },
        sceneSortFunc: function(q, i) {
            if (q.priority == i.priority) {
                return q.insertOrder - i.insertOrder
            }
            return q.priority - i.priority
        },
        __class__: oM,
        __properties__: {
            set_container: "set_container",
            get_container: "get_container"
        }
    };
    var pe = nt["oaktree.display.CoreAssetType"] = {
        __ename__: ["oaktree", "display", "CoreAssetType"],
        __constructs__: ["UNKNOWN", "SPRITE", "TEXTURE_ATLAS", "FRAMED_SPRITE", "FONT"]
    };
    pe.UNKNOWN = ["UNKNOWN", 0];
    pe.UNKNOWN.toString = ea;
    pe.UNKNOWN.__enum__ = pe;
    pe.SPRITE = ["SPRITE", 1];
    pe.SPRITE.toString = ea;
    pe.SPRITE.__enum__ = pe;
    pe.TEXTURE_ATLAS = ["TEXTURE_ATLAS", 2];
    pe.TEXTURE_ATLAS.toString = ea;
    pe.TEXTURE_ATLAS.__enum__ = pe;
    pe.FRAMED_SPRITE = ["FRAMED_SPRITE", 3];
    pe.FRAMED_SPRITE.toString = ea;
    pe.FRAMED_SPRITE.__enum__ = pe;
    pe.FONT = ["FONT", 4];
    pe.FONT.toString = ea;
    pe.FONT.__enum__ = pe;
    var kw = function(i1, q, i) {
        this.assetType = pe.UNKNOWN;
        this.loaded = false;
        this.valid = false;
        this.id = i1;
        this.url = q;
        this.loaded = false;
        if (i == null && q != null) {
            i = bm.getFileTypeFromExtension(q)
        }
        this.type = i
    };
    nt["oaktree.display.AssetHolder"] = kw;
    kw.__name__ = ["oaktree", "display", "AssetHolder"];
    kw.prototype = {
        valid: null,
        loaded: null,
        id: null,
        url: null,
        type: null,
        assetType: null,
        data: null,
        storeData: function(i) {
            ih.store(this.id, i)
        },
        load: function() {
            var i2 = this;
            var qY = new cN();
            if (this.loaded) {
                qY.resolve(this)
            } else {
                var q = this;
                var i = false;
                if (!i) {
                    var js = this.type;
                    switch (js[1]) {
                        case 5:
                            nE.registerFontOnHTML(this.id, this.url);
                            break;
                        default:
                            var i1 = bm.data_load(this.url);
                            i1.then(function(qZ) {
                                i2.storeData(qZ);
                                i2.resolveLoad(qY);
                                q.loaded = true
                            }).catchError(function(qZ) {
                                eM.trace(qZ, {
                                    fileName: "AssetHolder.hx",
                                    lineNumber: 268,
                                    className: "oaktree.display.AssetHolder",
                                    methodName: "load"
                                });
                                i2.resolveLoad(qY)
                            })
                    }
                }
            }
            return qY.boundPromise
        },
        resolveLoad: function(i) {
            i.resolve(this)
        },
        get_data: function() {
            return this.getData()
        },
        getData: function() {
            if (!this.loaded) {
                return null
            }
            return ih.fetch(this.id)
        },
        dispose: function() {
            ih["delete"](this.id)
        },
        __class__: kw,
        __properties__: {
            get_data: "get_data"
        }
    };
    var gV = function(i) {
        kw.call(this, i, null)
    };
    nt["oaktree.display.NullAssetHolder"] = gV;
    gV.__name__ = ["oaktree", "display", "NullAssetHolder"];
    gV.__super__ = kw;
    gV.prototype = lP(kw.prototype, {
        load: function() {
            var i = new cN();
            this.loaded = false;
            i.resolve(this);
            return i.boundPromise
        },
        __class__: gV
    });
    var lX = function(i1, i, q) {
        if (i == null) {
            i = ""
        }
        kw.call(this, i1, i);
        this.assetType = pe.FRAMED_SPRITE;
        this.type = i0.TEXT;
        this.config = q
    };
    nt["oaktree.display.FramedSpriteAssetHolder"] = lX;
    lX.__name__ = ["oaktree", "display", "FramedSpriteAssetHolder"];
    lX.__super__ = kw;
    lX.prototype = lP(kw.prototype, {
        config: null,
        storeData: function(i) {
            try {
                this.config = new aN(h8.read(i))
            } catch (q) {
                lF.lastException = q;
                if (q instanceof nM) {
                    q = q.val
                }
            }
        },
        resolveLoad: function(q) {
            var i = this;
            pB.loadFramedSpriteResources(this.config, function() {
                q.resolve(i)
            })
        },
        setFrame: function(i) {
            this.loaded = i != null;
            this.config = i
        },
        getData: function() {
            return this.config
        },
        dispose: function() {
            this.config = null;
            kw.prototype.dispose.call(this)
        },
        __class__: lX
    });
    var lt = function(q, i) {
        if (i == null) {
            i = ""
        }
        kw.call(this, q, i);
        this.assetType = pe.FONT;
        this.type = i0.FONT
    };
    nt["oaktree.display.FontAssetHolder"] = lt;
    lt.__name__ = ["oaktree", "display", "FontAssetHolder"];
    lt.__super__ = kw;
    lt.prototype = lP(kw.prototype, {
        storeData: function(i1) {
            try {
                var i;
                i = nJ.fromBytes(i1);
                i.name = this.id;
                var q = i.name;
                ih.store(this.id, i)
            } catch (i2) {
                lF.lastException = i2;
                if (i2 instanceof nM) {
                    i2 = i2.val
                }
            }
        },
        getData: function() {
            return ih.fetch(this.id)
        },
        __class__: lt
    });
    var al = function(q, i) {
        kw.call(this, q, null);
        this.assetType = pe.TEXTURE_ATLAS;
        this.atlas = i
    };
    nt["oaktree.display.TextureAtlasAssetHolder"] = al;
    al.__name__ = ["oaktree", "display", "TextureAtlasAssetHolder"];
    al.__super__ = kw;
    al.prototype = lP(kw.prototype, {
        atlas: null,
        load: function() {
            var q = this;
            var i = new cN();
            this.loaded = false;
            this.atlas.load().then(function(i1) {
                q.loaded = true;
                i.resolve(q)
            });
            return i.boundPromise
        },
        getData: function() {
            return this.atlas
        },
        dispose: function() {
            this.atlas = null;
            kw.prototype.dispose.call(this)
        },
        __class__: al
    });
    var pB = function() {};
    nt["oaktree.display.AssetHolderUtils"] = pB;
    pB.__name__ = ["oaktree", "display", "AssetHolderUtils"];
    pB.loadFramedSpriteResources = function(q0, js) {
        var i2 = [];
        q0.getResourceList(i2);
        var q = [];
        var qY = 0;
        while (qY < i2.length) {
            var i1 = i2[qY];
            ++qY;
            var i;
            if (!i1.isAtlas && i1.spriteName != null) {
                i = nK.get_assets().getAsset(i1.spriteName);
                q.push(i.load())
            }
            if (i1.atlasName != null) {
                i = nK.get_assets().getAsset(pB.removeExtension(i1.atlasName));
                q.push(i.load())
            }
        }
        var qZ = gR.whenAll(q);
        qZ.then(function(q1) {
            if (js != null) {
                js()
            }
            return true
        }).catchError(function(q1) {
            null
        })
    };
    pB.removeExtension = function(i) {
        var q = new gF("[.](png|jpg|gif|plist|xml)$", "g");
        return q.replace(i, "")
    };
    var fx = function(i) {
        this._initialized = false;
        this.onInit = new o0();
        if (i != null) {
            this.initialize(i)
        }
    };
    nt["oaktree.display.AssetsManager"] = fx;
    fx.__name__ = ["oaktree", "display", "AssetsManager"];
    fx.prototype = {
        onInit: null,
        initialized: null,
        _initialized: null,
        _textureAtlas: null,
        _assetHolder: null,
        initialize: function(i1) {
            var qY = this;
            this._textureAtlas = new io();
            this._assetHolder = new io();
            var q = [];
            if (i1 != null) {
                var js = mH(i1)();
                while (js.hasNext()) {
                    var i = js.next();
                    q.push(bm.data_flow(i, oT(this, this.processTextureAtlas), oT(this, this.loadTextureAtlas)))
                }
            }
            if (q.length > 0) {
                var i2 = gR.whenAll(q).then(function(qZ) {
                    qY.postInit();
                    return true
                }).catchError(function(qZ) {
                    qY.postInit();
                    return false
                })
            } else {
                this.postInit()
            }
        },
        postInit: function() {
            this._initialized = true;
            this.onInit.emit()
        },
        loadTextureAtlas: function(i1) {
            var js = new cN();
            var i = cP.replace(i1.src, ".json", ".png");
            i = cP.replace(i, ".xml", ".png");
            if (k9.exists(i1.src) && k9.exists(i)) {
                var i2 = k9.getBitmapData(i);
                var q = k9.getText(i1.src);
                js.resolve({
                    config: q,
                    image: i2
                })
            } else {
                js.handleError("Failed to load " + i1.src + "/" + i + ": assets aren't loaded")
            }
            return js.boundPromise
        },
        processTextureAtlas: function(i1, q) {
            var i2 = new cN();
            var i = new mI(oZ.fromBitmapData(q.image));
            if (i1.src.indexOf(".json") != -1) {
                i.parseAtlasJSON(q.config)
            } else {
                if (i1.src.indexOf(".xml") != -1) {
                    i.parseAtlasXml(ky.parse(q.config))
                } else {
                    i2.handleError("Failed to load " + i1.src + ": unknown format");
                    return i2.boundPromise
                }
            }
            this._textureAtlas.set(i1.id, i);
            i2.resolve(i);
            return i2.boundPromise
        },
        getTexture: function(i1, q) {
            if (q == null) {
                q = ""
            }
            if (q == "") {
                var js = this._textureAtlas.iterator();
                while (js.hasNext()) {
                    var i = js.next();
                    var i2 = i.getTexture(i1);
                    if (i2 != null) {
                        return i2
                    }
                }
            } else {
                if (this._textureAtlas.exists(q)) {
                    return this._textureAtlas.get(q).getTexture(i1)
                }
            }
            return null
        },
        getAtlas: function(i) {
            if (this._textureAtlas.exists(i)) {
                return this._textureAtlas.get(i)
            }
            return null
        },
        registerExternalAtlas: function(js, q, i2) {
            var i1 = new mI(null, q, i2);
            this._textureAtlas.set(js, i1);
            var i = new al(js, this._textureAtlas.get(js));
            this._assetHolder.set(js, i)
        },
        registerAsset: function(qZ, i2, js) {
            qZ = fx.webRegex.replace(qZ, "");
            if (js != null) {
                switch (js[1]) {
                    case 3:
                        var i1 = new lX(qZ, i2);
                        this._assetHolder.set(qZ, i1);
                        break;
                    case 2:
                        var q = new al(qZ);
                        q.atlas = this.getAtlas(qZ);
                        this._assetHolder.set(qZ, q);
                        break;
                    case 4:
                        if (!cP.endsWith(i2, ".ttf")) {
                            return
                        }
                        var i = new lt(qZ, i2);
                        this._assetHolder.set(qZ, i);
                        i.load();
                        break;
                    default:
                        var qY = new kw(qZ, i2);
                        this._assetHolder.set(qZ, qY)
                }
            } else {
                var qY = new kw(qZ, i2);
                this._assetHolder.set(qZ, qY)
            }
        },
        unregisterAsset: function(i) {
            if (!this._assetHolder.exists(i)) {
                return false
            }
            this._assetHolder.get(i).dispose();
            this._assetHolder.remove(i);
            return true
        },
        getAsset: function(i) {
            if (this._assetHolder.exists(i)) {
                return this._assetHolder.get(i)
            }
            return new gV(i)
        },
        getFramedSprite: function(i) {
            if (this._assetHolder.exists(i) && this._assetHolder.get(i).assetType == pe.FRAMED_SPRITE) {
                return this._assetHolder.get(i)
            }
            return null
        },
        getFont: function(i) {
            if (this._assetHolder.exists(i) && this._assetHolder.get(i).assetType == pe.FONT) {
                return this._assetHolder.get(i)
            }
            return null
        },
        getFramedSpriteFromAssetName: function(q) {
            var i2 = this._assetHolder.keys();
            while (i2.hasNext()) {
                var js = i2.next();
                var i1 = this._assetHolder.get(js);
                if (i1.assetType == pe.FRAMED_SPRITE && i1.loaded) {
                    var i;
                    i = (n0.__cast(i1.get_data(), aN)).imageFrameName;
                    if (i == q) {
                        return i1
                    }
                }
            }
            return null
        },
        get_initialized: function() {
            return this._initialized
        },
        __class__: fx,
        __properties__: {
            get_initialized: "get_initialized"
        }
    };
    var oZ = function() {
        this.scale = 1
    };
    nt["oaktree.display.Texture"] = oZ;
    oZ.__name__ = ["oaktree", "display", "Texture"];
    oZ.fromBitmapData = function(q, i1) {
        if (i1 == null) {
            i1 = 1
        }
        var i = oZ.empty(Math.floor(q.width / i1), Math.floor(q.height / i1), i1);
        i.get_base().uploadBitmapData(q);
        return i
    };
    oZ.fromTexture = function(q, i1, i2, i) {
        if (i == null) {
            i = false
        }
        return new ep(q, i1, i2, i, false)
    };
    oZ.empty = function(q, i, i2) {
        if (i2 == null) {
            i2 = 1
        }
        var qY;
        var js = Math.floor(q * i2);
        var i1 = Math.floor(i * i2);
        qY = new f0(js, i1, true, 0);
        return new eK(qY, js, i1)
    };
    oZ.prototype = {
        width: null,
        height: null,
        base: null,
        bitmapData: null,
        frame: null,
        scale: null,
        dispose: function() {},
        get_width: function() {
            return 0
        },
        get_height: function() {
            return 0
        },
        get_frame: function() {
            return null
        },
        get_base: function() {
            return null
        },
        get_bitmapData: function() {
            return this.get_base().get_bitmapData()
        },
        asBitmap: function() {
            return new el(this.get_bitmapData())
        },
        __class__: oZ,
        __properties__: {
            get_frame: "get_frame",
            get_bitmapData: "get_bitmapData",
            get_base: "get_base",
            get_height: "get_height",
            get_width: "get_width"
        }
    };
    var pp = function(i, q) {
        if (q == null) {
            q = 0
        }
        if (i == null) {
            i = 0
        }
        this.x = i;
        this.y = q
    };
    nt["openfl.geom.Point"] = pp;
    pp.__name__ = ["openfl", "geom", "Point"];
    pp.distance = function(i2, i1) {
        var q = i2.x - i1.x;
        var i = i2.y - i1.y;
        return Math.sqrt(q * q + i * i)
    };
    pp.interpolate = function(i1, q, i) {
        return new pp(q.x + i * (i1.x - q.x), q.y + i * (i1.y - q.y))
    };
    pp.polar = function(i, q) {
        return new pp(i * Math.cos(q), i * Math.sin(q))
    };
    pp.prototype = {
        length: null,
        x: null,
        y: null,
        add: function(i) {
            return new pp(i.x + this.x, i.y + this.y)
        },
        clone: function() {
            return new pp(this.x, this.y)
        },
        copyFrom: function(i) {
            this.x = i.x;
            this.y = i.y
        },
        equals: function(i) {
            return i != null && i.x == this.x && i.y == this.y
        },
        normalize: function(q) {
            if (this.x == 0 && this.y == 0) {
                return
            } else {
                var i = q / Math.sqrt(this.x * this.x + this.y * this.y);
                this.x *= i;
                this.y *= i
            }
        },
        offset: function(q, i) {
            this.x += q;
            this.y += i
        },
        setTo: function(q, i) {
            this.x = q;
            this.y = i
        },
        subtract: function(i) {
            return new pp(this.x - i.x, this.y - i.y)
        },
        toString: function() {
            return "(x=" + this.x + ", y=" + this.y + ")"
        },
        __toLimeVector2: function() {
            return new eD(this.x, this.y)
        },
        get_length: function() {
            return Math.sqrt(this.x * this.x + this.y * this.y)
        },
        __class__: pp,
        __properties__: {
            get_length: "get_length"
        }
    };
    var eK = function(i1, q, i) {
        oZ.call(this);
        this._data = i1;
        this._width = q;
        this._height = i
    };
    nt["oaktree.display.BaseTexture"] = eK;
    eK.__name__ = ["oaktree", "display", "BaseTexture"];
    eK.__super__ = oZ;
    eK.prototype = lP(oZ.prototype, {
        _data: null,
        _width: null,
        _height: null,
        uploadBitmapData: function(q) {
            var i;
            if (q.width != this.get_width() || q.height != this.get_height()) {
                i = new f0(this.get_width(), this.get_height(), true, 0);
                i.copyPixels(q, q.rect, eK.sOrigin);
                q = i
            }
            this._data.copyPixels(q, q.rect, eK.sOrigin)
        },
        get_width: function() {
            return this._width
        },
        get_height: function() {
            return this._height
        },
        get_base: function() {
            return this
        },
        get_bitmapData: function() {
            return this._data
        },
        __class__: eK
    });
    var o = function() {};
    nt["oaktree.display.RemoteAsset"] = o;
    o.__name__ = ["oaktree", "display", "RemoteAsset"];
    o.prototype = {
        id: null,
        loader: null,
        data: null,
        defer: null,
        __class__: o
    };
    var pA = function() {
        this.bitmapAssets = new io()
    };
    nt["oaktree.display.RemoteAssetLibrary"] = pA;
    pA.__name__ = ["oaktree", "display", "RemoteAssetLibrary"];
    pA.prototype = {
        bitmapAssets: null,
        exists: function(q, i) {
            if (i == "IMAGE") {
                return this.bitmapAssets.exists(q)
            }
            return false
        },
        loadBitmap: function(qY, q) {
            var js = this;
            var i2 = new o();
            i2.id = qY;
            var i1 = new cN();
            var i = new dR(q);
            i2.loader = i;
            i.addEventListener("complete", function(qZ) {
                if (i.status == qs.LOADED) {
                    i2.data = i.data;
                    js.bitmapAssets.set(qY, i2);
                    i1.resolve(i.data)
                } else {
                    i1.boundPromise.reject(i.status)
                }
            });
            i.start();
            i2.defer = i1;
            return i1.boundPromise
        },
        getBitmapData: function(q) {
            if (this.exists(q, "IMAGE")) {
                var i = this.bitmapAssets.get(q);
                return i.defer.boundPromise
            }
            return null
        },
        __class__: pA
    };
    var qd = function(i2, q, qY, js, i1, i) {
        if (i == null) {
            i = 0
        }
        if (i1 == null) {
            i1 = 0
        }
        if (js == null) {
            js = 1
        }
        if (qY == null) {
            qY = 0
        }
        if (q == null) {
            q = 0
        }
        if (i2 == null) {
            i2 = 1
        }
        this.a = i2;
        this.b = q;
        this.c = qY;
        this.d = js;
        this.tx = i1;
        this.ty = i
    };
    nt["openfl.geom.Matrix"] = qd;
    qd.__name__ = ["openfl", "geom", "Matrix"];
    qd.prototype = {
        a: null,
        b: null,
        c: null,
        d: null,
        tx: null,
        ty: null,
        __array: null,
        clone: function() {
            return new qd(this.a, this.b, this.c, this.d, this.tx, this.ty)
        },
        concat: function(i) {
            var i1 = this.a * i.a + this.b * i.c;
            this.b = this.a * i.b + this.b * i.d;
            this.a = i1;
            var i2 = this.c * i.a + this.d * i.c;
            this.d = this.c * i.b + this.d * i.d;
            this.c = i2;
            var q = this.tx * i.a + this.ty * i.c + i.tx;
            this.ty = this.tx * i.b + this.ty * i.d + i.ty;
            this.tx = q
        },
        copyColumnFrom: function(i, q) {
            if (i > 2) {
                throw new nM("Column " + i + " out of bounds (2)")
            } else {
                if (i == 0) {
                    this.a = q.x;
                    this.c = q.y
                } else {
                    if (i == 1) {
                        this.b = q.x;
                        this.d = q.y
                    } else {
                        this.tx = q.x;
                        this.ty = q.y
                    }
                }
            }
        },
        copyColumnTo: function(i, q) {
            if (i > 2) {
                throw new nM("Column " + i + " out of bounds (2)")
            } else {
                if (i == 0) {
                    q.x = this.a;
                    q.y = this.c;
                    q.z = 0
                } else {
                    if (i == 1) {
                        q.x = this.b;
                        q.y = this.d;
                        q.z = 0
                    } else {
                        q.x = this.tx;
                        q.y = this.ty;
                        q.z = 1
                    }
                }
            }
        },
        copyFrom: function(i) {
            this.a = i.a;
            this.b = i.b;
            this.c = i.c;
            this.d = i.d;
            this.tx = i.tx;
            this.ty = i.ty
        },
        copyRowFrom: function(q, i) {
            if (q > 2) {
                throw new nM("Row " + q + " out of bounds (2)")
            } else {
                if (q == 0) {
                    this.a = i.x;
                    this.c = i.y
                } else {
                    if (q == 1) {
                        this.b = i.x;
                        this.d = i.y
                    } else {
                        this.tx = i.x;
                        this.ty = i.y
                    }
                }
            }
        },
        copyRowTo: function(q, i) {
            if (q > 2) {
                throw new nM("Row " + q + " out of bounds (2)")
            } else {
                if (q == 0) {
                    i.x = this.a;
                    i.y = this.b;
                    i.z = this.tx
                } else {
                    if (q == 1) {
                        i.x = this.c;
                        i.y = this.d;
                        i.z = this.ty
                    } else {
                        i.setTo(0, 0, 1)
                    }
                }
            }
        },
        createBox: function(js, i2, qY, q, i) {
            if (i == null) {
                i = 0
            }
            if (q == null) {
                q = 0
            }
            if (qY == null) {
                qY = 0
            }
            if (qY != 0) {
                var qZ = Math.cos(qY);
                var i1 = Math.sin(qY);
                this.a = qZ * js;
                this.b = i1 * i2;
                this.c = -i1 * js;
                this.d = qZ * i2
            } else {
                this.a = js;
                this.b = 0;
                this.c = 0;
                this.d = i2
            }
            this.tx = q;
            this.ty = i
        },
        createGradientBox: function(qY, q, js, i1, i) {
            if (i == null) {
                i = 0
            }
            if (i1 == null) {
                i1 = 0
            }
            if (js == null) {
                js = 0
            }
            this.a = qY / 1638.4;
            this.d = q / 1638.4;
            if (js != 0) {
                var qZ = Math.cos(js);
                var i2 = Math.sin(js);
                this.b = i2 * this.d;
                this.c = -i2 * this.a;
                this.a *= qZ;
                this.d *= qZ
            } else {
                this.b = 0;
                this.c = 0
            }
            this.tx = i1 + qY / 2;
            this.ty = i + q / 2
        },
        deltaTransformPoint: function(i) {
            return new pp(i.x * this.a + i.y * this.c, i.x * this.b + i.y * this.d)
        },
        equals: function(i) {
            return i != null && this.tx == i.tx && this.ty == i.ty && this.a == i.a && this.b == i.b && this.c == i.c && this.d == i.d
        },
        identity: function() {
            this.a = 1;
            this.b = 0;
            this.c = 0;
            this.d = 1;
            this.tx = 0;
            this.ty = 0
        },
        invert: function() {
            var i1 = this.a * this.d - this.b * this.c;
            if (i1 == 0) {
                this.a = this.b = this.c = this.d = 0;
                this.tx = -this.tx;
                this.ty = -this.ty
            } else {
                i1 = 1 / i1;
                var q = this.d * i1;
                this.d = this.a * i1;
                this.a = q;
                this.b *= -i1;
                this.c *= -i1;
                var i = -this.a * this.tx - this.c * this.ty;
                this.ty = -this.b * this.tx - this.d * this.ty;
                this.tx = i
            }
            return this
        },
        rotate: function(i2) {
            var qY = Math.cos(i2);
            var i1 = Math.sin(i2);
            var q = this.a * qY - this.b * i1;
            this.b = this.a * i1 + this.b * qY;
            this.a = q;
            var js = this.c * qY - this.d * i1;
            this.d = this.c * i1 + this.d * qY;
            this.c = js;
            var i = this.tx * qY - this.ty * i1;
            this.ty = this.tx * i1 + this.ty * qY;
            this.tx = i
        },
        scale: function(q, i) {
            this.a *= q;
            this.b *= i;
            this.c *= q;
            this.d *= i;
            this.tx *= q;
            this.ty *= i
        },
        setRotation: function(i, q) {
            if (q == null) {
                q = 1
            }
            this.a = Math.cos(i) * q;
            this.c = Math.sin(i) * q;
            this.b = -this.c;
            this.d = this.a
        },
        setTo: function(i2, q, qY, js, i1, i) {
            this.a = i2;
            this.b = q;
            this.c = qY;
            this.d = js;
            this.tx = i1;
            this.ty = i
        },
        to3DString: function(i) {
            if (i == null) {
                i = false
            }
            if (i) {
                return "matrix3d(" + this.a + ", " + this.b + ", 0, 0, " + this.c + ", " + this.d + ", 0, 0, 0, 0, 1, 0, " + (this.tx | 0) + ", " + (this.ty | 0) + ", 0, 1)"
            } else {
                return "matrix3d(" + this.a + ", " + this.b + ", 0, 0, " + this.c + ", " + this.d + ", 0, 0, 0, 0, 1, 0, " + this.tx + ", " + this.ty + ", 0, 1)"
            }
        },
        toMozString: function() {
            return "matrix(" + this.a + ", " + this.b + ", " + this.c + ", " + this.d + ", " + this.tx + "px, " + this.ty + "px)"
        },
        toString: function() {
            return "matrix(" + this.a + ", " + this.b + ", " + this.c + ", " + this.d + ", " + this.tx + ", " + this.ty + ")"
        },
        transformPoint: function(i) {
            return new pp(i.x * this.a + i.y * this.c + this.tx, i.x * this.b + i.y * this.d + this.ty)
        },
        translate: function(q, i) {
            this.tx += q;
            this.ty += i
        },
        toArray: function(q) {
            if (q == null) {
                q = false
            }
            if (this.__array == null) {
                var i;
                i = new Float32Array(9);
                this.__array = i
            }
            if (q) {
                this.__array[0] = this.a;
                this.__array[1] = this.b;
                this.__array[2] = 0;
                this.__array[3] = this.c;
                this.__array[4] = this.d;
                this.__array[5] = 0;
                this.__array[6] = this.tx;
                this.__array[7] = this.ty;
                this.__array[8] = 1
            } else {
                this.__array[0] = this.a;
                this.__array[1] = this.c;
                this.__array[2] = this.tx;
                this.__array[3] = this.b;
                this.__array[4] = this.d;
                this.__array[5] = this.ty;
                this.__array[6] = 0;
                this.__array[7] = 0;
                this.__array[8] = 1
            }
            return this.__array
        },
        __cleanValues: function() {
            this.a = Math.round(this.a * 1000) / 1000;
            this.b = Math.round(this.b * 1000) / 1000;
            this.c = Math.round(this.c * 1000) / 1000;
            this.d = Math.round(this.d * 1000) / 1000;
            this.tx = Math.round(this.tx * 10) / 10;
            this.ty = Math.round(this.ty * 10) / 10
        },
        __toMatrix3: function() {
            return new iP(this.a, this.b, this.c, this.d, this.tx, this.ty)
        },
        __transformInversePoint: function(i) {
            var i1 = this.a * this.d - this.b * this.c;
            if (i1 == 0) {
                i.x = -this.tx;
                i.y = -this.ty
            } else {
                var q = 1 / i1 * (this.c * (this.ty - i.y) + this.d * (i.x - this.tx));
                i.y = 1 / i1 * (this.a * (i.y - this.ty) + this.b * (this.tx - i.x));
                i.x = q
            }
        },
        __transformInverseX: function(i1, i) {
            var q = this.a * this.d - this.b * this.c;
            if (q == 0) {
                return -this.tx
            } else {
                return 1 / q * (this.c * (this.ty - i) + this.d * (i1 - this.tx))
            }
        },
        __transformInverseY: function(i1, i) {
            var q = this.a * this.d - this.b * this.c;
            if (q == 0) {
                return -this.ty
            } else {
                return 1 / q * (this.a * (i - this.ty) + this.b * (this.tx - i1))
            }
        },
        __transformPoint: function(i) {
            var i1 = i.x;
            var q = i.y;
            i.x = i1 * this.a + q * this.c + this.tx;
            i.y = i1 * this.b + q * this.d + this.ty
        },
        __transformX: function(q, i) {
            return q * this.a + i * this.c + this.tx
        },
        __transformY: function(q, i) {
            return q * this.b + i * this.d + this.ty
        },
        __translateTransformed: function(q, i) {
            this.tx = q * this.a + i * this.c + this.tx;
            this.ty = q * this.b + i * this.d + this.ty
        },
        __class__: qd
    };
    var ep = function(q, i2, js, i, qZ) {
        if (qZ == null) {
            qZ = false
        }
        if (i == null) {
            i = false
        }
        if (i2 == null) {
            i2 = new gn(0, 0, q.get_width(), q.get_height())
        }
        this._parent = q;
        this._ownsParent = qZ;
        this._rotated = i;
        this._width = Math.floor(this._rotated ? i2.height : i2.width);
        this._height = Math.floor(this._rotated ? i2.width : i2.height);
        if (js != null) {
            this._frame = js.clone()
        } else {
            this._frame = new gn(0, 0, this._width, this._height)
        }
        this._transformationMatrix = new qd();
        if (i) {
            this._transformationMatrix.translate(0, -1);
            this._transformationMatrix.rotate(Math.PI / 2)
        }
        this._transformationMatrix.translate(-this._frame.x, -this._frame.y);
        var i1 = new f0(this._width, this._height, true, 0);
        i1.copyPixels(q.get_base().get_bitmapData(), i2, ep._tTexCoords);
        var qY = new f0(Math.floor(this._frame.width), Math.floor(this._frame.height), true, 0);
        qY.draw(i1, this._transformationMatrix);
        i1.dispose();
        eK.call(this, qY, qY.width, qY.height)
    };
    nt["oaktree.display.SubTexture"] = ep;
    ep.__name__ = ["oaktree", "display", "SubTexture"];
    ep.__super__ = eK;
    ep.prototype = lP(eK.prototype, {
        _parent: null,
        _ownsParent: null,
        _frame: null,
        _rotated: null,
        _transformationMatrix: null,
        dispose: function() {
            if (this._ownsParent) {
                this._parent.dispose()
            }
            eK.prototype.dispose.call(this)
        },
        get_frame: function() {
            return this._frame
        },
        __class__: ep
    });
    var mI = function(i, q, i1) {
        if (i1 == null) {
            i1 = ""
        }
        if (q == null) {
            q = ""
        }
        this._loaded = false;
        this._loading = false;
        this._textureInfos = new io();
        this._texture = i;
        if (q != "" && i1 != "") {
            this._textureFile = q;
            this._metaFile = i1
        }
    };
    nt["oaktree.display.TextureAtlas"] = mI;
    mI.__name__ = ["oaktree", "display", "TextureAtlas"];
    mI.parseBool = function(i) {
        if (i == null) {
            return false
        }
        return i.toLowerCase() == "true"
    };
    mI.prototype = {
        _loading: null,
        _loaded: null,
        loaded: null,
        get_loaded: function() {
            return this._loaded
        },
        mainTexture: null,
        get_mainTexture: function() {
            return this._texture
        },
        textures: null,
        get_textures: function() {
            return this._textureInfos
        },
        _texture: null,
        _textureInfos: null,
        _textureNames: null,
        _textureFile: null,
        _metaFile: null,
        dispose: function() {
            if (this._texture != null) {
                this._texture.dispose()
            }
        },
        parseAtlasJSON: function(q9) {
            if (this._texture == null) {
                return false
            }
            var ra = this._texture.scale;
            var q6 = new dB(q9).parseRec();
            var q1 = [];
            var i1 = 0;
            var q3 = q6.frames;
            while (i1 < q3.length) {
                var q2 = q3[i1];
                ++i1;
                var rb = q2.filename;
                var q0 = q2.frame.x / ra;
                var qZ = q2.frame.y / ra;
                var q5 = q2.sourceSize.w / ra;
                var q4 = q2.sourceSize.h / ra;
                var q = q2.frame.x / ra;
                var i = q2.frame.y / ra;
                var q7 = q2.frame.w / ra;
                var qY = q2.frame.h / ra;
                var js = q2.rotated;
                var i2 = new gn(q0, qZ, q5, q4);
                var q8;
                if (q7 > 0 && qY > 0) {
                    q8 = new gn(q, i, q7, qY)
                } else {
                    q8 = null
                }
                this.addRegion(rb, i2, q8, js)
            }
            this._loaded = true;
            return true
        },
        parseAtlasXml: function(qZ) {
            if (this._texture == null) {
                return false
            }
            var qY = this._texture.scale;
            var q8 = qZ.firstElement().elements();
            while (q8.hasNext()) {
                var q0 = q8.next();
                var i = q0.get("name");
                var q5 = kr.parseFloat(q0.get("x")) / qY;
                var q3 = kr.parseFloat(q0.get("y")) / qY;
                var q = kr.parseFloat(q0.get("width")) / qY;
                var q7 = kr.parseFloat(q0.get("height")) / qY;
                var q6 = kr.parseFloat(q0.get("frameX")) / qY;
                var q4 = kr.parseFloat(q0.get("frameY")) / qY;
                var q2 = kr.parseFloat(q0.get("frameWidth")) / qY;
                var js = kr.parseFloat(q0.get("frameHeight")) / qY;
                var i2 = mI.parseBool(q0.get("rotated"));
                var q1 = new gn(q5, q3, q, q7);
                var i1;
                if (q2 > 0 && js > 0) {
                    i1 = new gn(q6, q4, q2, js)
                } else {
                    i1 = null
                }
                this.addRegion(i, q1, i1, i2)
            }
            this._loaded = true;
            return true
        },
        _loadPromise: null,
        getLoadPromise: function() {
            if (this._loadPromise == null) {
                this._loadPromise = new cN()
            }
            return this._loadPromise
        },
        clearLoadPromise: function() {
            this._loading = false;
            if (this._loadPromise == null) {
                this._loadPromise = null
            }
        },
        load: function() {
            var qY = this;
            var js = this.getLoadPromise();
            if (this._loaded) {
                if (!js._resolved) {
                    js.resolve(this)
                }
            } else {
                if (!this._loading) {
                    this._loading = true;
                    eM.trace("TextureAtlas loading: " + this._textureFile + " " + this._metaFile, {
                        fileName: "TextureAtlas.hx",
                        lineNumber: 148,
                        className: "oaktree.display.TextureAtlas",
                        methodName: "load"
                    });
                    var i = jB.downloadAtlasDescriptionFile(this._metaFile);
                    var i1 = jB.downloadAtlasImageFile(this._textureFile);
                    var i2;
                    var q = function(q1) {
                        var q0 = new gR();
                        var qZ = [i, i1];
                        var q2 = gR.whenAll(qZ);
                        q2._update.push({
                            async: q0,
                            linkf: function(q3) {
                                q0.handleResolve(q1(qZ[0]._val, qZ[1]._val))
                            }
                        });
                        return q0
                    };
                    i2 = {
                        then: q
                    };
                    i2.then(function(q1, q4) {
                        if (q4 == null || q1 == null) {
                            js.handleError("TextureAtlas is invalid");
                            return false
                        }
                        qY._texture = oZ.fromBitmapData(q4);
                        var q3 = null;
                        var q2 = null;
                        try {
                            q3 = ky.parse(q1)
                        } catch (q0) {
                            lF.lastException = q0;
                            if (q0 instanceof nM) {
                                q0 = q0.val
                            }
                            try {
                                q2 = new dB(q1).parseRec()
                            } catch (qZ) {
                                lF.lastException = qZ;
                                if (qZ instanceof nM) {
                                    qZ = qZ.val
                                }
                                null
                            }
                        }
                        var q5 = false;
                        if (q3 != null) {
                            q5 = qY.parseAtlasXml(q3)
                        } else {
                            if (q2 != null) {
                                q5 = qY.parseAtlasJSON(q1)
                            }
                        }
                        if (!q5) {
                            js.handleError("Bad texture Atlas: " + qY._metaFile);
                            qY.clearLoadPromise();
                            return false
                        }
                        js.resolve(qY);
                        qY.clearLoadPromise();
                        return true
                    })
                }
            }
            return js.boundPromise
        },
        get: function(i) {
            return this.getTexture(i)
        },
        getTexture: function(i) {
            if (this._textureInfos.exists(i)) {
                var q = this._textureInfos.get(i);
                return oZ.fromTexture(this._texture, q.region, q.frame, q.rotated)
            }
            return null
        },
        hasTexture: function(i) {
            return this._textureInfos.exists(i)
        },
        getTextureList: function() {
            var i = [];
            var i1 = this._textureInfos.keys();
            while (i1.hasNext()) {
                var q = i1.next();
                i.push(q)
            }
            return i
        },
        addRegion: function(q, i1, i2, i) {
            if (i == null) {
                i = false
            }
            this._textureInfos.set(q, {
                region: i1,
                frame: i2,
                rotated: i,
                name: q
            })
        },
        remoteRegion: function(i) {
            this._textureInfos.remove(i)
        },
        __class__: mI,
        __properties__: {
            get_textures: "get_textures",
            get_mainTexture: "get_mainTexture"
        }
    };
    var jB = function() {};
    nt["oaktree.display.TextureUtils"] = jB;
    jB.__name__ = ["oaktree", "display", "TextureUtils"];
    jB.downloadAtlasDescriptionFile = function(i) {
        var i1 = new cN();
        var q = new o9(i);
        q.addEventListener("complete", function(i2) {
            i1.resolve(q.data)
        });
        q.start();
        return i1.boundPromise
    };
    jB.downloadAtlasImageFile = function(q) {
        var i1 = new cN();
        var i = new dR(q);
        i.addEventListener("complete", function(i2) {
            i1.resolve(i.data)
        });
        i.start();
        return i1.boundPromise
    };
    jB.prototype = {
        __class__: jB
    };
    var od = function() {
        this._props = new io()
    };
    nt["oaktree.ext.css.CssStyle"] = od;
    od.__name__ = ["oaktree", "ext", "css", "CssStyle"];
    od.prototype = {
        _props: null,
        set: function(i, q) {
            this._props.set(i, q)
        },
        toString: function() {
            var q = "";
            var i2 = this._props.keys();
            while (i2.hasNext()) {
                var i1 = i2.next();
                q += "" + i1 + ": " + this._props.get(i1) + ";"
            }
            return q
        },
        applyToElement: function(i) {
            i.setAttribute("style", this.toString())
        },
        __class__: od
    };
    var b8 = function() {
        this._total = 256;
        this._lookup = new io();
        this._map = [];
        var i1 = 0;
        var i2 = this._total;
        while (i1 < i2) {
            var q = i1++;
            this._map[q] = null
        }
    };
    nt["oaktree.ext.input.Input"] = b8;
    b8.__name__ = ["oaktree", "ext", "input", "Input"];
    b8.prototype = {
        _lookup: null,
        _map: null,
        _total: null,
        Update: function() {
            var q = 0;
            while (q < this._total) {
                var i1 = this._map[q];
                q++;
                if (i1 == null) {
                    continue
                }
                if (i1.get_Last() == -1 && i1.get_Current() == -1) {
                    i1.set_Current(0)
                } else {
                    if (i1.get_Last() == 2 && i1.get_Current() == 2) {
                        i1.set_Current(1)
                    }
                }
                i1.set_Last(i1.get_Current())
            }
        },
        Reset: function() {
            var q = 0;
            while (q < this._total) {
                var i1 = this._map[q];
                q++;
                if (i1 == null) {
                    continue
                }
                ar.setField(this, i1.get_Name(), false);
                i1.set_Current(0);
                i1.set_Last(0)
            }
        },
        Pressed: function(i) {
            return ar.field(this, i)
        },
        JustPressed: function(i) {
            return this._map[this._lookup.get(i)].get_Current() == 2
        },
        JustReleased: function(i) {
            return this._map[this._lookup.get(i)].get_Current() == -1
        },
        GetKeyCode: function(i) {
            return this._lookup.get(i)
        },
        Any: function() {
            var q = 0;
            while (q < this._total) {
                var i1 = this._map[q];
                q++;
                if (i1 != null && i1.get_Current() > 0) {
                    return true
                }
            }
            return false
        },
        AddKey: function(i, q) {
            this._lookup.set(i, q);
            this._map[q] = new kl(i, 0, 0)
        },
        Destroy: function() {
            this._lookup = null;
            this._map = null
        },
        __class__: b8
    };
    var kl = function(i, i1, q) {
        this._keyName = i;
        this._current = i1;
        this._last = q
    };
    nt["oaktree.ext.input.Key"] = kl;
    kl.__name__ = ["oaktree", "ext", "input", "Key"];
    kl.prototype = {
        _keyName: null,
        _current: null,
        _last: null,
        Name: null,
        get_Name: function() {
            return this._keyName
        },
        get_Current: function() {
            return this._current
        },
        set_Current: function(i) {
            this._current = i;
            return this._current
        },
        get_Last: function() {
            return this._last
        },
        set_Last: function(i) {
            this._last = i;
            return this._last
        },
        __class__: kl,
        __properties__: {
            set_Last: "set_Last",
            get_Last: "get_Last",
            set_Current: "set_Current",
            get_Current: "get_Current",
            get_Name: "get_Name"
        }
    };
    var bX = function() {
        b8.call(this);
        var q = 65;
        while (q < 91) {
            var i = q++;
            this.AddKey(String.fromCharCode(i), i)
        }
        this.AddKey("ZERO", 48);
        this.AddKey("ONE", 49);
        this.AddKey("TWO", 50);
        this.AddKey("THREE", 51);
        this.AddKey("FOUR", 52);
        this.AddKey("FIVE", 53);
        this.AddKey("SIX", 54);
        this.AddKey("SEVEN", 55);
        this.AddKey("EIGHT", 56);
        this.AddKey("NINE", 57);
        this.AddKey("PAGEUP", 33);
        this.AddKey("PAGEDOWN", 34);
        this.AddKey("HOME", 36);
        this.AddKey("END", 35);
        this.AddKey("INSERT", 45);
        this.AddKey("ESCAPE", 27);
        this.AddKey("MINUS", 189);
        this.AddKey("PLUS", 187);
        this.AddKey("DELETE", 46);
        this.AddKey("BACKSPACE", 8);
        this.AddKey("LBRACKET", 219);
        this.AddKey("RBRACKET", 221);
        this.AddKey("BACKSLASH", 220);
        this.AddKey("CAPSLOCK", 20);
        this.AddKey("SEMICOLON", 186);
        this.AddKey("QUOTE", 222);
        this.AddKey("ENTER", 13);
        this.AddKey("SHIFT", 16);
        this.AddKey("COMMA", 188);
        this.AddKey("PERIOD", 190);
        this.AddKey("SLASH", 191);
        this.AddKey("CONTROL", 17);
        this.AddKey("ALT", 18);
        this.AddKey("SPACE", 32);
        this.AddKey("UP", 38);
        this.AddKey("DOWN", 40);
        this.AddKey("LEFT", 37);
        this.AddKey("RIGHT", 39);
        this.AddKey("TAB", 9)
    };
    nt["oaktree.ext.input.Keyboard"] = bX;
    bX.__name__ = ["oaktree", "ext", "input", "Keyboard"];
    bX.__super__ = b8;
    bX.prototype = lP(b8.prototype, {
        ESCAPE: null,
        ONE: null,
        TWO: null,
        THREE: null,
        FOUR: null,
        FIVE: null,
        SIX: null,
        SEVEN: null,
        EIGHT: null,
        NINE: null,
        ZERO: null,
        PAGEUP: null,
        PAGEDOWN: null,
        HOME: null,
        END: null,
        INSERT: null,
        MINUS: null,
        PLUS: null,
        DELETE: null,
        BACKSPACE: null,
        TAB: null,
        Q: null,
        W: null,
        E: null,
        R: null,
        T: null,
        Y: null,
        U: null,
        I: null,
        O: null,
        P: null,
        LBRACKET: null,
        RBRACKET: null,
        BACKSLASH: null,
        CAPSLOCK: null,
        A: null,
        S: null,
        D: null,
        F: null,
        G: null,
        H: null,
        J: null,
        K: null,
        L: null,
        SEMICOLON: null,
        QUOTE: null,
        ENTER: null,
        SHIFT: null,
        Z: null,
        X: null,
        C: null,
        V: null,
        B: null,
        N: null,
        M: null,
        COMMA: null,
        PERIOD: null,
        SLASH: null,
        CONTROL: null,
        ALT: null,
        SPACE: null,
        UP: null,
        DOWN: null,
        LEFT: null,
        RIGHT: null,
        HandleKeyDown: function(q) {
            var i = this._map[q.keyCode];
            if (i == null) {
                return
            }
            if (i.get_Current() > 0) {
                i.set_Current(1)
            } else {
                i.set_Current(2)
            }
            ar.setField(this, i.get_Name(), true)
        },
        HandleKeyUp: function(q) {
            var i = this._map[q.keyCode];
            if (i == null) {
                return
            }
            if (i.get_Current() > 0) {
                i.set_Current(-1)
            } else {
                i.set_Current(0)
            }
            ar.setField(this, i.get_Name(), false)
        },
        __class__: bX
    });
    var dk = function() {};
    nt["oaktree.ext.localization.I18n"] = dk;
    dk.__name__ = ["oaktree", "ext", "localization", "I18n"];
    dk.mapping = null;
    dk.init = function(i) {
        dk.mapping = new io();
        var i1 = ar.fields(i);
        var js = 0;
        while (js < i1.length) {
            var q = i1[js];
            ++js;
            if (dk.mapping.exists(q)) {
                null
            }
            var i2 = ar.field(i, q);
            dk.mapping.set(q, i2)
        }
        dk.initialized = true;
        dk.onInit.dispatch()
    };
    dk.to_string = function() {
        var i = [];
        var i1 = dk.mapping.keys();
        while (i1.hasNext()) {
            var q = i1.next();
            i.push(" " + q + ': "' + dk.mapping.get(q) + '"')
        }
        return "{ " + i.join(",") + "}"
    };
    dk.text = function(i, i1) {
        if (dk.mapping == null || !dk.mapping.exists(i)) {
            return "" + i
        }
        var q = dk.mapping.get(i);
        q = j5.withFormat(q, i1);
        return q
    };
    dk.exists = function(i) {
        return dk.mapping.exists(i)
    };
    dk.prototype = {
        __class__: dk
    };
    var cr = nt["oaktree.ext.networking.ServerConnectionStatus"] = {
        __ename__: ["oaktree", "ext", "networking", "ServerConnectionStatus"],
        __constructs__: ["DISCONNECTED", "CONNECTING", "CONNECTED"]
    };
    cr.DISCONNECTED = ["DISCONNECTED", 0];
    cr.DISCONNECTED.toString = ea;
    cr.DISCONNECTED.__enum__ = cr;
    cr.CONNECTING = ["CONNECTING", 1];
    cr.CONNECTING.toString = ea;
    cr.CONNECTING.__enum__ = cr;
    cr.CONNECTED = ["CONNECTED", 2];
    cr.CONNECTED.toString = ea;
    cr.CONNECTED.__enum__ = cr;
    var ab = function(q, i) {
        this.type = q;
        this.properties = i
    };
    nt["oaktree.ext.services.ServiceConfig"] = ab;
    ab.__name__ = ["oaktree", "ext", "services", "ServiceConfig"];
    ab.prototype = {
        type: null,
        properties: null,
        __class__: ab
    };
    var l4 = function() {};
    nt["oaktree.ext.services.ServiceManager"] = l4;
    l4.__name__ = ["oaktree", "ext", "services", "ServiceManager"];
    l4.serviceList = null;
    l4.getService = function(i1) {
        var q = l4.serviceList.h;
        var i2 = null;
        while (q != null) {
            var i;
            i = (function(qY) {
                var js;
                i2 = q[0];
                q = q[1];
                js = i2;
                return js
            }(this));
            if (n0.__instanceof(i, i1)) {
                return i
            }
        }
        return null
    };
    l4.initialize = function(qZ) {
        l4.serviceList = new oI();
        var qY = mH(qZ)();
        while (qY.hasNext()) {
            var q = qY.next();
            var i1 = kX.createInstance(q.type, []);
            i1.create();
            if (q.properties != null) {
                if (n0.__instanceof(i1, hp)) {
                    (n0.__cast(i1, hp)).configure(q.properties)
                } else {
                    cO.copyProperties(q.properties, i1)
                }
            }
            l4.serviceList.push(i1)
        }
        var i2 = l4.serviceList.h;
        var js = null;
        while (i2 != null) {
            var i;
            i = (function(q1) {
                var q0;
                js = i2[0];
                i2 = i2[1];
                q0 = js;
                return q0
            }(this));
            i.initialize()
        }
    };
    var nZ = function() {};
    nt["oaktree.ext.social.fb.FBService"] = nZ;
    nZ.__name__ = ["oaktree", "ext", "social", "fb", "FBService"];
    nZ.prototype = {
        getQueryRequests: function() {
            if (nK.environment.webEnv.getParameter("request_ids") != null) {
                return this.getAppRequests()
            }
            return null
        },
        getAppRequests: function() {
            var q = this;
            var i = new cN();
            FB.api("/me/apprequests", function(i1) {
                q.onAppRequests(i1, i)
            });
            return i.boundPromise
        },
        onAppRequests: function(i1, q) {
            var i = this.extractAppRequestsIds(i1);
            q.resolve(i)
        },
        extractAppRequestsIds: function(qZ) {
            var i = {
                gifts: [],
                invites: []
            };
            if (qZ && !qZ.error) {
                var i1 = qZ.data;
                var js = 0;
                while (js < i1.length) {
                    var i2 = i1[js];
                    ++js;
                    if (i2.data == "gift") {
                        var qY = i2.id;
                        i.gifts.push(qY.substr(0, qY.indexOf("_")))
                    } else {
                        if (i2.data == "invite") {
                            var q = i2.id;
                            i.invites.push(q.substr(0, q.indexOf("_")))
                        }
                    }
                }
            } else {
                null
            }
            return i
        },
        inviteFriends: function(i, q) {
            this.doInvite(i.title, i.message, i.users, q)
        },
        doInvite: function(q, i, i2, i1) {
            FB.ui({
                method: "apprequests",
                title: q,
                message: i,
                to: i2,
                data: "invite"
            }, i1)
        },
        __class__: nZ
    };
    var iB = function(i) {
        if (i == null) {
            i = ""
        }
        this.id = "";
        this._members = [];
        this.id = i
    };
    nt["oaktree.ext.ui.TextGroup"] = iB;
    iB.__name__ = ["oaktree", "ext", "ui", "TextGroup"];
    iB.prototype = {
        id: null,
        length: null,
        _members: null,
        add: function(i) {
            this._members.push(i);
            return i
        },
        remove: function(q) {
            var i = cj.indexOf(this._members, q, 0);
            if (i != -1) {
                this._members.splice(i, 1)
            }
        },
        get_length: function() {
            return this._members.length
        },
        useLowestFontSize: function(i, q3) {
            if (q3 == null) {
                q3 = false
            }
            if (i == null) {
                i = 0
            }
            var q0 = -1;
            var q2 = false;
            var i2 = 0;
            var qZ = this._members;
            while (i2 < qZ.length) {
                var q1 = qZ[i2];
                ++i2;
                if (q0 == -1 || q0 > q1.getTextFormat().size) {
                    q0 = q1.getTextFormat().size;
                    q2 = true
                }
            }
            q0 = Math.floor(Math.max(i, q0));
            if (q2) {
                var qY = 0;
                var i1 = this._members;
                while (qY < i1.length) {
                    var q = i1[qY];
                    ++qY;
                    var js = q.getTextFormat();
                    if (!q3 || js.size >= q0) {
                        js.size = q0;
                        q.set_defaultTextFormat(js);
                        q.setTextFormat(js);
                        q.setText(q.get_text(), true)
                    }
                }
            }
            return q0
        },
        __class__: iB,
        __properties__: {
            get_length: "get_length"
        }
    };
    var fI = function() {
        var q = ih.fetch("dialog-closebutton");
        var i = ih.fetch("dialog-closebutton-disabled");
        this.upState = new el(q);
        this.overState = new el(i);
        this.downState = new el(q);
        this.disabledState = new el(i);
        bh.call(this)
    };
    nt["oaktree.ext.ui.controls.CloseButton"] = fI;
    fI.__name__ = ["oaktree", "ext", "ui", "controls", "CloseButton"];
    fI.__super__ = bh;
    fI.prototype = lP(bh.prototype, {
        __class__: fI
    });
    var fT = function(i, q, js, i2, i1) {
        if (i1 == null) {
            i1 = 0
        }
        if (i2 == null) {
            i2 = 0
        }
        if (js == null) {
            js = "left"
        }
        cY.call(this);
        this.padding = i2;
        this.paddingTop = i1;
        this.iconPosition = js;
        this.set_icon(q);
        this.label = new m1(i);
        if (q != null) {
            this.addChild(q);
            q.set_y(0)
        }
        this.set_text(i.text);
        this.set_textAlign(i.align);
        this.addChild(this.label);
        this.label.addEventListener("addedToStage", oT(this, this.onAdded));
        this.addEventListener("addedToStage", oT(this, this.onAdded))
    };
    nt["oaktree.ext.ui.controls.IconLabel"] = fT;
    fT.__name__ = ["oaktree", "ext", "ui", "controls", "IconLabel"];
    fT.__super__ = cY;
    fT.prototype = lP(cY.prototype, {
        label: null,
        icon: null,
        get_icon: function() {
            return this.icon
        },
        set_icon: function(i) {
            if (i == null && this.get_icon() != null) {
                this.removeChild(this.get_icon())
            }
            return this.icon = i
        },
        iconPosition: null,
        padding: null,
        paddingTop: null,
        text: null,
        get_text: function() {
            return this.text
        },
        set_text: function(i) {
            this.updateLabelText(i);
            return this.text = i
        },
        textAlign: null,
        get_textAlign: function() {
            return this.textAlign
        },
        set_textAlign: function(i) {
            this.label.get_defaultTextFormat().align = i;
            this.updateLabelText(this.get_text());
            return this.textAlign = i
        },
        onAdded: function(i) {
            this.updateLabelText(this.get_text())
        },
        updateLabelText: function(i) {
            this.label.set_text(i);
            this.updatePosition()
        },
        updatePosition: function() {
            if (this.parent != null) {
                this.label.set_y(0);
                var i = this.get_textAlign();
                switch (i) {
                    case 0:
                        this.label.set_x((this.parent.get_width() - this.label.get_width()) / 2);
                        break;
                    case 4:
                        this.label.set_x(this.parent.get_width() - this.label.get_width() - 5);
                        break;
                    default:
                        this.label.set_x(5)
                }
                this.positionIcon()
            }
        },
        positionIcon: function() {
            if (this.get_icon() != null) {
                if (this.iconPosition.toLowerCase() == "right") {
                    var q = this.label;
                    q.set_x(q.get_x() - this.get_icon().get_width() / 2);
                    this.get_icon().set_x(this.label.get_x() + this.label.get_width() + this.padding)
                } else {
                    var i = this.label;
                    i.set_x(i.get_x() + this.get_icon().get_width() / 2);
                    this.get_icon().set_x(this.label.get_x() - this.get_icon().get_width() - this.padding)
                }
                this.get_icon().set_y(this.label.get_y() + (this.label.get_height() - this.get_icon().get_height()) / 2 + this.paddingTop)
            }
        },
        __class__: fT,
        __properties__: lP(cY.prototype.__properties__, {
            set_textAlign: "set_textAlign",
            get_textAlign: "get_textAlign",
            set_text: "set_text",
            get_text: "get_text",
            set_icon: "set_icon",
            get_icon: "get_icon"
        })
    });
    var hJ = function(i) {
        cY.call(this);
        if (i.labelOptions.autoSize == null) {
            i.labelOptions.autoSize = 1
        }
        i.labelOptions.autoSize;
        this.label = new m1(i.labelOptions);
        this.label.set_selectable(false);
        this.label.mouseEnabled = false;
        this.shape = new mR();
        this.shape.get_graphics().beginFill(i.backgroundColor, 1);
        this.shape.get_graphics().drawRoundRect(0, 0, i.labelWidth, i.labelHeight, i.radius, i.radius);
        this.shape.get_graphics().endFill();
        this.addChild(this.shape);
        this.addChild(this.label);
        this.label.addEventListener("addedToStage", oT(this, this.onAdded))
    };
    nt["oaktree.ext.ui.controls.LabelRectangle"] = hJ;
    hJ.__name__ = ["oaktree", "ext", "ui", "controls", "LabelRectangle"];
    hJ.__super__ = cY;
    hJ.prototype = lP(cY.prototype, {
        shape: null,
        label: null,
        onAdded: function(i) {
            this.removeEventListener("addedToStage", oT(this, this.onAdded));
            this.doLayout()
        },
        doLayout: function() {
            this.label.set_x((this.shape.get_width() - this.label.get_width()) / 2);
            this.label.set_y((this.shape.get_height() - this.label.get_height()) / 2)
        },
        __class__: hJ
    });
    var gw = function(i) {
        this.rowsPerPage = 1;
        this.totalPages = 0;
        this.itemsPerPage = 0;
        this.itemHeight = 0;
        this.itemWidth = 0;
        this.currentPage = 0;
        this.spacing = 4;
        if (i.name == null) {
            i.name = "paginated_control"
        }
        i.name;
        if (i.w == null) {
            i.w = 100
        }
        i.w;
        if (i.h == null) {
            i.h = 100
        }
        i.h;
        this.options = i;
        this.S_onChange = new qv();
        mG.call(this, this.options);
        this.items = [];
        this.container = new mG({
            name: "" + this.get_name() + ".container"
        });
        this.addChild(this.container);
        this.set_size(this.w, this.h)
    };
    nt["oaktree.ext.ui.controls.PaginatedContainer"] = gw;
    gw.__name__ = ["oaktree", "ext", "ui", "controls", "PaginatedContainer"];
    gw.__super__ = mG;
    gw.prototype = lP(mG.prototype, {
        container: null,
        items: null,
        options: null,
        clipMask: null,
        spacing: null,
        currentPage: null,
        typicalItem: null,
        itemWidth: null,
        itemHeight: null,
        itemsPerPage: null,
        totalPages: null,
        rowsPerPage: null,
        S_onChange: null,
        addItem: function(i) {
            if (this.items.length == 0 && this.typicalItem == null) {
                this.typicalItem = i
            }
            this.items.push(i);
            this.update_layout();
            return i
        },
        removeItem: function(i) {
            cj.remove(this.items, i);
            this.update_layout();
            return i
        },
        addArray: function(i) {
            this.empty();
            if (i.length > 0) {
                var i1 = 0;
                while (i1 < i.length) {
                    var q = i[i1];
                    ++i1;
                    this.addItem(q)
                }
                this.update_layout()
            }
            return i
        },
        empty: function() {
            while (this.container.get_numChildren() > 0) {
                this.container.removeChildAt(0)
            }
            this.items = []
        },
        update_layout: function() {
            this.itemWidth = this.typicalItem.w + this.spacing;
            this.itemHeight = this.typicalItem.h + this.spacing;
            this.itemsPerPage = Math.floor(this.w / this.itemWidth) * this.rowsPerPage;
            this.totalPages = Math.ceil(this.items.length / this.itemsPerPage);
            var q0 = this.itemsPerPage / this.rowsPerPage | 0;
            var qY = this.currentPage * q0;
            var q = this.itemsPerPage * this.currentPage;
            var js = 0;
            var i2 = this.itemsPerPage;
            while (js < i2) {
                var i1 = js++;
                var q2 = qY + (i1 % q0 | 0);
                var q1 = i1 / q0 | 0;
                if (q >= this.items.length) {
                    break
                }
                var q3 = this.items[q];
                if (!this.container.contains(q3)) {
                    this.container.addChild(q3)
                }
                q3.set_x(q2 * this.itemWidth);
                q3.set_y(q1 * this.itemHeight);
                q++
            }
            var qZ = Math.round(-qY * this.itemWidth);
            d3.tween(this.container, 0.5, {
                x: qZ
            })
        },
        next_page: function() {
            this.set_page(this.currentPage + 1);
            this.S_onChange.dispatch()
        },
        previous_page: function() {
            this.set_page(this.currentPage - 1);
            this.S_onChange.dispatch()
        },
        set_page: function(i) {
            if (i < 0 || i >= this.totalPages) {
                return
            }
            this.currentPage = i;
            this.update_layout();
            this.S_onChange.dispatch()
        },
        update_clip_mask: function() {
            if (this.clipMask != null && this.clipMask.get_width() == this.w && this.clipMask.get_height() == this.h) {
                return
            }
            if (this.clipMask != null) {
                if (this.contains(this.clipMask)) {
                    this.removeChild(this.clipMask)
                }
                this.clipMask.get_graphics().clear()
            } else {
                this.clipMask = new mR()
            }
            this.clipMask.get_graphics().beginFill(16711935, 0.3);
            this.clipMask.get_graphics().drawRect(0, 0, this.w, this.h + 1);
            this.clipMask.get_graphics().endFill();
            this.clipMask.set_y(-1);
            this.addChild(this.clipMask);
            this.set_mask(this.clipMask)
        },
        set_size: function(i, q) {
            mG.prototype.set_size.call(this, i, q);
            this.update_clip_mask()
        },
        __class__: gw
    });
    var kj = function() {
        this.totalPages = 1;
        this.visiblePages = 6;
        this.currentPage = 0;
        this.spacing = 10;
        this.firstPage = 0;
        mG.call(this, {
            name: "pagination_control"
        });
        this.itemPool = [];
        this.S_onChange = new qv();
        this.addEventListener("addedToStage", oT(this, this.onAddedToStage))
    };
    nt["oaktree.ext.ui.controls.PaginationControl"] = kj;
    kj.__name__ = ["oaktree", "ext", "ui", "controls", "PaginationControl"];
    kj.__super__ = mG;
    kj.prototype = lP(mG.prototype, {
        firstPage: null,
        spacing: null,
        currentPage: null,
        visiblePages: null,
        totalPages: null,
        paginationItemClass: null,
        itemPool: null,
        gotoFirstButton: null,
        gotoLastButton: null,
        gotoNextButton: null,
        gotoPreviousButton: null,
        S_onChange: null,
        hideArrows: function() {
            this.hideLeft();
            this.hideRight()
        },
        hideRight: function() {
            this.gotoLastButton.set_enabled(false);
            this.gotoLastButton.set_alpha(0.6);
            this.gotoNextButton.set_enabled(false);
            this.gotoNextButton.set_alpha(0.6)
        },
        hideLeft: function() {
            this.gotoFirstButton.set_enabled(false);
            this.gotoFirstButton.set_alpha(0.6);
            this.gotoPreviousButton.set_enabled(false);
            this.gotoPreviousButton.set_alpha(0.6)
        },
        showArrows: function() {
            this.showLeft();
            this.showRight()
        },
        showRight: function() {
            this.gotoLastButton.set_enabled(true);
            this.gotoLastButton.set_alpha(1);
            this.gotoNextButton.set_enabled(true);
            this.gotoNextButton.set_alpha(1)
        },
        showLeft: function() {
            this.gotoFirstButton.set_enabled(true);
            this.gotoFirstButton.set_alpha(1);
            this.gotoPreviousButton.set_enabled(true);
            this.gotoPreviousButton.set_alpha(1)
        },
        onAddedToStage: function(i) {
            this.removeEventListener("addedToStage", oT(this, this.onAddedToStage));
            this.addEventListener("removedFromStage", oT(this, this.onRemovedFromStage));
            this.update()
        },
        onRemovedFromStage: function(i) {
            this.addEventListener("addedToStage", oT(this, this.onAddedToStage))
        },
        update: function() {
            if (this.stage == null) {
                return
            }
            var q = Math.round(Math.max(this.firstPage, this.currentPage - Math.floor((this.visiblePages - 1) / 2)));
            var i1 = Math.round(Math.min(this.totalPages, q + this.visiblePages - 1));
            q = Math.round(Math.max(this.firstPage, Math.min(q, i1 - this.visiblePages + 1)));
            while (this.get_numChildren() > 0) {
                this.removeChildAt(0)
            }
            if (this.gotoFirstButton != null) {
                this.addChild(this.gotoFirstButton);
                this.gotoFirstButton.set_selected(false);
                this.gotoFirstButton.addEventListener("click", oT(this, this.onFirstButtonClick))
            }
            if (this.gotoPreviousButton != null) {
                this.addChild(this.gotoPreviousButton);
                this.gotoPreviousButton.set_selected(false);
                this.gotoPreviousButton.addEventListener("click", oT(this, this.onPreviousButtonClick))
            }
            var qY = q;
            while (qY < i1) {
                var js = qY++;
                var qZ;
                if (js >= this.itemPool.length) {
                    qZ = kX.createInstance(this.paginationItemClass, []);
                    this.itemPool.push(qZ)
                } else {
                    qZ = this.itemPool[js]
                }
                qZ.set_name("" + js);
                if (js == q) {
                    qZ.set_name("0")
                }
                if (js == i1 - 1) {
                    qZ.set_name("" + (this.totalPages - 1))
                }
                var i2 = this.addChild(qZ);
                i2.set_selected(js == this.currentPage);
                i2.setText("" + (kr.parseInt(qZ.get_name()) + 1));
                qZ.addEventListener("click", oT(this, this.handlePageClick))
            }
            if (this.gotoNextButton != null) {
                this.addChild(this.gotoNextButton);
                this.gotoNextButton.set_selected(false);
                this.gotoNextButton.addEventListener("click", oT(this, this.onNextButtonClick))
            }
            if (this.gotoLastButton != null) {
                this.addChild(this.gotoLastButton);
                this.gotoLastButton.set_selected(false);
                this.gotoLastButton.addEventListener("click", oT(this, this.onLastButtonClick))
            }
            this.showArrows();
            if (this.totalPages == 1) {
                this.hideLeft();
                this.hideRight()
            } else {
                if (this.currentPage == q) {
                    this.hideLeft()
                } else {
                    if (this.currentPage == i1 - 1) {
                        this.hideRight()
                    }
                }
            }
            this.update_layout()
        },
        onFirstButtonClick: function(i) {
            this.set_currentPage(0);
            this.S_onChange.dispatch()
        },
        onLastButtonClick: function(i) {
            this.set_currentPage(this.totalPages - 1);
            this.S_onChange.dispatch()
        },
        onPreviousButtonClick: function(q) {
            var i1 = this;
            var i = i1.currentPage;
            i1.set_currentPage(i - 1);
            i;
            this.S_onChange.dispatch()
        },
        onNextButtonClick: function(q) {
            var i1 = this;
            var i = i1.currentPage;
            i1.set_currentPage(i + 1);
            i;
            this.S_onChange.dispatch()
        },
        handlePageClick: function(q) {
            var i1 = q.currentTarget;
            var i = kr.parseInt(i1.get_name());
            this.set_currentPage(i);
            this.S_onChange.dispatch()
        },
        update_layout: function() {
            var q3 = 0;
            var q2 = 0;
            var q0 = this.get_numChildren();
            while (q2 < q0) {
                var qY = q2++;
                q3 = Math.max(q3, this.getChildAt(0).get_height())
            }
            var q = 0;
            var i2;
            var qZ = 0;
            var q1 = this.get_numChildren();
            while (qZ < q1) {
                var js = qZ++;
                i2 = this.getChildAt(js);
                i2.set_x(q);
                i2.set_y((q3 - i2.get_height()) * 0.5);
                q += i2.get_width() + this.spacing
            }
        },
        set_totalPages: function(i) {
            this.totalPages = i;
            this.update();
            return this.totalPages
        },
        set_visiblePages: function(i) {
            this.visiblePages = i;
            this.update();
            return i
        },
        set_currentPage: function(i) {
            if (i < 0 || i >= this.totalPages) {
                return this.currentPage
            }
            this.currentPage = i;
            this.update();
            return i
        },
        set_spacing: function(i) {
            this.spacing = i;
            this.update();
            return i
        },
        __class__: kj,
        __properties__: lP(mG.prototype.__properties__, {
            set_totalPages: "set_totalPages",
            set_visiblePages: "set_visiblePages",
            set_currentPage: "set_currentPage",
            set_spacing: "set_spacing"
        })
    });
    var aN = function(i) {
        this.topY = 0;
        this.bottomY = 0;
        this.rightX = 0;
        this.leftX = 0;
        f1.call(this, i);
        if (this.imageFrameName != null) {
            this.imageFrameName = this.removeExtension(this.imageFrameName)
        }
    };
    nt["oaktree.objects.FramedSpriteVO"] = aN;
    aN.__name__ = ["oaktree", "objects", "FramedSpriteVO"];
    aN.__super__ = f1;
    aN.prototype = lP(f1.prototype, {
        scaleHorizontal: null,
        scaleVertical: null,
        texture: null,
        imageFrameName: null,
        leftX: null,
        rightX: null,
        bottomY: null,
        topY: null,
        handleSpecialTypes: function(i, q) {
            if (i == "UniqueImage") {
                if (Object.prototype.hasOwnProperty.call(q.UniqueImage, "Source_Frame")) {
                    this.imageFrameName = q.UniqueImage.Source_Frame
                }
                if (Object.prototype.hasOwnProperty.call(q.UniqueImage, "X_Left")) {
                    this.leftX = q.UniqueImage.X_Left
                }
                if (Object.prototype.hasOwnProperty.call(q.UniqueImage, "X_Right")) {
                    this.rightX = q.UniqueImage.X_Right
                }
                if (Object.prototype.hasOwnProperty.call(q.UniqueImage, "Y_Bottom")) {
                    this.bottomY = q.UniqueImage.Y_Bottom
                }
                if (Object.prototype.hasOwnProperty.call(q.UniqueImage, "Y_Top")) {
                    this.topY = q.UniqueImage.Y_Top
                }
                return true
            }
            return false
        },
        removeExtension: function(i) {
            var q = new gF("\\.(png|jpg|gif)$", "g");
            return q.replace(i, "")
        },
        asRectangle: function() {
            return new gn(this.leftX, this.topY, this.rightX, this.bottomY)
        },
        clone: function() {
            var i = new aN();
            i.leftX = this.leftX;
            i.rightX = this.rightX;
            i.topY = this.topY;
            i.bottomY = this.bottomY;
            i.scaleHorizontal = this.scaleHorizontal;
            i.scaleVertical = this.scaleVertical;
            i.texture = this.texture;
            i.imageFrameName = this.imageFrameName;
            return i
        },
        getResourceList: function(i) {
            var q = {
                atlasName: this.texture,
                spriteName: this.imageFrameName,
                isAtlas: true
            };
            i.push(q);
            return i
        },
        __class__: aN
    });
    var gt = function(i) {
        this.assets = [];
        f1.call(this, i)
    };
    nt["oaktree.objects.ManifestVO"] = gt;
    gt.__name__ = ["oaktree", "objects", "ManifestVO"];
    gt.__super__ = f1;
    gt.prototype = lP(f1.prototype, {
        build: null,
        assets: null,
        __class__: gt
    });
    var lZ = function(i) {
        f1.call(this, i)
    };
    nt["oaktree.objects.AssetVO"] = lZ;
    lZ.__name__ = ["oaktree", "objects", "AssetVO"];
    lZ.__super__ = f1;
    lZ.prototype = lP(f1.prototype, {
        id: null,
        src: null,
        type: null,
        base: null,
        texture: null,
        metafile: null,
        __class__: lZ
    });
    var oO = function(i) {
        this.textField = i;
        this.width = 100;
        this.height = 100;
        this.text = "";
        this.bounds = new gn(0, 0, 0, 0);
        this.type = 0;
        this.autoSize = 2;
        this.displayAsPassword = false;
        this.embedFonts = false;
        this.selectable = true;
        this.borderColor = 0;
        this.border = false;
        this.backgroundColor = 16777215;
        this.background = false;
        this.gridFitType = 1;
        this.maxChars = 0;
        this.multiline = false;
        this.sharpness = 0;
        this.scrollH = 0;
        this.scrollV = 1;
        this.wordWrap = false;
        this.lineAscents = [];
        this.lineBreaks = [];
        this.lineDescents = [];
        this.lineLeadings = [];
        this.lineHeights = [];
        this.lineWidths = [];
        this.layoutGroups = [];
        this.textFormatRanges = [];
        oO.__canvas = window.document.createElement("canvas");
        oO.__context = oO.__canvas.getContext("2d")
    };
    nt["openfl._internal.text.TextEngine"] = oO;
    oO.__name__ = ["openfl", "_internal", "text", "TextEngine"];
    oO.__canvas = null;
    oO.__context = null;
    oO.findFont = function(i) {
        return null
    };
    oO.getFont = function(q) {
        var i;
        if (q.italic) {
            i = "italic "
        } else {
            i = "normal "
        }
        i += "normal ";
        if (q.bold) {
            i += "bold "
        } else {
            i += "normal "
        }
        i += q.size + "px";
        i += "/" + (q.size + q.leading + 6) + "px ";
        i += "" + (function(i2) {
            var i1;
            var js = q.font;
            i1 = (function(qZ) {
                var qY;
                switch (js) {
                    case "_sans":
                        qY = "sans-serif";
                        break;
                    case "_serif":
                        qY = "serif";
                        break;
                    case "_typewriter":
                        qY = "monospace";
                        break;
                    default:
                        qY = "'" + q.font + "'"
                }
                return qY
            }(i2));
            return i1
        }(this));
        return i
    };
    oO.getFontInstance = function(i) {
        return null
    };
    oO.prototype = {
        antiAliasType: null,
        autoSize: null,
        background: null,
        backgroundColor: null,
        border: null,
        borderColor: null,
        bottomScrollV: null,
        bounds: null,
        caretIndex: null,
        displayAsPassword: null,
        embedFonts: null,
        gridFitType: null,
        height: null,
        layoutGroups: null,
        lineAscents: null,
        lineBreaks: null,
        lineDescents: null,
        lineLeadings: null,
        lineHeights: null,
        lineWidths: null,
        maxChars: null,
        maxScrollH: null,
        maxScrollV: null,
        multiline: null,
        numLines: null,
        restrict: null,
        scrollH: null,
        scrollV: null,
        selectable: null,
        sharpness: null,
        text: null,
        textHeight: null,
        textFormatRanges: null,
        textWidth: null,
        type: null,
        width: null,
        wordWrap: null,
        textField: null,
        __cursorPosition: null,
        __cursorTimer: null,
        __hasFocus: null,
        __isKeyDown: null,
        __measuredHeight: null,
        __measuredWidth: null,
        __selectionStart: null,
        __showCursor: null,
        __textFormat: null,
        __textLayout: null,
        __texture: null,
        __tileData: null,
        __tileDataLength: null,
        __tilesheets: null,
        __cairoFont: null,
        __font: null,
        __hiddenInput: null,
        getBounds: function() {
            var i;
            if (this.border) {
                i = 1
            } else {
                i = 0
            }
            this.bounds.width = this.width + i;
            this.bounds.height = this.height + i
        },
        getLine: function(i) {
            if (i < 0 || i > this.lineBreaks.length + 1) {
                return null
            }
            if (this.lineBreaks.length == 0) {
                return this.text
            } else {
                return this.text.substring(i > 0 ? this.lineBreaks[i - 1] : 0, this.lineBreaks[i])
            }
        },
        getLineMeasurements: function() {
            this.lineAscents.splice(0, this.lineAscents.length);
            this.lineDescents.splice(0, this.lineDescents.length);
            this.lineLeadings.splice(0, this.lineLeadings.length);
            this.lineHeights.splice(0, this.lineHeights.length);
            this.lineWidths.splice(0, this.lineWidths.length);
            var q = 0;
            var i = 0;
            var q0 = null;
            var js = 0;
            var qZ = 0;
            this.textWidth = 0;
            this.textHeight = 0;
            this.numLines = 1;
            this.bottomScrollV = 0;
            this.maxScrollH = 0;
            var qY = 0;
            var i1 = this.layoutGroups;
            while (qY < i1.length) {
                var i2 = i1[qY];
                ++qY;
                while (i2.lineIndex > this.numLines - 1) {
                    this.lineAscents.push(q);
                    this.lineDescents.push(i);
                    this.lineLeadings.push(q0 != null ? q0 : 0);
                    this.lineHeights.push(js);
                    this.lineWidths.push(qZ);
                    q = 0;
                    i = 0;
                    q0 = null;
                    js = 0;
                    qZ = 0;
                    this.numLines++;
                    if (this.textHeight <= this.height - 2) {
                        this.bottomScrollV++
                    }
                }
                q = Math.max(q, i2.ascent);
                i = Math.max(i, i2.descent);
                if (q0 == null) {
                    q0 = i2.leading
                } else {
                    q0 = kr["int"](Math.max(q0, i2.leading))
                }
                js = Math.max(js, i2.height);
                qZ = i2.offsetX - 2 + i2.width;
                if (qZ > this.textWidth) {
                    this.textWidth = qZ
                }
                this.textHeight = i2.offsetY - 2 + i2.ascent + i2.descent
            }
            this.lineAscents.push(q);
            this.lineDescents.push(i);
            this.lineLeadings.push(q0 != null ? q0 : 0);
            this.lineHeights.push(js);
            this.lineWidths.push(qZ);
            if (this.numLines == 1) {
                this.bottomScrollV = 1;
                if (q0 > 0) {
                    this.textHeight += q0
                }
            } else {
                if (this.textHeight <= this.height - 2) {
                    this.bottomScrollV++
                }
            }
            if (this.textWidth > this.width - 4) {
                this.maxScrollH = this.textWidth - this.width + 4 | 0
            } else {
                this.maxScrollH = 0
            }
            this.maxScrollV = this.numLines - this.bottomScrollV + 1
        },
        getLayoutGroups: function() {
            var rJ = this;
            this.layoutGroups.splice(0, this.layoutGroups.length);
            var rc = -1;
            var rp = null;
            var rI = null;
            var rD = mx.__defaultTextFormat.clone();
            var rq = 0;
            var rf = 0;
            var rm = 0;
            var rA;
            var rl;
            var rr;
            var rB = 0;
            var rb = 0;
            var qZ = 0;
            var rK = this.text.indexOf(" ");
            var rk = this.text.indexOf("\n");
            var rL = 0;
            var ro = 2;
            var rn = 2;
            var rF = 0;
            var js = 0;
            var qY = null;
            if (rc < rJ.textFormatRanges.length - 1) {
                rc++;
                rp = rJ.textFormatRanges[rc];
                rD.__merge(rp.format);
                oO.__context.font = oO.getFont(rD);
                rf = rD.size;
                rm = rD.size * 0.185;
                rq = rD.leading;
                rB = rf + rm + rq;
                if (rK > -1) {
                    rb = oO.__context.measureText(" ").width
                }
            }
            qY = rp.format;
            var rv;
            while (rF < this.text.length) {
                if (rk > -1 && (rK == -1 || rk < rK) && rp.end >= rk) {
                    rA = new dJ(rp.format, rF, rk);
                    var ri = this.text;
                    var ra = [];
                    var rG = rF;
                    while (rG < rk) {
                        var rH = rG++;
                        ra.push(oO.__context.measureText(ri.charAt(rH)).width)
                    }
                    rA.advances = ra;
                    rA.offsetX = ro;
                    rA.ascent = rf;
                    rA.descent = rm;
                    rA.leading = rq;
                    rA.lineIndex = js;
                    rA.offsetY = rn;
                    var q9 = rA.advances;
                    var q = 0;
                    var rE = 0;
                    while (rE < q9.length) {
                        var q7 = q9[rE];
                        ++rE;
                        q += q7
                    }
                    rA.width = q;
                    rA.height = rB;
                    this.layoutGroups.push(rA);
                    rn += rB;
                    ro = 2;
                    if (this.wordWrap && rA.offsetX + rA.width > this.width - 2) {
                        rA.offsetY = rn;
                        rA.offsetX = ro;
                        rn += rB;
                        js++
                    }
                    rF = rk + 1;
                    rk = this.text.indexOf("\n", rF);
                    js++;
                    if (rp.end == rk) {
                        if (rc < rJ.textFormatRanges.length - 1) {
                            rc++;
                            rp = rJ.textFormatRanges[rc];
                            rD.__merge(rp.format);
                            oO.__context.font = oO.getFont(rD);
                            rf = rD.size;
                            rm = rD.size * 0.185;
                            rq = rD.leading;
                            rB = rf + rm + rq;
                            if (rK > -1) {
                                rb = oO.__context.measureText(" ").width
                            }
                        }
                        qY = rp.format
                    }
                } else {
                    if (rp.end >= rK && rK > -1) {
                        rA = null;
                        rv = false;
                        while (true) {
                            if (rK == -1) {
                                rK = rp.end
                            }
                            var rh = this.text;
                            var q8 = [];
                            var rC = rF;
                            while (rC < rK) {
                                var q4 = rC++;
                                q8.push(oO.__context.measureText(rh.charAt(q4)).width)
                            }
                            rl = q8;
                            var rz = 0;
                            var ry = 0;
                            while (ry < rl.length) {
                                var re = rl[ry];
                                ++ry;
                                rz += re
                            }
                            rr = rz;
                            if (this.wordWrap) {
                                if (ro + rr > this.width - 2) {
                                    rv = true
                                }
                            }
                            if (rv) {
                                rn += rB;
                                var q3 = this.layoutGroups.length - 1;
                                var rs = 0;
                                while (true) {
                                    rA = this.layoutGroups[q3];
                                    if (q3 > 0 && rA.startIndex > qZ) {
                                        rs++
                                    } else {
                                        break
                                    }
                                    q3--
                                }
                                js++;
                                ro = 2;
                                if (rs > 0) {
                                    var q0 = this.layoutGroups[this.layoutGroups.length - rs].offsetX;
                                    var rj = this.layoutGroups.length - rs;
                                    var rx = this.layoutGroups.length;
                                    while (rj < rx) {
                                        var q2 = rj++;
                                        rA = this.layoutGroups[q2];
                                        rA.offsetX -= q0;
                                        rA.offsetY = rn;
                                        rA.lineIndex = js;
                                        ro += rA.width
                                    }
                                }
                                rA = new dJ(rp.format, rF, rK);
                                rA.advances = rl;
                                rA.offsetX = ro;
                                rA.ascent = rf;
                                rA.descent = rm;
                                rA.leading = rq;
                                rA.lineIndex = js;
                                rA.offsetY = rn;
                                rA.width = rr;
                                rA.height = rB;
                                this.layoutGroups.push(rA);
                                ro = rr + rb;
                                rL = rb;
                                rv = false
                            } else {
                                if (rA != null && rF == rK) {
                                    if (rp.format.align != 2) {
                                        rA.endIndex = rK
                                    }
                                    rA.advances.push(rb);
                                    rL += rb
                                } else {
                                    if (rA == null || qY.align == 2) {
                                        rA = new dJ(rp.format, rF, rK);
                                        rA.advances = rl;
                                        rA.offsetX = ro;
                                        rA.ascent = rf;
                                        rA.descent = rm;
                                        rA.leading = rq;
                                        rA.lineIndex = js;
                                        rA.offsetY = rn;
                                        rA.width = rr;
                                        rA.height = rB;
                                        this.layoutGroups.push(rA);
                                        rA.advances.push(rb);
                                        rL = rb
                                    } else {
                                        rA.endIndex = rK;
                                        rA.advances = rA.advances.concat(rl);
                                        rA.width += rL + rr;
                                        rA.advances.push(rb);
                                        rL = rb
                                    }
                                }
                                ro += rr + rb
                            }
                            rF = rK + 1;
                            qZ = rK;
                            rK = this.text.indexOf(" ", qZ + 1);
                            if (rp.end <= qZ) {
                                rA = null;
                                if (rc < rJ.textFormatRanges.length - 1) {
                                    rc++;
                                    rp = rJ.textFormatRanges[rc];
                                    rD.__merge(rp.format);
                                    oO.__context.font = oO.getFont(rD);
                                    rf = rD.size;
                                    rm = rD.size * 0.185;
                                    rq = rD.leading;
                                    rB = rf + rm + rq;
                                    if (rK > -1) {
                                        rb = oO.__context.measureText(" ").width
                                    }
                                }
                            }
                            if (rK > rk && rk > -1 || rF > this.text.length || rK > rp.end || rK == -1 && rk > -1) {
                                break
                            }
                        }
                    } else {
                        if (rF >= rp.end) {
                            break
                        }
                        rA = new dJ(rp.format, rF, rp.end);
                        var rg = this.text;
                        var q6 = [];
                        var ru = rF;
                        while (ru < rp.end) {
                            var q1 = ru++;
                            q6.push(oO.__context.measureText(rg.charAt(q1)).width)
                        }
                        rA.advances = q6;
                        rA.offsetX = ro;
                        rA.ascent = rf;
                        rA.descent = rm;
                        rA.leading = rq;
                        rA.lineIndex = js;
                        rA.offsetY = rn;
                        var q5 = rA.advances;
                        var rw = 0;
                        var rt = 0;
                        while (rt < q5.length) {
                            var rd = q5[rt];
                            ++rt;
                            rw += rd
                        }
                        rA.width = rw;
                        rA.height = rB;
                        this.layoutGroups.push(rA);
                        ro += rA.width;
                        rF = rp.end;
                        if (rc < rJ.textFormatRanges.length - 1) {
                            rc++;
                            rp = rJ.textFormatRanges[rc];
                            rD.__merge(rp.format);
                            oO.__context.font = oO.getFont(rD);
                            rf = rD.size;
                            rm = rD.size * 0.185;
                            rq = rD.leading;
                            rB = rf + rm + rq;
                            if (rK > -1) {
                                rb = oO.__context.measureText(" ").width
                            }
                        }
                    }
                }
            }
        },
        setTextAlignment: function() {
            var q5 = -1;
            var qY = 0;
            var q4;
            var q;
            var q2 = 0;
            var js = this.layoutGroups.length;
            while (q2 < js) {
                var i2 = q2++;
                q4 = this.layoutGroups[i2];
                if (q4.lineIndex != q5) {
                    q5 = q4.lineIndex;
                    var q1 = q4.format.align;
                    switch (q1) {
                        case 0:
                            if (this.lineWidths[q5] < this.width - 4) {
                                qY = Math.round((this.width - 4 - this.lineWidths[q5]) / 2)
                            } else {
                                qY = 0
                            }
                            break;
                        case 4:
                            if (this.lineWidths[q5] < this.width - 4) {
                                qY = Math.round(this.width - 4 - this.lineWidths[q5])
                            } else {
                                qY = 0
                            }
                            break;
                        case 2:
                            if (this.lineWidths[q5] < this.width - 4) {
                                q = 1;
                                var qZ = i2 + 1;
                                var q0 = this.layoutGroups.length;
                                while (qZ < q0) {
                                    var i1 = qZ++;
                                    if (this.layoutGroups[i1].lineIndex == q5) {
                                        q++
                                    } else {
                                        break
                                    }
                                }
                                if (q > 1) {
                                    q4 = this.layoutGroups[i2 + q - 1];
                                    if (q4.endIndex < this.text.length && this.text.charAt(q4.endIndex) != "\n") {
                                        qY = (this.width - 4 - this.lineWidths[q5]) / (q - 1);
                                        var q3 = 1;
                                        while (q3 < q) {
                                            var q6 = q3++;
                                            this.layoutGroups[i2 + q6].offsetX += qY * q6
                                        }
                                    }
                                }
                            }
                            qY = 0;
                            break;
                        default:
                            qY = 0
                    }
                }
                if (qY > 0) {
                    q4.offsetX += qY
                }
            }
        },
        update: function() {
            if (this.text == null || cP.trim(this.text) == "" || this.textFormatRanges.length == 0) {
                this.lineAscents.splice(0, this.lineAscents.length);
                this.lineBreaks.splice(0, this.lineBreaks.length);
                this.lineDescents.splice(0, this.lineDescents.length);
                this.lineLeadings.splice(0, this.lineLeadings.length);
                this.lineHeights.splice(0, this.lineHeights.length);
                this.lineWidths.splice(0, this.lineWidths.length);
                this.layoutGroups.splice(0, this.layoutGroups.length);
                this.textWidth = 0;
                this.textHeight = 0;
                this.numLines = 1;
                this.maxScrollH = 0;
                this.maxScrollV = 1;
                this.bottomScrollV = 1
            } else {
                this.getLayoutGroups();
                this.getLineMeasurements();
                this.setTextAlignment()
            }
            this.getBounds()
        },
        __class__: oO
    };
    var kV = function(i) {
        oO.call(this, i)
    };
    nt["oaktree.text.TextEngineOutline"] = kV;
    kV.__name__ = ["oaktree", "text", "TextEngineOutline"];
    kV.__super__ = oO;
    kV.prototype = lP(oO.prototype, {
        outline: null,
        outlineColor: null,
        outlineWidth: null,
        __class__: kV
    });
    var fH = function() {};
    nt["oaktree.utils.Accounting"] = fH;
    fH.__name__ = ["oaktree", "utils", "Accounting"];
    fH._instance = null;
    fH.getInstance = function() {
        if (fH._instance == null) {
            fH._instance = new fH()
        }
        return fH._instance
    };
    fH.checkPrecision = function(i1, q) {
        if (q == null) {
            q = 10
        }
        var i = Math.round(Math.abs(i1));
        if (isNaN(i)) {
            return q
        } else {
            return i
        }
    };
    fH.checkCurrencyFormat = function(q) {
        var i = fH.settings.currency.formatObj;
        if (q != null && typeof(q) == "string" && q.indexOf("%v") != -1) {
            return {
                pos: q,
                neg: cP.replace(cP.replace(q, "-", ""), "%v", "-%v"),
                zero: q
            }
        } else {
            if (i == null) {
                i = fH.settings.currency.formatObj = {
                    pos: fH.settings.currency.format,
                    neg: cP.replace(fH.settings.currency.format, "%v", "-%v"),
                    zero: fH.settings.currency.format
                }
            }
            return i
        }
    };
    fH.unformat = function(i2, i) {
        if (i == null) {
            i = fH.settings.number.decimal
        } else {
            i = i
        }
        var i1 = new gF("[^0-9-" + i + "]", "g");
        var js = new gF("\\((.*)\\)", "");
        var q = kr.parseFloat(cP.replace(i1.replace(js.replace(i2, "-$1"), ""), i, "."));
        if (!isNaN(q)) {
            return q
        } else {
            return 0
        }
    };
    fH.toFixed = function(i1, i) {
        i = fH.checkPrecision(i, fH.settings.number.precision);
        var q = Math.pow(10, i);
        return l6.toFixed(Math.round(i1 * q) / q, i)
    };
    fH.formatNumber = function(i1, qZ, q6, qY) {
        var i = fH.defaults({
            precision: qZ,
            thousand: q6,
            decimal: qY
        }, fH.settings.number);
        var q0 = fH.checkPrecision(i.precision);
        var i2;
        if (i1 < 0) {
            i2 = "-"
        } else {
            i2 = ""
        }
        var q = kr.parseInt(fH.toFixed(Math.abs(i1), q0)) + "";
        var q5;
        if (q.length > 3) {
            q5 = q.length % 3
        } else {
            q5 = 0
        }
        var q4 = new gF("(\\d{3})(?=\\d)", "g");
        var q3;
        if (q5 != 0) {
            q3 = cj.substr(q, 0, q5) + i.thousand
        } else {
            q3 = ""
        }
        var q2 = q4.replace(cj.substr(q, q5, null), "$1" + i.thousand);
        var js = fH.toFixed(Math.abs(i1), q0).split(".")[1];
        var q1;
        if (q0 != 0) {
            q1 = i.decimal + js
        } else {
            q1 = ""
        }
        return i2 + q3 + q2 + q1
    };
    fH.copyAnonymous = function(q) {
        var i2 = ar.fields(q);
        var qZ = {};
        var qY = 0;
        var q0 = i2.length;
        while (qY < q0) {
            var i1 = qY++;
            var js = i2[i1];
            ar.setField(qZ, js, ar.getProperty(q, js))
        }
        return qZ
    };
    fH.defaults = function(i2, qY) {
        var q = fH.copyAnonymous(qY);
        if (i2 == null) {
            return q
        }
        var i = ar.fields(qY);
        var js = 0;
        while (js < i.length) {
            var i1 = i[js];
            ++js;
            if (Object.prototype.hasOwnProperty.call(i2, i1)) {
                ar.setField(q, i1, ar.getProperty(i2, i1))
            }
        }
        return q
    };
    fH.formatMoney = function(qZ, js) {
        var qY = fH.defaults(js, fH.settings.currency);
        var i = fH.checkCurrencyFormat(qY.format);
        var i2;
        if (qZ > 0) {
            i2 = i.pos
        } else {
            if (qZ < 0) {
                i2 = i.neg
            } else {
                i2 = i.zero
            }
        }
        var i1 = cP.replace(i2, "%s", qY.symbol);
        var q0 = fH.formatNumber(Math.abs(qZ), fH.checkPrecision(qY.precision), qY.thousand, qY.decimal);
        var q = cP.replace(i1, "%v", q0);
        return q
    };
    fH.getSymbol = function(q, i) {
        if (i == null) {
            i = "$"
        }
        if (q != null && (function(qY) {
                var i2;
                var js = q.toUpperCase();
                i2 = fH.codeToSymbolMap.exists(js);
                return i2
            }(this))) {
            var i1 = q.toUpperCase();
            return fH.codeToSymbolMap.get(i1)
        } else {
            return i
        }
    };
    fH.prototype = {
        __class__: fH
    };
    var aG = function() {};
    nt["oaktree.utils.ArrayUtil"] = aG;
    aG.__name__ = ["oaktree", "utils", "ArrayUtil"];
    aG.indexOf = function(i2, i1) {
        var js = 0;
        var qY = i2.length;
        while (js < qY) {
            var q = js++;
            if (i2[q] == i1) {
                return q
            }
        }
        return -1
    };
    var l8 = function() {};
    nt["oaktree.utils.ByteConversions"] = l8;
    l8.__name__ = ["oaktree", "utils", "ByteConversions"];
    l8.byteArrayToBytes = function(i) {
        return op.toBytes(i)
    };
    l8.bytesToByteArray = function(i) {
        return op.fromBytes(i)
    };
    l8.arrayBufferToBytes = function(i) {
        return op.toBytes(i)
    };
    var ko = function(q, i) {
        if (i == null) {
            i = 0
        }
        if (isNaN(q) || q < 0) {
            throw new nM(new lY("The delay specified is negative or not a finite number"))
        }
        lR.call(this);
        this.__delay = q;
        this.set_repeatCount(i);
        this.running = false;
        this.currentCount = 0
    };
    nt["openfl.utils.Timer"] = ko;
    ko.__name__ = ["openfl", "utils", "Timer"];
    ko.__super__ = lR;
    ko.prototype = lP(lR.prototype, {
        currentCount: null,
        repeatCount: null,
        running: null,
        __delay: null,
        __timer: null,
        __timerID: null,
        reset: function() {
            if (this.running) {
                this.stop()
            }
            this.currentCount = 0
        },
        start: function() {
            if (!this.running) {
                this.running = true;
                this.__timerID = window.setInterval(oT(this, this.timer_onTimer), this.__delay | 0)
            }
        },
        stop: function() {
            this.running = false;
            if (this.__timerID != null) {
                window.clearInterval(this.__timerID);
                this.__timerID = null
            }
        },
        get_delay: function() {
            return this.__delay
        },
        set_delay: function(i) {
            this.__delay = i;
            if (this.running) {
                this.stop();
                this.start()
            }
            return this.__delay
        },
        set_repeatCount: function(i) {
            if (this.running && i != 0 && i <= this.currentCount) {
                this.stop()
            }
            this.repeatCount = i;
            return i
        },
        timer_onTimer: function() {
            this.currentCount++;
            if (this.repeatCount > 0 && this.currentCount >= this.repeatCount) {
                this.stop();
                this.dispatchEvent(new nj("timer"));
                this.dispatchEvent(new nj("timerComplete"))
            } else {
                this.dispatchEvent(new nj("timer"))
            }
        },
        __class__: ko,
        __properties__: {
            set_repeatCount: "set_repeatCount",
            set_delay: "set_delay",
            get_delay: "get_delay"
        }
    });
    var qT = function(q, i) {
        if (i == null) {
            i = 0
        }
        this.data = {};
        ko.call(this, q, i)
    };
    nt["oaktree.utils.DataTimer"] = qT;
    qT.__name__ = ["oaktree", "utils", "DataTimer"];
    qT.__super__ = ko;
    qT.prototype = lP(ko.prototype, {
        data: null,
        __class__: qT
    });
    var e = nt["oaktree.utils.PicSize"] = {
        __ename__: ["oaktree", "utils", "PicSize"],
        __constructs__: ["Small", "Square", "Normal", "Large", "Custom"]
    };
    e.Small = ["Small", 0];
    e.Small.toString = ea;
    e.Small.__enum__ = e;
    e.Square = ["Square", 1];
    e.Square.toString = ea;
    e.Square.__enum__ = e;
    e.Normal = ["Normal", 2];
    e.Normal.toString = ea;
    e.Normal.__enum__ = e;
    e.Large = ["Large", 3];
    e.Large.toString = ea;
    e.Large.__enum__ = e;
    e.Custom = function(q, i) {
        var i1 = ["Custom", 4, q, i];
        i1.__enum__ = e;
        i1.toString = ea;
        return i1
    };
    var ms = function() {};
    nt["oaktree.utils.FBUtils"] = ms;
    ms.__name__ = ["oaktree", "utils", "FBUtils"];
    ms.getFBProfilePic = function(i2, i1) {
        var qY;
        var q = "";
        switch (i1[1]) {
            case 0:
                qY = "small";
                break;
            case 2:
                qY = "normal";
                break;
            case 3:
                qY = "large";
                break;
            case 1:
                qY = "square";
                break;
            case 4:
                var js = i1[3];
                var i = i1[2];
                qY = "normal";
                q = "&width=" + i + "&height=" + js;
                break
        }
        return "https://graph.facebook.com/" + i2 + "/picture?type=" + qY + q
    };
    var nE = function() {};
    nt["oaktree.utils.FontUtils"] = nE;
    nE.__name__ = ["oaktree", "utils", "FontUtils"];
    nE.registerFontOnHTML = function(i2, qZ) {
        var q1 = window.document.getElementsByTagName("head")[0];
        var i = cP.replace(i2, ".ttf", "");
        var i1 = cP.replace(qZ, ".ttf", "");
        var q = i1 + ".ttf";
        var js = i1 + ".eot";
        var q2 = i1 + ".woff";
        var qY = window.document.createElement("style");
        qY.setAttribute("type", "text/css");
        var q0 = "@font-face {\n";
        q0 += "  font-family: '" + i + "';\n";
        q0 += "  src: url('" + js + "') format('eot'), url('" + q2 + "') format('woff'), url('" + q + "') format('truetype');\n";
        q0 += "}";
        qY.innerHTML = q0;
        window.document.head.appendChild(qY);
        var q3 = window.document.createElement("div");
        q3.setAttribute("style", 'font-family: "' + i + '"; position: absolute; left: -99999;');
        q3.innerHTML = "&nbsp;";
        window.document.body.appendChild(q3)
    };
    var mr = function() {};
    nt["oaktree.utils.MCGraphics"] = mr;
    mr.__name__ = ["oaktree", "utils", "MCGraphics"];
    mr.drawRoundRectComplex = function(js, q0, qZ, q1, qY, i2, i, q, i1) {
        js.moveTo(q0 + i2, qZ);
        js.lineTo(q0 + q1 - i, qZ);
        js.curveTo(q0 + q1, qZ, q1, qZ + i);
        js.lineTo(q0 + q1, qZ + qY - i1);
        js.curveTo(q0 + q1, qZ + qY, q0 + q1 - i1, qZ + qY);
        js.lineTo(q0 + q, qZ + qY);
        js.curveTo(q0, qZ + qY, q0, qZ + qY - q);
        js.lineTo(q0, qZ + i2);
        js.curveTo(q0, qZ, q0 + i2, qZ)
    };
    var mo = function() {};
    nt["oaktree.utils.MacroUtils"] = mo;
    mo.__name__ = ["oaktree", "utils", "MacroUtils"];
    var l6 = function() {};
    nt["oaktree.utils.Maths"] = l6;
    l6.__name__ = ["oaktree", "utils", "Maths"];
    l6.fixed = function(q, i) {
        var i1 = Math.pow(10, i);
        return (q * i1 | 0) / i1
    };
    l6.lerp = function(i, i1, q) {
        if (q < 0) {
            q = 0
        } else {
            if (q > 1) {
                q = 1
            } else {
                q = q
            }
        }
        return i + q * (i1 - i)
    };
    l6.toFixed = function(q1, js) {
        if (isNaN(q1)) {
            return "NaN"
        } else {
            var q2 = l6.exp(10, js);
            var q3 = kr.string(Math.round(q1 * q2) / q2);
            var qY = q3.indexOf(".");
            if (qY != -1) {
                var qZ = cj.substr(q3, qY + 1, null).length;
                while (qZ < js) {
                    var i2 = qZ++;
                    q3 += "0"
                }
            } else {
                q3 += ".";
                var q0 = 0;
                while (q0 < js) {
                    var q = q0++;
                    q3 += "0"
                }
            }
            return q3
        }
    };
    l6.exp = function(i, i2) {
        var q = 1;
        var i1 = 0;
        while (true) {
            if ((i2 & 1) != 0) {
                q = i * q
            }
            i2 >>= 1;
            if (i2 == 0) {
                i1 = q;
                break
            } else {
                i *= i
            }
        }
        return i1
    };
    l6.clamp = function(i1, q, i) {
        if (i1 < q) {
            return q
        } else {
            if (i1 > i) {
                return i
            } else {
                return i1
            }
        }
    };
    l6.clampI = function(i1, q, i) {
        if (i1 < q) {
            return q
        } else {
            if (i1 > i) {
                return i
            } else {
                return i1
            }
        }
    };
    l6.prototype = {
        __class__: l6
    };
    var cO = function() {};
    nt["oaktree.utils.ObjectUtility"] = cO;
    cO.__name__ = ["oaktree", "utils", "ObjectUtility"];
    cO.copyProperties = function(js, qY, i1) {
        var i2 = 0;
        var q = ar.fields(js);
        while (i2 < q.length) {
            var i = q[i2];
            ++i2;
            if (i1 == null || !(cj.indexOf(i1, i, 0) != -1)) {
                ar.setProperty(qY, i, ar.field(js, i))
            }
        }
    };
    cO.mergeObjects = function(i1, q) {
        var i = cO.cloneObject(i1);
        cO.copyProperties(q, i);
        return i
    };
    cO.cloneObject = function(i) {
        var q = {};
        cO.copyProperties(i, q);
        return q
    };
    var el = function(i1, q, i) {
        if (i == null) {
            i = false
        }
        eH.call(this);
        this.bitmapData = i1;
        this.pixelSnapping = q;
        this.smoothing = i;
        if (q == null) {
            this.pixelSnapping = 1
        }
    };
    nt["openfl.display.Bitmap"] = el;
    el.__name__ = ["openfl", "display", "Bitmap"];
    el.__super__ = eH;
    el.prototype = lP(eH.prototype, {
        bitmapData: null,
        pixelSnapping: null,
        smoothing: null,
        __image: null,
        __getBounds: function(i1, i) {
            if (this.bitmapData != null) {
                var q = gn.__temp;
                q.setTo(0, 0, this.bitmapData.width, this.bitmapData.height);
                q.__transform(q, i);
                i1.__expand(q.x, q.y, q.width, q.height)
            }
        },
        __hitTest: function(q, q0, i1, i, qZ, qY) {
            if (!qY.get_visible() || this.__isMask || this.bitmapData == null) {
                return false
            }
            if (this.get_mask() != null && !this.get_mask().__hitTestMask(q, q0)) {
                return false
            }
            this.__getWorldTransform();
            var js = this.__worldTransform.__transformInverseX(q, q0);
            var i2 = this.__worldTransform.__transformInverseY(q, q0);
            if (js > 0 && i2 > 0 && js <= this.bitmapData.width && i2 <= this.bitmapData.height) {
                if (i != null && !qZ) {
                    i.push(qY)
                }
                return true
            }
            return false
        },
        __hitTestMask: function(i, i2) {
            if (this.bitmapData == null) {
                return false
            }
            this.__getWorldTransform();
            var i1 = this.__worldTransform.__transformInverseX(i, i2);
            var q = this.__worldTransform.__transformInverseY(i, i2);
            if (i1 > 0 && q > 0 && i1 <= this.bitmapData.width && q <= this.bitmapData.height) {
                return true
            }
            return false
        },
        __renderCairo: function(i) {
            mf.render(this, i)
        },
        __renderCairoMask: function(i) {
            i.cairo.rectangle(0, 0, this.get_width(), this.get_height())
        },
        __renderCanvas: function(i) {
            cp.render(this, i)
        },
        __renderCanvasMask: function(i) {
            i.context.rect(0, 0, this.get_width(), this.get_height())
        },
        __renderDOM: function(i) {
            if (this.stage != null && this.__worldVisible && this.__renderable && this.bitmapData != null && this.bitmapData.__isValid) {
                if (this.bitmapData.image.buffer.__srcImage != null) {
                    mT.renderImage(this, i)
                } else {
                    mT.renderCanvas(this, i)
                }
            } else {
                if (this.__image != null) {
                    i.element.removeChild(this.__image);
                    this.__image = null;
                    this.__style = null
                }
                if (this.__canvas != null) {
                    i.element.removeChild(this.__canvas);
                    this.__canvas = null;
                    this.__style = null
                }
            }
        },
        __renderGL: function(i) {
            if (this.__cacheAsBitmap) {
                this.__cacheGL(i);
                return
            }
            if (this.__scrollRect != null) {
                i.maskManager.pushRect(this.__scrollRect, this.__renderTransform)
            }
            if (this.__mask != null && this.__maskGraphics != null && this.__maskGraphics.__commands.get_length() > 0) {
                i.maskManager.pushMask(this)
            }
            if (!this.__renderable || this.__worldAlpha <= 0 || this.bitmapData == null || !this.bitmapData.__isValid) {
                null
            } else {
                i.spriteBatch.renderBitmapData(this.bitmapData, this.smoothing, this.__renderTransform, this.__worldColorTransform, this.__worldAlpha, this.__blendMode, this.__shader, this.pixelSnapping)
            }
            if (this.__mask != null && this.__maskGraphics != null && this.__maskGraphics.__commands.get_length() > 0) {
                i.maskManager.popMask()
            }
            if (this.__scrollRect != null) {
                i.maskManager.popRect()
            }
        },
        __updateMask: function(i) {
            if (this.bitmapData == null) {
                return
            }
            i.__commands.overrideMatrix(this.__worldTransform);
            i.beginFill(0);
            i.drawRect(0, 0, this.bitmapData.width, this.bitmapData.height);
            if (i.__bounds == null) {
                i.__bounds = new gn()
            }
            this.__getBounds(i.__bounds, qd.__identity);
            eH.prototype.__updateMask.call(this, i)
        },
        get_height: function() {
            if (this.bitmapData != null) {
                return this.bitmapData.height * this.get_scaleY()
            }
            return 0
        },
        set_height: function(i) {
            if (this.bitmapData != null) {
                if (i != this.bitmapData.height) {
                    this.set_scaleY(i / this.bitmapData.height)
                }
                return i
            }
            return 0
        },
        get_width: function() {
            if (this.bitmapData != null) {
                return this.bitmapData.width * this.get_scaleX()
            }
            return 0
        },
        set_width: function(i) {
            if (this.bitmapData != null) {
                if (i != this.bitmapData.width) {
                    this.set_scaleX(i / this.bitmapData.width)
                }
                return i
            }
            return 0
        },
        __class__: el
    });
    var ay = function(q, i2, i1, i) {
        if (i == null) {
            i = true
        }
        this.isHorizontal = false;
        this._sourceBitmapData = q;
        this._slices = [];
        if (i1 == null) {
            i1 = 0
        }
        el.call(this, null, i1, i);
        this._grid = i2;
        this._renderWidth = q.width;
        this._renderHeight = q.height;
        this.update();
        this.render()
    };
    nt["oaktree.utils.Slice9Bitmap"] = ay;
    ay.__name__ = ["oaktree", "utils", "Slice9Bitmap"];
    ay.fromFrameSpriteVO = function(q, i) {
        return new ay(q, new gn(i.leftX, i.topY, Math.max(q.width - i.rightX - i.leftX, 1), Math.max(q.height - i.bottomY - i.topY, 1)))
    };
    ay.__super__ = el;
    ay.prototype = lP(el.prototype, {
        isHorizontal: null,
        _sourceBitmapData: null,
        _grid: null,
        _renderWidth: null,
        _renderHeight: null,
        _slices: null,
        update: function() {
            var q3 = 0;
            var qZ = this._grid.x;
            var i2 = this._grid.x + this._grid.width;
            var q2 = 0;
            var qY = this._grid.y;
            var q = this._grid.y + this._grid.height;
            var q1 = this._grid.x;
            var q5 = this._grid.width;
            var js = this._sourceBitmapData.width - this._grid.width - this._grid.x;
            var q4 = this._grid.y;
            var q0 = this._grid.height;
            var i = this._sourceBitmapData.height - this._grid.height - this._grid.y;
            var i1 = new gn();
            i1.setTo(q3, q2, q1, q4);
            this._slices[0] = this.getSliceBitmapData(i1);
            i1.setTo(qZ, q2, q5, q4);
            this._slices[1] = this.getSliceBitmapData(i1);
            i1.setTo(i2, q2, js, q4);
            this._slices[2] = this.getSliceBitmapData(i1);
            i1.setTo(q3, qY, q1, q0);
            this._slices[3] = this.getSliceBitmapData(i1);
            i1.setTo(qZ, qY, q5, q0);
            this._slices[4] = this.getSliceBitmapData(i1);
            i1.setTo(i2, qY, js, q0);
            this._slices[5] = this.getSliceBitmapData(i1);
            i1.setTo(q3, q, q1, i);
            this._slices[6] = this.getSliceBitmapData(i1);
            i1.setTo(qZ, q, q5, i);
            this._slices[7] = this.getSliceBitmapData(i1);
            i1.setTo(i2, q, js, i);
            this._slices[8] = this.getSliceBitmapData(i1)
        },
        render: function() {
            if (this._renderWidth <= 0 || this._renderHeight <= 0) {
                return
            }
            this.bitmapData = new f0(this._renderWidth, this._renderHeight, true, 16777215);
            var q = new pp();
            var qY = 0;
            var q1 = 0;
            var q0;
            var i1 = new gn();
            var qZ = 0;
            while (qZ < 9) {
                var js = qZ++;
                qY = js % 3;
                q1 = Math.floor(js / 3);
                q0 = this._slices[js];
                if (q0 != null) {
                    i1.width = q0.width;
                    i1.height = q0.height
                }
                if ((qY == 0 || qY == 2) && (q1 == 0 || q1 == 2)) {
                    if (q0 != null) {
                        this.bitmapData.copyPixels(q0, q0.rect, q)
                    }
                } else {
                    if (qY == 1) {
                        i1.width = this._renderWidth - this._grid.x - (this._sourceBitmapData.width - this._grid.width - this._grid.x);
                        i1.width = Math.max(0, i1.width)
                    }
                    if (q1 == 1) {
                        i1.height = this._renderHeight - this._grid.y - (this._sourceBitmapData.height - this._grid.height - this._grid.y);
                        i1.height = Math.max(0, i1.height)
                    }
                    if (q0 != null) {
                        var i2 = new qd();
                        i2.scale(i1.width / q0.width, i1.height / q0.height);
                        i2.translate(q.x, q.y);
                        this.bitmapData.draw(q0, i2)
                    }
                }
                if (qY == 2) {
                    q.x = 0;
                    q.y += i1.height
                } else {
                    q.x += i1.width
                }
            }
        },
        setSize: function(i, q) {
            this._renderWidth = Math.round(Math.max(i, this._sourceBitmapData.width));
            this._renderHeight = q;
            if (this.isHorizontal && q < this._sourceBitmapData.height) {
                this._renderHeight = this._sourceBitmapData.height
            }
            this.update();
            this.render()
        },
        getSliceBitmapData: function(i) {
            var q = null;
            if (i.width > 0 && i.height > 0) {
                q = new f0(Math.floor(i.width), Math.floor(i.height), true, 16777215);
                q.copyPixels(this._sourceBitmapData, i, ay.POINT_ZERO)
            }
            return q
        },
        __class__: ay
    });
    var nk = function(i) {
        this.inited = false;
        this.active = false;
        this.enabled = false;
        this.name = "";
        if (i != null && i.name != null) {
            this.name = i.name
        }
    };
    nt["oaktree.utils.State"] = nk;
    nk.__name__ = ["oaktree", "utils", "State"];
    nk.prototype = {
        name: null,
        machine: null,
        enabled: null,
        active: null,
        inited: null,
        init: function() {},
        enable: function(i) {
            this.machine.enable(this.name, i)
        },
        disable: function(i) {
            this.machine.disable(this.name, i)
        },
        destroy: function() {
            this.machine.kill(this.name)
        },
        onEnter: function(i) {},
        onLeave: function(i) {},
        onEnabled: function(i) {},
        onDisabled: function(i) {},
        onAdded: function() {},
        onRemoved: function() {},
        onDestroy: function() {},
        _init: function() {
            if (!this.inited) {
                this.inited = true;
                this.init()
            }
        },
        __class__: nk
    };
    var iI = function(i) {
        this.active_count = 0;
        this._state_count = 0;
        this.createOnGet = false;
        this.name = "";
        if (i != null && i.name != null) {
            this.name = i.name
        }
        this._states = new io();
        this.active_states = []
    };
    nt["oaktree.utils.States"] = iI;
    iI.__name__ = ["oaktree", "utils", "States"];
    iI.prototype = {
        name: null,
        createOnGet: null,
        _states: null,
        _state_count: null,
        active_states: null,
        current_state: null,
        active_count: null,
        enter: function(i, q) {
            i.onEnter(q);
            this.active_states.push(i);
            this.active_count++;
            i.active = true
        },
        leave: function(i, q) {
            i.active = false;
            cj.remove(this.active_states, i);
            this.active_count--;
            i.onLeave(q)
        },
        add: function(i) {
            this._states.set(i.name, i);
            this._state_count++;
            i.machine = this;
            i.onAdded();
            return i
        },
        remove: function(i, i1) {
            if (this._states.exists(i)) {
                var q = this._states.get(i);
                if (q != null) {
                    if (q.active) {
                        this.leave(q, i1);
                        if (q == this.current_state) {
                            this.current_state = null
                        }
                    }
                    if (q.enabled) {
                        this.disable(q.name)
                    }
                    q.onRemoved();
                    this._states.remove(i);
                    this._state_count--
                }
                return q
            }
            return null
        },
        kill: function(i) {
            if (this._state_count > 0) {
                if (this._states.exists(i)) {
                    var q = this.remove(i);
                    if (q != null) {
                        q.onDestroy()
                    }
                }
            }
        },
        enable: function(i, q) {
            if (!this.createOnGet && this._state_count == 0) {
                return
            }
            var i1 = this.getState(i, this.createOnGet);
            if (i1 != null) {
                i1.onEnabled(q);
                i1.active = true;
                i1.enabled = true;
                this.active_states.push(i1);
                this.active_count++;
                null
            }
        },
        disable: function(i, q) {
            if (!this.createOnGet && this._state_count == 0) {
                return
            }
            var i1 = this.getState(i, this.createOnGet);
            if (i1 != null) {
                i1.onDisabled(q);
                i1.active = false;
                i1.enabled = false;
                cj.remove(this.active_states, i1);
                this.active_count--;
                null
            }
        },
        set: function(q, i1, i) {
            if (this.current_state != null) {
                this.leave(this.current_state, i);
                this.current_state = null
            }
            if (this._states.exists(q)) {
                this.current_state = this._states.get(q);
                this.enter(this.current_state, i1)
            }
        },
        getState: function(q, i) {
            if (i == null) {
                i = false
            }
            if (this._states.exists(q)) {
                return this._states.get(q)
            } else {
                if (i) {
                    var i1 = new nk({
                        name: q
                    });
                    this.add(i1);
                    return i1
                }
            }
            return null
        },
        isTopState: function(i) {
            if (this.getTopState() != null) {
                return this.getTopState().name == i
            }
            return false
        },
        getTopState: function() {
            if (this.active_states.length > 0) {
                return this.active_states[this.active_states.length - 1]
            }
            return null
        },
        isEnabled: function(i) {
            if (this._states.exists(i)) {
                return this._states.get(i).enabled
            }
            return false
        },
        __class__: iI
    };
    var j5 = function() {
        throw new nM(new lY("StringUtility is a static class. It should not be instantiated"))
    };
    nt["oaktree.utils.StringUtility"] = j5;
    j5.__name__ = ["oaktree", "utils", "StringUtility"];
    j5.compareStrings = function(q, i) {
        if (q == null) {
            return -1
        } else {
            if (i == null) {
                return 1
            }
        }
        q = q.toLowerCase();
        i = i.toLowerCase();
        if (q < i) {
            return -1
        } else {
            if (q > i) {
                return 1
            } else {
                return 0
            }
        }
    };
    j5.isEmpty = function(i) {
        return i == null || i == ""
    };
    j5.isBlank = function(i) {
        return i == null || i == "" || !new gF("\\S", "").match(i)
    };
    j5.formatNumber = function(i2, i1, i) {
        if (i == null) {
            i = ","
        }
        if (i1 == null || i1 == "") {
            if (i2 == null) {
                return "null"
            } else {
                return "" + i2
            }
        }
        if (i1 != null) {
            switch (i1) {
                case "n":
                    return j5.commaSeperateThousands(i2, i);
                case "p":
                    return j5.formatPercentage(i2)
            }
        }
        var q = i1.indexOf(".");
        if (q >= 0) {
            return j5.formatInteger(Math.floor(i2), cj.substr(i1, 0, q)) + "." + j5.formatNumberDecimal(i2, cj.substr(i1, q + 1, null))
        } else {
            return j5.formatInteger(Math.floor(i2), i1)
        }
    };
    j5.commaSeperateThousands = function(i, js) {
        if (js == null) {
            js = ","
        }
        var q = kr.string(Math.abs(i));
        var q0 = q.indexOf(".");
        var qZ = "";
        if (q0 >= 0) {
            qZ = "." + cj.substr(q, q0, null);
            q = cj.substr(q, 0, q0)
        }
        var q1 = q.length;
        var q2 = q1 - 1;
        var i2 = Math.floor((q1 - 1) / 3);
        var qY = 0;
        while (qY < i2) {
            var i1 = qY++;
            qZ = js + cj.substr(q, q1 - (i1 + 1) * 3, 3) + qZ
        }
        qZ = cj.substr(q, 0, q1 - i2 * 3) + qZ;
        if (i < 0) {
            qZ = "-" + qZ
        }
        return qZ
    };
    j5.formatInteger = function(i2, q1) {
        var i1 = kr.string(Math.floor(Math.abs(i2)));
        var q2 = i1.length;
        var q3 = q2 - 1;
        var qY = "";
        var qZ = 0;
        var js = q1.length;
        while (qZ < js) {
            var q = qZ++;
            var q0 = q1.charAt(q1.length - q - 1);
            switch (q0) {
                case "#":
                    if (q3 >= 0) {
                        qY = i1.charAt(q3) + qY;
                        q3--
                    }
                    break;
                case "0":
                    if (q3 >= 0) {
                        qY = i1.charAt(q3) + qY
                    } else {
                        qY = q0 + qY
                    }
                    q3--;
                    break;
                default:
                    qY = q0 + qY
            }
        }
        if (q3 >= 0) {
            qY = cj.substr(i1, 0, q3 + 1) + qY
        }
        if (i2 < 0) {
            qY = "-" + qY
        }
        return qY
    };
    j5.formatNumberDecimal = function(i, q0) {
        var i1;
        if (i == null) {
            i1 = "null"
        } else {
            i1 = "" + i
        }
        var q1 = i1.indexOf(".");
        if (q1 < 0) {
            i1 = ""
        } else {
            i1 = cj.substr(i1, q1 + 1, null)
        }
        var q2 = i1.length;
        var q3 = 0;
        var js = "";
        var qY = 0;
        var i2 = q0.length;
        while (qY < i2) {
            var q = qY++;
            var qZ = q0.charAt(q);
            switch (qZ) {
                case "#":
                    if (q3 < q2) {
                        js += i1.charAt(q3);
                        q3++
                    }
                    break;
                case "0":
                    if (q3 < q2) {
                        js += i1.charAt(q3)
                    } else {
                        js += qZ
                    }
                    q3++;
                    break;
                default:
                    js = qZ + js
            }
        }
        return js
    };
    j5.formatPercentage = function(i) {
        return Math.round(100 * i) + "%"
    };
    j5.formatTime = function(i) {
        var q = i % 60;
        return Math.floor(i / 60) + ":" + (q < 10 ? "0" + q : q == null ? "null" : "" + q)
    };
    j5.formatFloat = function(i1, i) {
        if (i == null) {
            i = -1
        }
        if (i >= 0) {
            var q = kr["int"](Math.pow(10, i));
            i1 = Math.round(i1 * q) / q
        }
        if (i1 == null) {
            return "null"
        } else {
            return "" + i1
        }
    };
    j5.withFormat = function(q1, i) {
        var q2 = q1;
        try {
            if (i != null) {
                if ((i instanceof Array) && i.__enum__ == null) {
                    var i1 = i;
                    var q = 0;
                    while (q < i1.length) {
                        var q0 = i1[q];
                        ++q;
                        q2 = j5.arrayParamsReg.replace(q2, q0)
                    }
                } else {
                    var i2 = ar.fields(i);
                    var qY = 0;
                    while (qY < i2.length) {
                        var qZ = i2[qY];
                        ++qY;
                        q2 = cP.replace(q2, "%" + qZ + "%", ar.field(i, qZ))
                    }
                }
            }
        } catch (js) {
            lF.lastException = js;
            if (js instanceof nM) {
                js = js.val
            }
        }
        return q2
    };
    j5.prototype = {
        __class__: j5
    };
    var cZ = function() {
        this._storage = new io()
    };
    nt["oaktree.utils.WarehouseInstance"] = cZ;
    cZ.__name__ = ["oaktree", "utils", "WarehouseInstance"];
    cZ.prototype = {
        _storage: null,
        store: function(i1, q) {
            var i = q;
            this._storage.set(i1, i);
            return q
        },
        fetch: function(i) {
            if (this._storage.get(i) == null) {
                eM.trace("no object found with handle '" + i + "'", {
                    fileName: "Warehouse.hx",
                    lineNumber: 30,
                    className: "oaktree.utils.WarehouseInstance",
                    methodName: "fetch"
                })
            }
            return this._storage.get(i)
        },
        "delete": function(i) {
            if (!this._storage.remove(i)) {
                eM.trace("no object found with handle '" + i + "'", {
                    fileName: "Warehouse.hx",
                    lineNumber: 42,
                    className: "oaktree.utils.WarehouseInstance",
                    methodName: "delete"
                })
            }
        },
        __class__: cZ
    };
    var ih = function() {};
    nt["oaktree.utils.Warehouse"] = ih;
    ih.__name__ = ["oaktree", "utils", "Warehouse"];
    ih.store = function(q, i) {
        return ih._store.store(q, i)
    };
    ih.fetch = function(i) {
        return ih._store.fetch(i)
    };
    ih["delete"] = function(i) {
        ih._store["delete"](i);
        return
    };
    var l7 = function() {};
    nt["openfl.IAssetCache"] = l7;
    l7.__name__ = ["openfl", "IAssetCache"];
    l7.prototype = {
        get_enabled: null,
        set_enabled: null,
        clear: null,
        getBitmapData: null,
        getFont: null,
        getSound: null,
        hasBitmapData: null,
        hasFont: null,
        hasSound: null,
        removeBitmapData: null,
        removeFont: null,
        removeSound: null,
        setBitmapData: null,
        setFont: null,
        setSound: null,
        __class__: l7,
        __properties__: {
            set_enabled: "set_enabled",
            get_enabled: "get_enabled"
        }
    };
    var nH = function() {
        this.__enabled = true;
        this.bitmapData = new io();
        this.font = new io();
        this.sound = new io()
    };
    nt["openfl.AssetCache"] = nH;
    nH.__name__ = ["openfl", "AssetCache"];
    nH.__interfaces__ = [l7];
    nH.prototype = {
        bitmapData: null,
        font: null,
        sound: null,
        __enabled: null,
        clear: function(qZ) {
            if (qZ == null) {
                this.bitmapData = new io();
                this.font = new io();
                this.sound = new io()
            } else {
                var qY = this.bitmapData.keys();
                while (qY.hasNext()) {
                    var i1 = qY.next();
                    if (cP.startsWith(i1, qZ)) {
                        this.bitmapData.remove(i1)
                    }
                }
                var q = this.font.keys();
                while (q.hasNext()) {
                    var js = q.next();
                    if (cP.startsWith(js, qZ)) {
                        this.font.remove(js)
                    }
                }
                var i = this.sound.keys();
                while (i.hasNext()) {
                    var i2 = i.next();
                    if (cP.startsWith(i2, qZ)) {
                        this.sound.remove(i2)
                    }
                }
            }
        },
        getBitmapData: function(i) {
            return this.bitmapData.get(i)
        },
        getFont: function(i) {
            return this.font.get(i)
        },
        getSound: function(i) {
            return this.sound.get(i)
        },
        hasBitmapData: function(i) {
            return this.bitmapData.exists(i)
        },
        hasFont: function(i) {
            return this.font.exists(i)
        },
        hasSound: function(i) {
            return this.sound.exists(i)
        },
        removeBitmapData: function(i) {
            return this.bitmapData.remove(i)
        },
        removeFont: function(i) {
            return this.font.remove(i)
        },
        removeSound: function(i) {
            return this.sound.remove(i)
        },
        setBitmapData: function(q, i) {
            this.bitmapData.set(q, i)
        },
        setFont: function(q, i) {
            this.font.set(q, i)
        },
        setSound: function(q, i) {
            this.sound.set(q, i)
        },
        get_enabled: function() {
            return this.__enabled
        },
        set_enabled: function(i) {
            return this.__enabled = i
        },
        __class__: nH,
        __properties__: {
            set_enabled: "set_enabled",
            get_enabled: "get_enabled"
        }
    };
    var k9 = function() {};
    nt["openfl.Assets"] = k9;
    k9.__name__ = ["openfl", "Assets"];
    k9.addEventListener = function(i1, js, i, q, i2) {
        if (i2 == null) {
            i2 = false
        }
        if (q == null) {
            q = 0
        }
        if (i == null) {
            i = false
        }
        if (!bY.onChange.has(k9.LimeAssets_onChange)) {
            bY.onChange.add(k9.LimeAssets_onChange)
        }
        k9.dispatcher.addEventListener(i1, js, i, q, i2)
    };
    k9.dispatchEvent = function(i) {
        return k9.dispatcher.dispatchEvent(i)
    };
    k9.exists = function(q, i) {
        return bY.exists(q, i)
    };
    k9.getBitmapData = function(js, i) {
        if (i == null) {
            i = true
        }
        if (i && k9.cache.get_enabled() && k9.cache.hasBitmapData(js)) {
            var q = k9.cache.getBitmapData(js);
            if (k9.isValidBitmapData(q)) {
                return q
            }
        }
        var i1 = bY.getImage(js, false);
        if (i1 != null) {
            var i2 = f0.fromImage(i1);
            if (i && k9.cache.get_enabled()) {
                k9.cache.setBitmapData(js, i2)
            }
            return i2
        }
        return null
    };
    k9.getBytes = function(i) {
        return op.fromBytes(bY.getBytes(i))
    };
    k9.getFont = function(i2, q) {
        if (q == null) {
            q = true
        }
        if (q && k9.cache.get_enabled() && k9.cache.hasFont(i2)) {
            return k9.cache.getFont(i2)
        }
        var i1 = bY.getFont(i2, false);
        if (i1 != null) {
            var i = nJ.__fromLimeFont(i1);
            if (q && k9.cache.get_enabled()) {
                k9.cache.setFont(i2, i)
            }
            return i
        }
        return new nJ()
    };
    k9.getLibrary = function(i) {
        return bY.getLibrary(i)
    };
    k9.getMovieClip = function(js) {
        var q = js.substring(0, js.indexOf(":"));
        var i1;
        var i2 = js.indexOf(":") + 1;
        i1 = cj.substr(js, i2, null);
        var i = k9.getLibrary(q);
        if (i != null) {
            if (i.exists(i1, "MOVIE_CLIP")) {
                if (i.isLocal(i1, "MOVIE_CLIP")) {
                    return i.getMovieClip(i1)
                } else {
                    eM.trace('[openfl.Assets] MovieClip asset "' + js + '" exists, but only asynchronously', {
                        fileName: "Assets.hx",
                        lineNumber: 223,
                        className: "openfl.Assets",
                        methodName: "getMovieClip"
                    })
                }
            } else {
                eM.trace('[openfl.Assets] There is no MovieClip asset with an ID of "' + js + '"', {
                    fileName: "Assets.hx",
                    lineNumber: 229,
                    className: "openfl.Assets",
                    methodName: "getMovieClip"
                })
            }
        } else {
            eM.trace('[openfl.Assets] There is no asset library named "' + q + '"', {
                fileName: "Assets.hx",
                lineNumber: 235,
                className: "openfl.Assets",
                methodName: "getMovieClip"
            })
        }
        return null
    };
    k9.getMusic = function(i1, i) {
        if (i == null) {
            i = true
        }
        var q = bY.getPath(i1);
        if (q != null) {
            return new eR(new nT(q))
        }
        return null
    };
    k9.getPath = function(i) {
        return bY.getPath(i)
    };
    k9.getSound = function(i2, i) {
        if (i == null) {
            i = true
        }
        if (i && k9.cache.get_enabled() && k9.cache.hasSound(i2)) {
            var i1 = k9.cache.getSound(i2);
            if (k9.isValidSound(i1)) {
                return i1
            }
        }
        var q = bY.getPath(i2);
        if (q != null) {
            return new eR(new nT(q))
        }
        return null
    };
    k9.getText = function(i) {
        return bY.getText(i)
    };
    k9.hasEventListener = function(i) {
        return k9.dispatcher.hasEventListener(i)
    };
    k9.isLocal = function(qZ, i2, i1) {
        if (i1 == null) {
            i1 = true
        }
        if (i1 && k9.cache.get_enabled()) {
            if (i2 == "IMAGE" || i2 == null) {
                if (k9.cache.hasBitmapData(qZ)) {
                    return true
                }
            }
            if (i2 == "FONT" || i2 == null) {
                if (k9.cache.hasFont(qZ)) {
                    return true
                }
            }
            if (i2 == "SOUND" || i2 == "MUSIC" || i2 == null) {
                if (k9.cache.hasSound(qZ)) {
                    return true
                }
            }
        }
        var q = qZ.substring(0, qZ.indexOf(":"));
        var js;
        var qY = qZ.indexOf(":") + 1;
        js = cj.substr(qZ, qY, null);
        var i = k9.getLibrary(q);
        if (i != null) {
            return i.isLocal(js, i2)
        }
        return false
    };
    k9.isValidBitmapData = function(i) {
        return i != null && i.image != null
    };
    k9.isValidSound = function(i) {
        return true
    };
    k9.list = function(i) {
        return bY.list(i)
    };
    k9.loadBitmapData = function(js, i, q) {
        if (i == null) {
            i = true
        }
        if (i == null) {
            i = true
        }
        var i2 = new oJ();
        if (q != null) {
            i2.future.onComplete(q);
            i2.future.onError(function(qY) {
                q(null)
            })
        }
        if (i && k9.cache.get_enabled() && k9.cache.hasBitmapData(js)) {
            var i1 = k9.cache.getBitmapData(js);
            if (k9.isValidBitmapData(i1)) {
                i2.complete(i1);
                return i2.future
            }
        }
        bY.loadImage(js, false).onComplete(function(qY) {
            if (qY != null) {
                var qZ = f0.fromImage(qY);
                if (i && k9.cache.get_enabled()) {
                    k9.cache.setBitmapData(js, qZ)
                }
                i2.complete(qZ)
            } else {
                i2.error('[Assets] Could not load Image "' + js + '"')
            }
        }).onError(oT(i2, i2.error)).onProgress(oT(i2, i2.progress));
        return i2.future
    };
    k9.loadBytes = function(i2, q) {
        var i1 = new oJ();
        var i = bY.loadBytes(i2);
        if (q != null) {
            i1.future.onComplete(q);
            i1.future.onError(function(js) {
                q(null)
            });
            i.onComplete(function(js) {
                i1.complete(op.fromBytes(js))
            });
            i.onProgress(function(js) {
                i1.progress(js)
            });
            i.onError(function(js) {
                i1.error(js)
            })
        }
        return i1.future
    };
    k9.loadFont = function(i2, i, q) {
        if (i == null) {
            i = true
        }
        if (i == null) {
            i = true
        }
        var i1 = new oJ();
        if (q != null) {
            i1.future.onComplete(q);
            i1.future.onError(function(js) {
                q(null)
            })
        }
        if (i && k9.cache.get_enabled() && k9.cache.hasFont(i2)) {
            i1.complete(k9.cache.getFont(i2));
            return i1.future
        }
        bY.loadFont(i2).onComplete(function(qY) {
            var js = nJ.__fromLimeFont(qY);
            if (i && k9.cache.get_enabled()) {
                k9.cache.setFont(i2, js)
            }
            i1.complete(js)
        }).onError(oT(i1, i1.error)).onProgress(oT(i1, i1.progress));
        return i1.future
    };
    k9.loadLibrary = function(q, i1) {
        var i = bY.loadLibrary(q);
        if (i1 != null) {
            i.onComplete(i1);
            i.onError(function(i2) {
                i1(null)
            })
        }
        return i
    };
    k9.loadMusic = function(i1, i, q) {
        if (i == null) {
            i = true
        }
        if (i == null) {
            i = true
        }
        return new kL(function() {
            return k9.getMusic(i1, i)
        })
    };
    k9.loadMovieClip = function(qZ, i1) {
        var js = new oJ();
        if (i1 != null) {
            js.future.onComplete(i1);
            js.future.onError(function(q0) {
                i1(null)
            })
        }
        var q = qZ.substring(0, qZ.indexOf(":"));
        var i2;
        var qY = qZ.indexOf(":") + 1;
        i2 = cj.substr(qZ, qY, null);
        var i = k9.getLibrary(q);
        if (i != null) {
            if (i.exists(i2, "MOVIE_CLIP")) {
                js.completeWith(i.loadMovieClip(i2))
            } else {
                js.error('[Assets] There is no MovieClip asset with an ID of "' + qZ + '"')
            }
        } else {
            js.error('[Assets] There is no asset library named "' + q + '"')
        }
        return js.future
    };
    k9.loadSound = function(i1, i, q) {
        if (i == null) {
            i = true
        }
        if (i == null) {
            i = true
        }
        return new kL(function() {
            return k9.getSound(i1, i)
        })
    };
    k9.loadText = function(i1, q) {
        var i = bY.loadText(i1);
        if (q != null) {
            i.onComplete(q);
            i.onError(function(i2) {
                q(null)
            })
        }
        return i
    };
    k9.registerLibrary = function(q, i) {
        bY.registerLibrary(q, i)
    };
    k9.removeEventListener = function(q, i1, i) {
        if (i == null) {
            i = false
        }
        k9.dispatcher.removeEventListener(q, i1, i)
    };
    k9.resolveClass = function(i) {
        return kX.resolveClass(i)
    };
    k9.resolveEnum = function(i) {
        var q = kX.resolveEnum(i);
        return q
    };
    k9.unloadLibrary = function(i) {
        bY.unloadLibrary(i)
    };
    k9.LimeAssets_onChange = function() {
        k9.dispatchEvent(new hM("change"))
    };
    var lJ = function() {
        nl.call(this)
    };
    nt["openfl.AssetLibrary"] = lJ;
    lJ.__name__ = ["openfl", "AssetLibrary"];
    lJ.__super__ = nl;
    lJ.prototype = lP(nl.prototype, {
        getMovieClip: function(i) {
            return null
        },
        loadMovieClip: function(q) {
            var i = this;
            return new kL(function() {
                return i.getMovieClip(q)
            })
        },
        __class__: lJ
    });
    var i4 = function() {
        cY.call(this);
        this.__currentFrame = 0;
        this.__currentLabels = [];
        this.__totalFrames = 0;
        this.enabled = true
    };
    nt["openfl.display.MovieClip"] = i4;
    i4.__name__ = ["openfl", "display", "MovieClip"];
    i4.__super__ = cY;
    i4.prototype = lP(cY.prototype, {
        currentFrame: null,
        currentFrameLabel: null,
        currentLabel: null,
        currentLabels: null,
        enabled: null,
        framesLoaded: null,
        totalFrames: null,
        __currentFrame: null,
        __currentFrameLabel: null,
        __currentLabel: null,
        __currentLabels: null,
        __frameScripts: null,
        __totalFrames: null,
        addFrameScript: function(i, q) {
            if (q != null) {
                if (this.__frameScripts == null) {
                    this.__frameScripts = new c6()
                }
                this.__frameScripts.h[i] = q
            } else {
                if (this.__frameScripts != null) {
                    this.__frameScripts.remove(i)
                }
            }
        },
        gotoAndPlay: function(q, i) {},
        gotoAndStop: function(q, i) {},
        nextFrame: function() {},
        play: function() {},
        prevFrame: function() {},
        stop: function() {},
        get_currentFrame: function() {
            return this.__currentFrame
        },
        get_currentFrameLabel: function() {
            return this.__currentFrameLabel
        },
        get_currentLabel: function() {
            return this.__currentLabel
        },
        get_currentLabels: function() {
            return this.__currentLabels
        },
        get_framesLoaded: function() {
            return this.__totalFrames
        },
        get_totalFrames: function() {
            return this.__totalFrames
        },
        __class__: i4,
        __properties__: lP(cY.prototype.__properties__, {
            get_totalFrames: "get_totalFrames",
            get_framesLoaded: "get_framesLoaded",
            get_currentLabels: "get_currentLabels",
            get_currentLabel: "get_currentLabel",
            get_currentFrameLabel: "get_currentFrameLabel",
            get_currentFrame: "get_currentFrame"
        })
    });
    var iN = function() {
        lR.call(this);
        this.applicationDomain = ld.currentDomain;
        this.bytesLoaded = 0;
        this.bytesTotal = 0;
        this.childAllowsParent = true;
        this.parameters = {}
    };
    nt["openfl.display.LoaderInfo"] = iN;
    iN.__name__ = ["openfl", "display", "LoaderInfo"];
    iN.create = function(i) {
        var q = new iN();
        q.uncaughtErrorEvents = new gE();
        if (i != null) {
            q.loader = i
        } else {
            q.url = iN.__rootURL
        }
        return q
    };
    iN.__super__ = lR;
    iN.prototype = lP(lR.prototype, {
        applicationDomain: null,
        bytes: null,
        bytesLoaded: null,
        bytesTotal: null,
        childAllowsParent: null,
        content: null,
        contentType: null,
        frameRate: null,
        height: null,
        loader: null,
        loaderURL: null,
        parameters: null,
        parentAllowsChild: null,
        sameDomain: null,
        sharedEvents: null,
        uncaughtErrorEvents: null,
        url: null,
        width: null,
        __class__: iN
    });
    var ld = function(i) {
        if (i != null) {
            this.parentDomain = i
        } else {
            this.parentDomain = ld.currentDomain
        }
    };
    nt["openfl.system.ApplicationDomain"] = ld;
    ld.__name__ = ["openfl", "system", "ApplicationDomain"];
    ld.prototype = {
        parentDomain: null,
        getDefinition: function(i) {
            return kX.resolveClass(i)
        },
        hasDefinition: function(i) {
            return kX.resolveClass(i) != null
        },
        __class__: ld
    };
    var gE = function() {
        lR.call(this)
    };
    nt["openfl.events.UncaughtErrorEvents"] = gE;
    gE.__name__ = ["openfl", "events", "UncaughtErrorEvents"];
    gE.__super__ = lR;
    gE.prototype = lP(lR.prototype, {
        __class__: gE
    });
    var n = function(q, q0, qY, qZ, js, i2, i, i1) {
        if (i1 == null) {
            i1 = 0
        }
        if (i == null) {
            i = 0
        }
        if (i2 == null) {
            i2 = 0
        }
        if (js == null) {
            js = 0
        }
        if (qZ == null) {
            qZ = 1
        }
        if (qY == null) {
            qY = 1
        }
        if (q0 == null) {
            q0 = 1
        }
        if (q == null) {
            q = 1
        }
        this.redMultiplier = q;
        this.greenMultiplier = q0;
        this.blueMultiplier = qY;
        this.alphaMultiplier = qZ;
        this.redOffset = js;
        this.greenOffset = i2;
        this.blueOffset = i;
        this.alphaOffset = i1
    };
    nt["openfl.geom.ColorTransform"] = n;
    n.__name__ = ["openfl", "geom", "ColorTransform"];
    n.prototype = {
        alphaMultiplier: null,
        alphaOffset: null,
        blueMultiplier: null,
        blueOffset: null,
        greenMultiplier: null,
        greenOffset: null,
        redMultiplier: null,
        redOffset: null,
        concat: function(i) {
            this.redMultiplier *= i.redMultiplier;
            this.greenMultiplier *= i.greenMultiplier;
            this.blueMultiplier *= i.blueMultiplier;
            this.alphaMultiplier *= i.alphaMultiplier;
            this.redOffset = i.redMultiplier * this.redOffset + i.redOffset;
            this.greenOffset = i.greenMultiplier * this.greenOffset + i.greenOffset;
            this.blueOffset = i.blueMultiplier * this.blueOffset + i.blueOffset;
            this.alphaOffset = i.alphaMultiplier * this.alphaOffset + i.alphaOffset
        },
        toString: function() {
            return "(redMultiplier=" + this.redMultiplier + ", greenMultiplier=" + this.greenMultiplier + ", blueMultiplier=" + this.blueMultiplier + ", alphaMultiplier=" + this.alphaMultiplier + ", redOffset=" + this.redOffset + ", greenOffset=" + this.greenOffset + ", blueOffset=" + this.blueOffset + ", alphaOffset=" + this.alphaOffset + ")"
        },
        __clone: function() {
            return new n(this.redMultiplier, this.greenMultiplier, this.blueMultiplier, this.alphaMultiplier, this.redOffset, this.greenOffset, this.blueOffset, this.alphaOffset)
        },
        __combine: function(i) {
            this.redMultiplier *= i.redMultiplier;
            this.greenMultiplier *= i.greenMultiplier;
            this.blueMultiplier *= i.blueMultiplier;
            this.alphaMultiplier *= i.alphaMultiplier;
            this.redOffset += i.redOffset;
            this.greenOffset += i.greenOffset;
            this.blueOffset += i.blueOffset;
            this.alphaOffset += i.alphaOffset
        },
        __equals: function(i, q) {
            if (q == null) {
                q = false
            }
            return i != null && this.redMultiplier == i.redMultiplier && this.greenMultiplier == i.greenMultiplier && this.blueMultiplier == i.blueMultiplier && (q || this.alphaMultiplier == i.alphaMultiplier) && this.redOffset == i.redOffset && this.greenOffset == i.greenOffset && this.blueOffset == i.blueOffset && this.alphaOffset == i.alphaOffset
        },
        __isDefault: function() {
            return this.redMultiplier == 1 && this.greenMultiplier == 1 && this.blueMultiplier == 1 && this.alphaMultiplier == 1 && this.redOffset == 0 && this.greenOffset == 0 && this.blueOffset == 0 && this.alphaOffset == 0
        },
        get_color: function() {
            return (this.redOffset | 0) << 16 | (this.greenOffset | 0) << 8 | (this.blueOffset | 0)
        },
        set_color: function(i) {
            this.redOffset = i >> 16 & 255;
            this.greenOffset = i >> 8 & 255;
            this.blueOffset = i & 255;
            this.redMultiplier = 0;
            this.greenMultiplier = 0;
            this.blueMultiplier = 0;
            return this.get_color()
        },
        __toLimeColorMatrix: function() {
            return (function(i1) {
                var q;
                var i2 = [i1.redMultiplier, 0, 0, 0, i1.redOffset / 255, 0, i1.greenMultiplier, 0, 0, i1.greenOffset / 255, 0, 0, i1.blueMultiplier, 0, i1.blueOffset / 255, 0, 0, 0, i1.alphaMultiplier, i1.alphaOffset / 255];
                var i;
                if (i2 != null) {
                    i = new Float32Array(i2)
                } else {
                    i = null
                }
                q = i;
                return q
            }(this))
        },
        __class__: n,
        __properties__: {
            set_color: "set_color",
            get_color: "get_color"
        }
    };
    var ns = function() {};
    nt["openfl.Lib"] = ns;
    ns.__name__ = ["openfl", "Lib"];
    ns.application = null;
    ns.as = function(i, q) {
        if (n0.__instanceof(i, q)) {
            return i
        } else {
            return null
        }
    };
    ns.attach = function(i) {
        return new i4()
    };
    ns.embed = bD.openfl.embed = function(q, js, i, i2, i1) {
        pg.embed(q, js, i, i2, i1)
    };
    ns.getTimer = function() {
        return pg.getTimer()
    };
    ns.getURL = function(i, q) {
        if (q == null) {
            q = "_blank"
        }
        window.open(i.url, q)
    };
    ns.notImplemented = function(i) {
        if (!ns.__sentWarnings.exists(i)) {
            ns.__sentWarnings.set(i, true);
            eM.trace("Warning: " + i + " is not implemented", {
                fileName: "Lib.hx",
                lineNumber: 113,
                className: "openfl.Lib",
                methodName: "notImplemented"
            })
        }
    };
    ns.preventDefaultTouchMove = function() {
        window.document.addEventListener("touchmove", function(i) {
            i.preventDefault()
        }, false)
    };
    ns.trace = function(i) {
        eM.trace(i, {
            fileName: "Lib.hx",
            lineNumber: 144,
            className: "openfl.Lib",
            methodName: "trace"
        })
    };
    var eF = {};
    nt["openfl._Vector.Vector_Impl_"] = eF;
    eF.__name__ = ["openfl", "_Vector", "Vector_Impl_"];
    eF.__properties__ = {
        set_fixed: "set_fixed",
        get_fixed: "get_fixed",
        set_length: "set_length",
        get_length: "get_length"
    };
    eF._new = function(i2, i1) {
        if (i1 == null) {
            i1 = false
        }
        if (i2 == null) {
            i2 = 0
        }
        var q;
        q = new p0();
        var i;
        i = new Array(i2);
        q.data = i;
        q.length = i2;
        q.fixed = i1;
        return q
    };
    eF.concat = function(i1, q) {
        var i2 = new p0();
        if (q != null) {
            i2.length = i1.length + q.length
        } else {
            i2.length = i1.length
        }
        i2.fixed = false;
        var i;
        i = new Array(i2.length);
        i2.data = i;
        dQ.blit(i1.data, 0, i2.data, 0, i1.length);
        if (q != null) {
            dQ.blit(q.data, 0, i2.data, i1.length, q.length)
        }
        return i2
    };
    eF.copy = function(q) {
        var i1 = new p0();
        i1.length = q.length;
        i1.fixed = q.fixed;
        var i;
        i = new Array(q.length);
        i1.data = i;
        dQ.blit(q.data, 0, i1.data, 0, q.length);
        return i1
    };
    eF.iterator = function(i) {
        return new bs(i)
    };
    eF.join = function(q, i2) {
        var i1 = "";
        var qY = 0;
        var qZ = q.length;
        while (qY < qZ) {
            var js = qY++;
            if (js > 0) {
                i1 += i2
            }
            i1 += kr.string(q.data[js])
        }
        return i1
    };
    eF.pop = function(i) {
        var q = null;
        if (!i.fixed) {
            if (i.length > 0) {
                i.length--;
                q = i.data[i.length]
            }
        }
        return q
    };
    eF.push = function(i1, q) {
        if (!i1.fixed) {
            i1.length++;
            if (i1.data.length < i1.length) {
                var i2;
                var i;
                i = new Array(i1.data.length + 10);
                i2 = i;
                dQ.blit(i1.data, 0, i2, 0, i1.data.length);
                i1.data = i2
            }
            i1.data[i1.length - 1] = q
        }
        return i1.length
    };
    eF.reverse = function(i1) {
        var qY;
        var q;
        q = new Array(i1.length);
        qY = q;
        var js = 0;
        var qZ = i1.length;
        while (js < qZ) {
            var i2 = js++;
            qY[i1.length - 1 - i2] = i1.data[i2]
        }
        i1.data = qY
    };
    eF.shift = function(i) {
        if (!i.fixed && i.length > 0) {
            i.length--;
            var q = i.data[0];
            dQ.blit(i.data, 1, i.data, 0, i.length);
            return q
        }
        return null
    };
    eF.unshift = function(i1, q) {
        if (!i1.fixed) {
            i1.length++;
            if (i1.data.length < i1.length) {
                var i2;
                var i;
                i = new Array(i1.length + 10);
                i2 = i;
                dQ.blit(i1.data, 0, i2, 1, i1.data.length);
                i1.data = i2
            } else {
                dQ.blit(i1.data, 0, i1.data, 1, i1.length - 1)
            }
            i1.data[0] = q
        }
    };
    eF.slice = function(i1, qY, q) {
        if (q == null) {
            q = 0
        }
        if (qY == null) {
            qY = 0
        }
        if (qY < 0) {
            qY += i1.length
        }
        if (q <= 0) {
            q += i1.length
        }
        if (q > i1.length) {
            q = i1.length
        }
        var i2 = q - qY;
        if (i2 <= 0 || i2 > i1.length) {
            i2 = i1.length
        }
        var js = new p0();
        js.length = q - qY;
        js.fixed = true;
        var i;
        i = new Array(i2);
        js.data = i;
        dQ.blit(i1.data, qY, js.data, 0, i2);
        return js
    };
    eF.sort = function(i1, qZ) {
        var q1 = dQ.toArray(i1.data);
        q1.sort(qZ);
        var js;
        var q;
        q = new Array(q1.length);
        js = q;
        var qY = 0;
        var q0 = q1.length;
        while (qY < q0) {
            var i2 = qY++;
            js[i2] = q1[i2]
        }
        i1.data = js
    };
    eF.splice = function(i1, js, q) {
        if (js < 0) {
            js += i1.length
        }
        if (js + q > i1.length) {
            q = i1.length - js
        }
        if (q < 0) {
            q = 0
        }
        var i2 = new p0();
        i2.length = q;
        i2.fixed = false;
        var i;
        i = new Array(q);
        i2.data = i;
        dQ.blit(i1.data, js, i2.data, 0, q);
        if (q > 0) {
            i1.length -= q;
            dQ.blit(i1.data, js + q, i1.data, js, i1.length - js)
        }
        return i2
    };
    eF.toString = function(i) {
        return dQ.toArray(i.data).toString()
    };
    eF.indexOf = function(i1, q, q0) {
        if (q0 == null) {
            q0 = 0
        }
        var qY = -1;
        var js = q0;
        var qZ = i1.length;
        while (js < qZ) {
            var i2 = js++;
            if (i1.data[i2] == q) {
                qY = i2;
                break
            }
        }
        return qY
    };
    eF.lastIndexOf = function(i1, q, qY) {
        if (qY == null) {
            qY = 0
        }
        var js = -1;
        var i2 = i1.length - 1;
        while (i2 >= qY) {
            if (i1.data[i2] == q) {
                js = i2;
                break
            }
            i2--
        }
        return js
    };
    eF.ofArray = function(i1) {
        var qZ = new p0();
        qZ.length = i1.length;
        qZ.fixed = true;
        var js;
        var q;
        q = new Array(i1.length);
        js = q;
        var qY = 0;
        var q0 = i1.length;
        while (qY < q0) {
            var i2 = qY++;
            js[i2] = i1[i2]
        }
        qZ.data = js;
        return qZ
    };
    eF.convert = function(i) {
        return i
    };
    eF.get = function(i, q) {
        return i.data[q]
    };
    eF.set = function(q, i1, js) {
        if (!q.fixed) {
            if (i1 >= q.length) {
                q.length = i1 + 1
            }
            if (q.data.length < q.length) {
                var i2;
                var i;
                i = new Array(q.data.length + 10);
                i2 = i;
                dQ.blit(q.data, 0, i2, 0, q.data.length);
                q.data = i2
            }
        }
        return q.data[i1] = js
    };
    eF.fromArray = function(qZ) {
        var qY = new p0();
        qY.length = qZ.length;
        qY.fixed = true;
        var i2;
        var q;
        q = new Array(qZ.length);
        i2 = q;
        var js = 0;
        var q0 = qZ.length;
        while (js < q0) {
            var i1 = js++;
            i2[i1] = qZ[i1]
        }
        qY.data = i2;
        return qY
    };
    eF.toArray = function(q) {
        var js = [];
        var i2 = 0;
        var qY = q.data.length;
        while (i2 < qY) {
            var i1 = i2++;
            js.push(q.data[i1])
        }
        return js
    };
    eF.fromHaxeVector = function(q) {
        var i = new p0();
        i.length = q.length;
        i.fixed = true;
        i.data = q;
        return i
    };
    eF.toHaxeVector = function(i) {
        return i.data
    };
    eF.fromVectorData = function(i) {
        return i
    };
    eF.toVectorData = function(i) {
        return i
    };
    eF.get_length = function(i) {
        return i.length
    };
    eF.set_length = function(q, i2) {
        if (!q.fixed) {
            if (i2 > q.length) {
                var i1;
                var i;
                i = new Array(i2);
                i1 = i;
                dQ.blit(q.data, 0, i1, 0, kr["int"](Math.min(q.data.length, i2)));
                q.data = i1
            }
            q.length = i2
        }
        return i2
    };
    eF.get_fixed = function(i) {
        return i.fixed
    };
    eF.set_fixed = function(i, q) {
        return i.fixed = q
    };
    var p0 = function() {
        this.length = 0
    };
    nt["openfl.VectorData"] = p0;
    p0.__name__ = ["openfl", "VectorData"];
    p0.prototype = {
        data: null,
        fixed: null,
        length: null,
        __class__: p0
    };
    var bs = function(i) {
        this.index = 0;
        this.vectorData = i
    };
    nt["openfl.VectorDataIterator"] = bs;
    bs.__name__ = ["openfl", "VectorDataIterator"];
    bs.prototype = {
        index: null,
        vectorData: null,
        hasNext: function() {
            return this.index < this.vectorData.length
        },
        next: function() {
            var i = this.index++;
            return this.vectorData.data[i]
        },
        __class__: bs
    };
    var bE = function(i) {
        this.renderSession = i
    };
    nt["openfl._internal.renderer.AbstractMaskManager"] = bE;
    bE.__name__ = ["openfl", "_internal", "renderer", "AbstractMaskManager"];
    bE.prototype = {
        renderSession: null,
        pushMask: function(i) {},
        pushRect: function(q, i) {},
        popMask: function() {},
        popRect: function() {},
        saveState: function() {},
        restoreState: function() {},
        __class__: bE
    };
    var k0 = function(q, i) {
        this.width = q;
        this.height = i
    };
    nt["openfl._internal.renderer.AbstractRenderer"] = k0;
    k0.__name__ = ["openfl", "_internal", "renderer", "AbstractRenderer"];
    k0.prototype = {
        height: null,
        width: null,
        transparent: null,
        viewport: null,
        renderSession: null,
        render: function(i) {},
        renderShape: function(i) {},
        setViewport: function(q, i2, i1, i) {},
        resize: function(q, i) {},
        __class__: k0
    };
    var lS = function() {
        this.types = [];
        this.b = [];
        this.i = [];
        this.f = [];
        this.o = [];
        this.ff = [];
        this.ii = [];
        this.ts = []
    };
    nt["openfl._internal.renderer.DrawCommandBuffer"] = lS;
    lS.__name__ = ["openfl", "_internal", "renderer", "DrawCommandBuffer"];
    lS.prototype = {
        types: null,
        b: null,
        f: null,
        ff: null,
        i: null,
        ii: null,
        o: null,
        ts: null,
        append: function(i2) {
            var rg = new k8(i2);
            var i = 0;
            var q9 = i2.types;
            while (i < q9.length) {
                var q = q9[i];
                ++i;
                switch (q[1]) {
                    case 0:
                        var rf = rg.readBeginBitmapFill();
                        this.beginBitmapFill(i8.get_bitmap(rf), i8.get_matrix(rf), i8.get_repeat(rf), i8.get_smooth(rf));
                        break;
                    case 1:
                        var re = rg.readBeginFill();
                        this.beginFill(pc.get_color(re), pc.get_alpha(re));
                        break;
                    case 2:
                        var rd = rg.readBeginGradientFill();
                        this.beginGradientFill(aP.get_type(rd), aP.get_colors(rd), aP.get_alphas(rd), aP.get_ratios(rd), aP.get_matrix(rd), aP.get_spreadMethod(rd), aP.get_interpolationMethod(rd), aP.get_focalPointRatio(rd));
                        break;
                    case 3:
                        var rc = rg.readCubicCurveTo();
                        this.cubicCurveTo(ba.get_controlX1(rc), ba.get_controlY1(rc), ba.get_controlX2(rc), ba.get_controlY2(rc), ba.get_anchorX(rc), ba.get_anchorY(rc));
                        break;
                    case 4:
                        var rb = rg.readCurveTo();
                        this.curveTo(k7.get_controlX(rb), k7.get_controlY(rb), k7.get_anchorX(rb), k7.get_anchorY(rb));
                        break;
                    case 5:
                        var ra = rg.readDrawCircle();
                        this.drawCircle(p4.get_x(ra), p4.get_y(ra), p4.get_radius(ra));
                        break;
                    case 6:
                        var q8 = rg.readDrawEllipse();
                        this.drawEllipse(jF.get_x(q8), jF.get_y(q8), jF.get_width(q8), jF.get_height(q8));
                        break;
                    case 7:
                        var q7 = rg.readDrawPath();
                        this.drawPath(ah.get_commands(q7), ah.get_data(q7), ah.get_winding(q7));
                        break;
                    case 8:
                        var q6 = rg.readDrawRect();
                        this.drawRect(nI.get_x(q6), nI.get_y(q6), nI.get_width(q6), nI.get_height(q6));
                        break;
                    case 9:
                        var q5 = rg.readDrawRoundRect();
                        this.drawRoundRect(qg.get_x(q5), qg.get_y(q5), qg.get_width(q5), qg.get_height(q5), qg.get_ellipseWidth(q5), qg.get_ellipseHeight(q5));
                        break;
                    case 10:
                        var q4 = rg.readDrawTiles();
                        this.drawTiles(pQ.get_sheet(q4), pQ.get_tileData(q4), pQ.get_smooth(q4), pQ.get_flags(q4), pQ.get_shader(q4), pQ.get_count(q4));
                        break;
                    case 11:
                        var q3 = rg.readDrawTriangles();
                        this.drawTriangles(d7.get_vertices(q3), d7.get_indices(q3), d7.get_uvtData(q3), d7.get_culling(q3));
                        break;
                    case 12:
                        var q2 = rg.readEndFill();
                        this.endFill();
                        break;
                    case 13:
                        var q1 = rg.readLineBitmapStyle();
                        this.lineBitmapStyle(mB.get_bitmap(q1), mB.get_matrix(q1), mB.get_repeat(q1), mB.get_smooth(q1));
                        break;
                    case 14:
                        var q0 = rg.readLineGradientStyle();
                        this.lineGradientStyle(iX.get_type(q0), iX.get_colors(q0), iX.get_alphas(q0), iX.get_ratios(q0), iX.get_matrix(q0), iX.get_spreadMethod(q0), iX.get_interpolationMethod(q0), iX.get_focalPointRatio(q0));
                        break;
                    case 15:
                        var qZ = rg.readLineStyle();
                        this.lineStyle(am.get_thickness(qZ), am.get_color(qZ), am.get_alpha(qZ), am.get_pixelHinting(qZ), am.get_scaleMode(qZ), am.get_caps(qZ), am.get_joints(qZ), am.get_miterLimit(qZ));
                        break;
                    case 16:
                        var qY = rg.readLineTo();
                        this.lineTo(aF.get_x(qY), aF.get_y(qY));
                        break;
                    case 17:
                        var js = rg.readMoveTo();
                        this.moveTo(eE.get_x(js), eE.get_y(js));
                        break;
                    case 18:
                        var i1 = rg.readOverrideMatrix();
                        this.overrideMatrix(mn.get_matrix(i1));
                        break;
                    default:
                }
            }
            rg.destroy();
            return i2
        },
        beginBitmapFill: function(i2, q, i1, i) {
            this.types.push(V.BEGIN_BITMAP_FILL);
            this.o.push(i2);
            this.o.push(q);
            this.b.push(i1);
            this.b.push(i)
        },
        beginFill: function(i, q) {
            this.types.push(V.BEGIN_FILL);
            this.i.push(i);
            this.f.push(q)
        },
        beginGradientFill: function(js, q, i, qY, i2, i1, q0, qZ) {
            this.types.push(V.BEGIN_GRADIENT_FILL);
            this.o.push(js);
            this.ii.push(q);
            this.ff.push(i);
            this.ii.push(qY);
            this.o.push(i2);
            this.o.push(i1);
            this.o.push(q0);
            this.f.push(qZ)
        },
        clear: function() {
            this.types.splice(0, this.types.length);
            this.b.splice(0, this.b.length);
            this.i.splice(0, this.i.length);
            this.f.splice(0, this.f.length);
            this.o.splice(0, this.o.length);
            this.ff.splice(0, this.ff.length);
            this.ii.splice(0, this.ii.length);
            this.ts.splice(0, this.ts.length)
        },
        copy: function() {
            var i = new lS();
            i.append(this);
            return i
        },
        cubicCurveTo: function(q, i2, qY, i1, i, js) {
            this.types.push(V.CUBIC_CURVE_TO);
            this.f.push(q);
            this.f.push(i2);
            this.f.push(qY);
            this.f.push(i1);
            this.f.push(i);
            this.f.push(js)
        },
        curveTo: function(i1, q, i, i2) {
            this.types.push(V.CURVE_TO);
            this.f.push(i1);
            this.f.push(q);
            this.f.push(i);
            this.f.push(i2)
        },
        destroy: function() {
            this.clear();
            this.types = null;
            this.b = null;
            this.i = null;
            this.f = null;
            this.o = null;
            this.ff = null;
            this.ii = null;
            this.ts = null
        },
        drawCircle: function(q, i1, i) {
            this.types.push(V.DRAW_CIRCLE);
            this.f.push(q);
            this.f.push(i1);
            this.f.push(i)
        },
        drawEllipse: function(q, i2, i1, i) {
            this.types.push(V.DRAW_ELLIPSE);
            this.f.push(q);
            this.f.push(i2);
            this.f.push(i1);
            this.f.push(i)
        },
        drawPath: function(i, i1, q) {
            this.types.push(V.DRAW_PATH);
            this.o.push(i);
            this.o.push(i1);
            this.o.push(q)
        },
        drawRect: function(q, i2, i1, i) {
            this.types.push(V.DRAW_RECT);
            this.f.push(q);
            this.f.push(i2);
            this.f.push(i1);
            this.f.push(i)
        },
        drawRoundRect: function(q, qY, i1, i, js, i2) {
            this.types.push(V.DRAW_ROUND_RECT);
            this.f.push(q);
            this.f.push(qY);
            this.f.push(i1);
            this.f.push(i);
            this.f.push(js);
            this.o.push(i2)
        },
        drawTiles: function(i1, qY, q, i, js, i2) {
            this.types.push(V.DRAW_TILES);
            this.ts.push(i1);
            this.ff.push(qY);
            this.b.push(q);
            this.i.push(i);
            this.o.push(js);
            this.i.push(i2)
        },
        drawTriangles: function(q, i2, i, i1) {
            this.types.push(V.DRAW_TRIANGLES);
            this.o.push(q);
            this.o.push(i2);
            this.o.push(i);
            this.o.push(i1)
        },
        endFill: function() {
            this.types.push(V.END_FILL)
        },
        lineBitmapStyle: function(i2, q, i1, i) {
            this.types.push(V.LINE_BITMAP_STYLE);
            this.o.push(i2);
            this.o.push(q);
            this.b.push(i1);
            this.b.push(i)
        },
        lineGradientStyle: function(js, q, i, qY, i2, i1, q0, qZ) {
            this.types.push(V.LINE_GRADIENT_STYLE);
            this.o.push(js);
            this.ii.push(q);
            this.ff.push(i);
            this.ii.push(qY);
            this.o.push(i2);
            this.o.push(i1);
            this.o.push(q0);
            this.f.push(qZ)
        },
        lineStyle: function(i2, i1, q0, qY, js, qZ, i, q) {
            this.types.push(V.LINE_STYLE);
            this.o.push(i2);
            this.i.push(i1);
            this.f.push(q0);
            this.b.push(qY);
            this.o.push(js);
            this.o.push(qZ);
            this.o.push(i);
            this.f.push(q)
        },
        lineTo: function(i, q) {
            this.types.push(V.LINE_TO);
            this.f.push(i);
            this.f.push(q)
        },
        moveTo: function(i, q) {
            this.types.push(V.MOVE_TO);
            this.f.push(i);
            this.f.push(q)
        },
        overrideMatrix: function(i) {
            this.types.push(V.OVERRIDE_MATRIX);
            this.o.push(i)
        },
        get_length: function() {
            return this.types.length
        },
        __class__: lS,
        __properties__: {
            get_length: "get_length"
        }
    };
    var k8 = function(i) {
        this.buffer = i;
        this.bPos = this.iPos = this.fPos = this.oPos = this.ffPos = this.iiPos = this.tsPos = 0;
        this.prev = V.UNKNOWN
    };
    nt["openfl._internal.renderer.DrawCommandReader"] = k8;
    k8.__name__ = ["openfl", "_internal", "renderer", "DrawCommandReader"];
    k8.prototype = {
        buffer: null,
        bPos: null,
        iiPos: null,
        iPos: null,
        ffPos: null,
        fPos: null,
        oPos: null,
        prev: null,
        tsPos: null,
        advance: function() {
            var i = this.prev;
            switch (i[1]) {
                case 0:
                    this.oPos += 2;
                    this.bPos += 2;
                    break;
                case 1:
                    this.iPos += 1;
                    this.fPos += 1;
                    break;
                case 2:
                    this.oPos += 4;
                    this.iiPos += 2;
                    this.ffPos += 1;
                    this.fPos += 1;
                    break;
                case 3:
                    this.fPos += 6;
                    break;
                case 4:
                    this.fPos += 4;
                    break;
                case 5:
                    this.fPos += 3;
                    break;
                case 6:
                    this.fPos += 4;
                    break;
                case 7:
                    this.oPos += 3;
                    break;
                case 8:
                    this.fPos += 4;
                    break;
                case 9:
                    this.fPos += 5;
                    this.oPos += 1;
                    break;
                case 10:
                    this.tsPos += 1;
                    this.ffPos += 1;
                    this.bPos += 1;
                    this.iPos += 2;
                    this.oPos += 1;
                    break;
                case 11:
                    this.oPos += 4;
                    break;
                case 12:
                    break;
                case 13:
                    this.oPos += 2;
                    this.bPos += 2;
                    break;
                case 14:
                    this.oPos += 4;
                    this.iiPos += 2;
                    this.ffPos += 1;
                    this.fPos += 1;
                    break;
                case 15:
                    this.oPos += 4;
                    this.iPos += 1;
                    this.fPos += 2;
                    this.bPos += 1;
                    break;
                case 16:
                    this.fPos += 2;
                    break;
                case 17:
                    this.fPos += 2;
                    break;
                case 18:
                    this.oPos += 1;
                    break;
                default:
            }
        },
        bool: function(i) {
            return this.buffer.b[this.bPos + i]
        },
        destroy: function() {
            this.buffer = null;
            this.reset()
        },
        fArr: function(i) {
            return this.buffer.ff[this.ffPos + i]
        },
        "float": function(i) {
            return this.buffer.f[this.fPos + i]
        },
        iArr: function(i) {
            return this.buffer.ii[this.iiPos + i]
        },
        "int": function(i) {
            return this.buffer.i[this.iPos + i]
        },
        obj: function(i) {
            return this.buffer.o[this.oPos + i]
        },
        readBeginBitmapFill: function() {
            this.advance();
            this.prev = V.BEGIN_BITMAP_FILL;
            return i8._new(this)
        },
        readBeginFill: function() {
            this.advance();
            this.prev = V.BEGIN_FILL;
            return pc._new(this)
        },
        readBeginGradientFill: function() {
            this.advance();
            this.prev = V.BEGIN_GRADIENT_FILL;
            return aP._new(this)
        },
        readCubicCurveTo: function() {
            this.advance();
            this.prev = V.CUBIC_CURVE_TO;
            return ba._new(this)
        },
        readCurveTo: function() {
            this.advance();
            this.prev = V.CURVE_TO;
            return k7._new(this)
        },
        readDrawCircle: function() {
            this.advance();
            this.prev = V.DRAW_CIRCLE;
            return p4._new(this)
        },
        readDrawEllipse: function() {
            this.advance();
            this.prev = V.DRAW_ELLIPSE;
            return jF._new(this)
        },
        readDrawPath: function() {
            this.advance();
            this.prev = V.DRAW_PATH;
            return ah._new(this)
        },
        readDrawRect: function() {
            this.advance();
            this.prev = V.DRAW_RECT;
            return nI._new(this)
        },
        readDrawRoundRect: function() {
            this.advance();
            this.prev = V.DRAW_ROUND_RECT;
            return qg._new(this)
        },
        readDrawTiles: function() {
            this.advance();
            this.prev = V.DRAW_TILES;
            return pQ._new(this)
        },
        readDrawTriangles: function() {
            this.advance();
            this.prev = V.DRAW_TRIANGLES;
            return d7._new(this)
        },
        readEndFill: function() {
            this.advance();
            this.prev = V.END_FILL;
            return f6._new(this)
        },
        readLineBitmapStyle: function() {
            this.advance();
            this.prev = V.LINE_BITMAP_STYLE;
            return mB._new(this)
        },
        readLineGradientStyle: function() {
            this.advance();
            this.prev = V.LINE_GRADIENT_STYLE;
            return iX._new(this)
        },
        readLineStyle: function() {
            this.advance();
            this.prev = V.LINE_STYLE;
            return am._new(this)
        },
        readLineTo: function() {
            this.advance();
            this.prev = V.LINE_TO;
            return aF._new(this)
        },
        readMoveTo: function() {
            this.advance();
            this.prev = V.MOVE_TO;
            return eE._new(this)
        },
        readOverrideMatrix: function() {
            this.advance();
            this.prev = V.OVERRIDE_MATRIX;
            return mn._new(this)
        },
        reset: function() {
            this.bPos = this.iPos = this.fPos = this.oPos = this.ffPos = this.iiPos = this.tsPos = 0
        },
        skip: function(i) {
            this.advance();
            this.prev = i
        },
        tileSheet: function(i) {
            return this.buffer.ts[this.tsPos + i]
        },
        __class__: k8
    };
    var i8 = {};
    nt["openfl._internal.renderer._DrawCommandReader.BeginBitmapFillView_Impl_"] = i8;
    i8.__name__ = ["openfl", "_internal", "renderer", "_DrawCommandReader", "BeginBitmapFillView_Impl_"];
    i8.__properties__ = {
        get_smooth: "get_smooth",
        get_repeat: "get_repeat",
        get_matrix: "get_matrix",
        get_bitmap: "get_bitmap"
    };
    i8._new = function(i) {
        return i
    };
    i8.get_bitmap = function(i) {
        return i.obj(0)
    };
    i8.get_matrix = function(i) {
        return i.obj(1)
    };
    i8.get_repeat = function(i) {
        return i.bool(0)
    };
    i8.get_smooth = function(i) {
        return i.bool(1)
    };
    var pc = {};
    nt["openfl._internal.renderer._DrawCommandReader.BeginFillView_Impl_"] = pc;
    pc.__name__ = ["openfl", "_internal", "renderer", "_DrawCommandReader", "BeginFillView_Impl_"];
    pc.__properties__ = {
        get_alpha: "get_alpha",
        get_color: "get_color"
    };
    pc._new = function(i) {
        return i
    };
    pc.get_color = function(i) {
        return i["int"](0)
    };
    pc.get_alpha = function(i) {
        return i["float"](0)
    };
    var aP = {};
    nt["openfl._internal.renderer._DrawCommandReader.BeginGradientFillView_Impl_"] = aP;
    aP.__name__ = ["openfl", "_internal", "renderer", "_DrawCommandReader", "BeginGradientFillView_Impl_"];
    aP.__properties__ = {
        get_focalPointRatio: "get_focalPointRatio",
        get_interpolationMethod: "get_interpolationMethod",
        get_spreadMethod: "get_spreadMethod",
        get_matrix: "get_matrix",
        get_ratios: "get_ratios",
        get_alphas: "get_alphas",
        get_colors: "get_colors",
        get_type: "get_type"
    };
    aP._new = function(i) {
        return i
    };
    aP.get_type = function(i) {
        return i.obj(0)
    };
    aP.get_colors = function(i) {
        return i.iArr(0)
    };
    aP.get_alphas = function(i) {
        return i.fArr(0)
    };
    aP.get_ratios = function(i) {
        return i.iArr(1)
    };
    aP.get_matrix = function(i) {
        return i.obj(1)
    };
    aP.get_spreadMethod = function(i) {
        return i.obj(2)
    };
    aP.get_interpolationMethod = function(i) {
        return i.obj(3)
    };
    aP.get_focalPointRatio = function(i) {
        return i["float"](0)
    };
    var ba = {};
    nt["openfl._internal.renderer._DrawCommandReader.CubicCurveToView_Impl_"] = ba;
    ba.__name__ = ["openfl", "_internal", "renderer", "_DrawCommandReader", "CubicCurveToView_Impl_"];
    ba.__properties__ = {
        get_anchorY: "get_anchorY",
        get_anchorX: "get_anchorX",
        get_controlY2: "get_controlY2",
        get_controlX2: "get_controlX2",
        get_controlY1: "get_controlY1",
        get_controlX1: "get_controlX1"
    };
    ba._new = function(i) {
        return i
    };
    ba.get_controlX1 = function(i) {
        return i["float"](0)
    };
    ba.get_controlY1 = function(i) {
        return i["float"](1)
    };
    ba.get_controlX2 = function(i) {
        return i["float"](2)
    };
    ba.get_controlY2 = function(i) {
        return i["float"](3)
    };
    ba.get_anchorX = function(i) {
        return i["float"](4)
    };
    ba.get_anchorY = function(i) {
        return i["float"](5)
    };
    var k7 = {};
    nt["openfl._internal.renderer._DrawCommandReader.CurveToView_Impl_"] = k7;
    k7.__name__ = ["openfl", "_internal", "renderer", "_DrawCommandReader", "CurveToView_Impl_"];
    k7.__properties__ = {
        get_anchorY: "get_anchorY",
        get_anchorX: "get_anchorX",
        get_controlY: "get_controlY",
        get_controlX: "get_controlX"
    };
    k7._new = function(i) {
        return i
    };
    k7.get_controlX = function(i) {
        return i["float"](0)
    };
    k7.get_controlY = function(i) {
        return i["float"](1)
    };
    k7.get_anchorX = function(i) {
        return i["float"](2)
    };
    k7.get_anchorY = function(i) {
        return i["float"](3)
    };
    var p4 = {};
    nt["openfl._internal.renderer._DrawCommandReader.DrawCircleView_Impl_"] = p4;
    p4.__name__ = ["openfl", "_internal", "renderer", "_DrawCommandReader", "DrawCircleView_Impl_"];
    p4.__properties__ = {
        get_radius: "get_radius",
        get_y: "get_y",
        get_x: "get_x"
    };
    p4._new = function(i) {
        return i
    };
    p4.get_x = function(i) {
        return i["float"](0)
    };
    p4.get_y = function(i) {
        return i["float"](1)
    };
    p4.get_radius = function(i) {
        return i["float"](2)
    };
    var jF = {};
    nt["openfl._internal.renderer._DrawCommandReader.DrawEllipseView_Impl_"] = jF;
    jF.__name__ = ["openfl", "_internal", "renderer", "_DrawCommandReader", "DrawEllipseView_Impl_"];
    jF.__properties__ = {
        get_height: "get_height",
        get_width: "get_width",
        get_y: "get_y",
        get_x: "get_x"
    };
    jF._new = function(i) {
        return i
    };
    jF.get_x = function(i) {
        return i["float"](0)
    };
    jF.get_y = function(i) {
        return i["float"](1)
    };
    jF.get_width = function(i) {
        return i["float"](2)
    };
    jF.get_height = function(i) {
        return i["float"](3)
    };
    var ah = {};
    nt["openfl._internal.renderer._DrawCommandReader.DrawPathView_Impl_"] = ah;
    ah.__name__ = ["openfl", "_internal", "renderer", "_DrawCommandReader", "DrawPathView_Impl_"];
    ah.__properties__ = {
        get_winding: "get_winding",
        get_data: "get_data",
        get_commands: "get_commands"
    };
    ah._new = function(i) {
        return i
    };
    ah.get_commands = function(i) {
        return i.obj(0)
    };
    ah.get_data = function(i) {
        return i.obj(1)
    };
    ah.get_winding = function(i) {
        return i.obj(2)
    };
    var nI = {};
    nt["openfl._internal.renderer._DrawCommandReader.DrawRectView_Impl_"] = nI;
    nI.__name__ = ["openfl", "_internal", "renderer", "_DrawCommandReader", "DrawRectView_Impl_"];
    nI.__properties__ = {
        get_height: "get_height",
        get_width: "get_width",
        get_y: "get_y",
        get_x: "get_x"
    };
    nI._new = function(i) {
        return i
    };
    nI.get_x = function(i) {
        return i["float"](0)
    };
    nI.get_y = function(i) {
        return i["float"](1)
    };
    nI.get_width = function(i) {
        return i["float"](2)
    };
    nI.get_height = function(i) {
        return i["float"](3)
    };
    var qg = {};
    nt["openfl._internal.renderer._DrawCommandReader.DrawRoundRectView_Impl_"] = qg;
    qg.__name__ = ["openfl", "_internal", "renderer", "_DrawCommandReader", "DrawRoundRectView_Impl_"];
    qg.__properties__ = {
        get_ellipseHeight: "get_ellipseHeight",
        get_ellipseWidth: "get_ellipseWidth",
        get_height: "get_height",
        get_width: "get_width",
        get_y: "get_y",
        get_x: "get_x"
    };
    qg._new = function(i) {
        return i
    };
    qg.get_x = function(i) {
        return i["float"](0)
    };
    qg.get_y = function(i) {
        return i["float"](1)
    };
    qg.get_width = function(i) {
        return i["float"](2)
    };
    qg.get_height = function(i) {
        return i["float"](3)
    };
    qg.get_ellipseWidth = function(i) {
        return i["float"](4)
    };
    qg.get_ellipseHeight = function(i) {
        return i.obj(0)
    };
    var pQ = {};
    nt["openfl._internal.renderer._DrawCommandReader.DrawTilesView_Impl_"] = pQ;
    pQ.__name__ = ["openfl", "_internal", "renderer", "_DrawCommandReader", "DrawTilesView_Impl_"];
    pQ.__properties__ = {
        get_count: "get_count",
        get_shader: "get_shader",
        get_flags: "get_flags",
        get_smooth: "get_smooth",
        get_tileData: "get_tileData",
        get_sheet: "get_sheet"
    };
    pQ._new = function(i) {
        return i
    };
    pQ.get_sheet = function(i) {
        return i.tileSheet(0)
    };
    pQ.get_tileData = function(i) {
        return i.fArr(0)
    };
    pQ.get_smooth = function(i) {
        return i.bool(0)
    };
    pQ.get_flags = function(i) {
        return i["int"](0)
    };
    pQ.get_shader = function(i) {
        return i.obj(0)
    };
    pQ.get_count = function(i) {
        return i["int"](1)
    };
    var d7 = {};
    nt["openfl._internal.renderer._DrawCommandReader.DrawTrianglesView_Impl_"] = d7;
    d7.__name__ = ["openfl", "_internal", "renderer", "_DrawCommandReader", "DrawTrianglesView_Impl_"];
    d7.__properties__ = {
        get_culling: "get_culling",
        get_uvtData: "get_uvtData",
        get_indices: "get_indices",
        get_vertices: "get_vertices"
    };
    d7._new = function(i) {
        return i
    };
    d7.get_vertices = function(i) {
        return i.obj(0)
    };
    d7.get_indices = function(i) {
        return i.obj(1)
    };
    d7.get_uvtData = function(i) {
        return i.obj(2)
    };
    d7.get_culling = function(i) {
        return i.obj(3)
    };
    var f6 = {};
    nt["openfl._internal.renderer._DrawCommandReader.EndFillView_Impl_"] = f6;
    f6.__name__ = ["openfl", "_internal", "renderer", "_DrawCommandReader", "EndFillView_Impl_"];
    f6._new = function(i) {
        return i
    };
    var mB = {};
    nt["openfl._internal.renderer._DrawCommandReader.LineBitmapStyleView_Impl_"] = mB;
    mB.__name__ = ["openfl", "_internal", "renderer", "_DrawCommandReader", "LineBitmapStyleView_Impl_"];
    mB.__properties__ = {
        get_smooth: "get_smooth",
        get_repeat: "get_repeat",
        get_matrix: "get_matrix",
        get_bitmap: "get_bitmap"
    };
    mB._new = function(i) {
        return i
    };
    mB.get_bitmap = function(i) {
        return i.obj(0)
    };
    mB.get_matrix = function(i) {
        return i.obj(1)
    };
    mB.get_repeat = function(i) {
        return i.bool(0)
    };
    mB.get_smooth = function(i) {
        return i.bool(1)
    };
    var iX = {};
    nt["openfl._internal.renderer._DrawCommandReader.LineGradientStyleView_Impl_"] = iX;
    iX.__name__ = ["openfl", "_internal", "renderer", "_DrawCommandReader", "LineGradientStyleView_Impl_"];
    iX.__properties__ = {
        get_focalPointRatio: "get_focalPointRatio",
        get_interpolationMethod: "get_interpolationMethod",
        get_spreadMethod: "get_spreadMethod",
        get_matrix: "get_matrix",
        get_ratios: "get_ratios",
        get_alphas: "get_alphas",
        get_colors: "get_colors",
        get_type: "get_type"
    };
    iX._new = function(i) {
        return i
    };
    iX.get_type = function(i) {
        return i.obj(0)
    };
    iX.get_colors = function(i) {
        return i.iArr(0)
    };
    iX.get_alphas = function(i) {
        return i.fArr(0)
    };
    iX.get_ratios = function(i) {
        return i.iArr(1)
    };
    iX.get_matrix = function(i) {
        return i.obj(1)
    };
    iX.get_spreadMethod = function(i) {
        return i.obj(2)
    };
    iX.get_interpolationMethod = function(i) {
        return i.obj(3)
    };
    iX.get_focalPointRatio = function(i) {
        return i["float"](0)
    };
    var am = {};
    nt["openfl._internal.renderer._DrawCommandReader.LineStyleView_Impl_"] = am;
    am.__name__ = ["openfl", "_internal", "renderer", "_DrawCommandReader", "LineStyleView_Impl_"];
    am.__properties__ = {
        get_miterLimit: "get_miterLimit",
        get_joints: "get_joints",
        get_caps: "get_caps",
        get_scaleMode: "get_scaleMode",
        get_pixelHinting: "get_pixelHinting",
        get_alpha: "get_alpha",
        get_color: "get_color",
        get_thickness: "get_thickness"
    };
    am._new = function(i) {
        return i
    };
    am.get_thickness = function(i) {
        return i.obj(0)
    };
    am.get_color = function(i) {
        return i["int"](0)
    };
    am.get_alpha = function(i) {
        return i["float"](0)
    };
    am.get_pixelHinting = function(i) {
        return i.bool(0)
    };
    am.get_scaleMode = function(i) {
        return i.obj(1)
    };
    am.get_caps = function(i) {
        return i.obj(2)
    };
    am.get_joints = function(i) {
        return i.obj(3)
    };
    am.get_miterLimit = function(i) {
        return i["float"](1)
    };
    var aF = {};
    nt["openfl._internal.renderer._DrawCommandReader.LineToView_Impl_"] = aF;
    aF.__name__ = ["openfl", "_internal", "renderer", "_DrawCommandReader", "LineToView_Impl_"];
    aF.__properties__ = {
        get_y: "get_y",
        get_x: "get_x"
    };
    aF._new = function(i) {
        return i
    };
    aF.get_x = function(i) {
        return i["float"](0)
    };
    aF.get_y = function(i) {
        return i["float"](1)
    };
    var eE = {};
    nt["openfl._internal.renderer._DrawCommandReader.MoveToView_Impl_"] = eE;
    eE.__name__ = ["openfl", "_internal", "renderer", "_DrawCommandReader", "MoveToView_Impl_"];
    eE.__properties__ = {
        get_y: "get_y",
        get_x: "get_x"
    };
    eE._new = function(i) {
        return i
    };
    eE.get_x = function(i) {
        return i["float"](0)
    };
    eE.get_y = function(i) {
        return i["float"](1)
    };
    var mn = {};
    nt["openfl._internal.renderer._DrawCommandReader.OverrideMatrixView_Impl_"] = mn;
    mn.__name__ = ["openfl", "_internal", "renderer", "_DrawCommandReader", "OverrideMatrixView_Impl_"];
    mn.__properties__ = {
        get_matrix: "get_matrix"
    };
    mn._new = function(i) {
        return i
    };
    mn.get_matrix = function(i) {
        return i.obj(0)
    };
    var V = nt["openfl._internal.renderer.DrawCommandType"] = {
        __ename__: ["openfl", "_internal", "renderer", "DrawCommandType"],
        __constructs__: ["BEGIN_BITMAP_FILL", "BEGIN_FILL", "BEGIN_GRADIENT_FILL", "CUBIC_CURVE_TO", "CURVE_TO", "DRAW_CIRCLE", "DRAW_ELLIPSE", "DRAW_PATH", "DRAW_RECT", "DRAW_ROUND_RECT", "DRAW_TILES", "DRAW_TRIANGLES", "END_FILL", "LINE_BITMAP_STYLE", "LINE_GRADIENT_STYLE", "LINE_STYLE", "LINE_TO", "MOVE_TO", "OVERRIDE_MATRIX", "UNKNOWN"]
    };
    V.BEGIN_BITMAP_FILL = ["BEGIN_BITMAP_FILL", 0];
    V.BEGIN_BITMAP_FILL.toString = ea;
    V.BEGIN_BITMAP_FILL.__enum__ = V;
    V.BEGIN_FILL = ["BEGIN_FILL", 1];
    V.BEGIN_FILL.toString = ea;
    V.BEGIN_FILL.__enum__ = V;
    V.BEGIN_GRADIENT_FILL = ["BEGIN_GRADIENT_FILL", 2];
    V.BEGIN_GRADIENT_FILL.toString = ea;
    V.BEGIN_GRADIENT_FILL.__enum__ = V;
    V.CUBIC_CURVE_TO = ["CUBIC_CURVE_TO", 3];
    V.CUBIC_CURVE_TO.toString = ea;
    V.CUBIC_CURVE_TO.__enum__ = V;
    V.CURVE_TO = ["CURVE_TO", 4];
    V.CURVE_TO.toString = ea;
    V.CURVE_TO.__enum__ = V;
    V.DRAW_CIRCLE = ["DRAW_CIRCLE", 5];
    V.DRAW_CIRCLE.toString = ea;
    V.DRAW_CIRCLE.__enum__ = V;
    V.DRAW_ELLIPSE = ["DRAW_ELLIPSE", 6];
    V.DRAW_ELLIPSE.toString = ea;
    V.DRAW_ELLIPSE.__enum__ = V;
    V.DRAW_PATH = ["DRAW_PATH", 7];
    V.DRAW_PATH.toString = ea;
    V.DRAW_PATH.__enum__ = V;
    V.DRAW_RECT = ["DRAW_RECT", 8];
    V.DRAW_RECT.toString = ea;
    V.DRAW_RECT.__enum__ = V;
    V.DRAW_ROUND_RECT = ["DRAW_ROUND_RECT", 9];
    V.DRAW_ROUND_RECT.toString = ea;
    V.DRAW_ROUND_RECT.__enum__ = V;
    V.DRAW_TILES = ["DRAW_TILES", 10];
    V.DRAW_TILES.toString = ea;
    V.DRAW_TILES.__enum__ = V;
    V.DRAW_TRIANGLES = ["DRAW_TRIANGLES", 11];
    V.DRAW_TRIANGLES.toString = ea;
    V.DRAW_TRIANGLES.__enum__ = V;
    V.END_FILL = ["END_FILL", 12];
    V.END_FILL.toString = ea;
    V.END_FILL.__enum__ = V;
    V.LINE_BITMAP_STYLE = ["LINE_BITMAP_STYLE", 13];
    V.LINE_BITMAP_STYLE.toString = ea;
    V.LINE_BITMAP_STYLE.__enum__ = V;
    V.LINE_GRADIENT_STYLE = ["LINE_GRADIENT_STYLE", 14];
    V.LINE_GRADIENT_STYLE.toString = ea;
    V.LINE_GRADIENT_STYLE.__enum__ = V;
    V.LINE_STYLE = ["LINE_STYLE", 15];
    V.LINE_STYLE.toString = ea;
    V.LINE_STYLE.__enum__ = V;
    V.LINE_TO = ["LINE_TO", 16];
    V.LINE_TO.toString = ea;
    V.LINE_TO.__enum__ = V;
    V.MOVE_TO = ["MOVE_TO", 17];
    V.MOVE_TO.toString = ea;
    V.MOVE_TO.__enum__ = V;
    V.OVERRIDE_MATRIX = ["OVERRIDE_MATRIX", 18];
    V.OVERRIDE_MATRIX.toString = ea;
    V.OVERRIDE_MATRIX.__enum__ = V;
    V.UNKNOWN = ["UNKNOWN", 19];
    V.UNKNOWN.toString = ea;
    V.UNKNOWN.__enum__ = V;
    var aD = function() {};
    nt["openfl._internal.renderer.GraphicsPaths"] = aD;
    aD.__name__ = ["openfl", "_internal", "renderer", "GraphicsPaths"];
    aD.ellipse = function(q3, q2, q1, i1, q, i2) {
        var js = Math.PI * 2 / i2;
        var q0 = 0;
        var qZ = i2 + 1;
        while (q0 < qZ) {
            var qY = q0++;
            q3.push(q2 + Math.sin(js * qY) * i1);
            q3.push(q1 + Math.cos(js * qY) * q)
        }
    };
    aD.cubicCurveTo = function(rc, i2, q, q4, re, q0, qY) {
        var q8 = 20;
        var q7 = 0;
        var ra = 0;
        var q9 = 0;
        var qZ = 0;
        var js = 0;
        var q2 = rc[rc.length - 2];
        var q1 = rc[rc.length - 1];
        var q6 = 0;
        var q3 = 0;
        var rd = 0;
        var q5 = 1;
        var i1 = q8 + 1;
        while (q5 < i1) {
            var rb = q5++;
            rd = rb / q8;
            q7 = 1 - rd;
            ra = q7 * q7;
            q9 = ra * q7;
            qZ = rd * rd;
            js = qZ * rd;
            q6 = q9 * q2 + 3 * ra * rd * i2 + 3 * q7 * qZ * q4 + js * q0;
            q3 = q9 * q1 + 3 * ra * rd * q + 3 * q7 * qZ * re + js * qY;
            rc.push(q6);
            rc.push(q3)
        }
    };
    aD.curveTo = function(q9, js, i2, q7, q4) {
        var q = 0;
        var q2 = 0;
        var i1 = 20;
        var q6 = q9[q9.length - 2];
        var q3 = q9[q9.length - 1];
        var q8 = 0;
        var q5 = 0;
        var qZ = 0;
        var q1 = 1;
        var q0 = i1 + 1;
        while (q1 < q0) {
            var qY = q1++;
            qZ = qY / i1;
            q = q6 + (js - q6) * qZ;
            q2 = q3 + (i2 - q3) * qZ;
            q8 = q + (js + (q7 - js) * qZ - q) * qZ;
            q5 = q2 + (i2 + (q4 - i2) * qZ - q2) * qZ;
            q9.push(q8);
            q9.push(q5)
        }
    };
    aD.roundRectangle = function(q4, q2, q1, i1, q5, q, i) {
        var q3 = q2 + i1;
        var qY = q1 + q5;
        var q0 = -q + q * aD.SIN45;
        var qZ = -q + q * aD.TAN22;
        var js = -i + i * aD.SIN45;
        var i2 = -i + i * aD.TAN22;
        q4.push(q3);
        q4.push(qY - i);
        aD.curveTo(q4, q3, qY + i2, q3 + q0, qY + js);
        aD.curveTo(q4, q3 + qZ, qY, q3 - q, qY);
        q4.push(q2 + q);
        q4.push(qY);
        aD.curveTo(q4, q2 - qZ, qY, q2 - q0, qY + js);
        aD.curveTo(q4, q2, qY + i2, q2, qY - i);
        q4.push(q2);
        q4.push(q1 + i);
        aD.curveTo(q4, q2, q1 - i2, q2 - q0, q1 - js);
        aD.curveTo(q4, q2 - qZ, q1, q2 + q, q1);
        q4.push(q3 - q);
        q4.push(q1);
        aD.curveTo(q4, q3 + qZ, q1, q3 + q0, q1 - js);
        aD.curveTo(q4, q3, q1 - i2, q3, q1 + i);
        q4.push(q3);
        q4.push(qY - i)
    };
    var aK = function() {};
    nt["openfl._internal.renderer.PolyK"] = aK;
    aK.__name__ = ["openfl", "_internal", "renderer", "PolyK"];
    aK.triangulate = function(ri, q5) {
        var rl = true;
        var q6 = q5.length >> 1;
        if (q6 < 3) {
            return []
        }
        var q2;
        var qY = [];
        var q4 = 0;
        while (q4 < q6) {
            var q8 = q4++;
            qY.push(q8)
        }
        q2 = qY;
        var rg = 0;
        var rb = q6;
        var q0 = false;
        while (rb > 3) {
            var rc = q2[rg % rb];
            var ra = q2[(rg + 1) % rb];
            var q7 = q2[(rg + 2) % rb];
            var q1 = q5[2 * rc];
            var qZ = q5[2 * rc + 1];
            var rj = q5[2 * ra];
            var rh = q5[2 * ra + 1];
            var js = q5[2 * q7];
            var q = q5[2 * q7 + 1];
            q0 = false;
            if (aK._convex(q1, qZ, rj, rh, js, q, rl)) {
                q0 = true;
                var rf = 0;
                while (rf < rb) {
                    var re = rf++;
                    var rk = q2[re];
                    if (rk == rc || rk == ra || rk == q7) {
                        continue
                    }
                    if (aK._PointInTriangle(q5[2 * rk], q5[2 * rk + 1], q1, qZ, rj, rh, js, q)) {
                        q0 = false;
                        break
                    }
                }
            }
            if (q0) {
                ri.push(rc);
                ri.push(ra);
                ri.push(q7);
                q2.splice((rg + 1) % rb, 1);
                rb--;
                rg = 0
            } else {
                if (rg++ > 3 * rb) {
                    if (rl) {
                        ri = [];
                        var rd = [];
                        var q3 = 0;
                        while (q3 < q6) {
                            var q9 = q3++;
                            rd.push(q9)
                        }
                        q2 = rd;
                        rg = 0;
                        rb = q6;
                        rl = false
                    } else {
                        eM.trace("Warning: shape too complex to fill", {
                            fileName: "PolyK.hx",
                            lineNumber: 104,
                            className: "openfl._internal.renderer.PolyK",
                            methodName: "triangulate"
                        });
                        return []
                    }
                }
            }
        }
        ri.push(q2[0]);
        ri.push(q2[1]);
        ri.push(q2[2]);
        return ri
    };
    aK._PointInTriangle = function(q7, q6, q3, q2, re, rd, qZ, js) {
        var i2 = qZ - q3 | 0;
        var i1 = js - q2 | 0;
        var q1 = re - q3 | 0;
        var q0 = rd - q2 | 0;
        var rc = q7 - q3 | 0;
        var ra = q6 - q2 | 0;
        var rb = i2 * i2 + i1 * i1;
        var q9 = i2 * q1 + i1 * q0;
        var q8 = i2 * rc + i1 * ra;
        var q = q1 * q1 + q0 * q0;
        var i = q1 * rc + q0 * ra;
        var qY = 1 / (rb * q - q9 * q9);
        var q5 = (q * q8 - q9 * i) * qY;
        var q4 = (rb * i - q9 * q8) * qY;
        return q5 >= 0 && q4 >= 0 && q5 + q4 < 1
    };
    aK._convex = function(i2, i1, qY, js, i, qZ, q) {
        return (i1 - js) * (i - qY) + (qY - i2) * (qZ - js) >= 0 == q
    };
    var ii = function() {
        this.activeTextures = 0
    };
    nt["openfl._internal.renderer.RenderSession"] = ii;
    ii.__name__ = ["openfl", "_internal", "renderer", "RenderSession"];
    ii.prototype = {
        cairo: null,
        context: null,
        element: null,
        gl: null,
        renderer: null,
        roundPixels: null,
        transformProperty: null,
        transformOriginProperty: null,
        vendorPrefix: null,
        z: null,
        projectionMatrix: null,
        drawCount: null,
        currentBlendMode: null,
        activeTextures: null,
        shaderManager: null,
        maskManager: null,
        filterManager: null,
        blendModeManager: null,
        spriteBatch: null,
        stencilManager: null,
        defaultFramebuffer: null,
        __class__: ii
    };
    var mf = function() {};
    nt["openfl._internal.renderer.cairo.CairoBitmap"] = mf;
    mf.__name__ = ["openfl", "_internal", "renderer", "cairo", "CairoBitmap"];
    mf.render = function(qZ, qY) {
        if (!qZ.__renderable || qZ.__worldAlpha <= 0) {
            return
        }
        var q0 = qY.cairo;
        if (qZ.bitmapData != null && qZ.bitmapData.__isValid) {
            if (qZ.__mask != null) {
                qY.maskManager.pushMask(qZ.__mask)
            }
            var i1 = qZ.__renderTransform;
            var js = qZ.get_scrollRect();
            if (qY.roundPixels) {
                var q = i1.__toMatrix3();
                q.tx = Math.round(q.tx);
                q.ty = Math.round(q.ty);
                q0.set_matrix(q)
            } else {
                q0.set_matrix(i1.__toMatrix3())
            }
            var i = qZ.bitmapData.getSurface();
            if (i != null) {
                var i2 = jp.createForSurface(i);
                jp.set_filter(i2, qZ.smoothing ? 1 : 3);
                if (js != null) {
                    q0.pushGroup();
                    q0.set_source(i2);
                    q0.newPath();
                    q0.rectangle(js.x, js.y, js.width, js.height);
                    q0.fill();
                    q0.popGroupToSource()
                } else {
                    q0.set_source(i2)
                }
                if (qZ.__worldAlpha == 1) {
                    q0.paint()
                } else {
                    q0.paintWithAlpha(qZ.__worldAlpha)
                }
            }
            if (qZ.__mask != null) {
                qY.maskManager.popMask()
            }
        }
    };
    var qy = function() {};
    nt["openfl._internal.renderer.cairo.CairoGraphics"] = qy;
    qy.__name__ = ["openfl", "_internal", "renderer", "cairo", "CairoGraphics"];
    qy.bitmapFill = null;
    qy.bitmapRepeat = null;
    qy.bounds = null;
    qy.cairo = null;
    qy.fillPattern = null;
    qy.fillPatternMatrix = null;
    qy.graphics = null;
    qy.hasFill = null;
    qy.hasStroke = null;
    qy.hitTesting = null;
    qy.inversePendingMatrix = null;
    qy.pendingMatrix = null;
    qy.strokePattern = null;
    qy.closePath = function() {
        if (qy.strokePattern == null) {
            return
        }
        qy.cairo.closePath();
        qy.cairo.set_source(qy.strokePattern);
        if (!qy.hitTesting) {
            qy.cairo.strokePreserve()
        }
        qy.cairo.newPath()
    };
    qy.createGradientPattern = function(qY, q3, q0, q7, rb, q5, q6, rh) {
        var re = null;
        switch (qY) {
            case 1:
                if (rb == null) {
                    rb = new qd()
                }
                var ra = rb.transformPoint(new pp(1638.4, 0));
                var q4 = rb.tx + qy.graphics.__bounds.x;
                var q2 = rb.ty + qy.graphics.__bounds.y;
                re = jp.createRadial(q4, q2, 0, q4, q2, (ra.x - rb.tx) / 2);
                break;
            case 0:
                if (rb == null) {
                    rb = new qd()
                }
                var js = rb.transformPoint(new pp(-819.2, 0));
                var i1 = rb.transformPoint(new pp(819.2, 0));
                js.x += qy.graphics.__bounds.x;
                i1.x += qy.graphics.__bounds.x;
                js.y += qy.graphics.__bounds.y;
                i1.y += qy.graphics.__bounds.y;
                re = jp.createLinear(js.x, js.y, i1.x, i1.y);
                break
        }
        var q9 = 0;
        var i2 = q3.length;
        while (q9 < i2) {
            var rc = q9++;
            var q = q3[rc];
            var qZ = q0[rc];
            var q8 = ((q & 16711680) >>> 16) / 255;
            var rd = ((q & 65280) >>> 8) / 255;
            var rg = (q & 255) / 255;
            var q1 = q7[rc] / 255;
            if (q1 < 0) {
                q1 = 0
            }
            if (q1 > 1) {
                q1 = 1
            }
            jp.addColorStopRGBA(re, q1, q8, rd, rg, qZ)
        }
        var rf = jp.get_matrix(re);
        rf.tx = qy.bounds.x;
        rf.ty = qy.bounds.y;
        jp.set_matrix(re, rf);
        return re
    };
    qy.createImagePattern = function(i2, q, i) {
        var i1 = jp.createForSurface(i2.getSurface());
        if (i) {
            jp.set_extend(i1, 1)
        }
        qy.fillPatternMatrix = q;
        return i1
    };
    qy.drawRoundRect = function(q1, q0, i, q4, q, q2) {
        if (q2 == null) {
            q2 = q
        }
        q *= 0.5;
        q2 *= 0.5;
        if (q > i / 2) {
            q = i / 2
        }
        if (q2 > q4 / 2) {
            q2 = q4 / 2
        }
        var q3 = q1 + i;
        var js = q0 + q4;
        var qZ = -q + q * qy.SIN45;
        var qY = -q + q * qy.TAN22;
        var i2 = -q2 + q2 * qy.SIN45;
        var i1 = -q2 + q2 * qy.TAN22;
        qy.cairo.moveTo(q3, js - q2);
        qy.quadraticCurveTo(q3, js + i1, q3 + qZ, js + i2);
        qy.quadraticCurveTo(q3 + qY, js, q3 - q, js);
        qy.cairo.lineTo(q1 + q, js);
        qy.quadraticCurveTo(q1 - qY, js, q1 - qZ, js + i2);
        qy.quadraticCurveTo(q1, js + i1, q1, js - q2);
        qy.cairo.lineTo(q1, q0 + q2);
        qy.quadraticCurveTo(q1, q0 - i1, q1 - qZ, q0 - i2);
        qy.quadraticCurveTo(q1 - qY, q0, q1 + q, q0);
        qy.cairo.lineTo(q3 - q, q0);
        qy.quadraticCurveTo(q3 + qY, q0, q3 + qZ, q0 - i2);
        qy.quadraticCurveTo(q3, q0 - i1, q3, q0 + q2);
        qy.cairo.lineTo(q3, js - q2)
    };
    qy.endFill = function() {
        qy.cairo.newPath();
        qy.playCommands(qy.fillCommands, false);
        qy.fillCommands.clear()
    };
    qy.endStroke = function() {
        qy.cairo.newPath();
        qy.playCommands(qy.strokeCommands, true);
        qy.cairo.closePath();
        qy.strokeCommands.clear()
    };
    qy.hitTest = function(q, i, i1) {
        return false
    };
    qy.isCCW = function(i2, qY, q, js, i, i1) {
        return (q - i2) * (i1 - qY) - (js - qY) * (i - i2) < 0
    };
    qy.normalizeUVT = function(q, i) {
        if (i == null) {
            i = false
        }
        var q6 = -Infinity;
        var qZ = -Infinity;
        var q3 = q.length;
        var q5 = 1;
        var q1 = q3 + 1;
        while (q5 < q1) {
            var q7 = q5++;
            if (i && q7 % 3 == 0) {
                continue
            }
            qZ = q.data[q7 - 1];
            if (q6 < qZ) {
                q6 = qZ
            }
        }
        var q8;
        var q0;
        q0 = new p0();
        var qY;
        qY = new Array(0);
        q0.data = qY;
        q0.length = 0;
        q0.fixed = false;
        q8 = q0;
        var js = 1;
        var q4 = q3 + 1;
        while (js < q4) {
            var q2 = js++;
            if (i && q2 % 3 == 0) {
                continue
            }
            if (!q8.fixed) {
                q8.length++;
                if (q8.data.length < q8.length) {
                    var i2;
                    var i1;
                    i1 = new Array(q8.data.length + 10);
                    i2 = i1;
                    dQ.blit(q8.data, 0, i2, 0, q8.data.length);
                    q8.data = i2
                }
                q8.data[q8.length - 1] = q.data[q2 - 1] / q6
            }
            q8.length
        }
        return {
            max: q6,
            uvt: q8
        }
    };
    qy.playCommands = function(q7, so) {
        if (so == null) {
            so = false
        }
        if (q7.get_length() == 0) {
            return
        }
        qy.bounds = qy.graphics.__bounds;
        var rF = qy.bounds.x;
        var rD = qy.bounds.y;
        var rr = 0;
        var rq = 0;
        var sc = false;
        var sA = 0;
        var sx = 0;
        qy.cairo.set_fillRule(1);
        qy.cairo.set_antialias(3);
        var rW = false;
        var rj = new k8(q7);
        var qZ = 0;
        var q0 = q7.types;
        try {
            while (qZ < q0.length) {
                var rU = q0[qZ];
                ++qZ;
                switch (rU[1]) {
                    case 3:
                        var rQ = rj.readCubicCurveTo();
                        rW = true;
                        qy.cairo.curveTo(ba.get_controlX1(rQ) - rF, ba.get_controlY1(rQ) - rD, ba.get_controlX2(rQ) - rF, ba.get_controlY2(rQ) - rD, ba.get_anchorX(rQ) - rF, ba.get_anchorY(rQ) - rD);
                        break;
                    case 4:
                        var sk = rj.readCurveTo();
                        rW = true;
                        qy.quadraticCurveTo(k7.get_controlX(sk) - rF, k7.get_controlY(sk) - rD, k7.get_anchorX(sk) - rF, k7.get_anchorY(sk) - rD);
                        break;
                    case 5:
                        var si = rj.readDrawCircle();
                        rW = true;
                        qy.cairo.moveTo(p4.get_x(si) - rF + p4.get_radius(si), p4.get_y(si) - rD);
                        qy.cairo.arc(p4.get_x(si) - rF, p4.get_y(si) - rD, p4.get_radius(si), 0, Math.PI * 2);
                        break;
                    case 8:
                        var sh = rj.readDrawRect();
                        rW = true;
                        qy.cairo.rectangle(nI.get_x(sh) - rF, nI.get_y(sh) - rD, nI.get_width(sh), nI.get_height(sh));
                        break;
                    case 6:
                        var sf = rj.readDrawEllipse();
                        rW = true;
                        var rB = jF.get_x(sf);
                        var rA = jF.get_y(sf);
                        var sI = jF.get_width(sf);
                        var rh = jF.get_height(sf);
                        rB -= rF;
                        rA -= rD;
                        var rd = 0.5522848;
                        var ry = sI / 2 * rd;
                        var rx = rh / 2 * rd;
                        var sU = rB + sI;
                        var sK = rA + rh;
                        var sS = rB + sI / 2;
                        var sG = rA + rh / 2;
                        qy.cairo.moveTo(rB, sG);
                        qy.cairo.curveTo(rB, sG - rx, sS - ry, rA, sS, rA);
                        qy.cairo.curveTo(sS + ry, rA, sU, sG - rx, sU, sG);
                        qy.cairo.curveTo(sU, sG + rx, sS + ry, sK, sS, sK);
                        qy.cairo.curveTo(sS - ry, sK, rB, sG + rx, rB, sG);
                        break;
                    case 9:
                        var sd = rj.readDrawRoundRect();
                        rW = true;
                        qy.drawRoundRect(qg.get_x(sd) - rF, qg.get_y(sd) - rD, qg.get_width(sd), qg.get_height(sd), qg.get_ellipseWidth(sd), qg.get_ellipseHeight(sd));
                        break;
                    case 16:
                        var sb = rj.readLineTo();
                        rW = true;
                        qy.cairo.lineTo(aF.get_x(sb) - rF, aF.get_y(sb) - rD);
                        rr = aF.get_x(sb);
                        rq = aF.get_y(sb);
                        break;
                    case 17:
                        var sa = rj.readMoveTo();
                        qy.cairo.moveTo(eE.get_x(sa) - rF, eE.get_y(sa) - rD);
                        rr = eE.get_x(sa);
                        rq = eE.get_y(sa);
                        sc = true;
                        sA = eE.get_x(sa);
                        sx = eE.get_y(sa);
                        break;
                    case 15:
                        var r8 = rj.readLineStyle();
                        if (so && qy.hasStroke) {
                            qy.closePath()
                        }
                        qy.cairo.moveTo(rr - rF, rq - rD);
                        if (am.get_thickness(r8) == null) {
                            qy.hasStroke = false
                        } else {
                            qy.hasStroke = true;
                            qy.cairo.set_lineWidth(am.get_thickness(r8) > 0 ? am.get_thickness(r8) : 1);
                            if (am.get_joints(r8) == null) {
                                qy.cairo.set_lineJoin(1)
                            } else {
                                qy.cairo.set_lineJoin((function(i2) {
                                    var i;
                                    var i1 = am.get_joints(r8);
                                    i = (function(sX) {
                                        var sW;
                                        switch (i1) {
                                            case 1:
                                                sW = 0;
                                                break;
                                            case 0:
                                                sW = 2;
                                                break;
                                            default:
                                                sW = 1
                                        }
                                        return sW
                                    }(i2));
                                    return i
                                }(this)))
                            }
                            if (am.get_caps(r8) == null) {
                                qy.cairo.set_lineCap(1)
                            } else {
                                qy.cairo.set_lineCap((function(i2) {
                                    var i;
                                    var i1 = am.get_caps(r8);
                                    i = (function(sX) {
                                        var sW;
                                        switch (i1) {
                                            case 0:
                                                sW = 0;
                                                break;
                                            case 2:
                                                sW = 2;
                                                break;
                                            default:
                                                sW = 1
                                        }
                                        return sW
                                    }(i2));
                                    return i
                                }(this)))
                            }
                            qy.cairo.set_miterLimit(am.get_miterLimit(r8));
                            var rE = ((am.get_color(r8) & 16711680) >>> 16) / 255;
                            var rO = ((am.get_color(r8) & 65280) >>> 8) / 255;
                            var rR = (am.get_color(r8) & 255) / 255;
                            if (am.get_alpha(r8) == 1) {
                                qy.strokePattern = jp.createRGB(rE, rO, rR)
                            } else {
                                qy.strokePattern = jp.createRGBA(rE, rO, rR, am.get_alpha(r8))
                            }
                        }
                        break;
                    case 14:
                        var r6 = rj.readLineGradientStyle();
                        if (so && qy.hasStroke) {
                            qy.closePath()
                        }
                        qy.cairo.moveTo(rr - rF, rq - rD);
                        qy.strokePattern = qy.createGradientPattern(iX.get_type(r6), iX.get_colors(r6), iX.get_alphas(r6), iX.get_ratios(r6), iX.get_matrix(r6), iX.get_spreadMethod(r6), iX.get_interpolationMethod(r6), iX.get_focalPointRatio(r6));
                        qy.hasStroke = true;
                        break;
                    case 13:
                        var sp = rj.readLineBitmapStyle();
                        if (so && qy.hasStroke) {
                            qy.closePath()
                        }
                        qy.cairo.moveTo(rr - rF, rq - rD);
                        qy.strokePattern = qy.createImagePattern(mB.get_bitmap(sp), mB.get_matrix(sp), mB.get_repeat(sp));
                        qy.hasStroke = true;
                        break;
                    case 0:
                        var sm = rj.readBeginBitmapFill();
                        qy.fillPattern = qy.createImagePattern(i8.get_bitmap(sm), i8.get_matrix(sm), i8.get_repeat(sm));
                        qy.bitmapFill = i8.get_bitmap(sm);
                        qy.bitmapRepeat = i8.get_repeat(sm);
                        qy.hasFill = true;
                        break;
                    case 1:
                        var sl = rj.readBeginFill();
                        if (pc.get_alpha(sl) < 0.005) {
                            qy.hasFill = false
                        } else {
                            if (qy.fillPattern != null) {
                                qy.fillPatternMatrix = null
                            }
                            qy.fillPattern = jp.createRGBA(((pc.get_color(sl) & 16711680) >>> 16) / 255, ((pc.get_color(sl) & 65280) >>> 8) / 255, (pc.get_color(sl) & 255) / 255, pc.get_alpha(sl));
                            qy.hasFill = true
                        }
                        qy.bitmapFill = null;
                        break;
                    case 2:
                        var sj = rj.readBeginGradientFill();
                        if (qy.fillPattern != null) {
                            qy.fillPatternMatrix = null
                        }
                        qy.fillPattern = qy.createGradientPattern(aP.get_type(sj), aP.get_colors(sj), aP.get_alphas(sj), aP.get_ratios(sj), aP.get_matrix(sj), aP.get_spreadMethod(sj), aP.get_interpolationMethod(sj), aP.get_focalPointRatio(sj));
                        qy.hasFill = true;
                        qy.bitmapFill = null;
                        break;
                    case 11:
                        var sg = rj.readDrawTriangles();
                        var rC = d7.get_vertices(sg);
                        var ru = d7.get_indices(sg);
                        var rX = d7.get_uvtData(sg);
                        var rk = qy.bitmapFill == null;
                        if (rk && rX != null) {
                            throw "__break__"
                        }
                        var r2 = 0;
                        var sw = 0;
                        if (!rk) {
                            if (rX == null) {
                                var r7;
                                r7 = new p0();
                                var r5;
                                r5 = new Array(0);
                                r7.data = r5;
                                r7.length = 0;
                                r7.fixed = false;
                                rX = r7;
                                var qY = 0;
                                var sM = rC.length / 2 | 0;
                                while (qY < sM) {
                                    var sr = qY++;
                                    if (!rX.fixed) {
                                        rX.length++;
                                        if (rX.data.length < rX.length) {
                                            var q2;
                                            var r4;
                                            r4 = new Array(rX.data.length + 10);
                                            q2 = r4;
                                            dQ.blit(rX.data, 0, q2, 0, rX.data.length);
                                            rX.data = q2
                                        }
                                        rX.data[rX.length - 1] = rC.data[sr * 2] / qy.bitmapFill.width
                                    }
                                    rX.length;
                                    if (!rX.fixed) {
                                        rX.length++;
                                        if (rX.data.length < rX.length) {
                                            var q1;
                                            var r3;
                                            r3 = new Array(rX.data.length + 10);
                                            q1 = r3;
                                            dQ.blit(rX.data, 0, q1, 0, rX.data.length);
                                            rX.data = q1
                                        }
                                        rX.data[rX.length - 1] = rC.data[sr * 2 + 1] / qy.bitmapFill.height
                                    }
                                    rX.length
                                }
                            }
                            var rg;
                            rg = (function(i2) {
                                var i;
                                var i1 = d7.get_uvtData(sg);
                                i = i1.length;
                                return i
                            }(this)) != rC.length;
                            var rw = qy.normalizeUVT(rX, rg);
                            var sH = rw.max;
                            rX = rw.uvt;
                            if (sH > 1) {
                                r2 = qy.bounds.width | 0;
                                sw = qy.bounds.height | 0
                            } else {
                                r2 = qy.bitmapFill.width;
                                sw = qy.bitmapFill.height
                            }
                        }
                        var rL = 0;
                        var rI = ru.length;
                        var sC;
                        var rY;
                        var rJ;
                        var rv;
                        var rt;
                        var re;
                        var rc;
                        var q;
                        var sV;
                        var rp;
                        var q6;
                        var ro;
                        var q5;
                        var rn;
                        var q4;
                        var r1;
                        var rN;
                        var r0;
                        var rM;
                        var rZ;
                        var rK;
                        var sz;
                        var sQ;
                        var sP;
                        var sO;
                        var sN;
                        var ra;
                        var q9;
                        qy.cairo.set_antialias(1);
                        while (rL < rI) {
                            sC = rL;
                            rY = rL + 1;
                            rJ = rL + 2;
                            rv = ru.data[sC] * 2;
                            rt = ru.data[sC] * 2 + 1;
                            re = ru.data[rY] * 2;
                            rc = ru.data[rY] * 2 + 1;
                            q = ru.data[rJ] * 2;
                            sV = ru.data[rJ] * 2 + 1;
                            rp = rC.data[rv];
                            q6 = rC.data[rt];
                            ro = rC.data[re];
                            q5 = rC.data[rc];
                            rn = rC.data[q];
                            q4 = rC.data[sV];
                            var sL = d7.get_culling(sg);
                            switch (sL) {
                                case 2:
                                    if (!((ro - rp) * (q4 - q6) - (q5 - q6) * (rn - rp) < 0)) {
                                        rL += 3;
                                        continue
                                    }
                                    break;
                                case 0:
                                    if ((ro - rp) * (q4 - q6) - (q5 - q6) * (rn - rp) < 0) {
                                        rL += 3;
                                        continue
                                    }
                                    break;
                                default:
                            }
                            if (rk) {
                                qy.cairo.newPath();
                                qy.cairo.moveTo(rp, q6);
                                qy.cairo.lineTo(ro, q5);
                                qy.cairo.lineTo(rn, q4);
                                qy.cairo.closePath();
                                if (!qy.hitTesting) {
                                    qy.cairo.fillPreserve()
                                }
                                rL += 3;
                                continue
                            }
                            qy.cairo.identityMatrix();
                            qy.cairo.newPath();
                            qy.cairo.moveTo(rp, q6);
                            qy.cairo.lineTo(ro, q5);
                            qy.cairo.lineTo(rn, q4);
                            qy.cairo.closePath();
                            r1 = rX.data[rv] * r2;
                            r0 = rX.data[re] * r2;
                            rZ = rX.data[q] * r2;
                            rN = rX.data[rt] * sw;
                            rM = rX.data[rc] * sw;
                            rK = rX.data[sV] * sw;
                            sz = r1 * (rK - rM) - r0 * rK + rZ * rM + (r0 - rZ) * rN;
                            if (sz == 0) {
                                rL += 3;
                                continue
                            }
                            sQ = -(rN * (rn - ro) - rM * rn + rK * ro + (rM - rK) * rp) / sz;
                            sP = (rM * q4 + rN * (q5 - q4) - rK * q5 + (rK - rM) * q6) / sz;
                            sO = (r1 * (rn - ro) - r0 * rn + rZ * ro + (r0 - rZ) * rp) / sz;
                            sN = -(r0 * q4 + r1 * (q5 - q4) - rZ * q5 + (rZ - r0) * q6) / sz;
                            ra = (r1 * (rK * ro - rM * rn) + rN * (r0 * rn - rZ * ro) + (rZ * rM - r0 * rK) * rp) / sz;
                            q9 = (r1 * (rK * q5 - rM * q4) + rN * (r0 * q4 - rZ * q5) + (rZ * rM - r0 * rK) * q6) / sz;
                            var rS = new iP(sQ, sP, sO, sN, ra, q9);
                            qy.cairo.set_matrix(rS);
                            qy.cairo.set_source(qy.fillPattern);
                            if (!qy.hitTesting) {
                                qy.cairo.fill()
                            }
                            rL += 3
                        }
                        break;
                    case 10:
                        var se = rj.readDrawTiles();
                        var sv = (pQ.get_flags(se) & 1) > 0;
                        var sE = (pQ.get_flags(se) & 2) > 0;
                        var rs = qy.bounds.x;
                        var rb = qy.bounds.y;
                        var ss = (pQ.get_flags(se) & 16) > 0;
                        var sF = (pQ.get_flags(se) & 4) > 0;
                        var rV = (pQ.get_flags(se) & 8) > 0;
                        var rz = (pQ.get_flags(se) & 32) > 0;
                        var rl = (pQ.get_flags(se) & 64) > 0;
                        var sn = (pQ.get_flags(se) & 65536) > 0;
                        var su = (pQ.get_flags(se) & 4194304) > 0;
                        if (ss) {
                            sv = false;
                            sE = false
                        }
                        var sT = 0;
                        var rH = 0;
                        var q3 = 0;
                        var st = 0;
                        var rm = 0;
                        var js = 3;
                        if (rz) {
                            if (rl) {
                                js = 8
                            } else {
                                js = 6
                            }
                        }
                        if (sv) {
                            sT = js;
                            js++
                        }
                        if (sE) {
                            rH = js;
                            js++
                        }
                        if (ss) {
                            rm = js;
                            js += 4
                        }
                        if (sF) {
                            q3 = js;
                            js += 3
                        }
                        if (rV) {
                            st = js;
                            js++
                        }
                        var rf = pQ.get_tileData(se).length;
                        if (pQ.get_count(se) >= 0 && rf > pQ.get_count(se)) {
                            rf = pQ.get_count(se)
                        }
                        var rT = rf / js | 0;
                        var sR = 0;
                        var q8 = null;
                        var r9 = null;
                        var rG = -1;
                        var ri;
                        pQ.get_sheet(se).__bitmap.__sync();
                        ri = pQ.get_sheet(se).__bitmap.getSurface();
                        qy.cairo.save();
                        if (sn) {
                            qy.cairo.set_operator(12)
                        }
                        if (su) {
                            qy.cairo.set_operator(16)
                        }
                        while (sR < rf) {
                            var sq = kr["int"](pQ.get_tileData(se)[sR + 2]);
                            var sD;
                            if (!rz) {
                                sD = sq
                            } else {
                                sD = -1
                            }
                            if (!rz && sD != rG) {
                                q8 = pQ.get_sheet(se).__tileRects[sD];
                                r9 = pQ.get_sheet(se).__centerPoints[sD];
                                rG = sD
                            } else {
                                if (rz) {
                                    q8 = pQ.get_sheet(se).__rectTile;
                                    q8.setTo(pQ.get_tileData(se)[sR + 2], pQ.get_tileData(se)[sR + 3], pQ.get_tileData(se)[sR + 4], pQ.get_tileData(se)[sR + 5]);
                                    r9 = pQ.get_sheet(se).__point;
                                    if (rl) {
                                        r9.setTo(pQ.get_tileData(se)[sR + 6], pQ.get_tileData(se)[sR + 7])
                                    } else {
                                        r9.setTo(0, 0)
                                    }
                                }
                            }
                            if (q8 != null && q8.width > 0 && q8.height > 0 && r9 != null) {
                                qy.cairo.identityMatrix();
                                if (ss) {
                                    var sB = new iP(pQ.get_tileData(se)[sR + rm], pQ.get_tileData(se)[sR + rm + 1], pQ.get_tileData(se)[sR + rm + 2], pQ.get_tileData(se)[sR + rm + 3], 0, 0);
                                    qy.cairo.set_matrix(sB)
                                }
                                qy.cairo.translate(pQ.get_tileData(se)[sR] - rs, pQ.get_tileData(se)[sR + 1] - rb);
                                if (sE) {
                                    qy.cairo.rotate(pQ.get_tileData(se)[sR + rH])
                                }
                                if (sv) {
                                    var sJ = pQ.get_tileData(se)[sR + sT];
                                    qy.cairo.scale(sJ, sJ)
                                }
                                qy.cairo.setSourceSurface(ri, 0, 0);
                                if (rV) {
                                    if (!qy.hitTesting) {
                                        qy.cairo.paintWithAlpha(pQ.get_tileData(se)[sR + st])
                                    }
                                } else {
                                    if (!qy.hitTesting) {
                                        qy.cairo.paint()
                                    }
                                }
                            }
                            sR += js
                        }
                        if (sn || su) {
                            qy.cairo.set_operator(2)
                        }
                        qy.cairo.restore();
                        break;
                    default:
                        rj.skip(rU)
                }
            }
        } catch (rP) {
            if (rP != "__break__") {
                throw rP
            }
        }
        rj.destroy();
        if (rW) {
            if (so && qy.hasStroke) {
                if (qy.hasFill && sc) {
                    qy.cairo.lineTo(sA - rF, sx - rD)
                } else {
                    if (sc && rr == sA && rq == sx) {
                        qy.cairo.closePath()
                    }
                }
                qy.cairo.set_source(qy.strokePattern);
                if (!qy.hitTesting) {
                    qy.cairo.strokePreserve()
                }
            }
            if (!so && qy.hasFill) {
                qy.cairo.translate(-qy.bounds.x, -qy.bounds.y);
                if (qy.fillPatternMatrix != null) {
                    var sy = qy.fillPatternMatrix.clone();
                    sy.invert();
                    if (qy.pendingMatrix != null) {
                        sy.concat(qy.pendingMatrix)
                    }
                    jp.set_matrix(qy.fillPattern, sy.__toMatrix3())
                }
                qy.cairo.set_source(qy.fillPattern);
                if (qy.pendingMatrix != null) {
                    qy.cairo.transform(qy.pendingMatrix.__toMatrix3());
                    if (!qy.hitTesting) {
                        qy.cairo.fillPreserve()
                    }
                    qy.cairo.transform(qy.inversePendingMatrix.__toMatrix3())
                } else {
                    if (!qy.hitTesting) {
                        qy.cairo.fillPreserve()
                    }
                }
                qy.cairo.translate(qy.bounds.x, qy.bounds.y);
                qy.cairo.closePath()
            }
        }
    };
    qy.quadraticCurveTo = function(i2, q, q1, q0) {
        var js = null;
        if (!qy.cairo.get_hasCurrentPoint()) {
            qy.cairo.moveTo(i2, q);
            js = new eD(i2, q)
        } else {
            js = qy.cairo.get_currentPoint()
        }
        var qZ = js.x + 0.6666666666666666 * (i2 - js.x);
        var i1 = js.y + 0.6666666666666666 * (q - js.y);
        var qY = q1 + 0.6666666666666666 * (i2 - q1);
        var i = q0 + 0.6666666666666666 * (q - q0);
        qy.cairo.curveTo(qZ, i1, qY, i, q1, q0)
    };
    qy.render = function(i, q) {};
    qy.renderMask = function(rf, qZ) {
        if (rf.__commands.get_length() != 0) {
            var q = qZ.cairo;
            var rl = 0;
            var rk = 0;
            var rh = 0;
            var rg = 0;
            var rm = new k8(rf.__commands);
            var i1 = 0;
            var q7 = rf.__commands.types;
            while (i1 < q7.length) {
                var i2 = q7[i1];
                ++i1;
                switch (i2[1]) {
                    case 3:
                        var rj = rm.readCubicCurveTo();
                        q.curveTo(ba.get_controlX1(rj) - rh, ba.get_controlY1(rj) - rg, ba.get_controlX2(rj) - rh, ba.get_controlY2(rj) - rg, ba.get_anchorX(rj) - rh, ba.get_anchorY(rj) - rg);
                        rl = ba.get_anchorX(rj);
                        rk = ba.get_anchorX(rj);
                        break;
                    case 4:
                        var rd = rm.readCurveTo();
                        qy.quadraticCurveTo(k7.get_controlX(rd) - rh, k7.get_controlY(rd) - rg, k7.get_anchorX(rd) - rh, k7.get_anchorY(rd) - rg);
                        rl = k7.get_anchorX(rd);
                        rk = k7.get_anchorY(rd);
                        break;
                    case 5:
                        var rb = rm.readDrawCircle();
                        q.arc(p4.get_x(rb) - rh, p4.get_y(rb) - rg, p4.get_radius(rb), 0, Math.PI * 2);
                        break;
                    case 6:
                        var ra = rm.readDrawEllipse();
                        var q1 = jF.get_x(ra);
                        var q0 = jF.get_y(ra);
                        var rc = jF.get_width(ra);
                        var q9 = jF.get_height(ra);
                        q1 -= rh;
                        q0 -= rg;
                        var q2 = 0.5522848;
                        var qY = rc / 2 * q2;
                        var js = q9 / 2 * q2;
                        var re = q1 + rc;
                        var i = q0 + q9;
                        var q4 = q1 + rc / 2;
                        var ri = q0 + q9 / 2;
                        q.moveTo(q1, ri);
                        q.curveTo(q1, ri - js, q4 - qY, q0, q4, q0);
                        q.curveTo(q4 + qY, q0, re, ri - js, re, ri);
                        q.curveTo(re, ri + js, q4 + qY, i, q4, i);
                        q.curveTo(q4 - qY, i, q1, ri + js, q1, ri);
                        break;
                    case 8:
                        var q8 = rm.readDrawRect();
                        q.rectangle(nI.get_x(q8) - rh, nI.get_y(q8) - rg, nI.get_width(q8), nI.get_height(q8));
                        break;
                    case 9:
                        var q6 = rm.readDrawRoundRect();
                        qy.drawRoundRect(qg.get_x(q6) - rh, qg.get_y(q6) - rg, qg.get_width(q6), qg.get_height(q6), qg.get_ellipseWidth(q6), qg.get_ellipseHeight(q6));
                        break;
                    case 16:
                        var q5 = rm.readLineTo();
                        q.lineTo(aF.get_x(q5) - rh, aF.get_y(q5) - rg);
                        rl = aF.get_x(q5);
                        rk = aF.get_y(q5);
                        break;
                    case 17:
                        var q3 = rm.readMoveTo();
                        q.moveTo(eE.get_x(q3) - rh, eE.get_y(q3) - rg);
                        rl = eE.get_x(q3);
                        rk = eE.get_y(q3);
                        break;
                    default:
                        rm.skip(i2)
                }
            }
            rm.destroy()
        }
    };
    var iH = function(i) {
        bE.call(this, i)
    };
    nt["openfl._internal.renderer.cairo.CairoMaskManager"] = iH;
    iH.__name__ = ["openfl", "_internal", "renderer", "cairo", "CairoMaskManager"];
    iH.__super__ = bE;
    iH.prototype = lP(bE.prototype, {
        pushMask: function(i) {
            var i1 = this.renderSession.cairo;
            i1.save();
            var q = i.__getWorldTransform();
            i1.set_matrix(q.__toMatrix3());
            i1.newPath();
            i.__renderCairoMask(this.renderSession);
            i1.clip()
        },
        pushRect: function(q, i) {
            var i1 = this.renderSession.cairo;
            i1.save();
            i1.set_matrix(new iP(i.a, i.c, i.b, i.d, i.tx, i.ty));
            i1.newPath();
            i1.rectangle(q.x, q.y, q.width, q.height);
            i1.clip()
        },
        popMask: function() {
            this.renderSession.cairo.restore()
        },
        popRect: function() {
            this.renderSession.cairo.restore()
        },
        __class__: iH
    });
    var cS = function(q, i, i1) {
        k0.call(this, q, i);
        this.cairo = i1;
        this.renderSession = new ii();
        this.renderSession.cairo = i1;
        this.renderSession.roundPixels = true;
        this.renderSession.renderer = this;
        this.renderSession.maskManager = new iH(this.renderSession)
    };
    nt["openfl._internal.renderer.cairo.CairoRenderer"] = cS;
    cS.__name__ = ["openfl", "_internal", "renderer", "cairo", "CairoRenderer"];
    cS.__super__ = k0;
    cS.prototype = lP(k0.prototype, {
        cairo: null,
        render: function(i) {
            this.cairo.identityMatrix();
            if (i.__clearBeforeRender) {
                this.cairo.setSourceRGB(i.__colorSplit[0], i.__colorSplit[1], i.__colorSplit[2]);
                this.cairo.paint()
            }
            i.__renderCairo(this.renderSession)
        },
        renderDisplayObject: function(i) {
            this.cairo.identityMatrix();
            i.__renderCairo(this.renderSession)
        },
        __class__: cS
    });
    var fc = function() {};
    nt["openfl._internal.renderer.cairo.CairoShape"] = fc;
    fc.__name__ = ["openfl", "_internal", "renderer", "cairo", "CairoShape"];
    fc.render = function(i, q) {};
    var lO = function() {};
    nt["openfl._internal.renderer.cairo.CairoTextField"] = lO;
    lO.__name__ = ["openfl", "_internal", "renderer", "cairo", "CairoTextField"];
    lO.render = function(i, q) {};
    var cp = function() {};
    nt["openfl._internal.renderer.canvas.CanvasBitmap"] = cp;
    cp.__name__ = ["openfl", "_internal", "renderer", "canvas", "CanvasBitmap"];
    cp.render = function(js, i2) {
        if (!js.__renderable || js.__worldAlpha <= 0) {
            return
        }
        var q = i2.context;
        if (js.bitmapData != null && js.bitmapData.__isValid) {
            if (js.__mask != null) {
                i2.maskManager.pushMask(js.__mask)
            }
            js.bitmapData.__sync();
            q.globalAlpha = js.__worldAlpha;
            var i = js.__renderTransform;
            var i1 = js.get_scrollRect();
            if (i2.roundPixels) {
                q.setTransform(i.a, i.b, i.c, i.d, i.tx | 0, i.ty | 0)
            } else {
                q.setTransform(i.a, i.b, i.c, i.d, i.tx, i.ty)
            }
            if (!js.smoothing) {
                q.mozImageSmoothingEnabled = false;
                q.msImageSmoothingEnabled = false;
                q.imageSmoothingEnabled = false
            }
            if (i1 == null) {
                q.drawImage(js.bitmapData.image.get_src(), 0, 0)
            } else {
                q.drawImage(js.bitmapData.image.get_src(), i1.x, i1.y, i1.width, i1.height, i1.x, i1.y, i1.width, i1.height)
            }
            if (!js.smoothing) {
                q.mozImageSmoothingEnabled = true;
                q.msImageSmoothingEnabled = true;
                q.imageSmoothingEnabled = true
            }
            if (js.__mask != null) {
                i2.maskManager.popMask()
            }
        }
    };
    var aB = function() {};
    nt["openfl._internal.renderer.canvas.CanvasGraphics"] = aB;
    aB.__name__ = ["openfl", "_internal", "renderer", "canvas", "CanvasGraphics"];
    aB.bitmapFill = null;
    aB.bitmapStroke = null;
    aB.bitmapRepeat = null;
    aB.bounds = null;
    aB.graphics = null;
    aB.hasFill = null;
    aB.hasStroke = null;
    aB.hitTesting = null;
    aB.inversePendingMatrix = null;
    aB.pendingMatrix = null;
    aB.context = null;
    aB.closePath = function() {
        if (aB.context.strokeStyle == null) {
            return
        }
        aB.context.closePath();
        aB.context.stroke();
        aB.context.beginPath()
    };
    aB.createBitmapFill = function(q, i) {
        q.__sync();
        return aB.context.createPattern(q.image.get_src(), i ? "repeat" : "no-repeat")
    };
    aB.createGradientPattern = function(qY, q2, q0, q5, q9, q3, q4, rf) {
        var rb = null;
        switch (qY) {
            case 1:
                if (q9 == null) {
                    q9 = new qd()
                }
                var q8 = q9.transformPoint(new pp(1638.4, 0));
                rb = aB.context.createRadialGradient(q9.tx, q9.ty, 0, q9.tx, q9.ty, (q8.x - q9.tx) / 2);
                break;
            case 0:
                var ra;
                if (q9 != null) {
                    ra = q9
                } else {
                    ra = new qd()
                }
                var js = ra.transformPoint(new pp(-819.2, 0));
                var i1 = ra.transformPoint(new pp(819.2, 0));
                rb = aB.context.createLinearGradient(js.x, js.y, i1.x, i1.y);
                break
        }
        var q7 = 0;
        var i2 = q2.length;
        while (q7 < i2) {
            var rc = q7++;
            var q = q2[rc];
            var qZ = q0[rc];
            var q6 = (q & 16711680) >>> 16;
            var rd = (q & 65280) >>> 8;
            var re = q & 255;
            var q1 = q5[rc] / 255;
            if (q1 < 0) {
                q1 = 0
            }
            if (q1 > 1) {
                q1 = 1
            }
            rb.addColorStop(q1, "rgba(" + q6 + ", " + rd + ", " + re + ", " + qZ + ")")
        }
        return rb
    };
    aB.createTempPatternCanvas = function(qY, js, i2, i) {
        var q = window.document.createElement("canvas");
        var i1 = q.getContext("2d");
        q.width = i2;
        q.height = i;
        i1.fillStyle = i1.createPattern(qY.image.get_src(), js ? "repeat" : "no-repeat");
        i1.beginPath();
        i1.moveTo(0, 0);
        i1.lineTo(0, i);
        i1.lineTo(i2, i);
        i1.lineTo(i2, 0);
        i1.lineTo(0, 0);
        i1.closePath();
        if (!aB.hitTesting) {
            i1.fill()
        }
        return q
    };
    aB.drawRoundRect = function(q1, q0, i, q4, q, q2) {
        if (q2 == null) {
            q2 = q
        }
        q *= 0.5;
        q2 *= 0.5;
        if (q > i / 2) {
            q = i / 2
        }
        if (q2 > q4 / 2) {
            q2 = q4 / 2
        }
        var q3 = q1 + i;
        var js = q0 + q4;
        var qZ = -q + q * aB.SIN45;
        var qY = -q + q * aB.TAN22;
        var i2 = -q2 + q2 * aB.SIN45;
        var i1 = -q2 + q2 * aB.TAN22;
        aB.context.moveTo(q3, js - q2);
        aB.context.quadraticCurveTo(q3, js + i1, q3 + qZ, js + i2);
        aB.context.quadraticCurveTo(q3 + qY, js, q3 - q, js);
        aB.context.lineTo(q1 + q, js);
        aB.context.quadraticCurveTo(q1 - qY, js, q1 - qZ, js + i2);
        aB.context.quadraticCurveTo(q1, js + i1, q1, js - q2);
        aB.context.lineTo(q1, q0 + q2);
        aB.context.quadraticCurveTo(q1, q0 - i1, q1 - qZ, q0 - i2);
        aB.context.quadraticCurveTo(q1 - qY, q0, q1 + q, q0);
        aB.context.lineTo(q3 - q, q0);
        aB.context.quadraticCurveTo(q3 + qY, q0, q3 + qZ, q0 - i2);
        aB.context.quadraticCurveTo(q3, q0 - i1, q3, q0 + q2);
        aB.context.lineTo(q3, js - q2)
    };
    aB.endFill = function() {
        aB.context.beginPath();
        aB.playCommands(aB.fillCommands, false);
        aB.fillCommands.clear()
    };
    aB.endStroke = function() {
        aB.context.beginPath();
        aB.playCommands(aB.strokeCommands, true);
        aB.context.closePath();
        aB.strokeCommands.clear()
    };
    aB.hitTest = function(rb, q0, qZ) {
        if (rb.__commands.get_length() == 0 || aB.bounds == null || aB.bounds.width <= 0 || aB.bounds.height <= 0) {
            return false
        } else {
            aB.hitTesting = true;
            q0 -= aB.bounds.x;
            qZ -= aB.bounds.y;
            if (rb.__canvas == null) {
                rb.__canvas = window.document.createElement("canvas");
                rb.__context = rb.__canvas.getContext("2d")
            }
            aB.context = rb.__context;
            aB.fillCommands.clear();
            aB.strokeCommands.clear();
            aB.hasFill = false;
            aB.hasStroke = false;
            aB.bitmapFill = null;
            aB.bitmapRepeat = false;
            aB.context.beginPath();
            var rd = new k8(rb.__commands);
            var i = 0;
            var q5 = rb.__commands.types;
            while (i < q5.length) {
                var q = q5[i];
                ++i;
                switch (q[1]) {
                    case 3:
                        var rc = rd.readCubicCurveTo();
                        aB.fillCommands.cubicCurveTo(ba.get_controlX1(rc), ba.get_controlY1(rc), ba.get_controlX2(rc), ba.get_controlY2(rc), ba.get_anchorX(rc), ba.get_anchorY(rc));
                        aB.strokeCommands.cubicCurveTo(ba.get_controlX1(rc), ba.get_controlY1(rc), ba.get_controlX2(rc), ba.get_controlY2(rc), ba.get_anchorX(rc), ba.get_anchorY(rc));
                        break;
                    case 4:
                        var ra = rd.readCurveTo();
                        aB.fillCommands.curveTo(k7.get_controlX(ra), k7.get_controlY(ra), k7.get_anchorX(ra), k7.get_anchorY(ra));
                        aB.strokeCommands.curveTo(k7.get_controlX(ra), k7.get_controlY(ra), k7.get_anchorX(ra), k7.get_anchorY(ra));
                        break;
                    case 16:
                        var q9 = rd.readLineTo();
                        aB.fillCommands.lineTo(aF.get_x(q9), aF.get_y(q9));
                        aB.strokeCommands.lineTo(aF.get_x(q9), aF.get_y(q9));
                        break;
                    case 17:
                        var q8 = rd.readMoveTo();
                        aB.fillCommands.moveTo(eE.get_x(q8), eE.get_y(q8));
                        aB.strokeCommands.moveTo(eE.get_x(q8), eE.get_y(q8));
                        break;
                    case 14:
                        var q7 = rd.readLineGradientStyle();
                        aB.strokeCommands.lineGradientStyle(iX.get_type(q7), iX.get_colors(q7), iX.get_alphas(q7), iX.get_ratios(q7), iX.get_matrix(q7), iX.get_spreadMethod(q7), iX.get_interpolationMethod(q7), iX.get_focalPointRatio(q7));
                        break;
                    case 13:
                        var q6 = rd.readLineBitmapStyle();
                        aB.strokeCommands.lineBitmapStyle(mB.get_bitmap(q6), mB.get_matrix(q6), mB.get_repeat(q6), mB.get_smooth(q6));
                        break;
                    case 15:
                        var q4 = rd.readLineStyle();
                        aB.strokeCommands.lineStyle(am.get_thickness(q4), am.get_color(q4), 1, am.get_pixelHinting(q4), am.get_scaleMode(q4), am.get_caps(q4), am.get_joints(q4), am.get_miterLimit(q4));
                        break;
                    case 12:
                        rd.readEndFill();
                        aB.endFill();
                        aB.endStroke();
                        if (aB.hasFill && aB.context.isPointInPath(q0, qZ)) {
                            rd.destroy();
                            return true
                        }
                        if (aB.hasStroke && aB.context.isPointInStroke(q0, qZ)) {
                            rd.destroy();
                            return true
                        }
                        aB.hasFill = false;
                        aB.bitmapFill = null;
                        break;
                    case 0:
                    case 1:
                    case 2:
                        aB.endFill();
                        aB.endStroke();
                        if (aB.hasFill && aB.context.isPointInPath(q0, qZ)) {
                            rd.destroy();
                            return true
                        }
                        if (aB.hasStroke && aB.context.isPointInStroke(q0, qZ)) {
                            rd.destroy();
                            return true
                        }
                        if (q == V.BEGIN_BITMAP_FILL) {
                            var q3 = rd.readBeginBitmapFill();
                            aB.fillCommands.beginBitmapFill(i8.get_bitmap(q3), i8.get_matrix(q3), i8.get_repeat(q3), i8.get_smooth(q3));
                            aB.strokeCommands.beginBitmapFill(i8.get_bitmap(q3), i8.get_matrix(q3), i8.get_repeat(q3), i8.get_smooth(q3))
                        } else {
                            if (q == V.BEGIN_GRADIENT_FILL) {
                                var q2 = rd.readBeginGradientFill();
                                aB.fillCommands.beginGradientFill(aP.get_type(q2), aP.get_colors(q2), aP.get_alphas(q2), aP.get_ratios(q2), aP.get_matrix(q2), aP.get_spreadMethod(q2), aP.get_interpolationMethod(q2), aP.get_focalPointRatio(q2));
                                aB.strokeCommands.beginGradientFill(aP.get_type(q2), aP.get_colors(q2), aP.get_alphas(q2), aP.get_ratios(q2), aP.get_matrix(q2), aP.get_spreadMethod(q2), aP.get_interpolationMethod(q2), aP.get_focalPointRatio(q2))
                            } else {
                                var q1 = rd.readBeginFill();
                                aB.fillCommands.beginFill(pc.get_color(q1), 1);
                                aB.strokeCommands.beginFill(pc.get_color(q1), 1)
                            }
                        }
                        break;
                    case 5:
                        var qY = rd.readDrawCircle();
                        aB.fillCommands.drawCircle(p4.get_x(qY), p4.get_y(qY), p4.get_radius(qY));
                        aB.strokeCommands.drawCircle(p4.get_x(qY), p4.get_y(qY), p4.get_radius(qY));
                        break;
                    case 6:
                        var js = rd.readDrawEllipse();
                        aB.fillCommands.drawEllipse(jF.get_x(js), jF.get_y(js), jF.get_width(js), jF.get_height(js));
                        aB.strokeCommands.drawEllipse(jF.get_x(js), jF.get_y(js), jF.get_width(js), jF.get_height(js));
                        break;
                    case 8:
                        var i2 = rd.readDrawRect();
                        aB.fillCommands.drawRect(nI.get_x(i2), nI.get_y(i2), nI.get_width(i2), nI.get_height(i2));
                        aB.strokeCommands.drawRect(nI.get_x(i2), nI.get_y(i2), nI.get_width(i2), nI.get_height(i2));
                        break;
                    case 9:
                        var i1 = rd.readDrawRoundRect();
                        aB.fillCommands.drawRoundRect(qg.get_x(i1), qg.get_y(i1), qg.get_width(i1), qg.get_height(i1), qg.get_ellipseWidth(i1), qg.get_ellipseHeight(i1));
                        aB.strokeCommands.drawRoundRect(qg.get_x(i1), qg.get_y(i1), qg.get_width(i1), qg.get_height(i1), qg.get_ellipseWidth(i1), qg.get_ellipseHeight(i1));
                        break;
                    default:
                        rd.skip(q)
                }
            }
            if (aB.fillCommands.get_length() > 0) {
                aB.endFill()
            }
            if (aB.strokeCommands.get_length() > 0) {
                aB.endStroke()
            }
            rd.destroy();
            if (aB.hasFill && aB.context.isPointInPath(q0, qZ)) {
                return true
            }
            if (aB.hasStroke && aB.context.isPointInStroke(q0, qZ)) {
                return true
            }
        }
        return false
    };
    aB.isCCW = function(i2, qY, q, js, i, i1) {
        return (q - i2) * (i1 - qY) - (js - qY) * (i - i2) < 0
    };
    aB.normalizeUVT = function(q, i) {
        if (i == null) {
            i = false
        }
        var q6 = -Infinity;
        var qZ = -Infinity;
        var q3 = q.length;
        var q5 = 1;
        var q1 = q3 + 1;
        while (q5 < q1) {
            var q7 = q5++;
            if (i && q7 % 3 == 0) {
                continue
            }
            qZ = q.data[q7 - 1];
            if (q6 < qZ) {
                q6 = qZ
            }
        }
        var q8;
        var q0;
        q0 = new p0();
        var qY;
        qY = new Array(0);
        q0.data = qY;
        q0.length = 0;
        q0.fixed = false;
        q8 = q0;
        var js = 1;
        var q4 = q3 + 1;
        while (js < q4) {
            var q2 = js++;
            if (i && q2 % 3 == 0) {
                continue
            }
            if (!q8.fixed) {
                q8.length++;
                if (q8.data.length < q8.length) {
                    var i2;
                    var i1;
                    i1 = new Array(q8.data.length + 10);
                    i2 = i1;
                    dQ.blit(q8.data, 0, i2, 0, q8.data.length);
                    q8.data = i2
                }
                q8.data[q8.length - 1] = q.data[q2 - 1] / q6
            }
            q8.length
        }
        return {
            max: q6,
            uvt: q8
        }
    };
    aB.playCommands = function(rq, rp) {
        if (rp == null) {
            rp = false
        }
        aB.bounds = aB.graphics.__bounds;
        var rx = aB.bounds.x;
        var rv = aB.bounds.y;
        var ro = 0;
        var rn = 0;
        var q8 = false;
        var rh = 0;
        var rf = 0;
        var rF = new k8(rq);
        var rE = 0;
        var rC = rq.types;
        while (rE < rC.length) {
            var rJ = rC[rE];
            ++rE;
            switch (rJ[1]) {
                case 3:
                    var rG = rF.readCubicCurveTo();
                    aB.context.bezierCurveTo(ba.get_controlX1(rG) - rx, ba.get_controlY1(rG) - rv, ba.get_controlX2(rG) - rx, ba.get_controlY2(rG) - rv, ba.get_anchorX(rG) - rx, ba.get_anchorY(rG) - rv);
                    break;
                case 4:
                    var q7 = rF.readCurveTo();
                    aB.context.quadraticCurveTo(k7.get_controlX(q7) - rx, k7.get_controlY(q7) - rv, k7.get_anchorX(q7) - rx, k7.get_anchorY(q7) - rv);
                    break;
                case 5:
                    var q6 = rF.readDrawCircle();
                    aB.context.moveTo(p4.get_x(q6) - rx + p4.get_radius(q6), p4.get_y(q6) - rv);
                    aB.context.arc(p4.get_x(q6) - rx, p4.get_y(q6) - rv, p4.get_radius(q6), 0, Math.PI * 2, true);
                    break;
                case 6:
                    var q5 = rF.readDrawEllipse();
                    var rw = jF.get_x(q5);
                    var ru = jF.get_y(q5);
                    var q = jF.get_width(q5);
                    var qY = jF.get_height(q5);
                    rw -= rx;
                    ru -= rv;
                    var rI = 0.5522848;
                    var rm = q / 2 * rI;
                    var rl = qY / 2 * rI;
                    var ry = rw + q;
                    var ri = ru + qY;
                    var rs = rw + q / 2;
                    var re = ru + qY / 2;
                    aB.context.moveTo(rw, re);
                    aB.context.bezierCurveTo(rw, re - rl, rs - rm, ru, rs, ru);
                    aB.context.bezierCurveTo(rs + rm, ru, ry, re - rl, ry, re);
                    aB.context.bezierCurveTo(ry, re + rl, rs + rm, ri, rs, ri);
                    aB.context.bezierCurveTo(rs - rm, ri, rw, re + rl, rw, re);
                    break;
                case 9:
                    var q4 = rF.readDrawRoundRect();
                    aB.drawRoundRect(qg.get_x(q4) - rx, qg.get_y(q4) - rv, qg.get_width(q4), qg.get_height(q4), qg.get_ellipseWidth(q4), qg.get_ellipseHeight(q4));
                    break;
                case 16:
                    var q3 = rF.readLineTo();
                    aB.context.lineTo(aF.get_x(q3) - rx, aF.get_y(q3) - rv);
                    ro = aF.get_x(q3);
                    rn = aF.get_y(q3);
                    break;
                case 17:
                    var q2 = rF.readMoveTo();
                    aB.context.moveTo(eE.get_x(q2) - rx, eE.get_y(q2) - rv);
                    ro = eE.get_x(q2);
                    rn = eE.get_y(q2);
                    q8 = true;
                    rh = eE.get_x(q2);
                    rf = eE.get_y(q2);
                    break;
                case 15:
                    var q1 = rF.readLineStyle();
                    if (rp && aB.hasStroke) {
                        aB.context.closePath();
                        if (!aB.hitTesting) {
                            aB.context.stroke()
                        }
                        aB.context.beginPath()
                    }
                    aB.context.moveTo(ro - rx, rn - rv);
                    if (am.get_thickness(q1) == null) {
                        aB.hasStroke = false
                    } else {
                        if (am.get_thickness(q1) > 0) {
                            aB.context.lineWidth = am.get_thickness(q1)
                        } else {
                            aB.context.lineWidth = 1
                        }
                        if (am.get_joints(q1) == null) {
                            aB.context.lineJoin = "round"
                        } else {
                            aB.context.lineJoin = o8.toString(am.get_joints(q1)).toLowerCase()
                        }
                        if (am.get_caps(q1) == null) {
                            aB.context.lineCap = "round"
                        } else {
                            var rA = am.get_caps(q1);
                            switch (rA) {
                                case 0:
                                    aB.context.lineCap = "butt";
                                    break;
                                default:
                                    aB.context.lineCap = oH.toString(am.get_caps(q1)).toLowerCase()
                            }
                        }
                        aB.context.miterLimit = am.get_miterLimit(q1);
                        if (am.get_alpha(q1) == 1) {
                            aB.context.strokeStyle = "#" + cP.hex(am.get_color(q1) & 16777215, 6)
                        } else {
                            var rz = (am.get_color(q1) & 16711680) >>> 16;
                            var rD = (am.get_color(q1) & 65280) >>> 8;
                            var rH = am.get_color(q1) & 255;
                            aB.context.strokeStyle = "rgba(" + rz + ", " + rD + ", " + rH + ", " + am.get_alpha(q1) + ")"
                        }
                        aB.hasStroke = true
                    }
                    break;
                case 14:
                    var q0 = rF.readLineGradientStyle();
                    if (rp && aB.hasStroke) {
                        aB.closePath()
                    }
                    aB.context.moveTo(ro - rx, rn - rv);
                    aB.context.strokeStyle = aB.createGradientPattern(iX.get_type(q0), iX.get_colors(q0), iX.get_alphas(q0), iX.get_ratios(q0), iX.get_matrix(q0), iX.get_spreadMethod(q0), iX.get_interpolationMethod(q0), iX.get_focalPointRatio(q0));
                    aB.hasStroke = true;
                    break;
                case 13:
                    var qZ = rF.readLineBitmapStyle();
                    if (rp && aB.hasStroke) {
                        aB.closePath()
                    }
                    aB.context.moveTo(ro - rx, rn - rv);
                    aB.context.strokeStyle = aB.createBitmapFill(mB.get_bitmap(qZ), mB.get_repeat(qZ));
                    aB.hasStroke = true;
                    break;
                case 0:
                    var js = rF.readBeginBitmapFill();
                    aB.context.fillStyle = aB.createBitmapFill(i8.get_bitmap(js), true);
                    aB.hasFill = true;
                    if (i8.get_matrix(js) != null) {
                        aB.pendingMatrix = i8.get_matrix(js);
                        aB.inversePendingMatrix = i8.get_matrix(js).clone();
                        aB.inversePendingMatrix.invert()
                    } else {
                        aB.pendingMatrix = null;
                        aB.inversePendingMatrix = null
                    }
                    break;
                case 1:
                    var i2 = rF.readBeginFill();
                    if (pc.get_alpha(i2) < 0.005) {
                        aB.hasFill = false
                    } else {
                        if (pc.get_alpha(i2) == 1) {
                            aB.context.fillStyle = "#" + cP.hex(pc.get_color(i2), 6)
                        } else {
                            var rc = (pc.get_color(i2) & 16711680) >>> 16;
                            var rB = (pc.get_color(i2) & 65280) >>> 8;
                            var rk = pc.get_color(i2) & 255;
                            aB.context.fillStyle = "rgba(" + rc + ", " + rB + ", " + rk + ", " + pc.get_alpha(i2) + ")"
                        }
                        aB.bitmapFill = null;
                        aB.hasFill = true
                    }
                    break;
                case 2:
                    var i1 = rF.readBeginGradientFill();
                    aB.context.fillStyle = aB.createGradientPattern(aP.get_type(i1), aP.get_colors(i1), aP.get_alphas(i1), aP.get_ratios(i1), aP.get_matrix(i1), aP.get_spreadMethod(i1), aP.get_interpolationMethod(i1), aP.get_focalPointRatio(i1));
                    aB.bitmapFill = null;
                    aB.hasFill = true;
                    break;
                case 8:
                    var i = rF.readDrawRect();
                    var rt = false;
                    if (aB.bitmapFill != null) {
                        var q9 = 0;
                        var rb = 0;
                        var rg = 0;
                        var rd = 0;
                        var ra = true;
                        if (aB.pendingMatrix != null) {
                            if (aB.pendingMatrix.b != 0 || aB.pendingMatrix.c != 0) {
                                ra = false
                            } else {
                                var rr = aB.inversePendingMatrix.transformPoint(new pp(nI.get_x(i), nI.get_y(i)));
                                var rj = aB.inversePendingMatrix.transformPoint(new pp(nI.get_x(i) + nI.get_width(i), nI.get_y(i) + nI.get_height(i)));
                                q9 = rr.y;
                                rd = rr.x;
                                rg = rj.y;
                                rb = rj.x
                            }
                        } else {
                            q9 = nI.get_y(i);
                            rd = nI.get_x(i);
                            rg = nI.get_y(i) + nI.get_height(i);
                            rb = nI.get_x(i) + nI.get_width(i)
                        }
                        if (ra && q9 >= 0 && rd >= 0 && rb <= aB.bitmapFill.width && rg <= aB.bitmapFill.height) {
                            rt = true;
                            if (!aB.hitTesting) {
                                aB.context.drawImage(aB.bitmapFill.image.get_src(), rd, q9, rb - rd, rg - q9, nI.get_x(i) - rx, nI.get_y(i) - rv, nI.get_width(i), nI.get_height(i))
                            }
                        }
                    }
                    if (!rt) {
                        aB.context.rect(nI.get_x(i) - rx, nI.get_y(i) - rv, nI.get_width(i), nI.get_height(i))
                    }
                    break;
                default:
                    rF.skip(rJ)
            }
        }
        rF.destroy();
        if (rp && aB.hasStroke) {
            if (aB.hasFill && q8) {
                aB.context.lineTo(rh - rx, rf - rv)
            } else {
                if (q8 && ro == rh && rn == rf) {
                    aB.context.closePath()
                }
            }
            if (!aB.hitTesting) {
                aB.context.stroke()
            }
        }
        if (!rp) {
            if (aB.hasFill || aB.bitmapFill != null) {
                aB.context.translate(-aB.bounds.x, -aB.bounds.y);
                if (aB.pendingMatrix != null) {
                    aB.context.transform(aB.pendingMatrix.a, aB.pendingMatrix.b, aB.pendingMatrix.c, aB.pendingMatrix.d, aB.pendingMatrix.tx, aB.pendingMatrix.ty);
                    if (!aB.hitTesting) {
                        aB.context.fill()
                    }
                    aB.context.transform(aB.inversePendingMatrix.a, aB.inversePendingMatrix.b, aB.inversePendingMatrix.c, aB.inversePendingMatrix.d, aB.inversePendingMatrix.tx, aB.inversePendingMatrix.ty)
                } else {
                    if (!aB.hitTesting) {
                        aB.context.fill()
                    }
                }
                aB.context.translate(aB.bounds.x, aB.bounds.y);
                aB.context.closePath()
            }
        }
    };
    aB.render = function(rB, rJ) {
        var sr = false;
        if (rB.__dirty || sr) {
            aB.hitTesting = false;
            aB.graphics = rB;
            aB.bounds = rB.__bounds;
            if (!rB.__visible || rB.__commands.get_length() == 0 || aB.bounds == null || aB.bounds.width <= 0 || aB.bounds.height <= 0) {
                rB.__canvas = null;
                rB.__context = null;
                rB.__bitmap = null
            } else {
                if (sr) {
                    aB.context = rJ.context;
                    aB.bounds.setTo(0, 0, aB.context.canvas.width, aB.context.canvas.width)
                } else {
                    if (rB.__canvas == null) {
                        rB.__canvas = window.document.createElement("canvas");
                        rB.__context = rB.__canvas.getContext("2d")
                    }
                    aB.context = rB.__context;
                    rB.__canvas.width = Math.ceil(aB.bounds.width);
                    rB.__canvas.height = Math.ceil(aB.bounds.height)
                }
                aB.fillCommands.clear();
                aB.strokeCommands.clear();
                aB.hasFill = false;
                aB.hasStroke = false;
                aB.bitmapFill = null;
                aB.bitmapRepeat = false;
                var rg = new k8(rB.__commands);
                var qZ = 0;
                var q0 = rB.__commands.types;
                try {
                    while (qZ < q0.length) {
                        var rH = q0[qZ];
                        ++qZ;
                        switch (rH[1]) {
                            case 3:
                                var rF = rg.readCubicCurveTo();
                                aB.fillCommands.cubicCurveTo(ba.get_controlX1(rF), ba.get_controlY1(rF), ba.get_controlX2(rF), ba.get_controlY2(rF), ba.get_anchorX(rF), ba.get_anchorY(rF));
                                aB.strokeCommands.cubicCurveTo(ba.get_controlX1(rF), ba.get_controlY1(rF), ba.get_controlX2(rF), ba.get_controlY2(rF), ba.get_anchorX(rF), ba.get_anchorY(rF));
                                break;
                            case 4:
                                var r5 = rg.readCurveTo();
                                aB.fillCommands.curveTo(k7.get_controlX(r5), k7.get_controlY(r5), k7.get_anchorX(r5), k7.get_anchorY(r5));
                                aB.strokeCommands.curveTo(k7.get_controlX(r5), k7.get_controlY(r5), k7.get_anchorX(r5), k7.get_anchorY(r5));
                                break;
                            case 16:
                                var r3 = rg.readLineTo();
                                aB.fillCommands.lineTo(aF.get_x(r3), aF.get_y(r3));
                                aB.strokeCommands.lineTo(aF.get_x(r3), aF.get_y(r3));
                                break;
                            case 17:
                                var r2 = rg.readMoveTo();
                                aB.fillCommands.moveTo(eE.get_x(r2), eE.get_y(r2));
                                aB.strokeCommands.moveTo(eE.get_x(r2), eE.get_y(r2));
                                break;
                            case 12:
                                rg.readEndFill();
                                aB.endFill();
                                aB.endStroke();
                                aB.hasFill = false;
                                aB.bitmapFill = null;
                                break;
                            case 15:
                                var r0 = rg.readLineStyle();
                                aB.strokeCommands.lineStyle(am.get_thickness(r0), am.get_color(r0), am.get_alpha(r0), am.get_pixelHinting(r0), am.get_scaleMode(r0), am.get_caps(r0), am.get_joints(r0), am.get_miterLimit(r0));
                                break;
                            case 14:
                                var rY = rg.readLineGradientStyle();
                                aB.strokeCommands.lineGradientStyle(iX.get_type(rY), iX.get_colors(rY), iX.get_alphas(rY), iX.get_ratios(rY), iX.get_matrix(rY), iX.get_spreadMethod(rY), iX.get_interpolationMethod(rY), iX.get_focalPointRatio(rY));
                                break;
                            case 13:
                                var rX = rg.readLineBitmapStyle();
                                aB.strokeCommands.lineBitmapStyle(mB.get_bitmap(rX), mB.get_matrix(rX), mB.get_repeat(rX), mB.get_smooth(rX));
                                break;
                            case 0:
                            case 1:
                            case 2:
                                aB.endFill();
                                aB.endStroke();
                                if (rH == V.BEGIN_BITMAP_FILL) {
                                    var rW = rg.readBeginBitmapFill();
                                    aB.fillCommands.beginBitmapFill(i8.get_bitmap(rW), i8.get_matrix(rW), i8.get_repeat(rW), i8.get_smooth(rW));
                                    aB.strokeCommands.beginBitmapFill(i8.get_bitmap(rW), i8.get_matrix(rW), i8.get_repeat(rW), i8.get_smooth(rW))
                                } else {
                                    if (rH == V.BEGIN_GRADIENT_FILL) {
                                        var rU = rg.readBeginGradientFill();
                                        aB.fillCommands.beginGradientFill(aP.get_type(rU), aP.get_colors(rU), aP.get_alphas(rU), aP.get_ratios(rU), aP.get_matrix(rU), aP.get_spreadMethod(rU), aP.get_interpolationMethod(rU), aP.get_focalPointRatio(rU));
                                        aB.strokeCommands.beginGradientFill(aP.get_type(rU), aP.get_colors(rU), aP.get_alphas(rU), aP.get_ratios(rU), aP.get_matrix(rU), aP.get_spreadMethod(rU), aP.get_interpolationMethod(rU), aP.get_focalPointRatio(rU))
                                    } else {
                                        var rS = rg.readBeginFill();
                                        aB.fillCommands.beginFill(pc.get_color(rS), pc.get_alpha(rS));
                                        aB.strokeCommands.beginFill(pc.get_color(rS), pc.get_alpha(rS))
                                    }
                                }
                                break;
                            case 5:
                                var r9 = rg.readDrawCircle();
                                aB.fillCommands.drawCircle(p4.get_x(r9), p4.get_y(r9), p4.get_radius(r9));
                                aB.strokeCommands.drawCircle(p4.get_x(r9), p4.get_y(r9), p4.get_radius(r9));
                                break;
                            case 6:
                                var r7 = rg.readDrawEllipse();
                                aB.fillCommands.drawEllipse(jF.get_x(r7), jF.get_y(r7), jF.get_width(r7), jF.get_height(r7));
                                aB.strokeCommands.drawEllipse(jF.get_x(r7), jF.get_y(r7), jF.get_width(r7), jF.get_height(r7));
                                break;
                            case 8:
                                var r6 = rg.readDrawRect();
                                aB.fillCommands.drawRect(nI.get_x(r6), nI.get_y(r6), nI.get_width(r6), nI.get_height(r6));
                                aB.strokeCommands.drawRect(nI.get_x(r6), nI.get_y(r6), nI.get_width(r6), nI.get_height(r6));
                                break;
                            case 9:
                                var r4 = rg.readDrawRoundRect();
                                aB.fillCommands.drawRoundRect(qg.get_x(r4), qg.get_y(r4), qg.get_width(r4), qg.get_height(r4), qg.get_ellipseWidth(r4), qg.get_ellipseHeight(r4));
                                aB.strokeCommands.drawRoundRect(qg.get_x(r4), qg.get_y(r4), qg.get_width(r4), qg.get_height(r4), qg.get_ellipseWidth(r4), qg.get_ellipseHeight(r4));
                                break;
                            case 11:
                                aB.endFill();
                                aB.endStroke();
                                var r1 = rg.readDrawTriangles();
                                var rs = d7.get_vertices(r1);
                                var ro = d7.get_indices(r1);
                                var rK = d7.get_uvtData(r1);
                                var q4 = null;
                                var rh = aB.bitmapFill == null;
                                if (rh && rK != null) {
                                    throw "__break__"
                                }
                                if (!rh) {
                                    if (rK == null) {
                                        var rT;
                                        rT = new p0();
                                        var rR;
                                        rR = new Array(0);
                                        rT.data = rR;
                                        rT.length = 0;
                                        rT.fixed = false;
                                        rK = rT;
                                        var js = 0;
                                        var qY = rs.length / 2 | 0;
                                        while (js < qY) {
                                            var sa = js++;
                                            if (!rK.fixed) {
                                                rK.length++;
                                                if (rK.data.length < rK.length) {
                                                    var q2;
                                                    var rQ;
                                                    rQ = new Array(rK.data.length + 10);
                                                    q2 = rQ;
                                                    dQ.blit(rK.data, 0, q2, 0, rK.data.length);
                                                    rK.data = q2
                                                }
                                                rK.data[rK.length - 1] = rs.data[sa * 2] / aB.bitmapFill.width
                                            }
                                            rK.length;
                                            if (!rK.fixed) {
                                                rK.length++;
                                                if (rK.data.length < rK.length) {
                                                    var q1;
                                                    var rO;
                                                    rO = new Array(rK.data.length + 10);
                                                    q1 = rO;
                                                    dQ.blit(rK.data, 0, q1, 0, rK.data.length);
                                                    rK.data = q1
                                                }
                                                rK.data[rK.length - 1] = rs.data[sa * 2 + 1] / aB.bitmapFill.height
                                            }
                                            rK.length
                                        }
                                    }
                                    var re = rK.length != rs.length;
                                    var rq = aB.normalizeUVT(rK, re);
                                    var sj = rq.max;
                                    rK = rq.uvt;
                                    if (sj > 1) {
                                        q4 = aB.createTempPatternCanvas(aB.bitmapFill, aB.bitmapRepeat, aB.bounds.width | 0, aB.bounds.height | 0)
                                    } else {
                                        q4 = aB.createTempPatternCanvas(aB.bitmapFill, aB.bitmapRepeat, aB.bitmapFill.width, aB.bitmapFill.height)
                                    }
                                }
                                var rz = 0;
                                var rx = ro.length;
                                var sf;
                                var rL;
                                var ry;
                                var rp;
                                var rn;
                                var rc;
                                var rb;
                                var q;
                                var st;
                                var rm;
                                var q7;
                                var rl;
                                var q6;
                                var rk;
                                var q5;
                                var rP;
                                var rD;
                                var rN;
                                var rC;
                                var rM;
                                var rA;
                                var se;
                                var sp;
                                var so;
                                var sn;
                                var sm;
                                var ra;
                                var q9;
                                while (rz < rx) {
                                    sf = rz;
                                    rL = rz + 1;
                                    ry = rz + 2;
                                    rp = ro.data[sf] * 2;
                                    rn = ro.data[sf] * 2 + 1;
                                    rc = ro.data[rL] * 2;
                                    rb = ro.data[rL] * 2 + 1;
                                    q = ro.data[ry] * 2;
                                    st = ro.data[ry] * 2 + 1;
                                    rm = rs.data[rp];
                                    q7 = rs.data[rn];
                                    rl = rs.data[rc];
                                    q6 = rs.data[rb];
                                    rk = rs.data[q];
                                    q5 = rs.data[st];
                                    var sl = d7.get_culling(r1);
                                    switch (sl) {
                                        case 2:
                                            if (!((rl - rm) * (q5 - q7) - (q6 - q7) * (rk - rm) < 0)) {
                                                rz += 3;
                                                continue
                                            }
                                            break;
                                        case 0:
                                            if ((rl - rm) * (q5 - q7) - (q6 - q7) * (rk - rm) < 0) {
                                                rz += 3;
                                                continue
                                            }
                                            break;
                                        default:
                                    }
                                    if (rh) {
                                        aB.context.beginPath();
                                        aB.context.moveTo(rm, q7);
                                        aB.context.lineTo(rl, q6);
                                        aB.context.lineTo(rk, q5);
                                        aB.context.closePath();
                                        if (!aB.hitTesting) {
                                            aB.context.fill()
                                        }
                                        rz += 3;
                                        continue
                                    }
                                    aB.context.save();
                                    aB.context.beginPath();
                                    aB.context.moveTo(rm, q7);
                                    aB.context.lineTo(rl, q6);
                                    aB.context.lineTo(rk, q5);
                                    aB.context.closePath();
                                    aB.context.clip();
                                    rP = rK.data[rp] * q4.width;
                                    rN = rK.data[rc] * q4.width;
                                    rM = rK.data[q] * q4.width;
                                    rD = rK.data[rn] * q4.height;
                                    rC = rK.data[rb] * q4.height;
                                    rA = rK.data[st] * q4.height;
                                    se = rP * (rA - rC) - rN * rA + rM * rC + (rN - rM) * rD;
                                    if (se == 0) {
                                        rz += 3;
                                        continue
                                    }
                                    sp = -(rD * (rk - rl) - rC * rk + rA * rl + (rC - rA) * rm) / se;
                                    so = (rC * q5 + rD * (q6 - q5) - rA * q6 + (rA - rC) * q7) / se;
                                    sn = (rP * (rk - rl) - rN * rk + rM * rl + (rN - rM) * rm) / se;
                                    sm = -(rN * q5 + rP * (q6 - q5) - rM * q6 + (rM - rN) * q7) / se;
                                    ra = (rP * (rA * rl - rC * rk) + rD * (rN * rk - rM * rl) + (rM * rC - rN * rA) * rm) / se;
                                    q9 = (rP * (rA * q6 - rC * q5) + rD * (rN * q5 - rM * q6) + (rM * rC - rN * rA) * q7) / se;
                                    aB.context.transform(sp, so, sn, sm, ra, q9);
                                    aB.context.drawImage(q4, 0, 0);
                                    aB.context.restore();
                                    rz += 3
                                }
                                break;
                            case 10:
                                var rZ = rg.readDrawTiles();
                                var sd = (pQ.get_flags(rZ) & 1) > 0;
                                var ru = aB.bounds.x;
                                var rt = aB.bounds.y;
                                var sh = (pQ.get_flags(rZ) & 2) > 0;
                                var sb = (pQ.get_flags(rZ) & 16) > 0;
                                var si = (pQ.get_flags(rZ) & 4) > 0;
                                var rI = (pQ.get_flags(rZ) & 8) > 0;
                                var rr = (pQ.get_flags(rZ) & 32) > 0;
                                var ri = (pQ.get_flags(rZ) & 64) > 0;
                                var r8 = (pQ.get_flags(rZ) & 65536) > 0;
                                if (sb) {
                                    sd = false;
                                    sh = false
                                }
                                var ss = 0;
                                var rw = 0;
                                var q3 = 0;
                                var sc = 0;
                                var rj = 0;
                                var i2 = 3;
                                if (rr) {
                                    if (ri) {
                                        i2 = 8
                                    } else {
                                        i2 = 6
                                    }
                                }
                                if (sd) {
                                    ss = i2;
                                    i2++
                                }
                                if (sh) {
                                    rw = i2;
                                    i2++
                                }
                                if (sb) {
                                    rj = i2;
                                    i2 += 4
                                }
                                if (si) {
                                    q3 = i2;
                                    i2 += 3
                                }
                                if (rI) {
                                    sc = i2;
                                    i2++
                                }
                                var rd = pQ.get_tileData(rZ).length;
                                if (pQ.get_count(rZ) >= 0 && rd > pQ.get_count(rZ)) {
                                    rd = pQ.get_count(rZ)
                                }
                                var rG = rd / i2 | 0;
                                var sq = 0;
                                var q8 = null;
                                var rV = null;
                                var rv = -1;
                                var rf;
                                pQ.get_sheet(rZ).__bitmap.__sync();
                                rf = pQ.get_sheet(rZ).__bitmap.image.get_src();
                                if (r8) {
                                    aB.context.globalCompositeOperation = "lighter"
                                }
                                while (sq < rd) {
                                    var sg;
                                    if (!rr) {
                                        sg = kr["int"](pQ.get_tileData(rZ)[sq + 2])
                                    } else {
                                        sg = -1
                                    }
                                    if (!rr && sg != rv) {
                                        q8 = pQ.get_sheet(rZ).__tileRects[sg];
                                        rV = pQ.get_sheet(rZ).__centerPoints[sg];
                                        rv = sg
                                    } else {
                                        if (rr) {
                                            q8 = pQ.get_sheet(rZ).__rectTile;
                                            q8.setTo(pQ.get_tileData(rZ)[sq + 2], pQ.get_tileData(rZ)[sq + 3], pQ.get_tileData(rZ)[sq + 4], pQ.get_tileData(rZ)[sq + 5]);
                                            rV = pQ.get_sheet(rZ).__point;
                                            if (ri) {
                                                rV.setTo(pQ.get_tileData(rZ)[sq + 6], pQ.get_tileData(rZ)[sq + 7])
                                            } else {
                                                rV.setTo(0, 0)
                                            }
                                        }
                                    }
                                    if (q8 != null && q8.width > 0 && q8.height > 0 && rV != null) {
                                        aB.context.save();
                                        aB.context.translate(pQ.get_tileData(rZ)[sq] - ru, pQ.get_tileData(rZ)[sq + 1] - rt);
                                        if (sh) {
                                            aB.context.rotate(pQ.get_tileData(rZ)[sq + rw])
                                        }
                                        var sk = 1;
                                        if (sd) {
                                            sk = pQ.get_tileData(rZ)[sq + ss]
                                        }
                                        if (sb) {
                                            aB.context.transform(pQ.get_tileData(rZ)[sq + rj], pQ.get_tileData(rZ)[sq + rj + 1], pQ.get_tileData(rZ)[sq + rj + 2], pQ.get_tileData(rZ)[sq + rj + 3], 0, 0)
                                        }
                                        if (rI) {
                                            aB.context.globalAlpha = pQ.get_tileData(rZ)[sq + sc]
                                        }
                                        aB.context.imageSmoothingEnabled = pQ.get_smooth(rZ);
                                        aB.context.drawImage(rf, q8.x, q8.y, q8.width, q8.height, -rV.x * sk, -rV.y * sk, q8.width * sk, q8.height * sk);
                                        aB.context.restore()
                                    }
                                    sq += i2
                                }
                                if (r8) {
                                    aB.context.globalCompositeOperation = "source-over"
                                }
                                break;
                            default:
                                rg.skip(rH)
                        }
                    }
                } catch (rE) {
                    if (rE != "__break__") {
                        throw rE
                    }
                }
                if (aB.fillCommands.get_length() > 0) {
                    aB.endFill()
                }
                if (aB.strokeCommands.get_length() > 0) {
                    aB.endStroke()
                }
                rg.destroy();
                rB.__bitmap = f0.fromCanvas(rB.__canvas)
            }
            rB.set___dirty(false)
        }
    };
    aB.renderMask = function(re, qY) {
        if (re.__commands.get_length() != 0) {
            aB.context = qY.context;
            var rk = 0;
            var rj = 0;
            var rg = 0;
            var rf = 0;
            var rl = new k8(re.__commands);
            var q = 0;
            var q6 = re.__commands.types;
            while (q < q6.length) {
                var i1 = q6[q];
                ++q;
                switch (i1[1]) {
                    case 3:
                        var ri = rl.readCubicCurveTo();
                        aB.context.bezierCurveTo(ba.get_controlX1(ri) - rg, ba.get_controlY1(ri) - rf, ba.get_controlX2(ri) - rg, ba.get_controlY2(ri) - rf, ba.get_anchorX(ri) - rg, ba.get_anchorY(ri) - rf);
                        rk = ba.get_anchorX(ri);
                        rj = ba.get_anchorY(ri);
                        break;
                    case 4:
                        var rb = rl.readCurveTo();
                        aB.context.quadraticCurveTo(k7.get_controlX(rb) - rg, k7.get_controlY(rb) - rf, k7.get_anchorX(rb) - rg, k7.get_anchorY(rb) - rf);
                        rk = k7.get_anchorX(rb);
                        rj = k7.get_anchorY(rb);
                        break;
                    case 5:
                        var ra = rl.readDrawCircle();
                        aB.context.arc(p4.get_x(ra) - rg, p4.get_y(ra) - rf, p4.get_radius(ra), 0, Math.PI * 2, true);
                        break;
                    case 6:
                        var q9 = rl.readDrawEllipse();
                        var q0 = jF.get_x(q9);
                        var qZ = jF.get_y(q9);
                        var rc = jF.get_width(q9);
                        var q8 = jF.get_height(q9);
                        q0 -= rg;
                        qZ -= rf;
                        var q1 = 0.5522848;
                        var js = rc / 2 * q1;
                        var i2 = q8 / 2 * q1;
                        var rd = q0 + rc;
                        var i = qZ + q8;
                        var q3 = q0 + rc / 2;
                        var rh = qZ + q8 / 2;
                        aB.context.moveTo(q0, rh);
                        aB.context.bezierCurveTo(q0, rh - i2, q3 - js, qZ, q3, qZ);
                        aB.context.bezierCurveTo(q3 + js, qZ, rd, rh - i2, rd, rh);
                        aB.context.bezierCurveTo(rd, rh + i2, q3 + js, i, q3, i);
                        aB.context.bezierCurveTo(q3 - js, i, q0, rh + i2, q0, rh);
                        break;
                    case 8:
                        var q7 = rl.readDrawRect();
                        aB.context.rect(nI.get_x(q7) - rg, nI.get_y(q7) - rf, nI.get_width(q7), nI.get_height(q7));
                        break;
                    case 9:
                        var q5 = rl.readDrawRoundRect();
                        aB.drawRoundRect(qg.get_x(q5) - rg, qg.get_y(q5) - rf, qg.get_width(q5), qg.get_height(q5), qg.get_ellipseWidth(q5), qg.get_ellipseHeight(q5));
                        break;
                    case 16:
                        var q4 = rl.readLineTo();
                        aB.context.lineTo(aF.get_x(q4) - rg, aF.get_y(q4) - rf);
                        rk = aF.get_x(q4);
                        rj = aF.get_y(q4);
                        break;
                    case 17:
                        var q2 = rl.readMoveTo();
                        aB.context.moveTo(eE.get_x(q2) - rg, eE.get_y(q2) - rf);
                        rk = eE.get_x(q2);
                        rj = eE.get_y(q2);
                        break;
                    default:
                        rl.skip(i1)
                }
            }
            rl.destroy()
        }
    };
    var eT = function(i) {
        bE.call(this, i)
    };
    nt["openfl._internal.renderer.canvas.CanvasMaskManager"] = eT;
    eT.__name__ = ["openfl", "_internal", "renderer", "canvas", "CanvasMaskManager"];
    eT.__super__ = bE;
    eT.prototype = lP(bE.prototype, {
        pushMask: function(i) {
            var i1 = this.renderSession.context;
            i1.save();
            var q = i.__getWorldTransform();
            i1.setTransform(q.a, q.b, q.c, q.d, q.tx, q.ty);
            i1.beginPath();
            i.__renderCanvasMask(this.renderSession);
            i1.clip()
        },
        pushRect: function(i1, i) {
            var q = this.renderSession.context;
            q.save();
            q.setTransform(i.a, i.b, i.c, i.d, i.tx, i.ty);
            q.beginPath();
            q.rect(i1.x, i1.y, i1.width, i1.height);
            q.clip()
        },
        popMask: function() {
            this.renderSession.context.restore()
        },
        popRect: function() {
            this.renderSession.context.restore()
        },
        __class__: eT
    });
    var bO = function(i1, i, q) {
        k0.call(this, i1, i);
        this.context = q;
        this.renderSession = new ii();
        this.renderSession.context = q;
        this.renderSession.roundPixels = true;
        this.renderSession.renderer = this;
        this.renderSession.maskManager = new eT(this.renderSession)
    };
    nt["openfl._internal.renderer.canvas.CanvasRenderer"] = bO;
    bO.__name__ = ["openfl", "_internal", "renderer", "canvas", "CanvasRenderer"];
    bO.__super__ = k0;
    bO.prototype = lP(k0.prototype, {
        context: null,
        render: function(i) {
           
        },
        __class__: bO
    });
    var cc = function() {};
    nt["openfl._internal.renderer.canvas.CanvasShape"] = cc;
    cc.__name__ = ["openfl", "_internal", "renderer", "canvas", "CanvasShape"];
    cc.render = function(q, qY) {
        if (!q.__renderable || q.__worldAlpha <= 0) {
            return
        }
        var i = q.__graphics;
        if (i != null) {
            aB.render(i, qY);
            if (i.__canvas != null) {
                var i2 = qY.context;
                var js = q.get_scrollRect();
                if (i.__bounds.width > 0 && i.__bounds.height > 0 && (js == null || js.width > 0 && js.height > 0)) {
                    if (q.__mask != null) {
                        qY.maskManager.pushMask(q.__mask)
                    }
                    i2.globalAlpha = q.__worldAlpha;
                    var i1 = q.__renderTransform;
                    if (qY.roundPixels) {
                        i2.setTransform(i1.a, i1.b, i1.c, i1.d, i1.tx | 0, i1.ty | 0)
                    } else {
                        i2.setTransform(i1.a, i1.b, i1.c, i1.d, i1.tx, i1.ty)
                    }
                    if (js == null) {
                        i2.drawImage(i.__canvas, i.__bounds.x, i.__bounds.y)
                    } else {
                        i2.drawImage(i.__canvas, Math.ceil(i.__bounds.x + js.x), Math.ceil(i.__bounds.y + js.y), js.width, js.height, Math.ceil(i.__bounds.x + js.x), Math.ceil(i.__bounds.y + js.y), js.width, js.height)
                    }
                    if (q.__mask != null) {
                        qY.maskManager.popMask()
                    }
                }
            }
        }
    };
    var oQ = function() {};
    nt["openfl._internal.renderer.canvas.CanvasTextField"] = oQ;
    oQ.__name__ = ["openfl", "_internal", "renderer", "canvas", "CanvasTextField"];
    oQ.context = null;
    oQ.disableInputMode = function(i) {};
    oQ.enableInputMode = function(i) {
        i.__cursorPosition = -1;
        if (i.__hiddenInput == null) {
            i.__hiddenInput = window.document.createElement("input");
            var q = i.__hiddenInput;
            q.type = "text";
            q.style.position = "absolute";
            q.style.opacity = "0";
            q.style.color = "transparent";
            q.style.left = "0px";
            q.style.top = "50%";
            if (new gF("(iPad|iPhone|iPod).*OS 8_", "gi").match(window.navigator.userAgent)) {
                q.style.fontSize = "0px";
                q.style.width = "0px";
                q.style.height = "0px"
            } else {
                q.style.width = "1px";
                q.style.height = "1px"
            }
            q.style.pointerEvents = "none";
            q.style.zIndex = "-10000000";
            if (i.maxChars > 0) {
                q.maxLength = i.maxChars
            }
            window.document.body.appendChild(q);
            q.value = i.text
        }
    };
    oQ.render = function(rc, q2) {
        if (rc.__dirty) {
            var q4 = rc.__textEngine;
            rc.__updateLayout();
            if ((q4.text == null || q4.text == "") && !q4.background && !q4.border && !q4.__hasFocus || (q4.width <= 0 || q4.height <= 0) && q4.autoSize != 2) {
                rc.__graphics.__canvas = null;
                rc.__graphics.__context = null;
                rc.__graphics.set___dirty(false);
                rc.__dirty = false
            } else {
                var q3 = q4.bounds;
                if (rc.__graphics == null || rc.__graphics.__canvas == null) {
                    if (rc.__graphics == null) {
                        rc.__graphics = new e3()
                    }
                    rc.__graphics.__canvas = window.document.createElement("canvas");
                    rc.__graphics.__context = rc.__graphics.__canvas.getContext("2d");
                    rc.__graphics.__bounds = new gn(0, 0, q3.width, q3.height)
                }
                var rm = rc.__graphics;
                oQ.context = rm.__context;
                if (q4.text != null && q4.text != "" || q4.__hasFocus) {
                    var q9 = q4.text;
                    if (q4.displayAsPassword) {
                        var q0 = q9.length;
                        var rk = "";
                        var qY = 0;
                        while (qY < q0) {
                            var rl = qY++;
                            rk += "*"
                        }
                        q9 = rk
                    }
                    rm.__canvas.width = Math.ceil(q3.width);
                    rm.__canvas.height = Math.ceil(q3.height);
                    if (q4.antiAliasType != 0 || q4.gridFitType != 1) {
                        rm.__context.mozImageSmoothingEnabled = true;
                        rm.__context.msImageSmoothingEnabled = true;
                        rm.__context.imageSmoothingEnabled = true
                    } else {
                        rm.__context.mozImageSmoothingEnabled = false;
                        rm.__context.msImageSmoothingEnabled = false;
                        rm.__context.imageSmoothingEnabled = false
                    }
                    if (q4.border || q4.background) {
                        oQ.context.rect(0.5, 0.5, q3.width - 1, q3.height - 1);
                        if (q4.background) {
                            oQ.context.fillStyle = "#" + cP.hex(q4.backgroundColor, 6);
                            oQ.context.fill()
                        }
                        if (q4.border) {
                            oQ.context.lineWidth = 1;
                            oQ.context.strokeStyle = "#" + cP.hex(q4.borderColor, 6);
                            oQ.context.stroke()
                        }
                    }
                    oQ.context.textBaseline = "top";
                    oQ.context.textAlign = "start";
                    var rh = -rc.get_scrollH();
                    var rg = 0;
                    var rb = 0;
                    var ra = rc.get_scrollV() - 1;
                    while (rb < ra) {
                        var ri = rb++;
                        rg -= q4.lineHeights[ri]
                    }
                    var rd;
                    var rn = 0;
                    var q8 = new gF("(iPad|iPhone|iPod|Firefox)", "g").match(window.navigator.userAgent);
                    var q7 = 0;
                    var rj = q4.layoutGroups;
                    while (q7 < rj.length) {
                        var q5 = rj[q7];
                        ++q7;
                        if (q5.lineIndex < rc.get_scrollV() - 1) {
                            continue
                        }
                        if (q5.lineIndex > rc.get_scrollV() + q4.bottomScrollV - 2) {
                            break
                        }
                        oQ.context.font = oO.getFont(q5.format);
                        oQ.context.fillStyle = "#" + cP.hex(q5.format.color, 6);
                        if (q8) {
                            rn = q5.format.size * 0.185
                        }
                        if (Object.prototype.hasOwnProperty.call(q4, "outline") && ar.getProperty(q4, "outline")) {
                            if (!q8) {
                                rn = -q5.format.size * 0.185
                            }
                            var rp = ar.getProperty(q4, "outlineColor");
                            var ro = ar.getProperty(q4, "outlineWidth");
                            oQ.context.strokeStyle = rp;
                            oQ.context.lineWidth = ro;
                            oQ.context.strokeText(q9.substring(q5.startIndex, q5.endIndex), q5.offsetX + rh, q5.offsetY + rn + rg)
                        }
                        oQ.context.fillText(q9.substring(q5.startIndex, q5.endIndex), q5.offsetX + rh, q5.offsetY + rn + rg);
                        if (rc.__caretIndex > -1 && q4.selectable) {
                            if (rc.__selectionIndex == rc.__caretIndex) {
                                if (rc.__showCursor && q5.startIndex <= rc.__caretIndex && q5.endIndex >= rc.__caretIndex) {
                                    rd = 0;
                                    var q6 = 0;
                                    var js = rc.__caretIndex - q5.startIndex;
                                    while (q6 < js) {
                                        var rf = q6++;
                                        if (q5.advances.length <= rf) {
                                            break
                                        }
                                        rd += q5.advances[rf]
                                    }
                                    oQ.context.fillRect(q5.offsetX + rd, q5.offsetY, 1, q5.height)
                                }
                            } else {
                                if (q5.startIndex <= rc.__caretIndex && q5.endIndex >= rc.__caretIndex || q5.startIndex <= rc.__selectionIndex && q5.endIndex >= rc.__selectionIndex) {
                                    var re = kr["int"](Math.min(rc.__selectionIndex, rc.__caretIndex));
                                    var q = kr["int"](Math.max(rc.__selectionIndex, rc.__caretIndex));
                                    if (q5.startIndex > re) {
                                        re = q5.startIndex
                                    }
                                    if (q5.endIndex < q) {
                                        q = q5.endIndex
                                    }
                                    var q1;
                                    var qZ;
                                    q1 = rc.getCharBoundaries(re);
                                    if (q >= q4.text.length) {
                                        qZ = rc.getCharBoundaries(q4.text.length - 1);
                                        qZ.x += qZ.width + 2
                                    } else {
                                        qZ = rc.getCharBoundaries(q)
                                    }
                                    if (q1 != null && qZ != null) {
                                        oQ.context.fillStyle = "#000000";
                                        oQ.context.fillRect(q1.x, q1.y, qZ.x - q1.x, q5.height);
                                        oQ.context.fillStyle = "#FFFFFF";
                                        oQ.context.fillText(q9.substring(re, q), rh + q1.x, q5.offsetY + rn + rg)
                                    }
                                }
                            }
                        }
                    }
                } else {
                    rm.__canvas.width = Math.ceil(q3.width);
                    rm.__canvas.height = Math.ceil(q3.height);
                    if (q4.border || q4.background) {
                        if (q4.border) {
                            oQ.context.rect(0.5, 0.5, q3.width - 1, q3.height - 1)
                        } else {
                            oQ.context.rect(0, 0, q3.width, q3.height)
                        }
                        if (q4.background) {
                            oQ.context.fillStyle = "#" + cP.hex(q4.backgroundColor, 6);
                            oQ.context.fill()
                        }
                        if (q4.border) {
                            oQ.context.lineWidth = 1;
                            oQ.context.lineCap = "square";
                            oQ.context.strokeStyle = "#" + cP.hex(q4.borderColor, 6);
                            oQ.context.stroke()
                        }
                    }
                }
                rm.__bitmap = f0.fromCanvas(rc.__graphics.__canvas);
                rc.__dirty = false;
                rm.set___dirty(false)
            }
        }
    };
    var pH = function(i1, i, q) {
        k0.call(this, i1, i);
        throw new nM("ConsoleRenderer not supported")
    };
    nt["openfl._internal.renderer.console.ConsoleRenderer"] = pH;
    pH.__name__ = ["openfl", "_internal", "renderer", "console", "ConsoleRenderer"];
    pH.__super__ = k0;
    pH.prototype = lP(k0.prototype, {
        render: function(i) {},
        __class__: pH
    });
    var mT = function() {};
    nt["openfl._internal.renderer.dom.DOMBitmap"] = mT;
    mT.__name__ = ["openfl", "_internal", "renderer", "dom", "DOMBitmap"];
    mT.render = function(q, i) {
        if (q.stage != null && q.__worldVisible && q.__renderable && q.bitmapData != null && q.bitmapData.__isValid) {
            if (q.bitmapData.image.buffer.__srcImage != null) {
                mT.renderImage(q, i)
            } else {
                mT.renderCanvas(q, i)
            }
        } else {
            if (q.__image != null) {
                i.element.removeChild(q.__image);
                q.__image = null;
                q.__style = null
            }
            if (q.__canvas != null) {
                i.element.removeChild(q.__canvas);
                q.__canvas = null;
                q.__style = null
            }
        }
    };
    mT.renderCanvas = function(q, i) {
        if (q.__image != null) {
            i.element.removeChild(q.__image);
            q.__image = null
        }
        if (q.__canvas == null) {
            q.__canvas = window.document.createElement("canvas");
            q.__context = q.__canvas.getContext("2d");
            if (!q.smoothing) {
                q.__context.mozImageSmoothingEnabled = false;
                q.__context.msImageSmoothingEnabled = false;
                q.__context.imageSmoothingEnabled = false
            }
            k.initializeElement(q, q.__canvas, i)
        }
        q.bitmapData.__sync();
        q.__canvas.width = q.bitmapData.width;
        q.__canvas.height = q.bitmapData.height;
        q.__context.globalAlpha = q.__worldAlpha;
        q.__context.drawImage(q.bitmapData.image.buffer.__srcCanvas, 0, 0);
        k.applyStyle(q, i, true, false, true)
    };
    mT.renderImage = function(q, i) {
        if (q.__canvas != null) {
            i.element.removeChild(q.__canvas);
            q.__canvas = null
        }
        if (q.__image == null) {
            q.__image = window.document.createElement("img");
            q.__image.src = q.bitmapData.image.buffer.__srcImage.src;
            k.initializeElement(q, q.__image, i)
        }
        k.applyStyle(q, i, true, true, true)
    };
    var m = function(i) {
        bE.call(this, i)
    };
    nt["openfl._internal.renderer.dom.DOMMaskManager"] = m;
    m.__name__ = ["openfl", "_internal", "renderer", "dom", "DOMMaskManager"];
    m.__super__ = bE;
    m.prototype = lP(bE.prototype, {
        pushMask: function(i) {},
        pushRect: function(q, i) {},
        popMask: function() {},
        __class__: m
    });
    var k = function(i1, i, q) {
        k0.call(this, i1, i);
        this.element = q;
        this.renderSession = new ii();
        this.renderSession.element = q;
        this.renderSession.roundPixels = true;
        var i2 = (function() {
            var js = window.getComputedStyle(document.documentElement, ""),
                qY = (Array.prototype.slice.call(js).join("").match(/-(moz|webkit|ms)-/) || (js.OLink === "" && ["", "o"]))[1],
                qZ = ("WebKit|Moz|MS|O").match(new RegExp("(" + qY + ")", "i"))[1];
            return {
                dom: qZ,
                lowercase: qY,
                css: "-" + qY + "-",
                js: qY[0].toUpperCase() + qY.substr(1)
            }
        })();
        this.renderSession.vendorPrefix = i2.lowercase;
        if (i2.lowercase == "webkit") {
            this.renderSession.transformProperty = "-webkit-transform"
        } else {
            this.renderSession.transformProperty = "transform"
        }
        if (i2.lowercase == "webkit") {
            this.renderSession.transformOriginProperty = "-webkit-transform-origin"
        } else {
            this.renderSession.transformOriginProperty = "transform-origin"
        }
        this.renderSession.maskManager = new m(this.renderSession);
        this.renderSession.renderer = this
    };
    nt["openfl._internal.renderer.dom.DOMRenderer"] = k;
    k.__name__ = ["openfl", "_internal", "renderer", "dom", "DOMRenderer"];
    k.applyStyle = function(qZ, qY, js, q0, i) {
        var i1 = qZ.__style;
        if (js && qZ.__worldTransformChanged) {
            i1.setProperty(qY.transformProperty, qZ.__worldTransform.to3DString(qY.roundPixels), null)
        }
        if (qZ.__worldZ != ++qY.z) {
            qZ.__worldZ = qY.z;
            i1.setProperty("z-index", qZ.__worldZ == null ? "null" : "" + qZ.__worldZ, null)
        }
        if (q0 && qZ.__worldAlphaChanged) {
            if (qZ.__worldAlpha < 1) {
                i1.setProperty("opacity", qZ.__worldAlpha == null ? "null" : "" + qZ.__worldAlpha, null)
            } else {
                i1.removeProperty("opacity")
            }
        }
        if (i && qZ.__worldClipChanged) {
            if (qZ.__worldClip == null) {
                i1.removeProperty("clip")
            } else {
                var i2 = gn.__temp;
                var q = qd.__temp;
                q.copyFrom(qZ.__worldTransform);
                q.invert();
                qZ.__worldClip.__transform(i2, q);
                i1.setProperty("clip", "rect(" + i2.y + "px, " + i2.get_right() + "px, " + i2.get_bottom() + "px, " + i2.x + "px)", null)
            }
        }
    };
    k.initializeElement = function(i2, i, i1) {
        var q = i2.__style = i.style;
        q.setProperty("position", "absolute", null);
        q.setProperty("top", "0", null);
        q.setProperty("left", "0", null);
        q.setProperty(i1.transformOriginProperty, "0 0 0", null);
        i1.element.appendChild(i);
        i2.__worldAlphaChanged = true;
        i2.__worldClipChanged = true;
        i2.__worldTransformChanged = true;
        i2.__worldVisibleChanged = true;
        i2.__worldZ = -1
    };
    k.__super__ = k0;
    k.prototype = lP(k0.prototype, {
        element: null,
        render: function(i) {
            this.element.style.background = i.__colorString;
            this.renderSession.z = 1;
            i.__renderDOM(this.renderSession)
        },
        __class__: k
    });
    var l = function() {};
    nt["openfl._internal.renderer.dom.DOMShape"] = l;
    l.__name__ = ["openfl", "_internal", "renderer", "dom", "DOMShape"];
    l.render = function(q, i2) {
        var i = q.__graphics;
        if (q.stage != null && q.__worldVisible && q.__renderable && i != null) {
            if (i.__dirty || q.__worldAlphaChanged || q.__canvas == null && i.__canvas != null) {
                aB.render(i, i2);
                if (i.__canvas != null) {
                    if (q.__canvas == null) {
                        q.__canvas = window.document.createElement("canvas");
                        q.__context = q.__canvas.getContext("2d");
                        k.initializeElement(q, q.__canvas, i2)
                    }
                    q.__canvas.width = i.__canvas.width;
                    q.__canvas.height = i.__canvas.height;
                    q.__context.globalAlpha = q.__worldAlpha;
                    q.__context.drawImage(i.__canvas, 0, 0)
                } else {
                    if (q.__canvas != null) {
                        i2.element.removeChild(q.__canvas);
                        q.__canvas = null;
                        q.__style = null
                    }
                }
            }
            if (q.__canvas != null) {
                if (q.__worldTransformChanged || i.__transformDirty) {
                    i.__transformDirty = false;
                    var i1 = qd.__temp;
                    i1.identity();
                    i1.translate(i.__bounds.x, i.__bounds.y);
                    i1.concat(q.__worldTransform);
                    q.__style.setProperty(i2.transformProperty, i2.roundPixels ? "matrix3d(" + i1.a + ", " + i1.b + ", 0, 0, " + i1.c + ", " + i1.d + ", 0, 0, 0, 0, 1, 0, " + (i1.tx | 0) + ", " + (i1.ty | 0) + ", 0, 1)" : "matrix3d(" + i1.a + ", " + i1.b + ", 0, 0, " + i1.c + ", " + i1.d + ", 0, 0, 0, 0, 1, 0, " + i1.tx + ", " + i1.ty + ", 0, 1)", null)
                }
                k.applyStyle(q, i2, false, false, true)
            }
        } else {
            if (q.__canvas != null) {
                i2.element.removeChild(q.__canvas);
                q.__canvas = null;
                q.__style = null
            }
        }
    };
    var kW = function() {};
    nt["openfl._internal.renderer.dom.DOMTextField"] = kW;
    kW.__name__ = ["openfl", "_internal", "renderer", "dom", "DOMTextField"];
    kW.measureText = function(i) {
        var q = i.__textEngine;
        var i1 = i.__div;
        if (i1 == null) {
            i1 = window.document.createElement("div");
            i1.innerHTML = new gF("\n", "g").replace(q.text, "<br>");
            i1.style.setProperty("font", oO.getFont(i.__textFormat), null);
            i1.style.setProperty("pointer-events", "none", null);
            i1.style.position = "absolute";
            i1.style.top = "110%";
            window.document.body.appendChild(i1)
        }
        q.__measuredWidth = i1.clientWidth;
        if (i.__div == null) {
            i1.style.width = kr.string(q.width - 4) + "px"
        }
        q.__measuredHeight = i1.clientHeight;
        if (i.__div == null) {
            window.document.body.removeChild(i1)
        }
    };
    kW.render = function(i, i2) {
        var q = i.__textEngine;
        if (i.stage != null && i.__worldVisible && i.__renderable) {
            if (i.__dirty || i.__div == null) {
                if (q.text != "" || q.background || q.border || q.type == 1) {
                    if (i.__div == null) {
                        i.__div = window.document.createElement("div");
                        k.initializeElement(i, i.__div, i2);
                        i.__style.setProperty("outline", "none", null);
                        i.__div.addEventListener("input", function(qY) {
                            qY.preventDefault();
                            if (i.get_htmlText() != i.__div.innerHTML) {
                                i.set_htmlText(i.__div.innerHTML);
                                i.__dirty = false
                            }
                        }, true)
                    }
                    if (q.selectable) {
                        i.__style.setProperty("cursor", "text", null)
                    } else {
                        i.__style.setProperty("cursor", "inherit", null)
                    }
                    i.__div.contentEditable = q.type == 1;
                    var i1 = i.__style;
                    i.__div.innerHTML = q.text;
                    if (q.background) {
                        i1.setProperty("background-color", "#" + cP.hex(q.backgroundColor, 6), null)
                    } else {
                        i1.removeProperty("background-color")
                    }
                    if (q.border) {
                        i1.setProperty("border", "solid 1px #" + cP.hex(q.borderColor, 6), null)
                    } else {
                        i1.removeProperty("border")
                    }
                    i1.setProperty("font", oO.getFont(i.__textFormat), null);
                    i1.setProperty("color", "#" + cP.hex(i.__textFormat.color, 6), null);
                    if (q.autoSize != 2) {
                        i1.setProperty("width", "auto", null)
                    } else {
                        i1.setProperty("width", q.width + "px", null)
                    }
                    i1.setProperty("height", q.height + "px", null);
                    var js = i.__textFormat.align;
                    switch (js) {
                        case 0:
                            i1.setProperty("text-align", "center", null);
                            break;
                        case 4:
                            i1.setProperty("text-align", "right", null);
                            break;
                        default:
                            i1.setProperty("text-align", "left", null)
                    }
                    i.__dirty = false
                } else {
                    if (i.__div != null) {
                        i2.element.removeChild(i.__div);
                        i.__div = null
                    }
                }
            }
            if (i.__div != null) {
                k.applyStyle(i, i2, true, true, false)
            }
        } else {
            if (i.__div != null) {
                i2.element.removeChild(i.__div);
                i.__div = null;
                i.__style = null
            }
        }
    };
    var qX = function() {};
    nt["openfl._internal.renderer.opengl.GLBitmap"] = qX;
    qX.__name__ = ["openfl", "_internal", "renderer", "opengl", "GLBitmap"];
    qX.render = function(q, i) {
        if (!q.__renderable || q.__worldAlpha <= 0 || q.bitmapData == null || !q.bitmapData.__isValid) {
            return
        }
        i.spriteBatch.renderBitmapData(q.bitmapData, q.smoothing, q.__renderTransform, q.__worldColorTransform, q.__worldAlpha, q.__blendMode, q.__shader, q.pixelSnapping)
    };
    qX.pushFramebuffer = function(q3, qZ, q5, i2, q6, i1, i) {
        if (i == null) {
            i = true
        }
        if (i1 == null) {
            i1 = false
        }
        if (q6 == null) {
            q6 = true
        }
        var js = q3.gl;
        if (js == null) {
            return null
        }
        var qY = q3.renderer;
        var q2 = q3.spriteBatch;
        var q1 = q5.x | 0;
        var q0 = q5.y | 0;
        var q = q5.width | 0;
        var q4 = q5.height | 0;
        q2.finish();
        if (qX.fbData.length <= 0) {
            qX.fbData.push({
                texture: null,
                viewPort: null,
                transparent: qY.transparent
            })
        }
        if (qZ == null) {
            qZ = new nR(js, q, q4, i2, i)
        }
        qZ.resize(q, q4);
        qY.transparent = q6;
        q3.maskManager.saveState();
        js.bindFramebuffer(js.FRAMEBUFFER, (qZ.__swapped ? qZ.__texture1 : qZ.__texture0).frameBuffer);
        qY.setViewport(q1, q0, q, q4);
        js.colorMask(true, true, true, true);
        q3.blendModeManager.setBlendMode(10);
        if (i1) {
            (qZ.__swapped ? qZ.__texture1 : qZ.__texture0).clear(0, 0, 0, 0, null)
        }
        qX.fbData.push({
            texture: qZ,
            viewPort: q5,
            transparent: q6
        });
        return qZ
    };
    qX.drawBitmapDrawable = function(i2, q8, q0, q3, q6, ra, q4) {
        var q9 = qX.fbData[qX.fbData.length - 1];
        if (q9 == null) {
            throw new nM("No data to draw to")
        }
        var q5 = i2.gl;
        if (q5 == null) {
            return
        }
        var q = q9.viewPort;
        var q2 = i2.renderer;
        var i = i2.spriteBatch;
        var q7 = q8 != null;
        var js;
        if (q4 == null) {
            js = new gn(q.x, q.y, q.width, q.height)
        } else {
            js = q4.clone()
        }
        i.begin(i2, q7 ? null : js);
        if (q7) {
            q8.__worldTransform.identity();
            qX.flipMatrix(q8.__worldTransform, q.height);
            q8.__renderGL(i2);
            i.stop();
            if (q8.__texture != null) {
                q5.deleteTexture(q8.__texture)
            }
            q8.__texture = null;
            i.start(js)
        }
        var i1 = q0.__worldColorTransform;
        var qY = q0.__blendMode;
        var qZ = q0.__cacheAsBitmap;
        var q1;
        if (q3 != null) {
            q1 = q3.clone()
        } else {
            q1 = new qd()
        }
        qX.flipMatrix(q1, q.height);
        if (q6 != null) {
            q0.__worldColorTransform = q6
        } else {
            q0.__worldColorTransform = new n()
        }
        q0.__blendMode = ra;
        eH.__cacheAsBitmapMode = true;
        q0.__updateTransforms(q1);
        q0.__updateChildren(false);
        q0.__cacheAsBitmap = false;
        q0.__renderGL(i2);
        q0.__cacheAsBitmap = qZ;
        q0.__worldColorTransform = i1;
        q0.__blendMode = qY;
        eH.__cacheAsBitmapMode = false;
        q0.__updateTransforms();
        q0.__updateChildren(false)
    };
    qX.popFramebuffer = function(js, qY) {
        var qZ = js.gl;
        if (qZ == null) {
            return
        }
        js.spriteBatch.finish();
        qX.fbData.pop();
        var i2 = qX.fbData[qX.fbData.length - 1];
        if (i2 == null) {
            throw new nM("oh")
        }
        var q;
        var q0;
        var i1;
        var i;
        if (i2.viewPort == null) {
            q = q0 = 0;
            i1 = js.renderer.width;
            i = js.renderer.height
        } else {
            q = Math.floor(i2.viewPort.x);
            q0 = Math.floor(i2.viewPort.y);
            i1 = Math.ceil(i2.viewPort.width);
            i = Math.ceil(i2.viewPort.height)
        }
        if (qY != null) {
            if (qY.width != i1 || qY.height != i) {
                qY.resize(i1, i)
            }
            qZ.readPixels(q, q0, i1, i, qZ.RGBA, qZ.UNSIGNED_BYTE, qY.buffer.data);
            qY.dirty = false;
            qY.set_premultiplied(true)
        }
        qZ.bindFramebuffer(qZ.FRAMEBUFFER, i2.texture == null ? js.defaultFramebuffer : i2.texture.get_framebuffer());
        js.renderer.setViewport(q, q0, i1, i);
        js.renderer.transparent = i2.transparent;
        js.maskManager.restoreState()
    };
    qX.flipMatrix = function(i1, q) {
        var i2 = i1.tx;
        var i = i1.ty;
        i1.tx = 0;
        i1.ty = 0;
        i1.scale(1, -1);
        i1.translate(0, q);
        i1.tx += i2;
        i1.ty -= i
    };
    var mA = function(i2, i, qY, js, q, i1) {
        if (i1 == null) {
            i1 = false
        }
        if (q == null) {
            q = false
        }
        if (js == null) {
            js = false
        }
        if (i == null) {
            i = 600
        }
        if (i2 == null) {
            i2 = 800
        }
        this.vpHeight = 0;
        this.vpWidth = 0;
        this.vpY = 0;
        this.vpX = 0;
        k0.call(this, i2, i);
        this.transparent = js;
        this.preserveDrawingBuffer = i1;
        this.width = i2;
        this.height = i;
        this.viewport = new gn();
        this.options = {
            alpha: js,
            antialias: q,
            premultipliedAlpha: js,
            stencil: true,
            preserveDrawingBuffer: i1
        };
        this._glContextId = mA.glContextId++;
        this.gl = qY;
        this.defaultFramebuffer = null;
        mA.glContexts[this._glContextId] = qY;
        this.projectionMatrix = new qd();
        this.projection = new pp();
        this.projection.x = this.width / 2;
        this.projection.y = -this.height / 2;
        this.offset = new pp(0, 0);
        this.resize(this.width, this.height);
        this.contextLost = false;
        this.shaderManager = new aU(qY);
        this.spriteBatch = new nz(qY);
        this.filterManager = new jf(qY, this.transparent);
        this.stencilManager = new e2(qY);
        this.blendModeManager = new lh(qY);
        this.renderSession = new ii();
        this.renderSession.gl = this.gl;
        this.renderSession.drawCount = 0;
        this.renderSession.shaderManager = this.shaderManager;
        this.renderSession.filterManager = this.filterManager;
        this.renderSession.blendModeManager = this.blendModeManager;
        this.renderSession.spriteBatch = this.spriteBatch;
        this.renderSession.stencilManager = this.stencilManager;
        this.renderSession.renderer = this;
        this.renderSession.defaultFramebuffer = this.defaultFramebuffer;
        this.renderSession.projectionMatrix = this.projectionMatrix;
        this.maskManager = new j1(this.renderSession);
        this.renderSession.maskManager = this.maskManager;
        this.shaderManager.setShader(this.shaderManager.defaultShader);
        qY.disable(qY.DEPTH_TEST);
        qY.disable(qY.CULL_FACE);
        qY.enable(qY.BLEND);
        qY.colorMask(true, true, true, this.transparent)
    };
    nt["openfl._internal.renderer.opengl.GLRenderer"] = mA;
    mA.__name__ = ["openfl", "_internal", "renderer", "opengl", "GLRenderer"];
    mA.renderBitmap = function(i1, qY, i) {
        if (i == null) {
            i = true
        }
        if (!i1.__renderable || i1.__worldAlpha <= 0) {
            return
        }
        if (i1.__graphics == null || i1.__graphics.__bitmap == null) {
            return
        }
        var i2 = gn.__temp;
        var q = qd.__temp;
        i2.setEmpty();
        q.identity();
        i1.__getBounds(i2, q);
        var js = i1.__graphics.__bitmap;
        q.translate(i1.__graphics.__bounds.x, i1.__graphics.__bounds.y);
        q.concat(i1.__renderTransform);
        qY.spriteBatch.renderBitmapData(js, i, q, i1.__worldColorTransform, i1.__worldAlpha, i1.__blendMode, null, 0)
    };
    mA.__super__ = k0;
    mA.prototype = lP(k0.prototype, {
        blendModeManager: null,
        contextLost: null,
        defaultFramebuffer: null,
        filterManager: null,
        gl: null,
        _glContextId: null,
        maskManager: null,
        offset: null,
        options: null,
        preserveDrawingBuffer: null,
        projection: null,
        shaderManager: null,
        spriteBatch: null,
        stencilManager: null,
        view: null,
        projectionMatrix: null,
        __stage: null,
        vpX: null,
        vpY: null,
        vpWidth: null,
        vpHeight: null,
        destroy: function() {
            mA.glContexts[this._glContextId] = null;
            this.projection = null;
            this.offset = null;
            this.shaderManager.destroy();
            this.spriteBatch.destroy();
            this.maskManager.destroy();
            this.filterManager.destroy();
            this.shaderManager = null;
            this.spriteBatch = null;
            this.maskManager = null;
            this.filterManager = null;
            this.gl = null;
            this.renderSession = null
        },
        setViewport: function(q, i2, i1, i) {
            if (!(this.vpX == q && this.vpY == i2 && this.vpWidth == i1 && this.vpHeight == i)) {
                this.vpX = q;
                this.vpY = i2;
                this.vpWidth = i1;
                this.vpHeight = i;
                this.gl.viewport(q, i2, i1, i);
                this.setOrtho(q, i2, i1, i);
                this.viewport.setTo(q, i2, i1, i)
            }
        },
        setOrtho: function(q, js, i1, i) {
            var i2 = this.projectionMatrix;
            i2.identity();
            i2.a = 1 / i1 * 2;
            i2.d = -1 / i * 2;
            i2.tx = -1 - q * i2.a;
            i2.ty = 1 - js * i2.d
        },
        handleContextLost: function(i) {
            i.preventDefault();
            this.contextLost = true
        },
        handleContextRestored: function() {
            var i = this.gl;
            mA.glContextId++;
            this.shaderManager.setContext(i);
            this.spriteBatch.setContext(i);
            this.maskManager.setContext(i);
            this.filterManager.setContext(i);
            this.renderSession.gl = i;
            this.defaultFramebuffer = null;
            i.disable(i.DEPTH_TEST);
            i.disable(i.CULL_FACE);
            i.enable(i.BLEND);
            i.colorMask(true, true, true, this.transparent);
            this.setViewport(0, 0, this.width, this.height);
            this.contextLost = false
        },
        render: function(i) {
            if (this.contextLost) {
                return
            }
            var q = this.gl;
            this.setViewport(0, 0, this.width, this.height);
            q.bindFramebuffer(q.FRAMEBUFFER, this.defaultFramebuffer);
            if (this.transparent) {
                q.clearColor(0, 0, 0, 0)
            } else {
                q.clearColor(i.__colorSplit[0], i.__colorSplit[1], i.__colorSplit[2], 1)
            }
            q.clear(q.COLOR_BUFFER_BIT);
            this.renderDisplayObject(i, this.projection)
        },
        renderDisplayObject: function(i1, i, q) {
            this.renderSession.blendModeManager.setBlendMode(10);
            this.renderSession.drawCount = 0;
            this.renderSession.currentBlendMode = null;
            this.spriteBatch.begin(this.renderSession);
            this.filterManager.begin(this.renderSession, q);
            i1.__renderGL(this.renderSession);
            this.spriteBatch.finish()
        },
        resize: function(q, i) {
            this.width = q;
            this.height = i;
            k0.prototype.resize.call(this, q, i);
            this.setViewport(0, 0, q, i);
            this.projection.x = q / 2;
            this.projection.y = -i / 2
        },
        __class__: mA
    });
    var g5 = function(i) {
        this.wrapT = 33071;
        this.wrapS = 33071;
        this.compiled = false;
        this.uniforms = new io();
        this.attributes = new io();
        this.ID = g5.UID++;
        this.gl = i;
        this.program = null
    };
    nt["openfl._internal.renderer.opengl.shaders2.Shader"] = g5;
    g5.__name__ = ["openfl", "_internal", "renderer", "opengl", "shaders2", "Shader"];
    g5.compileProgram = function(q0, i, qY) {
        var i2 = aU.compiledShadersCache;
        var js = b5.encode(i + qY);
        if (pN[js] != null ? i2.existsReserved(js) : i2.h.hasOwnProperty(js)) {
            return pN[js] != null ? i2.getReserved(js) : i2.h[js]
        }
        var qZ = g5.compileShader(q0, i, q0.VERTEX_SHADER);
        var q = g5.compileShader(q0, qY, q0.FRAGMENT_SHADER);
        var i1 = q0.createProgram();
        if (qZ != null && q != null) {
            q0.attachShader(i1, qZ);
            q0.attachShader(i1, q);
            q0.linkProgram(i1);
            q0.deleteShader(qZ);
            q0.deleteShader(q);
            if (q0.getProgramParameter(i1, q0.LINK_STATUS) == 0) {
                eM.trace("Could not compile the program:\n\t" + q0.getProgramInfoLog(i1), {
                    fileName: "Shader.hx",
                    lineNumber: 226,
                    className: "openfl._internal.renderer.opengl.shaders2.Shader",
                    methodName: "compileProgram"
                });
                eM.trace("VERTEX:\n" + i + "\nFRAGMENT:\n" + qY, {
                    fileName: "Shader.hx",
                    lineNumber: 227,
                    className: "openfl._internal.renderer.opengl.shaders2.Shader",
                    methodName: "compileProgram"
                });
                return null
            }
        }
        if (pN[js] != null) {
            i2.setReserved(js, i1)
        } else {
            i2.h[js] = i1
        }
        return i1
    };
    g5.compileShader = function(js, i2, i) {
        var i1 = i2;
        var q = js.createShader(i);
        js.shaderSource(q, i1);
        js.compileShader(q);
        if (js.getShaderParameter(q, js.COMPILE_STATUS) == 0) {
            eM.trace("Could not compile the shader:\n\t" + js.getShaderInfoLog(q), {
                fileName: "Shader.hx",
                lineNumber: 244,
                className: "openfl._internal.renderer.opengl.shaders2.Shader",
                methodName: "compileShader"
            });
            eM.trace(i2, {
                fileName: "Shader.hx",
                lineNumber: 245,
                className: "openfl._internal.renderer.opengl.shaders2.Shader",
                methodName: "compileShader"
            });
            return null
        }
        return q
    };
    g5.prototype = {
        gl: null,
        vertexSrc: null,
        fragmentSrc: null,
        attributes: null,
        uniforms: null,
        compiled: null,
        ID: null,
        program: null,
        wrapS: null,
        wrapT: null,
        smooth: null,
        blendMode: null,
        vertexString: null,
        fragmentString: null,
        init: function(i) {
            if (i == null) {
                i = false
            }
            if (this.compiled && !i) {
                return
            }
            if (this.vertexSrc != null) {
                this.vertexString = this.vertexSrc.join("\n")
            }
            if (this.fragmentSrc != null) {
                this.fragmentString = this.fragmentSrc.join("\n")
            }
            if (this.vertexString == null || this.fragmentString == null) {
                throw new nM("No vertex or fragment source provided")
            }
            this.program = g5.compileProgram(this.gl, this.vertexString, this.fragmentString);
            if (this.program != null) {
                this.compiled = true
            }
        },
        destroy: function() {
            if (this.program != null) {
                this.gl.deleteProgram(this.program)
            }
            this.compiled = false;
            this.attributes = null
        },
        applyData: function(q3, qZ) {
            if (q3 == null) {
                return
            }
            var i;
            var q2;
            var q1;
            var js;
            var q4 = q3.keys();
            while (q4.hasNext()) {
                var q0 = q4.next();
                q2 = this.getUniformLocation(q0);
                i = pN[q0] != null ? q3.getReserved(q0) : q3.h[q0];
                if (i == null) {
                    continue
                }
                q1 = i.value;
                js = i.bitmap;
                if (q1 == null && js == null) {
                    continue
                }
                var i2 = i.internalType;
                switch (i2) {
                    case 1:
                        var qY = i.size;
                        switch (qY) {
                            case 1:
                                this.gl.uniform1i(q2, q1[0] | 0);
                                break;
                            case 2:
                                this.gl.uniform2i(q2, q1[0] | 0, q1[1] | 0);
                                break;
                            case 3:
                                this.gl.uniform3i(q2, q1[0] | 0, q1[1] | 0, q1[2] | 0);
                                break;
                            case 4:
                                this.gl.uniform4i(q2, q1[0] | 0, q1[1] | 0, q1[2] | 0, q1[3] | 0);
                                break
                        }
                        break;
                    case 2:
                        var i1 = i.size;
                        switch (i1) {
                            case 1:
                                this.gl.uniform1f(q2, q1[0]);
                                break;
                            case 2:
                                this.gl.uniform2f(q2, q1[0], q1[1]);
                                break;
                            case 3:
                                this.gl.uniform3f(q2, q1[0], q1[1], q1[2]);
                                break;
                            case 4:
                                this.gl.uniform4f(q2, q1[0], q1[1], q1[2], q1[3]);
                                break
                        }
                        break;
                    case 3:
                        var q = i.size;
                        switch (q) {
                            case 2:
                                this.gl.uniformMatrix2fv(q2, i.transpose, (function(q7) {
                                    var q6;
                                    var q8 = i.value;
                                    var q5;
                                    if (q8 != null) {
                                        q5 = new Float32Array(q8)
                                    } else {
                                        q5 = null
                                    }
                                    q6 = q5;
                                    return q6
                                }(this)));
                                break;
                            case 3:
                                this.gl.uniformMatrix3fv(q2, i.transpose, (function(q8) {
                                    var q6;
                                    var q7 = i.value;
                                    var q5;
                                    if (q7 != null) {
                                        q5 = new Float32Array(q7)
                                    } else {
                                        q5 = null
                                    }
                                    q6 = q5;
                                    return q6
                                }(this)));
                                break;
                            case 4:
                                this.gl.uniformMatrix4fv(q2, i.transpose, (function(q7) {
                                    var q5;
                                    var q6 = i.value;
                                    var q8;
                                    if (q6 != null) {
                                        q8 = new Float32Array(q6)
                                    } else {
                                        q8 = null
                                    }
                                    q5 = q8;
                                    return q5
                                }(this)));
                                break
                        }
                        break;
                    case 4:
                        if (js == null || !js.__isValid) {
                            continue
                        }
                        this.gl.activeTexture(this.gl.TEXTURE0 + qZ.activeTextures);
                        this.gl.bindTexture(this.gl.TEXTURE_2D, js.getTexture(this.gl));
                        this.gl.uniform1i(q2, qZ.activeTextures);
                        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, i.smooth ? this.gl.LINEAR : this.gl.NEAREST);
                        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, i.smooth ? this.gl.LINEAR : this.gl.NEAREST);
                        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, i.repeatX);
                        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, i.repeatY);
                        qZ.activeTextures++;
                        break;
                    default:
                }
            }
        },
        getAttribLocation: function(q) {
            if (this.program == null) {
                throw new nM("Shader isn't initialized")
            }
            if (this.attributes.exists(q)) {
                return this.attributes.get(q)
            } else {
                var i = this.gl.getAttribLocation(this.program, q);
                this.attributes.set(q, i);
                return i
            }
        },
        getUniformLocation: function(i) {
            if (this.program == null) {
                throw new nM("Shader isn't initialized")
            }
            if (this.uniforms.exists(i)) {
                return this.uniforms.get(i)
            } else {
                var q = this.gl.getUniformLocation(this.program, i);
                this.uniforms.set(i, q);
                return q
            }
        },
        enableVertexAttribute: function(q, i1, i2) {
            var i = this.getAttribLocation(q.name);
            this.gl.enableVertexAttribArray(i);
            this.gl.vertexAttribPointer(i, q.components, q.type, q.normalized, i1, i2 * 4)
        },
        disableVertexAttribute: function(i1, q) {
            if (q == null) {
                q = true
            }
            var i = this.getAttribLocation(i1.name);
            this.gl.disableVertexAttribArray(i);
            if (q) {
                var i2 = i1.components;
                switch (i2) {
                    case 1:
                        this.gl.vertexAttrib1fv(i, i1.defaultValue.subarray(0, 1));
                        break;
                    case 2:
                        this.gl.vertexAttrib2fv(i, i1.defaultValue.subarray(0, 2));
                        break;
                    case 3:
                        this.gl.vertexAttrib3fv(i, i1.defaultValue.subarray(0, 3));
                        break;
                    default:
                        this.gl.vertexAttrib4fv(i, i1.defaultValue.subarray(0, 4))
                }
            }
        },
        bindVertexArray: function(q) {
            var qY = 0;
            var i2 = q.get_stride();
            var js = 0;
            var i1 = q.attributes;
            while (js < i1.length) {
                var i = i1[js];
                ++js;
                if (i.enabled) {
                    this.enableVertexAttribute(i, i2, qY);
                    qY += Math.floor(i.components * i.getElementsBytes() / 4)
                } else {
                    this.disableVertexAttribute(i, true)
                }
            }
        },
        unbindVertexArray: function(q) {
            var i2 = 0;
            var i1 = q.attributes;
            while (i2 < i1.length) {
                var i = i1[i2];
                ++i2;
                this.disableVertexAttribute(i, false)
            }
        },
        __class__: g5
    };
    var nC = function(i) {
        g5.call(this, i);
        this.vertexSrc = nC.VERTEX_SRC;
        this.fragmentSrc = ["#ifdef GL_ES", "precision lowp float;", "#endif", "uniform sampler2D openfl_uSampler0;", "uniform vec4 openfl_uColorMultiplier;", "uniform vec4 openfl_uColorOffset;", "uniform bool openfl_uUseColorTransform;", "varying vec2 openfl_vTexCoord;", "varying vec4 openfl_vColor;", "vec4 colorTransform(const vec4 color, const vec4 tint, const vec4 multiplier, const vec4 offset) {", "\tif(!openfl_uUseColorTransform) {", "\t\treturn color * tint;", "\t}", "\tvec4 unmultiply;", "\tif (color.a == 0.0) {", "\t\tunmultiply = vec4(0.0, 0.0, 0.0, 0.0);", "\t} else {", "   \tunmultiply = vec4(color.rgb / color.a, color.a);", "\t}", "   vec4 result = unmultiply * tint * multiplier;", "   result = result + offset;", "   result = clamp(result, 0., 1.);", "   result = vec4(result.rgb * result.a, result.a);", "   return result;", "}", "void main(void) {", "   vec4 tc = texture2D(openfl_uSampler0, openfl_vTexCoord);", "   gl_FragColor = colorTransform(tc, openfl_vColor, openfl_uColorMultiplier, openfl_uColorOffset);", "}"];
        this.init()
    };
    nt["openfl._internal.renderer.opengl.shaders2.DefaultShader"] = nC;
    nC.__name__ = ["openfl", "_internal", "renderer", "opengl", "shaders2", "DefaultShader"];
    nC.__super__ = g5;
    nC.prototype = lP(g5.prototype, {
        init: function(i) {
            if (i == null) {
                i = false
            }
            g5.prototype.init.call(this, i);
            this.getAttribLocation("openfl_aPosition");
            this.getAttribLocation("openfl_aTexCoord0");
            this.getAttribLocation("openfl_aColor");
            this.getUniformLocation("openfl_uProjectionMatrix");
            this.getUniformLocation("openfl_uSampler0");
            this.getUniformLocation("openfl_uColorMultiplier");
            this.getUniformLocation("openfl_uColorOffset");
            this.getUniformLocation("openfl_uUseColorTransform")
        },
        __class__: nC
    });
    var bS = function(i) {
        g5.call(this, i);
        this.vertexSrc = ["attribute vec2 openfl_aPosition;", "attribute vec2 openfl_aTexCoord0;", "attribute vec4 openfl_aColor;", "uniform mat3 openfl_uProjectionMatrix;", "varying vec2 vTexCoord;", "varying vec4 vColor;", "void main(void) {", "   gl_Position = vec4((openfl_uProjectionMatrix * vec3(openfl_aPosition, 1.0)).xy, 0.0, 1.0);", "   vTexCoord = openfl_aTexCoord0;", "   vColor = openfl_aColor.bgra;", "}"];
        this.fragmentSrc = ["#ifdef GL_ES", "precision lowp float;", "#endif", "uniform sampler2D openfl_uSampler0;", "uniform vec3 openfl_uColor;", "uniform bool openfl_uUseTexture;", "uniform float openfl_uAlpha;", "uniform vec4 openfl_uColorMultiplier;", "uniform vec4 openfl_uColorOffset;", "varying vec2 vTexCoord;", "varying vec4 vColor;", "vec4 tmp;", "vec4 colorTransform(const vec4 color, const vec4 tint, const vec4 multiplier, const vec4 offset) {", "   vec4 unmultiply = vec4(color.rgb / color.a, color.a);", "   vec4 result = unmultiply * tint * multiplier;", "   result = result + offset;", "   result = clamp(result, 0., 1.);", "   result = vec4(result.rgb * result.a, result.a);", "   return result;", "}", "void main(void) {", "   if(openfl_uUseTexture) {", "       tmp = texture2D(openfl_uSampler0, vTexCoord);", "   } else {", "       tmp = vec4(openfl_uColor, 1.);", "   }", "   gl_FragColor = colorTransform(tmp, vColor, openfl_uColorMultiplier, openfl_uColorOffset);", "}"];
        this.init()
    };
    nt["openfl._internal.renderer.opengl.shaders2.DrawTrianglesShader"] = bS;
    bS.__name__ = ["openfl", "_internal", "renderer", "opengl", "shaders2", "DrawTrianglesShader"];
    bS.__super__ = g5;
    bS.prototype = lP(g5.prototype, {
        init: function(i) {
            if (i == null) {
                i = false
            }
            g5.prototype.init.call(this, i);
            this.getAttribLocation("openfl_aPosition");
            this.getAttribLocation("openfl_aTexCoord0");
            this.getAttribLocation("openfl_aColor");
            this.getUniformLocation("openfl_uSampler0");
            this.getUniformLocation("openfl_uProjectionMatrix");
            this.getUniformLocation("openfl_uColor");
            this.getUniformLocation("openfl_uAlpha");
            this.getUniformLocation("openfl_uUseTexture");
            this.getUniformLocation("openfl_uColorMultiplier");
            this.getUniformLocation("openfl_uColorOffset")
        },
        __class__: bS
    });
    var qE = function(i) {
        g5.call(this, i);
        this.vertexSrc = ["attribute vec2 openfl_aPosition;", "uniform mat3 openfl_uTranslationMatrix;", "uniform mat3 openfl_uProjectionMatrix;", "uniform vec4 openfl_uColor;", "uniform float openfl_uAlpha;", "uniform vec4 openfl_uColorMultiplier;", "uniform vec4 openfl_uColorOffset;", "varying vec4 vColor;", "vec4 colorTransform(const vec4 color, const float alpha, const vec4 multiplier, const vec4 offset) {", "   vec4 result = color * multiplier;", "   result.a *= alpha;", "   result = result + offset;", "   result = clamp(result, 0., 1.);", "   result = vec4(result.rgb * result.a, result.a);", "   return result;", "}", "void main(void) {", "   gl_Position = vec4((openfl_uProjectionMatrix * openfl_uTranslationMatrix * vec3(openfl_aPosition, 1.0)).xy, 0.0, 1.0);", "   vColor = colorTransform(openfl_uColor, openfl_uAlpha, openfl_uColorMultiplier, openfl_uColorOffset);", "}"];
        this.fragmentSrc = ["#ifdef GL_ES", "precision lowp float;", "#endif", "varying vec4 vColor;", "void main(void) {", "   gl_FragColor = vColor;", "}"];
        this.init()
    };
    nt["openfl._internal.renderer.opengl.shaders2.FillShader"] = qE;
    qE.__name__ = ["openfl", "_internal", "renderer", "opengl", "shaders2", "FillShader"];
    qE.__super__ = g5;
    qE.prototype = lP(g5.prototype, {
        init: function(i) {
            if (i == null) {
                i = false
            }
            g5.prototype.init.call(this, i);
            this.getAttribLocation("openfl_aPosition");
            this.getUniformLocation("openfl_uTranslationMatrix");
            this.getUniformLocation("openfl_uProjectionMatrix");
            this.getUniformLocation("openfl_uColor");
            this.getUniformLocation("openfl_uColorMultiplier");
            this.getUniformLocation("openfl_uColorOffset")
        },
        __class__: qE
    });
    var aA = function(i) {
        g5.call(this, i);
        this.vertexSrc = ["attribute vec2 openfl_aPosition;", "uniform mat3 openfl_uTranslationMatrix;", "uniform mat3 openfl_uProjectionMatrix;", "uniform mat3 openfl_uPatternMatrix;", "varying vec2 vPosition;", "void main(void) {", "   gl_Position = vec4((openfl_uProjectionMatrix * openfl_uTranslationMatrix * vec3(openfl_aPosition, 1.0)).xy, 0.0, 1.0);", "   vPosition = (openfl_uPatternMatrix * vec3(openfl_aPosition, 1)).xy;", "}"];
        this.fragmentSrc = ["#ifdef GL_ES", "precision lowp float;", "#endif", "uniform float openfl_uAlpha;", "uniform vec2 openfl_uPatternTL;", "uniform vec2 openfl_uPatternBR;", "uniform sampler2D openfl_uSampler0;", "uniform vec4 openfl_uColorMultiplier;", "uniform vec4 openfl_uColorOffset;", "varying vec2 vPosition;", "vec4 colorTransform(const vec4 color, const float alpha, const vec4 multiplier, const vec4 offset) {", "   vec4 unmultiply = vec4(color.rgb / color.a, color.a);", "   vec4 result = unmultiply * multiplier;", "   result.a *= alpha;", "   result = result + offset;", "   result = clamp(result, 0., 1.);", "   result = vec4(result.rgb * result.a, result.a);", "   return result;", "}", "void main(void) {", "   vec2 pos = mix(openfl_uPatternTL, openfl_uPatternBR, vPosition);", "   vec4 tcol = texture2D(openfl_uSampler0, pos);", "   gl_FragColor = colorTransform(tcol, openfl_uAlpha, openfl_uColorMultiplier, openfl_uColorOffset);", "}"];
        this.init()
    };
    nt["openfl._internal.renderer.opengl.shaders2.PatternFillShader"] = aA;
    aA.__name__ = ["openfl", "_internal", "renderer", "opengl", "shaders2", "PatternFillShader"];
    aA.__super__ = g5;
    aA.prototype = lP(g5.prototype, {
        init: function(i) {
            if (i == null) {
                i = false
            }
            g5.prototype.init.call(this, i);
            this.getAttribLocation("openfl_aPosition");
            this.getUniformLocation("openfl_uTranslationMatrix");
            this.getUniformLocation("openfl_uPatternMatrix");
            this.getUniformLocation("openfl_uProjectionMatrix");
            this.getUniformLocation("openfl_uSampler0");
            this.getUniformLocation("openfl_uPatternTL");
            this.getUniformLocation("openfl_uPatternBR");
            this.getUniformLocation("openfl_uAlpha");
            this.getUniformLocation("openfl_uColorMultiplier");
            this.getUniformLocation("openfl_uColorOffset")
        },
        __class__: aA
    });
    var d2 = function(i) {
        g5.call(this, i);
        this.vertexSrc = ["attribute vec2 openfl_aPosition;", "attribute vec4 openfl_aColor;", "uniform mat3 openfl_uTranslationMatrix;", "uniform mat3 openfl_uProjectionMatrix;", "uniform vec4 openfl_uColorMultiplier;", "uniform vec4 openfl_uColorOffset;", "uniform float openfl_uAlpha;", "varying vec4 vColor;", "vec4 colorTransform(const vec4 color, const float alpha, const vec4 multiplier, const vec4 offset) {", "   vec4 result = color * multiplier;", "   result.a *= alpha;", "   result = result + offset;", "   result = clamp(result, 0., 1.);", "   result = vec4(result.rgb * result.a, result.a);", "   return result;", "}", "void main(void) {", "   gl_Position = vec4((openfl_uProjectionMatrix * openfl_uTranslationMatrix * vec3(openfl_aPosition, 1.0)).xy, 0.0, 1.0);", "   vColor = colorTransform(openfl_aColor, openfl_uAlpha, openfl_uColorMultiplier, openfl_uColorOffset);", "}"];
        this.fragmentSrc = ["#ifdef GL_ES", "precision lowp float;", "#endif", "varying vec4 vColor;", "void main(void) {", "   gl_FragColor = vColor;", "}"];
        this.init()
    };
    nt["openfl._internal.renderer.opengl.shaders2.PrimitiveShader"] = d2;
    d2.__name__ = ["openfl", "_internal", "renderer", "opengl", "shaders2", "PrimitiveShader"];
    d2.__super__ = g5;
    d2.prototype = lP(g5.prototype, {
        init: function(i) {
            if (i == null) {
                i = false
            }
            g5.prototype.init.call(this, i);
            this.getAttribLocation("openfl_aPosition");
            this.getAttribLocation("openfl_aColor");
            this.getUniformLocation("openfl_uTranslationMatrix");
            this.getUniformLocation("openfl_uProjectionMatrix");
            this.getUniformLocation("openfl_uAlpha");
            this.getUniformLocation("openfl_uColorMultiplier");
            this.getUniformLocation("openfl_uColorOffset")
        },
        __class__: d2
    });
    var lh = function(i) {
        this.gl = i;
        this.currentBlendMode = null
    };
    nt["openfl._internal.renderer.opengl.utils.BlendModeManager"] = lh;
    lh.__name__ = ["openfl", "_internal", "renderer", "opengl", "utils", "BlendModeManager"];
    lh.prototype = {
        currentBlendMode: null,
        gl: null,
        destroy: function() {
            this.gl = null
        },
        setBlendMode: function(i, q) {
            if (q == null) {
                q = false
            }
            if (i == null) {
                i = 10;
                q = true
            }
            if (!q && this.currentBlendMode == i) {
                return false
            }
            this.currentBlendMode = i;
            switch (i) {
                case 0:
                    this.gl.blendEquation(32774);
                    this.gl.blendFunc(1, 1);
                    break;
                case 9:
                    this.gl.blendEquation(32774);
                    this.gl.blendFunc(774, 771);
                    break;
                case 12:
                    this.gl.blendEquation(32774);
                    this.gl.blendFunc(1, 769);
                    break;
                case 14:
                    this.gl.blendEquation(32779);
                    this.gl.blendFunc(1, 1);
                    break;
                default:
                    this.gl.blendEquation(32774);
                    this.gl.blendFunc(1, 771)
            }
            return true
        },
        __class__: lh
    };
    var qH = function(i) {
        if (i == null) {
            i = true
        }
        this.type = eh.Polygon;
        this.points = null;
        this.winding = 0;
        this.isRemovable = true;
        this.fillIndex = 0;
        this.line = new gN();
        this.fill = bP.None;
        if (i) {
            this.points = []
        }
    };
    nt["openfl._internal.renderer.opengl.utils.DrawPath"] = qH;
    qH.__name__ = ["openfl", "_internal", "renderer", "opengl", "utils", "DrawPath"];
    qH.getStack = function(i, q) {
        return dX.build(i, q)
    };
    qH.prototype = {
        line: null,
        fill: null,
        fillIndex: null,
        isRemovable: null,
        winding: null,
        points: null,
        type: null,
        update: function(q, i2, i, i1) {
            this.updateLine(q);
            this.fill = i2;
            this.fillIndex = i;
            this.winding = i1
        },
        updateLine: function(i) {
            this.line.width = i.width;
            this.line.color = i.color;
            if (i.alpha == null) {
                this.line.alpha = 1
            } else {
                this.line.alpha = i.alpha
            }
            if (i.scaleMode == null) {
                this.line.scaleMode = 2
            } else {
                this.line.scaleMode = i.scaleMode
            }
            if (i.caps == null) {
                this.line.caps = 1
            } else {
                this.line.caps = i.caps
            }
            if (i.joints == null) {
                this.line.joints = 2
            } else {
                this.line.joints = i.joints
            }
            this.line.miterLimit = i.miterLimit
        },
        __class__: qH
    };
    var dX = function() {};
    nt["openfl._internal.renderer.opengl.utils.PathBuiler"] = dX;
    dX.__name__ = ["openfl", "_internal", "renderer", "opengl", "utils", "PathBuiler"];
    dX.__currentPath = null;
    dX.__drawPaths = null;
    dX.__line = null;
    dX.__fill = null;
    dX.closePath = function() {
        var i;
        if (dX.__currentPath.points == null) {
            i = 0
        } else {
            i = dX.__currentPath.points.length
        }
        if (i <= 0) {
            return
        }
        if (dX.__currentPath.type == eh.Polygon && dX.__currentPath.fill != bP.None) {
            var js = dX.__currentPath.points[0];
            var i2 = dX.__currentPath.points[1];
            var i1 = dX.__currentPath.points[i - 2];
            var q = dX.__currentPath.points[i - 1];
            if (!(js == i1 && i2 == q)) {
                dX.lineTo(js, i2)
            }
        }
    };
    dX.endFill = function() {
        dX.__fill = bP.None;
        dX.__fillIndex++
    };
    dX.moveTo = function(i, q) {
        if (dX.__currentPath.isRemovable && (dX.__currentPath.points == null || dX.__currentPath.points.length == 0)) {
            dX.__drawPaths.pop()
        } else {
            dX.closePath()
        }
        dX.__currentPath = new qH();
        dX.__currentPath.update(dX.__line, dX.__fill, dX.__fillIndex, dX.__currentWinding);
        dX.__currentPath.type = eh.Polygon;
        dX.__currentPath.points.push(i);
        dX.__currentPath.points.push(q);
        dX.__drawPaths.push(dX.__currentPath)
    };
    dX.lineTo = function(i, qY) {
        var i1 = dX.__currentPath.points;
        var q = true;
        if (i1.length > 1) {
            var js = i1[i1.length - 2];
            var i2 = i1[i1.length - 1];
            if (js == i && i2 == qY) {
                q = false
            }
        }
        if (q == true) {
            dX.__currentPath.points.push(i);
            dX.__currentPath.points.push(qY)
        }
    };
    dX.curveTo = function(q, i2, i, i1) {
        if (dX.__currentPath.points == null || dX.__currentPath.points.length == 0) {
            if (dX.__currentPath.isRemovable && (dX.__currentPath.points == null || dX.__currentPath.points.length == 0)) {
                dX.__drawPaths.pop()
            } else {
                dX.closePath()
            }
            dX.__currentPath = new qH();
            dX.__currentPath.update(dX.__line, dX.__fill, dX.__fillIndex, dX.__currentWinding);
            dX.__currentPath.type = eh.Polygon;
            dX.__currentPath.points.push(0);
            dX.__currentPath.points.push(0);
            dX.__drawPaths.push(dX.__currentPath)
        }
        aD.curveTo(dX.__currentPath.points, q, i2, i, i1)
    };
    dX.cubicCurveTo = function(q, qY, i1, i2, i, js) {
        if (dX.__currentPath.points == null || dX.__currentPath.points.length == 0) {
            if (dX.__currentPath.isRemovable && (dX.__currentPath.points == null || dX.__currentPath.points.length == 0)) {
                dX.__drawPaths.pop()
            } else {
                dX.closePath()
            }
            dX.__currentPath = new qH();
            dX.__currentPath.update(dX.__line, dX.__fill, dX.__fillIndex, dX.__currentWinding);
            dX.__currentPath.type = eh.Polygon;
            dX.__currentPath.points.push(0);
            dX.__currentPath.points.push(0);
            dX.__drawPaths.push(dX.__currentPath)
        }
        aD.cubicCurveTo(dX.__currentPath.points, q, qY, i1, i2, i, js)
    };
    dX.graphicDataPop = function() {
        if (dX.__currentPath.isRemovable && (dX.__currentPath.points == null || dX.__currentPath.points.length == 0)) {
            dX.__drawPaths.pop()
        } else {
            dX.closePath()
        }
    };
    dX.build = function(ru, r5) {
        var q4 = null;
        var q3 = ru.__bounds;
        dX.__drawPaths = [];
        dX.__currentPath = new qH();
        dX.__line = new gN();
        dX.__fill = bP.None;
        dX.__fillIndex = 0;
        q4 = ru.__glStack[mA.glContextId];
        if (q4 == null) {
            q4 = ru.__glStack[mA.glContextId] = new mX(r5)
        }
        if (!ru.__visible || ru.__commands.get_length() == 0 || q3 == null || q3.width == 0 || q3.height == 0) {} else {
            var q7 = new k8(ru.__commands);
            var qY = 0;
            var qZ = ru.__commands.types;
            while (qY < qZ.length) {
                var rB = qZ[qY];
                ++qY;
                switch (rB[1]) {
                    case 0:
                        var rv = q7.readBeginBitmapFill();
                        dX.endFill();
                        if (i8.get_bitmap(rv) != null) {
                            dX.__fill = bP.Texture(i8.get_bitmap(rv), i8.get_matrix(rv), i8.get_repeat(rv), i8.get_smooth(rv))
                        } else {
                            dX.__fill = bP.None
                        }
                        if (dX.__currentPath.points == null || dX.__currentPath.points.length == 0) {
                            if (dX.__currentPath.isRemovable && (dX.__currentPath.points == null || dX.__currentPath.points.length == 0)) {
                                dX.__drawPaths.pop()
                            } else {
                                dX.closePath()
                            }
                            dX.__currentPath = new qH();
                            dX.__currentPath.update(dX.__line, dX.__fill, dX.__fillIndex, dX.__currentWinding);
                            dX.__currentPath.points = [];
                            dX.__currentPath.type = eh.Polygon;
                            dX.__drawPaths.push(dX.__currentPath)
                        }
                        break;
                    case 1:
                        var rZ = q7.readBeginFill();
                        dX.endFill();
                        if (pc.get_alpha(rZ) > 0) {
                            dX.__fill = bP.Color(pc.get_color(rZ) & 16777215, pc.get_alpha(rZ))
                        } else {
                            dX.__fill = bP.None
                        }
                        if (dX.__currentPath.points == null || dX.__currentPath.points.length == 0) {
                            if (dX.__currentPath.isRemovable && (dX.__currentPath.points == null || dX.__currentPath.points.length == 0)) {
                                dX.__drawPaths.pop()
                            } else {
                                dX.closePath()
                            }
                            dX.__currentPath = new qH();
                            dX.__currentPath.update(dX.__line, dX.__fill, dX.__fillIndex, dX.__currentWinding);
                            dX.__currentPath.points = [];
                            dX.__currentPath.type = eh.Polygon;
                            dX.__drawPaths.push(dX.__currentPath)
                        }
                        break;
                    case 3:
                        var rX = q7.readCubicCurveTo();
                        dX.cubicCurveTo(ba.get_controlX1(rX), ba.get_controlY1(rX), ba.get_controlX2(rX), ba.get_controlY2(rX), ba.get_anchorX(rX), ba.get_anchorY(rX));
                        break;
                    case 4:
                        var rW = q7.readCurveTo();
                        dX.curveTo(k7.get_controlX(rW), k7.get_controlY(rW), k7.get_anchorX(rW), k7.get_anchorY(rW));
                        break;
                    case 5:
                        var rU = q7.readDrawCircle();
                        if (dX.__currentPath.isRemovable && (dX.__currentPath.points == null || dX.__currentPath.points.length == 0)) {
                            dX.__drawPaths.pop()
                        } else {
                            dX.closePath()
                        }
                        dX.__currentPath = new qH();
                        dX.__currentPath.update(dX.__line, dX.__fill, dX.__fillIndex, dX.__currentWinding);
                        dX.__currentPath.type = eh.Circle;
                        dX.__currentPath.points = [p4.get_x(rU), p4.get_y(rU), p4.get_radius(rU)];
                        dX.__drawPaths.push(dX.__currentPath);
                        break;
                    case 6:
                        var rS = q7.readDrawEllipse();
                        if (dX.__currentPath.isRemovable && (dX.__currentPath.points == null || dX.__currentPath.points.length == 0)) {
                            dX.__drawPaths.pop()
                        } else {
                            dX.closePath()
                        }
                        dX.__currentPath = new qH();
                        dX.__currentPath.update(dX.__line, dX.__fill, dX.__fillIndex, dX.__currentWinding);
                        dX.__currentPath.type = eh.Ellipse;
                        dX.__currentPath.points = [jF.get_x(rS), jF.get_y(rS), jF.get_width(rS), jF.get_height(rS)];
                        dX.__drawPaths.push(dX.__currentPath);
                        break;
                    case 8:
                        var rR = q7.readDrawRect();
                        if (dX.__currentPath.isRemovable && (dX.__currentPath.points == null || dX.__currentPath.points.length == 0)) {
                            dX.__drawPaths.pop()
                        } else {
                            dX.closePath()
                        }
                        dX.__currentPath = new qH();
                        dX.__currentPath.update(dX.__line, dX.__fill, dX.__fillIndex, dX.__currentWinding);
                        dX.__currentPath.type = eh.Rectangle(false);
                        dX.__currentPath.points = [nI.get_x(rR), nI.get_y(rR), nI.get_width(rR), nI.get_height(rR)];
                        dX.__drawPaths.push(dX.__currentPath);
                        break;
                    case 9:
                        var rQ = q7.readDrawRoundRect();
                        var ri = qg.get_x(rQ);
                        var rh = qg.get_y(rQ);
                        var r6 = qg.get_width(rQ);
                        var q6 = qg.get_height(rQ);
                        var r9 = qg.get_ellipseWidth(rQ);
                        var r8 = qg.get_ellipseHeight(rQ);
                        if (r8 == null) {
                            r8 = r9
                        }
                        r9 *= 0.5;
                        r8 *= 0.5;
                        if (r9 > r6 / 2) {
                            r9 = r6 / 2
                        }
                        if (r8 > q6 / 2) {
                            r8 = q6 / 2
                        }
                        if (dX.__currentPath.isRemovable && (dX.__currentPath.points == null || dX.__currentPath.points.length == 0)) {
                            dX.__drawPaths.pop()
                        } else {
                            dX.closePath()
                        }
                        dX.__currentPath = new qH();
                        dX.__currentPath.update(dX.__line, dX.__fill, dX.__fillIndex, dX.__currentWinding);
                        dX.__currentPath.type = eh.Rectangle(true);
                        dX.__currentPath.points = [ri, rh, r6, q6, r9, r8];
                        dX.__drawPaths.push(dX.__currentPath);
                        break;
                    case 12:
                        var rP = q7.readEndFill();
                        dX.endFill();
                        break;
                    case 15:
                        var rN = q7.readLineStyle();
                        dX.__line = new gN();
                        if (am.get_thickness(rN) == null || (function(rx) {
                                var i;
                                var i1 = am.get_thickness(rN);
                                i = isNaN(i1);
                                return i
                            }(this)) || am.get_thickness(rN) < 0) {
                            dX.__line.width = 0
                        } else {
                            if (am.get_thickness(rN) == 0) {
                                dX.__line.width = 1
                            } else {
                                dX.__line.width = am.get_thickness(rN)
                            }
                        }
                        if (dX.__currentPath.isRemovable && (dX.__currentPath.points == null || dX.__currentPath.points.length == 0)) {
                            dX.__drawPaths.pop()
                        } else {
                            dX.closePath()
                        }
                        dX.__line.color = am.get_color(rN);
                        dX.__line.alpha = am.get_alpha(rN);
                        dX.__line.scaleMode = am.get_scaleMode(rN);
                        dX.__line.caps = am.get_caps(rN);
                        dX.__line.joints = am.get_joints(rN);
                        dX.__line.miterLimit = am.get_miterLimit(rN);
                        dX.__currentPath = new qH();
                        dX.__currentPath.update(dX.__line, dX.__fill, dX.__fillIndex, dX.__currentWinding);
                        dX.__currentPath.points = [];
                        dX.__currentPath.type = eh.Polygon;
                        dX.__drawPaths.push(dX.__currentPath);
                        break;
                    case 16:
                        var r2 = q7.readLineTo();
                        dX.lineTo(aF.get_x(r2), aF.get_y(r2));
                        break;
                    case 17:
                        var r1 = q7.readMoveTo();
                        dX.moveTo(eE.get_x(r1), eE.get_y(r1));
                        break;
                    case 11:
                        var r0 = q7.readDrawTriangles();
                        var q2 = d7.get_uvtData(r0);
                        var rC = d7.get_vertices(r0);
                        var rb = d7.get_indices(r0);
                        var rg = d7.get_culling(r0);
                        var rz;
                        var js = dX.__fill;
                        switch (js[1]) {
                            case 1:
                                rz = true;
                                break;
                            default:
                                rz = false
                        }
                        if (rz && q2 != null) {
                            continue
                        }
                        if (dX.__currentPath.isRemovable && (dX.__currentPath.points == null || dX.__currentPath.points.length == 0)) {
                            dX.__drawPaths.pop()
                        } else {
                            dX.closePath()
                        }
                        dX.__currentPath = new qH();
                        dX.__currentPath.update(dX.__line, dX.__fill, dX.__fillIndex, dX.__currentWinding);
                        if (q2 == null) {
                            var rO;
                            rO = new p0();
                            var rM;
                            rM = new Array(0);
                            rO.data = rM;
                            rO.length = 0;
                            rO.fixed = false;
                            q2 = rO;
                            var sc = dX.__fill;
                            switch (sc[1]) {
                                case 2:
                                    var rw = sc[2];
                                    var q = 0;
                                    var i2 = rC.length / 2 | 0;
                                    while (q < i2) {
                                        var rt = q++;
                                        if (!q2.fixed) {
                                            q2.length++;
                                            if (q2.data.length < q2.length) {
                                                var q1;
                                                var rK;
                                                rK = new Array(q2.data.length + 10);
                                                q1 = rK;
                                                dQ.blit(q2.data, 0, q1, 0, q2.data.length);
                                                q2.data = q1
                                            }
                                            q2.data[q2.length - 1] = rC.data[rt * 2] / rw.width
                                        }
                                        q2.length;
                                        if (!q2.fixed) {
                                            q2.length++;
                                            if (q2.data.length < q2.length) {
                                                var q0;
                                                var rI;
                                                rI = new Array(q2.data.length + 10);
                                                q0 = rI;
                                                dQ.blit(q2.data, 0, q0, 0, q2.data.length);
                                                q2.data = q0
                                            }
                                            q2.data[q2.length - 1] = rC.data[rt * 2 + 1] / rw.height
                                        }
                                        q2.length
                                    }
                                    break;
                                default:
                            }
                        }
                        dX.__currentPath.type = eh.DrawTriangles(rC, rb, q2, rg, null, 0);
                        dX.__currentPath.isRemovable = false;
                        dX.__drawPaths.push(dX.__currentPath);
                        break;
                    case 10:
                        var rY = q7.readDrawTiles();
                        if (dX.__currentPath.isRemovable && (dX.__currentPath.points == null || dX.__currentPath.points.length == 0)) {
                            dX.__drawPaths.pop()
                        } else {
                            dX.closePath()
                        }
                        dX.__fillIndex++;
                        dX.__currentPath = new qH(false);
                        dX.__currentPath.update(dX.__line, dX.__fill, dX.__fillIndex, dX.__currentWinding);
                        dX.__currentPath.type = eh.DrawTiles(pQ.get_sheet(rY), pQ.get_tileData(rY), pQ.get_smooth(rY), pQ.get_flags(rY), pQ.get_shader(rY), pQ.get_count(rY));
                        dX.__currentPath.isRemovable = false;
                        dX.__drawPaths.push(dX.__currentPath);
                        break;
                    case 7:
                        var rV = q7.readDrawPath();
                        if (dX.__currentPath.isRemovable && (dX.__currentPath.points == null || dX.__currentPath.points.length == 0)) {
                            dX.__drawPaths.pop()
                        } else {
                            dX.closePath()
                        }
                        var sb = ah.get_winding(rV);
                        switch (sb) {
                            case "evenOdd":
                                dX.__currentWinding = 0;
                                break;
                            case "nonZero":
                                dX.__currentWinding = 1;
                                break;
                            default:
                                dX.__currentWinding = 0
                        }
                        var rA;
                        var rf;
                        var re;
                        var q5;
                        var sd;
                        var rL;
                        var rJ;
                        var r7 = 0;
                        var r4 = 0;
                        var sa;
                        var rH = ah.get_commands(rV);
                        sa = rH.length;
                        while (r4 < sa) {
                            var r3 = r4++;
                            var rG = ah.get_commands(rV);
                            rA = rG.data[r3];
                            switch (rA) {
                                case 1:
                                    var rF = ah.get_data(rV);
                                    rL = rF.data[r7];
                                    var rE = ah.get_data(rV);
                                    rJ = rE.data[r7 + 1];
                                    r7 += 2;
                                    if (dX.__currentPath.isRemovable && (dX.__currentPath.points == null || dX.__currentPath.points.length == 0)) {
                                        dX.__drawPaths.pop()
                                    } else {
                                        dX.closePath()
                                    }
                                    dX.__currentPath = new qH();
                                    dX.__currentPath.update(dX.__line, dX.__fill, dX.__fillIndex, dX.__currentWinding);
                                    dX.__currentPath.type = eh.Polygon;
                                    dX.__currentPath.points.push(rL);
                                    dX.__currentPath.points.push(rJ);
                                    dX.__drawPaths.push(dX.__currentPath);
                                    break;
                                case 4:
                                    var rD = ah.get_data(rV);
                                    rL = rD.data[r7 + 2];
                                    var rs = ah.get_data(rV);
                                    rJ = rs.data[r7 + 3];
                                    r7 += 4;
                                    if (dX.__currentPath.isRemovable && (dX.__currentPath.points == null || dX.__currentPath.points.length == 0)) {
                                        dX.__drawPaths.pop()
                                    } else {
                                        dX.closePath()
                                    }
                                    dX.__currentPath = new qH();
                                    dX.__currentPath.update(dX.__line, dX.__fill, dX.__fillIndex, dX.__currentWinding);
                                    dX.__currentPath.type = eh.Polygon;
                                    dX.__currentPath.points.push(rL);
                                    dX.__currentPath.points.push(rJ);
                                    dX.__drawPaths.push(dX.__currentPath);
                                    break;
                                case 2:
                                    var rr = ah.get_data(rV);
                                    rL = rr.data[r7];
                                    var rq = ah.get_data(rV);
                                    rJ = rq.data[r7 + 1];
                                    r7 += 2;
                                    dX.lineTo(rL, rJ);
                                    break;
                                case 5:
                                    var rp = ah.get_data(rV);
                                    rL = rp.data[r7 + 2];
                                    var ro = ah.get_data(rV);
                                    rJ = ro.data[r7 + 3];
                                    r7 += 4;
                                    dX.lineTo(rL, rJ);
                                    break;
                                case 3:
                                    var rn = ah.get_data(rV);
                                    rf = rn.data[r7];
                                    var rm = ah.get_data(rV);
                                    re = rm.data[r7 + 1];
                                    var rl = ah.get_data(rV);
                                    rL = rl.data[r7 + 2];
                                    var rk = ah.get_data(rV);
                                    rJ = rk.data[r7 + 3];
                                    r7 += 4;
                                    if (dX.__currentPath.points == null || dX.__currentPath.points.length == 0) {
                                        if (dX.__currentPath.isRemovable && (dX.__currentPath.points == null || dX.__currentPath.points.length == 0)) {
                                            dX.__drawPaths.pop()
                                        } else {
                                            dX.closePath()
                                        }
                                        dX.__currentPath = new qH();
                                        dX.__currentPath.update(dX.__line, dX.__fill, dX.__fillIndex, dX.__currentWinding);
                                        dX.__currentPath.type = eh.Polygon;
                                        dX.__currentPath.points.push(0);
                                        dX.__currentPath.points.push(0);
                                        dX.__drawPaths.push(dX.__currentPath)
                                    }
                                    aD.curveTo(dX.__currentPath.points, rf, re, rL, rJ);
                                    break;
                                case 6:
                                    var rj = ah.get_data(rV);
                                    rf = rj.data[r7];
                                    var rd = ah.get_data(rV);
                                    re = rd.data[r7 + 1];
                                    var rc = ah.get_data(rV);
                                    q5 = rc.data[r7 + 2];
                                    var ra = ah.get_data(rV);
                                    sd = ra.data[r7 + 3];
                                    var q9 = ah.get_data(rV);
                                    rL = q9.data[r7 + 4];
                                    var q8 = ah.get_data(rV);
                                    rJ = q8.data[r7 + 5];
                                    r7 += 6;
                                    if (dX.__currentPath.points == null || dX.__currentPath.points.length == 0) {
                                        if (dX.__currentPath.isRemovable && (dX.__currentPath.points == null || dX.__currentPath.points.length == 0)) {
                                            dX.__drawPaths.pop()
                                        } else {
                                            dX.closePath()
                                        }
                                        dX.__currentPath = new qH();
                                        dX.__currentPath.update(dX.__line, dX.__fill, dX.__fillIndex, dX.__currentWinding);
                                        dX.__currentPath.type = eh.Polygon;
                                        dX.__currentPath.points.push(0);
                                        dX.__currentPath.points.push(0);
                                        dX.__drawPaths.push(dX.__currentPath)
                                    }
                                    aD.cubicCurveTo(dX.__currentPath.points, rf, re, q5, sd, rL, rJ);
                                    break;
                                default:
                            }
                        }
                        dX.__currentWinding = 0;
                        break;
                    case 18:
                        var rT = q7.readOverrideMatrix();
                        if (dX.__currentPath.isRemovable && (dX.__currentPath.points == null || dX.__currentPath.points.length == 0)) {
                            dX.__drawPaths.pop()
                        } else {
                            dX.closePath()
                        }
                        dX.__currentPath = new qH();
                        dX.__currentPath.update(dX.__line, dX.__fill, dX.__fillIndex, dX.__currentWinding);
                        dX.__currentPath.type = eh.OverrideMatrix(mn.get_matrix(rT));
                        dX.__currentPath.isRemovable = false;
                        dX.__drawPaths.push(dX.__currentPath);
                        break;
                    default:
                        q7.skip(rB)
                }
            }
            dX.closePath();
            q7.destroy()
        }
        ru.__drawPaths = dX.__drawPaths;
        return q4
    };
    var gN = function() {
        this.width = 0;
        this.color = 0;
        this.alpha = 1;
        this.scaleMode = 2;
        this.caps = 1;
        this.joints = 2;
        this.miterLimit = 3
    };
    nt["openfl._internal.renderer.opengl.utils.LineStyle"] = gN;
    gN.__name__ = ["openfl", "_internal", "renderer", "opengl", "utils", "LineStyle"];
    gN.prototype = {
        width: null,
        color: null,
        alpha: null,
        scaleMode: null,
        caps: null,
        joints: null,
        miterLimit: null,
        __class__: gN
    };
    var bP = nt["openfl._internal.renderer.opengl.utils.FillType"] = {
        __ename__: ["openfl", "_internal", "renderer", "opengl", "utils", "FillType"],
        __constructs__: ["None", "Color", "Texture", "Gradient"]
    };
    bP.None = ["None", 0];
    bP.None.toString = ea;
    bP.None.__enum__ = bP;
    bP.Color = function(i, i1) {
        var q = ["Color", 1, i, i1];
        q.__enum__ = bP;
        q.toString = ea;
        return q
    };
    bP.Texture = function(js, q, i2, i) {
        var i1 = ["Texture", 2, js, q, i2, i];
        i1.__enum__ = bP;
        i1.toString = ea;
        return i1
    };
    bP.Gradient = ["Gradient", 3];
    bP.Gradient.toString = ea;
    bP.Gradient.__enum__ = bP;
    var jf = function(q, i) {
        this.transparent = i;
        this.filterStack = [];
        this.offsetX = 0;
        this.offsetY = 0;
        this.setContext(q)
    };
    nt["openfl._internal.renderer.opengl.utils.FilterManager"] = jf;
    jf.__name__ = ["openfl", "_internal", "renderer", "opengl", "utils", "FilterManager"];
    jf.prototype = {
        buffer: null,
        colorArray: null,
        colorBuffer: null,
        defaultShader: null,
        filterStack: null,
        gl: null,
        height: null,
        indexBuffer: null,
        offsetX: null,
        offsetY: null,
        renderSession: null,
        texturePool: null,
        transparent: null,
        uvArray: null,
        uvBuffer: null,
        vertexArray: null,
        vertexBuffer: null,
        width: null,
        applyFilterPass: function(i1, i2, q, i) {},
        begin: function(q, i) {
            this.renderSession = q;
            this.defaultShader = q.shaderManager.defaultShader;
            this.width = 0;
            this.height = 0;
            this.buffer = i
        },
        destroy: function() {
            var i2 = this.gl;
            this.filterStack = null;
            this.offsetX = 0;
            this.offsetY = 0;
            var i1 = 0;
            var q = this.texturePool;
            while (i1 < q.length) {
                var i = q[i1];
                ++i1;
                i.destroy()
            }
            this.texturePool = null;
            i2.deleteBuffer(this.vertexBuffer);
            i2.deleteBuffer(this.uvBuffer);
            i2.deleteBuffer(this.colorBuffer);
            i2.deleteBuffer(this.indexBuffer)
        },
        initShaderBuffers: function() {
            var js = this.gl;
            this.vertexBuffer = js.createBuffer();
            this.uvBuffer = js.createBuffer();
            this.colorBuffer = js.createBuffer();
            this.indexBuffer = js.createBuffer();
            var qZ = [0, 0, 1, 0, 0, 1, 1, 1];
            var q;
            if (qZ != null) {
                q = new Float32Array(qZ)
            } else {
                q = null
            }
            this.vertexArray = q;
            js.bindBuffer(js.ARRAY_BUFFER, this.vertexBuffer);
            js.bufferData(js.ARRAY_BUFFER, this.vertexArray, js.STATIC_DRAW);
            var i2 = [0, 0, 1, 0, 0, 1, 1, 1];
            var i;
            if (i2 != null) {
                i = new Float32Array(i2)
            } else {
                i = null
            }
            this.uvArray = i;
            js.bindBuffer(js.ARRAY_BUFFER, this.uvBuffer);
            js.bufferData(js.ARRAY_BUFFER, this.uvArray, js.STATIC_DRAW);
            var i1 = [1, 16777215, 1, 16777215, 1, 16777215, 1, 16777215];
            var qY;
            if (i1 != null) {
                qY = new Float32Array(i1)
            } else {
                qY = null
            }
            this.colorArray = qY;
            js.bindBuffer(js.ARRAY_BUFFER, this.colorBuffer);
            js.bufferData(js.ARRAY_BUFFER, this.colorArray, js.STATIC_DRAW);
            js.bindBuffer(js.ELEMENT_ARRAY_BUFFER, this.indexBuffer);
            js.bufferData(js.ELEMENT_ARRAY_BUFFER, (function(q2) {
                var q0;
                var q1 = [0, 1, 2, 1, 3, 2];
                var q3;
                if (q1 != null) {
                    q3 = new Uint16Array(q1)
                } else {
                    q3 = null
                }
                q0 = q3;
                return q0
            }(this)), js.STATIC_DRAW)
        },
        popFilter: function() {},
        pushFilter: function(i) {},
        setContext: function(i) {
            this.gl = i;
            this.texturePool = [];
            this.initShaderBuffers()
        },
        __class__: jf
    };
    var j1 = function(i) {
        bE.call(this, i);
        this.setContext(i.gl);
        this.clips = []
    };
    nt["openfl._internal.renderer.opengl.utils.GLMaskManager"] = j1;
    j1.__name__ = ["openfl", "_internal", "renderer", "opengl", "utils", "GLMaskManager"];
    j1.__super__ = bE;
    j1.prototype = lP(bE.prototype, {
        gl: null,
        clips: null,
        currentClip: null,
        savedClip: null,
        destroy: function() {
            this.gl = null
        },
        pushRect: function(js, i1) {
            if (js == null) {
                return
            }
            var q = i1.clone();
            qX.flipMatrix(q, this.renderSession.renderer.viewport.height);
            var i2 = js.clone();
            i2.__transform(i2, q);
            if (this.currentClip != null) {
                i2 = this.currentClip.intersection(i2)
            }
            var i = this.currentClip == null || i2.isEmpty() || this.currentClip.containsRect(i2);
            this.clips.push(i2);
            this.currentClip = i2;
            if (i) {
                this.renderSession.spriteBatch.stop();
                this.renderSession.spriteBatch.start(this.currentClip)
            }
        },
        pushMask: function(i) {
            this.renderSession.spriteBatch.stop();
            this.renderSession.stencilManager.pushMask(i, this.renderSession);
            this.renderSession.spriteBatch.start(this.currentClip)
        },
        popMask: function() {
            this.renderSession.spriteBatch.stop();
            this.renderSession.stencilManager.popMask(null, this.renderSession);
            this.renderSession.spriteBatch.start(this.currentClip)
        },
        popRect: function() {
            this.renderSession.spriteBatch.stop();
            this.clips.pop();
            this.currentClip = this.clips[this.clips.length - 1];
            this.renderSession.spriteBatch.start(this.currentClip)
        },
        saveState: function() {
            this.savedClip = this.currentClip;
            this.currentClip = null
        },
        restoreState: function() {
            this.currentClip = this.savedClip;
            this.savedClip = null
        },
        setContext: function(i) {
            if (this.renderSession != null) {
                this.renderSession.gl = i
            }
            this.gl = i
        },
        __class__: j1
    });
    var bo = function(js, i2, qY, i1, q) {
        if (qY == null) {
            qY = false
        }
        this.enabled = true;
        this.normalized = false;
        this.components = js;
        this.type = i2;
        this.normalized = qY;
        this.name = i1;
        if (q == null) {
            var i;
            if (js != null) {
                i = new Float32Array(js)
            } else {
                i = null
            }
            this.defaultValue = i
        } else {
            this.defaultValue = q
        }
    };
    nt["openfl._internal.renderer.opengl.utils.VertexAttribute"] = bo;
    bo.__name__ = ["openfl", "_internal", "renderer", "opengl", "utils", "VertexAttribute"];
    bo.prototype = {
        components: null,
        normalized: null,
        type: null,
        name: null,
        enabled: null,
        defaultValue: null,
        copy: function() {
            return new bo(this.components, this.type, this.normalized, this.name, this.defaultValue)
        },
        getElementsBytes: function() {
            var i = this.type;
            switch (i) {
                case 5120:
                case 5121:
                    return 1;
                case 5122:
                case 5123:
                    return 2;
                default:
                    return 4
            }
        },
        get_elements: function() {
            return Math.floor(this.components * this.getElementsBytes() / 4)
        },
        __class__: bo,
        __properties__: {
            get_elements: "get_elements"
        }
    };
    var gn = function(q, i2, i1, i) {
        if (i == null) {
            i = 0
        }
        if (i1 == null) {
            i1 = 0
        }
        if (i2 == null) {
            i2 = 0
        }
        if (q == null) {
            q = 0
        }
        this.x = q;
        this.y = i2;
        this.width = i1;
        this.height = i
    };
    nt["openfl.geom.Rectangle"] = gn;
    gn.__name__ = ["openfl", "geom", "Rectangle"];
    gn.prototype = {
        height: null,
        width: null,
        x: null,
        y: null,
        clone: function() {
            return new gn(this.x, this.y, this.width, this.height)
        },
        contains: function(i, q) {
            return i >= this.x && q >= this.y && i < this.get_right() && q < this.get_bottom()
        },
        containsPoint: function(i) {
            return this.contains(i.x, i.y)
        },
        containsRect: function(i) {
            if (i.width <= 0 || i.height <= 0) {
                return i.x > this.x && i.y > this.y && i.get_right() < this.get_right() && i.get_bottom() < this.get_bottom()
            } else {
                return i.x >= this.x && i.y >= this.y && i.get_right() <= this.get_right() && i.get_bottom() <= this.get_bottom()
            }
        },
        copyFrom: function(i) {
            this.x = i.x;
            this.y = i.y;
            this.width = i.width;
            this.height = i.height
        },
        equals: function(i) {
            return i != null && this.x == i.x && this.y == i.y && this.width == i.width && this.height == i.height
        },
        inflate: function(q, i) {
            this.x -= q;
            this.width += q * 2;
            this.y -= i;
            this.height += i * 2
        },
        inflatePoint: function(i) {
            this.inflate(i.x, i.y)
        },
        intersection: function(i) {
            var i1;
            if (this.x < i.x) {
                i1 = i.x
            } else {
                i1 = this.x
            }
            var q;
            if (this.get_right() > i.get_right()) {
                q = i.get_right()
            } else {
                q = this.get_right()
            }
            if (q <= i1) {
                return new gn()
            }
            var js;
            if (this.y < i.y) {
                js = i.y
            } else {
                js = this.y
            }
            var i2;
            if (this.get_bottom() > i.get_bottom()) {
                i2 = i.get_bottom()
            } else {
                i2 = this.get_bottom()
            }
            if (i2 <= js) {
                return new gn()
            }
            return new gn(i1, js, q - i1, i2 - js)
        },
        intersects: function(i) {
            var i1;
            if (this.x < i.x) {
                i1 = i.x
            } else {
                i1 = this.x
            }
            var q;
            if (this.get_right() > i.get_right()) {
                q = i.get_right()
            } else {
                q = this.get_right()
            }
            if (q <= i1) {
                return false
            }
            var js;
            if (this.y < i.y) {
                js = i.y
            } else {
                js = this.y
            }
            var i2;
            if (this.get_bottom() > i.get_bottom()) {
                i2 = i.get_bottom()
            } else {
                i2 = this.get_bottom()
            }
            return i2 > js
        },
        isEmpty: function() {
            return this.width <= 0 || this.height <= 0
        },
        offset: function(q, i) {
            this.x += q;
            this.y += i
        },
        offsetPoint: function(i) {
            this.x += i.x;
            this.y += i.y
        },
        setEmpty: function() {
            this.x = this.y = this.width = this.height = 0
        },
        setTo: function(i2, i, q, i1) {
            this.x = i2;
            this.y = i;
            this.width = q;
            this.height = i1
        },
        toString: function() {
            return "(x=" + this.x + ", y=" + this.y + ", width=" + this.width + ", height=" + this.height + ")"
        },
        union: function(i) {
            if (this.width == 0 || this.height == 0) {
                return i.clone()
            } else {
                if (i.width == 0 || i.height == 0) {
                    return this.clone()
                }
            }
            var i1;
            if (this.x > i.x) {
                i1 = i.x
            } else {
                i1 = this.x
            }
            var q;
            if (this.get_right() < i.get_right()) {
                q = i.get_right()
            } else {
                q = this.get_right()
            }
            var js;
            if (this.y > i.y) {
                js = i.y
            } else {
                js = this.y
            }
            var i2;
            if (this.get_bottom() < i.get_bottom()) {
                i2 = i.get_bottom()
            } else {
                i2 = this.get_bottom()
            }
            return new gn(i1, js, q - i1, i2 - js)
        },
        __contract: function(q, qY, i2, i) {
            if (this.width == 0 && this.height == 0) {
                return
            }
            var js = this.get_right();
            var i1 = this.get_bottom();
            if (this.x < q) {
                this.x = q
            }
            if (this.y < qY) {
                this.y = qY
            }
            if (this.get_right() > q + i2) {
                this.width = q + i2 - this.x
            }
            if (this.get_bottom() > qY + i) {
                this.height = qY + i - this.y
            }
        },
        __expand: function(q, qY, i2, i) {
            if (this.width == 0 && this.height == 0) {
                this.x = q;
                this.y = qY;
                this.width = i2;
                this.height = i;
                return
            }
            var js = this.get_right();
            var i1 = this.get_bottom();
            if (this.x > q) {
                this.x = q;
                this.width = js - q
            }
            if (this.y > qY) {
                this.y = qY;
                this.height = i1 - qY
            }
            if (js < q + i2) {
                this.width = q + i2 - this.x
            }
            if (i1 < qY + i) {
                this.height = qY + i - this.y
            }
        },
        __toLimeRectangle: function() {
            return new lj(this.x, this.y, this.width, this.height)
        },
        __transform: function(q0, q) {
            var js = q.a * this.x + q.c * this.y;
            var i2 = js;
            var qZ = q.b * this.x + q.d * this.y;
            var qY = qZ;
            var i1 = q.a * (this.x + this.width) + q.c * this.y;
            var i = q.b * (this.x + this.width) + q.d * this.y;
            if (i1 < js) {
                js = i1
            }
            if (i < qZ) {
                qZ = i
            }
            if (i1 > i2) {
                i2 = i1
            }
            if (i > qY) {
                qY = i
            }
            i1 = q.a * (this.x + this.width) + q.c * (this.y + this.height);
            i = q.b * (this.x + this.width) + q.d * (this.y + this.height);
            if (i1 < js) {
                js = i1
            }
            if (i < qZ) {
                qZ = i
            }
            if (i1 > i2) {
                i2 = i1
            }
            if (i > qY) {
                qY = i
            }
            i1 = q.a * this.x + q.c * (this.y + this.height);
            i = q.b * this.x + q.d * (this.y + this.height);
            if (i1 < js) {
                js = i1
            }
            if (i < qZ) {
                qZ = i
            }
            if (i1 > i2) {
                i2 = i1
            }
            if (i > qY) {
                qY = i
            }
            q0.setTo(js + q.tx, qZ + q.ty, i2 - js, qY - qZ)
        },
        get_bottom: function() {
            return this.y + this.height
        },
        set_bottom: function(i) {
            this.height = i - this.y;
            return i
        },
        get_bottomRight: function() {
            return new pp(this.x + this.width, this.y + this.height)
        },
        set_bottomRight: function(i) {
            this.width = i.x - this.x;
            this.height = i.y - this.y;
            return i.clone()
        },
        get_left: function() {
            return this.x
        },
        set_left: function(i) {
            this.width -= i - this.x;
            this.x = i;
            return i
        },
        get_right: function() {
            return this.x + this.width
        },
        set_right: function(i) {
            this.width = i - this.x;
            return i
        },
        get_size: function() {
            return new pp(this.width, this.height)
        },
        set_size: function(i) {
            this.width = i.x;
            this.height = i.y;
            return i.clone()
        },
        get_top: function() {
            return this.y
        },
        set_top: function(i) {
            this.height -= i - this.y;
            this.y = i;
            return i
        },
        get_topLeft: function() {
            return new pp(this.x, this.y)
        },
        set_topLeft: function(i) {
            this.x = i.x;
            this.y = i.y;
            return i.clone()
        },
        __class__: gn,
        __properties__: {
            set_topLeft: "set_topLeft",
            get_topLeft: "get_topLeft",
            set_top: "set_top",
            get_top: "get_top",
            set_size: "set_size",
            get_size: "get_size",
            set_right: "set_right",
            get_right: "get_right",
            set_left: "set_left",
            get_left: "get_left",
            set_bottomRight: "set_bottomRight",
            get_bottomRight: "get_bottomRight",
            set_bottom: "set_bottom",
            get_bottom: "get_bottom"
        }
    };
    var fW = function() {};
    nt["openfl._internal.renderer.opengl.utils.GraphicsRenderer"] = fW;
    fW.__name__ = ["openfl", "_internal", "renderer", "opengl", "utils", "GraphicsRenderer"];
    fW.lastVertsBuffer = null;
    fW.lastBucketMode = null;
    fW.lastTexture = null;
    fW.lastTextureRepeat = null;
    fW.lastTextureSmooth = null;
    fW.overrideMatrix = null;
    fW.buildCircle = function(q6, q7, q3) {
        if (q3 == null) {
            q3 = false
        }
        var qY = q6.points;
        var q2 = qY[0];
        var q0 = qY[1];
        var i2 = qY[2];
        var i1;
        if (qY.length == 3) {
            i1 = i2
        } else {
            i1 = qY[3]
        }
        if (q6.type == eh.Ellipse) {
            i2 /= 2;
            i1 /= 2;
            q2 += i2;
            q0 += i1
        }
        if (q3) {
            q2 -= fW.objectBounds.x;
            q0 -= fW.objectBounds.y
        }
        var q4 = 40;
        var ra = Math.PI * 2 / q4;
        var rc = fW.prepareBucket(q6, q7);
        var q8 = rc.getData(k4.Fill);
        if (q8 != null) {
            var rb = q8.verts;
            var js = q8.indices;
            var q1 = rb.length / 2 | 0;
            js.push(q1);
            var q5 = 0;
            var q = q4 + 1;
            while (q5 < q) {
                var q9 = q5++;
                rb.push(q2);
                rb.push(q0);
                rb.push(q2 + Math.sin(ra * q9) * i2);
                rb.push(q0 + Math.cos(ra * q9) * i1);
                js.push(q1++);
                js.push(q1++)
            }
            js.push(q1 - 1)
        }
        if (q6.line.width > 0) {
            var qZ = q6.points;
            q6.points = [];
            aD.ellipse(q6.points, q2, q0, i2, i1, q4);
            fW.buildLine(q6, rc);
            q6.points = qZ
        }
    };
    fW.buildComplexPoly = function(q7, q2, js) {
        if (js == null) {
            js = false
        }
        var i2 = null;
        if (q7.points.length >= 6) {
            var q4 = q7.points.slice();
            if (js) {
                var q3 = 0;
                var q0 = q4.length / 2 | 0;
                while (q3 < q0) {
                    var qZ = q3++;
                    q4[qZ * 2] -= fW.objectBounds.x;
                    q4[qZ * 2 + 1] -= fW.objectBounds.y
                }
            }
            i2 = fW.prepareBucket(q7, q2);
            var q6 = i2.getData(k4.Fill);
            q6.drawMode = q2.gl.TRIANGLE_FAN;
            q6.verts = q4;
            var q5 = q6.indices;
            var q = q4.length / 2 | 0;
            var q1 = 0;
            while (q1 < q) {
                var qY = q1++;
                q5.push(qY)
            }
        }
        if (q7.line.width > 0) {
            if (i2 == null) {
                i2 = fW.prepareBucket(q7, q2)
            }
            fW.buildLine(q7, i2, js)
        }
    };
    fW.buildLine = function(rv, rp, rJ) {
        if (rJ == null) {
            rJ = false
        }
        var rq = rv.points;
        if (rq.length == 0) {
            return
        }
        var ra = rp.getData(k4.Line);
        if (rJ) {
            var rC = 0;
            var rG = rq.length / 2 | 0;
            while (rC < rG) {
                var rD = rC++;
                rq[rD * 2] -= fW.objectBounds.x;
                rq[rD * 2 + 1] -= fW.objectBounds.y
            }
        }
        var rd = new pp(rq[0], rq[1]);
        var q3 = new pp(rq[rq.length - 2 | 0], rq[rq.length - 1 | 0]);
        if (rd.x == q3.x && rd.y == q3.y) {
            rq = rq.slice();
            rq.pop();
            rq.pop();
            q3 = new pp(rq[rq.length - 2 | 0], rq[rq.length - 1 | 0]);
            var rf = q3.x + (rd.x - q3.x) * 0.5;
            var rc = q3.y + (rd.y - q3.y) * 0.5;
            rq.unshift(rc);
            rq.unshift(rf);
            rq.push(rf);
            rq.push(rc)
        }
        var rE = ra.verts;
        var q1 = ra.indices;
        var re = rq.length / 2 | 0;
        var rb = rq.length;
        var rH = rE.length / 6 | 0;
        var q = rv.line.width / 2;
        var rn = fW.hex2rgb(rv.line.color);
        var rB = rv.line.alpha;
        var rw = rn[0];
        var rF = rn[1];
        var rI = rn[2];
        var q7;
        var q6;
        var rs;
        var rr;
        var rj;
        var ri;
        var q0;
        var qZ;
        var ru;
        var rt;
        var rh;
        var rg;
        var qY;
        var js;
        var ry;
        var rm;
        var q5;
        var rx;
        var rl;
        var q4;
        var rK;
        var rk;
        var q2;
        rs = rq[0];
        rr = rq[1];
        rj = rq[2];
        ri = rq[3];
        ru = -(rr - ri);
        rt = rs - rj;
        q2 = Math.sqrt(Math.abs(ru * ru + rt * rt));
        ru = ru / q2;
        rt = rt / q2;
        ru = ru * q;
        rt = rt * q;
        rE.push(rs - ru);
        rE.push(rr - rt);
        rE.push(rw);
        rE.push(rF);
        rE.push(rI);
        rE.push(rB);
        rE.push(rs + ru);
        rE.push(rr + rt);
        rE.push(rw);
        rE.push(rF);
        rE.push(rI);
        rE.push(rB);
        var ro = 1;
        var rA = re - 1;
        while (ro < rA) {
            var q9 = ro++;
            rs = rq[(q9 - 1) * 2];
            rr = rq[(q9 - 1) * 2 + 1];
            rj = rq[q9 * 2];
            ri = rq[q9 * 2 + 1];
            q0 = rq[(q9 + 1) * 2];
            qZ = rq[(q9 + 1) * 2 + 1];
            ru = -(rr - ri);
            rt = rs - rj;
            q2 = Math.sqrt(Math.abs(ru * ru + rt * rt));
            ru = ru / q2;
            rt = rt / q2;
            ru = ru * q;
            rt = rt * q;
            rh = -(ri - qZ);
            rg = rj - q0;
            q2 = Math.sqrt(Math.abs(rh * rh + rg * rg));
            rh = rh / q2;
            rg = rg / q2;
            rh = rh * q;
            rg = rg * q;
            ry = -rt + rr - (-rt + ri);
            rm = -ru + rj - (-ru + rs);
            q5 = (-ru + rs) * (-rt + ri) - (-ru + rj) * (-rt + rr);
            rx = -rg + qZ - (-rg + ri);
            rl = -rh + rj - (-rh + q0);
            q4 = (-rh + q0) * (-rg + ri) - (-rh + rj) * (-rg + qZ);
            rK = ry * rl - rx * rm;
            if (Math.abs(rK) < 0.1) {
                rK += 10.1;
                rE.push(rj - ru);
                rE.push(ri - rt);
                rE.push(rw);
                rE.push(rF);
                rE.push(rI);
                rE.push(rB);
                rE.push(rj + ru);
                rE.push(ri + rt);
                rE.push(rw);
                rE.push(rF);
                rE.push(rI);
                rE.push(rB);
                continue
            }
            q7 = (rm * q4 - rl * q5) / rK;
            q6 = (rx * q5 - ry * q4) / rK;
            rk = (q7 - rj) * (q7 - rj) + (q6 - ri) + (q6 - ri);
            if (rk > 19600) {
                qY = ru - rh;
                js = rt - rg;
                q2 = Math.sqrt(Math.abs(qY * qY + js * js));
                qY = qY / q2;
                js = js / q2;
                qY = qY * q;
                js = js * q;
                rE.push(rj - qY);
                rE.push(ri - js);
                rE.push(rw);
                rE.push(rF);
                rE.push(rI);
                rE.push(rB);
                rE.push(rj + qY);
                rE.push(ri + js);
                rE.push(rw);
                rE.push(rF);
                rE.push(rI);
                rE.push(rB);
                rE.push(rj - qY);
                rE.push(ri - js);
                rE.push(rw);
                rE.push(rF);
                rE.push(rI);
                rE.push(rB);
                rb++
            } else {
                rE.push(q7);
                rE.push(q6);
                rE.push(rw);
                rE.push(rF);
                rE.push(rI);
                rE.push(rB);
                rE.push(rj - (q7 - rj));
                rE.push(ri - (q6 - ri));
                rE.push(rw);
                rE.push(rF);
                rE.push(rI);
                rE.push(rB)
            }
        }
        rs = rq[(re - 2) * 2];
        rr = rq[(re - 2) * 2 + 1];
        rj = rq[(re - 1) * 2];
        ri = rq[(re - 1) * 2 + 1];
        ru = -(rr - ri);
        rt = rs - rj;
        q2 = Math.sqrt(Math.abs(ru * ru + rt * rt));
        if (!isFinite(q2)) {
            eM.trace(ru * ru + rt * rt, {
                fileName: "GraphicsRenderer.hx",
                lineNumber: 407,
                className: "openfl._internal.renderer.opengl.utils.GraphicsRenderer",
                methodName: "buildLine"
            })
        }
        ru = ru / q2;
        rt = rt / q2;
        ru = ru * q;
        rt = rt * q;
        rE.push(rj - ru);
        rE.push(ri - rt);
        rE.push(rw);
        rE.push(rF);
        rE.push(rI);
        rE.push(rB);
        rE.push(rj + ru);
        rE.push(ri + rt);
        rE.push(rw);
        rE.push(rF);
        rE.push(rI);
        rE.push(rB);
        q1.push(rH);
        var rz = 0;
        while (rz < rb) {
            var q8 = rz++;
            q1.push(rH++)
        }
        q1.push(rH - 1)
    };
    fW.buildPoly = function(q1, q2) {
        if (q1.points.length < 6) {
            return
        }
        var q7 = q1.points;
        var q5 = q7.length;
        var q0 = q7[0];
        var qZ = q7[1];
        var ra = q7[q5 - 2];
        var q9 = q7[q5 - 1];
        if (q0 != ra || qZ != q9) {
            q7.push(q0);
            q7.push(qZ)
        }
        var i2 = q7.length / 2 | 0;
        var rc = fW.prepareBucket(q1, q2);
        var q6 = rc.getData(k4.Fill);
        var rb = q6.verts;
        var js = q6.indices;
        if (q6 != null) {
            var q3 = [];
            aK.triangulate(q3, q7);
            var qY = rb.length / 2;
            var q8 = 0;
            while (q8 < q3.length) {
                js.push(q3[q8] + qY | 0);
                js.push(q3[q8] + qY | 0);
                js.push(q3[q8 + 1] + qY | 0);
                js.push(q3[q8 + 2] + qY | 0);
                js.push(q3[q8 + 2] + qY | 0);
                q8 += 3
            }
            var q = 0;
            while (q < i2) {
                var q4 = q++;
                rb.push(q7[q4 * 2]);
                rb.push(q7[q4 * 2 + 1])
            }
        }
        if (q1.line.width > 0) {
            fW.buildLine(q1, rc)
        }
    };
    fW.buildRectangle = function(q6, qY, i1) {
        if (i1 == null) {
            i1 = false
        }
        var i2 = q6.points;
        var q1 = i2[0];
        var q0 = i2[1];
        var i = i2[2];
        var q4 = i2[3];
        if (i1) {
            q1 -= fW.objectBounds.x;
            q0 -= fW.objectBounds.y
        }
        var q = fW.prepareBucket(q6, qY);
        var q5 = q.getData(k4.Fill);
        if (q5 != null) {
            var q2 = q5.verts;
            var q3 = q5.indices;
            var qZ = q2.length / 2 | 0;
            q2.push(q1);
            q2.push(q0);
            q2.push(q1 + i);
            q2.push(q0);
            q2.push(q1);
            q2.push(q0 + q4);
            q2.push(q1 + i);
            q2.push(q0 + q4);
            q3.push(qZ);
            q3.push(qZ);
            q3.push(qZ + 1);
            q3.push(qZ + 2);
            q3.push(qZ + 3);
            q3.push(qZ + 3)
        }
        if (q6.line.width > 0) {
            var js = q6.points;
            q6.points = [q1, q0, q1 + i, q0, q1 + i, q0 + q4, q1, q0 + q4, q1, q0];
            fW.buildLine(q6, q);
            q6.points = js
        }
    };
    fW.buildRoundedRectangle = function(q4, q5, q1) {
        if (q1 == null) {
            q1 = false
        }
        var ra = q4.points.slice();
        var q0 = ra[0];
        var qZ = ra[1];
        var q6 = ra[2];
        var q3 = ra[3];
        var i2 = ra[4];
        var i1 = ra[5];
        if (q1) {
            q0 -= fW.objectBounds.x;
            qZ -= fW.objectBounds.y
        }
        var q2 = [];
        aD.roundRectangle(q2, q0, qZ, q6, q3, i2, i1);
        var rc = fW.prepareBucket(q4, q5);
        var q8 = rc.getData(k4.Fill);
        if (q8 != null) {
            var rb = q8.verts;
            var js = q8.indices;
            var q = rb.length / 2;
            var q7 = [];
            aK.triangulate(q7, q2);
            var q9 = 0;
            while (q9 < q7.length) {
                js.push(q7[q9] + q | 0);
                js.push(q7[q9] + q | 0);
                js.push(q7[q9 + 1] + q | 0);
                js.push(q7[q9 + 2] + q | 0);
                js.push(q7[q9 + 2] + q | 0);
                q9 += 3
            }
            q9 = 0;
            while (q9 < q2.length) {
                rb.push(q2[q9]);
                rb.push(q2[++q9]);
                q9++
            }
        }
        if (q4.line.width > 0) {
            var qY = q4.points;
            q4.points = q2;
            fW.buildLine(q4, rc);
            q4.points = qY
        }
    };
    fW.buildDrawTriangles = function(rp, rj, q5, rP) {
        if (rP == null) {
            rP = false
        }
        var rq = rp.type.slice(2);
        var js = rq[0];
        var qZ = rq[1];
        var q4 = rq[2];
        var q6 = rq[3];
        var rn = rq[4];
        var rI = rq[5];
        var rO;
        var rM;
        var rL;
        var rK;
        var rA;
        var ry;
        if (rP) {
            rO = 1;
            rM = 0;
            rL = 0;
            rK = 1;
            rA = 0;
            ry = 0
        } else {
            rO = rj.__worldTransform.a;
            rM = rj.__worldTransform.b;
            rL = rj.__worldTransform.c;
            rK = rj.__worldTransform.d;
            rA = rj.__worldTransform.tx;
            ry = rj.__worldTransform.ty
        }
        var rc = rn != null && rn.length > 0;
        var rf = fW.prepareBucket(rp, q5);
        var rb = rf.getData(k4.Fill);
        var q0 = rb.vertexArray.attributes[2];
        q0.enabled = rc;
        var qY = [1, 1, 1, 1];
        var ri;
        if (qY != null) {
            ri = new Float32Array(qY)
        } else {
            ri = null
        }
        q0.defaultValue = ri;
        rb.rawVerts = true;
        rb.glLength = qZ.length;
        rb.stride = kr["int"](rb.vertexArray.get_stride() / 4);
        var q7 = rb.glLength * rb.stride;
        var rE;
        if (rb.glVerts == null || rb.glVerts.length < q7) {
            var rh;
            if (q7 != null) {
                rh = new Float32Array(q7)
            } else {
                rh = null
            }
            rE = rh;
            rb.glVerts = rE
        } else {
            rE = rb.glVerts
        }
        var re;
        var rd = rE.buffer;
        var rg;
        if (rd != null) {
            rg = new Uint32Array(rd, 0)
        } else {
            rg = null
        }
        re = rg;
        var rS = 0;
        var rQ = 0;
        var rN = 0;
        var q3 = 0;
        var q2 = 0;
        var q1 = 0;
        var ra = 0;
        var q = 0;
        var q9 = 0;
        var rT = 0;
        var q8 = 0;
        var rR = 0;
        var rJ = 0;
        var rx = 0;
        var rG = qZ.length / 3 | 0;
        while (rx < rG) {
            var rC = rx++;
            q3 = qZ.data[rC * 3];
            q2 = qZ.data[rC * 3 + 1];
            q1 = qZ.data[rC * 3 + 2];
            rS = q3 * 2;
            rQ = q2 * 2;
            rN = q1 * 2;
            ra = js.data[rS];
            q = js.data[rS + 1];
            q9 = js.data[rQ];
            rT = js.data[rQ + 1];
            q8 = js.data[rN];
            rR = js.data[rN + 1];
            if (rP) {
                ra -= fW.objectBounds.x;
                q -= fW.objectBounds.y;
                q9 -= fW.objectBounds.x;
                rT -= fW.objectBounds.y;
                q8 -= fW.objectBounds.x;
                rR -= fW.objectBounds.y
            }
            switch (q6) {
                case 2:
                    if (!((q9 - ra) * (rR - q) - (rT - q) * (q8 - ra) < 0)) {
                        continue
                    }
                    break;
                case 0:
                    if ((q9 - ra) * (rR - q) - (rT - q) * (q8 - ra) < 0) {
                        continue
                    }
                    break;
                default:
            }
            var rv = rJ++;
            rE[rv] = rO * ra + rL * q + rA;
            var ru = rJ++;
            rE[ru] = rM * ra + rK * q + ry;
            var rt = rJ++;
            rE[rt] = q4.data[rS];
            var rs = rJ++;
            rE[rs] = q4.data[rS + 1];
            if (rc) {
                var rr = rJ++;
                re[rr] = rn.data[q3]
            }
            var ro = rJ++;
            rE[ro] = rO * q9 + rL * rT + rA;
            var rm = rJ++;
            rE[rm] = rM * q9 + rK * rT + ry;
            var rl = rJ++;
            rE[rl] = q4.data[rQ];
            var rk = rJ++;
            rE[rk] = q4.data[rQ + 1];
            if (rc) {
                var rH = rJ++;
                re[rH] = rn.data[q2]
            }
            var rF = rJ++;
            rE[rF] = rO * q8 + rL * rR + rA;
            var rD = rJ++;
            rE[rD] = rM * q8 + rK * rR + ry;
            var rB = rJ++;
            rE[rB] = q4.data[rN];
            var rz = rJ++;
            rE[rz] = q4.data[rN + 1];
            if (rc) {
                var rw = rJ++;
                re[rw] = rn.data[q1]
            }
        }
    };
    fW.buildDrawTiles = function(q, i) {
        fW.prepareBucket(q, i)
    };
    fW.quadraticBezierCurve = function(q4, q2, q, rc, i2, i1) {
        var rb;
        var qY;
        var q9;
        var js;
        var q1;
        var q0;
        var q6 = 20;
        var ra = [];
        var q3 = function(re, rd, i) {
            var rf = rd - re;
            return re + rf * i
        };
        var q7 = 0;
        var q5 = 0;
        var qZ = q6 + 1;
        while (q5 < qZ) {
            var q8 = q5++;
            q7 = q8 / q6;
            rb = q3(q4, q, q7);
            qY = q3(q2, rc, q7);
            q9 = q3(q, i2, q7);
            js = q3(rc, i1, q7);
            q1 = q3(rb, q9, q7);
            q0 = q3(qY, js, q7);
            ra.push(q1);
            ra.push(q0)
        }
        return ra
    };
    fW.render = function(q, qY) {
        var i = q.__graphics;
        var js = i.__bounds;
        var i2 = qY.spriteBatch;
        var i1 = i.__dirty;
        if (!i.__visible || i.__commands.get_length() == 0 || js == null || js.width == 0 || js.height == 0) {
            i.__glStack.splice(0, i.__glStack.length);
            return
        }
        if (i1) {
            fW.updateGraphics(q, q.__graphics, qY.gl, q.get_cacheAsBitmap())
        }
        fW.renderGraphics(q, qY, false)
    };
    fW.renderGraphics = function(re, q3, q4) {
        if (q4 == null) {
            q4 = false
        }
        var rd = re.__graphics;
        var rb = q3.gl;
        var q9 = rd.__glStack[mA.glContextId];
        if (q9 == null) {
            return
        }
        var rf;
        var i1;
        if (q4) {
            i1 = qd.__identity
        } else {
            i1 = re.__worldTransform
        }
        var ra = q3.spriteBatch.clipRect;
        var qY = q3.spriteBatch.drawing;
        qY = q3.spriteBatch.drawing;
        var q8 = 0;
        var qZ = q9.buckets.length;
        while (q8 < qZ) {
            var rc = q8++;
            qY = q3.spriteBatch.drawing;
            if (qY && !q4) {
                q3.spriteBatch.finish()
            }
            q3.blendModeManager.setBlendMode(re.__blendMode);
            if (ra != null) {
                rb.enable(rb.SCISSOR_TEST);
                rb.scissor(Math.floor(ra.x), Math.floor(ra.y), Math.floor(ra.width), Math.floor(ra.height))
            }
            rf = q9.buckets[rc];
            var q7 = rf.mode;
            switch (q7[1]) {
                case 1:
                case 2:
                    q3.stencilManager.pushBucket(rf, q3, i1.toArray(true));
                    var q = fW.prepareShader(rf, q3, re, i1.toArray(true));
                    fW.renderFill(rf, q, q3);
                    q3.stencilManager.popBucket(re, rf, q3);
                    break;
                case 5:
                    var q1 = fW.prepareShader(rf, q3, re, null);
                    fW.renderDrawTriangles(rf, q1, q3);
                    break;
                case 6:
                    if (!qY) {
                        q3.spriteBatch.begin(q3, ra)
                    }
                    var js = rf.graphicType.slice(2);
                    q3.spriteBatch.renderTiles(re, js[0], js[1], js[2], js[3], js[4], js[5]);
                    q3.spriteBatch.finish();
                    break;
                default:
            }
            var q2 = re.__worldColorTransform;
            var i2 = 0;
            var q6 = rf.lines;
            while (i2 < q6.length) {
                var q5 = q6[i2];
                ++i2;
                if (q5 != null && q5.verts.length > 0) {
                    var q0 = q3.shaderManager.primitiveShader;
                    q3.shaderManager.setShader(q0);
                    rb.uniformMatrix3fv(q0.getUniformLocation("openfl_uTranslationMatrix"), false, i1.toArray(true));
                    rb.uniformMatrix3fv(q0.getUniformLocation("openfl_uProjectionMatrix"), false, q3.projectionMatrix.toArray(true));
                    rb.uniform1f(q0.getUniformLocation("openfl_uAlpha"), 1);
                    rb.uniform4f(q0.getUniformLocation("openfl_uColorMultiplier"), q2.redMultiplier, q2.greenMultiplier, q2.blueMultiplier, q2.alphaMultiplier);
                    rb.uniform4f(q0.getUniformLocation("openfl_uColorOffset"), q2.redOffset / 255, q2.greenOffset / 255, q2.blueOffset / 255, q2.alphaOffset / 255);
                    q5.vertexArray.bind();
                    q0.bindVertexArray(q5.vertexArray);
                    rb.bindBuffer(rb.ELEMENT_ARRAY_BUFFER, q5.indexBuffer);
                    rb.drawElements(rb.TRIANGLE_STRIP, q5.indices.length, rb.UNSIGNED_SHORT, 0)
                }
            }
            if (ra != null) {
                rb.disable(rb.SCISSOR_TEST)
            }
            qY = q3.spriteBatch.drawing;
            if (!qY && !q4) {
                q3.spriteBatch.begin(q3, ra)
            }
        }
    };
    fW.updateGraphics = function(ra, q7, q4, i2) {
        if (i2 == null) {
            i2 = false
        }
        fW.objectPosition.setTo(ra.get_x(), ra.get_y());
        if (q7.__bounds == null) {
            fW.objectBounds = new gn()
        } else {
            fW.objectBounds.copyFrom(q7.__bounds)
        }
        var q1 = null;
        if (q7.__dirty) {
            q1 = qH.getStack(q7, q4)
        }
        q7.set___dirty(false);
        var i1 = 0;
        var qZ = q1.buckets;
        while (i1 < qZ.length) {
            var q9 = qZ[i1];
            ++i1;
            q9.reset();
            fW.bucketPool.push(q9)
        }
        q1.reset();
        var q5 = q1.lastIndex;
        var qY = q7.__drawPaths.length;
        while (q5 < qY) {
            var q6 = q5++;
            var q0 = q7.__drawPaths[q6];
            var q = q0.type;
            switch (q[1]) {
                case 0:
                    fW.buildComplexPoly(q0, q1, i2);
                    break;
                case 1:
                    var q8 = q[2];
                    if (q8) {
                        fW.buildRoundedRectangle(q0, q1, i2)
                    } else {
                        fW.buildRectangle(q0, q1, i2)
                    }
                    break;
                case 2:
                case 3:
                    fW.buildCircle(q0, q1, i2);
                    break;
                case 4:
                    fW.buildDrawTriangles(q0, ra, q1, i2);
                    break;
                case 5:
                    fW.prepareBucket(q0, q1);
                    break;
                case 6:
                    var q2 = q[2];
                    fW.overrideMatrix = q2;
                    break
            }
            q1.lastIndex++
        }
        var js = 0;
        var q3 = q1.buckets;
        while (js < q3.length) {
            var rb = q3[js];
            ++js;
            if (rb.uploadTileBuffer) {
                rb.uploadTile(Math.ceil(fW.objectBounds.get_left()), Math.ceil(fW.objectBounds.get_top()), Math.floor(fW.objectBounds.get_right()), Math.floor(fW.objectBounds.get_bottom()))
            }
            rb.optimize()
        }
        q1.upload()
    };
    fW.prepareBucket = function(q5, qZ) {
        var q = null;
        var qY = q5.fill;
        switch (qY[1]) {
            case 1:
                var q4 = qY[3];
                var q1 = qY[2];
                q = fW.switchBucket(q5.fillIndex, qZ, l1.Fill);
                if (q1 == null) {
                    q.color = [1, 1, 1]
                } else {
                    q.color = [(q1 >> 16 & 255) / 255, (q1 >> 8 & 255) / 255, (q1 & 255) / 255]
                }
                q.color[3] = q4;
                q.uploadTileBuffer = true;
                break;
            case 2:
                var q6 = qY[5];
                var i = qY[4];
                var i1 = qY[3];
                var q3 = qY[2];
                q = fW.switchBucket(q5.fillIndex, qZ, l1.PatternFill);
                q.bitmap = q3;
                q.textureRepeat = i;
                q.textureSmooth = q6;
                q.texture = q3.getTexture(qZ.gl);
                q.uploadTileBuffer = true;
                var q2;
                if (i1 == null) {
                    q2 = new qd()
                } else {
                    q2 = i1.clone()
                }
                q2.invert();
                q2.scale(1 / q3.width, 1 / q3.height);
                var js = q2.tx;
                var i2 = q2.ty;
                q2.tx = 0;
                q2.ty = 0;
                q.textureTL.x = js;
                q.textureTL.y = i2;
                q.textureBR.x = js + 1;
                q.textureBR.y = i2 + 1;
                q.textureMatrix = q2;
                break;
            default:
                q = fW.switchBucket(q5.fillIndex, qZ, l1.Line);
                q.uploadTileBuffer = false
        }
        var q0 = q5.type;
        switch (q0[1]) {
            case 4:
                q.mode = l1.DrawTriangles;
                q.uploadTileBuffer = false;
                break;
            case 5:
                q.mode = l1.DrawTiles;
                q.uploadTileBuffer = false;
                break;
            default:
        }
        q.graphicType = q5.type;
        q.overrideMatrix = fW.overrideMatrix;
        return q
    };
    fW.getBucket = function(q, i1) {
        var i = fW.bucketPool.pop();
        if (i == null) {
            i = new p7(q.gl)
        }
        i.mode = i1;
        q.buckets.push(i);
        return i
    };
    fW.switchBucket = function(q, i1, qY) {
        var qZ = null;
        var js = 0;
        var i2 = i1.buckets;
        while (js < i2.length) {
            var i = i2[js];
            ++js;
            if (i.fillIndex == q) {
                qZ = i;
                break
            }
        }
        if (qZ == null) {
            qZ = fW.getBucket(i1, qY)
        }
        qZ.dirty = true;
        qZ.fillIndex = q;
        return qZ
    };
    fW.prepareShader = function(i, q2, q, q0) {
        var i1 = q2.gl;
        var qY = null;
        var i2 = i.mode;
        switch (i2[1]) {
            case 1:
                qY = q2.shaderManager.fillShader;
                break;
            case 2:
                qY = q2.shaderManager.patternFillShader;
                break;
            case 5:
                qY = q2.shaderManager.drawTrianglesShader;
                break;
            default:
                qY = null
        }
        if (qY == null) {
            return null
        }
        var q1 = q2.shaderManager.setShader(qY);
        i1.uniform1f(qY.getUniformLocation("openfl_uAlpha"), q.__worldAlpha);
        i1.uniformMatrix3fv(qY.getUniformLocation("openfl_uProjectionMatrix"), false, q2.projectionMatrix.toArray(true));
        var js = q.__worldColorTransform;
        i1.uniform4f(qY.getUniformLocation("openfl_uColorMultiplier"), js.redMultiplier, js.greenMultiplier, js.blueMultiplier, js.alphaMultiplier);
        i1.uniform4f(qY.getUniformLocation("openfl_uColorOffset"), js.redOffset / 255, js.greenOffset / 255, js.blueOffset / 255, js.alphaOffset / 255);
        var qZ = i.mode;
        switch (qZ[1]) {
            case 1:
                i1.uniformMatrix3fv(qY.getUniformLocation("openfl_uTranslationMatrix"), false, q0);
                i1.uniform4fv(qY.getUniformLocation("openfl_uColor"), (function(q5) {
                    var q4;
                    var q6 = i.color;
                    var q3;
                    if (q6 != null) {
                        q3 = new Float32Array(q6)
                    } else {
                        q3 = null
                    }
                    q4 = q3;
                    return q4
                }(this)));
                break;
            case 2:
                i1.uniformMatrix3fv(qY.getUniformLocation("openfl_uTranslationMatrix"), false, q0);
                i1.uniform2f(qY.getUniformLocation("openfl_uPatternTL"), i.textureTL.x, i.textureTL.y);
                i1.uniform2f(qY.getUniformLocation("openfl_uPatternBR"), i.textureBR.x, i.textureBR.y);
                i1.uniformMatrix3fv(qY.getUniformLocation("openfl_uPatternMatrix"), false, i.textureMatrix.toArray(true));
                break;
            case 5:
                if (i.texture != null) {
                    i1.uniform1i(qY.getUniformLocation("openfl_uUseTexture"), 1)
                } else {
                    i1.uniform1i(qY.getUniformLocation("openfl_uUseTexture"), 0);
                    i1.uniform4fv(qY.getUniformLocation("openfl_uColor"), (function(q6) {
                        var q4;
                        var q5 = i.color;
                        var q3;
                        if (q5 != null) {
                            q3 = new Float32Array(q5)
                        } else {
                            q3 = null
                        }
                        q4 = q3;
                        return q4
                    }(this)))
                }
                break;
            default:
        }
        return qY
    };
    fW.renderFill = function(i2, i, q) {
        var i1 = q.gl;
        if (i2.mode == l1.PatternFill && i2.texture != null) {
            fW.bindTexture(i1, i2)
        }
        i1.bindBuffer(i1.ARRAY_BUFFER, i2.tileBuffer);
        i1.vertexAttribPointer(i.getAttribLocation("openfl_aPosition"), 4, i1.SHORT, false, 0, 0);
        i1.drawArrays(i1.TRIANGLE_STRIP, 0, 4)
    };
    fW.renderDrawTriangles = function(qZ, i, i1) {
        var qY = i1.gl;
        var js = 0;
        var q = qZ.fills;
        while (js < q.length) {
            var i2 = q[js];
            ++js;
            if (i2.available) {
                continue
            }
            fW.bindTexture(qY, qZ);
            i2.vertexArray.bind();
            i.bindVertexArray(i2.vertexArray);
            qY.drawArrays(qY.TRIANGLES, i2.glStart, i2.glLength)
        }
    };
    fW.bindTexture = function(i, q) {
        i.bindTexture(i.TEXTURE_2D, q.texture);
        if (q.textureRepeat && q.bitmap.image.get_powerOfTwo()) {
            i.texParameteri(i.TEXTURE_2D, i.TEXTURE_WRAP_S, i.REPEAT);
            i.texParameteri(i.TEXTURE_2D, i.TEXTURE_WRAP_T, i.REPEAT)
        } else {
            i.texParameteri(i.TEXTURE_2D, i.TEXTURE_WRAP_S, i.CLAMP_TO_EDGE);
            i.texParameteri(i.TEXTURE_2D, i.TEXTURE_WRAP_T, i.CLAMP_TO_EDGE)
        }
        if (q.textureSmooth) {
            i.texParameteri(i.TEXTURE_2D, i.TEXTURE_MAG_FILTER, i.LINEAR);
            i.texParameteri(i.TEXTURE_2D, i.TEXTURE_MIN_FILTER, i.LINEAR)
        } else {
            i.texParameteri(i.TEXTURE_2D, i.TEXTURE_MAG_FILTER, i.NEAREST);
            i.texParameteri(i.TEXTURE_2D, i.TEXTURE_MIN_FILTER, i.NEAREST)
        }
    };
    fW.isCCW = function(i2, qY, q, js, i, i1) {
        return (q - i2) * (i1 - qY) - (js - qY) * (i - i2) < 0
    };
    fW.hex2rgb = function(i) {
        if (i == null) {
            return [1, 1, 1]
        } else {
            return [(i >> 16 & 255) / 255, (i >> 8 & 255) / 255, (i & 255) / 255]
        }
    };
    fW.hex2rgba = function(i) {
        if (i == null) {
            return [1, 1, 1, 1]
        } else {
            return [(i >> 16 & 255) / 255, (i >> 8 & 255) / 255, (i & 255) / 255, (i >> 24 & 255) / 255]
        }
    };
    var mX = function(i) {
        this.lastIndex = 0;
        this.gl = i;
        this.buckets = [];
        this.lastIndex = 0
    };
    nt["openfl._internal.renderer.opengl.utils.GLStack"] = mX;
    mX.__name__ = ["openfl", "_internal", "renderer", "opengl", "utils", "GLStack"];
    mX.prototype = {
        lastIndex: null,
        buckets: null,
        gl: null,
        reset: function() {
            this.buckets = [];
            this.lastIndex = 0
        },
        upload: function() {
            var q = 0;
            var i = this.buckets;
            while (q < i.length) {
                var i1 = i[q];
                ++q;
                if (i1.dirty) {
                    i1.upload()
                }
            }
        },
        __class__: mX
    };
    var p7 = function(i) {
        this.uploadTileBuffer = true;
        this.textureSmooth = true;
        this.textureRepeat = false;
        this.lines = [];
        this.fills = [];
        this.fillIndex = -1;
        this.gl = i;
        this.color = [0, 0, 0];
        this.lastIndex = 0;
        this.alpha = 1;
        this.dirty = true;
        this.mode = l1.Fill;
        this.textureMatrix = new qd();
        this.textureTL = new pp();
        this.textureBR = new pp(1, 1)
    };
    nt["openfl._internal.renderer.opengl.utils.GLBucket"] = p7;
    p7.__name__ = ["openfl", "_internal", "renderer", "opengl", "utils", "GLBucket"];
    p7.prototype = {
        gl: null,
        color: null,
        alpha: null,
        dirty: null,
        graphicType: null,
        lastIndex: null,
        fillIndex: null,
        mode: null,
        fills: null,
        lines: null,
        bitmap: null,
        texture: null,
        textureMatrix: null,
        textureRepeat: null,
        textureSmooth: null,
        textureTL: null,
        textureBR: null,
        overrideMatrix: null,
        tileBuffer: null,
        glTile: null,
        tile: null,
        uploadTileBuffer: null,
        getData: function(i1) {
            var js;
            switch (i1[1]) {
                case 1:
                    js = this.fills;
                    break;
                default:
                    js = this.lines
            }
            var q = null;
            var i = false;
            var qZ = 0;
            while (qZ < js.length) {
                var qY = js[qZ];
                ++qZ;
                if (qY.available) {
                    q = qY;
                    i = true;
                    break
                }
            }
            if (q == null) {
                q = new l0(this.gl)
            }
            q.available = false;
            q.parent = this;
            q.type = i1;
            if (i) {
                cj.remove(js, q)
            }
            js.push(q);
            switch (i1[1]) {
                case 1:
                    var i2 = this.mode;
                    switch (i2[1]) {
                        case 1:
                        case 2:
                            q.vertexArray.attributes = fW.fillVertexAttributes;
                            break;
                        case 5:
                            q.vertexArray.attributes = fW.drawTrianglesVertexAttributes.slice();
                            q.vertexArray.attributes[2] = q.vertexArray.attributes[2].copy();
                            break;
                        default:
                    }
                    break;
                case 0:
                    q.vertexArray.attributes = fW.primitiveVertexAttributes;
                    break
            }
            return q
        },
        optimize: function() {
            var q0 = this;
            var qY = this.lines;
            if (qY.length > 1) {
                var q9 = [];
                var qZ = null;
                var q6 = null;
                var q5 = 0;
                var i2 = 0;
                var q7 = 0;
                var q4 = qY.length;
                var q3 = 0;
                while (q3 < qY.length) {
                    var q2 = qY[q3];
                    ++q3;
                    if (q2.available || q2.rawVerts || q2.rawIndices) {
                        if (qZ != null) {
                            q9.push(qZ);
                            qZ = null
                        }
                        q9.push(q2);
                        q6 = q2;
                        continue
                    }
                    if (q6 == null || q6.drawMode == q2.drawMode) {
                        if (qZ == null) {
                            qZ = q2
                        } else {
                            i2 = qZ.verts.length;
                            q7 = qZ.indices.length;
                            var q1 = 0;
                            var js = q2.verts.length;
                            while (q1 < js) {
                                var i1 = q1++;
                                qZ.verts[i1 + i2] = q2.verts[i1]
                            }
                            var i = 0;
                            var q = q2.indices.length;
                            while (i < q) {
                                var q8 = i++;
                                qZ.indices[q8 + q7] = q2.indices[q8] + q5
                            }
                        }
                        q5 = qZ.indices[qZ.indices.length - 1] + 1;
                        q6 = q2
                    } else {
                        if (qZ != null) {
                            q9.push(qZ);
                            qZ = null
                        }
                        q9.push(q2);
                        q6 = q2;
                        continue
                    }
                }
                if (q9.length == 0 && qZ != null) {
                    q9.push(qZ)
                }
                if (q9.length > 0) {
                    switch (k4.Line[1]) {
                        case 1:
                            q0.fills = q9;
                            break;
                        default:
                            q0.lines = q9
                    }
                }
            }
        },
        reset: function() {
            var qY = 0;
            var i2 = this.fills;
            while (qY < i2.length) {
                var js = i2[qY];
                ++qY;
                js.reset()
            }
            var i1 = 0;
            var i = this.lines;
            while (i1 < i.length) {
                var q = i[i1];
                ++i1;
                q.reset()
            }
            this.fillIndex = -1;
            this.uploadTileBuffer = true;
            this.graphicType = eh.Polygon
        },
        uploadTile: function(i, qY, i1, i2) {
            if (this.tileBuffer == null) {
                this.tileBuffer = this.gl.createBuffer()
            }
            this.tile = [i, qY, 0, 0, i1, qY, 1, 0, i, i2, 0, 1, i1, i2, 1, 1];
            var js = this.tile;
            var q;
            if (js != null) {
                q = new Int16Array(js)
            } else {
                q = null
            }
            this.glTile = q;
            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.tileBuffer);
            this.gl.bufferData(this.gl.ARRAY_BUFFER, this.glTile, this.gl.STATIC_DRAW)
        },
        upload: function() {
            if (this.mode != l1.Line) {
                var qY = 0;
                var i2 = this.fills;
                while (qY < i2.length) {
                    var js = i2[qY];
                    ++qY;
                    if (!js.available) {
                        js.upload()
                    }
                }
            }
            var i1 = 0;
            var i = this.lines;
            while (i1 < i.length) {
                var q = i[i1];
                ++i1;
                if (!q.available) {
                    q.upload()
                }
            }
            this.dirty = false
        },
        __class__: p7
    };
    var l0 = function(i) {
        this.available = false;
        this.rawIndices = false;
        this.stride = 0;
        this.rawVerts = false;
        this.lastVertsSize = 0;
        this.glStart = 0;
        this.glLength = 0;
        this.gl = i;
        this.drawMode = i.TRIANGLE_STRIP;
        this.verts = [];
        this.indices = [];
        this.vertexArray = new fQ([])
    };
    nt["openfl._internal.renderer.opengl.utils.GLBucketData"] = l0;
    l0.__name__ = ["openfl", "_internal", "renderer", "opengl", "utils", "GLBucketData"];
    l0.prototype = {
        type: null,
        gl: null,
        drawMode: null,
        glLength: null,
        glStart: null,
        vertexArray: null,
        glVerts: null,
        lastVertsSize: null,
        verts: null,
        rawVerts: null,
        stride: null,
        indexBuffer: null,
        glIndices: null,
        indices: null,
        rawIndices: null,
        available: null,
        parent: null,
        reset: function() {
            this.available = true;
            this.verts = [];
            this.indices = [];
            this.glLength = 0;
            this.glStart = 0;
            this.stride = 0;
            this.rawVerts = false;
            this.rawIndices = false;
            this.drawMode = this.gl.TRIANGLE_STRIP
        },
        upload: function() {
            if (this.rawVerts && this.glVerts != null && this.glVerts.length > 0 || this.verts.length > 0) {
                if (!this.rawVerts) {
                    var qY = this.verts;
                    var i2;
                    if (qY != null) {
                        i2 = new Float32Array(qY)
                    } else {
                        i2 = null
                    }
                    this.glVerts = i2
                }
                this.vertexArray.buffer = this.glVerts.buffer;
                if (this.glVerts.length <= this.lastVertsSize) {
                    this.vertexArray.bind();
                    var i1 = this.glLength * this.stride;
                    if (this.glLength > 0 && this.lastVertsSize > i1) {
                        var q = this.glVerts.subarray(0, i1);
                        this.vertexArray.upload(q)
                    } else {
                        this.vertexArray.upload(this.glVerts)
                    }
                } else {
                    this.vertexArray.setContext(this.gl, this.glVerts);
                    this.lastVertsSize = this.glVerts.length
                }
            }
            if (this.glLength == 0 && (this.rawIndices && this.glIndices != null && this.glIndices.length > 0 || this.indices.length > 0)) {
                if (this.indexBuffer == null) {
                    this.indexBuffer = this.gl.createBuffer()
                }
                if (!this.rawIndices) {
                    var js = this.indices;
                    var i;
                    if (js != null) {
                        i = new Uint16Array(js)
                    } else {
                        i = null
                    }
                    this.glIndices = i
                }
                this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);
                this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, this.glIndices, this.gl.STREAM_DRAW)
            }
        },
        __class__: l0
    };
    var l1 = nt["openfl._internal.renderer.opengl.utils.BucketMode"] = {
        __ename__: ["openfl", "_internal", "renderer", "opengl", "utils", "BucketMode"],
        __constructs__: ["None", "Fill", "PatternFill", "Line", "PatternLine", "DrawTriangles", "DrawTiles"]
    };
    l1.None = ["None", 0];
    l1.None.toString = ea;
    l1.None.__enum__ = l1;
    l1.Fill = ["Fill", 1];
    l1.Fill.toString = ea;
    l1.Fill.__enum__ = l1;
    l1.PatternFill = ["PatternFill", 2];
    l1.PatternFill.toString = ea;
    l1.PatternFill.__enum__ = l1;
    l1.Line = ["Line", 3];
    l1.Line.toString = ea;
    l1.Line.__enum__ = l1;
    l1.PatternLine = ["PatternLine", 4];
    l1.PatternLine.toString = ea;
    l1.PatternLine.__enum__ = l1;
    l1.DrawTriangles = ["DrawTriangles", 5];
    l1.DrawTriangles.toString = ea;
    l1.DrawTriangles.__enum__ = l1;
    l1.DrawTiles = ["DrawTiles", 6];
    l1.DrawTiles.toString = ea;
    l1.DrawTiles.__enum__ = l1;
    var k4 = nt["openfl._internal.renderer.opengl.utils.BucketDataType"] = {
        __ename__: ["openfl", "_internal", "renderer", "opengl", "utils", "BucketDataType"],
        __constructs__: ["Line", "Fill"]
    };
    k4.Line = ["Line", 0];
    k4.Line.toString = ea;
    k4.Line.__enum__ = k4;
    k4.Fill = ["Fill", 1];
    k4.Fill.toString = ea;
    k4.Fill.__enum__ = k4;
    var qN = function(i) {
        this.indices = [];
        this.data = [];
        this.lastIndex = 0;
        this.mode = 0;
        this.dirty = true;
        this.alpha = 1;
        this.tint = [1, 1, 1];
        this.gl = i;
        this.dataBuffer = i.createBuffer();
        this.indexBuffer = i.createBuffer()
    };
    nt["openfl._internal.renderer.opengl.utils.GLGraphicsData"] = qN;
    qN.__name__ = ["openfl", "_internal", "renderer", "opengl", "utils", "GLGraphicsData"];
    qN.prototype = {
        gl: null,
        tint: null,
        alpha: null,
        dirty: null,
        mode: null,
        lastIndex: null,
        data: null,
        glData: null,
        dataBuffer: null,
        indices: null,
        glIndices: null,
        indexBuffer: null,
        reset: function() {
            this.data = [];
            this.indices = [];
            this.lastIndex = 0
        },
        upload: function() {
            var i2 = this.data;
            var q;
            if (i2 != null) {
                q = new Float32Array(i2)
            } else {
                q = null
            }
            this.glData = q;
            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.dataBuffer);
            this.gl.bufferData(this.gl.ARRAY_BUFFER, this.glData, this.gl.STATIC_DRAW);
            var i1 = this.indices;
            var i;
            if (i1 != null) {
                i = new Uint16Array(i1)
            } else {
                i = null
            }
            this.glIndices = i;
            this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);
            this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, this.glIndices, this.gl.STATIC_DRAW);
            this.dirty = false
        },
        __class__: qN
    };
    var eh = nt["openfl._internal.renderer.opengl.utils.GraphicType"] = {
        __ename__: ["openfl", "_internal", "renderer", "opengl", "utils", "GraphicType"],
        __constructs__: ["Polygon", "Rectangle", "Circle", "Ellipse", "DrawTriangles", "DrawTiles", "OverrideMatrix"]
    };
    eh.Polygon = ["Polygon", 0];
    eh.Polygon.toString = ea;
    eh.Polygon.__enum__ = eh;
    eh.Rectangle = function(i) {
        var q = ["Rectangle", 1, i];
        q.__enum__ = eh;
        q.toString = ea;
        return q
    };
    eh.Circle = ["Circle", 2];
    eh.Circle.toString = ea;
    eh.Circle.__enum__ = eh;
    eh.Ellipse = ["Ellipse", 3];
    eh.Ellipse.toString = ea;
    eh.Ellipse.__enum__ = eh;
    eh.DrawTriangles = function(i1, qZ, q, qY, i, i2) {
        var js = ["DrawTriangles", 4, i1, qZ, q, qY, i, i2];
        js.__enum__ = eh;
        js.toString = ea;
        return js
    };
    eh.DrawTiles = function(i1, qZ, q, i, qY, js) {
        var i2 = ["DrawTiles", 5, i1, qZ, q, i, qY, js];
        i2.__enum__ = eh;
        i2.toString = ea;
        return i2
    };
    eh.OverrideMatrix = function(i) {
        var q = ["OverrideMatrix", 6, i];
        q.__enum__ = eh;
        q.toString = ea;
        return q
    };
    var nR = function(js, i2, i, q, i1) {
        if (i1 == null) {
            i1 = true
        }
        if (q == null) {
            q = true
        }
        this.__swapped = false;
        this.powerOfTwo = true;
        this.useOldTexture = false;
        this.gl = js;
        this.width = i2;
        this.height = i;
        this.smoothing = q;
        this.powerOfTwo = i1;
        this.set_renderTexture(new hm(js, i2, i, q, i1))
    };
    nt["openfl._internal.renderer.opengl.utils.PingPongTexture"] = nR;
    nR.__name__ = ["openfl", "_internal", "renderer", "opengl", "utils", "PingPongTexture"];
    nR.prototype = {
        gl: null,
        width: null,
        height: null,
        smoothing: null,
        useOldTexture: null,
        powerOfTwo: null,
        __swapped: null,
        __texture0: null,
        __texture1: null,
        swap: function() {
            this.__swapped = !this.__swapped;
            if ((this.__swapped ? this.__texture1 : this.__texture0) == null) {
                this.set_renderTexture(new hm(this.gl, this.width, this.height, this.smoothing, this.powerOfTwo))
            }
        },
        clear: function(js, i2, i, i1, q) {
            if (i1 == null) {
                i1 = 0
            }
            if (i == null) {
                i = 0
            }
            if (i2 == null) {
                i2 = 0
            }
            if (js == null) {
                js = 0
            }(this.__swapped ? this.__texture1 : this.__texture0).clear(js, i2, i, i1, q)
        },
        resize: function(q, i) {
            this.width = q;
            this.height = i;
            (this.__swapped ? this.__texture1 : this.__texture0).resize(q, i)
        },
        destroy: function() {
            if (this.__texture0 != null) {
                this.__texture0.destroy();
                this.__texture0 = null
            }
            if (this.__texture1 != null) {
                this.__texture1.destroy();
                this.__texture1 = null
            }
            this.__swapped = false
        },
        get_renderTexture: function() {
            if (this.__swapped) {
                return this.__texture1
            } else {
                return this.__texture0
            }
        },
        set_renderTexture: function(i) {
            if (this.__swapped) {
                return this.__texture1 = i
            } else {
                return this.__texture0 = i
            }
        },
        get_oldRenderTexture: function() {
            if (this.__swapped) {
                return this.__texture0
            } else {
                return this.__texture1
            }
        },
        set_oldRenderTexture: function(i) {
            if (this.__swapped) {
                return this.__texture0 = i
            } else {
                return this.__texture1 = i
            }
        },
        get_framebuffer: function() {
            return (this.__swapped ? this.__texture1 : this.__texture0).frameBuffer
        },
        get_texture: function() {
            if (this.useOldTexture) {
                return (this.__swapped ? this.__texture0 : this.__texture1).texture
            } else {
                return (this.__swapped ? this.__texture1 : this.__texture0).texture
            }
        },
        get___otherTexture: function() {
            if (this.__swapped) {
                return this.__texture0
            } else {
                return this.__texture1
            }
        },
        __class__: nR,
        __properties__: {
            get___otherTexture: "get___otherTexture",
            get_texture: "get_texture",
            get_framebuffer: "get_framebuffer",
            set_oldRenderTexture: "set_oldRenderTexture",
            get_oldRenderTexture: "get_oldRenderTexture",
            set_renderTexture: "set_renderTexture",
            get_renderTexture: "get_renderTexture"
        }
    };
    var hm = function(js, i2, i, q, i1) {
        if (i1 == null) {
            i1 = true
        }
        if (q == null) {
            q = true
        }
        this.powerOfTwo = true;
        this.gl = js;
        this.powerOfTwo = i1;
        this.frameBuffer = js.createFramebuffer();
        this.texture = js.createTexture();
        js.bindTexture(js.TEXTURE_2D, this.texture);
        js.texParameteri(js.TEXTURE_2D, js.TEXTURE_MAG_FILTER, q ? js.LINEAR : js.NEAREST);
        js.texParameteri(js.TEXTURE_2D, js.TEXTURE_MIN_FILTER, q ? js.LINEAR : js.NEAREST);
        js.texParameteri(js.TEXTURE_2D, js.TEXTURE_WRAP_S, js.CLAMP_TO_EDGE);
        js.texParameteri(js.TEXTURE_2D, js.TEXTURE_WRAP_T, js.CLAMP_TO_EDGE);
        js.bindFramebuffer(js.FRAMEBUFFER, this.frameBuffer);
        js.framebufferTexture2D(js.FRAMEBUFFER, js.COLOR_ATTACHMENT0, js.TEXTURE_2D, this.texture, 0);
        this.renderBuffer = js.createRenderbuffer();
        js.bindRenderbuffer(js.RENDERBUFFER, this.renderBuffer);
        js.framebufferRenderbuffer(js.FRAMEBUFFER, js.DEPTH_STENCIL_ATTACHMENT, js.RENDERBUFFER, this.renderBuffer);
        this.resize(i2, i)
    };
    nt["openfl._internal.renderer.opengl.utils.RenderTexture"] = hm;
    hm.__name__ = ["openfl", "_internal", "renderer", "opengl", "utils", "RenderTexture"];
    hm.prototype = {
        gl: null,
        frameBuffer: null,
        renderBuffer: null,
        texture: null,
        smoothing: null,
        width: null,
        height: null,
        powerOfTwo: null,
        __width: null,
        __height: null,
        __uvData: null,
        clear: function(js, i2, i, i1, q) {
            if (i1 == null) {
                i1 = 0
            }
            if (i == null) {
                i = 0
            }
            if (i2 == null) {
                i2 = 0
            }
            if (js == null) {
                js = 0
            }
            this.gl.clearColor(js, i2, i, i1);
            this.gl.clear(q == null ? this.gl.COLOR_BUFFER_BIT : q)
        },
        destroy: function() {
            if (this.frameBuffer != null) {
                this.gl.deleteFramebuffer(this.frameBuffer)
            }
            if (this.texture != null) {
                this.gl.deleteTexture(this.texture)
            }
            this.frameBuffer = null;
            this.texture = null
        },
        resize: function(i2, q) {
            if (this.width == i2 && this.height == q) {
                return
            }
            this.width = i2;
            this.height = q;
            var js = i2;
            var i = q;
            if (this.powerOfTwo) {
                js = this.powOfTwo(i2);
                i = this.powOfTwo(q)
            }
            var qY = this.__width;
            var i1 = this.__height;
            this.__width = js;
            this.__height = i;
            this.createUVs();
            if (qY == js && i1 == i) {
                return
            }
            this.gl.bindTexture(this.gl.TEXTURE_2D, this.texture);
            this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.__width, this.__height, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, null);
            this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.renderBuffer);
            this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.DEPTH_STENCIL, this.__width, this.__height)
        },
        createUVs: function() {
            if (this.__uvData == null) {
                this.__uvData = new iz()
            }
            var i = this.width / this.__width;
            var q = this.height / this.__height;
            this.__uvData.x0 = 0;
            this.__uvData.y0 = 0;
            this.__uvData.x1 = i;
            this.__uvData.y1 = 0;
            this.__uvData.x2 = i;
            this.__uvData.y2 = q;
            this.__uvData.x3 = 0;
            this.__uvData.y3 = q
        },
        powOfTwo: function(i) {
            var q = 1;
            while (q < i) {
                q <<= 1
            }
            return q
        },
        __class__: hm
    };
    var aU = function(i) {
        this.setContext(i)
    };
    nt["openfl._internal.renderer.opengl.utils.ShaderManager"] = aU;
    aU.__name__ = ["openfl", "_internal", "renderer", "opengl", "utils", "ShaderManager"];
    aU.prototype = {
        gl: null,
        currentShader: null,
        defaultShader: null,
        fillShader: null,
        patternFillShader: null,
        drawTrianglesShader: null,
        primitiveShader: null,
        setContext: function(i) {
            this.gl = i;
            this.defaultShader = new nC(i);
            this.fillShader = new qE(i);
            this.patternFillShader = new aA(i);
            this.drawTrianglesShader = new bS(i);
            this.primitiveShader = new d2(i);
            this.setShader(this.defaultShader, true)
        },
        destroy: function() {
            this.defaultShader.destroy();
            this.fillShader.destroy();
            this.patternFillShader.destroy();
            this.drawTrianglesShader.destroy();
            this.primitiveShader.destroy();
            this.gl = null
        },
        setShader: function(i, q) {
            if (q == null) {
                q = false
            }
            if (i == null) {
                this.currentShader = null;
                this.gl.useProgram(null);
                return true
            }
            if (this.currentShader != null && !q && this.currentShader.ID == i.ID) {
                return false
            }
            this.currentShader = i;
            this.gl.useProgram(i.program);
            return true
        },
        __class__: aU
    };
    var nz = function(q2, i2) {
        if (i2 == null) {
            i2 = 2000
        }
        this.colorTransform = new n();
        this.uvs = new iz();
        this.matrix = new qd();
        this.lastEnableColor = true;
        this.enableColor = true;
        this.attributes = [];
        this.writtenVertexBytes = 0;
        this.drawing = false;
        this.dirty = true;
        this.states = [];
        this.maxSprites = i2;
        this.attributes.push(new bo(2, 5126, false, "openfl_aPosition"));
        this.attributes.push(new bo(2, 5126, false, "openfl_aTexCoord0"));
        this.attributes.push(new bo(4, 5121, true, "openfl_aColor"));
        var q5 = [1, 1, 1, 1];
        var q4;
        if (q5 != null) {
            q4 = new Float32Array(q5)
        } else {
            q4 = null
        }
        this.attributes[2].defaultValue = q4;
        this.maxElementsPerVertex = 0;
        var q3 = 0;
        var q6 = this.attributes;
        while (q3 < q6.length) {
            var q7 = q6[q3];
            ++q3;
            this.maxElementsPerVertex += Math.floor(q7.components * q7.getElementsBytes() / 4)
        }
        this.vertexArraySize = i2 * this.maxElementsPerVertex * 4 * 4;
        this.indexArraySize = i2 * 6;
        this.vertexArray = new fQ(this.attributes, this.vertexArraySize, false);
        var qZ = this.vertexArray.buffer;
        var q1;
        if (qZ != null) {
            q1 = new Float32Array(qZ, 0)
        } else {
            q1 = null
        }
        this.positions = q1;
        var q8 = this.vertexArray.buffer;
        var qY;
        if (q8 != null) {
            qY = new Uint32Array(q8, 0)
        } else {
            qY = null
        }
        this.colors = qY;
        var q = this.indexArraySize;
        var i1;
        if (q != null) {
            i1 = new Uint16Array(q)
        } else {
            i1 = null
        }
        this.indices = i1;
        var q0 = 0;
        var js = 0;
        while (q0 < this.indexArraySize) {
            this.indices[q0] = js;
            this.indices[q0 + 1] = js + 1;
            this.indices[q0 + 2] = js + 2;
            this.indices[q0 + 3] = js;
            this.indices[q0 + 4] = js + 2;
            this.indices[q0 + 5] = js + 3;
            q0 += 6;
            js += 4
        }
        this.currentState = new gb();
        this.dirty = true;
        this.drawing = false;
        this.batchedSprites = 0;
        this.setContext(q2)
    };
    nt["openfl._internal.renderer.opengl.utils.SpriteBatch"] = nz;
    nz.__name__ = ["openfl", "_internal", "renderer", "opengl", "utils", "SpriteBatch"];
    nz.prototype = {
        gl: null,
        renderSession: null,
        states: null,
        currentState: null,
        vertexArray: null,
        positions: null,
        colors: null,
        indexBuffer: null,
        indices: null,
        dirty: null,
        drawing: null,
        clipRect: null,
        maxSprites: null,
        batchedSprites: null,
        vertexArraySize: null,
        indexArraySize: null,
        maxElementsPerVertex: null,
        elementsPerVertex: null,
        writtenVertexBytes: null,
        shader: null,
        attributes: null,
        enableColor: null,
        lastEnableColor: null,
        matrix: null,
        uvs: null,
        colorTransform: null,
        destroy: function() {
            this.vertexArray.destroy();
            this.vertexArray = null;
            this.indices = null;
            this.gl.deleteBuffer(this.indexBuffer);
            this.currentState.destroy();
            var i1 = 0;
            var q = this.states;
            while (i1 < q.length) {
                var i = q[i1];
                ++i1;
                i.destroy()
            }
            this.colorTransform = null;
            this.gl = null
        },
        begin: function(q, i) {
            this.renderSession = q;
            this.shader = q.shaderManager.defaultShader;
            this.drawing = true;
            this.start(i)
        },
        finish: function() {
            this.stop();
            this.clipRect = null;
            this.drawing = false
        },
        start: function(i) {
            if (!this.drawing) {
                this.stop()
            }
            this.dirty = true;
            this.clipRect = i
        },
        stop: function() {
            this.flush()
        },
        renderBitmapData: function(q3, js, q2, qY, i1, q1, i, q5, q4) {
            if (q4 == null) {
                q4 = false
            }
            if (i1 == null) {
                i1 = 1
            }
            if (q3 == null) {
                return
            }
            var q0 = q3.getTexture(this.gl);
            if (this.batchedSprites >= this.maxSprites) {
                this.flush()
            }
            var i2 = q3.__uvData;
            if (i2 == null) {
                return
            }
            this.prepareShader(i, q3);
            var q = ((i1 * 255 | 0) & 255) << 24 | 16777215;
            this.enableColor = true;
            if (this.enableColor != this.lastEnableColor) {
                this.flush();
                this.lastEnableColor = this.enableColor
            }
            this.attributes[2].enabled = this.lastEnableColor;
            this.elementsPerVertex = this.getElementsPerVertex();
            var qZ = this.batchedSprites * 4 * this.elementsPerVertex;
            this.fillVertices(qZ, q3.width, q3.height, q2, i2, q, q5);
            this.setState(this.batchedSprites, q0, js, q1, qY, i, true);
            this.batchedSprites++
        },
        renderTiles: function(r1, r8, rI, rs, q6, rV, q0) {
            if (q0 == null) {
                q0 = -1
            }
            if (q6 == null) {
                q6 = 0
            }
            if (rs == null) {
                rs = false
            }
            var rX = r8.__bitmap.getTexture(this.gl);
            if (rX == null) {
                return
            }
            var rU = (q6 & 1) > 0;
            var r2 = (q6 & 2) > 0;
            var rR = (q6 & 16) > 0;
            var r3 = (q6 & 4) > 0;
            var rJ = (q6 & 8) > 0;
            var rm = (q6 & 32) > 0;
            var q9 = (q6 & 64) > 0;
            var rZ = (q6 & 128) > 0;
            var ro;
            var js = q6 & 983040;
            switch (js) {
                case 65536:
                    ro = 0;
                    break;
                case 131072:
                    ro = 9;
                    break;
                case 262144:
                    ro = 12;
                    break;
                case 524288:
                    ro = 14;
                    break;
                default:
                    var qY = q6 & 15728640;
                    switch (qY) {
                        case 1048576:
                            ro = 2;
                            break;
                        case 2097152:
                            ro = 8;
                            break;
                        case 4194304:
                            ro = 11;
                            break;
                        case 8388608:
                            ro = 5;
                            break;
                        default:
                            var i2 = q6 & 251658240;
                            switch (i2) {
                                case 16777216:
                                    ro = 3;
                                    break;
                                case 33554432:
                                    ro = 6;
                                    break;
                                default:
                                    ro = 10
                            }
                    }
            }
            if (rR) {
                rU = false;
                r2 = false
            }
            var sa = 0;
            var rq = 0;
            var qZ = 0;
            var ru = 0;
            var rS = 0;
            var rb = 0;
            var i = 3;
            if (rm) {
                if (q9) {
                    i = 8
                } else {
                    i = 6
                }
            }
            if (rU) {
                sa = i;
                i++
            }
            if (r2) {
                rq = i;
                i++
            }
            if (rR) {
                rb = i;
                i += 4
            }
            if (r3) {
                qZ = i;
                i += 3
            }
            if (rJ) {
                rS = i;
                i++
            }
            if (rZ) {
                ru = i;
                i += 4
            }
            var q4 = rI.length;
            if (q0 >= 0 && q4 > q0) {
                q4 = q0
            }
            var rF = Math.ceil(q4 / i);
            var rd = 0;
            var rY = -1;
            var q1 = r8.__rectTile;
            var rT = r8.__rectUV;
            var rP = r8.__point;
            var rn = 0;
            var rl = 0;
            var rO = 1;
            var rc = 16777215;
            var q7 = -1;
            var r4 = 1;
            var rp = 0;
            var rW = 1;
            var rr = 0;
            var rA = 0;
            var rz = 0;
            var rv = 0;
            var rt = 0;
            var rH = 0;
            var rG = 0;
            var rk = 0;
            var ri = 0;
            var r0 = r1.__worldTransform;
            var q5 = 0;
            var rj = 1;
            var rg = 0;
            var rf = 0;
            var re = 1;
            var q3 = 0;
            var q2 = 0;
            var rE = r0.a;
            var rD = r0.b;
            var rC = r0.c;
            var rB = r0.d;
            var i1 = r0.tx;
            var q = r0.ty;
            var r6 = 0;
            var r5 = 0;
            var r7 = 0;
            var r9 = 0;
            var rL = 0;
            var rK = 0;
            var rN = 0;
            var rQ = 0;
            this.enableColor = true;
            if (this.enableColor != this.lastEnableColor) {
                this.flush();
                this.lastEnableColor = this.enableColor
            }
            this.attributes[2].enabled = this.lastEnableColor;
            this.elementsPerVertex = this.getElementsPerVertex();
            this.prepareShader(rV, null);
            while (rd < q4) {
                if (this.batchedSprites >= this.maxSprites) {
                    this.flush()
                }
                rn = rI[rd];
                rl = rI[rd + 1];
                if (rm) {
                    rY = -1;
                    q1.x = rI[rd + 2];
                    q1.y = rI[rd + 3];
                    q1.width = rI[rd + 4];
                    q1.height = rI[rd + 5];
                    if (q9) {
                        rP.x = rI[rd + 6];
                        rP.y = rI[rd + 7]
                    } else {
                        rP.setTo(0, 0)
                    }
                    r7 = q1.width;
                    r9 = q1.height;
                    rL = q1.get_left() / r8.__bitmap.width;
                    rK = q1.get_top() / r8.__bitmap.height;
                    rN = q1.get_right() / r8.__bitmap.width;
                    rQ = q1.get_bottom() / r8.__bitmap.height
                } else {
                    rY = (rI[rd + 2] == null ? 0 : rI[rd + 2]) | 0;
                    q1 = r8.__tileRects[rY];
                    rP = r8.__centerPoints[rY];
                    rT = r8.__tileUVs[rY];
                    if (q1 != null) {
                        r7 = q1.width;
                        r9 = q1.height;
                        rL = rT.x;
                        rK = rT.y;
                        rN = rT.width;
                        rQ = rT.height
                    }
                }
                if (q1 != null && q1.width > 0 && q1.height > 0 && rP != null) {
                    rO = 1;
                    rc = 16777215;
                    r4 = 1;
                    rp = 0;
                    rW = 1;
                    rr = 0;
                    if (rJ) {
                        rO = rI[rd + rS] * r1.__worldAlpha
                    } else {
                        rO = r1.__worldAlpha
                    }
                    if (r3) {
                        rc = (rI[rd + qZ] * 255 | 0) << 16 | (rI[rd + qZ + 1] * 255 | 0) << 8 | (rI[rd + qZ + 2] * 255 | 0)
                    }
                    var rM = r1.__worldColorTransform;
                    this.colorTransform.redMultiplier = rM.redMultiplier;
                    this.colorTransform.greenMultiplier = rM.greenMultiplier;
                    this.colorTransform.blueMultiplier = rM.blueMultiplier;
                    this.colorTransform.alphaMultiplier = rM.alphaMultiplier;
                    this.colorTransform.redOffset = rM.redOffset;
                    this.colorTransform.greenOffset = rM.greenOffset;
                    this.colorTransform.blueOffset = rM.blueOffset;
                    this.colorTransform.alphaOffset = rM.alphaOffset;
                    if (rZ) {
                        this.colorTransform.redOffset += rI[rd + ru];
                        this.colorTransform.greenOffset += rI[rd + ru + 1];
                        this.colorTransform.blueOffset += rI[rd + ru + 2];
                        this.colorTransform.alphaOffset += rI[rd + ru + 3]
                    }
                    if (rU) {
                        r4 = rI[rd + sa]
                    }
                    if (r2) {
                        rp = rI[rd + rq];
                        rW = Math.cos(rp);
                        rr = Math.sin(rp)
                    }
                    if (rR) {
                        rA = rI[rd + rb];
                        rz = rI[rd + rb + 1];
                        rv = rI[rd + rb + 2];
                        rt = rI[rd + rb + 3]
                    } else {
                        rA = r4 * rW;
                        rz = r4 * rr;
                        rv = -rz;
                        rt = rA
                    }
                    rk = rP.x * rA + rP.y * rv;
                    ri = rP.x * rz + rP.y * rt;
                    rH = rn - rk;
                    rG = rl - ri;
                    rj = (rA * rE + rz * rC) * r7;
                    rg = (rA * rD + rz * rB) * r7;
                    rf = (rv * rE + rt * rC) * r9;
                    re = (rv * rD + rt * rB) * r9;
                    q3 = rH * rE + rG * rC + i1;
                    q2 = rH * rD + rG * rB + q;
                    q5 = this.batchedSprites * 4 * this.elementsPerVertex;
                    this.positions[q5] = q3;
                    this.positions[q5 + 1] = q2;
                    this.positions[q5 + 5] = rj + q3;
                    this.positions[q5 + 6] = rg + q2;
                    this.positions[q5 + 10] = rj + rf + q3;
                    this.positions[q5 + 11] = re + rg + q2;
                    this.positions[q5 + 15] = rf + q3;
                    this.positions[q5 + 16] = re + q2;
                    var sb;
                    var ra;
                    var q8 = this.colors[q5 + 19] = ((rO * 255 | 0) & 255) << 24 | rc;
                    ra = this.colors[q5 + 14] = q8;
                    sb = this.colors[q5 + 9] = ra;
                    this.colors[q5 + 4] = sb;
                    this.positions[q5 + 2] = rL;
                    this.positions[q5 + 3] = rK;
                    this.positions[q5 + 7] = rN;
                    this.positions[q5 + 8] = rK;
                    this.positions[q5 + 12] = rN;
                    this.positions[q5 + 13] = rQ;
                    this.positions[q5 + 17] = rL;
                    this.positions[q5 + 18] = rQ;
                    this.writtenVertexBytes = q5 + 20;
                    this.setState(this.batchedSprites, rX, rs, ro, this.colorTransform, rV, false);
                    this.batchedSprites++
                }
                rd += i
            }
        },
        fillVertices: function(i, js, i1, qZ, q, qY, rb) {
            if (qY == null) {
                qY = -1
            }
            var rc = qZ.a;
            var q8 = qZ.b;
            var q7 = qZ.c;
            var q5 = qZ.d;
            var re = qZ.tx;
            var ra = qZ.ty;
            if (rb == null || rb == 2) {
                this.positions[i] = re;
                this.positions[i + 1] = ra;
                this.positions[i + 5] = rc * js + re;
                this.positions[i + 6] = q8 * js + ra;
                this.positions[i + 10] = rc * js + q7 * i1 + re;
                this.positions[i + 11] = q5 * i1 + q8 * js + ra;
                this.positions[i + 15] = q7 * i1 + re;
                this.positions[i + 16] = q5 * i1 + ra
            } else {
                var rg = Math.round(re);
                this.positions[i] = rg;
                var rf = Math.round(ra);
                this.positions[i + 1] = rf;
                var rd = Math.round(rc * js + re);
                this.positions[i + 5] = rd;
                var q9 = Math.round(q8 * js + ra);
                this.positions[i + 6] = q9;
                var q6 = Math.round(rc * js + q7 * i1 + re);
                this.positions[i + 10] = q6;
                var q4 = Math.round(q5 * i1 + q8 * js + ra);
                this.positions[i + 11] = q4;
                var q3 = Math.round(q7 * i1 + re);
                this.positions[i + 15] = q3;
                var q2 = Math.round(q5 * i1 + ra);
                this.positions[i + 16] = q2
            }
            if (this.enableColor) {
                var q1;
                var q0;
                var i2 = this.colors[i + 19] = qY;
                q0 = this.colors[i + 14] = i2;
                q1 = this.colors[i + 9] = q0;
                this.colors[i + 4] = q1
            }
            this.positions[i + 2] = q.x0;
            this.positions[i + 3] = q.y0;
            this.positions[i + 7] = q.x1;
            this.positions[i + 8] = q.y1;
            this.positions[i + 12] = q.x2;
            this.positions[i + 13] = q.y2;
            this.positions[i + 17] = q.x3;
            this.positions[i + 18] = q.y3;
            this.writtenVertexBytes = i + 20
        },
        enableAttributes: function(i) {
            if (i == null) {
                i = -1
            }
            this.enableColor = i != -1;
            if (this.enableColor != this.lastEnableColor) {
                this.flush();
                this.lastEnableColor = this.enableColor
            }
            this.attributes[2].enabled = this.lastEnableColor;
            this.elementsPerVertex = this.getElementsPerVertex()
        },
        flush: function() {
            if (this.batchedSprites == 0) {
                return
            }
            if (this.clipRect != null) {
                this.gl.enable(this.gl.SCISSOR_TEST);
                this.gl.scissor(Math.floor(this.clipRect.x), Math.floor(this.clipRect.y), Math.ceil(this.clipRect.width), Math.ceil(this.clipRect.height))
            }
            if (this.dirty) {
                this.dirty = false;
                this.renderSession.activeTextures = 1;
                this.vertexArray.bind();
                this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer)
            }
            if (this.writtenVertexBytes > this.vertexArraySize * 0.5) {
                this.vertexArray.upload(this.positions)
            } else {
                var q = this.positions.subarray(0, this.writtenVertexBytes);
                this.vertexArray.upload(q)
            }
            var js;
            var i2 = 0;
            var q0 = 0;
            this.currentState.shader = null;
            this.currentState.shaderData = null;
            this.currentState.texture = null;
            this.currentState.textureSmooth = false;
            this.currentState.blendMode = this.renderSession.blendModeManager.currentBlendMode;
            this.currentState.colorTransform = null;
            this.currentState.skipColorTransformAlpha = false;
            var qY = 0;
            var qZ = this.batchedSprites;
            while (qY < qZ) {
                var i1 = qY++;
                js = this.states[i1];
                this.currentState.skipColorTransformAlpha = js.skipColorTransformAlpha;
                if (!js.equals(this.currentState)) {
                    this.renderBatch(this.currentState, i2, q0);
                    q0 = i1;
                    i2 = 0;
                    this.currentState.shader = js.shader;
                    this.currentState.shaderData = js.shaderData;
                    this.currentState.texture = js.texture;
                    this.currentState.textureSmooth = js.textureSmooth;
                    this.currentState.blendMode = js.blendMode;
                    this.currentState.skipColorTransform = js.skipColorTransform;
                    if (this.currentState.skipColorTransform) {
                        this.currentState.colorTransform = null
                    } else {
                        this.currentState.colorTransform = js.colorTransform
                    }
                }
                i2++
            }
            this.renderBatch(this.currentState, i2, q0);
            this.batchedSprites = 0;
            this.writtenVertexBytes = 0;
            if (this.clipRect != null) {
                this.gl.disable(this.gl.SCISSOR_TEST)
            }
        },
        renderBatch: function(i2, q, js) {
            if (q == 0 || i2.texture == null) {
                return
            }
            var i1;
            if (i2.shader == null) {
                i1 = this.renderSession.shaderManager.defaultShader
            } else {
                i1 = i2.shader
            }
            this.renderSession.shaderManager.setShader(i1);
            i1.bindVertexArray(this.vertexArray);
            this.renderSession.blendModeManager.setBlendMode(i1.blendMode != null ? i1.blendMode : i2.blendMode);
            this.gl.uniformMatrix3fv(i1.getUniformLocation("openfl_uProjectionMatrix"), false, this.renderSession.projectionMatrix.toArray(true));
            if (i2.colorTransform != null) {
                this.gl.uniform1i(i1.getUniformLocation("openfl_uUseColorTransform"), 1);
                var i = i2.colorTransform;
                this.gl.uniform4f(i1.getUniformLocation("openfl_uColorMultiplier"), i.redMultiplier, i.greenMultiplier, i.blueMultiplier, i2.skipColorTransformAlpha ? 1 : i.alphaMultiplier);
                this.gl.uniform4f(i1.getUniformLocation("openfl_uColorOffset"), i.redOffset / 255, i.greenOffset / 255, i.blueOffset / 255, i.alphaOffset / 255)
            } else {
                this.gl.uniform1i(i1.getUniformLocation("openfl_uUseColorTransform"), 0);
                this.gl.uniform4f(i1.getUniformLocation("openfl_uColorMultiplier"), 1, 1, 1, 1);
                this.gl.uniform4f(i1.getUniformLocation("openfl_uColorOffset"), 0, 0, 0, 0)
            }
            this.gl.activeTexture(this.gl.TEXTURE0);
            this.gl.bindTexture(this.gl.TEXTURE_2D, i2.texture);
            this.gl.uniform1i(i1.getUniformLocation("openfl_uSampler0"), 0);
            if (i1.smooth != null && i1.smooth || i2.textureSmooth) {
                this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);
                this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR)
            } else {
                this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.NEAREST);
                this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.NEAREST)
            }
            this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, i1.wrapS);
            this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, i1.wrapT);
            i1.applyData(i2.shaderData, this.renderSession);
            this.gl.drawElements(this.gl.TRIANGLES, q * 6, this.gl.UNSIGNED_SHORT, js * 6 * 2);
            this.renderSession.drawCount++
        },
        setState: function(q, qZ, i, js, i2, qY, i1) {
            if (i1 == null) {
                i1 = false
            }
            if (i == null) {
                i = false
            }
            var q0 = this.states[q];
            if (q0 == null) {
                q0 = this.states[q] = new gb()
            }
            q0.texture = qZ;
            q0.textureSmooth = i;
            q0.blendMode = js;
            q0.skipColorTransform = i2 != null && i2.__isDefault();
            if (!q0.skipColorTransform) {
                q0.colorTransform.redMultiplier = i2.redMultiplier;
                q0.colorTransform.greenMultiplier = i2.greenMultiplier;
                q0.colorTransform.blueMultiplier = i2.blueMultiplier;
                q0.colorTransform.alphaMultiplier = i2.alphaMultiplier;
                q0.colorTransform.redOffset = i2.redOffset;
                q0.colorTransform.greenOffset = i2.greenOffset;
                q0.colorTransform.blueOffset = i2.blueOffset;
                q0.colorTransform.alphaOffset = i2.alphaOffset
            }
            q0.skipColorTransformAlpha = i1;
            if (qY == null) {
                q0.shader = null;
                q0.shaderData = null
            } else {
                q0.shader = qY.__shader;
                q0.shaderData = qY.data
            }
        },
        setContext: function(i) {
            this.gl = i;
            this.vertexArray.setContext(i, this.positions);
            this.indexBuffer = i.createBuffer();
            i.bindBuffer(i.ELEMENT_ARRAY_BUFFER, this.indexBuffer);
            i.bufferData(i.ELEMENT_ARRAY_BUFFER, this.indices, i.STATIC_DRAW)
        },
        prepareShader: function(i, i1) {
            if (i != null) {
                i.__init(this.gl);
                i.__shader.wrapS = i.repeatX;
                i.__shader.wrapT = i.repeatY;
                i.__shader.smooth = i.smooth;
                i.__shader.blendMode = i.blendMode;
                var i2 = i.data.get(lK.uObjectSize);
                var q = i.data.get(lK.uTextureSize);
                if (i1 != null) {
                    i2.value[0] = i1.width;
                    i2.value[1] = i1.height;
                    if (i1.__pingPongTexture != null) {
                        q.value[0] = i1.__pingPongTexture.get_renderTexture().__width;
                        q.value[1] = i1.__pingPongTexture.get_renderTexture().__height
                    } else {
                        q.value[0] = i1.width;
                        q.value[1] = i1.height
                    }
                } else {
                    i2.value[0] = 0;
                    i2.value[1] = 0;
                    q.value[0] = 0;
                    q.value[1] = 0
                }
            }
        },
        getElementsPerVertex: function() {
            var q = 0;
            var i2 = 0;
            var i1 = this.attributes;
            while (i2 < i1.length) {
                var i = i1[i2];
                ++i2;
                if (i.enabled) {
                    q += Math.floor(i.components * i.getElementsBytes() / 4)
                }
            }
            return q
        },
        __class__: nz
    };
    var gb = function() {
        this.skipColorTransformAlpha = false;
        this.skipColorTransform = false;
        this.colorTransform = new n();
        this.textureSmooth = true
    };
    nt["openfl._internal.renderer.opengl.utils._SpriteBatch.State"] = gb;
    gb.__name__ = ["openfl", "_internal", "renderer", "opengl", "utils", "_SpriteBatch", "State"];
    gb.prototype = {
        texture: null,
        textureSmooth: null,
        blendMode: null,
        colorTransform: null,
        skipColorTransform: null,
        skipColorTransformAlpha: null,
        shader: null,
        shaderData: null,
        equals: function(i) {
            return (this.shader == null && i.shader == null || this.shader != null && i.shader != null && this.shader.ID == i.shader.ID) && this.texture == i.texture && this.textureSmooth == i.textureSmooth && this.blendMode == i.blendMode && (this.skipColorTransform && i.skipColorTransform || !this.skipColorTransform && !i.skipColorTransform && this.colorTransform.__equals(i.colorTransform, this.skipColorTransformAlpha))
        },
        destroy: function() {
            this.texture = null;
            this.colorTransform = null
        },
        __class__: gb
    };
    var e2 = function(i) {
        this.stencilMask = 0;
        this.stencilStack = [];
        this.setContext(i);
        this.reverse = true;
        this.count = 0
    };
    nt["openfl._internal.renderer.opengl.utils.StencilManager"] = e2;
    e2.__name__ = ["openfl", "_internal", "renderer", "opengl", "utils", "StencilManager"];
    e2.prototype = {
        count: null,
        gl: null,
        reverse: null,
        stencilStack: null,
        stencilMask: null,
        prepareGraphics: function(i2, i1, q) {
            var i = i1.shaderManager.fillShader;
            i1.shaderManager.setShader(i);
            this.gl.uniformMatrix3fv(i.getUniformLocation("openfl_uTranslationMatrix"), false, q);
            this.gl.uniformMatrix3fv(i.getUniformLocation("openfl_uProjectionMatrix"), false, i1.projectionMatrix.toArray(true));
            i2.vertexArray.bind();
            i.bindVertexArray(i2.vertexArray);
            this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, i2.indexBuffer)
        },
        pushBucket: function(qZ, i2, i1, i) {
            if (i == null) {
                i = false
            }
            if (!i) {
                this.gl.enable(this.gl.STENCIL_TEST);
                this.gl.clear(this.gl.STENCIL_BUFFER_BIT);
                this.gl.stencilMask(255);
                this.gl.colorMask(false, false, false, false);
                this.gl.stencilFunc(this.gl.NEVER, 1, 255);
                this.gl.stencilOp(this.gl.INVERT, this.gl.KEEP, this.gl.KEEP);
                this.gl.clear(this.gl.STENCIL_BUFFER_BIT)
            }
            var qY = 0;
            var q = qZ.fills;
            while (qY < q.length) {
                var js = q[qY];
                ++qY;
                if (js.available) {
                    continue
                }
                this.prepareGraphics(js, i2, i1);
                this.gl.drawElements(js.drawMode, js.glIndices.length, this.gl.UNSIGNED_SHORT, 0)
            }
            if (!i) {
                this.gl.colorMask(true, true, true, i2.renderer.transparent);
                this.gl.stencilOp(this.gl.KEEP, this.gl.KEEP, this.gl.KEEP);
                this.gl.stencilFunc(this.gl.EQUAL, 255, 255)
            }
        },
        popBucket: function(i, i1, q) {
            this.gl.disable(this.gl.STENCIL_TEST)
        },
        pushMask: function(js, q4) {
            var q5 = js.__maskGraphics;
            if (q5 == null || q5.__commands.get_length() <= 0) {
                return
            }
            if (this.stencilMask == 0) {
                this.gl.enable(this.gl.STENCIL_TEST);
                this.gl.clear(this.gl.STENCIL_BUFFER_BIT)
            }
            this.stencilMask++;
            if (q5.__dirty) {
                fW.updateGraphics(js, q5, q4.gl)
            }
            var i2;
            if (this.stencilMask == 1) {
                i2 = this.gl.NEVER
            } else {
                i2 = this.gl.EQUAL
            }
            var i1 = this.stencilMask;
            var q6 = 255 - this.stencilMask;
            this.gl.stencilMask(255);
            this.gl.colorMask(false, false, false, false);
            this.gl.stencilFunc(i2, i1, q6);
            this.gl.stencilOp(this.gl.REPLACE, this.gl.KEEP, this.gl.KEEP);
            var q1 = q5.__glStack[mA.glContextId];
            var q;
            var q3 = js.__worldTransform;
            var q2 = 0;
            var qZ = q1.buckets.length;
            while (q2 < qZ) {
                var qY = q2++;
                q = q1.buckets[qY];
                if (q.overrideMatrix != null) {
                    q3 = q.overrideMatrix
                } else {
                    q3 = js.__worldTransform
                }
                var q0 = q.mode;
                switch (q0[1]) {
                    case 1:
                    case 2:
                        this.pushBucket(q, q4, q3.toArray(true), true);
                        break;
                    default:
                }
            }
            this.gl.colorMask(true, true, true, q4.renderer.transparent);
            this.gl.stencilOp(this.gl.KEEP, this.gl.KEEP, this.gl.KEEP);
            this.gl.stencilFunc(this.gl.EQUAL, this.stencilMask, 255)
        },
        popMask: function(i, q) {
            this.stencilMask--;
            if (this.stencilMask <= 0) {
                this.gl.disable(this.gl.STENCIL_TEST);
                this.stencilMask = 0
            }
        },
        bindGraphics: function(q, i, i1) {},
        destroy: function() {
            this.stencilStack = null;
            this.gl = null
        },
        popStencil: function(q, i, i1) {
            this.stencilStack.pop();
            this.count--;
            if (this.stencilStack.length == 0) {
                this.gl.disable(this.gl.STENCIL_TEST)
            } else {
                var i2 = this.count;
                this.bindGraphics(q, i, i1);
                this.gl.colorMask(false, false, false, false);
                if (i.mode == 1) {
                    this.reverse = !this.reverse;
                    if (this.reverse) {
                        this.gl.stencilFunc(this.gl.EQUAL, 255 - (i2 + 1), 255);
                        this.gl.stencilOp(this.gl.KEEP, this.gl.KEEP, this.gl.INCR)
                    } else {
                        this.gl.stencilFunc(this.gl.EQUAL, i2 + 1, 255);
                        this.gl.stencilOp(this.gl.KEEP, this.gl.KEEP, this.gl.DECR)
                    }
                    this.gl.drawElements(this.gl.TRIANGLE_FAN, 4, this.gl.UNSIGNED_SHORT, (i.indices.length - 4) * 2);
                    this.gl.stencilFunc(this.gl.ALWAYS, 0, 255);
                    this.gl.stencilOp(this.gl.KEEP, this.gl.KEEP, this.gl.INVERT);
                    this.gl.drawElements(this.gl.TRIANGLE_FAN, i.indices.length - 4, this.gl.UNSIGNED_SHORT, 0);
                    if (!this.reverse) {
                        this.gl.stencilFunc(this.gl.EQUAL, 255 - i2, 255)
                    } else {
                        this.gl.stencilFunc(this.gl.EQUAL, i2, 255)
                    }
                } else {
                    if (!this.reverse) {
                        this.gl.stencilFunc(this.gl.EQUAL, 255 - (i2 + 1), 255);
                        this.gl.stencilOp(this.gl.KEEP, this.gl.KEEP, this.gl.INCR)
                    } else {
                        this.gl.stencilFunc(this.gl.EQUAL, i2 + 1, 255);
                        this.gl.stencilOp(this.gl.KEEP, this.gl.KEEP, this.gl.DECR)
                    }
                    this.gl.drawElements(this.gl.TRIANGLE_STRIP, i.indices.length, this.gl.UNSIGNED_SHORT, 0);
                    if (!this.reverse) {
                        this.gl.stencilFunc(this.gl.EQUAL, 255 - i2, 255)
                    } else {
                        this.gl.stencilFunc(this.gl.EQUAL, i2, 255)
                    }
                }
                this.gl.colorMask(true, true, true, true);
                this.gl.stencilOp(this.gl.KEEP, this.gl.KEEP, this.gl.KEEP)
            }
        },
        pushStencil: function(q, i, i1) {
            this.bindGraphics(q, i, i1);
            if (this.stencilStack.length == 0) {
                this.gl.enable(this.gl.STENCIL_TEST);
                this.gl.clear(this.gl.STENCIL_BUFFER_BIT);
                this.reverse = true;
                this.count = 0
            }
            this.stencilStack.push(i);
            var i2 = this.count;
            this.gl.colorMask(false, false, false, false);
            this.gl.stencilFunc(this.gl.ALWAYS, 0, 255);
            this.gl.stencilOp(this.gl.KEEP, this.gl.KEEP, this.gl.INVERT);
            if (i.mode == 1) {
                this.gl.drawElements(this.gl.TRIANGLE_FAN, i.indices.length - 4, this.gl.UNSIGNED_SHORT, 0);
                if (this.reverse) {
                    this.gl.stencilFunc(this.gl.EQUAL, 255 - i2, 255);
                    this.gl.stencilOp(this.gl.KEEP, this.gl.KEEP, this.gl.DECR)
                } else {
                    this.gl.stencilFunc(this.gl.EQUAL, i2, 255);
                    this.gl.stencilOp(this.gl.KEEP, this.gl.KEEP, this.gl.INCR)
                }
                this.gl.drawElements(this.gl.TRIANGLE_FAN, 4, this.gl.UNSIGNED_SHORT, (i.indices.length - 4) * 2);
                if (this.reverse) {
                    this.gl.stencilFunc(this.gl.EQUAL, 255 - (i2 + 1), 255)
                } else {
                    this.gl.stencilFunc(this.gl.EQUAL, i2 + 1, 255)
                }
                this.reverse = !this.reverse
            } else {
                if (!this.reverse) {
                    this.gl.stencilFunc(this.gl.EQUAL, 255 - i2, 255);
                    this.gl.stencilOp(this.gl.KEEP, this.gl.KEEP, this.gl.DECR)
                } else {
                    this.gl.stencilFunc(this.gl.EQUAL, i2, 255);
                    this.gl.stencilOp(this.gl.KEEP, this.gl.KEEP, this.gl.INCR)
                }
                this.gl.drawElements(this.gl.TRIANGLE_STRIP, i.indices.length, this.gl.UNSIGNED_SHORT, 0);
                if (!this.reverse) {
                    this.gl.stencilFunc(this.gl.EQUAL, 255 - (i2 + 1), 255)
                } else {
                    this.gl.stencilFunc(this.gl.EQUAL, i2 + 1, 255)
                }
            }
            this.gl.colorMask(true, true, true, true);
            this.gl.stencilOp(this.gl.KEEP, this.gl.KEEP, this.gl.KEEP);
            this.count++
        },
        setContext: function(i) {
            this.gl = i
        },
        __class__: e2
    };
    var fQ = function(q, i1, i) {
        if (i == null) {
            i = false
        }
        if (i1 == null) {
            i1 = 0
        }
        this.isStatic = false;
        this.size = 0;
        this.attributes = [];
        this.size = i1;
        this.attributes = q;
        if (i1 > 0) {
            this.buffer = new gf(i1)
        }
        this.isStatic = i
    };
    nt["openfl._internal.renderer.opengl.utils.VertexArray"] = fQ;
    fQ.__name__ = ["openfl", "_internal", "renderer", "opengl", "utils", "VertexArray"];
    fQ.prototype = {
        gl: null,
        glBuffer: null,
        attributes: null,
        buffer: null,
        size: null,
        isStatic: null,
        bind: function() {
            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.glBuffer)
        },
        unbind: function() {
            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, null)
        },
        upload: function(i) {
            this.gl.bufferSubData(this.gl.ARRAY_BUFFER, 0, i)
        },
        destroy: function() {
            this.gl.deleteBuffer(this.glBuffer);
            this.buffer = null
        },
        setContext: function(q, i) {
            this.gl = q;
            this.glBuffer = q.createBuffer();
            q.bindBuffer(q.ARRAY_BUFFER, this.glBuffer);
            q.bufferData(q.ARRAY_BUFFER, i, this.isStatic ? q.STATIC_DRAW : q.DYNAMIC_DRAW)
        },
        get_stride: function() {
            var q = 0;
            var i2 = 0;
            var i1 = this.attributes;
            while (i2 < i1.length) {
                var i = i1[i2];
                ++i2;
                if (i.enabled) {
                    q += Math.floor(i.components * i.getElementsBytes() / 4) * 4
                }
            }
            return q
        },
        __class__: fQ,
        __properties__: {
            get_stride: "get_stride"
        }
    };
    var lm = function(q, i1, i) {
        this.format = q;
        this.start = i1;
        this.end = i
    };
    nt["openfl._internal.text.TextFormatRange"] = lm;
    lm.__name__ = ["openfl", "_internal", "text", "TextFormatRange"];
    lm.prototype = {
        end: null,
        format: null,
        start: null,
        __class__: lm
    };
    var dJ = function(q, i1, i) {
        this.format = q;
        this.startIndex = i1;
        this.endIndex = i
    };
    nt["openfl._internal.text.TextLayoutGroup"] = dJ;
    dJ.__name__ = ["openfl", "_internal", "text", "TextLayoutGroup"];
    dJ.prototype = {
        advances: null,
        ascent: null,
        descent: null,
        endIndex: null,
        format: null,
        height: null,
        leading: null,
        lineIndex: null,
        offsetX: null,
        offsetY: null,
        startIndex: null,
        width: null,
        __class__: dJ
    };
    var cC = function() {
        dE.call(this);
        if (ns.application == null) {
            ns.application = this
        }
    };
    nt["openfl.display.Application"] = cC;
    cC.__name__ = ["openfl", "display", "Application"];
    cC.__super__ = dE;
    cC.prototype = lP(dE.prototype, {
        create: function(q) {
            this.config = q;
            this.backend.create(q);
            if (q != null) {
                if (Object.prototype.hasOwnProperty.call(q, "fps")) {
                    this.backend.setFrameRate(q.fps)
                }
                if (Object.prototype.hasOwnProperty.call(q, "windows")) {
                    var js = 0;
                    var i1 = q.windows;
                    while (js < i1.length) {
                        var i = i1[js];
                        ++js;
                        var i2 = new pk(i);
                        this.createWindow(i2);
                        break
                    }
                }
                if (this.preloader == null || this.preloader.complete) {
                    this.onPreloadComplete()
                }
            }
        },
        __class__: cC
    });
    var f0 = function(q, i, i1, i2) {
        if (i2 == null) {
            i2 = -1
        }
        if (i1 == null) {
            i1 = true
        }
        this.__usingPingPongTexture = false;
        this.transparent = i1;
        if (q == null) {
            q = 0
        } else {
            q = q
        }
        if (i == null) {
            i = 0
        } else {
            i = i
        }
        if (q < 0) {
            q = 0
        } else {
            q = q
        }
        if (i < 0) {
            i = 0
        } else {
            i = i
        }
        this.width = q;
        this.height = i;
        this.rect = new gn(0, 0, q, i);
        if (q > 0 && i > 0) {
            if (i1) {
                if ((i2 & -16777216) == 0) {
                    i2 = 0
                }
            } else {
                i2 = -16777216 | i2 & 16777215
            }
            i2 = i2 << 8 | i2 >> 24 & 255;
            this.image = new nv(null, 0, 0, q, i, i2);
            this.image.set_transparent(i1);
            this.__isValid = true
        }
        this.__createUVs();
        this.__worldTransform = new qd();
        this.__worldColorTransform = new n()
    };
    nt["openfl.display.BitmapData"] = f0;
    f0.__name__ = ["openfl", "display", "BitmapData"];
    f0.__interfaces__ = [py];
    f0.fromBase64 = function(i, q, i2) {
        var i1 = new f0(0, 0, true);
        i1.__fromBase64(i, q, i2);
        return i1
    };
    f0.fromBytes = function(i, i2, i1) {
        var q = new f0(0, 0, true);
        q.__fromBytes(i, i2, i1);
        return q
    };
    f0.fromCanvas = function(i, i1) {
        if (i1 == null) {
            i1 = true
        }
        if (i == null) {
            return null
        }
        var q = new f0(0, 0, i1);
        q.__fromImage(nv.fromCanvas(i));
        q.image.set_transparent(i1);
        return q
    };
    f0.fromFile = function(i2, i1, i) {
        var q = new f0(0, 0, true);
        q.__fromFile(i2, i1, i);
        return q
    };
    f0.fromImage = function(q, i1) {
        if (i1 == null) {
            i1 = true
        }
        if (q == null || q.buffer == null) {
            return null
        }
        var i = new f0(0, 0, i1);
        i.__fromImage(q);
        i.image.set_transparent(i1);
        return i
    };
    f0.__asRenderTexture = function(i1, q) {
        if (q == null) {
            q = 0
        }
        if (i1 == null) {
            i1 = 0
        }
        var i = new f0(0, 0);
        i.__resize(i1, q);
        return i
    };
    f0.prototype = {
        height: null,
        image: null,
        rect: null,
        transparent: null,
        width: null,
        __worldTransform: null,
        __worldColorTransform: null,
        __cacheAsBitmap: null,
        __blendMode: null,
        __shader: null,
        __buffer: null,
        __isValid: null,
        __surface: null,
        __texture: null,
        __textureImage: null,
        __pingPongTexture: null,
        __usingPingPongTexture: null,
        __uvData: null,
        applyFilter: function(i2, i1, i, q) {
            if (!this.__isValid || i2 == null || !i2.__isValid) {
                return
            }
            x.convertToCanvas(this.image);
            x.createImageData(this.image);
            x.convertToCanvas(i2.image);
            x.createImageData(i2.image);
            q.__applyFilter(this.image.buffer.__srcImageData, i2.image.buffer.__srcImageData, i1, i);
            this.image.dirty = true
        },
        clone: function() {
            if (!this.__isValid) {
                return new f0(this.width, this.height, this.transparent)
            } else {
                return f0.fromImage(this.image.clone(), this.transparent)
            }
        },
        colorTransform: function(q, i) {
            if (!this.__isValid) {
                return
            }
            this.image.colorTransform(q.__toLimeRectangle(), i.__toLimeColorMatrix());
            this.__usingPingPongTexture = false
        },
        compare: function(qZ) {
            if (qZ == this) {
                return 0
            } else {
                if (qZ == null) {
                    return -1
                } else {
                    if (this.__isValid == false || qZ.__isValid == false) {
                        return -2
                    } else {
                        if (this.width != qZ.width) {
                            return -3
                        } else {
                            if (this.height != qZ.height) {
                                return -4
                            }
                        }
                    }
                }
            }
            if (this.image != null && qZ.image != null && this.image.get_format() == qZ.image.get_format()) {
                var q7 = this.image.get_data();
                var q2 = qZ.image.get_data();
                var q8 = true;
                var q5 = 0;
                var js = q7.length;
                while (q5 < js) {
                    var ra = q5++;
                    if (q7[ra] != q2[ra]) {
                        q8 = false;
                        break
                    }
                }
                if (q8) {
                    return 0
                }
            }
            var i2 = null;
            var rd;
            var qY;
            var i1;
            var q9;
            var q6;
            var rc;
            var re;
            var rf;
            var rb = 0;
            var q4 = this.height;
            while (rb < q4) {
                var q0 = rb++;
                var q3 = 0;
                var q = this.width;
                while (q3 < q) {
                    var q1 = q3++;
                    rd = false;
                    qY = this.getPixel32(q1, q0);
                    i1 = qZ.getPixel32(q1, q0);
                    q9 = 0;
                    if (qY != i1) {
                        q6 = (qY >> 16 & 255) - (i1 >> 16 & 255);
                        rc = (qY >> 8 & 255) - (i1 >> 8 & 255);
                        re = (qY & 255) - (i1 & 255);
                        if (q6 < 0) {
                            q6 *= -1
                        }
                        if (rc < 0) {
                            rc *= -1
                        }
                        if (re < 0) {
                            re *= -1
                        }
                        if (q6 == 0 && rc == 0 && re == 0) {
                            rf = (qY >> 24 & 255) - (i1 >> 24 & 255);
                            if (rf != 0) {
                                q9 = (q9 >> 24 & 255 & 255) << 24 | 16711680 | (q9 >> 8 & 255 & 255) << 8 | q9 & 255 & 255;
                                255;
                                q9 = (q9 >> 24 & 255 & 255) << 24 | (q9 >> 16 & 255 & 255) << 16 | 65280 | q9 & 255 & 255;
                                255;
                                q9 = (q9 >> 24 & 255 & 255) << 24 | (q9 >> 16 & 255 & 255) << 16 | (q9 >> 8 & 255 & 255) << 8 | 255;
                                255;
                                q9 = (rf & 255) << 24 | (q9 >> 16 & 255 & 255) << 16 | (q9 >> 8 & 255 & 255) << 8 | q9 & 255 & 255;
                                rf;
                                rd = true
                            }
                        } else {
                            q9 = (q9 >> 24 & 255 & 255) << 24 | (q6 & 255) << 16 | (q9 >> 8 & 255 & 255) << 8 | q9 & 255 & 255;
                            q6;
                            q9 = (q9 >> 24 & 255 & 255) << 24 | (q9 >> 16 & 255 & 255) << 16 | (rc & 255) << 8 | q9 & 255 & 255;
                            rc;
                            q9 = (q9 >> 24 & 255 & 255) << 24 | (q9 >> 16 & 255 & 255) << 16 | (q9 >> 8 & 255 & 255) << 8 | re & 255;
                            re;
                            q9 = -16777216 | (q9 >> 16 & 255 & 255) << 16 | (q9 >> 8 & 255 & 255) << 8 | q9 & 255 & 255;
                            255;
                            rd = true
                        }
                    }
                    if (rd) {
                        if (i2 == null) {
                            i2 = new f0(this.width, this.height, this.transparent || qZ.transparent, 0)
                        }
                        i2.setPixel32(q1, q0, q9)
                    }
                }
            }
            if (i2 == null) {
                return 0
            }
            return i2
        },
        copyChannel: function(qZ, i1, i, q, qY) {
            if (!this.__isValid) {
                return
            }
            var js;
            switch (q) {
                case 1:
                    js = dn.RED;
                    break;
                case 2:
                    js = dn.GREEN;
                    break;
                case 4:
                    js = dn.BLUE;
                    break;
                case 8:
                    js = dn.ALPHA;
                    break;
                default:
                    return
            }
            var i2;
            switch (qY) {
                case 1:
                    i2 = dn.RED;
                    break;
                case 2:
                    i2 = dn.GREEN;
                    break;
                case 4:
                    i2 = dn.BLUE;
                    break;
                case 8:
                    i2 = dn.ALPHA;
                    break;
                default:
                    return
            }
            this.image.copyChannel(qZ.image, i1.__toLimeRectangle(), i.__toLimeVector2(), js, i2);
            this.__usingPingPongTexture = false
        },
        copyPixels: function(qY, i1, i, js, q, i2) {
            if (i2 == null) {
                i2 = false
            }
            if (!this.__isValid || qY == null) {
                return
            }
            this.image.copyPixels(qY.image, i1.__toLimeRectangle(), i.__toLimeVector2(), js != null ? js.image : null, q != null ? q.__toLimeVector2() : null, i2);
            this.__usingPingPongTexture = false
        },
        dispose: function() {
            this.image = null;
            this.width = 0;
            this.height = 0;
            this.rect = null;
            this.__isValid = false;
            if (this.__texture != null) {
                var q = ns.current.stage.__renderer;
                if (q != null) {
                    var i = q.renderSession;
                    var i1 = i.gl;
                    if (i1 != null) {
                        i1.deleteTexture(this.__texture);
                        this.__texture = null
                    }
                }
            }
            if (this.__pingPongTexture != null) {
                this.__pingPongTexture.destroy();
                this.__pingPongTexture = null
            }
        },
        draw: function(i, q1, i1, q0, i2, qY) {
            if (qY == null) {
                qY = false
            }
            if (!this.__isValid) {
                return
            }
            if (i1 != null) {
                var q = new f0(ar.getProperty(i, "width"), ar.getProperty(i, "height"), true, 0);
                q.draw(i);
                q.colorTransform(q.rect, i1);
                i = q
            }
            x.convertToCanvas(this.image);
            x.sync(this.image, true);
            var js = this.image.buffer;
            var q2 = new ii();
            q2.context = js.__srcContext;
            q2.roundPixels = true;
            q2.maskManager = new eT(q2);
            if (!qY) {
                js.__srcContext.mozImageSmoothingEnabled = false;
                js.__srcContext.msImageSmoothingEnabled = false;
                js.__srcContext.imageSmoothingEnabled = false
            }
            if (i2 != null) {
                q2.maskManager.pushRect(i2, new qd())
            }
            var qZ = i.__worldTransform;
            i.__updateTransforms(q1 != null ? q1 : new qd());
            i.__updateChildren(false);
            i.__renderCanvas(q2);
            i.__updateTransforms(qZ);
            i.__updateChildren(true);
            if (!qY) {
                js.__srcContext.mozImageSmoothingEnabled = true;
                js.__srcContext.msImageSmoothingEnabled = true;
                js.__srcContext.imageSmoothingEnabled = true
            }
            if (i2 != null) {
                q2.maskManager.popMask()
            }
            js.__srcContext.setTransform(1, 0, 0, 1, 0, 0);
            js.__srcImageData = null;
            js.data = null
        },
        encode: function(q, i1, i) {
            if (!this.__isValid || q == null) {
                return i = null
            }
            if (n0.__instanceof(i1, dt)) {
                return i = op.fromBytes(this.image.encode("png"))
            } else {
                if (n0.__instanceof(i1, gz)) {
                    return i = op.fromBytes(this.image.encode("jpg", (n0.__cast(i1, gz)).quality))
                }
            }
            return i = null
        },
        fillRect: function(q, i) {
            if (!this.__isValid || q == null) {
                return
            }
            if (this.transparent && (i & -16777216) == 0) {
                i = 0
            }
            this.image.fillRect(q.__toLimeRectangle(), i, 1);
            this.__usingPingPongTexture = false
        },
        floodFill: function(i, i1, q) {
            if (!this.__isValid) {
                return
            }
            this.image.floodFill(i, i1, q, 1);
            this.__usingPingPongTexture = false
        },
        generateFilterRect: function(q, i) {
            return q.clone()
        },
        getBuffer: function(q) {
            if (this.__buffer == null) {
                var i = [this.width, this.height, 0, 1, 1, 0, this.height, 0, 0, 1, this.width, 0, 0, 1, 0, 0, 0, 0, 0, 0];
                this.__buffer = q.createBuffer();
                q.bindBuffer(q.ARRAY_BUFFER, this.__buffer);
                q.bufferData(q.ARRAY_BUFFER, (function(js) {
                    var i2;
                    var i1;
                    if (i != null) {
                        i1 = new Float32Array(i)
                    } else {
                        i1 = null
                    }
                    i2 = i1;
                    return i2
                }(this)), q.STATIC_DRAW);
                q.bindBuffer(q.ARRAY_BUFFER, null)
            }
            return this.__buffer
        },
        getColorBoundsRect: function(q, i2, i1) {
            if (i1 == null) {
                i1 = true
            }
            if (!this.__isValid) {
                return new gn(0, 0, this.width, this.height)
            }
            if (!this.transparent || (q >> 24 & 255) > 0) {
                var i = i2;
                if ((i >> 24 & 255) == 0) {
                    i = 0
                }
            }
            var js = this.image.getColorBoundsRect(q, i2, i1, 1);
            return new gn(js.x, js.y, js.width, js.height)
        },
        getPixel: function(i, q) {
            if (!this.__isValid) {
                return 0
            }
            return this.image.getPixel(i, q, 1)
        },
        getPixel32: function(i, q) {
            if (!this.__isValid) {
                return 0
            }
            return this.image.getPixel32(i, q, 1)
        },
        getPixels: function(i) {
            if (!this.__isValid) {
                return null
            }
            if (i == null) {
                i = this.rect
            }
            return op.fromBytes(this.image.getPixels(i.__toLimeRectangle(), 1))
        },
        getSurface: function() {
            if (!this.__isValid) {
                return null
            }
            if (this.__surface == null) {
                this.__surface = iJ.fromImage(this.image)
            }
            return this.__surface
        },
        getTexture: function(i2) {
            if (!this.__isValid) {
                return null
            }
            if (this.__usingPingPongTexture && this.__pingPongTexture != null) {
                return this.__pingPongTexture.get_texture()
            }
            if (this.__texture == null) {
                this.__texture = i2.createTexture();
                i2.bindTexture(i2.TEXTURE_2D, this.__texture);
                i2.texParameteri(i2.TEXTURE_2D, i2.TEXTURE_WRAP_S, i2.CLAMP_TO_EDGE);
                i2.texParameteri(i2.TEXTURE_2D, i2.TEXTURE_WRAP_T, i2.CLAMP_TO_EDGE);
                i2.texParameteri(i2.TEXTURE_2D, i2.TEXTURE_MAG_FILTER, i2.NEAREST);
                i2.texParameteri(i2.TEXTURE_2D, i2.TEXTURE_MIN_FILTER, i2.NEAREST);
                this.image.dirty = true
            }
            if (this.image != null && this.image.dirty) {
                var q;
                var i1;
                if (this.__surface != null) {
                    hu.flush(this.__surface)
                }
                if (this.image.buffer.bitsPerPixel == 1) {
                    q = i2.ALPHA;
                    i1 = i2.ALPHA
                } else {
                    q = i2.RGBA;
                    i1 = i2.RGBA
                }
                i2.bindTexture(i2.TEXTURE_2D, this.__texture);
                var i = this.image;
                if (!i.get_premultiplied() && i.get_transparent() || i.get_format() != 0) {
                    i = i.clone();
                    i.set_format(0);
                    i.set_premultiplied(true)
                }
                i2.texImage2D(i2.TEXTURE_2D, 0, q, this.width, this.height, 0, i1, i2.UNSIGNED_BYTE, i.get_data());
                i2.bindTexture(i2.TEXTURE_2D, null);
                this.image.dirty = false
            }
            return this.__texture
        },
        getVector: function(q2) {
            var i1 = this.getPixels(q2);
            var q = kr["int"](op.get_length(i1) / 4);
            var q4;
            var q1;
            q1 = new p0();
            var qZ;
            qZ = new Array(q);
            q1.data = qZ;
            q1.length = q;
            q1.fixed = true;
            q4 = q1;
            var q0 = 0;
            while (q0 < q) {
                var qY = q0++;
                var q3 = i1.readUnsignedInt();
                if (!q4.fixed) {
                    if (qY >= q4.length) {
                        q4.length = qY + 1
                    }
                    if (q4.data.length < q4.length) {
                        var js;
                        var i2;
                        i2 = new Array(q4.data.length + 10);
                        js = i2;
                        dQ.blit(q4.data, 0, js, 0, q4.data.length);
                        q4.data = js
                    }
                }
                q4.data[qY] = q3
            }
            return q4
        },
        histogram: function(q) {
            var q3;
            if (q != null) {
                q3 = q
            } else {
                q3 = new gn(0, 0, this.width, this.height)
            }
            var js = this.getPixels(q3);
            var q4;
            var q1 = [];
            var q2 = 0;
            while (q2 < 4) {
                var q0 = q2++;
                q1.push((function(q7) {
                    var i;
                    var q6 = [];
                    var q5 = 0;
                    while (q5 < 256) {
                        var i1 = q5++;
                        q6.push(0)
                    }
                    i = q6;
                    return i
                }(this)))
            }
            q4 = q1;
            var i2 = 0;
            var qZ = op.get_length(js);
            while (i2 < qZ) {
                var qY = i2++;
                ++q4[qY % 4][js.readUnsignedByte()]
            }
            return q4
        },
        hitTest: function(q6, q0, ri, q2, q8) {
            if (q8 == null) {
                q8 = 1
            }
            if (!this.__isValid) {
                return false
            }
            if (n0.__instanceof(ri, el)) {
                ri = (n0.__cast(ri, el)).bitmapData
            }
            if (n0.__instanceof(ri, pp)) {
                var q5 = ri;
                var q4 = q5.x - q6.x | 0;
                var q3 = q5.y - q6.y | 0;
                if (this.rect.contains(q4, q3)) {
                    var q1 = this.getPixel32(q4, q3);
                    if ((q1 >> 24 & 255) >= q0) {
                        return true
                    }
                }
            } else {
                if (n0.__instanceof(ri, f0)) {
                    var re = ri;
                    var rh;
                    var qY;
                    if (q2 == null) {
                        rh = 0;
                        qY = 0
                    } else {
                        rh = q2.x - q6.x | 0;
                        qY = q2.y - q6.y | 0
                    }
                    if (this.rect.contains(rh, qY)) {
                        var q7 = gn.__temp;
                        q7.setTo(rh, qY, Math.min(re.width, this.width - rh), Math.min(re.height, this.height - qY));
                        var rd = this.getPixels(q7);
                        q7.offset(-rh, -qY);
                        var i2 = re.getPixels(q7);
                        var qZ = q7.width * q7.height | 0;
                        var rk;
                        var q;
                        var js = 0;
                        while (js < qZ) {
                            var rg = js++;
                            rk = rd.readUnsignedInt();
                            q = i2.readUnsignedInt();
                            if ((rk >> 24 & 255) >= q0 && (q >> 24 & 255) >= q8) {
                                return true
                            }
                        }
                        return false
                    }
                } else {
                    if (n0.__instanceof(ri, gn)) {
                        var rc = gn.__temp;
                        rc.copyFrom(ri);
                        rc.offset(-q6.x, -q6.y);
                        rc.__contract(0, 0, this.width, this.height);
                        if (rc.width > 0 && rc.height > 0) {
                            var ra = this.getPixels(rc);
                            var rb = kr["int"](op.get_length(ra) / 4);
                            var rj;
                            var q9 = 0;
                            while (q9 < rb) {
                                var rf = q9++;
                                rj = ra.readUnsignedInt();
                                if ((rj >> 24 & 255) >= q0) {
                                    return true
                                }
                            }
                        }
                    }
                }
            }
            return false
        },
        lock: function() {},
        merge: function(qZ, i1, i, q, qY, i2, js) {
            if (!this.__isValid || qZ == null || !qZ.__isValid || i1 == null || i == null) {
                return
            }
            this.image.merge(qZ.image, i1.__toLimeRectangle(), i.__toLimeVector2(), q, qY, i2, js);
            this.__usingPingPongTexture = false
        },
        noise: function(i1, rg, q2, ra, rc) {
            if (rc == null) {
                rc = false
            }
            if (ra == null) {
                ra = 7
            }
            if (q2 == null) {
                q2 = 255
            }
            if (rg == null) {
                rg = 0
            }
            if (!this.__isValid) {
                return
            }
            var re;
            var qY = function() {
                i1 = i1 * 1103515245 + 12345;
                return kr["int"](Math.abs(i1 / 65536)) % 32768
            };
            re = qY;
            re();
            var q8 = q2 - rg;
            var rf = new ge(0);
            var rb = (ra & 1) == 1;
            var q5 = (ra & 2) >> 1 == 1;
            var rd = (ra & 4) >> 2 == 1;
            var qZ = (ra & 8) >> 3 == 1;
            var q9 = 0;
            var i2 = this.height;
            while (q9 < i2) {
                var q1 = q9++;
                var q6 = 0;
                var q7 = this.width;
                while (q6 < q7) {
                    var q4 = q6++;
                    var q0 = 0;
                    var i = 0;
                    var q3 = 0;
                    var js = 255;
                    if (rc) {
                        q0 = q3 = i = rg + re() % q8;
                        js = 255
                    } else {
                        if (rb) {
                            q0 = rg + re() % q8
                        }
                        if (q5) {
                            q3 = rg + re() % q8
                        }
                        if (rd) {
                            i = rg + re() % q8
                        }
                        if (qZ) {
                            js = rg + re() % q8
                        }
                    }
                    var q = js;
                    q = (q << 8) + q0;
                    q = (q << 8) + q3;
                    q = (q << 8) + i;
                    this.setPixel32(q4, q1, q)
                }
            }
        },
        paletteMap: function(i1, i2, qZ, js, q1, rh, qY) {
            var q7 = i2.width | 0;
            var rg = i2.height | 0;
            var q5 = this.getPixels(i2);
            q5.position = 0;
            var q0;
            var q3;
            var rc;
            var rd;
            var rf;
            var ra;
            var q9;
            var q8;
            var q6;
            var q4;
            var q2 = 0;
            var q = rg * q7;
            while (q2 < q) {
                var rb = q2++;
                q0 = q5.readUnsignedInt();
                if (qY == null) {
                    q9 = q0 & -16777216
                } else {
                    q9 = qY[q0 >> 24 & 255]
                }
                if (js == null) {
                    q8 = q0 & 16711680
                } else {
                    q8 = js[q0 >> 16 & 255]
                }
                if (q1 == null) {
                    q6 = q0 & 65280
                } else {
                    q6 = q1[q0 >> 8 & 255]
                }
                if (rh == null) {
                    q4 = q0 & 255
                } else {
                    q4 = rh[q0 & 255]
                }
                rf = (q9 >> 24 & 255) + (q8 >> 24 & 255) + (q6 >> 24 & 255) + (q4 >> 24 & 255);
                if (rf > 255) {
                    rf == 255
                }
                q3 = (q9 >> 16 & 255) + (q8 >> 16 & 255) + (q6 >> 16 & 255) + (q4 >> 16 & 255);
                if (q3 > 255) {
                    q3 == 255
                }
                rc = (q9 >> 8 & 255) + (q8 >> 8 & 255) + (q6 >> 8 & 255) + (q4 >> 8 & 255);
                if (rc > 255) {
                    rc == 255
                }
                rd = (q9 & 255) + (q8 & 255) + (q6 & 255) + (q4 & 255);
                if (rd > 255) {
                    rd == 255
                }
                ra = rf << 24 | q3 << 16 | rc << 8 | rd;
                q5.position = rb * 4;
                q5.writeUnsignedInt(ra)
            }
            q5.position = 0;
            var re = new gn(qZ.x, qZ.y, q7, rg);
            this.setPixels(re, q5)
        },
        perlinNoise: function(i1, q, js, qZ, i, q0, qY, q1, i2) {
            if (q1 == null) {
                q1 = false
            }
            if (qY == null) {
                qY = 7
            }
            ns.notImplemented("BitmapData.perlinNoise")
        },
        scroll: function(i, q) {
            if (!this.__isValid) {
                return
            }
            this.image.scroll(i, q);
            this.__usingPingPongTexture = false
        },
        setPixel: function(i, i1, q) {
            if (!this.__isValid) {
                return
            }
            this.image.setPixel(i, i1, q, 1);
            this.__usingPingPongTexture = false
        },
        setPixel32: function(i, i1, q) {
            if (!this.__isValid) {
                return
            }
            this.image.setPixel32(i, i1, q, 1);
            this.__usingPingPongTexture = false
        },
        setPixels: function(q, i) {
            if (!this.__isValid || q == null) {
                return
            }
            this.image.setPixels(q.__toLimeRectangle(), op.toBytes(i), 1);
            this.__usingPingPongTexture = false
        },
        setVector: function(i1, i2) {
            var i = new ge(0);
            op.set_length(i, i2.length * 4);
            var js = 0;
            while (js < i2.length) {
                var q = i2.data[js];
                ++js;
                i.writeUnsignedInt(q)
            }
            i.position = 0;
            this.setPixels(i1, i)
        },
        threshold: function(q0, qZ, q, qY, i, js, i1, i2) {
            if (i2 == null) {
                i2 = false
            }
            if (i1 == null) {
                i1 = -1
            }
            if (js == null) {
                js = 0
            }
            if (q0 == null || qZ == null || q == null || qZ.x > q0.width || qZ.y > q0.height || q.x > this.width || q.y > this.height) {
                return 0
            }
            return this.image.threshold(q0.image, qZ.__toLimeRectangle(), q.__toLimeVector2(), qY, i, js, i1, i2, 1)
        },
        unlock: function(i) {},
        __createUVs: function(qY, q0, i2, qZ, q, js, i, i1) {
            if (i1 == null) {
                i1 = 1
            }
            if (i == null) {
                i = 0
            }
            if (js == null) {
                js = 1
            }
            if (q == null) {
                q = 1
            }
            if (qZ == null) {
                qZ = 0
            }
            if (i2 == null) {
                i2 = 1
            }
            if (q0 == null) {
                q0 = 0
            }
            if (qY == null) {
                qY = 0
            }
            if (this.__uvData == null) {
                this.__uvData = new iz()
            }
            this.__uvData.x0 = qY;
            this.__uvData.y0 = q0;
            this.__uvData.x1 = i2;
            this.__uvData.y1 = qZ;
            this.__uvData.x2 = q;
            this.__uvData.y2 = js;
            this.__uvData.x3 = i;
            this.__uvData.y3 = i1
        },
        __drawGL: function(q4, i, q3, js, q1, qY, qZ, q0, i2, q2, q) {
            if (q == null) {
                q = true
            }
            if (q2 == null) {
                q2 = false
            }
            if (i2 == null) {
                i2 = false
            }
            if (q0 == null) {
                q0 = false
            }
            if (qZ == null) {
                qZ = false
            }
            this.__pingPongTexture = qX.pushFramebuffer(q4, this.__pingPongTexture, this.rect, qZ, this.transparent, i2, q);
            qX.drawBitmapDrawable(q4, q0 ? this : null, i, q3, js, q1, qY);
            qX.popFramebuffer(q4, q2 ? this.image : null);
            var i1 = this.__pingPongTexture.get_renderTexture().__uvData;
            this.__createUVs(i1.x0, i1.y0, i1.x1, i1.y1, i1.x2, i1.y2, i1.x3, i1.y3);
            this.__isValid = true;
            this.__usingPingPongTexture = true
        },
        __fromBase64: function(i, q, i1) {
            var i2 = this;
            nv.fromBase64(i, q, function(js) {
                i2.__fromImage(js);
                if (i1 != null) {
                    i1(i2)
                }
            })
        },
        __fromBytes: function(i, i1, q) {
            var i2 = this;
            nv.fromBytes(op.toBytes(i), function(q1) {
                i2.__fromImage(q1);
                if (i1 != null) {
                    x.convertToCanvas(q1);
                    x.createImageData(q1);
                    var q0 = q1.buffer.data;
                    var qY = 0;
                    var qZ = op.get_length(i1);
                    while (qY < qZ) {
                        var js = qY++;
                        var q2 = i1.readUnsignedByte();
                        q0[js * 4 + 3] = q2
                    }
                    q1.dirty = true
                }
                if (q != null) {
                    q(i2)
                }
            })
        },
        __fromFile: function(i1, q, i) {
            var i2 = this;
            nv.fromFile(i1, function(js) {
                i2.__fromImage(js);
                if (q != null) {
                    q(i2)
                }
            }, i)
        },
        __fromImage: function(i) {
            if (i != null && i.buffer != null) {
                this.image = i;
                this.width = i.width;
                this.height = i.height;
                this.rect = new gn(0, 0, i.width, i.height);
                this.__isValid = true
            }
        },
        __renderCairo: function(js) {
            if (!this.__isValid) {
                return
            }
            var qY = js.cairo;
            if (this.__worldTransform == null) {
                this.__worldTransform = new qd()
            }
            var i1 = this.__worldTransform;
            if (js.roundPixels) {
                var q = i1.__toMatrix3();
                q.tx = Math.round(q.tx);
                q.ty = Math.round(q.ty);
                qY.set_matrix(q)
            } else {
                qY.set_matrix(i1.__toMatrix3())
            }
            var i = this.getSurface();
            if (i != null) {
                var i2 = jp.createForSurface(i);
                if (qY.get_antialias() == 1) {
                    jp.set_filter(i2, 3)
                } else {
                    jp.set_filter(i2, 1)
                }
                qY.set_source(i2);
                qY.paint()
            }
        },
        __renderCairoMask: function(i) {},
        __renderCanvas: function(i1) {
            if (!this.__isValid) {
                return
            }
            x.sync(this.image, false);
            var q = i1.context;
            if (this.__worldTransform == null) {
                this.__worldTransform = new qd()
            }
            q.globalAlpha = 1;
            var i = this.__worldTransform;
            if (i1.roundPixels) {
                q.setTransform(i.a, i.b, i.c, i.d, i.tx | 0, i.ty | 0)
            } else {
                q.setTransform(i.a, i.b, i.c, i.d, i.tx, i.ty)
            }
            q.drawImage(this.image.get_src(), 0, 0)
        },
        __renderCanvasMask: function(i) {},
        __renderGL: function(i) {
            i.spriteBatch.renderBitmapData(this, false, this.__worldTransform, this.__worldColorTransform, this.__worldColorTransform.alphaMultiplier, this.__blendMode, this.__shader)
        },
        __resize: function(q, i) {
            this.width = q;
            this.height = i;
            this.rect.width = q;
            this.rect.height = i
        },
        __sync: function() {
            x.sync(this.image, false)
        },
        __updateChildren: function(i) {},
        __updateMask: function(i) {},
        __updateTransforms: function(i) {
            if (i == null) {
                this.__worldTransform.identity()
            } else {
                this.__worldTransform = i
            }
        },
        __class__: f0
    };
    var iz = function() {
        this.y3 = 0;
        this.y2 = 0;
        this.y1 = 0;
        this.y0 = 0;
        this.x3 = 0;
        this.x2 = 0;
        this.x1 = 0;
        this.x0 = 0
    };
    nt["openfl.display.TextureUvs"] = iz;
    iz.__name__ = ["openfl", "display", "TextureUvs"];
    iz.prototype = {
        x0: null,
        x1: null,
        x2: null,
        x3: null,
        y0: null,
        y1: null,
        y2: null,
        y3: null,
        reset: function() {
            this.x0 = this.x1 = this.x2 = this.x3 = this.y0 = this.y1 = this.y2 = this.y3 = 0
        },
        __class__: iz
    };
    var kQ = {};
    nt["openfl.display._BlendMode.BlendMode_Impl_"] = kQ;
    kQ.__name__ = ["openfl", "display", "_BlendMode", "BlendMode_Impl_"];
    kQ.fromString = function(i) {
        switch (i) {
            case "add":
                return 0;
            case "alpha":
                return 1;
            case "darken":
                return 2;
            case "difference":
                return 3;
            case "erase":
                return 4;
            case "hardlight":
                return 5;
            case "invert":
                return 6;
            case "layer":
                return 7;
            case "lighten":
                return 8;
            case "multiply":
                return 9;
            case "normal":
                return 10;
            case "overlay":
                return 11;
            case "screen":
                return 12;
            case "shader":
                return 13;
            case "subtract":
                return 14;
            default:
                return null
        }
    };
    kQ.toString = function(i) {
        switch (i) {
            case 0:
                return "add";
            case 1:
                return "alpha";
            case 2:
                return "darken";
            case 3:
                return "difference";
            case 4:
                return "erase";
            case 5:
                return "hardlight";
            case 6:
                return "invert";
            case 7:
                return "layer";
            case 8:
                return "lighten";
            case 9:
                return "multiply";
            case 10:
                return "normal";
            case 11:
                return "overlay";
            case 12:
                return "screen";
            case 13:
                return "shader";
            case 14:
                return "subtract";
            default:
                return null
        }
    };
    var oH = {};
    nt["openfl.display._CapsStyle.CapsStyle_Impl_"] = oH;
    oH.__name__ = ["openfl", "display", "_CapsStyle", "CapsStyle_Impl_"];
    oH.fromString = function(i) {
        switch (i) {
            case "none":
                return 0;
            case "round":
                return 1;
            case "square":
                return 2;
            default:
                return null
        }
    };
    oH.toString = function(i) {
        switch (i) {
            case 0:
                return "none";
            case 1:
                return "round";
            case 2:
                return "square";
            default:
                return null
        }
    };
    var i9 = function(i) {
        if (i == null) {
            i = "DirectRenderer"
        }
        eH.call(this)
    };
    nt["openfl.display.DirectRenderer"] = i9;
    i9.__name__ = ["openfl", "display", "DirectRenderer"];
    i9.__super__ = eH;
    i9.prototype = lP(eH.prototype, {
        __render: null,
        get_render: function() {
            return this.__render
        },
        set_render: function(i) {
            return this.__render = i
        },
        __class__: i9,
        __properties__: lP(eH.prototype.__properties__, {
            set_render: "set_render",
            get_render: "get_render"
        })
    });
    var kU = function(i, q) {
        lR.call(this);
        this.__name = i;
        this.__frame = q
    };
    nt["openfl.display.FrameLabel"] = kU;
    kU.__name__ = ["openfl", "display", "FrameLabel"];
    kU.__super__ = lR;
    kU.prototype = lP(lR.prototype, {
        frame: null,
        name: null,
        __frame: null,
        __name: null,
        get_frame: function() {
            return this.__frame
        },
        get_name: function() {
            return this.__name
        },
        __class__: kU,
        __properties__: {
            get_name: "get_name",
            get_frame: "get_frame"
        }
    });
    var pb = {};
    nt["openfl.display._GradientType.GradientType_Impl_"] = pb;
    pb.__name__ = ["openfl", "display", "_GradientType", "GradientType_Impl_"];
    pb.fromString = function(i) {
        switch (i) {
            case "linear":
                return 0;
            case "radial":
                return 1;
            default:
                return null
        }
    };
    pb.toString = function(i) {
        switch (i) {
            case 0:
                return "linear";
            case 1:
                return "radial";
            default:
                return null
        }
    };
    var e3 = function() {
        this.__glStack = [];
        this.__dirty = true;
        this.__commands = new lS();
        this.__strokePadding = 0;
        this.__positionX = 0;
        this.__positionY = 0;
        this.__hardware = true;
        this.moveTo(0, 0)
    };
    nt["openfl.display.Graphics"] = e3;
    e3.__name__ = ["openfl", "display", "Graphics"];
    e3.prototype = {
        __hardware: null,
        __bounds: null,
        __commands: null,
        __dirty: null,
        __glStack: null,
        __drawPaths: null,
        __image: null,
        __positionX: null,
        __positionY: null,
        __strokePadding: null,
        __transformDirty: null,
        __visible: null,
        __cachedTexture: null,
        __owner: null,
        __canvas: null,
        __context: null,
        __bitmap: null,
        beginBitmapFill: function(i2, q, i1, i) {
            if (i == null) {
                i = false
            }
            if (i1 == null) {
                i1 = true
            }
            this.__commands.beginBitmapFill(i2, q != null ? q.clone() : null, i1, i);
            this.__visible = true
        },
        beginFill: function(i, q) {
            if (q == null) {
                q = 1
            }
            if (i == null) {
                i = 0
            }
            this.__commands.beginFill(i & 16777215, q);
            if (q > 0) {
                this.__visible = true
            }
        },
        beginGradientFill: function(q0, i, q, qY, q1, q2, i2, qZ) {
            if (qZ == null) {
                qZ = 0
            }
            if (i2 == null) {
                i2 = 1
            }
            if (q2 == null) {
                q2 = 0
            }
            this.__commands.beginGradientFill(q0, i, q, qY, q1, q2, i2, qZ);
            this.__hardware = false;
            var js = 0;
            while (js < q.length) {
                var i1 = q[js];
                ++js;
                if (i1 > 0) {
                    this.__visible = true;
                    break
                }
            }
        },
        clear: function() {
            this.__commands.clear();
            this.__strokePadding = 0;
            if (this.__bounds != null) {
                this.set___dirty(true);
                this.__transformDirty = true;
                this.__bounds = null
            }
            this.__visible = false;
            this.__hardware = true;
            this.moveTo(0, 0)
        },
        copyFrom: function(i) {
            if (i.__bounds != null) {
                this.__bounds = i.__bounds.clone()
            } else {
                this.__bounds = null
            }
            this.__commands = i.__commands.copy();
            this.set___dirty(true);
            this.__strokePadding = i.__strokePadding;
            this.__positionX = i.__positionX;
            this.__positionY = i.__positionY;
            this.__transformDirty = true;
            this.__visible = i.__visible
        },
        cubicCurveTo: function(q8, q, q7, i, qY, i2) {
            this.__inflateBounds(this.__positionX - this.__strokePadding, this.__positionY - this.__strokePadding);
            this.__inflateBounds(this.__positionX + this.__strokePadding, this.__positionY + this.__strokePadding);
            var rc;
            var q0;
            var rb;
            var qZ;
            rc = qY;
            rb = qY;
            if (!((q8 < qY && q8 > this.__positionX || q8 > qY && q8 < this.__positionX) && (q7 < qY && q7 > this.__positionX || q7 > qY && q7 < this.__positionX))) {
                var q6 = 2 * this.__positionX - 4 * q8 + 2 * q7;
                var q5 = q8 - this.__positionX;
                var q4 = -this.__positionX + 3 * q8 + qY - 3 * q7;
                var q2 = (-q6 + Math.sqrt(q6 * q6 - 4 * q5 * q4)) / (2 * q4);
                var q1 = (-q6 - Math.sqrt(q6 * q6 - 4 * q5 * q4)) / (2 * q4);
                if (q2 > 0 && q2 < 1) {
                    rc = this.__calculateBezierCubicPoint(q2, this.__positionX, q8, q7, qY)
                }
                if (q1 > 0 && q1 < 1) {
                    rb = this.__calculateBezierCubicPoint(q1, this.__positionX, q8, q7, qY)
                }
            }
            q0 = i2;
            qZ = i2;
            if (!((q < i2 && q > this.__positionX || q > i2 && q < this.__positionX) && (i < i2 && i > this.__positionX || i > i2 && i < this.__positionX))) {
                var q9 = 2 * this.__positionX - 4 * q + 2 * i;
                var i1 = q - this.__positionX;
                var q3 = -this.__positionX + 3 * q + i2 - 3 * i;
                var ra = (-q9 + Math.sqrt(q9 * q9 - 4 * i1 * q3)) / (2 * q3);
                var js = (-q9 - Math.sqrt(q9 * q9 - 4 * i1 * q3)) / (2 * q3);
                if (ra > 0 && ra < 1) {
                    q0 = this.__calculateBezierCubicPoint(ra, this.__positionX, q, i, i2)
                }
                if (js > 0 && js < 1) {
                    qZ = this.__calculateBezierCubicPoint(js, this.__positionX, q, i, i2)
                }
            }
            this.__inflateBounds(rc - this.__strokePadding, q0 - this.__strokePadding);
            this.__inflateBounds(rc + this.__strokePadding, q0 + this.__strokePadding);
            this.__inflateBounds(rb - this.__strokePadding, qZ - this.__strokePadding);
            this.__inflateBounds(rb + this.__strokePadding, qZ + this.__strokePadding);
            this.__positionX = qY;
            this.__positionY = i2;
            this.__commands.cubicCurveTo(q8, q, q7, i, qY, i2);
            this.__hardware = false;
            this.set___dirty(true)
        },
        curveTo: function(qZ, qY, i1, q0) {
            this.__inflateBounds(this.__positionX - this.__strokePadding, this.__positionY - this.__strokePadding);
            this.__inflateBounds(this.__positionX + this.__strokePadding, this.__positionY + this.__strokePadding);
            var js;
            var q;
            if (qZ < i1 && qZ > this.__positionX || qZ > i1 && qZ < this.__positionX) {
                js = i1
            } else {
                var i2 = (this.__positionX - qZ) / (this.__positionX - 2 * qZ + i1);
                js = this.__calculateBezierQuadPoint(i2, this.__positionX, qZ, i1)
            }
            if (qY < q0 && qY > this.__positionY || qY > q0 && qY < this.__positionY) {
                q = q0
            } else {
                var i = (this.__positionY - qY) / (this.__positionY - 2 * qY + q0);
                q = this.__calculateBezierQuadPoint(i, this.__positionY, qY, q0)
            }
            this.__inflateBounds(js - this.__strokePadding, q - this.__strokePadding);
            this.__inflateBounds(js + this.__strokePadding, q + this.__strokePadding);
            this.__positionX = i1;
            this.__positionY = q0;
            this.__commands.curveTo(qZ, qY, i1, q0);
            this.__hardware = false;
            this.set___dirty(true)
        },
        drawCircle: function(q, i1, i) {
            if (i <= 0) {
                return
            }
            this.__inflateBounds(q - i - this.__strokePadding, i1 - i - this.__strokePadding);
            this.__inflateBounds(q + i + this.__strokePadding, i1 + i + this.__strokePadding);
            this.__commands.drawCircle(q, i1, i);
            this.__hardware = false;
            this.set___dirty(true)
        },
        drawEllipse: function(q, i2, i1, i) {
            if (i1 <= 0 || i <= 0) {
                return
            }
            this.__inflateBounds(q - this.__strokePadding, i2 - this.__strokePadding);
            this.__inflateBounds(q + i1 + this.__strokePadding, i2 + i + this.__strokePadding);
            this.__commands.drawEllipse(q, i2, i1, i);
            this.__hardware = false;
            this.set___dirty(true)
        },
        drawGraphicsData: function(q0) {
            var qY;
            var js;
            var q;
            var i2;
            var i1;
            var qZ = 0;
            while (qZ < q0.length) {
                var i = q0.data[qZ];
                ++qZ;
                if (n0.__instanceof(i, aX)) {
                    qY = i;
                    this.beginFill(qY.color, qY.alpha)
                } else {
                    if (n0.__instanceof(i, gj)) {
                        js = i;
                        this.beginBitmapFill(js.bitmapData, js.matrix, js.repeat, js.smooth)
                    } else {
                        if (n0.__instanceof(i, i7)) {
                            q = i;
                            this.beginGradientFill(q.type, q.colors, q.alphas, q.ratios, q.matrix, q.spreadMethod, q.interpolationMethod, q.focalPointRatio)
                        } else {
                            if (n0.__instanceof(i, qn)) {
                                i2 = i;
                                if (n0.__instanceof(i2.fill, aX)) {
                                    qY = i2.fill;
                                    this.lineStyle(i2.thickness, qY.color, qY.alpha, i2.pixelHinting, i2.scaleMode, i2.caps, i2.joints, i2.miterLimit)
                                } else {
                                    this.lineStyle(i2.thickness, 0, 1, i2.pixelHinting, i2.scaleMode, i2.caps, i2.joints, i2.miterLimit);
                                    if (n0.__instanceof(i2.fill, gj)) {
                                        js = i2.fill;
                                        this.lineBitmapStyle(js.bitmapData, js.matrix, js.repeat, js.smooth)
                                    } else {
                                        if (n0.__instanceof(i2.fill, i7)) {
                                            q = i2.fill;
                                            this.lineGradientStyle(q.type, q.colors, q.alphas, q.ratios, q.matrix, q.spreadMethod, q.interpolationMethod, q.focalPointRatio)
                                        }
                                    }
                                }
                            } else {
                                if (n0.__instanceof(i, qG)) {
                                    i1 = i;
                                    this.drawPath(i1.commands, i1.data, i1.winding)
                                } else {
                                    if (n0.__instanceof(i, pO)) {
                                        this.endFill()
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        drawPath: function(i, i2, q) {
            if (q == null) {
                q = "evenOdd"
            }
            var i1 = 0;
            var qZ = 0;
            try {
                while (qZ < i.length) {
                    var qY = i.data[qZ];
                    ++qZ;
                    if (qY != null) {
                        switch (qY) {
                            case 1:
                                this.moveTo(i2.data[i1], i2.data[i1 + 1]);
                                i1 += 2;
                                break;
                            case 2:
                                this.lineTo(i2.data[i1], i2.data[i1 + 1]);
                                i1 += 2;
                                break;
                            case 4:
                                this.moveTo(i2.data[i1 + 2], i2.data[i1 + 3]);
                                throw "__break__";
                                i1 += 4;
                                break;
                            case 5:
                                this.lineTo(i2.data[i1 + 2], i2.data[i1 + 3]);
                                throw "__break__";
                                i1 += 4;
                                break;
                            case 3:
                                this.curveTo(i2.data[i1], i2.data[i1 + 1], i2.data[i1 + 2], i2.data[i1 + 3]);
                                i1 += 4;
                                break;
                            case 6:
                                this.cubicCurveTo(i2.data[i1], i2.data[i1 + 1], i2.data[i1 + 2], i2.data[i1 + 3], i2.data[i1 + 4], i2.data[i1 + 5]);
                                i1 += 6;
                                break;
                            default:
                        }
                    } else {}
                }
            } catch (js) {
                if (js != "__break__") {
                    throw js
                }
            }
        },
        drawRect: function(q, i2, i1, i) {
            if (i1 <= 0 || i <= 0) {
                return
            }
            this.__inflateBounds(q - this.__strokePadding, i2 - this.__strokePadding);
            this.__inflateBounds(q + i1 + this.__strokePadding, i2 + i + this.__strokePadding);
            this.__commands.drawRect(q, i2, i1, i);
            this.set___dirty(true)
        },
        drawRoundRect: function(q, qY, i1, i, js, i2) {
            if (i1 <= 0 || i <= 0) {
                return
            }
            this.__inflateBounds(q - this.__strokePadding, qY - this.__strokePadding);
            this.__inflateBounds(q + i1 + this.__strokePadding, qY + i + this.__strokePadding);
            this.__commands.drawRoundRect(q, qY, i1, i, js, i2);
            this.__hardware = false;
            this.set___dirty(true)
        },
        drawRoundRectComplex: function(q, q0, i2, i, qZ, i1, js, qY) {
            ns.notImplemented("Graphics.drawRoundRectComplex")
        },
        drawTiles: function(q3, q0, q1, q4, ry, rv) {
            if (rv == null) {
                rv = -1
            }
            if (q4 == null) {
                q4 = 0
            }
            if (q1 == null) {
                q1 = false
            }
            var rx = (q4 & 1) > 0;
            var i2 = (q4 & 2) > 0;
            var i = (q4 & 4) > 0;
            var qZ = (q4 & 8) > 0;
            var js = (q4 & 16) > 0;
            var q9 = (q4 & 128) > 0;
            var ra = (q4 & 32) > 0;
            var q7 = (q4 & 64) > 0;
            var rc = gn.__temp;
            var rf = qd.__temp;
            var rq = 3;
            var rA = rv;
            if (rv < 0) {
                rA = q0.length
            }
            if (js || rx || i2 || i || qZ || q9) {
                var q6 = 0;
                var rd = 0;
                var rs = 0;
                if (ra) {
                    if (q7) {
                        rq = 8
                    } else {
                        rq = 6
                    }
                }
                if (rx) {
                    q6 = rq;
                    rq++
                }
                if (i2) {
                    rd = rq;
                    rq++
                }
                if (js) {
                    rs = rq;
                    rq += 4
                }
                if (i) {
                    rq += 3
                }
                if (qZ) {
                    rq++
                }
                if (q9) {
                    rq += 4
                }
                var rw = rA / rq | 0;
                var rg = 0;
                var rk = -1;
                var rp;
                var ro;
                var rl;
                var ri;
                var re;
                var ru;
                var q;
                var rm;
                var rj;
                var qY = null;
                var rb = null;
                while (rg < rA) {
                    rp = q0[rg];
                    ro = q0[rg + 1];
                    if (!ra) {
                        rl = q0[rg + 2] | 0
                    } else {
                        rl = -1
                    }
                    ri = 1;
                    re = 0;
                    if (rx) {
                        ri = q0[rg + q6]
                    }
                    if (i2) {
                        re = q0[rg + rd]
                    }
                    if (rl < 0) {
                        qY = null
                    } else {
                        if (!ra && rk != rl) {
                            rk = rl;
                            qY = q3.__tileRects[rl];
                            rb = q3.__centerPoints[rl]
                        } else {
                            if (ra) {
                                qY = q3.__rectTile;
                                qY.setTo(q0[rg + 2], q0[rg + 3], q0[rg + 4], q0[rg + 5]);
                                rb = q3.__point;
                                if (q7) {
                                    rb.setTo(q0[rg + 6] / qY.width, q0[rg + 7] / qY.height)
                                } else {
                                    rb.setTo(0, 0)
                                }
                            }
                        }
                    }
                    if (qY != null) {
                        if (js) {
                            rc.setTo(0, 0, qY.width, qY.height);
                            rf.setTo(q0[rg + rs], q0[rg + rs + 1], q0[rg + rs + 2], q0[rg + rs + 3], 0, 0);
                            rm = rb.x * ri;
                            rj = rb.y * ri;
                            rf.translate(rp - (rm * rf.a + rj * rf.c + rf.tx), ro - (rm * rf.b + rj * rf.d + rf.ty));
                            rc.__transform(rc, rf);
                            this.__inflateBounds(rc.x, rc.y);
                            this.__inflateBounds(rc.get_right(), rc.get_bottom())
                        } else {
                            ru = qY.width * ri;
                            q = qY.height * ri;
                            rp -= rb.x * ru;
                            ro -= rb.y * q;
                            if (re != 0) {
                                rc.setTo(0, 0, ru, q);
                                rf.identity();
                                rf.rotate(re);
                                rf.translate(rp, ro);
                                rc.__transform(rc, rf);
                                this.__inflateBounds(rc.x, rc.y);
                                this.__inflateBounds(rc.get_right(), rc.get_bottom())
                            } else {
                                this.__inflateBounds(rp, ro);
                                this.__inflateBounds(rp + ru, ro + q)
                            }
                        }
                    }
                    rg += rq
                }
            } else {
                var q2;
                var rz;
                var rn;
                var q5;
                var rh;
                var i1;
                var rt;
                var q8 = gn.__temp;
                var rr = 0;
                while (rr < rA) {
                    q2 = q0[rr++];
                    rz = q0[rr++];
                    if (!ra) {
                        rn = kr["int"](q0[rr++])
                    } else {
                        rn = -1
                    }
                    i1 = 0;
                    rt = 0;
                    if (ra) {
                        q8.setTo(q0[rr++], q0[rr++], q0[rr++], q0[rr++]);
                        if (q7) {
                            i1 = q0[rr++];
                            rt = q0[rr++]
                        }
                        this.__inflateBounds(q2 - i1, rz - rt);
                        this.__inflateBounds(q2 - i1 + q8.width, rz - rt + q8.height)
                    } else {
                        q5 = q3.__tileRects[rn];
                        if (q5 != null) {
                            rh = q3.__centerPoints[rn];
                            i1 = rh.x * q5.width;
                            rt = rh.y * q5.height;
                            this.__inflateBounds(q2 - i1, rz - rt);
                            this.__inflateBounds(q2 - i1 + q5.width, rz - rt + q5.height)
                        }
                    }
                }
            }
            this.__commands.drawTiles(q3, q0, q1, q4, ry, rv);
            this.set___dirty(true);
            this.__visible = true
        },
        drawTriangles: function(q8, rb, q0, js) {
            if (js == null) {
                js = 1
            }
            var ra = q8.length / 2 | 0;
            if (js == null) {
                js = 1
            }
            if (rb == null) {
                if (ra % 3 != 0) {
                    throw new nM(new pZ("Not enough vertices to close a triangle."))
                }
                var q7;
                q7 = new p0();
                var q5;
                q5 = new Array(0);
                q7.data = q5;
                q7.length = 0;
                q7.fixed = false;
                rb = q7;
                var q6 = 0;
                while (q6 < ra) {
                    var q4 = q6++;
                    if (!rb.fixed) {
                        rb.length++;
                        if (rb.data.length < rb.length) {
                            var q3;
                            var q2;
                            q2 = new Array(rb.data.length + 10);
                            q3 = q2;
                            dQ.blit(rb.data, 0, q3, 0, rb.data.length);
                            rb.data = q3
                        }
                        rb.data[rb.length - 1] = q4
                    }
                    rb.length
                }
            }
            this.__inflateBounds(0, 0);
            var qZ = -Infinity;
            var qY = -Infinity;
            var i2 = -Infinity;
            var q = -Infinity;
            var q9 = 0;
            while (q9 < ra) {
                var q1 = q9++;
                qZ = q8.data[q1 * 2];
                qY = q8.data[q1 * 2 + 1];
                if (i2 < qZ) {
                    i2 = qZ
                }
                if (q < qY) {
                    q = qY
                }
            }
            this.__inflateBounds(i2, q);
            this.__commands.drawTriangles(q8, rb, q0, js);
            this.set___dirty(true);
            this.__visible = true
        },
        endFill: function() {
            this.__commands.endFill()
        },
        lineBitmapStyle: function(i2, q, i1, i) {
            if (i == null) {
                i = false
            }
            if (i1 == null) {
                i1 = true
            }
            this.__commands.lineBitmapStyle(i2, q != null ? q.clone() : null, i1, i)
        },
        lineGradientStyle: function(js, q, i, qY, i2, i1, q0, qZ) {
            if (qZ == null) {
                qZ = 0
            }
            if (q0 == null) {
                q0 = 1
            }
            if (i1 == null) {
                i1 = 0
            }
            this.__commands.lineGradientStyle(js, q, i, qY, i2, i1, q0, qZ)
        },
        lineStyle: function(i2, i1, q0, qY, js, qZ, i, q) {
            if (q == null) {
                q = 3
            }
            if (js == null) {
                js = 2
            }
            if (qY == null) {
                qY = false
            }
            if (q0 == null) {
                q0 = 1
            }
            if (i1 == null) {
                i1 = 0
            }
            if (i2 != null) {
                if (i == 1) {
                    if (i2 > this.__strokePadding) {
                        this.__strokePadding = i2
                    }
                } else {
                    if (i2 / 2 > this.__strokePadding) {
                        this.__strokePadding = i2 / 2
                    }
                }
            }
            this.__commands.lineStyle(i2, i1, q0, qY, js, qZ, i, q);
            if (i2 != null) {
                this.__visible = true
            }
        },
        lineTo: function(i, q) {
            this.__inflateBounds(this.__positionX - this.__strokePadding, this.__positionY - this.__strokePadding);
            this.__inflateBounds(this.__positionX + this.__strokePadding, this.__positionY + this.__strokePadding);
            this.__positionX = i;
            this.__positionY = q;
            this.__inflateBounds(this.__positionX - this.__strokePadding, this.__positionY - this.__strokePadding);
            this.__inflateBounds(this.__positionX + this.__strokePadding * 2, this.__positionY + this.__strokePadding);
            this.__commands.lineTo(i, q);
            this.__hardware = false;
            this.set___dirty(true)
        },
        moveTo: function(i, q) {
            this.__positionX = i;
            this.__positionY = q;
            this.__commands.moveTo(i, q)
        },
        __calculateBezierCubicPoint: function(q, qY, js, i2, i1) {
            var i = 1 - q;
            return qY * (i * i * i) + 3 * js * q * (i * i) + 3 * i2 * i * (q * q) + i1 * (q * q * q)
        },
        __calculateBezierQuadPoint: function(q, js, i2, i1) {
            var i = 1 - q;
            return i * i * js + 2 * i * q * i2 + q * q * i1
        },
        __getBounds: function(i1, i) {
            if (this.__bounds == null) {
                return
            }
            var q = gn.__temp;
            this.__bounds.__transform(q, i);
            i1.__expand(q.x, q.y, q.width, q.height)
        },
        __hitTest: function(i, qY, i1, q) {
            if (this.__bounds == null) {
                return false
            }
            var js = q.__transformInverseX(i, qY);
            var i2 = q.__transformInverseY(i, qY);
            if (js > this.__bounds.x && i2 > this.__bounds.y && this.__bounds.contains(js, i2)) {
                if (i1) {
                    return aB.hitTest(this, js, i2)
                }
                return true
            }
            return false
        },
        __inflateBounds: function(i, q) {
            if (this.__bounds == null) {
                this.__bounds = new gn(i, q, 0, 0);
                this.__transformDirty = true;
                return
            }
            if (i < this.__bounds.x) {
                this.__bounds.width += this.__bounds.x - i;
                this.__bounds.x = i;
                this.__transformDirty = true
            }
            if (q < this.__bounds.y) {
                this.__bounds.height += this.__bounds.y - q;
                this.__bounds.y = q;
                this.__transformDirty = true
            }
            if (i > this.__bounds.x + this.__bounds.width) {
                this.__bounds.width = i - this.__bounds.x
            }
            if (q > this.__bounds.y + this.__bounds.height) {
                this.__bounds.height = q - this.__bounds.y
            }
        },
        set___dirty: function(i) {
            if (i && this.__owner != null) {
                this.__owner.__setRenderDirty()
            }
            return this.__dirty = i
        },
        __class__: e3,
        __properties__: {
            set___dirty: "set___dirty"
        }
    };
    var ju = function() {};
    nt["openfl.display.IGraphicsFill"] = ju;
    ju.__name__ = ["openfl", "display", "IGraphicsFill"];
    ju.prototype = {
        __graphicsFillType: null,
        __class__: ju
    };
    var dx = function() {};
    nt["openfl.display.IGraphicsData"] = dx;
    dx.__name__ = ["openfl", "display", "IGraphicsData"];
    dx.prototype = {
        __graphicsDataType: null,
        __class__: dx
    };
    var gj = function(i2, q, i1, i) {
        if (i == null) {
            i = false
        }
        if (i1 == null) {
            i1 = true
        }
        this.bitmapData = i2;
        this.matrix = q;
        this.repeat = i1;
        this.smooth = i;
        this.__graphicsDataType = h2.BITMAP;
        this.__graphicsFillType = hw.BITMAP_FILL
    };
    nt["openfl.display.GraphicsBitmapFill"] = gj;
    gj.__name__ = ["openfl", "display", "GraphicsBitmapFill"];
    gj.__interfaces__ = [ju, dx];
    gj.prototype = {
        bitmapData: null,
        matrix: null,
        repeat: null,
        smooth: null,
        __graphicsDataType: null,
        __graphicsFillType: null,
        __class__: gj
    };
    var pO = function() {
        this.__graphicsDataType = h2.END;
        this.__graphicsFillType = hw.END_FILL
    };
    nt["openfl.display.GraphicsEndFill"] = pO;
    pO.__name__ = ["openfl", "display", "GraphicsEndFill"];
    pO.__interfaces__ = [ju, dx];
    pO.prototype = {
        __graphicsDataType: null,
        __graphicsFillType: null,
        __class__: pO
    };
    var i7 = function(js, q, i, qY, i2, i1, q0, qZ) {
        if (qZ == null) {
            qZ = 0
        }
        if (js == null) {
            js = 0
        }
        if (i1 == null) {
            i1 = 0
        }
        if (q0 == null) {
            q0 = 1
        }
        this.type = js;
        this.colors = q;
        this.alphas = i;
        this.ratios = qY;
        this.matrix = i2;
        this.spreadMethod = i1;
        this.interpolationMethod = q0;
        this.focalPointRatio = qZ;
        this.__graphicsDataType = h2.GRADIENT;
        this.__graphicsFillType = hw.GRADIENT_FILL
    };
    nt["openfl.display.GraphicsGradientFill"] = i7;
    i7.__name__ = ["openfl", "display", "GraphicsGradientFill"];
    i7.__interfaces__ = [ju, dx];
    i7.prototype = {
        alphas: null,
        colors: null,
        focalPointRatio: null,
        interpolationMethod: null,
        matrix: null,
        ratios: null,
        spreadMethod: null,
        type: null,
        __graphicsDataType: null,
        __graphicsFillType: null,
        __class__: i7
    };
    var fj = function() {};
    nt["openfl.display.IGraphicsPath"] = fj;
    fj.__name__ = ["openfl", "display", "IGraphicsPath"];
    var qG = function(i, i1, q) {
        if (q == null) {
            q = "evenOdd"
        }
        this.commands = i;
        this.data = i1;
        this.winding = q;
        this.__graphicsDataType = h2.PATH
    };
    nt["openfl.display.GraphicsPath"] = qG;
    qG.__name__ = ["openfl", "display", "GraphicsPath"];
    qG.__interfaces__ = [fj, dx];
    qG.prototype = {
        commands: null,
        data: null,
        winding: null,
        __graphicsDataType: null,
        curveTo: function(qY, q, qZ, i2) {
            if (this.commands != null && this.data != null) {
                var q6 = this.commands;
                if (!q6.fixed) {
                    q6.length++;
                    if (q6.data.length < q6.length) {
                        var rb;
                        var q5;
                        q5 = new Array(q6.data.length + 10);
                        rb = q5;
                        dQ.blit(q6.data, 0, rb, 0, q6.data.length);
                        q6.data = rb
                    }
                    q6.data[q6.length - 1] = 3
                }
                q6.length;
                var q3 = this.data;
                if (!q3.fixed) {
                    q3.length++;
                    if (q3.data.length < q3.length) {
                        var q9;
                        var q2;
                        q2 = new Array(q3.data.length + 10);
                        q9 = q2;
                        dQ.blit(q3.data, 0, q9, 0, q3.data.length);
                        q3.data = q9
                    }
                    q3.data[q3.length - 1] = qZ
                }
                q3.length;
                var q1 = this.data;
                if (!q1.fixed) {
                    q1.length++;
                    if (q1.data.length < q1.length) {
                        var q8;
                        var q0;
                        q0 = new Array(q1.data.length + 10);
                        q8 = q0;
                        dQ.blit(q1.data, 0, q8, 0, q1.data.length);
                        q1.data = q8
                    }
                    q1.data[q1.length - 1] = i2
                }
                q1.length;
                var js = this.data;
                if (!js.fixed) {
                    js.length++;
                    if (js.data.length < js.length) {
                        var q7;
                        var i1;
                        i1 = new Array(js.data.length + 10);
                        q7 = i1;
                        dQ.blit(js.data, 0, q7, 0, js.data.length);
                        js.data = q7
                    }
                    js.data[js.length - 1] = qY
                }
                js.length;
                var i = this.data;
                if (!i.fixed) {
                    i.length++;
                    if (i.data.length < i.length) {
                        var q4;
                        var ra;
                        ra = new Array(i.data.length + 10);
                        q4 = ra;
                        dQ.blit(i.data, 0, q4, 0, i.data.length);
                        i.data = q4
                    }
                    i.data[i.length - 1] = q
                }
                i.length
            }
        },
        lineTo: function(q3, q2) {
            if (this.commands != null && this.data != null) {
                var q1 = this.commands;
                if (!q1.fixed) {
                    q1.length++;
                    if (q1.data.length < q1.length) {
                        var qZ;
                        var q0;
                        q0 = new Array(q1.data.length + 10);
                        qZ = q0;
                        dQ.blit(q1.data, 0, qZ, 0, q1.data.length);
                        q1.data = qZ
                    }
                    q1.data[q1.length - 1] = 2
                }
                q1.length;
                var qY = this.data;
                if (!qY.fixed) {
                    qY.length++;
                    if (qY.data.length < qY.length) {
                        var js;
                        var i2;
                        i2 = new Array(qY.data.length + 10);
                        js = i2;
                        dQ.blit(qY.data, 0, js, 0, qY.data.length);
                        qY.data = js
                    }
                    qY.data[qY.length - 1] = q3
                }
                qY.length;
                var i1 = this.data;
                if (!i1.fixed) {
                    i1.length++;
                    if (i1.data.length < i1.length) {
                        var q;
                        var i;
                        i = new Array(i1.data.length + 10);
                        q = i;
                        dQ.blit(i1.data, 0, q, 0, i1.data.length);
                        i1.data = q
                    }
                    i1.data[i1.length - 1] = q2
                }
                i1.length
            }
        },
        moveTo: function(q3, q2) {
            if (this.commands != null && this.data != null) {
                var q1 = this.commands;
                if (!q1.fixed) {
                    q1.length++;
                    if (q1.data.length < q1.length) {
                        var qZ;
                        var q0;
                        q0 = new Array(q1.data.length + 10);
                        qZ = q0;
                        dQ.blit(q1.data, 0, qZ, 0, q1.data.length);
                        q1.data = qZ
                    }
                    q1.data[q1.length - 1] = 1
                }
                q1.length;
                var qY = this.data;
                if (!qY.fixed) {
                    qY.length++;
                    if (qY.data.length < qY.length) {
                        var js;
                        var i2;
                        i2 = new Array(qY.data.length + 10);
                        js = i2;
                        dQ.blit(qY.data, 0, js, 0, qY.data.length);
                        qY.data = js
                    }
                    qY.data[qY.length - 1] = q3
                }
                qY.length;
                var i1 = this.data;
                if (!i1.fixed) {
                    i1.length++;
                    if (i1.data.length < i1.length) {
                        var q;
                        var i;
                        i = new Array(i1.data.length + 10);
                        q = i;
                        dQ.blit(i1.data, 0, q, 0, i1.data.length);
                        i1.data = q
                    }
                    i1.data[i1.length - 1] = q2
                }
                i1.length
            }
        },
        wideLineTo: function(q3, q2) {
            if (this.commands != null && this.data != null) {
                var q1 = this.commands;
                if (!q1.fixed) {
                    q1.length++;
                    if (q1.data.length < q1.length) {
                        var qZ;
                        var q0;
                        q0 = new Array(q1.data.length + 10);
                        qZ = q0;
                        dQ.blit(q1.data, 0, qZ, 0, q1.data.length);
                        q1.data = qZ
                    }
                    q1.data[q1.length - 1] = 2
                }
                q1.length;
                var qY = this.data;
                if (!qY.fixed) {
                    qY.length++;
                    if (qY.data.length < qY.length) {
                        var js;
                        var i2;
                        i2 = new Array(qY.data.length + 10);
                        js = i2;
                        dQ.blit(qY.data, 0, js, 0, qY.data.length);
                        qY.data = js
                    }
                    qY.data[qY.length - 1] = q3
                }
                qY.length;
                var i1 = this.data;
                if (!i1.fixed) {
                    i1.length++;
                    if (i1.data.length < i1.length) {
                        var q;
                        var i;
                        i = new Array(i1.data.length + 10);
                        q = i;
                        dQ.blit(i1.data, 0, q, 0, i1.data.length);
                        i1.data = q
                    }
                    i1.data[i1.length - 1] = q2
                }
                i1.length
            }
        },
        wideMoveTo: function(q3, q2) {
            if (this.commands != null && this.data != null) {
                var q1 = this.commands;
                if (!q1.fixed) {
                    q1.length++;
                    if (q1.data.length < q1.length) {
                        var qZ;
                        var q0;
                        q0 = new Array(q1.data.length + 10);
                        qZ = q0;
                        dQ.blit(q1.data, 0, qZ, 0, q1.data.length);
                        q1.data = qZ
                    }
                    q1.data[q1.length - 1] = 1
                }
                q1.length;
                var qY = this.data;
                if (!qY.fixed) {
                    qY.length++;
                    if (qY.data.length < qY.length) {
                        var js;
                        var i2;
                        i2 = new Array(qY.data.length + 10);
                        js = i2;
                        dQ.blit(qY.data, 0, js, 0, qY.data.length);
                        qY.data = js
                    }
                    qY.data[qY.length - 1] = q3
                }
                qY.length;
                var i1 = this.data;
                if (!i1.fixed) {
                    i1.length++;
                    if (i1.data.length < i1.length) {
                        var q;
                        var i;
                        i = new Array(i1.data.length + 10);
                        q = i;
                        dQ.blit(i1.data, 0, q, 0, i1.data.length);
                        i1.data = q
                    }
                    i1.data[i1.length - 1] = q2
                }
                i1.length
            }
        },
        __class__: qG
    };
    var aX = function(i, q) {
        if (q == null) {
            q = 1
        }
        if (i == null) {
            i = 0
        }
        this.alpha = q;
        this.color = i;
        this.__graphicsDataType = h2.SOLID;
        this.__graphicsFillType = hw.SOLID_FILL
    };
    nt["openfl.display.GraphicsSolidFill"] = aX;
    aX.__name__ = ["openfl", "display", "GraphicsSolidFill"];
    aX.__interfaces__ = [ju, dx];
    aX.prototype = {
        alpha: null,
        color: null,
        __graphicsDataType: null,
        __graphicsFillType: null,
        __class__: aX
    };
    var m5 = function() {};
    nt["openfl.display.IGraphicsStroke"] = m5;
    m5.__name__ = ["openfl", "display", "IGraphicsStroke"];
    var qn = function(i1, js, i2, qY, i, q, qZ) {
        if (q == null) {
            q = 3
        }
        if (js == null) {
            js = false
        }
        if (i1 == null) {
            i1 = 0
        }
        if (qY != null) {
            this.caps = qY
        } else {
            this.caps = 0
        }
        this.fill = qZ;
        if (i != null) {
            this.joints = i
        } else {
            this.joints = 2
        }
        this.miterLimit = q;
        this.pixelHinting = js;
        if (i2 != null) {
            this.scaleMode = i2
        } else {
            this.scaleMode = 2
        }
        this.thickness = i1;
        this.__graphicsDataType = h2.STROKE
    };
    nt["openfl.display.GraphicsStroke"] = qn;
    qn.__name__ = ["openfl", "display", "GraphicsStroke"];
    qn.__interfaces__ = [m5, dx];
    qn.prototype = {
        caps: null,
        fill: null,
        joints: null,
        miterLimit: null,
        pixelHinting: null,
        scaleMode: null,
        thickness: null,
        __graphicsDataType: null,
        __class__: qn
    };
    var h2 = nt["openfl.display.GraphicsDataType"] = {
        __ename__: ["openfl", "display", "GraphicsDataType"],
        __constructs__: ["STROKE", "SOLID", "GRADIENT", "PATH", "BITMAP", "END"]
    };
    h2.STROKE = ["STROKE", 0];
    h2.STROKE.toString = ea;
    h2.STROKE.__enum__ = h2;
    h2.SOLID = ["SOLID", 1];
    h2.SOLID.toString = ea;
    h2.SOLID.__enum__ = h2;
    h2.GRADIENT = ["GRADIENT", 2];
    h2.GRADIENT.toString = ea;
    h2.GRADIENT.__enum__ = h2;
    h2.PATH = ["PATH", 3];
    h2.PATH.toString = ea;
    h2.PATH.__enum__ = h2;
    h2.BITMAP = ["BITMAP", 4];
    h2.BITMAP.toString = ea;
    h2.BITMAP.__enum__ = h2;
    h2.END = ["END", 5];
    h2.END.toString = ea;
    h2.END.__enum__ = h2;
    var hw = nt["openfl.display.GraphicsFillType"] = {
        __ename__: ["openfl", "display", "GraphicsFillType"],
        __constructs__: ["SOLID_FILL", "GRADIENT_FILL", "BITMAP_FILL", "END_FILL"]
    };
    hw.SOLID_FILL = ["SOLID_FILL", 0];
    hw.SOLID_FILL.toString = ea;
    hw.SOLID_FILL.__enum__ = hw;
    hw.GRADIENT_FILL = ["GRADIENT_FILL", 1];
    hw.GRADIENT_FILL.toString = ea;
    hw.GRADIENT_FILL.__enum__ = hw;
    hw.BITMAP_FILL = ["BITMAP_FILL", 2];
    hw.BITMAP_FILL.toString = ea;
    hw.BITMAP_FILL.__enum__ = hw;
    hw.END_FILL = ["END_FILL", 3];
    hw.END_FILL.toString = ea;
    hw.END_FILL.__enum__ = hw;
    var nd = {};
    nt["openfl.display._InterpolationMethod.InterpolationMethod_Impl_"] = nd;
    nd.__name__ = ["openfl", "display", "_InterpolationMethod", "InterpolationMethod_Impl_"];
    nd.fromString = function(i) {
        switch (i) {
            case "linearRGB":
                return 0;
            case "rgb":
                return 1;
            default:
                return null
        }
    };
    nd.toString = function(i) {
        switch (i) {
            case 0:
                return "linearRGB";
            case 1:
                return "rgb";
            default:
                return null
        }
    };
    var gz = function(i) {
        if (i == null) {
            i = 80
        }
        this.quality = i
    };
    nt["openfl.display.JPEGEncoderOptions"] = gz;
    gz.__name__ = ["openfl", "display", "JPEGEncoderOptions"];
    gz.prototype = {
        quality: null,
        __class__: gz
    };
    var o8 = {};
    nt["openfl.display._JointStyle.JointStyle_Impl_"] = o8;
    o8.__name__ = ["openfl", "display", "_JointStyle", "JointStyle_Impl_"];
    o8.fromString = function(i) {
        switch (i) {
            case "bevel":
                return 0;
            case "miter":
                return 1;
            case "round":
                return 2;
            default:
                return null
        }
    };
    o8.toString = function(i) {
        switch (i) {
            case 0:
                return "bevel";
            case 1:
                return "miter";
            case 2:
                return "round";
            default:
                return null
        }
    };
    var eB = {};
    nt["openfl.display._LineScaleMode.LineScaleMode_Impl_"] = eB;
    eB.__name__ = ["openfl", "display", "_LineScaleMode", "LineScaleMode_Impl_"];
    eB.fromString = function(i) {
        switch (i) {
            case "horizontal":
                return 0;
            case "none":
                return 1;
            case "normal":
                return 2;
            case "vertical":
                return 3;
            default:
                return null
        }
    };
    eB.toString = function(i) {
        switch (i) {
            case 0:
                return "horizontal";
            case 1:
                return "none";
            case 2:
                return "normal";
            case 3:
                return "vertical";
            default:
                return null
        }
    };
    var jY = function() {
        bG.call(this);
        this.contentLoaderInfo = iN.create(this)
    };
    nt["openfl.display.Loader"] = jY;
    jY.__name__ = ["openfl", "display", "Loader"];
    jY.__super__ = bG;
    jY.prototype = lP(bG.prototype, {
        content: null,
        contentLoaderInfo: null,
        mImage: null,
        mShape: null,
        close: function() {
            ns.notImplemented("Loader.close")
        },
        load: function(q, i) {
            var qY = "";
            var i1 = q.url.split(".");
            if (i1.length > 0) {
                qY = i1[i1.length - 1].toLowerCase()
            }
            if (qY.indexOf("?") != -1) {
                qY = qY.split("?")[0]
            }
            var js = true;
            this.contentLoaderInfo.url = q.url;
            if (q.contentType == null || q.contentType == "") {
                switch (qY) {
                    case "swf":
                        this.contentLoaderInfo.contentType = "application/x-shockwave-flash";
                        break;
                    case "jpg":
                    case "jpeg":
                        js = false;
                        this.contentLoaderInfo.contentType = "image/jpeg";
                        break;
                    case "png":
                        this.contentLoaderInfo.contentType = "image/png";
                        break;
                    case "gif":
                        this.contentLoaderInfo.contentType = "image/gif";
                        break;
                    default:
                        this.contentLoaderInfo.contentType = "application/x-www-form-urlencoded"
                }
            } else {
                this.contentLoaderInfo.contentType = q.contentType
            }
            var i2 = new c2();
            i2.doWork.add(function(qZ) {
                var q0 = q.url;
                f0.fromFile(q0, function(q1) {
                    i2.sendComplete(q1)
                }, function() {
                    i2.sendError("ioError")
                })
            });
            i2.onError.add(oT(this, this.BitmapData_onError));
            i2.onComplete.add(oT(this, this.BitmapData_onLoad));
            i2.run()
        },
        loadBytes: function(i, q) {
            var i1 = new c2();
            i1.doWork.add(function(i2) {
                f0.fromBytes(i, null, function(js) {
                    i1.sendComplete(js)
                })
            });
            i1.onComplete.add(oT(this, this.BitmapData_onLoad));
            i1.run()
        },
        unload: function() {
            if (this.get_numChildren() > 0) {
                while (this.get_numChildren() > 0) {
                    this.removeChildAt(0)
                }
                this.content = null;
                this.contentLoaderInfo.url = null;
                this.contentLoaderInfo.contentType = null;
                this.contentLoaderInfo.content = null;
                this.contentLoaderInfo.bytesLoaded = 0;
                this.contentLoaderInfo.bytesTotal = 0;
                this.contentLoaderInfo.width = 0;
                this.contentLoaderInfo.height = 0;
                var i = new hM("unload");
                i.currentTarget = this;
                this.__dispatchEvent(i)
            }
        },
        unloadAndStop: function(i) {
            if (i == null) {
                i = true
            }
            ns.notImplemented("Loader.unloadAndStop")
        },
        BitmapData_onLoad: function(q) {
            this.contentLoaderInfo.content = new el(q);
            this.content = this.contentLoaderInfo.content;
            this.addChild(this.contentLoaderInfo.content);
            var i = new hM("complete");
            i.target = this.contentLoaderInfo;
            i.currentTarget = this.contentLoaderInfo;
            this.contentLoaderInfo.dispatchEvent(i)
        },
        BitmapData_onError: function(i) {
            var q = new hx("ioError");
            q.target = this.contentLoaderInfo;
            q.currentTarget = this.contentLoaderInfo;
            this.contentLoaderInfo.dispatchEvent(q)
        },
        __class__: jY
    });
    var aw = function() {
        i9.call(this, "OpenGLView");
        if (!this.__added) {
            this.__added = true;
            eM.trace("Warning: OpenGLView is not available in HTML5 canvas rendering mode", {
                fileName: "OpenGLView.hx",
                lineNumber: 76,
                className: "openfl.display.OpenGLView",
                methodName: "new"
            });
            eM.trace("Please compile your project using -Ddom or -Dwebgl (beta) to enable", {
                fileName: "OpenGLView.hx",
                lineNumber: 77,
                className: "openfl.display.OpenGLView",
                methodName: "new"
            })
        }
    };
    nt["openfl.display.OpenGLView"] = aw;
    aw.__name__ = ["openfl", "display", "OpenGLView"];
    aw.__properties__ = {
        get_isSupported: "get_isSupported"
    };
    aw.isSupported = null;
    aw.get_isSupported = function() {
        return false
    };
    aw.__super__ = i9;
    aw.prototype = lP(i9.prototype, {
        __added: null,
        __initialized: null,
        __renderCanvas: function(i) {},
        __renderDOM: function(q) {
            if (this.stage != null && this.__worldVisible && this.__renderable) {
                if (!this.__added) {
                    q.element.appendChild(this.__canvas);
                    this.__added = true;
                    k.initializeElement(this, this.__canvas, q)
                }
                if (this.__context != null) {
                    var i = null;
                    if (this.get_scrollRect() == null) {
                        i = new gn(0, 0, this.stage.stageWidth, this.stage.stageHeight)
                    } else {
                        i = new gn(this.get_x() + this.get_scrollRect().x, this.get_y() + this.get_scrollRect().y, this.get_scrollRect().width, this.get_scrollRect().height)
                    }
                    if (this.__render != null) {
                        this.__render(i)
                    }
                }
            } else {
                if (this.__added) {
                    q.element.removeChild(this.__canvas);
                    this.__added = false
                }
            }
        },
        __renderGL: function(q) {
            if (this.stage != null && this.__renderable) {
                var i = null;
                if (this.get_scrollRect() == null) {
                    i = new gn(0, 0, this.stage.stageWidth, this.stage.stageHeight)
                } else {
                    i = new gn(this.get_x() + this.get_scrollRect().x, this.get_y() + this.get_scrollRect().y, this.get_scrollRect().width, this.get_scrollRect().height)
                }
                if (this.__render != null) {
                    this.__render(i)
                }
                q.shaderManager.setShader(null);
                q.blendModeManager.setBlendMode(null)
            }
        },
        __class__: aw
    });
    var dt = function(i) {
        if (i == null) {
            i = false
        }
        this.fastCompression = i
    };
    nt["openfl.display.PNGEncoderOptions"] = dt;
    dt.__name__ = ["openfl", "display", "PNGEncoderOptions"];
    dt.prototype = {
        fastCompression: null,
        __class__: dt
    };
    var lz = {};
    nt["openfl.display._PixelSnapping.PixelSnapping_Impl_"] = lz;
    lz.__name__ = ["openfl", "display", "_PixelSnapping", "PixelSnapping_Impl_"];
    lz.fromString = function(i) {
        switch (i) {
            case "always":
                return 0;
            case "auto":
                return 1;
            case "never":
                return 2;
            default:
                return null
        }
    };
    lz.toString = function(i) {
        switch (i) {
            case 0:
                return "always";
            case 1:
                return "auto";
            case 2:
                return "never";
            default:
                return null
        }
    };
    var ik = function(i) {
        p5.call(this);
        if (i != null) {
            this.display = i;
            ns.current.addChild(i);
            if (n0.__instanceof(i, gP)) {
                (n0.__cast(i, gP)).onInit()
            }
        }
    };
    nt["openfl.display.Preloader"] = ik;
    ik.__name__ = ["openfl", "display", "Preloader"];
    ik.__super__ = p5;
    ik.prototype = lP(p5.prototype, {
        display: null,
        displayComplete: null,
        load: function(q2, qZ) {
            var i2 = [];
            var i1 = null;
            var q3 = 0;
            var qY = q2.length;
            while (q3 < qY) {
                var js = q3++;
                i1 = q2[js];
                var q1 = qZ[js];
                switch (q1) {
                    case "MUSIC":
                    case "SOUND":
                        var q5 = nu.withoutExtension(i1);
                        if (!cj.remove(i2, q5)) {
                            this.total++
                        }
                        i2.push(q5);
                        break;
                    default:
                }
            }
            var q0 = 0;
            while (q0 < i2.length) {
                var q4 = i2[q0];
                ++q0;
                var q = new eR();
                q.addEventListener("complete", oT(this, this.sound_onComplete));
                q.addEventListener("ioError", oT(this, this.sound_onIOError));
                q.load(new nT(q4 + ".ogg"))
            }
            p5.prototype.load.call(this, q2, qZ)
        },
        start: function() {
            if (this.display != null && n0.__instanceof(this.display, gP)) {
                this.display.addEventListener("complete", oT(this, this.display_onComplete));
                (n0.__cast(this.display, gP)).onLoaded()
            } else {
                p5.prototype.start.call(this)
            }
        },
        update: function(i, q) {
            if (this.display != null && n0.__instanceof(this.display, gP)) {
                (n0.__cast(this.display, gP)).onUpdate(i, q)
            }
        },
        display_onComplete: function(i) {
            this.display.removeEventListener("complete", oT(this, this.display_onComplete));
            ns.current.removeChild(this.display);
            ns.current.stage.set_focus(null);
            this.display = null;
            p5.prototype.start.call(this)
        },
        sound_onComplete: function(i) {
            this.loaded++;
            this.onProgress.dispatch(this.loaded, this.total);
            if (this.loaded == this.total) {
                this.start()
            }
        },
        sound_onIOError: function(i) {
            this.loaded++;
            this.onProgress.dispatch(this.loaded, this.total);
            if (this.loaded == this.total) {
                this.start()
            }
        },
        __class__: ik
    });
    var lK = function(i) {
        if (i == null) {
            i = 1
        }
        this.__dirty = true;
        this.repeatY = 33071;
        this.repeatX = 33071;
        this.precision = 1;
        this.precision = i;
        this.data = new io();
        var i1 = new es("vec2");
        this.data.set(lK.uObjectSize, i1);
        var q = new es("vec2");
        this.data.set(lK.uTextureSize, q)
    };
    nt["openfl.display.Shader"] = lK;
    lK.__name__ = ["openfl", "display", "Shader"];
    lK.prototype = {
        precision: null,
        data: null,
        repeatX: null,
        repeatY: null,
        smooth: null,
        blendMode: null,
        __dirty: null,
        __fragmentCode: null,
        __vertexCode: null,
        __shader: null,
        __init: function(q) {
            var i = this.__dirty;
            if (i) {
                if (this.__shader != null) {
                    this.__shader.destroy()
                }
                this.__shader = new g5(q);
                if (this.__vertexCode != null) {
                    this.__shader.vertexString = this.__vertexCode
                } else {
                    this.__shader.vertexString = nC.VERTEX_SRC.join("\n")
                }
                this.__shader.fragmentString = this.__fragmentCode;
                this.__dirty = false
            }
            this.__shader.init(i)
        },
        __buildFragmentCode: function(q) {
            var i = [];
            i.push("#ifdef GL_ES");
            i.push((function(i2) {
                var i1;
                var js = i2.precision;
                i1 = (function(qZ) {
                    var qY;
                    switch (js) {
                        case 2:
                            qY = "precision highp float;";
                            break;
                        case 1:
                            qY = "precision mediump float;";
                            break;
                        default:
                            qY = "precision lowp float;"
                    }
                    return qY
                }(i2));
                return i1
            }(this)));
            i.push("#endif");
            i = i.concat(lK.fragmentHeader);
            i.push(q);
            this.__fragmentCode = i.join("\n")
        },
        __buildVertexCode: function(q) {
            var i = [];
            i.push("#ifdef GL_ES");
            i.push((function(i2) {
                var i1;
                var js = i2.precision;
                i1 = (function(qZ) {
                    var qY;
                    switch (js) {
                        case 2:
                            qY = "precision highp float;";
                            break;
                        case 1:
                            qY = "precision mediump float;";
                            break;
                        default:
                            qY = "precision lowp float;"
                    }
                    return qY
                }(i2));
                return i1
            }(this)));
            i.push("#endif");
            i = i.concat(lK.vertexHeader);
            i.push(q);
            this.__vertexCode = i.join("\n")
        },
        __class__: lK
    };
    var es = function(i, q) {
        this.internalType = 0;
        this.transpose = false;
        this.repeatY = 33071;
        this.repeatX = 33071;
        this.smooth = false;
        this.arraySize = 0;
        this.size = 0;
        this.type = i;
        if (q == null) {
            this.arraySize = 0
        } else {
            this.arraySize = q
        }
        this.__init()
    };
    nt["openfl.display.GLShaderParameter"] = es;
    es.__name__ = ["openfl", "display", "GLShaderParameter"];
    es.prototype = {
        type: null,
        size: null,
        arraySize: null,
        value: null,
        bitmap: null,
        smooth: null,
        repeatX: null,
        repeatY: null,
        transpose: null,
        internalType: null,
        __init: function() {
            var js = this.type;
            var q3 = js;
            var q = js;
            switch (js) {
                case "bool":
                    this.internalType = 1;
                    this.size = 1;
                    if (this.internalType == 4) {
                        throw new nM("This parameter doesn't accept a value, use bitmap instead")
                    }
                    this.value = [0];
                    break;
                case "int":
                    this.internalType = 1;
                    this.size = 1;
                    if (this.internalType == 4) {
                        throw new nM("This parameter doesn't accept a value, use bitmap instead")
                    }
                    this.value = [0];
                    break;
                case "float":
                    this.internalType = 2;
                    this.size = 1;
                    if (this.internalType == 4) {
                        throw new nM("This parameter doesn't accept a value, use bitmap instead")
                    }
                    this.value = [0];
                    break;
                case "sampler2D":
                    if (q3.indexOf("vec") > -1) {
                        if (cP.startsWith(this.type, "b") || cP.startsWith(this.type, "i")) {
                            this.internalType = 1
                        } else {
                            this.internalType = 2
                        }
                        var q4 = kr.parseInt(this.type.charAt(this.type.length - 1));
                        this.size = q4;
                        this.set_value((function(ra) {
                            var q5;
                            var q9 = [];
                            var q7 = 0;
                            var q8 = ra.size;
                            while (q7 < q8) {
                                var q6 = q7++;
                                q9.push(0)
                            }
                            q5 = q9;
                            return q5
                        }(this)))
                    } else {
                        if (q.indexOf("mat") > -1) {
                            this.internalType = 3;
                            var q2 = kr.parseInt(this.type.charAt(this.type.length - 1));
                            this.size = q2;
                            if (this.internalType == 4) {
                                throw new nM("This parameter doesn't accept a value, use bitmap instead")
                            }
                            var i2 = this.size;
                            switch (i2) {
                                case 2:
                                    this.value = [1, 0, 1, 0];
                                    break;
                                case 3:
                                    this.value = [1, 0, 0, 0, 1, 0, 0, 0, 1];
                                    break;
                                case 4:
                                    this.value = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
                                    break;
                                default:
                                    this.value = [0]
                            }
                        } else {
                            this.internalType = 4;
                            this.size = 0
                        }
                    }
                    break;
                case "samplerCube":
                    if (q3.indexOf("vec") > -1) {
                        if (cP.startsWith(this.type, "b") || cP.startsWith(this.type, "i")) {
                            this.internalType = 1
                        } else {
                            this.internalType = 2
                        }
                        var q1 = kr.parseInt(this.type.charAt(this.type.length - 1));
                        this.size = q1;
                        this.set_value((function(q9) {
                            var q5;
                            var ra = [];
                            var q7 = 0;
                            var q6 = q9.size;
                            while (q7 < q6) {
                                var q8 = q7++;
                                ra.push(0)
                            }
                            q5 = ra;
                            return q5
                        }(this)))
                    } else {
                        if (q.indexOf("mat") > -1) {
                            this.internalType = 3;
                            var q0 = kr.parseInt(this.type.charAt(this.type.length - 1));
                            this.size = q0;
                            if (this.internalType == 4) {
                                throw new nM("This parameter doesn't accept a value, use bitmap instead")
                            }
                            var i1 = this.size;
                            switch (i1) {
                                case 2:
                                    this.value = [1, 0, 1, 0];
                                    break;
                                case 3:
                                    this.value = [1, 0, 0, 0, 1, 0, 0, 0, 1];
                                    break;
                                case 4:
                                    this.value = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
                                    break;
                                default:
                                    this.value = [0]
                            }
                        } else {
                            this.internalType = 4;
                            this.size = 0
                        }
                    }
                    break;
                default:
                    if (q3.indexOf("vec") > -1) {
                        if (cP.startsWith(this.type, "b") || cP.startsWith(this.type, "i")) {
                            this.internalType = 1
                        } else {
                            this.internalType = 2
                        }
                        var qZ = kr.parseInt(this.type.charAt(this.type.length - 1));
                        this.size = qZ;
                        this.set_value((function(ra) {
                            var q6;
                            var q9 = [];
                            var q7 = 0;
                            var q5 = ra.size;
                            while (q7 < q5) {
                                var q8 = q7++;
                                q9.push(0)
                            }
                            q6 = q9;
                            return q6
                        }(this)))
                    } else {
                        if (q.indexOf("mat") > -1) {
                            this.internalType = 3;
                            var qY = kr.parseInt(this.type.charAt(this.type.length - 1));
                            this.size = qY;
                            if (this.internalType == 4) {
                                throw new nM("This parameter doesn't accept a value, use bitmap instead")
                            }
                            var i = this.size;
                            switch (i) {
                                case 2:
                                    this.value = [1, 0, 1, 0];
                                    break;
                                case 3:
                                    this.value = [1, 0, 0, 0, 1, 0, 0, 0, 1];
                                    break;
                                case 4:
                                    this.value = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
                                    break;
                                default:
                                    this.value = [0]
                            }
                        } else {
                            this.internalType = 0;
                            eM.trace("Can't initialize value for type " + this.type, {
                                fileName: "Shader.hx",
                                lineNumber: 307,
                                className: "openfl.display.GLShaderParameter",
                                methodName: "__init"
                            })
                        }
                    }
            }
        },
        set_value: function(i) {
            if (this.internalType == 4) {
                throw new nM("This parameter doesn't accept a value, use bitmap instead")
            }
            return this.value = i
        },
        set_bitmap: function(i) {
            if (this.internalType != 4) {
                throw new nM("This parameter doesn't accept a bitmap, use value instead")
            }
            return this.bitmap = i
        },
        __class__: es,
        __properties__: {
            set_bitmap: "set_bitmap",
            set_value: "set_value"
        }
    };
    var mR = function() {
        eH.call(this)
    };
    nt["openfl.display.Shape"] = mR;
    mR.__name__ = ["openfl", "display", "Shape"];
    mR.__super__ = eH;
    mR.prototype = lP(eH.prototype, {
        graphics: null,
        get_graphics: function() {
            if (this.__graphics == null) {
                this.__graphics = new e3();
                this.__graphics.__owner = this
            }
            return this.__graphics
        },
        __class__: mR,
        __properties__: lP(eH.prototype.__properties__, {
            get_graphics: "get_graphics"
        })
    });
    var iG = {};
    nt["openfl.display._SpreadMethod.SpreadMethod_Impl_"] = iG;
    iG.__name__ = ["openfl", "display", "_SpreadMethod", "SpreadMethod_Impl_"];
    iG.fromString = function(i) {
        switch (i) {
            case "pad":
                return 0;
            case "reflect":
                return 1;
            case "repeat":
                return 2;
            default:
                return null
        }
    };
    iG.toString = function(i) {
        switch (i) {
            case 0:
                return "pad";
            case 1:
                return "reflect";
            case 2:
                return "repeat";
            default:
                return null
        }
    };
    var az = function(js, i2) {
        bG.call(this);
        this.application = js.application;
        this.window = js;
        if (i2 == null) {
            this.__transparent = true;
            this.set_color(0)
        } else {
            this.set_color(i2)
        }
        this.set_name(null);
        this.__deltaTime = 0;
        this.__displayState = 2;
        this.__mouseX = 0;
        this.__mouseY = 0;
        this.__lastClickTime = 0;
        this.stageWidth = js.__width * js.__scale | 0;
        this.stageHeight = js.__height * js.__scale | 0;
        this.stage = this;
        this.align = 6;
        this.allowsFullScreen = false;
        this.allowsFullScreenInteractive = false;
        this.quality = 1;
        this.scaleMode = 2;
        this.stageFocusRect = true;
        this.__macKeyboard = /AppleWebKit/.test(navigator.userAgent) && /Mobile\/\w+/.test(navigator.userAgent) || /Mac/.test(navigator.platform);
        this.__clearBeforeRender = true;
        this.__stack = [];
        this.__mouseOutStack = [];
        var i1;
        i1 = new p0();
        var q;
        q = new Array(0);
        i1.data = q;
        i1.length = 0;
        i1.fixed = false;
        this.stage3Ds = i1;
        var q0 = this.stage3Ds;
        var i = new cf();
        if (!q0.fixed) {
            q0.length++;
            if (q0.data.length < q0.length) {
                var qY;
                var qZ;
                qZ = new Array(q0.data.length + 10);
                qY = qZ;
                dQ.blit(q0.data, 0, qY, 0, q0.data.length);
                q0.data = qY
            }
            q0.data[q0.length - 1] = i
        }
        q0.length;
        if (ns.current.stage == null) {
            this.stage.addChild(ns.current)
        }
    };
    nt["openfl.display.Stage"] = az;
    az.__name__ = ["openfl", "display", "Stage"];
    az.__interfaces__ = [gq];
    az.__super__ = bG;
    az.prototype = lP(bG.prototype, {
        align: null,
        allowsFullScreen: null,
        allowsFullScreenInteractive: null,
        application: null,
        quality: null,
        scaleMode: null,
        stage3Ds: null,
        stageFocusRect: null,
        stageHeight: null,
        stageWidth: null,
        window: null,
        __clearBeforeRender: null,
        __color: null,
        __colorSplit: null,
        __colorString: null,
        __deltaTime: null,
        __dirty: null,
        __displayState: null,
        __dragBounds: null,
        __dragObject: null,
        __dragOffsetX: null,
        __dragOffsetY: null,
        __focus: null,
        __fullscreen: null,
        __invalidated: null,
        __lastClickTime: null,
        __macKeyboard: null,
        __mouseDownLeft: null,
        __mouseDownMiddle: null,
        __mouseDownRight: null,
        __mouseOutStack: null,
        __mouseX: null,
        __mouseY: null,
        __originalWidth: null,
        __originalHeight: null,
        __renderer: null,
        __rendering: null,
        __stack: null,
        __transparent: null,
        __wasDirty: null,
        globalToLocal: function(i) {
            return i.clone()
        },
        invalidate: function() {
            this.__invalidated = true
        },
        localToGlobal: function(i) {
            return i.clone()
        },
        onGamepadAxisMove: function(i, q, i1) {
            k3.__onGamepadAxisMove(i, q, i1)
        },
        onGamepadButtonDown: function(q, i) {
            k3.__onGamepadButtonDown(q, i)
        },
        onGamepadButtonUp: function(q, i) {
            k3.__onGamepadButtonUp(q, i)
        },
        onGamepadConnect: function(i) {
            k3.__onGamepadConnect(i)
        },
        onGamepadDisconnect: function(i) {
            k3.__onGamepadDisconnect(i)
        },
        onJoystickAxisMove: function(i, q, i1) {},
        onJoystickButtonDown: function(i, q) {},
        onJoystickButtonUp: function(i, q) {},
        onJoystickConnect: function(i) {},
        onJoystickDisconnect: function(i) {},
        onJoystickHatMove: function(i1, q, i) {},
        onJoystickTrackballMove: function(q, i, i1) {},
        onKeyDown: function(q, i1, i) {
            if (this.window == null || this.window != q) {
                return
            }
            this.__onKey("keyDown", i1, i)
        },
        onKeyUp: function(q, i1, i) {
            if (this.window == null || this.window != q) {
                return
            }
            this.__onKey("keyUp", i1, i)
        },
        onModuleExit: function(q) {
            if (this.window != null) {
                var i = new hM("deactivate");
                this.__broadcast(i, true)
            }
        },
        onMouseDown: function(i2, i, js, q) {
            if (this.window == null || this.window != i2) {
                return
            }
            var i1;
            switch (q) {
                case 1:
                    i1 = "middleMouseDown";
                    break;
                case 2:
                    i1 = "rightMouseDown";
                    break;
                default:
                    i1 = "mouseDown"
            }
            this.__onMouse(i1, i * i2.__scale | 0, js * i2.__scale | 0, q)
        },
        onMouseMove: function(q, i, i1) {
            if (this.window == null || this.window != q) {
                return
            }
            this.__onMouse("mouseMove", i * q.__scale | 0, i1 * q.__scale | 0, 0)
        },
        onMouseMoveRelative: function(q, i, i1) {},
        onMouseUp: function(i2, i, js, q) {
            if (this.window == null || this.window != i2) {
                return
            }
            var i1;
            switch (q) {
                case 1:
                    i1 = "middleMouseUp";
                    break;
                case 2:
                    i1 = "rightMouseUp";
                    break;
                default:
                    i1 = "mouseUp"
            }
            this.__onMouse(i1, i * i2.__scale | 0, js * i2.__scale | 0, q)
        },
        onMouseWheel: function(i1, q, i) {
            if (this.window == null || this.window != i1) {
                return
            }
            this.__onMouseWheel(q * i1.__scale | 0, i * i1.__scale | 0)
        },
        onPreloadComplete: function() {},
        onPreloadProgress: function(i, q) {},
        onRenderContextLost: function(i) {},
        onRenderContextRestored: function(q, i) {},
        onTextEdit: function(q, i1, i2, i) {},
        onTextInput: function(i1, i2) {
            if (this.window == null || this.window != i1) {
                return
            }
            var i = [];
            if (this.__focus == null) {
                this.__getInteractive(i)
            } else {
                this.__focus.__getInteractive(i)
            }
            var q = new fi("textInput", true, false, i2);
            if (i.length > 0) {
                i.reverse();
                this.__fireEvent(q, i)
            } else {
                this.__broadcast(q, true)
            }
        },
        onTouchMove: function(i) {
            this.__onTouch("touchMove", i)
        },
        onTouchEnd: function(i) {
            this.__onTouch("touchEnd", i)
        },
        onTouchStart: function(i) {
            this.__onTouch("touchBegin", i)
        },
        onWindowActivate: function(q) {
            if (this.window == null || this.window != q) {
                return
            }
            var i = new hM("activate");
            this.__broadcast(i, true)
        },
        onWindowClose: function(i) {
            if (this.window == i) {
                this.window = null
            }
        },
        onWindowCreate: function(i2) {
            if (this.window == null || this.window != i2) {
                return
            }
            if (i2.renderer != null) {
                var qY = i2.renderer.context;
                switch (qY[1]) {
                    case 0:
                        var js = qY[2];
                        break;
                    case 1:
                        var i1 = qY[2];
                        this.__renderer = new bO(this.stageWidth, this.stageHeight, i1);
                        break;
                    case 2:
                        var q = qY[2];
                        break;
                    case 4:
                        var qZ = qY[2];
                        break;
                    case 5:
                        var i = qY[2];
                        break;
                    default:
                }
            }
        },
        onWindowDeactivate: function(q) {
            if (this.window == null || this.window != q) {
                return
            }
            var i = new hM("deactivate");
            this.__broadcast(i, true)
        },
        onWindowDropFile: function(q, i) {},
        onWindowEnter: function(i) {},
        onWindowFocusIn: function(q) {
            if (this.window == null || this.window != q) {
                return
            }
            var i = new ls("focusIn", true, false, null, false, 0);
            this.__broadcast(i, true)
        },
        onWindowFocusOut: function(q) {
            if (this.window == null || this.window != q) {
                return
            }
            var i = new ls("focusOut", true, false, null, false, 0);
            this.__broadcast(i, true)
        },
        onWindowFullscreen: function(i) {
            if (this.window == null || this.window != i) {
                return
            }
            if (this.__displayState == 2) {
                this.__displayState = 1
            }
        },
        onWindowLeave: function(i) {
            if (this.window == null || this.window != i) {
                return
            }
            this.__dispatchEvent(new hM("mouseLeave"))
        },
        onWindowMinimize: function(i) {},
        onWindowMove: function(q, i, i1) {},
        onWindowResize: function(i2, q, i) {
            if (this.window == null || this.window != i2) {
                return
            }
            if (this.__displayState != 2 && !i2.__fullscreen) {
                this.__displayState = 2
            }
            this.stageWidth = q * i2.__scale | 0;
            this.stageHeight = i * i2.__scale | 0;
            if (this.__renderer != null) {
                this.__renderer.resize(this.stageWidth, this.stageHeight)
            }
            var i1 = new hM("resize");
            this.__broadcast(i1, false)
        },
        onWindowRestore: function(i) {},
        render: function(i) {
            if (i.window == null || i.window != this.window) {
                return
            }
            if (this.application != null && this.application.windows.length > 0) {
                if (!this.__transformDirty) {
                    this.__transformDirty = true;
                    eH.__worldTransformDirty++
                }
                if (!this.__renderDirty) {
                    this.__updateCachedBitmap = true;
                    this.__updateFilters = this.get_filters() != null && this.get_filters().length > 0;
                    this.__renderDirty = true;
                    eH.__worldRenderDirty++
                }
            }
            if (this.__rendering) {
                return
            }
            this.__rendering = true;
            this.__broadcast(new hM("enterFrame"), true);
            if (this.__invalidated) {
                this.__invalidated = false;
                this.__broadcast(new hM("render"), true)
            }
            this.__renderable = true;
            this.__enterFrame(this.__deltaTime);
            this.__deltaTime = 0;
            this.__update(false, true);
            if (this.__renderer != null) {
                var q = i.context;
                switch (q[1]) {
                    case 4:
                        var i1 = q[2];
                        (n0.__cast(this.__renderer, cS)).cairo = i1;
                        this.__renderer.renderSession.cairo = i1;
                        break;
                    default:
                }
                this.__renderer.render(this)
            }
            this.__rendering = false
        },
        update: function(i) {
            this.__deltaTime = i
        },
        __drag: function(q) {
            var i1 = this.__dragObject.parent;
            if (i1 != null) {
                q = i1.globalToLocal(q)
            }
            var i = q.x + this.__dragOffsetX;
            var i2 = q.y + this.__dragOffsetY;
            if (this.__dragBounds != null) {
                if (i < this.__dragBounds.x) {
                    i = this.__dragBounds.x
                } else {
                    if (i > this.__dragBounds.get_right()) {
                        i = this.__dragBounds.get_right()
                    }
                }
                if (i2 < this.__dragBounds.y) {
                    i2 = this.__dragBounds.y
                } else {
                    if (i2 > this.__dragBounds.get_bottom()) {
                        i2 = this.__dragBounds.get_bottom()
                    }
                }
            }
            this.__dragObject.set_x(i);
            this.__dragObject.set_y(i2)
        },
        __fireEvent: function(qZ, q) {
            var qY = q.length;
            if (qY == 0) {
                qZ.eventPhase = 2;
                qZ.target.__broadcast(qZ, false)
            } else {
                qZ.eventPhase = 1;
                qZ.target = q[q.length - 1];
                var q0 = 0;
                var q1 = qY - 1;
                while (q0 < q1) {
                    var i2 = q0++;
                    q[i2].__broadcast(qZ, false);
                    if (qZ.__isCanceled) {
                        return
                    }
                }
                qZ.eventPhase = 2;
                qZ.target.__broadcast(qZ, false);
                if (qZ.__isCanceled) {
                    return
                }
                if (qZ.bubbles) {
                    qZ.eventPhase = 3;
                    var js = qY - 2;
                    while (js >= 0) {
                        q[js].__broadcast(qZ, false);
                        if (qZ.__isCanceled) {
                            return
                        }
                        js--
                    }
                }
            }
        },
        __getInteractive: function(i) {
            if (i != null) {
                i.push(this)
            }
            return true
        },
        __onKey: function(js, q0, q) {
            mN.__altKey = dW.get_altKey(q);
            mN.__commandKey = dW.get_metaKey(q);
            mN.__ctrlKey = dW.get_ctrlKey(q);
            mN.__shiftKey = dW.get_shiftKey(q);
            var i = [];
            if (this.__focus == null) {
                this.__getInteractive(i)
            } else {
                this.__focus.__getInteractive(i)
            }
            if (i.length > 0) {
                var qZ;
                switch (q0) {
                    case 1073742048:
                    case 1073742049:
                    case 1073742050:
                    case 1073742051:
                        qZ = 1;
                        break;
                    case 1073742052:
                    case 1073742053:
                    case 1073742054:
                    case 1073742055:
                        qZ = 2;
                        break;
                    case 1073741908:
                    case 1073741909:
                    case 1073741910:
                    case 1073741911:
                    case 1073741912:
                    case 1073741913:
                    case 1073741914:
                    case 1073741915:
                    case 1073741916:
                    case 1073741917:
                    case 1073741918:
                    case 1073741919:
                    case 1073741920:
                    case 1073741921:
                    case 1073741922:
                    case 1073741923:
                    case 1073742044:
                        qZ = 3;
                        break;
                    default:
                        qZ = 0
                }
                var i2;
                switch (q0) {
                    case 8:
                        i2 = 8;
                        break;
                    case 9:
                        i2 = 9;
                        break;
                    case 13:
                        i2 = 13;
                        break;
                    case 27:
                        i2 = 27;
                        break;
                    case 32:
                        i2 = 32;
                        break;
                    case 33:
                        i2 = 49;
                        break;
                    case 34:
                        i2 = 222;
                        break;
                    case 35:
                        i2 = 51;
                        break;
                    case 36:
                        i2 = 52;
                        break;
                    case 37:
                        i2 = 53;
                        break;
                    case 38:
                        i2 = 55;
                        break;
                    case 39:
                        i2 = 222;
                        break;
                    case 40:
                        i2 = 57;
                        break;
                    case 41:
                        i2 = 48;
                        break;
                    case 42:
                        i2 = 56;
                        break;
                    case 44:
                        i2 = 188;
                        break;
                    case 45:
                        i2 = 189;
                        break;
                    case 46:
                        i2 = 190;
                        break;
                    case 47:
                        i2 = 191;
                        break;
                    case 48:
                        i2 = 48;
                        break;
                    case 49:
                        i2 = 49;
                        break;
                    case 50:
                        i2 = 50;
                        break;
                    case 51:
                        i2 = 51;
                        break;
                    case 52:
                        i2 = 52;
                        break;
                    case 53:
                        i2 = 53;
                        break;
                    case 54:
                        i2 = 54;
                        break;
                    case 55:
                        i2 = 55;
                        break;
                    case 56:
                        i2 = 56;
                        break;
                    case 57:
                        i2 = 57;
                        break;
                    case 58:
                        i2 = 186;
                        break;
                    case 59:
                        i2 = 186;
                        break;
                    case 60:
                        i2 = 60;
                        break;
                    case 61:
                        i2 = 187;
                        break;
                    case 62:
                        i2 = 190;
                        break;
                    case 63:
                        i2 = 191;
                        break;
                    case 64:
                        i2 = 50;
                        break;
                    case 91:
                        i2 = 219;
                        break;
                    case 92:
                        i2 = 220;
                        break;
                    case 93:
                        i2 = 221;
                        break;
                    case 94:
                        i2 = 54;
                        break;
                    case 95:
                        i2 = 189;
                        break;
                    case 96:
                        i2 = 192;
                        break;
                    case 97:
                        i2 = 65;
                        break;
                    case 98:
                        i2 = 66;
                        break;
                    case 99:
                        i2 = 67;
                        break;
                    case 100:
                        i2 = 68;
                        break;
                    case 101:
                        i2 = 69;
                        break;
                    case 102:
                        i2 = 70;
                        break;
                    case 103:
                        i2 = 71;
                        break;
                    case 104:
                        i2 = 72;
                        break;
                    case 105:
                        i2 = 73;
                        break;
                    case 106:
                        i2 = 74;
                        break;
                    case 107:
                        i2 = 75;
                        break;
                    case 108:
                        i2 = 76;
                        break;
                    case 109:
                        i2 = 77;
                        break;
                    case 110:
                        i2 = 78;
                        break;
                    case 111:
                        i2 = 79;
                        break;
                    case 112:
                        i2 = 80;
                        break;
                    case 113:
                        i2 = 81;
                        break;
                    case 114:
                        i2 = 82;
                        break;
                    case 115:
                        i2 = 83;
                        break;
                    case 116:
                        i2 = 84;
                        break;
                    case 117:
                        i2 = 85;
                        break;
                    case 118:
                        i2 = 86;
                        break;
                    case 119:
                        i2 = 87;
                        break;
                    case 120:
                        i2 = 88;
                        break;
                    case 121:
                        i2 = 89;
                        break;
                    case 122:
                        i2 = 90;
                        break;
                    case 127:
                        i2 = 46;
                        break;
                    case 1073741881:
                        i2 = 20;
                        break;
                    case 1073741882:
                        i2 = 112;
                        break;
                    case 1073741883:
                        i2 = 113;
                        break;
                    case 1073741884:
                        i2 = 114;
                        break;
                    case 1073741885:
                        i2 = 115;
                        break;
                    case 1073741886:
                        i2 = 116;
                        break;
                    case 1073741887:
                        i2 = 117;
                        break;
                    case 1073741888:
                        i2 = 118;
                        break;
                    case 1073741889:
                        i2 = 119;
                        break;
                    case 1073741890:
                        i2 = 120;
                        break;
                    case 1073741891:
                        i2 = 121;
                        break;
                    case 1073741892:
                        i2 = 122;
                        break;
                    case 1073741893:
                        i2 = 123;
                        break;
                    case 1073741894:
                        i2 = 301;
                        break;
                    case 1073741895:
                        i2 = 145;
                        break;
                    case 1073741896:
                        i2 = 19;
                        break;
                    case 1073741897:
                        i2 = 45;
                        break;
                    case 1073741898:
                        i2 = 36;
                        break;
                    case 1073741899:
                        i2 = 33;
                        break;
                    case 1073741901:
                        i2 = 35;
                        break;
                    case 1073741902:
                        i2 = 34;
                        break;
                    case 1073741903:
                        i2 = 39;
                        break;
                    case 1073741904:
                        i2 = 37;
                        break;
                    case 1073741905:
                        i2 = 40;
                        break;
                    case 1073741906:
                        i2 = 38;
                        break;
                    case 1073741907:
                        i2 = 144;
                        break;
                    case 1073741908:
                        i2 = 111;
                        break;
                    case 1073741909:
                        i2 = 106;
                        break;
                    case 1073741910:
                        i2 = 109;
                        break;
                    case 1073741911:
                        i2 = 107;
                        break;
                    case 1073741912:
                        i2 = 108;
                        break;
                    case 1073741913:
                        i2 = 97;
                        break;
                    case 1073741914:
                        i2 = 98;
                        break;
                    case 1073741915:
                        i2 = 99;
                        break;
                    case 1073741916:
                        i2 = 100;
                        break;
                    case 1073741917:
                        i2 = 101;
                        break;
                    case 1073741918:
                        i2 = 102;
                        break;
                    case 1073741919:
                        i2 = 103;
                        break;
                    case 1073741920:
                        i2 = 104;
                        break;
                    case 1073741921:
                        i2 = 105;
                        break;
                    case 1073741922:
                        i2 = 96;
                        break;
                    case 1073741923:
                        i2 = 110;
                        break;
                    case 1073741925:
                        i2 = 302;
                        break;
                    case 1073741928:
                        i2 = 124;
                        break;
                    case 1073741929:
                        i2 = 125;
                        break;
                    case 1073741930:
                        i2 = 126;
                        break;
                    case 1073741982:
                        i2 = 13;
                        break;
                    case 1073742044:
                        i2 = 110;
                        break;
                    case 1073742048:
                        i2 = 17;
                        break;
                    case 1073742049:
                        i2 = 16;
                        break;
                    case 1073742050:
                        i2 = 18;
                        break;
                    case 1073742051:
                        i2 = 15;
                        break;
                    case 1073742052:
                        i2 = 17;
                        break;
                    case 1073742053:
                        i2 = 16;
                        break;
                    case 1073742054:
                        i2 = 18;
                        break;
                    case 1073742055:
                        i2 = 15;
                        break;
                    default:
                        i2 = q0
                }
                var i1 = gG.__getCharCode(i2, dW.get_shiftKey(q));
                var qY = new fa(js, true, false, i1, i2, qZ, this.__macKeyboard ? dW.get_ctrlKey(q) || dW.get_metaKey(q) : dW.get_ctrlKey(q), dW.get_altKey(q), dW.get_shiftKey(q), dW.get_ctrlKey(q), dW.get_metaKey(q));
                i.reverse();
                this.__fireEvent(qY, i);
                if (qY.__isCanceled) {
                    if (js == "keyDown") {
                        this.window.onKeyDown.cancel()
                    } else {
                        this.window.onKeyUp.cancel()
                    }
                }
            }
        },
        __onMouse: function(i1, q4, q2, i) {
            if (i > 2) {
                return
            }
            this.__mouseX = q4;
            this.__mouseY = q2;
            var qY = [];
            var rb = null;
            var qZ = new pp(q4, q2);
            if (this.__hitTest(q4, q2, true, qY, true, this)) {
                rb = qY[qY.length - 1]
            } else {
                rb = this;
                qY = [this]
            }
            if (rb == null) {
                rb = this
            }
            var q9 = null;
            switch (i1) {
                case "mouseDown":
                    if (rb.get_tabEnabled()) {
                        this.set_focus(rb)
                    } else {
                        this.set_focus(null)
                    }
                    this.__mouseDownLeft = rb;
                    break;
                case "middleMouseDown":
                    this.__mouseDownMiddle = rb;
                    break;
                case "rightMouseDown":
                    this.__mouseDownRight = rb;
                    break;
                case "mouseUp":
                    if (this.__mouseDownLeft == rb) {
                        q9 = "click"
                    }
                    this.__mouseDownLeft = null;
                    break;
                case "middleMouseUp":
                    if (this.__mouseDownMiddle == rb) {
                        q9 = "middleClick"
                    }
                    this.__mouseDownMiddle = null;
                    break;
                case "rightMouseUp":
                    if (this.__mouseDownRight == rb) {
                        q9 = "rightClick"
                    }
                    this.__mouseDownRight = null;
                    break;
                default:
            }
            this.__fireEvent(mN.__create(i1, i, this.__mouseX, this.__mouseY, rb == this ? qZ : rb.globalToLocal(qZ), rb), qY);
            if (q9 != null) {
                this.__fireEvent(mN.__create(q9, i, this.__mouseX, this.__mouseY, rb == this ? qZ : rb.globalToLocal(qZ), rb), qY);
                if (i1 == "mouseUp" && (n0.__cast(rb, ey)).doubleClickEnabled) {
                    var ra = ns.getTimer();
                    if (ra - this.__lastClickTime < 500) {
                        this.__fireEvent(mN.__create("doubleClick", i, this.__mouseX, this.__mouseY, rb == this ? qZ : rb.globalToLocal(qZ), rb), qY);
                        this.__lastClickTime = 0
                    } else {
                        this.__lastClickTime = ra
                    }
                }
            }
            var i2 = null;
            var q = 0;
            while (q < qY.length) {
                var q1 = qY[q];
                ++q;
                i2 = q1.__getCursor();
                if (i2 != null) {
                    ad.set_cursor(i2);
                    break
                }
            }
            if (i2 == null) {
                ad.set_cursor(hL.ARROW)
            }
            var q7;
            var q3;
            var q6 = 0;
            var q8 = this.__mouseOutStack;
            while (q6 < q8.length) {
                var q0 = q8[q6];
                ++q6;
                if (cj.indexOf(qY, q0, 0) == -1) {
                    cj.remove(this.__mouseOutStack, q0);
                    q3 = q0.globalToLocal(qZ);
                    q7 = mN.__create("mouseOut", i, this.__mouseX, this.__mouseY, q3, q0);
                    q7.bubbles = false;
                    q0.__dispatchEvent(q7)
                }
            }
            var q5 = 0;
            while (q5 < qY.length) {
                var js = qY[q5];
                ++q5;
                if (cj.indexOf(this.__mouseOutStack, js, 0) == -1) {
                    if (js.hasEventListener("mouseOver")) {
                        q3 = js.globalToLocal(qZ);
                        q7 = mN.__create("mouseOver", i, this.__mouseX, this.__mouseY, q3, js);
                        q7.bubbles = false;
                        js.__dispatchEvent(q7)
                    }
                    if (js.hasEventListener("mouseOut")) {
                        this.__mouseOutStack.push(js)
                    }
                }
            }
            if (this.__dragObject != null) {
                this.__drag(qZ)
            }
        },
        __onMouseWheel: function(i2, i1) {
            var q = this.__mouseX;
            var q0 = this.__mouseY;
            var i = [];
            if (!this.__hitTest(q, q0, false, i, true, this)) {
                i = [this]
            }
            var js = i[i.length - 1];
            var qZ = new pp(q, q0);
            var qY = i1 | 0;
            this.__fireEvent(mN.__create("mouseWheel", 0, this.__mouseX, this.__mouseY, js == this ? qZ : js.globalToLocal(qZ), js, qY), i)
        },
        __onTouch: function(i1, q0) {
            var q = new pp(q0.x * this.stageWidth, q0.y * this.stageHeight);
            this.__mouseX = q.x;
            this.__mouseY = q.y;
            var qZ = [];
            if (this.__hitTest(this.__mouseX, this.__mouseY, false, qZ, true, this)) {
                var qY = qZ[qZ.length - 1];
                if (qY == null) {
                    qY = this
                }
                var js = qY.globalToLocal(q);
                var i = hR.__create(i1, null, this.__mouseX, this.__mouseY, js, qY);
                i.touchPointID = q0.id;
                i.isPrimaryTouchPoint = true;
                this.__fireEvent(i, qZ)
            } else {
                var i2 = hR.__create(i1, null, this.__mouseX, this.__mouseY, q, this);
                i2.touchPointID = q0.id;
                i2.isPrimaryTouchPoint = true;
                this.__fireEvent(i2, [this.stage])
            }
        },
        __resize: function() {},
        __startDrag: function(i1, i, js) {
            if (js == null) {
                this.__dragBounds = null
            } else {
                this.__dragBounds = js.clone()
            }
            this.__dragObject = i1;
            if (this.__dragObject != null) {
                if (i) {
                    this.__dragOffsetX = -this.__dragObject.get_width() / 2;
                    this.__dragOffsetY = -this.__dragObject.get_height() / 2
                } else {
                    var q = new pp(this.get_mouseX(), this.get_mouseY());
                    var i2 = this.__dragObject.parent;
                    if (i2 != null) {
                        q = i2.globalToLocal(q)
                    }
                    this.__dragOffsetX = this.__dragObject.get_x() - q.x;
                    this.__dragOffsetY = this.__dragObject.get_y() - q.y
                }
            }
        },
        __stopDrag: function(i) {
            this.__dragBounds = null;
            this.__dragObject = null
        },
        __update: function(q, i, i1) {
            if (q) {
                if (eH.__worldTransformDirty > 0) {
                    bG.prototype.__update.call(this, true, i, i1);
                    if (i) {
                        eH.__worldTransformDirty = 0;
                        this.__dirty = true
                    }
                }
            } else {
                if (eH.__worldTransformDirty > 0 || this.__dirty || eH.__worldRenderDirty > 0) {
                    bG.prototype.__update.call(this, false, i, i1);
                    if (i) {
                        eH.__worldTransformDirty = 0;
                        eH.__worldRenderDirty = 0;
                        this.__dirty = false
                    }
                }
            }
        },
        get_mouseX: function() {
            return this.__mouseX
        },
        get_mouseY: function() {
            return this.__mouseY
        },
        canvas_onContextLost: function(i) {},
        canvas_onContextRestored: function(i) {},
        get_color: function() {
            return this.__color
        },
        set_color: function(i2) {
            var i1 = (i2 & 16711680) >>> 16;
            var q = (i2 & 65280) >>> 8;
            var i = i2 & 255;
            this.__colorSplit = [i1 / 255, q / 255, i / 255];
            this.__colorString = "#" + cP.hex(i2, 6);
            return this.__color = i2
        },
        get_displayState: function() {
            return this.__displayState
        },
        set_displayState: function(i) {
            if (this.window != null) {
                switch (i) {
                    case 2:
                        if (this.window.__fullscreen) {
                            this.window.set_fullscreen(false);
                            this.stageWidth = this.window.__width * this.window.__scale | 0;
                            this.stageHeight = this.window.__height * this.window.__scale | 0;
                            this.dispatchEvent(new f8("fullScreen", false, false, false, true))
                        }
                        break;
                    default:
                        if (!this.window.__fullscreen) {
                            this.window.set_fullscreen(true);
                            this.stageWidth = this.window.__width * this.window.__scale | 0;
                            this.stageHeight = this.window.__height * this.window.__scale | 0;
                            this.dispatchEvent(new f8("fullScreen", false, false, true, true))
                        }
                }
            }
            return this.__displayState = i
        },
        get_focus: function() {
            return this.__focus
        },
        set_focus: function(i1) {
            if (i1 != this.__focus) {
                var i2 = this.__focus;
                this.__focus = i1;
                if (i2 != null) {
                    var q = new ls("focusOut", true, false, this.__focus, false, 0);
                    this.__stack = [];
                    i2.__getInteractive(this.__stack);
                    this.__stack.reverse();
                    this.__fireEvent(q, this.__stack)
                }
                if (this.__focus != null) {
                    var i = new ls("focusIn", true, false, i2, false, 0);
                    this.__stack = [];
                    i1.__getInteractive(this.__stack);
                    this.__stack.reverse();
                    this.__fireEvent(i, this.__stack)
                }
            }
            return this.__focus
        },
        get_frameRate: function() {
            if (this.application != null) {
                return this.application.backend.getFrameRate()
            }
            return 0
        },
        set_frameRate: function(i) {
            if (this.application != null) {
                return this.application.backend.setFrameRate(i)
            }
            return i
        },
        __class__: az,
        __properties__: lP(bG.prototype.__properties__, {
            set_frameRate: "set_frameRate",
            get_frameRate: "get_frameRate",
            set_focus: "set_focus",
            get_focus: "get_focus",
            set_displayState: "set_displayState",
            get_displayState: "get_displayState",
            set_color: "set_color",
            get_color: "get_color"
        })
    });
    var cf = function() {
        lR.call(this)
    };
    nt["openfl.display.Stage3D"] = cf;
    cf.__name__ = ["openfl", "display", "Stage3D"];
    cf.__super__ = lR;
    cf.prototype = lP(lR.prototype, {
        context3D: null,
        visible: null,
        x: null,
        y: null,
        requestContext3D: function(i) {
            if (i == null) {
                i = ""
            }
            var q = this;
            if (aw.get_isSupported()) {
                og.delay(function() {
                    q.context3D = new l5();
                    q.dispatchEvent(new hM("context3DCreate"))
                }, 1)
            } else {
                og.delay(function() {
                    q.dispatchEvent(new qJ("error"))
                }, 1)
            }
        },
        __class__: cf
    });
    var dT = {};
    nt["openfl.display._StageAlign.StageAlign_Impl_"] = dT;
    dT.__name__ = ["openfl", "display", "_StageAlign", "StageAlign_Impl_"];
    dT.fromString = function(i) {
        switch (i) {
            case "bottom":
                return 0;
            case "bottomLeft":
                return 1;
            case "bottomRight":
                return 2;
            case "left":
                return 3;
            case "right":
                return 4;
            case "top":
                return 5;
            case "topLeft":
                return 6;
            case "topRight":
                return 7;
            default:
                return null
        }
    };
    dT.toString = function(i) {
        switch (i) {
            case 0:
                return "bottom";
            case 1:
                return "bottomLeft";
            case 2:
                return "bottomRight";
            case 3:
                return "left";
            case 4:
                return "right";
            case 5:
                return "top";
            case 6:
                return "topLeft";
            case 7:
                return "topRight";
            default:
                return null
        }
    };
    var qx = {};
    nt["openfl.display._StageDisplayState.StageDisplayState_Impl_"] = qx;
    qx.__name__ = ["openfl", "display", "_StageDisplayState", "StageDisplayState_Impl_"];
    qx.fromString = function(i) {
        switch (i) {
            case "fullScreen":
                return 0;
            case "fullScreenInteractive":
                return 1;
            case "normal":
                return 2;
            default:
                return null
        }
    };
    qx.toString = function(i) {
        switch (i) {
            case 0:
                return "fullScreen";
            case 1:
                return "fullScreenInteractive";
            case 2:
                return "normal";
            default:
                return null
        }
    };
    var pr = {};
    nt["openfl.display._StageQuality.StageQuality_Impl_"] = pr;
    pr.__name__ = ["openfl", "display", "_StageQuality", "StageQuality_Impl_"];
    pr.fromString = function(i) {
        switch (i) {
            case "best":
                return 0;
            case "high":
                return 1;
            case "low":
                return 2;
            case "medium":
                return 3;
            default:
                return null
        }
    };
    pr.toString = function(i) {
        switch (i) {
            case 0:
                return "best";
            case 1:
                return "high";
            case 2:
                return "low";
            case 3:
                return "medium";
            default:
                return null
        }
    };
    var oS = {};
    nt["openfl.display._StageScaleMode.StageScaleMode_Impl_"] = oS;
    oS.__name__ = ["openfl", "display", "_StageScaleMode", "StageScaleMode_Impl_"];
    oS.fromString = function(i) {
        switch (i) {
            case "exactFit":
                return 0;
            case "noBorder":
                return 1;
            case "noScale":
                return 2;
            case "showAll":
                return 3;
            default:
                return null
        }
    };
    oS.toString = function(i) {
        switch (i) {
            case 0:
                return "exactFit";
            case 1:
                return "noBorder";
            case 2:
                return "noScale";
            case 3:
                return "showAll";
            default:
                return null
        }
    };
    var jL = function(i) {
        this.__bitmap = i;
        this.__centerPoints = [];
        this.__tileRects = [];
        this.__tileUVs = [];
        this.__rectTile = new gn();
        this.__rectUV = new gn();
        this.__point = new pp()
    };
    nt["openfl.display.Tilesheet"] = jL;
    jL.__name__ = ["openfl", "display", "Tilesheet"];
    jL.prototype = {
        __bitmap: null,
        __centerPoints: null,
        __tileRects: null,
        __tileUVs: null,
        __rectTile: null,
        __rectUV: null,
        __point: null,
        addTileRect: function(i, q) {
            this.__tileRects.push(i);
            if (q == null) {
                q = jL.__defaultPoint
            }
            this.__centerPoints.push(q);
            this.__tileUVs.push(new gn(i.get_left() / this.__bitmap.width, i.get_top() / this.__bitmap.height, i.get_right() / this.__bitmap.width, i.get_bottom() / this.__bitmap.height));
            return this.__tileRects.length - 1
        },
        drawTiles: function(i1, js, q, i, i2) {
            if (i2 == null) {
                i2 = -1
            }
            if (i == null) {
                i = 0
            }
            if (q == null) {
                q = false
            }
            i1.drawTiles(this, js, q, i, null, i2)
        },
        getTileCenter: function(i) {
            return this.__centerPoints[i]
        },
        getTileRect: function(i) {
            return this.__tileRects[i]
        },
        getTileUVs: function(i) {
            return this.__tileUVs[i]
        },
        __class__: jL
    };
    var kn = {};
    nt["openfl.display._TriangleCulling.TriangleCulling_Impl_"] = kn;
    kn.__name__ = ["openfl", "display", "_TriangleCulling", "TriangleCulling_Impl_"];
    kn.fromString = function(i) {
        switch (i) {
            case "negative":
                return 0;
            case "none":
                return 1;
            case "positive":
                return 2;
            default:
                return null
        }
    };
    kn.toString = function(i) {
        switch (i) {
            case 0:
                return "negative";
            case 1:
                return "none";
            case 2:
                return "positive";
            default:
                return null
        }
    };
    var pk = function(i) {
        h1.call(this, i)
    };
    nt["openfl.display.Window"] = pk;
    pk.__name__ = ["openfl", "display", "Window"];
    pk.__super__ = h1;
    pk.prototype = lP(h1.prototype, {
        create: function(i) {
            h1.prototype.create.call(this, i);
            this.stage = new az(this, Object.prototype.hasOwnProperty.call(this.config, "background") ? this.config.background : 16777215);
            i.addModule(this.stage)
        },
        __class__: pk
    });
    var l5 = function() {
        this.disposed = false;
        this.stencilCompareMode = 519;
        this.stencilRef = 0;
        this.stencilReadMask = 255;
        this._yFlip = 1;
        this.vertexBuffersCreated = [];
        this.indexBuffersCreated = [];
        this.programsCreated = [];
        this.texturesCreated = [];
        this.samplerParameters = [];
        var i2 = 0;
        var js = l5.MAX_SAMPLERS;
        while (i2 < js) {
            var i1 = i2++;
            this.samplerParameters[i1] = new eX();
            this.samplerParameters[i1].wrap = pK.CLAMP;
            this.samplerParameters[i1].filter = kk.LINEAR;
            this.samplerParameters[i1].mipfilter = y.MIPNONE
        }
        var q = ns.current.stage;
        this.ogl = new aw();
        this.ogl.set_scrollRect(new gn(0, 0, q.stageWidth, q.stageHeight));
        this.scrollRect = this.ogl.get_scrollRect().clone();
        this.ogl.set_width(q.stageWidth);
        this.ogl.set_height(q.stageHeight);
        q.addChildAt(this.ogl, 0);
        mU.context.pixelStorei(37440, 1);
        mU.context.pixelStorei(37441, 1)
    };
    nt["openfl.display3D.Context3D"] = l5;
    l5.__name__ = ["openfl", "display3D", "Context3D"];
    l5.prototype = {
        driverInfo: null,
        enableErrorChecking: null,
        blendDestinationFactor: null,
        blendEnabled: null,
        blendSourceFactor: null,
        currentProgram: null,
        disposed: null,
        drawing: null,
        framebuffer: null,
        indexBuffersCreated: null,
        ogl: null,
        programsCreated: null,
        renderbuffer: null,
        samplerParameters: null,
        scrollRect: null,
        stencilbuffer: null,
        stencilCompareMode: null,
        stencilRef: null,
        stencilReadMask: null,
        texturesCreated: null,
        vertexBuffersCreated: null,
        _yFlip: null,
        backBufferDepthAndStencil: null,
        rttDepthAndStencil: null,
        scissorRectangle: null,
        renderToTexture: null,
        rttWidth: null,
        rttHeight: null,
        clear: function(qY, i2, i, js, qZ, i1, q) {
            if (q == null) {
                q = 17664
            }
            if (i1 == null) {
                i1 = 0
            }
            if (qZ == null) {
                qZ = 1
            }
            if (js == null) {
                js = 1
            }
            if (i == null) {
                i = 0
            }
            if (i2 == null) {
                i2 = 0
            }
            if (qY == null) {
                qY = 0
            }
            if (!this.drawing) {
                this.__updateBlendStatus();
                this.drawing = true
            }
            if (this.scissorRectangle != null) {
                mU.context.disable(3089)
            }
            mU.context.clearColor(qY, i2, i, js);
            mU.context.clearDepth(qZ);
            mU.context.clearStencil(i1);
            mU.context.clear(q);
            if (this.scissorRectangle != null) {
                mU.context.enable(3089)
            }
        },
        configureBackBuffer: function(i1, i, q, i2) {
            if (i2 == null) {
                i2 = true
            }
            this.backBufferDepthAndStencil = i2;
            this.updateDepthAndStencilState();
            this.setBackBufferViewPort(null, null, i1, i);
            this.updateScissorRectangle()
        },
        setBackBufferViewPort: function(q, i2, i1, i) {
            if (q == null) {
                q = this.scrollRect.x | 0
            }
            if (i2 == null) {
                i2 = this.scrollRect.y | 0
            }
            if (i1 == null) {
                i1 = this.scrollRect.width | 0
            }
            if (i == null) {
                i = this.scrollRect.height | 0
            }
            this.scrollRect.x = q;
            this.scrollRect.y = i2;
            this.scrollRect.width = i1;
            this.scrollRect.height = i;
            this.ogl.set_width(q + i1);
            this.ogl.set_height(i2 + i);
            this.updateBackBufferViewPort()
        },
        updateBackBufferViewPort: function() {
            if (!this.renderToTexture) {
                mU.context.viewport(this.scrollRect.x | 0, this.scrollRect.y | 0, this.scrollRect.width | 0, this.scrollRect.height | 0)
            }
        },
        updateDepthAndStencilState: function() {
            var i;
            if (this.renderToTexture) {
                i = this.rttDepthAndStencil
            } else {
                i = this.backBufferDepthAndStencil
            }
            if (i) {
                if (dE.current.windows[0].config.depthBuffer) {
                    mU.context.enable(2929)
                }
                if (dE.current.windows[0].config.stencilBuffer) {
                    mU.context.enable(2960)
                }
            } else {
                mU.context.disable(2929);
                mU.context.disable(2960)
            }
        },
        createCubeTexture: function(i1, js, q, i) {
            if (i == null) {
                i = 0
            }
            var i2 = new gD(this, mU.context.createTexture(), i1);
            this.texturesCreated.push(i2);
            return i2
        },
        createIndexBuffer: function(i1, q) {
            if (q == null) {
                q = dc.STATIC_DRAW
            }
            var i = new mk(this, mU.context.createBuffer(), i1, q == dc.STATIC_DRAW ? 35044 : 35048);
            this.indexBuffersCreated.push(i);
            return i
        },
        createProgram: function() {
            var i = new fb(this, mU.context.createProgram());
            this.programsCreated.push(i);
            return i
        },
        createRectangleTexture: function(i1, i, js, q) {
            var i2 = new R(this, mU.context.createTexture(), q, i1, i);
            this.texturesCreated.push(i2);
            return i2
        },
        createTexture: function(i2, i, qY, i1, q) {
            if (q == null) {
                q = 0
            }
            var js = new eG(this, mU.context.createTexture(), i1, i2, i);
            this.texturesCreated.push(js);
            return js
        },
        createVertexBuffer: function(i2, i, i1) {
            if (i1 == null) {
                i1 = dc.STATIC_DRAW
            }
            var q = new lM(this, mU.context.createBuffer(), i2, i, i1 == dc.STATIC_DRAW ? 35044 : 35048);
            this.vertexBuffersCreated.push(q);
            return q
        },
        __deleteTexture: function(i) {
            if (i.glTexture == null) {
                return
            }
            cj.remove(this.texturesCreated, i);
            mU.context.deleteTexture(i.glTexture);
            i.glTexture = null
        },
        __deleteVertexBuffer: function(i) {
            if (i.glBuffer == null) {
                return
            }
            cj.remove(this.vertexBuffersCreated, i);
            mU.context.deleteBuffer(i.glBuffer);
            i.glBuffer = null
        },
        __deleteIndexBuffer: function(i) {
            if (i.glBuffer == null) {
                return
            }
            cj.remove(this.indexBuffersCreated, i);
            mU.context.deleteBuffer(i.glBuffer);
            i.glBuffer = null
        },
        __deleteProgram: function(i) {
            if (i.glProgram == null) {
                return
            }
            cj.remove(this.programsCreated, i);
            mU.context.deleteProgram(i.glProgram);
            i.glProgram = null
        },
        dispose: function() {
            var js = 0;
            var q4 = this.vertexBuffersCreated;
            while (js < q4.length) {
                var q3 = q4[js];
                ++js;
                q3.dispose()
            }
            this.vertexBuffersCreated = null;
            var q2 = 0;
            var i2 = this.indexBuffersCreated;
            while (q2 < i2.length) {
                var qY = i2[q2];
                ++q2;
                qY.dispose()
            }
            this.indexBuffersCreated = null;
            var q0 = 0;
            var q = this.programsCreated;
            while (q0 < q.length) {
                var i1 = q[q0];
                ++q0;
                i1.dispose()
            }
            this.programsCreated = null;
            this.samplerParameters = null;
            var qZ = 0;
            var i = this.texturesCreated;
            while (qZ < i.length) {
                var q1 = i[qZ];
                ++qZ;
                q1.dispose()
            }
            this.texturesCreated = null;
            if (this.framebuffer != null) {
                mU.context.deleteFramebuffer(this.framebuffer);
                this.framebuffer = null
            }
            if (this.renderbuffer != null) {
                mU.context.deleteRenderbuffer(this.renderbuffer);
                this.renderbuffer = null
            }
            this.disposed = true
        },
        drawToBitmapData: function(i) {},
        drawTriangles: function(i, i1, i2) {
            if (i2 == null) {
                i2 = -1
            }
            if (i1 == null) {
                i1 = 0
            }
            var q = mU.context.getUniformLocation(this.currentProgram.glProgram, "yflip");
            mU.context.uniform1f(q, this._yFlip);
            if (!this.drawing) {
                throw new nM(new lY("Need to clear before drawing if the buffer has not been cleared since the last present() call."))
            }
            var qY;
            if (i2 == -1) {
                qY = i.numIndices
            } else {
                qY = i2 * 3
            }
            var js = i1 * 2;
            mU.context.bindBuffer(34963, i.glBuffer);
            mU.context.drawElements(4, qY, 5123, js)
        },
        present: function() {
            this.drawing = false;
            mU.context.useProgram(null);
            mU.context.bindBuffer(34962, null);
            mU.context.disable(2884);
            if (this.framebuffer != null) {
                mU.context.bindFramebuffer(36160, null)
            }
            if (this.renderbuffer != null) {
                mU.context.bindRenderbuffer(36161, null)
            }
        },
        removeRenderMethod: function(i) {
            this.ogl.set_render(null)
        },
        setBlendFactors: function(i, q) {
            this.blendEnabled = true;
            this.blendSourceFactor = i;
            this.blendDestinationFactor = q;
            this.__updateBlendStatus()
        },
        setColorMask: function(i2, q, i, i1) {
            mU.context.colorMask(i2, q, i, i1)
        },
        setCulling: function(i) {
            if (i == 0) {
                mU.context.disable(2884)
            } else {
                mU.context.enable(2884);
                switch (i) {
                    case 1029:
                        mU.context.cullFace(1029);
                        break;
                    case 1028:
                        mU.context.cullFace(1028);
                        break;
                    case 1032:
                        mU.context.cullFace(1032);
                        break;
                    default:
                        throw new nM("Unknown Context3DTriangleFace type.")
                }
            }
            switch (i) {
                case 1029:
                    this._yFlip = -1;
                    break;
                case 1028:
                    this._yFlip = 1;
                    break;
                case 1032:
                    this._yFlip = 1;
                    break;
                case 0:
                    this._yFlip = 1;
                    break;
                default:
                    throw new nM("Unknown culling mode " + i + ".")
            }
        },
        setDepthTest: function(i, q) {
            mU.context.depthFunc(q);
            mU.context.depthMask(i)
        },
        setGLSLProgramConstantsFromByteArray: function(i1, i2, i) {
            if (i == null) {
                i = 0
            }
            i2.position = i;
            var q = mU.context.getUniformLocation(this.currentProgram.glProgram, i1);
            mU.uniform4f(q, i2.readFloat(), i2.readFloat(), i2.readFloat(), i2.readFloat())
        },
        setGLSLProgramConstantsFromMatrix: function(i1, q, i2) {
            if (i2 == null) {
                i2 = false
            }
            var i = mU.context.getUniformLocation(this.currentProgram.glProgram, i1);
            mU.uniformMatrix4fv(i, !i2, (function(q3) {
                var q1;
                var q2;
                var qY = q.rawData;
                var q5 = [];
                var q4 = 0;
                var q0 = qY.data.length;
                while (q4 < q0) {
                    var js = q4++;
                    q5.push(qY.data[js])
                }
                q2 = q5;
                var qZ;
                if (q2 != null) {
                    qZ = new Float32Array(q2)
                } else {
                    qZ = null
                }
                q1 = qZ;
                return q1
            }(this)))
        },
        setGLSLProgramConstantsFromVector4: function(q, i1, i2) {
            if (i2 == null) {
                i2 = 0
            }
            var i = mU.context.getUniformLocation(this.currentProgram.glProgram, q);
            mU.context.uniform4f(i, i1[i2], i1[i2 + 1], i1[i2 + 2], i1[i2 + 3])
        },
        setGLSLTextureAt: function(q, i2, js) {
            switch (js) {
                case 0:
                    mU.context.activeTexture(33984);
                    break;
                case 1:
                    mU.context.activeTexture(33985);
                    break;
                case 2:
                    mU.context.activeTexture(33986);
                    break;
                case 3:
                    mU.context.activeTexture(33987);
                    break;
                case 4:
                    mU.context.activeTexture(33988);
                    break;
                case 5:
                    mU.context.activeTexture(33989);
                    break;
                case 6:
                    mU.context.activeTexture(33990);
                    break;
                case 7:
                    mU.context.activeTexture(33991);
                    break;
                default:
                    throw new nM("Does not support texture8 or more")
            }
            if (i2 == null) {
                mU.context.bindTexture(3553, null);
                mU.context.bindTexture(34067, null);
                return
            }
            var i = mU.context.getUniformLocation(this.currentProgram.glProgram, q);
            if (n0.__instanceof(i2, eG)) {
                mU.bindTexture(3553, (n0.__cast(i2, eG)).glTexture);
                mU.context.uniform1i(i, js)
            } else {
                if (n0.__instanceof(i2, R)) {
                    mU.bindTexture(3553, (n0.__cast(i2, R)).glTexture);
                    mU.context.uniform1i(i, js)
                } else {
                    if (n0.__instanceof(i2, gD)) {
                        mU.bindTexture(34067, (n0.__cast(i2, gD)).glTexture);
                        mU.context.uniform1i(i, js)
                    } else {
                        throw new nM("Texture of type " + kX.getClassName(i2 == null ? null : n0.getClass(i2)) + " not supported yet")
                    }
                }
            }
            var i1 = this.samplerParameters[js];
            if (i1 != null) {
                this.setTextureParameters(i2, i1.wrap, i1.filter, i1.mipfilter)
            } else {
                this.setTextureParameters(i2, pK.CLAMP, kk.NEAREST, y.MIPNONE)
            }
        },
        setGLSLVertexBufferAt: function(i2, q, q0, qZ) {
            if (q0 == null) {
                q0 = 0
            }
            var i;
            if (this.currentProgram != null && this.currentProgram.glProgram != null) {
                i = mU.context.getAttribLocation(this.currentProgram.glProgram, i2)
            } else {
                i = -1
            }
            if (i == -1) {
                return
            }
            if (q == null) {
                if (i > -1) {
                    mU.context.disableVertexAttribArray(i)
                }
                return
            }
            mU.context.bindBuffer(34962, q.glBuffer);
            var qY = 4;
            var js = 5126;
            var i1 = 4;
            if (qZ == iZ.BYTES_4) {
                qY = 4;
                js = 5126;
                i1 = 4
            } else {
                if (qZ == iZ.FLOAT_1) {
                    qY = 1;
                    js = 5126;
                    i1 = 4
                } else {
                    if (qZ == iZ.FLOAT_2) {
                        qY = 2;
                        js = 5126;
                        i1 = 4
                    } else {
                        if (qZ == iZ.FLOAT_3) {
                            qY = 3;
                            js = 5126;
                            i1 = 4
                        } else {
                            if (qZ == iZ.FLOAT_4) {
                                qY = 4;
                                js = 5126;
                                i1 = 4
                            } else {
                                throw new nM("Buffer format " + kr.string(qZ) + " is not supported")
                            }
                        }
                    }
                }
            }
            mU.context.enableVertexAttribArray(i);
            mU.context.vertexAttribPointer(i, qY, js, false, q.data32PerVertex * i1, q0 * i1)
        },
        setProgram: function(i) {
            var q = null;
            if (i != null) {
                q = i.glProgram
            }
            mU.context.useProgram(q);
            this.currentProgram = i
        },
        setProgramConstantsFromByteArray: function(i2, i1, q0, qZ, q) {
            qZ.position = q;
            var q1 = 0;
            while (q1 < q0) {
                var qY = q1++;
                var js = this.__getUniformLocationNameFromAgalRegisterIndex(i2, i1 + qY);
                this.setGLSLProgramConstantsFromByteArray(js, qZ)
            }
        },
        setProgramConstantsFromMatrix: function(i1, i, q, i2) {
            if (i2 == null) {
                i2 = false
            }
            var js = q.rawData;
            if (i2) {
                this.setProgramConstantsFromVector(i1, i, [js.data[0], js.data[4], js.data[8], js.data[12]], 1);
                this.setProgramConstantsFromVector(i1, i + 1, [js.data[1], js.data[5], js.data[9], js.data[13]], 1);
                this.setProgramConstantsFromVector(i1, i + 2, [js.data[2], js.data[6], js.data[10], js.data[14]], 1);
                this.setProgramConstantsFromVector(i1, i + 3, [js.data[3], js.data[7], js.data[11], js.data[15]], 1)
            } else {
                this.setProgramConstantsFromVector(i1, i, [js.data[0], js.data[1], js.data[2], js.data[3]], 1);
                this.setProgramConstantsFromVector(i1, i + 1, [js.data[4], js.data[5], js.data[6], js.data[7]], 1);
                this.setProgramConstantsFromVector(i1, i + 2, [js.data[8], js.data[9], js.data[10], js.data[11]], 1);
                this.setProgramConstantsFromVector(i1, i + 3, [js.data[12], js.data[13], js.data[14], js.data[15]], 1)
            }
        },
        setProgramConstantsFromVector: function(i2, i1, qZ, q0) {
            if (q0 == null) {
                q0 = 1
            }
            var q1 = 0;
            while (q1 < q0) {
                var qY = q1++;
                var q = qY * 4;
                var js = this.__getUniformLocationNameFromAgalRegisterIndex(i2, i1 + qY);
                this.setGLSLProgramConstantsFromVector4(js, qZ, q)
            }
        },
        setRenderMethod: function(i) {
            this.ogl.set_render(function(q) {
                i(null)
            })
        },
        setRenderToBackBuffer: function() {
            mU.context.disable(2929);
            mU.context.disable(2960);
            mU.context.disable(3089);
            mU.context.bindFramebuffer(36160, null);
            if (this.framebuffer != null) {
                mU.context.bindFramebuffer(36160, null)
            }
            if (this.renderbuffer != null) {
                mU.context.bindRenderbuffer(36161, null)
            }
            this.renderToTexture = false;
            this.updateBackBufferViewPort();
            this.updateScissorRectangle();
            this.updateDepthAndStencilState()
        },
        setRenderToTexture: function(q, i1, i, i2) {
            if (i2 == null) {
                i2 = 0
            }
            if (i == null) {
                i = 0
            }
            if (i1 == null) {
                i1 = false
            }
            if (this.framebuffer == null) {
                this.framebuffer = mU.context.createFramebuffer()
            }
            mU.context.bindFramebuffer(36160, this.framebuffer);
            if (this.renderbuffer == null) {
                this.renderbuffer = mU.context.createRenderbuffer()
            }
            mU.context.bindRenderbuffer(36161, this.renderbuffer);
            if (i1) {
                mU.context.renderbufferStorage(36161, 34041, q.width, q.height)
            }
            mU.context.framebufferTexture2D(36160, 36064, 3553, q.glTexture, 0);
            mU.context.renderbufferStorage(36161, 34041, q.width, q.height);
            mU.context.framebufferRenderbuffer(36160, 33306, 36161, this.renderbuffer);
            if (i1) {
                mU.context.enable(2929);
                mU.context.enable(2960)
            }
            mU.context.bindTexture(3553, q.glTexture);
            mU.context.texImage2D(3553, 0, 6408, q.width, q.height, 0, 6408, 5121, null);
            mU.context.texParameteri(3553, 10240, 9729);
            mU.context.texParameteri(3553, 10241, 9985);
            mU.context.viewport(0, 0, q.width, q.height);
            this.renderToTexture = true;
            this.rttDepthAndStencil = i1;
            this.rttWidth = q.width;
            this.rttHeight = q.height;
            this.updateScissorRectangle();
            this.updateDepthAndStencilState()
        },
        setSamplerStateAt: function(i, i1, q, i2) {
            if (0 <= i && i < l5.MAX_SAMPLERS) {
                this.samplerParameters[i].wrap = i1;
                this.samplerParameters[i].filter = q;
                this.samplerParameters[i].mipfilter = i2
            } else {
                throw new nM("Sampler is out of bounds.")
            }
        },
        setScissorRectangle: function(i) {
            this.scissorRectangle = i;
            if (i == null) {
                mU.context.disable(3089);
                return
            }
            mU.context.enable(3089);
            this.updateScissorRectangle()
        },
        updateScissorRectangle: function() {
            if (this.scissorRectangle == null) {
                return
            }
            var i;
            if (this.renderToTexture) {
                i = this.rttHeight
            } else {
                i = this.scrollRect.height | 0
            }
            mU.context.scissor(this.scissorRectangle.x | 0, i - (this.scissorRectangle.y | 0) - (this.scissorRectangle.height | 0) | 0, this.scissorRectangle.width | 0, this.scissorRectangle.height | 0)
        },
        setStencilActions: function(i, js, i1, q, i2) {
            this.stencilCompareMode = js;
            mU.context.stencilOp(i1, q, i2);
            mU.context.stencilFunc(this.stencilCompareMode, this.stencilRef, this.stencilReadMask)
        },
        setStencilReferenceValue: function(i1, q, i) {
            if (i == null) {
                i = 255
            }
            if (q == null) {
                q = 255
            }
            this.stencilReadMask = q;
            this.stencilRef = i1;
            mU.context.stencilFunc(this.stencilCompareMode, this.stencilRef, this.stencilReadMask);
            mU.context.stencilMask(i)
        },
        setTextureAt: function(q, i1) {
            var i = "fs" + q;
            this.setGLSLTextureAt(i, i1, q)
        },
        setTextureParameters: function(qY, js, i2, qZ) {
            if (!l5.anisotropySupportTested) {
                var i1 = mU.context.getExtension("EXT_texture_filter_anisotropic");
                if (i1 == null || ar.field(i1, "MAX_TEXTURE_MAX_ANISOTROPY_EXT") == null) {
                    i1 = mU.context.getExtension("MOZ_EXT_texture_filter_anisotropic")
                }
                if (i1 == null || ar.field(i1, "MAX_TEXTURE_MAX_ANISOTROPY_EXT") == null) {
                    i1 = mU.context.getExtension("WEBKIT_EXT_texture_filter_anisotropic")
                }
                l5.supportsAnisotropy = i1 != null;
                if (l5.supportsAnisotropy) {
                    l5.maxSupportedAnisotropy = mU.getParameter(i1.MAX_TEXTURE_MAX_ANISOTROPY_EXT);
                    mU.context.texParameteri(3553, l5.TEXTURE_MAX_ANISOTROPY_EXT, l5.maxSupportedAnisotropy)
                }
                l5.anisotropySupportTested = true
            }
            if (n0.__instanceof(qY, eG)) {
                switch (js[1]) {
                    case 0:
                        mU.context.texParameteri(3553, 10242, 33071);
                        mU.context.texParameteri(3553, 10243, 33071);
                        break;
                    case 1:
                        mU.context.texParameteri(3553, 10242, 10497);
                        mU.context.texParameteri(3553, 10243, 10497);
                        break
                }
                switch (i2[1]) {
                    case 4:
                        mU.context.texParameteri(3553, 10240, 9729);
                        if (l5.supportsAnisotropy) {
                            mU.context.texParameterf(3553, l5.TEXTURE_MAX_ANISOTROPY_EXT, 1)
                        }
                        break;
                    case 5:
                        mU.context.texParameteri(3553, 10240, 9728);
                        if (l5.supportsAnisotropy) {
                            mU.context.texParameterf(3553, l5.TEXTURE_MAX_ANISOTROPY_EXT, 1)
                        }
                        break;
                    case 0:
                        if (l5.supportsAnisotropy) {
                            mU.texParameterf(3553, l5.TEXTURE_MAX_ANISOTROPY_EXT, fq.gt(2, l5.maxSupportedAnisotropy) ? fq.toFloat(l5.maxSupportedAnisotropy) : 2)
                        }
                        break;
                    case 1:
                        if (l5.supportsAnisotropy) {
                            mU.texParameterf(3553, l5.TEXTURE_MAX_ANISOTROPY_EXT, fq.gt(4, l5.maxSupportedAnisotropy) ? fq.toFloat(l5.maxSupportedAnisotropy) : 4)
                        }
                        break;
                    case 2:
                        if (l5.supportsAnisotropy) {
                            mU.texParameterf(3553, l5.TEXTURE_MAX_ANISOTROPY_EXT, fq.gt(8, l5.maxSupportedAnisotropy) ? fq.toFloat(l5.maxSupportedAnisotropy) : 8)
                        }
                        break;
                    case 3:
                        if (l5.supportsAnisotropy) {
                            mU.texParameterf(3553, l5.TEXTURE_MAX_ANISOTROPY_EXT, fq.gt(16, l5.maxSupportedAnisotropy) ? fq.toFloat(l5.maxSupportedAnisotropy) : 16)
                        }
                        break
                }
                switch (qZ[1]) {
                    case 0:
                        mU.context.texParameteri(3553, 10241, 9987);
                        break;
                    case 1:
                        mU.context.texParameteri(3553, 10241, 9984);
                        break;
                    case 2:
                        mU.context.texParameteri(3553, 10241, i2 == kk.NEAREST ? 9728 : 9729);
                        break
                }
                var q = qY;
                if (qZ != y.MIPNONE && !q.mipmapsGenerated) {
                    mU.context.generateMipmap(3553);
                    q.mipmapsGenerated = true
                }
            } else {
                if (n0.__instanceof(qY, R)) {
                    mU.context.texParameteri(3553, 10242, 33071);
                    mU.context.texParameteri(3553, 10243, 33071);
                    switch (i2[1]) {
                        case 4:
                            mU.context.texParameteri(3553, 10240, 9729);
                            if (l5.supportsAnisotropy) {
                                mU.context.texParameterf(3553, l5.TEXTURE_MAX_ANISOTROPY_EXT, 1)
                            }
                            break;
                        case 5:
                            mU.context.texParameteri(3553, 10240, 9728);
                            if (l5.supportsAnisotropy) {
                                mU.context.texParameterf(3553, l5.TEXTURE_MAX_ANISOTROPY_EXT, 1)
                            }
                            break;
                        case 0:
                            if (l5.supportsAnisotropy) {
                                mU.texParameterf(3553, l5.TEXTURE_MAX_ANISOTROPY_EXT, fq.gt(2, l5.maxSupportedAnisotropy) ? fq.toFloat(l5.maxSupportedAnisotropy) : 2)
                            }
                            break;
                        case 1:
                            if (l5.supportsAnisotropy) {
                                mU.texParameterf(3553, l5.TEXTURE_MAX_ANISOTROPY_EXT, fq.gt(4, l5.maxSupportedAnisotropy) ? fq.toFloat(l5.maxSupportedAnisotropy) : 4)
                            }
                            break;
                        case 2:
                            if (l5.supportsAnisotropy) {
                                mU.texParameterf(3553, l5.TEXTURE_MAX_ANISOTROPY_EXT, fq.gt(8, l5.maxSupportedAnisotropy) ? fq.toFloat(l5.maxSupportedAnisotropy) : 8)
                            }
                            break;
                        case 3:
                            if (l5.supportsAnisotropy) {
                                mU.texParameterf(3553, l5.TEXTURE_MAX_ANISOTROPY_EXT, fq.gt(16, l5.maxSupportedAnisotropy) ? fq.toFloat(l5.maxSupportedAnisotropy) : 16)
                            }
                            break
                    }
                    mU.context.texParameteri(3553, 10241, i2 == kk.NEAREST ? 9728 : 9729)
                } else {
                    if (n0.__instanceof(qY, gD)) {
                        switch (js[1]) {
                            case 0:
                                mU.context.texParameteri(34067, 10242, 33071);
                                mU.context.texParameteri(34067, 10243, 33071);
                                break;
                            case 1:
                                mU.context.texParameteri(34067, 10242, 10497);
                                mU.context.texParameteri(34067, 10243, 10497);
                                break
                        }
                        switch (i2[1]) {
                            case 4:
                                mU.context.texParameteri(34067, 10240, 9729);
                                if (l5.supportsAnisotropy) {
                                    mU.context.texParameterf(34067, l5.TEXTURE_MAX_ANISOTROPY_EXT, 1)
                                }
                                break;
                            case 5:
                                mU.context.texParameteri(34067, 10240, 9728);
                                if (l5.supportsAnisotropy) {
                                    mU.context.texParameterf(34067, l5.TEXTURE_MAX_ANISOTROPY_EXT, 1)
                                }
                                break;
                            case 0:
                                if (l5.supportsAnisotropy) {
                                    mU.texParameterf(34067, l5.TEXTURE_MAX_ANISOTROPY_EXT, fq.gt(2, l5.maxSupportedAnisotropy) ? fq.toFloat(l5.maxSupportedAnisotropy) : 2)
                                }
                                break;
                            case 1:
                                if (l5.supportsAnisotropy) {
                                    mU.texParameterf(34067, l5.TEXTURE_MAX_ANISOTROPY_EXT, fq.gt(4, l5.maxSupportedAnisotropy) ? fq.toFloat(l5.maxSupportedAnisotropy) : 4)
                                }
                                break;
                            case 2:
                                if (l5.supportsAnisotropy) {
                                    mU.texParameterf(34067, l5.TEXTURE_MAX_ANISOTROPY_EXT, fq.gt(8, l5.maxSupportedAnisotropy) ? fq.toFloat(l5.maxSupportedAnisotropy) : 8)
                                }
                                break;
                            case 3:
                                if (l5.supportsAnisotropy) {
                                    mU.texParameterf(34067, l5.TEXTURE_MAX_ANISOTROPY_EXT, fq.gt(16, l5.maxSupportedAnisotropy) ? fq.toFloat(l5.maxSupportedAnisotropy) : 16)
                                }
                                break
                        }
                        switch (qZ[1]) {
                            case 0:
                                mU.context.texParameteri(34067, 10241, 9987);
                                break;
                            case 1:
                                mU.context.texParameteri(34067, 10241, 9984);
                                break;
                            case 2:
                                mU.context.texParameteri(34067, 10241, i2 == kk.NEAREST ? 9728 : 9729);
                                break
                        }
                        var i = qY;
                        if (qZ != y.MIPNONE && !i.mipmapsGenerated) {
                            mU.context.generateMipmap(34067);
                            i.mipmapsGenerated = true
                        }
                    } else {
                        throw new nM("Texture of type " + kX.getClassName(qY == null ? null : n0.getClass(qY)) + " not supported yet")
                    }
                }
            }
        },
        setVertexBufferAt: function(q, i, js, i2) {
            if (js == null) {
                js = 0
            }
            var i1 = "va" + q;
            this.setGLSLVertexBufferAt(i1, i, js, i2)
        },
        __getUniformLocationNameFromAgalRegisterIndex: function(q, i) {
            if (q == qM.VERTEX) {
                return "vc" + i
            } else {
                if (q == qM.FRAGMENT) {
                    return "fc" + i
                }
            }
            throw new nM("Program Type " + kr.string(q) + " not supported")
        },
        __updateBlendStatus: function() {
            if (this.blendEnabled) {
                mU.context.enable(3042);
                mU.context.blendEquation(32774);
                mU.context.blendFunc(this.blendSourceFactor, this.blendDestinationFactor)
            } else {
                mU.context.disable(3042)
            }
        },
        __class__: l5
    };
    var eX = function() {};
    nt["openfl.display3D._Context3D.SamplerState"] = eX;
    eX.__name__ = ["openfl", "display3D", "_Context3D", "SamplerState"];
    eX.prototype = {
        wrap: null,
        filter: null,
        mipfilter: null,
        __class__: eX
    };
    var dc = nt["openfl.display3D.Context3DBufferUsage"] = {
        __ename__: ["openfl", "display3D", "Context3DBufferUsage"],
        __constructs__: ["STATIC_DRAW", "DYNAMIC_DRAW"]
    };
    dc.STATIC_DRAW = ["STATIC_DRAW", 0];
    dc.STATIC_DRAW.toString = ea;
    dc.STATIC_DRAW.__enum__ = dc;
    dc.DYNAMIC_DRAW = ["DYNAMIC_DRAW", 1];
    dc.DYNAMIC_DRAW.toString = ea;
    dc.DYNAMIC_DRAW.__enum__ = dc;
    var ir = function() {};
    nt["openfl.display3D.Context3DClearMask"] = ir;
    ir.__name__ = ["openfl", "display3D", "Context3DClearMask"];
    var lH = {};
    nt["openfl.display3D._Context3DCompareMode.Context3DCompareMode_Impl_"] = lH;
    lH.__name__ = ["openfl", "display3D", "_Context3DCompareMode", "Context3DCompareMode_Impl_"];
    lH._new = function(i) {
        return i
    };
    lH.fromInt = function(i) {
        return i
    };
    lH.toInt = function(i) {
        return i
    };
    var y = nt["openfl.display3D.Context3DMipFilter"] = {
        __ename__: ["openfl", "display3D", "Context3DMipFilter"],
        __constructs__: ["MIPLINEAR", "MIPNEAREST", "MIPNONE"]
    };
    y.MIPLINEAR = ["MIPLINEAR", 0];
    y.MIPLINEAR.toString = ea;
    y.MIPLINEAR.__enum__ = y;
    y.MIPNEAREST = ["MIPNEAREST", 1];
    y.MIPNEAREST.toString = ea;
    y.MIPNEAREST.__enum__ = y;
    y.MIPNONE = ["MIPNONE", 2];
    y.MIPNONE.toString = ea;
    y.MIPNONE.__enum__ = y;
    var qM = nt["openfl.display3D.Context3DProgramType"] = {
        __ename__: ["openfl", "display3D", "Context3DProgramType"],
        __constructs__: ["VERTEX", "FRAGMENT"]
    };
    qM.VERTEX = ["VERTEX", 0];
    qM.VERTEX.toString = ea;
    qM.VERTEX.__enum__ = qM;
    qM.FRAGMENT = ["FRAGMENT", 1];
    qM.FRAGMENT.toString = ea;
    qM.FRAGMENT.__enum__ = qM;
    var kk = nt["openfl.display3D.Context3DTextureFilter"] = {
        __ename__: ["openfl", "display3D", "Context3DTextureFilter"],
        __constructs__: ["ANISOTROPIC2X", "ANISOTROPIC4X", "ANISOTROPIC8X", "ANISOTROPIC16X", "LINEAR", "NEAREST"]
    };
    kk.ANISOTROPIC2X = ["ANISOTROPIC2X", 0];
    kk.ANISOTROPIC2X.toString = ea;
    kk.ANISOTROPIC2X.__enum__ = kk;
    kk.ANISOTROPIC4X = ["ANISOTROPIC4X", 1];
    kk.ANISOTROPIC4X.toString = ea;
    kk.ANISOTROPIC4X.__enum__ = kk;
    kk.ANISOTROPIC8X = ["ANISOTROPIC8X", 2];
    kk.ANISOTROPIC8X.toString = ea;
    kk.ANISOTROPIC8X.__enum__ = kk;
    kk.ANISOTROPIC16X = ["ANISOTROPIC16X", 3];
    kk.ANISOTROPIC16X.toString = ea;
    kk.ANISOTROPIC16X.__enum__ = kk;
    kk.LINEAR = ["LINEAR", 4];
    kk.LINEAR.toString = ea;
    kk.LINEAR.__enum__ = kk;
    kk.NEAREST = ["NEAREST", 5];
    kk.NEAREST.toString = ea;
    kk.NEAREST.__enum__ = kk;
    var nc = nt["openfl.display3D.Context3DTextureFormat"] = {
        __ename__: ["openfl", "display3D", "Context3DTextureFormat"],
        __constructs__: ["BGRA", "COMPRESSED", "COMPRESSED_ALPHA"]
    };
    nc.BGRA = ["BGRA", 0];
    nc.BGRA.toString = ea;
    nc.BGRA.__enum__ = nc;
    nc.COMPRESSED = ["COMPRESSED", 1];
    nc.COMPRESSED.toString = ea;
    nc.COMPRESSED.__enum__ = nc;
    nc.COMPRESSED_ALPHA = ["COMPRESSED_ALPHA", 2];
    nc.COMPRESSED_ALPHA.toString = ea;
    nc.COMPRESSED_ALPHA.__enum__ = nc;
    var eL = {};
    nt["openfl.display3D._Context3DTriangleFace.Context3DTriangleFace_Impl_"] = eL;
    eL.__name__ = ["openfl", "display3D", "_Context3DTriangleFace", "Context3DTriangleFace_Impl_"];
    eL._new = function(i) {
        return i
    };
    eL.fromInt = function(i) {
        return i
    };
    eL.toInt = function(i) {
        return i
    };
    var iZ = nt["openfl.display3D.Context3DVertexBufferFormat"] = {
        __ename__: ["openfl", "display3D", "Context3DVertexBufferFormat"],
        __constructs__: ["BYTES_4", "FLOAT_1", "FLOAT_2", "FLOAT_3", "FLOAT_4"]
    };
    iZ.BYTES_4 = ["BYTES_4", 0];
    iZ.BYTES_4.toString = ea;
    iZ.BYTES_4.__enum__ = iZ;
    iZ.FLOAT_1 = ["FLOAT_1", 1];
    iZ.FLOAT_1.toString = ea;
    iZ.FLOAT_1.__enum__ = iZ;
    iZ.FLOAT_2 = ["FLOAT_2", 2];
    iZ.FLOAT_2.toString = ea;
    iZ.FLOAT_2.__enum__ = iZ;
    iZ.FLOAT_3 = ["FLOAT_3", 3];
    iZ.FLOAT_3.toString = ea;
    iZ.FLOAT_3.__enum__ = iZ;
    iZ.FLOAT_4 = ["FLOAT_4", 4];
    iZ.FLOAT_4.toString = ea;
    iZ.FLOAT_4.__enum__ = iZ;
    var pK = nt["openfl.display3D.Context3DWrapMode"] = {
        __ename__: ["openfl", "display3D", "Context3DWrapMode"],
        __constructs__: ["CLAMP", "REPEAT"]
    };
    pK.CLAMP = ["CLAMP", 0];
    pK.CLAMP.toString = ea;
    pK.CLAMP.__enum__ = pK;
    pK.REPEAT = ["REPEAT", 1];
    pK.REPEAT.toString = ea;
    pK.REPEAT.__enum__ = pK;
    var mk = function(q, i, i2, i1) {
        this.context = q;
        this.glBuffer = i;
        this.numIndices = i2;
        this.bufferUsage = i1
    };
    nt["openfl.display3D.IndexBuffer3D"] = mk;
    mk.__name__ = ["openfl", "display3D", "IndexBuffer3D"];
    mk.prototype = {
        context: null,
        glBuffer: null,
        numIndices: null,
        bufferUsage: null,
        dispose: function() {
            this.context.__deleteIndexBuffer(this)
        },
        uploadFromByteArray: function(q, q4, q2, q1) {
            var js = 2;
            mU.context.bindBuffer(34963, this.glBuffer);
            var i1 = q1 * js;
            var qY = q4 + q2 * js;
            var q3;
            var q0;
            if (i1 != null) {
                q0 = new Int16Array(i1)
            } else {
                q0 = null
            }
            q3 = q0;
            q.position = qY;
            var qZ = 0;
            while (q.position < i1 + qY) {
                var i2 = q.readUnsignedByte();
                q3[qZ] = i2;
                qZ++
            }
            mU.context.bufferData(34963, q3, this.bufferUsage)
        },
        uploadFromVector: function(qZ, q, js) {
            mU.context.bindBuffer(34963, this.glBuffer);
            var q1;
            var i1;
            if (js != null) {
                i1 = new Int16Array(js)
            } else {
                i1 = null
            }
            q1 = i1;
            var qY = q;
            var q0 = q + js;
            while (qY < q0) {
                var i2 = qY++;
                q1[i2] = qZ.data[i2]
            }
            mU.context.bufferData(34963, q1, this.bufferUsage)
        },
        uploadFromInt16Array: function(i) {
            mU.context.bindBuffer(34963, this.glBuffer);
            mU.context.bufferData(34963, i, this.bufferUsage)
        },
        __class__: mk
    };
    var fb = function(q, i) {
        this.context = q;
        this.glProgram = i
    };
    nt["openfl.display3D.Program3D"] = fb;
    fb.__name__ = ["openfl", "display3D", "Program3D"];
    fb.prototype = {
        context: null,
        glProgram: null,
        dispose: function() {
            this.context.__deleteProgram(this)
        },
        upload: function(i1, q) {
            mU.context.attachShader(this.glProgram, i1);
            mU.context.attachShader(this.glProgram, q);
            mU.context.linkProgram(this.glProgram);
            if (mU.context.getProgramParameter(this.glProgram, 35714) == 0) {
                var i = mU.context.getProgramInfoLog(this.glProgram);
                if (i != "") {
                    throw new nM(i)
                }
            }
        },
        __class__: fb
    };
    var lM = function(i1, q, js, i, i2) {
        this.context = i1;
        this.glBuffer = q;
        this.numVertices = js;
        this.data32PerVertex = i;
        this.bufferUsage = i2
    };
    nt["openfl.display3D.VertexBuffer3D"] = lM;
    lM.__name__ = ["openfl", "display3D", "VertexBuffer3D"];
    lM.prototype = {
        context: null,
        data32PerVertex: null,
        glBuffer: null,
        numVertices: null,
        bufferUsage: null,
        dispose: function() {
            this.context.__deleteVertexBuffer(this)
        },
        uploadFromByteArray: function(q, q3, q1, q0) {
            var q2 = this.data32PerVertex * 4;
            mU.context.bindBuffer(34962, this.glBuffer);
            var i1 = q0 * q2;
            var js = q3 + q1 * q2;
            var q4;
            var qZ;
            if (i1 != null) {
                qZ = new Float32Array(i1)
            } else {
                qZ = null
            }
            q4 = qZ;
            q.position = js;
            var qY = 0;
            while (q.position < i1 + js) {
                var i2 = q.readUnsignedByte();
                q4[qY] = i2;
                qY++
            }
            mU.context.bufferData(34962, q4, this.bufferUsage)
        },
        uploadFromFloat32Array: function(i) {
            mU.context.bindBuffer(34962, this.glBuffer);
            mU.context.bufferData(34962, i, this.bufferUsage)
        },
        uploadFromVector: function(js, q2, q0) {
            var q3 = this.data32PerVertex * 4;
            mU.context.bindBuffer(34962, this.glBuffer);
            var q = q0 * this.data32PerVertex;
            var i1 = q2;
            var q4;
            var qZ;
            if (q != null) {
                qZ = new Float32Array(q)
            } else {
                qZ = null
            }
            q4 = qZ;
            var q1 = q2;
            var qY = q2 + q;
            while (q1 < qY) {
                var i2 = q1++;
                q4[i2] = js.data[i2]
            }
            mU.context.bufferData(34962, q4, this.bufferUsage);
            q4 = null
        },
        __class__: lM
    };
    var lW = function(i1, q, i2, i) {
        if (i == null) {
            i = 0
        }
        if (i2 == null) {
            i2 = 0
        }
        lR.call(this);
        this.context = i1;
        this.width = i2;
        this.height = i;
        this.glTexture = q
    };
    nt["openfl.display3D.textures.TextureBase"] = lW;
    lW.__name__ = ["openfl", "display3D", "textures", "TextureBase"];
    lW.__super__ = lR;
    lW.prototype = lP(lR.prototype, {
        context: null,
        height: null,
        frameBuffer: null,
        glTexture: null,
        width: null,
        dispose: function() {
            this.context.__deleteTexture(this)
        },
        __class__: lW
    });
    var gD = function(js, q, i2) {
        lW.call(this, js, q, i2, i2);
        this.size = i2;
        this.mipmapsGenerated = false;
        this._textures = [];
        var qY = 0;
        while (qY < 6) {
            var i1 = qY++;
            this._textures[i1] = mU.context.createTexture()
        }
    };
    nt["openfl.display3D.textures.CubeTexture"] = gD;
    gD.__name__ = ["openfl", "display3D", "textures", "CubeTexture"];
    gD.__super__ = lW;
    gD.prototype = lP(lW.prototype, {
        size: null,
        _textures: null,
        mipmapsGenerated: null,
        glTextureAt: function(i) {
            return this._textures[i]
        },
        uploadCompressedTextureFromByteArray: function(i1, i, q) {
            if (q == null) {
                q = false
            }
        },
        uploadFromBitmapData: function(i2, q, i) {
            if (i == null) {
                i = 0
            }
            var i1 = i2.image.get_data();
            mU.context.bindTexture(34067, this.glTexture);
            switch (q) {
                case 0:
                    mU.context.texImage2D(34069, i, 6408, i2.width, i2.height, 0, 6408, 5121, i1);
                    break;
                case 1:
                    mU.context.texImage2D(34070, i, 6408, i2.width, i2.height, 0, 6408, 5121, i1);
                    break;
                case 2:
                    mU.context.texImage2D(34071, i, 6408, i2.width, i2.height, 0, 6408, 5121, i1);
                    break;
                case 3:
                    mU.context.texImage2D(34072, i, 6408, i2.width, i2.height, 0, 6408, 5121, i1);
                    break;
                case 4:
                    mU.context.texImage2D(34073, i, 6408, i2.width, i2.height, 0, 6408, 5121, i1);
                    break;
                case 5:
                    mU.context.texImage2D(34074, i, 6408, i2.width, i2.height, 0, 6408, 5121, i1);
                    break;
                default:
                    throw new nM("unknown side type")
            }
            mU.context.bindTexture(34067, null)
        },
        uploadFromByteArray: function(i2, i, i1, q) {
            if (q == null) {
                q = 0
            }
        },
        __class__: gD
    });
    var R = function(i1, q, js, i2, i) {
        this.optimizeForRenderToTexture = js;
        if (this.optimizeForRenderToTexture == null) {
            this.optimizeForRenderToTexture = false
        }
        lW.call(this, i1, q, i2, i)
    };
    nt["openfl.display3D.textures.RectangleTexture"] = R;
    R.__name__ = ["openfl", "display3D", "textures", "RectangleTexture"];
    R.__super__ = lW;
    R.prototype = lP(lW.prototype, {
        optimizeForRenderToTexture: null,
        uploadFromBitmapData: function(q, i) {
            if (i == null) {
                i = 0
            }
            var i1 = op.fromArrayBuffer(q.image.get_data().buffer);
            this.width = q.width;
            this.height = q.height;
            this.uploadFromByteArray(i1, 0)
        },
        uploadFromByteArray: function(qZ, q) {
            mU.context.bindTexture(3553, this.glTexture);
            if (this.optimizeForRenderToTexture) {
                mU.context.pixelStorei(37440, 1)
            }
            mU.context.texParameteri(3553, 10240, 9728);
            mU.context.texParameteri(3553, 10241, 9728);
            mU.context.texParameteri(3553, 10242, 33071);
            mU.context.texParameteri(3553, 10243, 33071);
            var qY;
            var js = op.get_length(qZ);
            var i1;
            if (js != null) {
                i1 = new qw(js)
            } else {
                i1 = null
            }
            qY = i1;
            qZ.position = q;
            var i2 = 0;
            while (qZ.position < op.get_length(qZ)) {
                var q0 = qZ.readUnsignedByte();
                qY[i2] = q0;
                i2++
            }
            mU.context.texImage2D(3553, 0, 6408, this.width, this.height, 0, 6408, 5121, qY);
            mU.context.bindTexture(3553, null)
        },
        __class__: R
    });
    var eG = function(i1, q, js, i2, i) {
        this.optimizeForRenderToTexture = js;
        this.mipmapsGenerated = false;
        if (eG.internalFormat == -1) {
            eG.internalFormat = 6408
        }
        if (this.optimizeForRenderToTexture == null) {
            this.optimizeForRenderToTexture = false
        }
        lW.call(this, i1, q, i2, i)
    };
    nt["openfl.display3D.textures.Texture"] = eG;
    eG.__name__ = ["openfl", "display3D", "textures", "Texture"];
    eG.__super__ = lW;
    eG.prototype = lP(lW.prototype, {
        optimizeForRenderToTexture: null,
        mipmapsGenerated: null,
        uploadCompressedTextureFromByteArray: function(i1, i, q) {
            if (q == null) {
                q = false
            }
        },
        uploadFromBitmapData: function(q, i) {
            if (i == null) {
                i = 0
            }
            var i1 = q.image;
            if (!i1.get_premultiplied() && i1.get_transparent()) {
                i1 = i1.clone();
                i1.set_premultiplied(true)
            }
            this.width = i1.width;
            this.height = i1.height;
            this.uploadFromUInt8Array(i1.get_data(), i)
        },
        uploadFromByteArray: function(q0, q, i2) {
            if (i2 == null) {
                i2 = 0
            }
            var qZ;
            var qY = op.get_length(q0);
            var i1;
            if (qY != null) {
                i1 = new qw(qY)
            } else {
                i1 = null
            }
            qZ = i1;
            q0.position = q;
            var js = 0;
            while (q0.position < op.get_length(q0)) {
                var q1 = q0.readUnsignedByte();
                qZ[js] = q1;
                js++
            }
            this.uploadFromUInt8Array(qZ, i2)
        },
        uploadFromUInt8Array: function(q, i) {
            if (i == null) {
                i = 0
            }
            mU.context.bindTexture(3553, this.glTexture);
            if (this.optimizeForRenderToTexture) {
                mU.context.pixelStorei(37440, 1);
                mU.context.texParameteri(3553, 10240, 9728);
                mU.context.texParameteri(3553, 10241, 9728);
                mU.context.texParameteri(3553, 10242, 33071);
                mU.context.texParameteri(3553, 10243, 33071)
            }
            mU.context.texImage2D(3553, i, eG.internalFormat, this.width, this.height, 0, eG.internalFormat, 5121, q);
            mU.context.bindTexture(3553, null)
        },
        __class__: eG
    });
    var lY = function(i, q) {
        if (q == null) {
            q = 0
        }
        if (i == null) {
            i = ""
        }
        this.message = i;
        this.errorID = q;
        this.name = "Error"
    };
    nt["openfl.errors.Error"] = lY;
    lY.__name__ = ["openfl", "errors", "Error"];
    lY.prototype = {
        errorID: null,
        message: null,
        name: null,
        getStackTrace: function() {
            return lF.toString(lF.exceptionStack())
        },
        toString: function() {
            if (this.message != null) {
                return this.message
            } else {
                return "Error"
            }
        },
        __class__: lY
    };
    var pZ = function(i) {
        if (i == null) {
            i = ""
        }
        lY.call(this, i);
        this.name = "ArgumentError"
    };
    nt["openfl.errors.ArgumentError"] = pZ;
    pZ.__name__ = ["openfl", "errors", "ArgumentError"];
    pZ.__super__ = lY;
    pZ.prototype = lP(lY.prototype, {
        __class__: pZ
    });
    var j4 = function(i) {
        if (i == null) {
            i = ""
        }
        lY.call(this, i);
        this.name = "IOError"
    };
    nt["openfl.errors.IOError"] = j4;
    j4.__name__ = ["openfl", "errors", "IOError"];
    j4.__super__ = lY;
    j4.prototype = lP(lY.prototype, {
        __class__: j4
    });
    var jK = function() {
        j4.call(this, "End of file was encountered");
        this.name = "EOFError";
        this.errorID = 2030
    };
    nt["openfl.errors.EOFError"] = jK;
    jK.__name__ = ["openfl", "errors", "EOFError"];
    jK.__super__ = j4;
    jK.prototype = lP(j4.prototype, {
        __class__: jK
    });
    var dN = function(i) {
        if (i == null) {
            i = ""
        }
        lY.call(this, i, 0);
        this.name = "RangeError"
    };
    nt["openfl.errors.RangeError"] = dN;
    dN.__name__ = ["openfl", "errors", "RangeError"];
    dN.__super__ = lY;
    dN.prototype = lP(lY.prototype, {
        __class__: dN
    });
    var qk = function(i) {
        if (i == null) {
            i = ""
        }
        lY.call(this, i, 0);
        this.name = "TypeError"
    };
    nt["openfl.errors.TypeError"] = qk;
    qk.__name__ = ["openfl", "errors", "TypeError"];
    qk.__super__ = lY;
    qk.prototype = lP(lY.prototype, {
        __class__: qk
    });
    var qa = function(i2, i1, q, i) {
        if (i == null) {
            i = false
        }
        if (q == null) {
            q = false
        }
        if (i1 == null) {
            i1 = false
        }
        hM.call(this, i2, i1, q);
        this.activating = i
    };
    nt["openfl.events.ActivityEvent"] = qa;
    qa.__name__ = ["openfl", "events", "ActivityEvent"];
    qa.__super__ = hM;
    qa.prototype = lP(hM.prototype, {
        activating: null,
        clone: function() {
            var i = new qa(this.type, this.bubbles, this.cancelable, this.activating);
            i.target = this.target;
            i.currentTarget = this.currentTarget;
            i.eventPhase = this.eventPhase;
            return i
        },
        toString: function() {
            return this.__formatToString("ActivityEvent", ["type", "bubbles", "cancelable", "activating"])
        },
        __class__: qa
    });
    var fi = function(i1, q, i, i2) {
        if (i2 == null) {
            i2 = ""
        }
        if (i == null) {
            i = false
        }
        if (q == null) {
            q = false
        }
        hM.call(this, i1, q, i);
        this.text = i2
    };
    nt["openfl.events.TextEvent"] = fi;
    fi.__name__ = ["openfl", "events", "TextEvent"];
    fi.__super__ = hM;
    fi.prototype = lP(hM.prototype, {
        text: null,
        clone: function() {
            var i = new fi(this.type, this.bubbles, this.cancelable, this.text);
            i.target = this.target;
            i.currentTarget = this.currentTarget;
            i.eventPhase = this.eventPhase;
            return i
        },
        toString: function() {
            return this.__formatToString("TextEvent", ["type", "bubbles", "cancelable", "text"])
        },
        __class__: fi
    });
    var qJ = function(i1, q, i, i2, js) {
        if (js == null) {
            js = 0
        }
        if (i2 == null) {
            i2 = ""
        }
        if (i == null) {
            i = false
        }
        if (q == null) {
            q = false
        }
        fi.call(this, i1, q, i, i2);
        this.errorID = js
    };
    nt["openfl.events.ErrorEvent"] = qJ;
    qJ.__name__ = ["openfl", "events", "ErrorEvent"];
    qJ.__super__ = fi;
    qJ.prototype = lP(fi.prototype, {
        errorID: null,
        clone: function() {
            var i = new qJ(this.type, this.bubbles, this.cancelable, this.text, this.errorID);
            i.target = this.target;
            i.currentTarget = this.currentTarget;
            i.eventPhase = this.eventPhase;
            return i
        },
        toString: function() {
            return this.__formatToString("ErrorEvent", ["type", "bubbles", "cancelable", "text", "errorID"])
        },
        __class__: qJ
    });
    var lD = function(i1, i, q) {
        this.callback = i1;
        this.useCapture = i;
        this.priority = q
    };
    nt["openfl.events._EventDispatcher.Listener"] = lD;
    lD.__name__ = ["openfl", "events", "_EventDispatcher", "Listener"];
    lD.prototype = {
        callback: null,
        priority: null,
        useCapture: null,
        match: function(q, i) {
            return ar.compareMethods(this.callback, q) && this.useCapture == i
        },
        __class__: lD
    };
    var ls = function(i2, q, i, js, i1, qY) {
        if (qY == null) {
            qY = 0
        }
        if (i1 == null) {
            i1 = false
        }
        if (i == null) {
            i = false
        }
        if (q == null) {
            q = false
        }
        hM.call(this, i2, q, i);
        this.keyCode = qY;
        this.shiftKey = i1;
        this.relatedObject = js
    };
    nt["openfl.events.FocusEvent"] = ls;
    ls.__name__ = ["openfl", "events", "FocusEvent"];
    ls.__super__ = hM;
    ls.prototype = lP(hM.prototype, {
        keyCode: null,
        relatedObject: null,
        shiftKey: null,
        clone: function() {
            var i = new ls(this.type, this.bubbles, this.cancelable, this.relatedObject, this.shiftKey, this.keyCode);
            i.target = this.target;
            i.currentTarget = this.currentTarget;
            i.eventPhase = this.eventPhase;
            return i
        },
        toString: function() {
            return this.__formatToString("FocusEvent", ["type", "bubbles", "cancelable", "relatedObject", "shiftKey", "keyCode"])
        },
        __class__: ls
    });
    var f8 = function(js, q, i, i2, i1) {
        if (i1 == null) {
            i1 = false
        }
        if (i2 == null) {
            i2 = false
        }
        if (i == null) {
            i = false
        }
        if (q == null) {
            q = false
        }
        qa.call(this, js, q, i);
        this.fullScreen = i2;
        this.interactive = i1
    };
    nt["openfl.events.FullScreenEvent"] = f8;
    f8.__name__ = ["openfl", "events", "FullScreenEvent"];
    f8.__super__ = qa;
    f8.prototype = lP(qa.prototype, {
        fullScreen: null,
        interactive: null,
        clone: function() {
            var i = new f8(this.type, this.bubbles, this.cancelable, this.fullScreen, this.interactive);
            i.target = this.target;
            i.currentTarget = this.currentTarget;
            i.eventPhase = this.eventPhase;
            return i
        },
        toString: function() {
            return this.__formatToString("FullscreenEvent", ["type", "bubbles", "cancelable", "fullscreen", "interactive"])
        },
        __class__: f8
    });
    var qj = function(i1, q, i, i2) {
        if (i == null) {
            i = false
        }
        if (q == null) {
            q = true
        }
        hM.call(this, i1, q, i);
        this.device = i2
    };
    nt["openfl.events.GameInputEvent"] = qj;
    qj.__name__ = ["openfl", "events", "GameInputEvent"];
    qj.__super__ = hM;
    qj.prototype = lP(hM.prototype, {
        device: null,
        clone: function() {
            var i = new qj(this.type, this.bubbles, this.cancelable, this.device);
            i.target = this.target;
            i.currentTarget = this.currentTarget;
            i.eventPhase = this.eventPhase;
            return i
        },
        toString: function() {
            return this.__formatToString("GameInputEvent", ["type", "bubbles", "cancelable", "device"])
        },
        __class__: qj
    });
    var iT = function(i2, i1, q, i, js) {
        if (js == null) {
            js = false
        }
        if (i == null) {
            i = 0
        }
        if (q == null) {
            q = false
        }
        if (i1 == null) {
            i1 = false
        }
        this.status = i;
        this.redirected = js;
        hM.call(this, i2, i1, q)
    };
    nt["openfl.events.HTTPStatusEvent"] = iT;
    iT.__name__ = ["openfl", "events", "HTTPStatusEvent"];
    iT.__super__ = hM;
    iT.prototype = lP(hM.prototype, {
        redirected: null,
        responseHeaders: null,
        responseURL: null,
        status: null,
        clone: function() {
            var i = new iT(this.type, this.bubbles, null, this.status, this.redirected);
            i.target = this.target;
            i.currentTarget = this.currentTarget;
            i.eventPhase = this.eventPhase;
            return i
        },
        toString: function() {
            return this.__formatToString("HTTPStatusEvent", ["type", "bubbles", "cancelable", "status", "redirected"])
        },
        __class__: iT
    });
    var hx = function(i1, q, i, i2, js) {
        if (js == null) {
            js = 0
        }
        if (i2 == null) {
            i2 = ""
        }
        if (i == null) {
            i = false
        }
        if (q == null) {
            q = true
        }
        qJ.call(this, i1, q, i, i2, js)
    };
    nt["openfl.events.IOErrorEvent"] = hx;
    hx.__name__ = ["openfl", "events", "IOErrorEvent"];
    hx.__super__ = qJ;
    hx.prototype = lP(qJ.prototype, {
        clone: function() {
            var i = new hx(this.type, this.bubbles, this.cancelable, this.text, this.errorID);
            i.target = this.target;
            i.currentTarget = this.currentTarget;
            i.eventPhase = this.eventPhase;
            return i
        },
        toString: function() {
            return this.__formatToString("IOErrorEvent", ["type", "bubbles", "cancelable", "text", "errorID"])
        },
        __class__: hx
    });
    var fa = function(q1, qZ, i, i2, q3, js, q2, i1, q0, qY, q) {
        if (q == null) {
            q = false
        }
        if (qY == null) {
            qY = false
        }
        if (q0 == null) {
            q0 = false
        }
        if (i1 == null) {
            i1 = false
        }
        if (q2 == null) {
            q2 = false
        }
        if (q3 == null) {
            q3 = 0
        }
        if (i2 == null) {
            i2 = 0
        }
        if (i == null) {
            i = false
        }
        if (qZ == null) {
            qZ = false
        }
        hM.call(this, q1, qZ, i);
        this.charCode = i2;
        this.keyCode = q3;
        if (js != null) {
            this.keyLocation = js
        } else {
            this.keyLocation = 0
        }
        this.ctrlKey = q2;
        this.altKey = i1;
        this.shiftKey = q0;
        this.controlKey = qY;
        this.commandKey = q
    };
    nt["openfl.events.KeyboardEvent"] = fa;
    fa.__name__ = ["openfl", "events", "KeyboardEvent"];
    fa.__super__ = hM;
    fa.prototype = lP(hM.prototype, {
        altKey: null,
        charCode: null,
        ctrlKey: null,
        commandKey: null,
        controlKey: null,
        keyCode: null,
        keyLocation: null,
        shiftKey: null,
        clone: function() {
            var i = new fa(this.type, this.bubbles, this.cancelable, this.charCode, this.keyCode, this.keyLocation, this.ctrlKey, this.altKey, this.shiftKey, this.controlKey, this.commandKey);
            i.target = this.target;
            i.currentTarget = this.currentTarget;
            i.eventPhase = this.eventPhase;
            return i
        },
        toString: function() {
            return this.__formatToString("KeyboardEvent", ["type", "bubbles", "cancelable", "charCode", "keyCode", "keyLocation", "ctrlKey", "altKey", "shiftKey"])
        },
        __class__: fa
    });
    var mN = function(q3, q1, i1, qY, js, q0, q, i, q2, q4, q5, i2, qZ) {
        if (qZ == null) {
            qZ = 0
        }
        if (i2 == null) {
            i2 = false
        }
        if (q5 == null) {
            q5 = 0
        }
        if (q4 == null) {
            q4 = false
        }
        if (q2 == null) {
            q2 = false
        }
        if (i == null) {
            i = false
        }
        if (q == null) {
            q = false
        }
        if (js == null) {
            js = 0
        }
        if (qY == null) {
            qY = 0
        }
        if (i1 == null) {
            i1 = false
        }
        if (q1 == null) {
            q1 = true
        }
        hM.call(this, q3, q1, i1);
        this.shiftKey = q2;
        this.altKey = i;
        this.ctrlKey = q;
        this.bubbles = q1;
        this.relatedObject = q0;
        this.delta = q5;
        this.localX = qY;
        this.localY = js;
        this.buttonDown = q4;
        this.commandKey = i2;
        this.clickCount = qZ
    };
    nt["openfl.events.MouseEvent"] = mN;
    mN.__name__ = ["openfl", "events", "MouseEvent"];
    mN.__altKey = null;
    mN.__buttonDown = null;
    mN.__commandKey = null;
    mN.__ctrlKey = null;
    mN.__shiftKey = null;
    mN.__create = function(js, i2, i1, i, q, qZ, q0) {
        if (q0 == null) {
            q0 = 0
        }
        switch (js) {
            case "mouseDown":
                mN.__buttonDown = true;
                break;
            case "mouseUp":
                mN.__buttonDown = false;
                break;
            default:
        }
        var qY = new mN(js, true, false, q.x, q.y, null, mN.__ctrlKey, mN.__altKey, mN.__shiftKey, mN.__buttonDown, q0, mN.__commandKey);
        qY.stageX = i1;
        qY.stageY = i;
        qY.target = qZ;
        return qY
    };
    mN.__super__ = hM;
    mN.prototype = lP(hM.prototype, {
        altKey: null,
        buttonDown: null,
        commandKey: null,
        clickCount: null,
        ctrlKey: null,
        delta: null,
        localX: null,
        localY: null,
        relatedObject: null,
        shiftKey: null,
        stageX: null,
        stageY: null,
        clone: function() {
            var i = new mN(this.type, this.bubbles, this.cancelable, this.localX, this.localY, this.relatedObject, this.ctrlKey, this.altKey, this.shiftKey, this.buttonDown, this.delta, this.commandKey, this.clickCount);
            i.target = this.target;
            i.currentTarget = this.currentTarget;
            i.eventPhase = this.eventPhase;
            return i
        },
        toString: function() {
            return this.__formatToString("MouseEvent", ["type", "bubbles", "cancelable", "localX", "localY", "relatedObject", "ctrlKey", "altKey", "shiftKey", "buttonDown", "delta"])
        },
        updateAfterEvent: function() {},
        __class__: mN
    });
    var kJ = function(i1, q, i, i2) {
        if (i == null) {
            i = false
        }
        if (q == null) {
            q = false
        }
        this.info = i2;
        hM.call(this, i1, q, i)
    };
    nt["openfl.events.NetStatusEvent"] = kJ;
    kJ.__name__ = ["openfl", "events", "NetStatusEvent"];
    kJ.__super__ = hM;
    kJ.prototype = lP(hM.prototype, {
        info: null,
        clone: function() {
            var i = new kJ(this.type, this.bubbles, this.cancelable, this.info);
            i.target = this.target;
            i.currentTarget = this.currentTarget;
            i.eventPhase = this.eventPhase;
            return i
        },
        toString: function() {
            return this.__formatToString("NetStatusEvent", ["type", "bubbles", "cancelable", "info"])
        },
        __class__: kJ
    });
    var l2 = function(i1, q, i, js, i2) {
        if (i2 == null) {
            i2 = 0
        }
        if (js == null) {
            js = 0
        }
        if (i == null) {
            i = false
        }
        if (q == null) {
            q = false
        }
        hM.call(this, i1, q, i);
        this.bytesLoaded = js;
        this.bytesTotal = i2
    };
    nt["openfl.events.ProgressEvent"] = l2;
    l2.__name__ = ["openfl", "events", "ProgressEvent"];
    l2.__super__ = hM;
    l2.prototype = lP(hM.prototype, {
        bytesLoaded: null,
        bytesTotal: null,
        clone: function() {
            var i = new l2(this.type, this.bubbles, this.cancelable, this.bytesLoaded, this.bytesTotal);
            i.target = this.target;
            i.currentTarget = this.currentTarget;
            i.eventPhase = this.eventPhase;
            return i
        },
        toString: function() {
            return this.__formatToString("ProgressEvent", ["type", "bubbles", "cancelable", "bytesLoaded", "bytesTotal"])
        },
        __class__: l2
    });
    var n9 = function(i1, q, i, i2, js) {
        if (js == null) {
            js = 0
        }
        if (i2 == null) {
            i2 = ""
        }
        if (i == null) {
            i = false
        }
        if (q == null) {
            q = false
        }
        qJ.call(this, i1, q, i, i2, js)
    };
    nt["openfl.events.SecurityErrorEvent"] = n9;
    n9.__name__ = ["openfl", "events", "SecurityErrorEvent"];
    n9.__super__ = qJ;
    n9.prototype = lP(qJ.prototype, {
        clone: function() {
            var i = new n9(this.type, this.bubbles, this.cancelable, this.text, this.errorID);
            i.target = this.target;
            i.currentTarget = this.currentTarget;
            i.eventPhase = this.eventPhase;
            return i
        },
        toString: function() {
            return this.__formatToString("SecurityErrorEvent", ["type", "bubbles", "cancelable", "text", "errorID"])
        },
        __class__: n9
    });
    var nj = function(i1, q, i) {
        if (i == null) {
            i = false
        }
        if (q == null) {
            q = false
        }
        hM.call(this, i1, q, i)
    };
    nt["openfl.events.TimerEvent"] = nj;
    nj.__name__ = ["openfl", "events", "TimerEvent"];
    nj.__super__ = hM;
    nj.prototype = lP(hM.prototype, {
        clone: function() {
            var i = new nj(this.type, this.bubbles, this.cancelable);
            i.target = this.target;
            i.currentTarget = this.currentTarget;
            i.eventPhase = this.eventPhase;
            return i
        },
        toString: function() {
            return this.__formatToString("TimerEvent", ["type", "bubbles", "cancelable"])
        },
        updateAfterEvent: function() {},
        __class__: nj
    });
    var hR = function(qZ, q2, rb, q1, i, q, rc, q7, q5, q3, q0, i2, i1, q6, q8, qY, js, ra, q4, q9) {
        if (q9 == null) {
            q9 = false
        }
        if (js == null) {
            js = 0
        }
        if (qY == null) {
            qY = false
        }
        if (q8 == null) {
            q8 = false
        }
        if (q6 == null) {
            q6 = false
        }
        if (i1 == null) {
            i1 = false
        }
        if (i2 == null) {
            i2 = false
        }
        if (q3 == null) {
            q3 = 0
        }
        if (q5 == null) {
            q5 = 0
        }
        if (q7 == null) {
            q7 = 0
        }
        if (rc == null) {
            rc = 0
        }
        if (q == null) {
            q = 0
        }
        if (i == null) {
            i = false
        }
        if (q1 == null) {
            q1 = 0
        }
        if (rb == null) {
            rb = false
        }
        if (q2 == null) {
            q2 = true
        }
        hM.call(this, qZ, q2, rb);
        this.touchPointID = q1;
        this.isPrimaryTouchPoint = i;
        this.localX = q;
        this.localY = rc;
        this.sizeX = q7;
        this.sizeY = q5;
        this.pressure = q3;
        this.relatedObject = q0;
        this.ctrlKey = i2;
        this.altKey = i1;
        this.shiftKey = q6;
        this.commandKey = q8;
        this.controlKey = qY
    };
    nt["openfl.events.TouchEvent"] = hR;
    hR.__name__ = ["openfl", "events", "TouchEvent"];
    hR.__create = function(js, qZ, i2, q, i1, qY) {
        var i = new hR(js, true, false, 0, true, i1.x, i1.y, 1, 1, 1);
        i.stageX = i2;
        i.stageY = q;
        i.target = qY;
        return i
    };
    hR.__super__ = hM;
    hR.prototype = lP(hM.prototype, {
        altKey: null,
        commandKey: null,
        controlKey: null,
        ctrlKey: null,
        delta: null,
        isPrimaryTouchPoint: null,
        localX: null,
        localY: null,
        pressure: null,
        relatedObject: null,
        shiftKey: null,
        sizeX: null,
        sizeY: null,
        stageX: null,
        stageY: null,
        touchPointID: null,
        clone: function() {
            var i = new hR(this.type, this.bubbles, this.cancelable, this.touchPointID, this.isPrimaryTouchPoint, this.localX, this.localY, this.sizeX, this.sizeY, this.pressure, this.relatedObject, this.ctrlKey, this.altKey, this.shiftKey, this.commandKey, this.controlKey);
            i.target = this.target;
            i.currentTarget = this.currentTarget;
            i.eventPhase = this.eventPhase;
            return i
        },
        toString: function() {
            return this.__formatToString("TouchEvent", ["type", "bubbles", "cancelable", "touchPointID", "isPrimaryTouchPoint", "localX", "localY", "sizeX", "sizeY", "pressure", "relatedObject", "ctrlKey", "altKey", "shiftKey", "commandKey", "controlKey"])
        },
        updateAfterEvent: function() {},
        __class__: hR
    });
    var a7 = function() {
        this.__saveLastFilter = false;
        this.__passes = 0;
        this.__dirty = true
    };
    nt["openfl.filters.BitmapFilter"] = a7;
    a7.__name__ = ["openfl", "filters", "BitmapFilter"];
    a7.__tmpRenderTexture = null;
    a7.__applyFilters = function(i1, q5, i, qY, q4, qZ) {
        var q3 = qY == i && qY.__usingPingPongTexture;
        if (q3) {
            qY.__pingPongTexture.useOldTexture = true
        }
        if (q4 == null) {
            q4 = i.rect
        }
        var i2 = null;
        var q7 = false;
        var q1 = i.__shader;
        var js = 0;
        while (js < i1.length) {
            var q = i1[js];
            ++js;
            q7 = false;
            if (q.__saveLastFilter) {
                qY.__pingPongTexture.swap();
                qY.__drawGL(q5, i, null, null, null, q4, true, !qY.__usingPingPongTexture, true);
                i2 = qY.__pingPongTexture.get_oldRenderTexture();
                qY.__pingPongTexture.set_oldRenderTexture(a7.__tmpRenderTexture)
            }
            var q0 = 0;
            var q2 = q.__passes;
            while (q0 < q2) {
                var q6 = q0++;
                q7 = q.__saveLastFilter && q.__useLastFilter(q6);
                if (q3 && !q7) {
                    qY.__pingPongTexture.swap()
                }
                if (q7) {
                    a7.__tmpRenderTexture = qY.__pingPongTexture.get_oldRenderTexture();
                    qY.__pingPongTexture.set_oldRenderTexture(i2)
                }
                i.__shader = q.__preparePass(q6);
                qY.__drawGL(q5, i, null, null, null, q4, true, !qY.__usingPingPongTexture, !q7)
            }
        }
        i.__shader = q1;
        if (q3) {
            qY.__pingPongTexture.useOldTexture = false
        }
    };
    a7.__expandBounds = function(js, i2, i) {
        var i1 = gn.__temp;
        i1.setEmpty();
        var qY = 0;
        while (qY < js.length) {
            var q = js[qY];
            ++qY;
            q.__growBounds(i1)
        }
        i1.__transform(i1, i);
        i2.__expand(i1.x, i1.y, i1.width, i1.height)
    };
    a7.prototype = {
        __dirty: null,
        __passes: null,
        __saveLastFilter: null,
        clone: function() {
            return new a7()
        },
        __applyFilter: function(i1, i2, q, i) {},
        __growBounds: function(i) {},
        __preparePass: function(i) {
            return null
        },
        __useLastFilter: function(i) {
            return false
        },
        __class__: a7
    };
    var k6 = function(i) {
        a7.call(this);
        this.__colorMatrixShader = new eP();
        this.__passes = 1;
        this.set_matrix(i)
    };
    nt["openfl.filters.ColorMatrixFilter"] = k6;
    k6.__name__ = ["openfl", "filters", "ColorMatrixFilter"];
    k6.__super__ = a7;
    k6.prototype = lP(a7.prototype, {
        matrix: null,
        __colorMatrixShader: null,
        clone: function() {
            return new k6(this.matrix)
        },
        __applyFilter: function(i, q5, qY, q1) {
            var q9 = i.data;
            var re = q5.data;
            var rc = q1.x - qY.x | 0;
            var rb = q1.y - qY.y | 0;
            var js = i.width * 4;
            var q0 = q5.width * 4;
            var ra;
            var rd;
            var q8 = qY.y | 0;
            var i2 = qY.height | 0;
            while (q8 < i2) {
                var qZ = q8++;
                var q6 = qY.x | 0;
                var q7 = qY.width | 0;
                while (q6 < q7) {
                    var i1 = q6++;
                    ra = qZ * js + i1 * 4;
                    rd = (qZ + rc) * q0 + (i1 + rb) * 4;
                    var q = q9[ra];
                    var q2 = q9[ra + 1];
                    var q3 = q9[ra + 2];
                    var q4 = q9[ra + 3];
                    re[rd] = this.matrix[0] * q + this.matrix[1] * q2 + this.matrix[2] * q3 + this.matrix[3] * q4 + this.matrix[4] | 0;
                    re[rd + 1] = this.matrix[5] * q + this.matrix[6] * q2 + this.matrix[7] * q3 + this.matrix[8] * q4 + this.matrix[9] | 0;
                    re[rd + 2] = this.matrix[10] * q + this.matrix[11] * q2 + this.matrix[12] * q3 + this.matrix[13] * q4 + this.matrix[14] | 0;
                    re[rd + 3] = this.matrix[15] * q + this.matrix[16] * q2 + this.matrix[17] * q3 + this.matrix[18] * q4 + this.matrix[19] | 0
                }
            }
        },
        __preparePass: function(i) {
            return this.__colorMatrixShader
        },
        set_matrix: function(i) {
            if (i == null) {
                i = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0]
            }
            return this.matrix = i
        },
        __class__: k6,
        __properties__: {
            set_matrix: "set_matrix"
        }
    });
    var eP = function() {
        this.__uOffsets = new es("vec4", 0);
        this.__uMultipliers = new es("mat4", 0);
        this.fragment = ["uniform mat4 uMultipliers;", "uniform vec4 uOffsets;", "void main(void) {", "\tvec4 color = texture2D(" + lK.uSampler + ", " + lK.vTexCoord + ");", "\tcolor = vec4(color.rgb / color.a, color.a);", "\tcolor = uOffsets + color * uMultipliers;", "\tcolor = vec4(color.rgb * color.a, color.a);", "\tgl_FragColor = color;", "}"];
        lK.call(this);
        this.data.set("uMultipliers", this.__uMultipliers);
        this.data.set("uOffsets", this.__uOffsets);
        this.__buildFragmentCode("uniform mat4 uMultipliers;\nuniform vec4 uOffsets;\nvoid main(void) {\n\tvec4 color = texture2D(" + lK.uSampler + ", " + lK.vTexCoord + ");\n\tcolor = vec4(color.rgb / color.a, color.a);\n\tcolor = uOffsets + color * uMultipliers;\n\tcolor = vec4(color.rgb * color.a, color.a);\n\tgl_FragColor = color;\n}")
    };
    nt["openfl.filters._ColorMatrixFilter.ColorMatrixShader"] = eP;
    eP.__name__ = ["openfl", "filters", "_ColorMatrixFilter", "ColorMatrixShader"];
    eP.__super__ = lK;
    eP.prototype = lP(lK.prototype, {
        fragment: null,
        __uMultipliers: null,
        get_uMultipliers: function() {
            return this.__uMultipliers.value
        },
        set_uMultipliers: function(i) {
            return this.__uMultipliers.set_value(i)
        },
        __uOffsets: null,
        get_uOffsets: function() {
            return this.__uOffsets.value
        },
        set_uOffsets: function(i) {
            return this.__uOffsets.set_value(i)
        },
        __class__: eP,
        __properties__: {
            set_uOffsets: "set_uOffsets",
            get_uOffsets: "get_uOffsets",
            set_uMultipliers: "set_uMultipliers",
            get_uMultipliers: "get_uMultipliers"
        }
    });
    var aW = function(i1) {
        if (i1 != null && i1.length == 16) {
            this.rawData = i1
        } else {
            var q0 = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
            var qZ = new p0();
            qZ.length = q0.length;
            qZ.fixed = true;
            var js;
            var q;
            q = new Array(q0.length);
            js = q;
            var qY = 0;
            var q1 = q0.length;
            while (qY < q1) {
                var i2 = qY++;
                js[i2] = q0[i2]
            }
            qZ.data = js;
            this.rawData = qZ
        }
    };
    nt["openfl.geom.Matrix3D"] = aW;
    aW.__name__ = ["openfl", "geom", "Matrix3D"];
    aW.create2D = function(i, qZ, js, i1) {
        if (i1 == null) {
            i1 = 0
        }
        if (js == null) {
            js = 1
        }
        var q = i1 * Math.PI / 180;
        var qY = Math.cos(q);
        var i2 = Math.sin(q);
        return new aW((function(q6) {
            var q5;
            var q8 = [qY * js, -i2 * js, 0, 0, i2 * js, qY * js, 0, 0, 0, 0, 1, 0, i, qZ, 0, 1];
            var q1 = new p0();
            q1.length = q8.length;
            q1.fixed = true;
            var q0;
            var q4;
            q4 = new Array(q8.length);
            q0 = q4;
            var q7 = 0;
            var q3 = q8.length;
            while (q7 < q3) {
                var q2 = q7++;
                q0[q2] = q8[q2]
            }
            q1.data = q0;
            q5 = q1;
            return q5
        }(this)))
    };
    aW.createABCD = function(i2, q, qY, js, i1, i) {
        return new aW((function(q5) {
            var q4;
            var q7 = [i2, q, 0, 0, qY, js, 0, 0, 0, 0, 1, 0, i1, i, 0, 1];
            var q0 = new p0();
            q0.length = q7.length;
            q0.fixed = true;
            var qZ;
            var q3;
            q3 = new Array(q7.length);
            qZ = q3;
            var q6 = 0;
            var q2 = q7.length;
            while (q6 < q2) {
                var q1 = q6++;
                qZ[q1] = q7[q1]
            }
            q0.data = qZ;
            q4 = q0;
            return q4
        }(this)))
    };
    aW.createOrtho = function(q, i, q1, q0, i1, js) {
        var qZ = 1 / (i - q);
        var qY = 1 / (q0 - q1);
        var i2 = 1 / (js - i1);
        return new aW((function(q8) {
            var q7;
            var ra = [2 * qZ, 0, 0, 0, 0, 2 * qY, 0, 0, 0, 0, -2 * i2, 0, -(q + i) * qZ, -(q1 + q0) * qY, -(i1 + js) * i2, 1];
            var q3 = new p0();
            q3.length = ra.length;
            q3.fixed = true;
            var q2;
            var q6;
            q6 = new Array(ra.length);
            q2 = q6;
            var q9 = 0;
            var q5 = ra.length;
            while (q9 < q5) {
                var q4 = q9++;
                q2[q4] = ra[q4]
            }
            q3.data = q2;
            q7 = q3;
            return q7
        }(this)))
    };
    aW.interpolate = function(q1, q2, q0) {
        var q = new aW();
        var qY = 0;
        while (qY < 16) {
            var js = qY++;
            var qZ = q.rawData;
            if (!qZ.fixed) {
                if (js >= qZ.length) {
                    qZ.length = js + 1
                }
                if (qZ.data.length < qZ.length) {
                    var i2;
                    var i1;
                    i1 = new Array(qZ.data.length + 10);
                    i2 = i1;
                    dQ.blit(qZ.data, 0, i2, 0, qZ.data.length);
                    qZ.data = i2
                }
            }
            qZ.data[js] = q1.rawData.data[js] + (q2.rawData.data[js] - q1.rawData.data[js]) * q0
        }
        return q
    };
    aW.__getAxisRotation = function(rd, rb, q9, q) {
        var rq = new aW();
        var rn = new ok(rd, rb, q9);
        var i = -q * (Math.PI / 180);
        var rv = Math.cos(i);
        var ri = Math.sin(i);
        var rh = 1 - rv;
        var rf = rq.rawData;
        if (!rf.fixed) {
            if (0 >= rf.length) {
                rf.length = 1
            }
            if (rf.data.length < rf.length) {
                var ru;
                var re;
                re = new Array(rf.data.length + 10);
                ru = re;
                dQ.blit(rf.data, 0, ru, 0, rf.data.length);
                rf.data = ru
            }
        }
        rf.data[0] = rv + rn.x * rn.x * rh;
        var rc = rq.rawData;
        if (!rc.fixed) {
            if (5 >= rc.length) {
                rc.length = 6
            }
            if (rc.data.length < rc.length) {
                var rr;
                var ra;
                ra = new Array(rc.data.length + 10);
                rr = ra;
                dQ.blit(rc.data, 0, rr, 0, rc.data.length);
                rc.data = rr
            }
        }
        rc.data[5] = rv + rn.y * rn.y * rh;
        var q8 = rq.rawData;
        if (!q8.fixed) {
            if (10 >= q8.length) {
                q8.length = 11
            }
            if (q8.data.length < q8.length) {
                var rp;
                var q7;
                q7 = new Array(q8.data.length + 10);
                rp = q7;
                dQ.blit(q8.data, 0, rp, 0, q8.data.length);
                q8.data = rp
            }
        }
        q8.data[10] = rv + rn.z * rn.z * rh;
        var rt = rn.x * rn.y * rh;
        var rs = rn.z * ri;
        var q5 = rq.rawData;
        if (!q5.fixed) {
            if (4 >= q5.length) {
                q5.length = 5
            }
            if (q5.data.length < q5.length) {
                var ro;
                var q3;
                q3 = new Array(q5.data.length + 10);
                ro = q3;
                dQ.blit(q5.data, 0, ro, 0, q5.data.length);
                q5.data = ro
            }
        }
        q5.data[4] = rt + rs;
        var q1 = rq.rawData;
        if (!q1.fixed) {
            if (1 >= q1.length) {
                q1.length = 2
            }
            if (q1.data.length < q1.length) {
                var rm;
                var q6;
                q6 = new Array(q1.data.length + 10);
                rm = q6;
                dQ.blit(q1.data, 0, rm, 0, q1.data.length);
                q1.data = rm
            }
        }
        q1.data[1] = rt - rs;
        rt = rn.x * rn.z * rh;
        rs = rn.y * ri;
        var q4 = rq.rawData;
        if (!q4.fixed) {
            if (8 >= q4.length) {
                q4.length = 9
            }
            if (q4.data.length < q4.length) {
                var rl;
                var q2;
                q2 = new Array(q4.data.length + 10);
                rl = q2;
                dQ.blit(q4.data, 0, rl, 0, q4.data.length);
                q4.data = rl
            }
        }
        q4.data[8] = rt - rs;
        var q0 = rq.rawData;
        if (!q0.fixed) {
            if (2 >= q0.length) {
                q0.length = 3
            }
            if (q0.data.length < q0.length) {
                var rk;
                var qZ;
                qZ = new Array(q0.data.length + 10);
                rk = qZ;
                dQ.blit(q0.data, 0, rk, 0, q0.data.length);
                q0.data = rk
            }
        }
        q0.data[2] = rt + rs;
        rt = rn.y * rn.z * rh;
        rs = rn.x * ri;
        var qY = rq.rawData;
        if (!qY.fixed) {
            if (9 >= qY.length) {
                qY.length = 10
            }
            if (qY.data.length < qY.length) {
                var rj;
                var js;
                js = new Array(qY.data.length + 10);
                rj = js;
                dQ.blit(qY.data, 0, rj, 0, qY.data.length);
                qY.data = rj
            }
        }
        qY.data[9] = rt + rs;
        var i2 = rq.rawData;
        if (!i2.fixed) {
            if (6 >= i2.length) {
                i2.length = 7
            }
            if (i2.data.length < i2.length) {
                var rg;
                var i1;
                i1 = new Array(i2.data.length + 10);
                rg = i1;
                dQ.blit(i2.data, 0, rg, 0, i2.data.length);
                i2.data = rg
            }
        }
        i2.data[6] = rt - rs;
        return rq
    };
    aW.prototype = {
        determinant: null,
        rawData: null,
        append: function(rj) {
            var rh = this.rawData.data[0];
            var sb = this.rawData.data[4];
            var r3 = this.rawData.data[8];
            var rR = this.rawData.data[12];
            var rf = this.rawData.data[1];
            var sa = this.rawData.data[5];
            var r2 = this.rawData.data[9];
            var rP = this.rawData.data[13];
            var rd = this.rawData.data[2];
            var r9 = this.rawData.data[6];
            var r1 = this.rawData.data[10];
            var rN = this.rawData.data[14];
            var rb = this.rawData.data[3];
            var r8 = this.rawData.data[7];
            var r0 = this.rawData.data[11];
            var rL = this.rawData.data[15];
            var q7 = rj.rawData.data[0];
            var r7 = rj.rawData.data[4];
            var rZ = rj.rawData.data[8];
            var rI = rj.rawData.data[12];
            var q5 = rj.rawData.data[1];
            var r6 = rj.rawData.data[5];
            var rY = rj.rawData.data[9];
            var rH = rj.rawData.data[13];
            var q3 = rj.rawData.data[2];
            var r5 = rj.rawData.data[6];
            var rX = rj.rawData.data[10];
            var rG = rj.rawData.data[14];
            var q2 = rj.rawData.data[3];
            var r4 = rj.rawData.data[7];
            var rW = rj.rawData.data[11];
            var rF = rj.rawData.data[15];
            var rV = this.rawData;
            if (!rV.fixed) {
                if (0 >= rV.length) {
                    rV.length = 1
                }
                if (rV.data.length < rV.length) {
                    var rn;
                    var rU;
                    rU = new Array(rV.data.length + 10);
                    rn = rU;
                    dQ.blit(rV.data, 0, rn, 0, rV.data.length);
                    rV.data = rn
                }
            }
            rV.data[0] = rh * q7 + rf * r7 + rd * rZ + rb * rI;
            var rT = this.rawData;
            if (!rT.fixed) {
                if (1 >= rT.length) {
                    rT.length = 2
                }
                if (rT.data.length < rT.length) {
                    var q1;
                    var rS;
                    rS = new Array(rT.data.length + 10);
                    q1 = rS;
                    dQ.blit(rT.data, 0, q1, 0, rT.data.length);
                    rT.data = q1
                }
            }
            rT.data[1] = rh * q5 + rf * r6 + rd * rY + rb * rH;
            var rQ = this.rawData;
            if (!rQ.fixed) {
                if (2 >= rQ.length) {
                    rQ.length = 3
                }
                if (rQ.data.length < rQ.length) {
                    var q0;
                    var rO;
                    rO = new Array(rQ.data.length + 10);
                    q0 = rO;
                    dQ.blit(rQ.data, 0, q0, 0, rQ.data.length);
                    rQ.data = q0
                }
            }
            rQ.data[2] = rh * q3 + rf * r5 + rd * rX + rb * rG;
            var rM = this.rawData;
            if (!rM.fixed) {
                if (3 >= rM.length) {
                    rM.length = 4
                }
                if (rM.data.length < rM.length) {
                    var qZ;
                    var rK;
                    rK = new Array(rM.data.length + 10);
                    qZ = rK;
                    dQ.blit(rM.data, 0, qZ, 0, rM.data.length);
                    rM.data = qZ
                }
            }
            rM.data[3] = rh * q2 + rf * r4 + rd * rW + rb * rF;
            var rJ = this.rawData;
            if (!rJ.fixed) {
                if (4 >= rJ.length) {
                    rJ.length = 5
                }
                if (rJ.data.length < rJ.length) {
                    var qY;
                    var rE;
                    rE = new Array(rJ.data.length + 10);
                    qY = rE;
                    dQ.blit(rJ.data, 0, qY, 0, rJ.data.length);
                    rJ.data = qY
                }
            }
            rJ.data[4] = sb * q7 + sa * r7 + r9 * rZ + r8 * rI;
            var rD = this.rawData;
            if (!rD.fixed) {
                if (5 >= rD.length) {
                    rD.length = 6
                }
                if (rD.data.length < rD.length) {
                    var js;
                    var rC;
                    rC = new Array(rD.data.length + 10);
                    js = rC;
                    dQ.blit(rD.data, 0, js, 0, rD.data.length);
                    rD.data = js
                }
            }
            rD.data[5] = sb * q5 + sa * r6 + r9 * rY + r8 * rH;
            var rB = this.rawData;
            if (!rB.fixed) {
                if (6 >= rB.length) {
                    rB.length = 7
                }
                if (rB.data.length < rB.length) {
                    var i2;
                    var rA;
                    rA = new Array(rB.data.length + 10);
                    i2 = rA;
                    dQ.blit(rB.data, 0, i2, 0, rB.data.length);
                    rB.data = i2
                }
            }
            rB.data[6] = sb * q3 + sa * r5 + r9 * rX + r8 * rG;
            var rz = this.rawData;
            if (!rz.fixed) {
                if (7 >= rz.length) {
                    rz.length = 8
                }
                if (rz.data.length < rz.length) {
                    var i1;
                    var ry;
                    ry = new Array(rz.data.length + 10);
                    i1 = ry;
                    dQ.blit(rz.data, 0, i1, 0, rz.data.length);
                    rz.data = i1
                }
            }
            rz.data[7] = sb * q2 + sa * r4 + r9 * rW + r8 * rF;
            var rx = this.rawData;
            if (!rx.fixed) {
                if (8 >= rx.length) {
                    rx.length = 9
                }
                if (rx.data.length < rx.length) {
                    var q;
                    var rw;
                    rw = new Array(rx.data.length + 10);
                    q = rw;
                    dQ.blit(rx.data, 0, q, 0, rx.data.length);
                    rx.data = q
                }
            }
            rx.data[8] = r3 * q7 + r2 * r7 + r1 * rZ + r0 * rI;
            var rv = this.rawData;
            if (!rv.fixed) {
                if (9 >= rv.length) {
                    rv.length = 10
                }
                if (rv.data.length < rv.length) {
                    var i;
                    var ru;
                    ru = new Array(rv.data.length + 10);
                    i = ru;
                    dQ.blit(rv.data, 0, i, 0, rv.data.length);
                    rv.data = i
                }
            }
            rv.data[9] = r3 * q5 + r2 * r6 + r1 * rY + r0 * rH;
            var rt = this.rawData;
            if (!rt.fixed) {
                if (10 >= rt.length) {
                    rt.length = 11
                }
                if (rt.data.length < rt.length) {
                    var rc;
                    var rs;
                    rs = new Array(rt.data.length + 10);
                    rc = rs;
                    dQ.blit(rt.data, 0, rc, 0, rt.data.length);
                    rt.data = rc
                }
            }
            rt.data[10] = r3 * q3 + r2 * r5 + r1 * rX + r0 * rG;
            var rr = this.rawData;
            if (!rr.fixed) {
                if (11 >= rr.length) {
                    rr.length = 12
                }
                if (rr.data.length < rr.length) {
                    var ra;
                    var rq;
                    rq = new Array(rr.data.length + 10);
                    ra = rq;
                    dQ.blit(rr.data, 0, ra, 0, rr.data.length);
                    rr.data = ra
                }
            }
            rr.data[11] = r3 * q2 + r2 * r4 + r1 * rW + r0 * rF;
            var rp = this.rawData;
            if (!rp.fixed) {
                if (12 >= rp.length) {
                    rp.length = 13
                }
                if (rp.data.length < rp.length) {
                    var q9;
                    var ro;
                    ro = new Array(rp.data.length + 10);
                    q9 = ro;
                    dQ.blit(rp.data, 0, q9, 0, rp.data.length);
                    rp.data = q9
                }
            }
            rp.data[12] = rR * q7 + rP * r7 + rN * rZ + rL * rI;
            var rm = this.rawData;
            if (!rm.fixed) {
                if (13 >= rm.length) {
                    rm.length = 14
                }
                if (rm.data.length < rm.length) {
                    var q8;
                    var rl;
                    rl = new Array(rm.data.length + 10);
                    q8 = rl;
                    dQ.blit(rm.data, 0, q8, 0, rm.data.length);
                    rm.data = q8
                }
            }
            rm.data[13] = rR * q5 + rP * r6 + rN * rY + rL * rH;
            var rk = this.rawData;
            if (!rk.fixed) {
                if (14 >= rk.length) {
                    rk.length = 15
                }
                if (rk.data.length < rk.length) {
                    var q6;
                    var ri;
                    ri = new Array(rk.data.length + 10);
                    q6 = ri;
                    dQ.blit(rk.data, 0, q6, 0, rk.data.length);
                    rk.data = q6
                }
            }
            rk.data[14] = rR * q3 + rP * r5 + rN * rX + rL * rG;
            var rg = this.rawData;
            if (!rg.fixed) {
                if (15 >= rg.length) {
                    rg.length = 16
                }
                if (rg.data.length < rg.length) {
                    var q4;
                    var re;
                    re = new Array(rg.data.length + 10);
                    q4 = re;
                    dQ.blit(rg.data, 0, q4, 0, rg.data.length);
                    rg.data = q4
                }
            }
            rg.data[15] = rR * q2 + rP * r4 + rN * rW + rL * rF
        },
        appendRotation: function(js, i1, q) {
            var i = aW.__getAxisRotation(i1.x, i1.y, i1.z, js);
            if (q != null) {
                var i2 = q;
                i.appendTranslation(i2.x, i2.y, i2.z)
            }
            this.append(i)
        },
        appendScale: function(i1, q, i) {
            this.append(new aW((function(q2) {
                var q1;
                var q4 = [i1, 0, 0, 0, 0, q, 0, 0, 0, 0, i, 0, 0, 0, 0, 1];
                var js = new p0();
                js.length = q4.length;
                js.fixed = true;
                var i2;
                var q0;
                q0 = new Array(q4.length);
                i2 = q0;
                var q3 = 0;
                var qZ = q4.length;
                while (q3 < qZ) {
                    var qY = q3++;
                    i2[qY] = q4[qY]
                }
                js.data = i2;
                q1 = js;
                return q1
            }(this))))
        },
        appendTranslation: function(q4, q3, q2) {
            var q1 = this.rawData;
            if (!q1.fixed) {
                if (12 >= q1.length) {
                    q1.length = 13
                }
                if (q1.data.length < q1.length) {
                    var qZ;
                    var q0;
                    q0 = new Array(q1.data.length + 10);
                    qZ = q0;
                    dQ.blit(q1.data, 0, qZ, 0, q1.data.length);
                    q1.data = qZ
                }
            }
            q1.data[12] = this.rawData.data[12] + q4;
            var qY = this.rawData;
            if (!qY.fixed) {
                if (13 >= qY.length) {
                    qY.length = 14
                }
                if (qY.data.length < qY.length) {
                    var js;
                    var i2;
                    i2 = new Array(qY.data.length + 10);
                    js = i2;
                    dQ.blit(qY.data, 0, js, 0, qY.data.length);
                    qY.data = js
                }
            }
            qY.data[13] = this.rawData.data[13] + q3;
            var i1 = this.rawData;
            if (!i1.fixed) {
                if (14 >= i1.length) {
                    i1.length = 15
                }
                if (i1.data.length < i1.length) {
                    var q;
                    var i;
                    i = new Array(i1.data.length + 10);
                    q = i;
                    dQ.blit(i1.data, 0, q, 0, i1.data.length);
                    i1.data = q
                }
            }
            i1.data[14] = this.rawData.data[14] + q2
        },
        clone: function() {
            return new aW((function(js) {
                var i1;
                var q = js.rawData;
                var i2 = new p0();
                i2.length = q.length;
                i2.fixed = q.fixed;
                var i;
                i = new Array(q.length);
                i2.data = i;
                dQ.blit(q.data, 0, i2.data, 0, q.length);
                i1 = i2;
                return i1
            }(this)))
        },
        copyColumnFrom: function(rq, rx) {
            switch (rq) {
                case 0:
                    var ro = this.rawData;
                    if (!ro.fixed) {
                        if (0 >= ro.length) {
                            ro.length = 1
                        }
                        if (ro.data.length < ro.length) {
                            var rF;
                            var rn;
                            rn = new Array(ro.data.length + 10);
                            rF = rn;
                            dQ.blit(ro.data, 0, rF, 0, ro.data.length);
                            ro.data = rF
                        }
                    }
                    ro.data[0] = rx.x;
                    var rm = this.rawData;
                    if (!rm.fixed) {
                        if (1 >= rm.length) {
                            rm.length = 2
                        }
                        if (rm.data.length < rm.length) {
                            var rz;
                            var rl;
                            rl = new Array(rm.data.length + 10);
                            rz = rl;
                            dQ.blit(rm.data, 0, rz, 0, rm.data.length);
                            rm.data = rz
                        }
                    }
                    rm.data[1] = rx.y;
                    var rk = this.rawData;
                    if (!rk.fixed) {
                        if (2 >= rk.length) {
                            rk.length = 3
                        }
                        if (rk.data.length < rk.length) {
                            var ry;
                            var rj;
                            rj = new Array(rk.data.length + 10);
                            ry = rj;
                            dQ.blit(rk.data, 0, ry, 0, rk.data.length);
                            rk.data = ry
                        }
                    }
                    rk.data[2] = rx.z;
                    var rh = this.rawData;
                    if (!rh.fixed) {
                        if (3 >= rh.length) {
                            rh.length = 4
                        }
                        if (rh.data.length < rh.length) {
                            var rw;
                            var rf;
                            rf = new Array(rh.data.length + 10);
                            rw = rf;
                            dQ.blit(rh.data, 0, rw, 0, rh.data.length);
                            rh.data = rw
                        }
                    }
                    rh.data[3] = rx.w;
                    break;
                case 1:
                    var rd = this.rawData;
                    if (!rd.fixed) {
                        if (4 >= rd.length) {
                            rd.length = 5
                        }
                        if (rd.data.length < rd.length) {
                            var rv;
                            var ri;
                            ri = new Array(rd.data.length + 10);
                            rv = ri;
                            dQ.blit(rd.data, 0, rv, 0, rd.data.length);
                            rd.data = rv
                        }
                    }
                    rd.data[4] = rx.x;
                    var rg = this.rawData;
                    if (!rg.fixed) {
                        if (5 >= rg.length) {
                            rg.length = 6
                        }
                        if (rg.data.length < rg.length) {
                            var ru;
                            var re;
                            re = new Array(rg.data.length + 10);
                            ru = re;
                            dQ.blit(rg.data, 0, ru, 0, rg.data.length);
                            rg.data = ru
                        }
                    }
                    rg.data[5] = rx.y;
                    var rc = this.rawData;
                    if (!rc.fixed) {
                        if (6 >= rc.length) {
                            rc.length = 7
                        }
                        if (rc.data.length < rc.length) {
                            var rt;
                            var rb;
                            rb = new Array(rc.data.length + 10);
                            rt = rb;
                            dQ.blit(rc.data, 0, rt, 0, rc.data.length);
                            rc.data = rt
                        }
                    }
                    rc.data[6] = rx.z;
                    var ra = this.rawData;
                    if (!ra.fixed) {
                        if (7 >= ra.length) {
                            ra.length = 8
                        }
                        if (ra.data.length < ra.length) {
                            var rs;
                            var q9;
                            q9 = new Array(ra.data.length + 10);
                            rs = q9;
                            dQ.blit(ra.data, 0, rs, 0, ra.data.length);
                            ra.data = rs
                        }
                    }
                    ra.data[7] = rx.w;
                    break;
                case 2:
                    var q8 = this.rawData;
                    if (!q8.fixed) {
                        if (8 >= q8.length) {
                            q8.length = 9
                        }
                        if (q8.data.length < q8.length) {
                            var rr;
                            var q7;
                            q7 = new Array(q8.data.length + 10);
                            rr = q7;
                            dQ.blit(q8.data, 0, rr, 0, q8.data.length);
                            q8.data = rr
                        }
                    }
                    q8.data[8] = rx.x;
                    var q6 = this.rawData;
                    if (!q6.fixed) {
                        if (9 >= q6.length) {
                            q6.length = 10
                        }
                        if (q6.data.length < q6.length) {
                            var rp;
                            var q5;
                            q5 = new Array(q6.data.length + 10);
                            rp = q5;
                            dQ.blit(q6.data, 0, rp, 0, q6.data.length);
                            q6.data = rp
                        }
                    }
                    q6.data[9] = rx.y;
                    var q4 = this.rawData;
                    if (!q4.fixed) {
                        if (10 >= q4.length) {
                            q4.length = 11
                        }
                        if (q4.data.length < q4.length) {
                            var rG;
                            var q3;
                            q3 = new Array(q4.data.length + 10);
                            rG = q3;
                            dQ.blit(q4.data, 0, rG, 0, q4.data.length);
                            q4.data = rG
                        }
                    }
                    q4.data[10] = rx.z;
                    var q2 = this.rawData;
                    if (!q2.fixed) {
                        if (11 >= q2.length) {
                            q2.length = 12
                        }
                        if (q2.data.length < q2.length) {
                            var rE;
                            var q1;
                            q1 = new Array(q2.data.length + 10);
                            rE = q1;
                            dQ.blit(q2.data, 0, rE, 0, q2.data.length);
                            q2.data = rE
                        }
                    }
                    q2.data[11] = rx.w;
                    break;
                case 3:
                    var q0 = this.rawData;
                    if (!q0.fixed) {
                        if (12 >= q0.length) {
                            q0.length = 13
                        }
                        if (q0.data.length < q0.length) {
                            var rD;
                            var qZ;
                            qZ = new Array(q0.data.length + 10);
                            rD = qZ;
                            dQ.blit(q0.data, 0, rD, 0, q0.data.length);
                            q0.data = rD
                        }
                    }
                    q0.data[12] = rx.x;
                    var qY = this.rawData;
                    if (!qY.fixed) {
                        if (13 >= qY.length) {
                            qY.length = 14
                        }
                        if (qY.data.length < qY.length) {
                            var rC;
                            var js;
                            js = new Array(qY.data.length + 10);
                            rC = js;
                            dQ.blit(qY.data, 0, rC, 0, qY.data.length);
                            qY.data = rC
                        }
                    }
                    qY.data[13] = rx.y;
                    var i2 = this.rawData;
                    if (!i2.fixed) {
                        if (14 >= i2.length) {
                            i2.length = 15
                        }
                        if (i2.data.length < i2.length) {
                            var rB;
                            var i1;
                            i1 = new Array(i2.data.length + 10);
                            rB = i1;
                            dQ.blit(i2.data, 0, rB, 0, i2.data.length);
                            i2.data = rB
                        }
                    }
                    i2.data[14] = rx.z;
                    var q = this.rawData;
                    if (!q.fixed) {
                        if (15 >= q.length) {
                            q.length = 16
                        }
                        if (q.data.length < q.length) {
                            var rA;
                            var i;
                            i = new Array(q.data.length + 10);
                            rA = i;
                            dQ.blit(q.data, 0, rA, 0, q.data.length);
                            q.data = rA
                        }
                    }
                    q.data[15] = rx.w;
                    break;
                default:
            }
        },
        copyColumnTo: function(i, q) {
            switch (i) {
                case 0:
                    q.x = this.rawData.data[0];
                    q.y = this.rawData.data[1];
                    q.z = this.rawData.data[2];
                    q.w = this.rawData.data[3];
                    break;
                case 1:
                    q.x = this.rawData.data[4];
                    q.y = this.rawData.data[5];
                    q.z = this.rawData.data[6];
                    q.w = this.rawData.data[7];
                    break;
                case 2:
                    q.x = this.rawData.data[8];
                    q.y = this.rawData.data[9];
                    q.z = this.rawData.data[10];
                    q.w = this.rawData.data[11];
                    break;
                case 3:
                    q.x = this.rawData.data[12];
                    q.y = this.rawData.data[13];
                    q.z = this.rawData.data[14];
                    q.w = this.rawData.data[15];
                    break;
                default:
            }
        },
        copyFrom: function(q) {
            var i1 = q.rawData;
            var i2 = new p0();
            i2.length = i1.length;
            i2.fixed = i1.fixed;
            var i;
            i = new Array(i1.length);
            i2.data = i;
            dQ.blit(i1.data, 0, i2.data, 0, i1.length);
            this.rawData = i2
        },
        copyRawDataFrom: function(i1, q1, q2) {
            if (q2 == null) {
                q2 = false
            }
            if (q1 == null) {
                q1 = 0
            }
            if (q2) {
                this.transpose()
            }
            var q = i1.length - q1;
            var qZ = 0;
            while (qZ < q) {
                var qY = qZ++;
                var q0 = this.rawData;
                if (!q0.fixed) {
                    if (qY >= q0.length) {
                        q0.length = qY + 1
                    }
                    if (q0.data.length < q0.length) {
                        var js;
                        var i2;
                        i2 = new Array(q0.data.length + 10);
                        js = i2;
                        dQ.blit(q0.data, 0, js, 0, q0.data.length);
                        q0.data = js
                    }
                }
                q0.data[qY] = i1.data[qY + q1]
            }
            if (q2) {
                this.transpose()
            }
        },
        copyRawDataTo: function(q, qZ, q0) {
            if (q0 == null) {
                q0 = false
            }
            if (qZ == null) {
                qZ = 0
            }
            if (q0) {
                this.transpose()
            }
            var q1 = 0;
            var qY = this.rawData.length;
            while (q1 < qY) {
                var i2 = q1++;
                var q2 = i2 + qZ;
                if (!q.fixed) {
                    if (q2 >= q.length) {
                        q.length = q2 + 1
                    }
                    if (q.data.length < q.length) {
                        var i1;
                        var js;
                        js = new Array(q.data.length + 10);
                        i1 = js;
                        dQ.blit(q.data, 0, i1, 0, q.data.length);
                        q.data = i1
                    }
                }
                q.data[q2] = this.rawData.data[i2]
            }
            if (q0) {
                this.transpose()
            }
        },
        copyRowFrom: function(q2, rx) {
            switch (q2) {
                case 0:
                    var rp = this.rawData;
                    if (!rp.fixed) {
                        if (0 >= rp.length) {
                            rp.length = 1
                        }
                        if (rp.data.length < rp.length) {
                            var rF;
                            var ro;
                            ro = new Array(rp.data.length + 10);
                            rF = ro;
                            dQ.blit(rp.data, 0, rF, 0, rp.data.length);
                            rp.data = rF
                        }
                    }
                    rp.data[0] = rx.x;
                    var rn = this.rawData;
                    if (!rn.fixed) {
                        if (4 >= rn.length) {
                            rn.length = 5
                        }
                        if (rn.data.length < rn.length) {
                            var rz;
                            var rm;
                            rm = new Array(rn.data.length + 10);
                            rz = rm;
                            dQ.blit(rn.data, 0, rz, 0, rn.data.length);
                            rn.data = rz
                        }
                    }
                    rn.data[4] = rx.y;
                    var rl = this.rawData;
                    if (!rl.fixed) {
                        if (8 >= rl.length) {
                            rl.length = 9
                        }
                        if (rl.data.length < rl.length) {
                            var ry;
                            var rk;
                            rk = new Array(rl.data.length + 10);
                            ry = rk;
                            dQ.blit(rl.data, 0, ry, 0, rl.data.length);
                            rl.data = ry
                        }
                    }
                    rl.data[8] = rx.z;
                    var ri = this.rawData;
                    if (!ri.fixed) {
                        if (12 >= ri.length) {
                            ri.length = 13
                        }
                        if (ri.data.length < ri.length) {
                            var rw;
                            var rg;
                            rg = new Array(ri.data.length + 10);
                            rw = rg;
                            dQ.blit(ri.data, 0, rw, 0, ri.data.length);
                            ri.data = rw
                        }
                    }
                    ri.data[12] = rx.w;
                    break;
                case 1:
                    var re = this.rawData;
                    if (!re.fixed) {
                        if (1 >= re.length) {
                            re.length = 2
                        }
                        if (re.data.length < re.length) {
                            var rv;
                            var rj;
                            rj = new Array(re.data.length + 10);
                            rv = rj;
                            dQ.blit(re.data, 0, rv, 0, re.data.length);
                            re.data = rv
                        }
                    }
                    re.data[1] = rx.x;
                    var rh = this.rawData;
                    if (!rh.fixed) {
                        if (5 >= rh.length) {
                            rh.length = 6
                        }
                        if (rh.data.length < rh.length) {
                            var ru;
                            var rf;
                            rf = new Array(rh.data.length + 10);
                            ru = rf;
                            dQ.blit(rh.data, 0, ru, 0, rh.data.length);
                            rh.data = ru
                        }
                    }
                    rh.data[5] = rx.y;
                    var rd = this.rawData;
                    if (!rd.fixed) {
                        if (9 >= rd.length) {
                            rd.length = 10
                        }
                        if (rd.data.length < rd.length) {
                            var rt;
                            var rc;
                            rc = new Array(rd.data.length + 10);
                            rt = rc;
                            dQ.blit(rd.data, 0, rt, 0, rd.data.length);
                            rd.data = rt
                        }
                    }
                    rd.data[9] = rx.z;
                    var rb = this.rawData;
                    if (!rb.fixed) {
                        if (13 >= rb.length) {
                            rb.length = 14
                        }
                        if (rb.data.length < rb.length) {
                            var rs;
                            var ra;
                            ra = new Array(rb.data.length + 10);
                            rs = ra;
                            dQ.blit(rb.data, 0, rs, 0, rb.data.length);
                            rb.data = rs
                        }
                    }
                    rb.data[13] = rx.w;
                    break;
                case 2:
                    var q9 = this.rawData;
                    if (!q9.fixed) {
                        if (2 >= q9.length) {
                            q9.length = 3
                        }
                        if (q9.data.length < q9.length) {
                            var rr;
                            var q8;
                            q8 = new Array(q9.data.length + 10);
                            rr = q8;
                            dQ.blit(q9.data, 0, rr, 0, q9.data.length);
                            q9.data = rr
                        }
                    }
                    q9.data[2] = rx.x;
                    var q7 = this.rawData;
                    if (!q7.fixed) {
                        if (6 >= q7.length) {
                            q7.length = 7
                        }
                        if (q7.data.length < q7.length) {
                            var rq;
                            var q6;
                            q6 = new Array(q7.data.length + 10);
                            rq = q6;
                            dQ.blit(q7.data, 0, rq, 0, q7.data.length);
                            q7.data = rq
                        }
                    }
                    q7.data[6] = rx.y;
                    var q5 = this.rawData;
                    if (!q5.fixed) {
                        if (10 >= q5.length) {
                            q5.length = 11
                        }
                        if (q5.data.length < q5.length) {
                            var rG;
                            var q4;
                            q4 = new Array(q5.data.length + 10);
                            rG = q4;
                            dQ.blit(q5.data, 0, rG, 0, q5.data.length);
                            q5.data = rG
                        }
                    }
                    q5.data[10] = rx.z;
                    var q3 = this.rawData;
                    if (!q3.fixed) {
                        if (14 >= q3.length) {
                            q3.length = 15
                        }
                        if (q3.data.length < q3.length) {
                            var rE;
                            var q1;
                            q1 = new Array(q3.data.length + 10);
                            rE = q1;
                            dQ.blit(q3.data, 0, rE, 0, q3.data.length);
                            q3.data = rE
                        }
                    }
                    q3.data[14] = rx.w;
                    break;
                case 3:
                    var q0 = this.rawData;
                    if (!q0.fixed) {
                        if (3 >= q0.length) {
                            q0.length = 4
                        }
                        if (q0.data.length < q0.length) {
                            var rD;
                            var qZ;
                            qZ = new Array(q0.data.length + 10);
                            rD = qZ;
                            dQ.blit(q0.data, 0, rD, 0, q0.data.length);
                            q0.data = rD
                        }
                    }
                    q0.data[3] = rx.x;
                    var qY = this.rawData;
                    if (!qY.fixed) {
                        if (7 >= qY.length) {
                            qY.length = 8
                        }
                        if (qY.data.length < qY.length) {
                            var rC;
                            var js;
                            js = new Array(qY.data.length + 10);
                            rC = js;
                            dQ.blit(qY.data, 0, rC, 0, qY.data.length);
                            qY.data = rC
                        }
                    }
                    qY.data[7] = rx.y;
                    var i2 = this.rawData;
                    if (!i2.fixed) {
                        if (11 >= i2.length) {
                            i2.length = 12
                        }
                        if (i2.data.length < i2.length) {
                            var rB;
                            var i1;
                            i1 = new Array(i2.data.length + 10);
                            rB = i1;
                            dQ.blit(i2.data, 0, rB, 0, i2.data.length);
                            i2.data = rB
                        }
                    }
                    i2.data[11] = rx.z;
                    var q = this.rawData;
                    if (!q.fixed) {
                        if (15 >= q.length) {
                            q.length = 16
                        }
                        if (q.data.length < q.length) {
                            var rA;
                            var i;
                            i = new Array(q.data.length + 10);
                            rA = i;
                            dQ.blit(q.data, 0, rA, 0, q.data.length);
                            q.data = rA
                        }
                    }
                    q.data[15] = rx.w;
                    break;
                default:
            }
        },
        copyRowTo: function(q, i) {
            switch (q) {
                case 0:
                    i.x = this.rawData.data[0];
                    i.y = this.rawData.data[4];
                    i.z = this.rawData.data[8];
                    i.w = this.rawData.data[12];
                    break;
                case 1:
                    i.x = this.rawData.data[1];
                    i.y = this.rawData.data[5];
                    i.z = this.rawData.data[9];
                    i.w = this.rawData.data[13];
                    break;
                case 2:
                    i.x = this.rawData.data[2];
                    i.y = this.rawData.data[6];
                    i.z = this.rawData.data[10];
                    i.w = this.rawData.data[14];
                    break;
                case 3:
                    i.x = this.rawData.data[3];
                    i.y = this.rawData.data[7];
                    i.z = this.rawData.data[11];
                    i.w = this.rawData.data[15];
                    break;
                default:
            }
        },
        copyToMatrix3D: function(q) {
            var i1 = this.rawData;
            var i2 = new p0();
            i2.length = i1.length;
            i2.fixed = i1.fixed;
            var i;
            i = new Array(i1.length);
            i2.data = i;
            dQ.blit(i1.data, 0, i2.data, 0, i1.length);
            q.rawData = i2
        },
        decompose: function(i) {
            if (i == null) {
                i = 1
            }
            var i1;
            var rj;
            rj = new p0();
            var ri;
            ri = new Array(0);
            rj.data = ri;
            rj.length = 0;
            rj.fixed = false;
            i1 = rj;
            var rs = this.clone();
            var q;
            var rh = rs.rawData;
            var qY = new p0();
            qY.length = rh.length;
            qY.fixed = rh.fixed;
            var rg;
            rg = new Array(rh.length);
            qY.data = rg;
            dQ.blit(rh.data, 0, qY.data, 0, rh.length);
            q = qY;
            var q0 = new ok(q.data[12], q.data[13], q.data[14]);
            if (!q.fixed) {
                if (12 >= q.length) {
                    q.length = 13
                }
                if (q.data.length < q.length) {
                    var ry;
                    var rf;
                    rf = new Array(q.data.length + 10);
                    ry = rf;
                    dQ.blit(q.data, 0, ry, 0, q.data.length);
                    q.data = ry
                }
            }
            q.data[12] = 0;
            if (!q.fixed) {
                if (13 >= q.length) {
                    q.length = 14
                }
                if (q.data.length < q.length) {
                    var rt;
                    var re;
                    re = new Array(q.data.length + 10);
                    rt = re;
                    dQ.blit(q.data, 0, rt, 0, q.data.length);
                    q.data = rt
                }
            }
            q.data[13] = 0;
            if (!q.fixed) {
                if (14 >= q.length) {
                    q.length = 15
                }
                if (q.data.length < q.length) {
                    var rr;
                    var rc;
                    rc = new Array(q.data.length + 10);
                    rr = rc;
                    dQ.blit(q.data, 0, rr, 0, q.data.length);
                    q.data = rr
                }
            }
            q.data[14] = 0;
            var q3 = new ok();
            q3.x = Math.sqrt(q.data[0] * q.data[0] + q.data[1] * q.data[1] + q.data[2] * q.data[2]);
            q3.y = Math.sqrt(q.data[4] * q.data[4] + q.data[5] * q.data[5] + q.data[6] * q.data[6]);
            q3.z = Math.sqrt(q.data[8] * q.data[8] + q.data[9] * q.data[9] + q.data[10] * q.data[10]);
            if (q.data[0] * (q.data[5] * q.data[10] - q.data[6] * q.data[9]) - q.data[1] * (q.data[4] * q.data[10] - q.data[6] * q.data[8]) + q.data[2] * (q.data[4] * q.data[9] - q.data[5] * q.data[8]) < 0) {
                q3.z = -q3.z
            }
            if (!q.fixed) {
                if (0 >= q.length) {
                    q.length = 1
                }
                if (q.data.length < q.length) {
                    var rq;
                    var ra;
                    ra = new Array(q.data.length + 10);
                    rq = ra;
                    dQ.blit(q.data, 0, rq, 0, q.data.length);
                    q.data = rq
                }
            }
            q.data[0] = q.data[0] / q3.x;
            if (!q.fixed) {
                if (1 >= q.length) {
                    q.length = 2
                }
                if (q.data.length < q.length) {
                    var rp;
                    var q8;
                    q8 = new Array(q.data.length + 10);
                    rp = q8;
                    dQ.blit(q.data, 0, rp, 0, q.data.length);
                    q.data = rp
                }
            }
            q.data[1] = q.data[1] / q3.x;
            if (!q.fixed) {
                if (2 >= q.length) {
                    q.length = 3
                }
                if (q.data.length < q.length) {
                    var ro;
                    var rd;
                    rd = new Array(q.data.length + 10);
                    ro = rd;
                    dQ.blit(q.data, 0, ro, 0, q.data.length);
                    q.data = ro
                }
            }
            q.data[2] = q.data[2] / q3.x;
            if (!q.fixed) {
                if (4 >= q.length) {
                    q.length = 5
                }
                if (q.data.length < q.length) {
                    var rn;
                    var rb;
                    rb = new Array(q.data.length + 10);
                    rn = rb;
                    dQ.blit(q.data, 0, rn, 0, q.data.length);
                    q.data = rn
                }
            }
            q.data[4] = q.data[4] / q3.y;
            if (!q.fixed) {
                if (5 >= q.length) {
                    q.length = 6
                }
                if (q.data.length < q.length) {
                    var rm;
                    var q9;
                    q9 = new Array(q.data.length + 10);
                    rm = q9;
                    dQ.blit(q.data, 0, rm, 0, q.data.length);
                    q.data = rm
                }
            }
            q.data[5] = q.data[5] / q3.y;
            if (!q.fixed) {
                if (6 >= q.length) {
                    q.length = 7
                }
                if (q.data.length < q.length) {
                    var rl;
                    var q7;
                    q7 = new Array(q.data.length + 10);
                    rl = q7;
                    dQ.blit(q.data, 0, rl, 0, q.data.length);
                    q.data = rl
                }
            }
            q.data[6] = q.data[6] / q3.y;
            if (!q.fixed) {
                if (8 >= q.length) {
                    q.length = 9
                }
                if (q.data.length < q.length) {
                    var rk;
                    var q6;
                    q6 = new Array(q.data.length + 10);
                    rk = q6;
                    dQ.blit(q.data, 0, rk, 0, q.data.length);
                    q.data = rk
                }
            }
            q.data[8] = q.data[8] / q3.z;
            if (!q.fixed) {
                if (9 >= q.length) {
                    q.length = 10
                }
                if (q.data.length < q.length) {
                    var rA;
                    var q5;
                    q5 = new Array(q.data.length + 10);
                    rA = q5;
                    dQ.blit(q.data, 0, rA, 0, q.data.length);
                    q.data = rA
                }
            }
            q.data[9] = q.data[9] / q3.z;
            if (!q.fixed) {
                if (10 >= q.length) {
                    q.length = 11
                }
                if (q.data.length < q.length) {
                    var rz;
                    var q4;
                    q4 = new Array(q.data.length + 10);
                    rz = q4;
                    dQ.blit(q.data, 0, rz, 0, q.data.length);
                    q.data = rz
                }
            }
            q.data[10] = q.data[10] / q3.z;
            var i2 = new ok();
            if (i != null) {
                switch (i) {
                    case 0:
                        i2.w = Math.acos((q.data[0] + q.data[5] + q.data[10] - 1) / 2);
                        var js = Math.sqrt((q.data[6] - q.data[9]) * (q.data[6] - q.data[9]) + (q.data[8] - q.data[2]) * (q.data[8] - q.data[2]) + (q.data[1] - q.data[4]) * (q.data[1] - q.data[4]));
                        if (js != 0) {
                            i2.x = (q.data[6] - q.data[9]) / js;
                            i2.y = (q.data[8] - q.data[2]) / js;
                            i2.z = (q.data[1] - q.data[4]) / js
                        } else {
                            i2.x = i2.y = i2.z = 0
                        }
                        break;
                    case 2:
                        var rx = q.data[0] + q.data[5] + q.data[10];
                        if (rx > 0) {
                            i2.w = Math.sqrt(1 + rx) / 2;
                            i2.x = (q.data[6] - q.data[9]) / (4 * i2.w);
                            i2.y = (q.data[8] - q.data[2]) / (4 * i2.w);
                            i2.z = (q.data[1] - q.data[4]) / (4 * i2.w)
                        } else {
                            if (q.data[0] > q.data[5] && q.data[0] > q.data[10]) {
                                i2.x = Math.sqrt(1 + q.data[0] - q.data[5] - q.data[10]) / 2;
                                i2.w = (q.data[6] - q.data[9]) / (4 * i2.x);
                                i2.y = (q.data[1] + q.data[4]) / (4 * i2.x);
                                i2.z = (q.data[8] + q.data[2]) / (4 * i2.x)
                            } else {
                                if (q.data[5] > q.data[10]) {
                                    i2.y = Math.sqrt(1 + q.data[5] - q.data[0] - q.data[10]) / 2;
                                    i2.x = (q.data[1] + q.data[4]) / (4 * i2.y);
                                    i2.w = (q.data[8] - q.data[2]) / (4 * i2.y);
                                    i2.z = (q.data[6] + q.data[9]) / (4 * i2.y)
                                } else {
                                    i2.z = Math.sqrt(1 + q.data[10] - q.data[0] - q.data[5]) / 2;
                                    i2.x = (q.data[8] + q.data[2]) / (4 * i2.z);
                                    i2.y = (q.data[6] + q.data[9]) / (4 * i2.z);
                                    i2.w = (q.data[1] - q.data[4]) / (4 * i2.z)
                                }
                            }
                        }
                        break;
                    case 1:
                        i2.y = Math.asin(-q.data[2]);
                        if (q.data[2] != 1 && q.data[2] != -1) {
                            i2.x = Math.atan2(q.data[6], q.data[10]);
                            i2.z = Math.atan2(q.data[1], q.data[0])
                        } else {
                            i2.z = 0;
                            i2.x = Math.atan2(q.data[4], q.data[5])
                        }
                        break
                }
            }
            if (!i1.fixed) {
                i1.length++;
                if (i1.data.length < i1.length) {
                    var rw;
                    var q2;
                    q2 = new Array(i1.data.length + 10);
                    rw = q2;
                    dQ.blit(i1.data, 0, rw, 0, i1.data.length);
                    i1.data = rw
                }
                i1.data[i1.length - 1] = q0
            }
            i1.length;
            if (!i1.fixed) {
                i1.length++;
                if (i1.data.length < i1.length) {
                    var rv;
                    var q1;
                    q1 = new Array(i1.data.length + 10);
                    rv = q1;
                    dQ.blit(i1.data, 0, rv, 0, i1.data.length);
                    i1.data = rv
                }
                i1.data[i1.length - 1] = i2
            }
            i1.length;
            if (!i1.fixed) {
                i1.length++;
                if (i1.data.length < i1.length) {
                    var ru;
                    var qZ;
                    qZ = new Array(i1.data.length + 10);
                    ru = qZ;
                    dQ.blit(i1.data, 0, ru, 0, i1.data.length);
                    i1.data = ru
                }
                i1.data[i1.length - 1] = q3
            }
            i1.length;
            return i1
        },
        deltaTransformVector: function(q) {
            var i = q.x;
            var i2 = q.y;
            var i1 = q.z;
            return new ok(i * this.rawData.data[0] + i2 * this.rawData.data[4] + i1 * this.rawData.data[8] + this.rawData.data[3], i * this.rawData.data[1] + i2 * this.rawData.data[5] + i1 * this.rawData.data[9] + this.rawData.data[7], i * this.rawData.data[2] + i2 * this.rawData.data[6] + i1 * this.rawData.data[10] + this.rawData.data[11], 0)
        },
        identity: function() {
            var qZ = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
            var qY = new p0();
            qY.length = qZ.length;
            qY.fixed = true;
            var i2;
            var q;
            q = new Array(qZ.length);
            i2 = q;
            var js = 0;
            var q0 = qZ.length;
            while (js < q0) {
                var i1 = js++;
                i2[i1] = qZ[i1]
            }
            qY.data = i2;
            this.rawData = qY
        },
        interpolateTo: function(i1, qY) {
            var q0 = 0;
            while (q0 < 16) {
                var js = q0++;
                var i2 = this.rawData;
                if (!i2.fixed) {
                    if (js >= i2.length) {
                        i2.length = js + 1
                    }
                    if (i2.data.length < i2.length) {
                        var qZ;
                        var q;
                        q = new Array(i2.data.length + 10);
                        qZ = q;
                        dQ.blit(i2.data, 0, qZ, 0, i2.data.length);
                        i2.data = qZ
                    }
                }
                i2.data[js] = this.rawData.data[js] + (i1.rawData.data[js] - this.rawData.data[js]) * qY
            }
        },
        invert: function() {
            var rV = this.get_determinant();
            var ra = Math.abs(rV) > 1e-11;
            if (ra) {
                rV = 1 / rV;
                var rL = this.rawData.data[0];
                var re = this.rawData.data[4];
                var qZ = this.rawData.data[8];
                var rO = this.rawData.data[12];
                var rJ = this.rawData.data[1];
                var rd = this.rawData.data[5];
                var qY = this.rawData.data[9];
                var rN = this.rawData.data[13];
                var rH = this.rawData.data[2];
                var rc = this.rawData.data[6];
                var js = this.rawData.data[10];
                var rM = this.rawData.data[14];
                var rF = this.rawData.data[3];
                var rb = this.rawData.data[7];
                var i2 = this.rawData.data[11];
                var rK = this.rawData.data[15];
                var rx = this.rawData;
                if (!rx.fixed) {
                    if (0 >= rx.length) {
                        rx.length = 1
                    }
                    if (rx.data.length < rx.length) {
                        var rU;
                        var rw;
                        rw = new Array(rx.data.length + 10);
                        rU = rw;
                        dQ.blit(rx.data, 0, rU, 0, rx.data.length);
                        rx.data = rU
                    }
                }
                rx.data[0] = rV * (rd * (js * rK - rM * i2) - qY * (rc * rK - rM * rb) + rN * (rc * i2 - js * rb));
                var rv = this.rawData;
                if (!rv.fixed) {
                    if (1 >= rv.length) {
                        rv.length = 2
                    }
                    if (rv.data.length < rv.length) {
                        var rI;
                        var ru;
                        ru = new Array(rv.data.length + 10);
                        rI = ru;
                        dQ.blit(rv.data, 0, rI, 0, rv.data.length);
                        rv.data = rI
                    }
                }
                rv.data[1] = -rV * (rJ * (js * rK - rM * i2) - qY * (rH * rK - rM * rF) + rN * (rH * i2 - js * rF));
                var rt = this.rawData;
                if (!rt.fixed) {
                    if (2 >= rt.length) {
                        rt.length = 3
                    }
                    if (rt.data.length < rt.length) {
                        var rG;
                        var rs;
                        rs = new Array(rt.data.length + 10);
                        rG = rs;
                        dQ.blit(rt.data, 0, rG, 0, rt.data.length);
                        rt.data = rG
                    }
                }
                rt.data[2] = rV * (rJ * (rc * rK - rM * rb) - rd * (rH * rK - rM * rF) + rN * (rH * rb - rc * rF));
                var rq = this.rawData;
                if (!rq.fixed) {
                    if (3 >= rq.length) {
                        rq.length = 4
                    }
                    if (rq.data.length < rq.length) {
                        var rE;
                        var ro;
                        ro = new Array(rq.data.length + 10);
                        rE = ro;
                        dQ.blit(rq.data, 0, rE, 0, rq.data.length);
                        rq.data = rE
                    }
                }
                rq.data[3] = -rV * (rJ * (rc * i2 - js * rb) - rd * (rH * i2 - js * rF) + qY * (rH * rb - rc * rF));
                var rm = this.rawData;
                if (!rm.fixed) {
                    if (4 >= rm.length) {
                        rm.length = 5
                    }
                    if (rm.data.length < rm.length) {
                        var rD;
                        var rr;
                        rr = new Array(rm.data.length + 10);
                        rD = rr;
                        dQ.blit(rm.data, 0, rD, 0, rm.data.length);
                        rm.data = rD
                    }
                }
                rm.data[4] = -rV * (re * (js * rK - rM * i2) - qZ * (rc * rK - rM * rb) + rO * (rc * i2 - js * rb));
                var rp = this.rawData;
                if (!rp.fixed) {
                    if (5 >= rp.length) {
                        rp.length = 6
                    }
                    if (rp.data.length < rp.length) {
                        var rC;
                        var rn;
                        rn = new Array(rp.data.length + 10);
                        rC = rn;
                        dQ.blit(rp.data, 0, rC, 0, rp.data.length);
                        rp.data = rC
                    }
                }
                rp.data[5] = rV * (rL * (js * rK - rM * i2) - qZ * (rH * rK - rM * rF) + rO * (rH * i2 - js * rF));
                var rl = this.rawData;
                if (!rl.fixed) {
                    if (6 >= rl.length) {
                        rl.length = 7
                    }
                    if (rl.data.length < rl.length) {
                        var rB;
                        var rk;
                        rk = new Array(rl.data.length + 10);
                        rB = rk;
                        dQ.blit(rl.data, 0, rB, 0, rl.data.length);
                        rl.data = rB
                    }
                }
                rl.data[6] = -rV * (rL * (rc * rK - rM * rb) - re * (rH * rK - rM * rF) + rO * (rH * rb - rc * rF));
                var rj = this.rawData;
                if (!rj.fixed) {
                    if (7 >= rj.length) {
                        rj.length = 8
                    }
                    if (rj.data.length < rj.length) {
                        var rA;
                        var ri;
                        ri = new Array(rj.data.length + 10);
                        rA = ri;
                        dQ.blit(rj.data, 0, rA, 0, rj.data.length);
                        rj.data = rA
                    }
                }
                rj.data[7] = rV * (rL * (rc * i2 - js * rb) - re * (rH * i2 - js * rF) + qZ * (rH * rb - rc * rF));
                var rh = this.rawData;
                if (!rh.fixed) {
                    if (8 >= rh.length) {
                        rh.length = 9
                    }
                    if (rh.data.length < rh.length) {
                        var rz;
                        var rg;
                        rg = new Array(rh.data.length + 10);
                        rz = rg;
                        dQ.blit(rh.data, 0, rz, 0, rh.data.length);
                        rh.data = rz
                    }
                }
                rh.data[8] = rV * (re * (qY * rK - rN * i2) - qZ * (rd * rK - rN * rb) + rO * (rd * i2 - qY * rb));
                var rf = this.rawData;
                if (!rf.fixed) {
                    if (9 >= rf.length) {
                        rf.length = 10
                    }
                    if (rf.data.length < rf.length) {
                        var ry;
                        var q9;
                        q9 = new Array(rf.data.length + 10);
                        ry = q9;
                        dQ.blit(rf.data, 0, ry, 0, rf.data.length);
                        rf.data = ry
                    }
                }
                rf.data[9] = -rV * (rL * (qY * rK - rN * i2) - qZ * (rJ * rK - rN * rF) + rO * (rJ * i2 - qY * rF));
                var q8 = this.rawData;
                if (!q8.fixed) {
                    if (10 >= q8.length) {
                        q8.length = 11
                    }
                    if (q8.data.length < q8.length) {
                        var rW;
                        var q7;
                        q7 = new Array(q8.data.length + 10);
                        rW = q7;
                        dQ.blit(q8.data, 0, rW, 0, q8.data.length);
                        q8.data = rW
                    }
                }
                q8.data[10] = rV * (rL * (rd * rK - rN * rb) - re * (rJ * rK - rN * rF) + rO * (rJ * rb - rd * rF));
                var q6 = this.rawData;
                if (!q6.fixed) {
                    if (11 >= q6.length) {
                        q6.length = 12
                    }
                    if (q6.data.length < q6.length) {
                        var rT;
                        var q5;
                        q5 = new Array(q6.data.length + 10);
                        rT = q5;
                        dQ.blit(q6.data, 0, rT, 0, q6.data.length);
                        q6.data = rT
                    }
                }
                q6.data[11] = -rV * (rL * (rd * i2 - qY * rb) - re * (rJ * i2 - qY * rF) + qZ * (rJ * rb - rd * rF));
                var q4 = this.rawData;
                if (!q4.fixed) {
                    if (12 >= q4.length) {
                        q4.length = 13
                    }
                    if (q4.data.length < q4.length) {
                        var rS;
                        var q3;
                        q3 = new Array(q4.data.length + 10);
                        rS = q3;
                        dQ.blit(q4.data, 0, rS, 0, q4.data.length);
                        q4.data = rS
                    }
                }
                q4.data[12] = -rV * (re * (qY * rM - rN * js) - qZ * (rd * rM - rN * rc) + rO * (rd * js - qY * rc));
                var q2 = this.rawData;
                if (!q2.fixed) {
                    if (13 >= q2.length) {
                        q2.length = 14
                    }
                    if (q2.data.length < q2.length) {
                        var rR;
                        var q1;
                        q1 = new Array(q2.data.length + 10);
                        rR = q1;
                        dQ.blit(q2.data, 0, rR, 0, q2.data.length);
                        q2.data = rR
                    }
                }
                q2.data[13] = rV * (rL * (qY * rM - rN * js) - qZ * (rJ * rM - rN * rH) + rO * (rJ * js - qY * rH));
                var q0 = this.rawData;
                if (!q0.fixed) {
                    if (14 >= q0.length) {
                        q0.length = 15
                    }
                    if (q0.data.length < q0.length) {
                        var rQ;
                        var i1;
                        i1 = new Array(q0.data.length + 10);
                        rQ = i1;
                        dQ.blit(q0.data, 0, rQ, 0, q0.data.length);
                        q0.data = rQ
                    }
                }
                q0.data[14] = -rV * (rL * (rd * rM - rN * rc) - re * (rJ * rM - rN * rH) + rO * (rJ * rc - rd * rH));
                var q = this.rawData;
                if (!q.fixed) {
                    if (15 >= q.length) {
                        q.length = 16
                    }
                    if (q.data.length < q.length) {
                        var rP;
                        var i;
                        i = new Array(q.data.length + 10);
                        rP = i;
                        dQ.blit(q.data, 0, rP, 0, q.data.length);
                        q.data = rP
                    }
                }
                q.data[15] = rV * (rL * (rd * js - qY * rc) - re * (rJ * js - qY * rH) + qZ * (rJ * rc - rd * rH))
            }
            return ra
        },
        pointAt: function(q8, i2, rd) {
            if (i2 == null) {
                i2 = new ok(0, 0, -1)
            }
            if (rd == null) {
                rd = new ok(0, -1, 0)
            }
            var rK = i2.subtract(q8);
            var rL = rd.clone();
            var ry;
            rK.normalize();
            rL.normalize();
            var js = rK.clone();
            js.scaleBy(rL.dotProduct(rK));
            rL = rL.subtract(js);
            if (rL.get_length() > 0) {
                rL.normalize()
            } else {
                if (rK.x != 0) {
                    rL = new ok(-rK.y, rK.x, 0)
                } else {
                    rL = new ok(1, 0, 0)
                }
            }
            ry = rL.crossProduct(rK);
            ry.normalize();
            var rs = this.rawData;
            if (!rs.fixed) {
                if (0 >= rs.length) {
                    rs.length = 1
                }
                if (rs.data.length < rs.length) {
                    var rI;
                    var rr;
                    rr = new Array(rs.data.length + 10);
                    rI = rr;
                    dQ.blit(rs.data, 0, rI, 0, rs.data.length);
                    rs.data = rI
                }
            }
            rs.data[0] = ry.x;
            var rq = this.rawData;
            if (!rq.fixed) {
                if (4 >= rq.length) {
                    rq.length = 5
                }
                if (rq.data.length < rq.length) {
                    var rC;
                    var rp;
                    rp = new Array(rq.data.length + 10);
                    rC = rp;
                    dQ.blit(rq.data, 0, rC, 0, rq.data.length);
                    rq.data = rC
                }
            }
            rq.data[4] = ry.y;
            var ro = this.rawData;
            if (!ro.fixed) {
                if (8 >= ro.length) {
                    ro.length = 9
                }
                if (ro.data.length < ro.length) {
                    var rB;
                    var rn;
                    rn = new Array(ro.data.length + 10);
                    rB = rn;
                    dQ.blit(ro.data, 0, rB, 0, ro.data.length);
                    ro.data = rB
                }
            }
            ro.data[8] = ry.z;
            var rl = this.rawData;
            if (!rl.fixed) {
                if (12 >= rl.length) {
                    rl.length = 13
                }
                if (rl.data.length < rl.length) {
                    var rA;
                    var rj;
                    rj = new Array(rl.data.length + 10);
                    rA = rj;
                    dQ.blit(rl.data, 0, rA, 0, rl.data.length);
                    rl.data = rA
                }
            }
            rl.data[12] = 0;
            var rh = this.rawData;
            if (!rh.fixed) {
                if (1 >= rh.length) {
                    rh.length = 2
                }
                if (rh.data.length < rh.length) {
                    var rz;
                    var rm;
                    rm = new Array(rh.data.length + 10);
                    rz = rm;
                    dQ.blit(rh.data, 0, rz, 0, rh.data.length);
                    rh.data = rz
                }
            }
            rh.data[1] = rL.x;
            var rk = this.rawData;
            if (!rk.fixed) {
                if (5 >= rk.length) {
                    rk.length = 6
                }
                if (rk.data.length < rk.length) {
                    var rx;
                    var ri;
                    ri = new Array(rk.data.length + 10);
                    rx = ri;
                    dQ.blit(rk.data, 0, rx, 0, rk.data.length);
                    rk.data = rx
                }
            }
            rk.data[5] = rL.y;
            var rg = this.rawData;
            if (!rg.fixed) {
                if (9 >= rg.length) {
                    rg.length = 10
                }
                if (rg.data.length < rg.length) {
                    var rw;
                    var rf;
                    rf = new Array(rg.data.length + 10);
                    rw = rf;
                    dQ.blit(rg.data, 0, rw, 0, rg.data.length);
                    rg.data = rw
                }
            }
            rg.data[9] = rL.z;
            var re = this.rawData;
            if (!re.fixed) {
                if (13 >= re.length) {
                    re.length = 14
                }
                if (re.data.length < re.length) {
                    var rv;
                    var rc;
                    rc = new Array(re.data.length + 10);
                    rv = rc;
                    dQ.blit(re.data, 0, rv, 0, re.data.length);
                    re.data = rv
                }
            }
            re.data[13] = 0;
            var rb = this.rawData;
            if (!rb.fixed) {
                if (2 >= rb.length) {
                    rb.length = 3
                }
                if (rb.data.length < rb.length) {
                    var ru;
                    var ra;
                    ra = new Array(rb.data.length + 10);
                    ru = ra;
                    dQ.blit(rb.data, 0, ru, 0, rb.data.length);
                    rb.data = ru
                }
            }
            rb.data[2] = rK.x;
            var q9 = this.rawData;
            if (!q9.fixed) {
                if (6 >= q9.length) {
                    q9.length = 7
                }
                if (q9.data.length < q9.length) {
                    var rt;
                    var q7;
                    q7 = new Array(q9.data.length + 10);
                    rt = q7;
                    dQ.blit(q9.data, 0, rt, 0, q9.data.length);
                    q9.data = rt
                }
            }
            q9.data[6] = rK.y;
            var q6 = this.rawData;
            if (!q6.fixed) {
                if (10 >= q6.length) {
                    q6.length = 11
                }
                if (q6.data.length < q6.length) {
                    var rJ;
                    var q5;
                    q5 = new Array(q6.data.length + 10);
                    rJ = q5;
                    dQ.blit(q6.data, 0, rJ, 0, q6.data.length);
                    q6.data = rJ
                }
            }
            q6.data[10] = rK.z;
            var q4 = this.rawData;
            if (!q4.fixed) {
                if (14 >= q4.length) {
                    q4.length = 15
                }
                if (q4.data.length < q4.length) {
                    var rH;
                    var q3;
                    q3 = new Array(q4.data.length + 10);
                    rH = q3;
                    dQ.blit(q4.data, 0, rH, 0, q4.data.length);
                    q4.data = rH
                }
            }
            q4.data[14] = 0;
            var q2 = this.rawData;
            if (!q2.fixed) {
                if (3 >= q2.length) {
                    q2.length = 4
                }
                if (q2.data.length < q2.length) {
                    var rG;
                    var q1;
                    q1 = new Array(q2.data.length + 10);
                    rG = q1;
                    dQ.blit(q2.data, 0, rG, 0, q2.data.length);
                    q2.data = rG
                }
            }
            q2.data[3] = q8.x;
            var q0 = this.rawData;
            if (!q0.fixed) {
                if (7 >= q0.length) {
                    q0.length = 8
                }
                if (q0.data.length < q0.length) {
                    var rF;
                    var qZ;
                    qZ = new Array(q0.data.length + 10);
                    rF = qZ;
                    dQ.blit(q0.data, 0, rF, 0, q0.data.length);
                    q0.data = rF
                }
            }
            q0.data[7] = q8.y;
            var qY = this.rawData;
            if (!qY.fixed) {
                if (11 >= qY.length) {
                    qY.length = 12
                }
                if (qY.data.length < qY.length) {
                    var rE;
                    var i1;
                    i1 = new Array(qY.data.length + 10);
                    rE = i1;
                    dQ.blit(qY.data, 0, rE, 0, qY.data.length);
                    qY.data = rE
                }
            }
            qY.data[11] = q8.z;
            var q = this.rawData;
            if (!q.fixed) {
                if (15 >= q.length) {
                    q.length = 16
                }
                if (q.data.length < q.length) {
                    var rD;
                    var i;
                    i = new Array(q.data.length + 10);
                    rD = i;
                    dQ.blit(q.data, 0, rD, 0, q.data.length);
                    q.data = rD
                }
            }
            q.data[15] = 1
        },
        prepend: function(r9) {
            var rh = r9.rawData.data[0];
            var sb = r9.rawData.data[4];
            var r2 = r9.rawData.data[8];
            var rQ = r9.rawData.data[12];
            var rf = r9.rawData.data[1];
            var sa = r9.rawData.data[5];
            var r1 = r9.rawData.data[9];
            var rO = r9.rawData.data[13];
            var rd = r9.rawData.data[2];
            var r8 = r9.rawData.data[6];
            var r0 = r9.rawData.data[10];
            var rM = r9.rawData.data[14];
            var rb = r9.rawData.data[3];
            var r7 = r9.rawData.data[7];
            var rZ = r9.rawData.data[11];
            var rK = r9.rawData.data[15];
            var q7 = this.rawData.data[0];
            var r6 = this.rawData.data[4];
            var rY = this.rawData.data[8];
            var rH = this.rawData.data[12];
            var q5 = this.rawData.data[1];
            var r5 = this.rawData.data[5];
            var rX = this.rawData.data[9];
            var rG = this.rawData.data[13];
            var q3 = this.rawData.data[2];
            var r4 = this.rawData.data[6];
            var rW = this.rawData.data[10];
            var rF = this.rawData.data[14];
            var q2 = this.rawData.data[3];
            var r3 = this.rawData.data[7];
            var rV = this.rawData.data[11];
            var rE = this.rawData.data[15];
            var rU = this.rawData;
            if (!rU.fixed) {
                if (0 >= rU.length) {
                    rU.length = 1
                }
                if (rU.data.length < rU.length) {
                    var rm;
                    var rT;
                    rT = new Array(rU.data.length + 10);
                    rm = rT;
                    dQ.blit(rU.data, 0, rm, 0, rU.data.length);
                    rU.data = rm
                }
            }
            rU.data[0] = rh * q7 + rf * r6 + rd * rY + rb * rH;
            var rS = this.rawData;
            if (!rS.fixed) {
                if (1 >= rS.length) {
                    rS.length = 2
                }
                if (rS.data.length < rS.length) {
                    var q1;
                    var rR;
                    rR = new Array(rS.data.length + 10);
                    q1 = rR;
                    dQ.blit(rS.data, 0, q1, 0, rS.data.length);
                    rS.data = q1
                }
            }
            rS.data[1] = rh * q5 + rf * r5 + rd * rX + rb * rG;
            var rP = this.rawData;
            if (!rP.fixed) {
                if (2 >= rP.length) {
                    rP.length = 3
                }
                if (rP.data.length < rP.length) {
                    var q0;
                    var rN;
                    rN = new Array(rP.data.length + 10);
                    q0 = rN;
                    dQ.blit(rP.data, 0, q0, 0, rP.data.length);
                    rP.data = q0
                }
            }
            rP.data[2] = rh * q3 + rf * r4 + rd * rW + rb * rF;
            var rL = this.rawData;
            if (!rL.fixed) {
                if (3 >= rL.length) {
                    rL.length = 4
                }
                if (rL.data.length < rL.length) {
                    var qZ;
                    var rJ;
                    rJ = new Array(rL.data.length + 10);
                    qZ = rJ;
                    dQ.blit(rL.data, 0, qZ, 0, rL.data.length);
                    rL.data = qZ
                }
            }
            rL.data[3] = rh * q2 + rf * r3 + rd * rV + rb * rE;
            var rI = this.rawData;
            if (!rI.fixed) {
                if (4 >= rI.length) {
                    rI.length = 5
                }
                if (rI.data.length < rI.length) {
                    var qY;
                    var rD;
                    rD = new Array(rI.data.length + 10);
                    qY = rD;
                    dQ.blit(rI.data, 0, qY, 0, rI.data.length);
                    rI.data = qY
                }
            }
            rI.data[4] = sb * q7 + sa * r6 + r8 * rY + r7 * rH;
            var rC = this.rawData;
            if (!rC.fixed) {
                if (5 >= rC.length) {
                    rC.length = 6
                }
                if (rC.data.length < rC.length) {
                    var js;
                    var rB;
                    rB = new Array(rC.data.length + 10);
                    js = rB;
                    dQ.blit(rC.data, 0, js, 0, rC.data.length);
                    rC.data = js
                }
            }
            rC.data[5] = sb * q5 + sa * r5 + r8 * rX + r7 * rG;
            var rA = this.rawData;
            if (!rA.fixed) {
                if (6 >= rA.length) {
                    rA.length = 7
                }
                if (rA.data.length < rA.length) {
                    var i2;
                    var rz;
                    rz = new Array(rA.data.length + 10);
                    i2 = rz;
                    dQ.blit(rA.data, 0, i2, 0, rA.data.length);
                    rA.data = i2
                }
            }
            rA.data[6] = sb * q3 + sa * r4 + r8 * rW + r7 * rF;
            var ry = this.rawData;
            if (!ry.fixed) {
                if (7 >= ry.length) {
                    ry.length = 8
                }
                if (ry.data.length < ry.length) {
                    var i1;
                    var rx;
                    rx = new Array(ry.data.length + 10);
                    i1 = rx;
                    dQ.blit(ry.data, 0, i1, 0, ry.data.length);
                    ry.data = i1
                }
            }
            ry.data[7] = sb * q2 + sa * r3 + r8 * rV + r7 * rE;
            var rw = this.rawData;
            if (!rw.fixed) {
                if (8 >= rw.length) {
                    rw.length = 9
                }
                if (rw.data.length < rw.length) {
                    var q;
                    var rv;
                    rv = new Array(rw.data.length + 10);
                    q = rv;
                    dQ.blit(rw.data, 0, q, 0, rw.data.length);
                    rw.data = q
                }
            }
            rw.data[8] = r2 * q7 + r1 * r6 + r0 * rY + rZ * rH;
            var ru = this.rawData;
            if (!ru.fixed) {
                if (9 >= ru.length) {
                    ru.length = 10
                }
                if (ru.data.length < ru.length) {
                    var i;
                    var rt;
                    rt = new Array(ru.data.length + 10);
                    i = rt;
                    dQ.blit(ru.data, 0, i, 0, ru.data.length);
                    ru.data = i
                }
            }
            ru.data[9] = r2 * q5 + r1 * r5 + r0 * rX + rZ * rG;
            var rs = this.rawData;
            if (!rs.fixed) {
                if (10 >= rs.length) {
                    rs.length = 11
                }
                if (rs.data.length < rs.length) {
                    var rc;
                    var rr;
                    rr = new Array(rs.data.length + 10);
                    rc = rr;
                    dQ.blit(rs.data, 0, rc, 0, rs.data.length);
                    rs.data = rc
                }
            }
            rs.data[10] = r2 * q3 + r1 * r4 + r0 * rW + rZ * rF;
            var rq = this.rawData;
            if (!rq.fixed) {
                if (11 >= rq.length) {
                    rq.length = 12
                }
                if (rq.data.length < rq.length) {
                    var ra;
                    var rp;
                    rp = new Array(rq.data.length + 10);
                    ra = rp;
                    dQ.blit(rq.data, 0, ra, 0, rq.data.length);
                    rq.data = ra
                }
            }
            rq.data[11] = r2 * q2 + r1 * r3 + r0 * rV + rZ * rE;
            var ro = this.rawData;
            if (!ro.fixed) {
                if (12 >= ro.length) {
                    ro.length = 13
                }
                if (ro.data.length < ro.length) {
                    var q9;
                    var rn;
                    rn = new Array(ro.data.length + 10);
                    q9 = rn;
                    dQ.blit(ro.data, 0, q9, 0, ro.data.length);
                    ro.data = q9
                }
            }
            ro.data[12] = rQ * q7 + rO * r6 + rM * rY + rK * rH;
            var rl = this.rawData;
            if (!rl.fixed) {
                if (13 >= rl.length) {
                    rl.length = 14
                }
                if (rl.data.length < rl.length) {
                    var q8;
                    var rk;
                    rk = new Array(rl.data.length + 10);
                    q8 = rk;
                    dQ.blit(rl.data, 0, q8, 0, rl.data.length);
                    rl.data = q8
                }
            }
            rl.data[13] = rQ * q5 + rO * r5 + rM * rX + rK * rG;
            var rj = this.rawData;
            if (!rj.fixed) {
                if (14 >= rj.length) {
                    rj.length = 15
                }
                if (rj.data.length < rj.length) {
                    var q6;
                    var ri;
                    ri = new Array(rj.data.length + 10);
                    q6 = ri;
                    dQ.blit(rj.data, 0, q6, 0, rj.data.length);
                    rj.data = q6
                }
            }
            rj.data[14] = rQ * q3 + rO * r4 + rM * rW + rK * rF;
            var rg = this.rawData;
            if (!rg.fixed) {
                if (15 >= rg.length) {
                    rg.length = 16
                }
                if (rg.data.length < rg.length) {
                    var q4;
                    var re;
                    re = new Array(rg.data.length + 10);
                    q4 = re;
                    dQ.blit(rg.data, 0, q4, 0, rg.data.length);
                    rg.data = q4
                }
            }
            rg.data[15] = rQ * q2 + rO * r3 + rM * rV + rK * rE
        },
        prependRotation: function(js, i1, q) {
            var i = aW.__getAxisRotation(i1.x, i1.y, i1.z, js);
            if (q != null) {
                var i2 = q;
                i.appendTranslation(i2.x, i2.y, i2.z)
            }
            this.prepend(i)
        },
        prependScale: function(i1, q, i) {
            this.prepend(new aW((function(q2) {
                var q1;
                var q4 = [i1, 0, 0, 0, 0, q, 0, 0, 0, 0, i, 0, 0, 0, 0, 1];
                var js = new p0();
                js.length = q4.length;
                js.fixed = true;
                var i2;
                var q0;
                q0 = new Array(q4.length);
                i2 = q0;
                var q3 = 0;
                var qZ = q4.length;
                while (q3 < qZ) {
                    var qY = q3++;
                    i2[qY] = q4[qY]
                }
                js.data = i2;
                q1 = js;
                return q1
            }(this))))
        },
        prependTranslation: function(q, i2, i1) {
            var i = new aW();
            i.set_position(new ok(q, i2, i1));
            this.prepend(i)
        },
        recompose: function(r8, r9) {
            if (r8.length < 3 || r8.data[2].x == 0 || r8.data[2].y == 0 || r8.data[2].z == 0) {
                return false
            }
            if (r9 == null) {
                r9 = 1
            }
            this.identity();
            var ss = [];
            ss[0] = ss[1] = ss[2] = r8.data[2].x;
            ss[4] = ss[5] = ss[6] = r8.data[2].y;
            ss[8] = ss[9] = ss[10] = r8.data[2].z;
            if (r9 != null) {
                switch (r9) {
                    case 1:
                        var rz = Math.cos(r8.data[1].x);
                        var ry = Math.cos(r8.data[1].y);
                        var rx = Math.cos(r8.data[1].z);
                        var sc = Math.sin(r8.data[1].x);
                        var sb = Math.sin(r8.data[1].y);
                        var sa = Math.sin(r8.data[1].z);
                        var r7 = this.rawData;
                        if (!r7.fixed) {
                            if (0 >= r7.length) {
                                r7.length = 1
                            }
                            if (r7.data.length < r7.length) {
                                var ro;
                                var r6;
                                r6 = new Array(r7.data.length + 10);
                                ro = r6;
                                dQ.blit(r7.data, 0, ro, 0, r7.data.length);
                                r7.data = ro
                            }
                        }
                        r7.data[0] = ry * rx * ss[0];
                        var r5 = this.rawData;
                        if (!r5.fixed) {
                            if (1 >= r5.length) {
                                r5.length = 2
                            }
                            if (r5.data.length < r5.length) {
                                var q2;
                                var r4;
                                r4 = new Array(r5.data.length + 10);
                                q2 = r4;
                                dQ.blit(r5.data, 0, q2, 0, r5.data.length);
                                r5.data = q2
                            }
                        }
                        r5.data[1] = ry * sa * ss[1];
                        var r2 = this.rawData;
                        if (!r2.fixed) {
                            if (2 >= r2.length) {
                                r2.length = 3
                            }
                            if (r2.data.length < r2.length) {
                                var q0;
                                var r0;
                                r0 = new Array(r2.data.length + 10);
                                q0 = r0;
                                dQ.blit(r2.data, 0, q0, 0, r2.data.length);
                                r2.data = q0
                            }
                        }
                        r2.data[2] = -sb * ss[2];
                        var rY = this.rawData;
                        if (!rY.fixed) {
                            if (3 >= rY.length) {
                                rY.length = 4
                            }
                            if (rY.data.length < rY.length) {
                                var qZ;
                                var rW;
                                rW = new Array(rY.data.length + 10);
                                qZ = rW;
                                dQ.blit(rY.data, 0, qZ, 0, rY.data.length);
                                rY.data = qZ
                            }
                        }
                        rY.data[3] = 0;
                        var rU = this.rawData;
                        if (!rU.fixed) {
                            if (4 >= rU.length) {
                                rU.length = 5
                            }
                            if (rU.data.length < rU.length) {
                                var qY;
                                var rN;
                                rN = new Array(rU.data.length + 10);
                                qY = rN;
                                dQ.blit(rU.data, 0, qY, 0, rU.data.length);
                                rU.data = qY
                            }
                        }
                        rU.data[4] = (sc * sb * rx - rz * sa) * ss[4];
                        var rM = this.rawData;
                        if (!rM.fixed) {
                            if (5 >= rM.length) {
                                rM.length = 6
                            }
                            if (rM.data.length < rM.length) {
                                var js;
                                var rL;
                                rL = new Array(rM.data.length + 10);
                                js = rL;
                                dQ.blit(rM.data, 0, js, 0, rM.data.length);
                                rM.data = js
                            }
                        }
                        rM.data[5] = (sc * sb * sa + rz * rx) * ss[5];
                        var rK = this.rawData;
                        if (!rK.fixed) {
                            if (6 >= rK.length) {
                                rK.length = 7
                            }
                            if (rK.data.length < rK.length) {
                                var i2;
                                var rJ;
                                rJ = new Array(rK.data.length + 10);
                                i2 = rJ;
                                dQ.blit(rK.data, 0, i2, 0, rK.data.length);
                                rK.data = i2
                            }
                        }
                        rK.data[6] = sc * ry * ss[6];
                        var rI = this.rawData;
                        if (!rI.fixed) {
                            if (7 >= rI.length) {
                                rI.length = 8
                            }
                            if (rI.data.length < rI.length) {
                                var i1;
                                var rH;
                                rH = new Array(rI.data.length + 10);
                                i1 = rH;
                                dQ.blit(rI.data, 0, i1, 0, rI.data.length);
                                rI.data = i1
                            }
                        }
                        rI.data[7] = 0;
                        var rG = this.rawData;
                        if (!rG.fixed) {
                            if (8 >= rG.length) {
                                rG.length = 9
                            }
                            if (rG.data.length < rG.length) {
                                var q;
                                var rF;
                                rF = new Array(rG.data.length + 10);
                                q = rF;
                                dQ.blit(rG.data, 0, q, 0, rG.data.length);
                                rG.data = q
                            }
                        }
                        rG.data[8] = (rz * sb * rx + sc * sa) * ss[8];
                        var rE = this.rawData;
                        if (!rE.fixed) {
                            if (9 >= rE.length) {
                                rE.length = 10
                            }
                            if (rE.data.length < rE.length) {
                                var i;
                                var rw;
                                rw = new Array(rE.data.length + 10);
                                i = rw;
                                dQ.blit(rE.data, 0, i, 0, rE.data.length);
                                rE.data = i
                            }
                        }
                        rE.data[9] = (rz * sb * sa - sc * rx) * ss[9];
                        var rv = this.rawData;
                        if (!rv.fixed) {
                            if (10 >= rv.length) {
                                rv.length = 11
                            }
                            if (rv.data.length < rv.length) {
                                var rh;
                                var ru;
                                ru = new Array(rv.data.length + 10);
                                rh = ru;
                                dQ.blit(rv.data, 0, rh, 0, rv.data.length);
                                rv.data = rh
                            }
                        }
                        rv.data[10] = rz * ry * ss[10];
                        var rt = this.rawData;
                        if (!rt.fixed) {
                            if (11 >= rt.length) {
                                rt.length = 12
                            }
                            if (rt.data.length < rt.length) {
                                var rg;
                                var rs;
                                rs = new Array(rt.data.length + 10);
                                rg = rs;
                                dQ.blit(rt.data, 0, rg, 0, rt.data.length);
                                rt.data = rg
                            }
                        }
                        rt.data[11] = 0;
                        var rr = this.rawData;
                        if (!rr.fixed) {
                            if (12 >= rr.length) {
                                rr.length = 13
                            }
                            if (rr.data.length < rr.length) {
                                var re;
                                var rq;
                                rq = new Array(rr.data.length + 10);
                                re = rq;
                                dQ.blit(rr.data, 0, re, 0, rr.data.length);
                                rr.data = re
                            }
                        }
                        rr.data[12] = r8.data[0].x;
                        var rp = this.rawData;
                        if (!rp.fixed) {
                            if (13 >= rp.length) {
                                rp.length = 14
                            }
                            if (rp.data.length < rp.length) {
                                var rc;
                                var rn;
                                rn = new Array(rp.data.length + 10);
                                rc = rn;
                                dQ.blit(rp.data, 0, rc, 0, rp.data.length);
                                rp.data = rc
                            }
                        }
                        rp.data[13] = r8.data[0].y;
                        var rm = this.rawData;
                        if (!rm.fixed) {
                            if (14 >= rm.length) {
                                rm.length = 15
                            }
                            if (rm.data.length < rm.length) {
                                var ra;
                                var rl;
                                rl = new Array(rm.data.length + 10);
                                ra = rl;
                                dQ.blit(rm.data, 0, ra, 0, rm.data.length);
                                rm.data = ra
                            }
                        }
                        rm.data[14] = r8.data[0].z;
                        var rk = this.rawData;
                        if (!rk.fixed) {
                            if (15 >= rk.length) {
                                rk.length = 16
                            }
                            if (rk.data.length < rk.length) {
                                var q8;
                                var rj;
                                rj = new Array(rk.data.length + 10);
                                q8 = rj;
                                dQ.blit(rk.data, 0, q8, 0, rk.data.length);
                                rk.data = q8
                            }
                        }
                        rk.data[15] = 1;
                        break;
                    default:
                        var rC = r8.data[1].x;
                        var rB = r8.data[1].y;
                        var rA = r8.data[1].z;
                        var rD = r8.data[1].w;
                        if (kX.enumEq(r9, 0)) {
                            rC *= Math.sin(rD / 2);
                            rB *= Math.sin(rD / 2);
                            rA *= Math.sin(rD / 2);
                            rD = Math.cos(rD / 2)
                        }
                        var ri = this.rawData;
                        if (!ri.fixed) {
                            if (0 >= ri.length) {
                                ri.length = 1
                            }
                            if (ri.data.length < ri.length) {
                                var q6;
                                var rf;
                                rf = new Array(ri.data.length + 10);
                                q6 = rf;
                                dQ.blit(ri.data, 0, q6, 0, ri.data.length);
                                ri.data = q6
                            }
                        }
                        ri.data[0] = (1 - 2 * rB * rB - 2 * rA * rA) * ss[0];
                        var rd = this.rawData;
                        if (!rd.fixed) {
                            if (1 >= rd.length) {
                                rd.length = 2
                            }
                            if (rd.data.length < rd.length) {
                                var q4;
                                var rb;
                                rb = new Array(rd.data.length + 10);
                                q4 = rb;
                                dQ.blit(rd.data, 0, q4, 0, rd.data.length);
                                rd.data = q4
                            }
                        }
                        rd.data[1] = (2 * rC * rB + 2 * rD * rA) * ss[1];
                        var q9 = this.rawData;
                        if (!q9.fixed) {
                            if (2 >= q9.length) {
                                q9.length = 3
                            }
                            if (q9.data.length < q9.length) {
                                var q3;
                                var q7;
                                q7 = new Array(q9.data.length + 10);
                                q3 = q7;
                                dQ.blit(q9.data, 0, q3, 0, q9.data.length);
                                q9.data = q3
                            }
                        }
                        q9.data[2] = (2 * rC * rA - 2 * rD * rB) * ss[2];
                        var q5 = this.rawData;
                        if (!q5.fixed) {
                            if (3 >= q5.length) {
                                q5.length = 4
                            }
                            if (q5.data.length < q5.length) {
                                var q1;
                                var sP;
                                sP = new Array(q5.data.length + 10);
                                q1 = sP;
                                dQ.blit(q5.data, 0, q1, 0, q5.data.length);
                                q5.data = q1
                            }
                        }
                        q5.data[3] = 0;
                        var sO = this.rawData;
                        if (!sO.fixed) {
                            if (4 >= sO.length) {
                                sO.length = 5
                            }
                            if (sO.data.length < sO.length) {
                                var sM;
                                var sN;
                                sN = new Array(sO.data.length + 10);
                                sM = sN;
                                dQ.blit(sO.data, 0, sM, 0, sO.data.length);
                                sO.data = sM
                            }
                        }
                        sO.data[4] = (2 * rC * rB - 2 * rD * rA) * ss[4];
                        var sL = this.rawData;
                        if (!sL.fixed) {
                            if (5 >= sL.length) {
                                sL.length = 6
                            }
                            if (sL.data.length < sL.length) {
                                var sK;
                                var sJ;
                                sJ = new Array(sL.data.length + 10);
                                sK = sJ;
                                dQ.blit(sL.data, 0, sK, 0, sL.data.length);
                                sL.data = sK
                            }
                        }
                        sL.data[5] = (1 - 2 * rC * rC - 2 * rA * rA) * ss[5];
                        var sI = this.rawData;
                        if (!sI.fixed) {
                            if (6 >= sI.length) {
                                sI.length = 7
                            }
                            if (sI.data.length < sI.length) {
                                var sH;
                                var sG;
                                sG = new Array(sI.data.length + 10);
                                sH = sG;
                                dQ.blit(sI.data, 0, sH, 0, sI.data.length);
                                sI.data = sH
                            }
                        }
                        sI.data[6] = (2 * rB * rA + 2 * rD * rC) * ss[6];
                        var sE = this.rawData;
                        if (!sE.fixed) {
                            if (7 >= sE.length) {
                                sE.length = 8
                            }
                            if (sE.data.length < sE.length) {
                                var sF;
                                var sC;
                                sC = new Array(sE.data.length + 10);
                                sF = sC;
                                dQ.blit(sE.data, 0, sF, 0, sE.data.length);
                                sE.data = sF
                            }
                        }
                        sE.data[7] = 0;
                        var sA = this.rawData;
                        if (!sA.fixed) {
                            if (8 >= sA.length) {
                                sA.length = 9
                            }
                            if (sA.data.length < sA.length) {
                                var sD;
                                var sr;
                                sr = new Array(sA.data.length + 10);
                                sD = sr;
                                dQ.blit(sA.data, 0, sD, 0, sA.data.length);
                                sA.data = sD
                            }
                        }
                        sA.data[8] = (2 * rC * rA + 2 * rD * rB) * ss[8];
                        var sq = this.rawData;
                        if (!sq.fixed) {
                            if (9 >= sq.length) {
                                sq.length = 10
                            }
                            if (sq.data.length < sq.length) {
                                var sB;
                                var sp;
                                sp = new Array(sq.data.length + 10);
                                sB = sp;
                                dQ.blit(sq.data, 0, sB, 0, sq.data.length);
                                sq.data = sB
                            }
                        }
                        sq.data[9] = (2 * rB * rA - 2 * rD * rC) * ss[9];
                        var so = this.rawData;
                        if (!so.fixed) {
                            if (10 >= so.length) {
                                so.length = 11
                            }
                            if (so.data.length < so.length) {
                                var sw;
                                var sm;
                                sm = new Array(so.data.length + 10);
                                sw = sm;
                                dQ.blit(so.data, 0, sw, 0, so.data.length);
                                so.data = sw
                            }
                        }
                        so.data[10] = (1 - 2 * rC * rC - 2 * rB * rB) * ss[10];
                        var sk = this.rawData;
                        if (!sk.fixed) {
                            if (11 >= sk.length) {
                                sk.length = 12
                            }
                            if (sk.data.length < sk.length) {
                                var sv;
                                var si;
                                si = new Array(sk.data.length + 10);
                                sv = si;
                                dQ.blit(sk.data, 0, sv, 0, sk.data.length);
                                sk.data = sv
                            }
                        }
                        sk.data[11] = 0;
                        var sg = this.rawData;
                        if (!sg.fixed) {
                            if (12 >= sg.length) {
                                sg.length = 13
                            }
                            if (sg.data.length < sg.length) {
                                var su;
                                var se;
                                se = new Array(sg.data.length + 10);
                                su = se;
                                dQ.blit(sg.data, 0, su, 0, sg.data.length);
                                sg.data = su
                            }
                        }
                        sg.data[12] = r8.data[0].x;
                        var sd = this.rawData;
                        if (!sd.fixed) {
                            if (13 >= sd.length) {
                                sd.length = 14
                            }
                            if (sd.data.length < sd.length) {
                                var st;
                                var r3;
                                r3 = new Array(sd.data.length + 10);
                                st = r3;
                                dQ.blit(sd.data, 0, st, 0, sd.data.length);
                                sd.data = st
                            }
                        }
                        sd.data[13] = r8.data[0].y;
                        var r1 = this.rawData;
                        if (!r1.fixed) {
                            if (14 >= r1.length) {
                                r1.length = 15
                            }
                            if (r1.data.length < r1.length) {
                                var sn;
                                var rZ;
                                rZ = new Array(r1.data.length + 10);
                                sn = rZ;
                                dQ.blit(r1.data, 0, sn, 0, r1.data.length);
                                r1.data = sn
                            }
                        }
                        r1.data[14] = r8.data[0].z;
                        var rX = this.rawData;
                        if (!rX.fixed) {
                            if (15 >= rX.length) {
                                rX.length = 16
                            }
                            if (rX.data.length < rX.length) {
                                var sl;
                                var rV;
                                rV = new Array(rX.data.length + 10);
                                sl = rV;
                                dQ.blit(rX.data, 0, sl, 0, rX.data.length);
                                rX.data = sl
                            }
                        }
                        rX.data[15] = 1
                }
            } else {
                var rC = r8.data[1].x;
                var rB = r8.data[1].y;
                var rA = r8.data[1].z;
                var rD = r8.data[1].w;
                if (kX.enumEq(r9, 0)) {
                    rC *= Math.sin(rD / 2);
                    rB *= Math.sin(rD / 2);
                    rA *= Math.sin(rD / 2);
                    rD = Math.cos(rD / 2)
                }
                var ri = this.rawData;
                if (!ri.fixed) {
                    if (0 >= ri.length) {
                        ri.length = 1
                    }
                    if (ri.data.length < ri.length) {
                        var q6;
                        var rf;
                        rf = new Array(ri.data.length + 10);
                        q6 = rf;
                        dQ.blit(ri.data, 0, q6, 0, ri.data.length);
                        ri.data = q6
                    }
                }
                ri.data[0] = (1 - 2 * rB * rB - 2 * rA * rA) * ss[0];
                var rd = this.rawData;
                if (!rd.fixed) {
                    if (1 >= rd.length) {
                        rd.length = 2
                    }
                    if (rd.data.length < rd.length) {
                        var q4;
                        var rb;
                        rb = new Array(rd.data.length + 10);
                        q4 = rb;
                        dQ.blit(rd.data, 0, q4, 0, rd.data.length);
                        rd.data = q4
                    }
                }
                rd.data[1] = (2 * rC * rB + 2 * rD * rA) * ss[1];
                var q9 = this.rawData;
                if (!q9.fixed) {
                    if (2 >= q9.length) {
                        q9.length = 3
                    }
                    if (q9.data.length < q9.length) {
                        var q3;
                        var q7;
                        q7 = new Array(q9.data.length + 10);
                        q3 = q7;
                        dQ.blit(q9.data, 0, q3, 0, q9.data.length);
                        q9.data = q3
                    }
                }
                q9.data[2] = (2 * rC * rA - 2 * rD * rB) * ss[2];
                var q5 = this.rawData;
                if (!q5.fixed) {
                    if (3 >= q5.length) {
                        q5.length = 4
                    }
                    if (q5.data.length < q5.length) {
                        var q1;
                        var sP;
                        sP = new Array(q5.data.length + 10);
                        q1 = sP;
                        dQ.blit(q5.data, 0, q1, 0, q5.data.length);
                        q5.data = q1
                    }
                }
                q5.data[3] = 0;
                var sO = this.rawData;
                if (!sO.fixed) {
                    if (4 >= sO.length) {
                        sO.length = 5
                    }
                    if (sO.data.length < sO.length) {
                        var sM;
                        var sN;
                        sN = new Array(sO.data.length + 10);
                        sM = sN;
                        dQ.blit(sO.data, 0, sM, 0, sO.data.length);
                        sO.data = sM
                    }
                }
                sO.data[4] = (2 * rC * rB - 2 * rD * rA) * ss[4];
                var sL = this.rawData;
                if (!sL.fixed) {
                    if (5 >= sL.length) {
                        sL.length = 6
                    }
                    if (sL.data.length < sL.length) {
                        var sK;
                        var sJ;
                        sJ = new Array(sL.data.length + 10);
                        sK = sJ;
                        dQ.blit(sL.data, 0, sK, 0, sL.data.length);
                        sL.data = sK
                    }
                }
                sL.data[5] = (1 - 2 * rC * rC - 2 * rA * rA) * ss[5];
                var sI = this.rawData;
                if (!sI.fixed) {
                    if (6 >= sI.length) {
                        sI.length = 7
                    }
                    if (sI.data.length < sI.length) {
                        var sH;
                        var sG;
                        sG = new Array(sI.data.length + 10);
                        sH = sG;
                        dQ.blit(sI.data, 0, sH, 0, sI.data.length);
                        sI.data = sH
                    }
                }
                sI.data[6] = (2 * rB * rA + 2 * rD * rC) * ss[6];
                var sE = this.rawData;
                if (!sE.fixed) {
                    if (7 >= sE.length) {
                        sE.length = 8
                    }
                    if (sE.data.length < sE.length) {
                        var sF;
                        var sC;
                        sC = new Array(sE.data.length + 10);
                        sF = sC;
                        dQ.blit(sE.data, 0, sF, 0, sE.data.length);
                        sE.data = sF
                    }
                }
                sE.data[7] = 0;
                var sA = this.rawData;
                if (!sA.fixed) {
                    if (8 >= sA.length) {
                        sA.length = 9
                    }
                    if (sA.data.length < sA.length) {
                        var sD;
                        var sr;
                        sr = new Array(sA.data.length + 10);
                        sD = sr;
                        dQ.blit(sA.data, 0, sD, 0, sA.data.length);
                        sA.data = sD
                    }
                }
                sA.data[8] = (2 * rC * rA + 2 * rD * rB) * ss[8];
                var sq = this.rawData;
                if (!sq.fixed) {
                    if (9 >= sq.length) {
                        sq.length = 10
                    }
                    if (sq.data.length < sq.length) {
                        var sB;
                        var sp;
                        sp = new Array(sq.data.length + 10);
                        sB = sp;
                        dQ.blit(sq.data, 0, sB, 0, sq.data.length);
                        sq.data = sB
                    }
                }
                sq.data[9] = (2 * rB * rA - 2 * rD * rC) * ss[9];
                var so = this.rawData;
                if (!so.fixed) {
                    if (10 >= so.length) {
                        so.length = 11
                    }
                    if (so.data.length < so.length) {
                        var sw;
                        var sm;
                        sm = new Array(so.data.length + 10);
                        sw = sm;
                        dQ.blit(so.data, 0, sw, 0, so.data.length);
                        so.data = sw
                    }
                }
                so.data[10] = (1 - 2 * rC * rC - 2 * rB * rB) * ss[10];
                var sk = this.rawData;
                if (!sk.fixed) {
                    if (11 >= sk.length) {
                        sk.length = 12
                    }
                    if (sk.data.length < sk.length) {
                        var sv;
                        var si;
                        si = new Array(sk.data.length + 10);
                        sv = si;
                        dQ.blit(sk.data, 0, sv, 0, sk.data.length);
                        sk.data = sv
                    }
                }
                sk.data[11] = 0;
                var sg = this.rawData;
                if (!sg.fixed) {
                    if (12 >= sg.length) {
                        sg.length = 13
                    }
                    if (sg.data.length < sg.length) {
                        var su;
                        var se;
                        se = new Array(sg.data.length + 10);
                        su = se;
                        dQ.blit(sg.data, 0, su, 0, sg.data.length);
                        sg.data = su
                    }
                }
                sg.data[12] = r8.data[0].x;
                var sd = this.rawData;
                if (!sd.fixed) {
                    if (13 >= sd.length) {
                        sd.length = 14
                    }
                    if (sd.data.length < sd.length) {
                        var st;
                        var r3;
                        r3 = new Array(sd.data.length + 10);
                        st = r3;
                        dQ.blit(sd.data, 0, st, 0, sd.data.length);
                        sd.data = st
                    }
                }
                sd.data[13] = r8.data[0].y;
                var r1 = this.rawData;
                if (!r1.fixed) {
                    if (14 >= r1.length) {
                        r1.length = 15
                    }
                    if (r1.data.length < r1.length) {
                        var sn;
                        var rZ;
                        rZ = new Array(r1.data.length + 10);
                        sn = rZ;
                        dQ.blit(r1.data, 0, sn, 0, r1.data.length);
                        r1.data = sn
                    }
                }
                r1.data[14] = r8.data[0].z;
                var rX = this.rawData;
                if (!rX.fixed) {
                    if (15 >= rX.length) {
                        rX.length = 16
                    }
                    if (rX.data.length < rX.length) {
                        var sl;
                        var rV;
                        rV = new Array(rX.data.length + 10);
                        sl = rV;
                        dQ.blit(rX.data, 0, sl, 0, rX.data.length);
                        rX.data = sl
                    }
                }
                rX.data[15] = 1
            }
            if (r8.data[2].x == 0) {
                var rT = this.rawData;
                if (!rT.fixed) {
                    if (0 >= rT.length) {
                        rT.length = 1
                    }
                    if (rT.data.length < rT.length) {
                        var sj;
                        var rS;
                        rS = new Array(rT.data.length + 10);
                        sj = rS;
                        dQ.blit(rT.data, 0, sj, 0, rT.data.length);
                        rT.data = sj
                    }
                }
                rT.data[0] = 1e-15
            }
            if (r8.data[2].y == 0) {
                var rR = this.rawData;
                if (!rR.fixed) {
                    if (5 >= rR.length) {
                        rR.length = 6
                    }
                    if (rR.data.length < rR.length) {
                        var sh;
                        var rQ;
                        rQ = new Array(rR.data.length + 10);
                        sh = rQ;
                        dQ.blit(rR.data, 0, sh, 0, rR.data.length);
                        rR.data = sh
                    }
                }
                rR.data[5] = 1e-15
            }
            if (r8.data[2].z == 0) {
                var rP = this.rawData;
                if (!rP.fixed) {
                    if (10 >= rP.length) {
                        rP.length = 11
                    }
                    if (rP.data.length < rP.length) {
                        var sf;
                        var rO;
                        rO = new Array(rP.data.length + 10);
                        sf = rO;
                        dQ.blit(rP.data, 0, sf, 0, rP.data.length);
                        rP.data = sf
                    }
                }
                rP.data[10] = 1e-15
            }
            return !(r8.data[2].x == 0 || r8.data[2].y == 0 || r8.data[2].y == 0)
        },
        transformVector: function(q) {
            var i = q.x;
            var i2 = q.y;
            var i1 = q.z;
            return new ok(i * this.rawData.data[0] + i2 * this.rawData.data[4] + i1 * this.rawData.data[8] + this.rawData.data[12], i * this.rawData.data[1] + i2 * this.rawData.data[5] + i1 * this.rawData.data[9] + this.rawData.data[13], i * this.rawData.data[2] + i2 * this.rawData.data[6] + i1 * this.rawData.data[10] + this.rawData.data[14], i * this.rawData.data[3] + i2 * this.rawData.data[7] + i1 * this.rawData.data[11] + this.rawData.data[15])
        },
        transformVectors: function(i2, q2) {
            var q0 = 0;
            var q5;
            var q4;
            var q3;
            while (q0 + 3 <= i2.length) {
                q5 = i2.data[q0];
                q4 = i2.data[q0 + 1];
                q3 = i2.data[q0 + 2];
                if (!q2.fixed) {
                    if (q0 >= q2.length) {
                        q2.length = q0 + 1
                    }
                    if (q2.data.length < q2.length) {
                        var qZ;
                        var q1;
                        q1 = new Array(q2.data.length + 10);
                        qZ = q1;
                        dQ.blit(q2.data, 0, qZ, 0, q2.data.length);
                        q2.data = qZ
                    }
                }
                q2.data[q0] = q5 * this.rawData.data[0] + q4 * this.rawData.data[4] + q3 * this.rawData.data[8] + this.rawData.data[12];
                var q7 = q0 + 1;
                if (!q2.fixed) {
                    if (q7 >= q2.length) {
                        q2.length = q7 + 1
                    }
                    if (q2.data.length < q2.length) {
                        var i1;
                        var qY;
                        qY = new Array(q2.data.length + 10);
                        i1 = qY;
                        dQ.blit(q2.data, 0, i1, 0, q2.data.length);
                        q2.data = i1
                    }
                }
                q2.data[q7] = q5 * this.rawData.data[1] + q4 * this.rawData.data[5] + q3 * this.rawData.data[9] + this.rawData.data[13];
                var q6 = q0 + 2;
                if (!q2.fixed) {
                    if (q6 >= q2.length) {
                        q2.length = q6 + 1
                    }
                    if (q2.data.length < q2.length) {
                        var q;
                        var js;
                        js = new Array(q2.data.length + 10);
                        q = js;
                        dQ.blit(q2.data, 0, q, 0, q2.data.length);
                        q2.data = q
                    }
                }
                q2.data[q6] = q5 * this.rawData.data[2] + q4 * this.rawData.data[6] + q3 * this.rawData.data[10] + this.rawData.data[14];
                q0 += 3
            }
        },
        transpose: function() {
            var i;
            var rk = this.rawData;
            var q1 = new p0();
            q1.length = rk.length;
            q1.fixed = rk.fixed;
            var rj;
            rj = new Array(rk.length);
            q1.data = rj;
            dQ.blit(rk.data, 0, q1.data, 0, rk.length);
            i = q1;
            var ri = this.rawData;
            if (!ri.fixed) {
                if (1 >= ri.length) {
                    ri.length = 2
                }
                if (ri.data.length < ri.length) {
                    var rv;
                    var rh;
                    rh = new Array(ri.data.length + 10);
                    rv = rh;
                    dQ.blit(ri.data, 0, rv, 0, ri.data.length);
                    ri.data = rv
                }
            }
            ri.data[1] = i.data[4];
            var rg = this.rawData;
            if (!rg.fixed) {
                if (2 >= rg.length) {
                    rg.length = 3
                }
                if (rg.data.length < rg.length) {
                    var rt;
                    var rf;
                    rf = new Array(rg.data.length + 10);
                    rt = rf;
                    dQ.blit(rg.data, 0, rt, 0, rg.data.length);
                    rg.data = rt
                }
            }
            rg.data[2] = i.data[8];
            var rd = this.rawData;
            if (!rd.fixed) {
                if (3 >= rd.length) {
                    rd.length = 4
                }
                if (rd.data.length < rd.length) {
                    var rs;
                    var rb;
                    rb = new Array(rd.data.length + 10);
                    rs = rb;
                    dQ.blit(rd.data, 0, rs, 0, rd.data.length);
                    rd.data = rs
                }
            }
            rd.data[3] = i.data[12];
            var q9 = this.rawData;
            if (!q9.fixed) {
                if (4 >= q9.length) {
                    q9.length = 5
                }
                if (q9.data.length < q9.length) {
                    var rr;
                    var re;
                    re = new Array(q9.data.length + 10);
                    rr = re;
                    dQ.blit(q9.data, 0, rr, 0, q9.data.length);
                    q9.data = rr
                }
            }
            q9.data[4] = i.data[1];
            var rc = this.rawData;
            if (!rc.fixed) {
                if (6 >= rc.length) {
                    rc.length = 7
                }
                if (rc.data.length < rc.length) {
                    var rq;
                    var ra;
                    ra = new Array(rc.data.length + 10);
                    rq = ra;
                    dQ.blit(rc.data, 0, rq, 0, rc.data.length);
                    rc.data = rq
                }
            }
            rc.data[6] = i.data[9];
            var q8 = this.rawData;
            if (!q8.fixed) {
                if (7 >= q8.length) {
                    q8.length = 8
                }
                if (q8.data.length < q8.length) {
                    var rp;
                    var q7;
                    q7 = new Array(q8.data.length + 10);
                    rp = q7;
                    dQ.blit(q8.data, 0, rp, 0, q8.data.length);
                    q8.data = rp
                }
            }
            q8.data[7] = i.data[13];
            var q6 = this.rawData;
            if (!q6.fixed) {
                if (8 >= q6.length) {
                    q6.length = 9
                }
                if (q6.data.length < q6.length) {
                    var ro;
                    var q5;
                    q5 = new Array(q6.data.length + 10);
                    ro = q5;
                    dQ.blit(q6.data, 0, ro, 0, q6.data.length);
                    q6.data = ro
                }
            }
            q6.data[8] = i.data[2];
            var q4 = this.rawData;
            if (!q4.fixed) {
                if (9 >= q4.length) {
                    q4.length = 10
                }
                if (q4.data.length < q4.length) {
                    var rn;
                    var q3;
                    q3 = new Array(q4.data.length + 10);
                    rn = q3;
                    dQ.blit(q4.data, 0, rn, 0, q4.data.length);
                    q4.data = rn
                }
            }
            q4.data[9] = i.data[6];
            var q2 = this.rawData;
            if (!q2.fixed) {
                if (11 >= q2.length) {
                    q2.length = 12
                }
                if (q2.data.length < q2.length) {
                    var rm;
                    var q0;
                    q0 = new Array(q2.data.length + 10);
                    rm = q0;
                    dQ.blit(q2.data, 0, rm, 0, q2.data.length);
                    q2.data = rm
                }
            }
            q2.data[11] = i.data[14];
            var qZ = this.rawData;
            if (!qZ.fixed) {
                if (12 >= qZ.length) {
                    qZ.length = 13
                }
                if (qZ.data.length < qZ.length) {
                    var rl;
                    var qY;
                    qY = new Array(qZ.data.length + 10);
                    rl = qY;
                    dQ.blit(qZ.data, 0, rl, 0, qZ.data.length);
                    qZ.data = rl
                }
            }
            qZ.data[12] = i.data[3];
            var js = this.rawData;
            if (!js.fixed) {
                if (13 >= js.length) {
                    js.length = 14
                }
                if (js.data.length < js.length) {
                    var rw;
                    var i2;
                    i2 = new Array(js.data.length + 10);
                    rw = i2;
                    dQ.blit(js.data, 0, rw, 0, js.data.length);
                    js.data = rw
                }
            }
            js.data[13] = i.data[7];
            var i1 = this.rawData;
            if (!i1.fixed) {
                if (14 >= i1.length) {
                    i1.length = 15
                }
                if (i1.data.length < i1.length) {
                    var ru;
                    var q;
                    q = new Array(i1.data.length + 10);
                    ru = q;
                    dQ.blit(i1.data, 0, ru, 0, i1.data.length);
                    i1.data = ru
                }
            }
            i1.data[14] = i.data[11]
        },
        get_determinant: function() {
            return (this.rawData.data[0] * this.rawData.data[5] - this.rawData.data[4] * this.rawData.data[1]) * (this.rawData.data[10] * this.rawData.data[15] - this.rawData.data[14] * this.rawData.data[11]) - (this.rawData.data[0] * this.rawData.data[9] - this.rawData.data[8] * this.rawData.data[1]) * (this.rawData.data[6] * this.rawData.data[15] - this.rawData.data[14] * this.rawData.data[7]) + (this.rawData.data[0] * this.rawData.data[13] - this.rawData.data[12] * this.rawData.data[1]) * (this.rawData.data[6] * this.rawData.data[11] - this.rawData.data[10] * this.rawData.data[7]) + (this.rawData.data[4] * this.rawData.data[9] - this.rawData.data[8] * this.rawData.data[5]) * (this.rawData.data[2] * this.rawData.data[15] - this.rawData.data[14] * this.rawData.data[3]) - (this.rawData.data[4] * this.rawData.data[13] - this.rawData.data[12] * this.rawData.data[5]) * (this.rawData.data[2] * this.rawData.data[11] - this.rawData.data[10] * this.rawData.data[3]) + (this.rawData.data[8] * this.rawData.data[13] - this.rawData.data[12] * this.rawData.data[9]) * (this.rawData.data[2] * this.rawData.data[7] - this.rawData.data[6] * this.rawData.data[3])
        },
        get_position: function() {
            return new ok(this.rawData.data[12], this.rawData.data[13], this.rawData.data[14])
        },
        set_position: function(i) {
            var q2 = this.rawData;
            if (!q2.fixed) {
                if (12 >= q2.length) {
                    q2.length = 13
                }
                if (q2.data.length < q2.length) {
                    var q0;
                    var q1;
                    q1 = new Array(q2.data.length + 10);
                    q0 = q1;
                    dQ.blit(q2.data, 0, q0, 0, q2.data.length);
                    q2.data = q0
                }
            }
            q2.data[12] = i.x;
            var qZ = this.rawData;
            if (!qZ.fixed) {
                if (13 >= qZ.length) {
                    qZ.length = 14
                }
                if (qZ.data.length < qZ.length) {
                    var qY;
                    var js;
                    js = new Array(qZ.data.length + 10);
                    qY = js;
                    dQ.blit(qZ.data, 0, qY, 0, qZ.data.length);
                    qZ.data = qY
                }
            }
            qZ.data[13] = i.y;
            var i2 = this.rawData;
            if (!i2.fixed) {
                if (14 >= i2.length) {
                    i2.length = 15
                }
                if (i2.data.length < i2.length) {
                    var i1;
                    var q;
                    q = new Array(i2.data.length + 10);
                    i1 = q;
                    dQ.blit(i2.data, 0, i1, 0, i2.data.length);
                    i2.data = i1
                }
            }
            i2.data[14] = i.z;
            return i
        },
        __class__: aW,
        __properties__: {
            set_position: "set_position",
            get_position: "get_position",
            get_determinant: "get_determinant"
        }
    };
    var qL = {};
    nt["openfl.geom._Orientation3D.Orientation3D_Impl_"] = qL;
    qL.__name__ = ["openfl", "geom", "_Orientation3D", "Orientation3D_Impl_"];
    qL.fromString = function(i) {
        switch (i) {
            case "axisAngle":
                return 0;
            case "eulerAngles":
                return 1;
            case "quaternion":
                return 2;
            default:
                return null
        }
    };
    qL.toString = function(i) {
        switch (i) {
            case 0:
                return "axisAngle";
            case 1:
                return "eulerAngles";
            case 2:
                return "quaternion";
            default:
                return null
        }
    };
    var iA = function(i) {
        this.__colorTransform = new n();
        this.concatenatedColorTransform = new n();
        this.pixelBounds = new gn();
        this.__displayObject = i;
        this.__hasMatrix = true
    };
    nt["openfl.geom.Transform"] = iA;
    iA.__name__ = ["openfl", "geom", "Transform"];
    iA.prototype = {
        concatenatedColorTransform: null,
        pixelBounds: null,
        __colorTransform: null,
        __displayObject: null,
        __hasMatrix: null,
        __hasMatrix3D: null,
        get_colorTransform: function() {
            return this.__colorTransform
        },
        set_colorTransform: function(i) {
            if (!this.__colorTransform.__equals(i)) {
                this.__colorTransform = i;
                if (i != null) {
                    this.__displayObject.set_alpha(i.alphaMultiplier)
                }
                this.__displayObject.__setRenderDirty()
            }
            return this.__colorTransform
        },
        get_matrix: function() {
            if (this.__hasMatrix) {
                return this.__displayObject.__transform.clone()
            }
            return null
        },
        get_concatenatedMatrix: function() {
            if (this.__hasMatrix) {
                return this.__displayObject.__getWorldTransform().clone()
            }
            return null
        },
        set_matrix: function(q) {
            if (q == null) {
                this.__hasMatrix = false;
                return null
            }
            this.__hasMatrix = true;
            this.__hasMatrix3D = false;
            if (this.__displayObject != null) {
                var i = 180 / Math.PI * Math.atan2(q.d, q.c) - 90;
                if (i != this.__displayObject.__rotation) {
                    this.__displayObject.__rotation = i;
                    var i1 = i * (Math.PI / 180);
                    this.__displayObject.__rotationSine = Math.sin(i1);
                    this.__displayObject.__rotationCosine = Math.cos(i1)
                }
                this.__displayObject.__transform.copyFrom(q);
                this.__displayObject.__setTransformDirty()
            }
            return q
        },
        get_matrix3D: function() {
            if (this.__hasMatrix3D) {
                var i = this.__displayObject.__transform;
                return new aW((function(q0) {
                    var qZ;
                    var q2 = [i.a, i.b, 0, 0, i.c, i.d, 0, 0, 0, 0, 1, 0, i.tx, i.ty, 0, 1];
                    var i1 = new p0();
                    i1.length = q2.length;
                    i1.fixed = true;
                    var q;
                    var qY;
                    qY = new Array(q2.length);
                    q = qY;
                    var q1 = 0;
                    var js = q2.length;
                    while (q1 < js) {
                        var i2 = q1++;
                        q[i2] = q2[i2]
                    }
                    i1.data = q;
                    qZ = i1;
                    return qZ
                }(this)))
            }
            return null
        },
        set_matrix3D: function(q) {
            if (q == null) {
                this.__hasMatrix3D = false;
                return null
            }
            this.__hasMatrix = false;
            this.__hasMatrix3D = true;
            if (this.__displayObject != null) {
                var i = 180 / Math.PI * Math.atan2(q.rawData.data[5], q.rawData.data[4]) - 90;
                if (i != this.__displayObject.__rotation) {
                    this.__displayObject.__rotation = i;
                    var i1 = i * (Math.PI / 180);
                    this.__displayObject.__rotationSine = Math.sin(i1);
                    this.__displayObject.__rotationCosine = Math.cos(i1)
                }
                this.__displayObject.__transform.a = q.rawData.data[0];
                this.__displayObject.__transform.b = q.rawData.data[1];
                this.__displayObject.__transform.c = q.rawData.data[5];
                this.__displayObject.__transform.d = q.rawData.data[6];
                this.__displayObject.__transform.tx = q.rawData.data[12];
                this.__displayObject.__transform.ty = q.rawData.data[13];
                this.__displayObject.__setTransformDirty()
            }
            return q
        },
        __class__: iA,
        __properties__: {
            set_matrix3D: "set_matrix3D",
            get_matrix3D: "get_matrix3D",
            set_matrix: "set_matrix",
            get_matrix: "get_matrix",
            get_concatenatedMatrix: "get_concatenatedMatrix",
            set_colorTransform: "set_colorTransform",
            get_colorTransform: "get_colorTransform"
        }
    };
    var ok = function(i, i2, i1, q) {
        if (q == null) {
            q = 0
        }
        if (i1 == null) {
            i1 = 0
        }
        if (i2 == null) {
            i2 = 0
        }
        if (i == null) {
            i = 0
        }
        this.w = q;
        this.x = i;
        this.y = i2;
        this.z = i1
    };
    nt["openfl.geom.Vector3D"] = ok;
    ok.__name__ = ["openfl", "geom", "Vector3D"];
    ok.__properties__ = {
        get_Z_AXIS: "get_Z_AXIS",
        get_Y_AXIS: "get_Y_AXIS",
        get_X_AXIS: "get_X_AXIS"
    };
    ok.X_AXIS = null;
    ok.Y_AXIS = null;
    ok.Z_AXIS = null;
    ok.angleBetween = function(q, i) {
        var js = q.get_length();
        var i2 = i.get_length();
        var i1 = q.dotProduct(i);
        if (js != 0) {
            i1 /= js
        }
        if (i2 != 0) {
            i1 /= i2
        }
        return Math.acos(i1)
    };
    ok.distance = function(i2, q) {
        var i = q.x - i2.x;
        var js = q.y - i2.y;
        var i1 = q.z - i2.z;
        return Math.sqrt(i * i + js * js + i1 * i1)
    };
    ok.get_X_AXIS = function() {
        return new ok(1, 0, 0)
    };
    ok.get_Y_AXIS = function() {
        return new ok(0, 1, 0)
    };
    ok.get_Z_AXIS = function() {
        return new ok(0, 0, 1)
    };
    ok.prototype = {
        length: null,
        lengthSquared: null,
        w: null,
        x: null,
        y: null,
        z: null,
        add: function(i) {
            return new ok(this.x + i.x, this.y + i.y, this.z + i.z)
        },
        clone: function() {
            return new ok(this.x, this.y, this.z, this.w)
        },
        copyFrom: function(i) {
            this.x = i.x;
            this.y = i.y;
            this.z = i.z
        },
        crossProduct: function(i) {
            return new ok(this.y * i.z - this.z * i.y, this.z * i.x - this.x * i.z, this.x * i.y - this.y * i.x, 1)
        },
        decrementBy: function(i) {
            this.x -= i.x;
            this.y -= i.y;
            this.z -= i.z
        },
        dotProduct: function(i) {
            return this.x * i.x + this.y * i.y + this.z * i.z
        },
        equals: function(i, q) {
            if (q == null) {
                q = false
            }
            return this.x == i.x && this.y == i.y && this.z == i.z && (!q || this.w == i.w)
        },
        incrementBy: function(i) {
            this.x += i.x;
            this.y += i.y;
            this.z += i.z
        },
        nearEquals: function(q, i, i1) {
            if (i1 == null) {
                i1 = false
            }
            return Math.abs(this.x - q.x) < i && Math.abs(this.y - q.y) < i && Math.abs(this.z - q.z) < i && (!i1 || Math.abs(this.w - q.w) < i)
        },
        negate: function() {
            this.x *= -1;
            this.y *= -1;
            this.z *= -1
        },
        normalize: function() {
            var i = this.get_length();
            if (i != 0) {
                this.x /= i;
                this.y /= i;
                this.z /= i
            }
            return i
        },
        project: function() {
            this.x /= this.w;
            this.y /= this.w;
            this.z /= this.w
        },
        scaleBy: function(i) {
            this.x *= i;
            this.y *= i;
            this.z *= i
        },
        setTo: function(i1, i, q) {
            this.x = i1;
            this.y = i;
            this.z = q
        },
        subtract: function(i) {
            return new ok(this.x - i.x, this.y - i.y, this.z - i.z)
        },
        toString: function() {
            return "Vector3D(" + this.x + ", " + this.y + ", " + this.z + ")"
        },
        get_length: function() {
            return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)
        },
        get_lengthSquared: function() {
            return this.x * this.x + this.y * this.y + this.z * this.z
        },
        __class__: ok,
        __properties__: {
            get_lengthSquared: "get_lengthSquared",
            get_length: "get_length"
        }
    };
    var pG = function() {};
    nt["openfl.media.ID3Info"] = pG;
    pG.__name__ = ["openfl", "media", "ID3Info"];
    pG.prototype = {
        album: null,
        artist: null,
        comment: null,
        genre: null,
        songName: null,
        track: null,
        year: null,
        __class__: pG
    };
    var eR = function(q, i) {
        lR.call(this, this);
        this.bytesLoaded = 0;
        this.bytesTotal = 0;
        this.id3 = null;
        this.isBuffering = false;
        this.url = null;
        if (q != null) {
            this.load(q, i)
        }
    };
    nt["openfl.media.Sound"] = eR;
    eR.__name__ = ["openfl", "media", "Sound"];
    eR.fromAudioBuffer = function(i) {
        var q = new eR();
        q.__buffer = i;
        return q
    };
    eR.fromFile = function(i) {
        return eR.fromAudioBuffer(kt.fromFile(i))
    };
    eR.__super__ = lR;
    eR.prototype = lP(lR.prototype, {
        bytesLoaded: null,
        bytesTotal: null,
        id3: null,
        isBuffering: null,
        url: null,
        __buffer: null,
        __sound: null,
        __soundID: null,
        close: function() {
            if (eR.__registeredSounds.exists(this.__soundID)) {
                createjs.Sound.removeSound(this.__soundID)
            }
        },
        load: function(q, i) {
            this.url = q.url;
            this.__soundID = nu.withoutExtension(q.url);
            if (!eR.__registeredSounds.exists(this.__soundID)) {
                eR.__registeredSounds.set(this.__soundID, true);
                createjs.Sound.addEventListener("fileload", oT(this, this.SoundJS_onFileLoad));
                createjs.Sound.addEventListener("fileerror", oT(this, this.SoundJS_onFileError));
                createjs.Sound.registerSound(this.url, this.__soundID)
            } else {
                this.dispatchEvent(new hM("complete"))
            }
        },
        loadCompressedDataFromByteArray: function(i, i1, q) {
            if (q == null) {
                q = false
            }
            ns.notImplemented("Sound.loadCompressedDataFromByteArray")
        },
        loadPCMFromByteArray: function(i, i2, js, q, i1) {
            if (i1 == null) {
                i1 = 44100
            }
            if (q == null) {
                q = true
            }
            ns.notImplemented("Sound.loadPCMFromByteArray")
        },
        play: function(i2, i1, q) {
            if (i1 == null) {
                i1 = 0
            }
            if (i2 == null) {
                i2 = 0
            }
            if (q == null) {
                q = new nr(1, 0)
            }
            var js = q.pan;
            if (js == 0) {
                js = -1e-7
            }
            var i;
            if (i1 > 1) {
                i = createjs.Sound.play(this.__soundID, "any", 0, i2 | 0, i1 - 1, q.volume, js)
            } else {
                i = createjs.Sound.play(this.__soundID, "any", 0, i2 | 0, 0, q.volume, js)
            }
            return new n4(i)
        },
        get_id3: function() {
            return new pG()
        },
        get_length: function() {
            if (this.__buffer != null) {}
            return 0
        },
        AudioBuffer_onURLLoad: function(i) {
            if (i == null) {
                this.dispatchEvent(new hx("ioError"))
            } else {
                this.__buffer = i;
                this.dispatchEvent(new hM("complete"))
            }
        },
        SoundJS_onFileLoad: function(i) {
            if (i.id == this.__soundID) {
                createjs.Sound.removeEventListener("fileload", oT(this, this.SoundJS_onFileLoad));
                createjs.Sound.removeEventListener("fileerror", oT(this, this.SoundJS_onFileError));
                this.dispatchEvent(new hM("complete"))
            }
        },
        SoundJS_onFileError: function(i) {
            if (i.id == this.__soundID) {
                createjs.Sound.removeEventListener("fileload", oT(this, this.SoundJS_onFileLoad));
                createjs.Sound.removeEventListener("fileerror", oT(this, this.SoundJS_onFileError));
                this.dispatchEvent(new hx("ioError"))
            }
        },
        __class__: eR,
        __properties__: {
            get_length: "get_length",
            get_id3: "get_id3"
        }
    });
    var n4 = function(i) {
        lR.call(this, this);
        this.leftPeak = 1;
        this.rightPeak = 1;
        if (i != null) {
            this.__soundInstance = i;
            this.__soundInstance.addEventListener("complete", oT(this, this.source_onComplete));
            this.__isValid = true
        }
    };
    nt["openfl.media.SoundChannel"] = n4;
    n4.__name__ = ["openfl", "media", "SoundChannel"];
    n4.__super__ = lR;
    n4.prototype = lP(lR.prototype, {
        leftPeak: null,
        rightPeak: null,
        __isValid: null,
        __source: null,
        __soundInstance: null,
        stop: function() {
            if (!this.__isValid) {
                return
            }
            this.__soundInstance.stop()
        },
        __dispose: function() {
            if (!this.__isValid) {
                return
            }
            this.__soundInstance.stop();
            this.__soundInstance = null;
            this.__isValid = false
        },
        get_position: function() {
            if (!this.__isValid) {
                return 0
            }
            return this.__soundInstance.getPosition()
        },
        set_position: function(i) {
            if (!this.__isValid) {
                return 0
            }
            this.__soundInstance.setPosition(i | 0);
            return this.__soundInstance.getPosition()
        },
        get_soundTransform: function() {
            if (!this.__isValid) {
                return new nr()
            }
            return new nr(this.__soundInstance.getVolume(), this.__soundInstance.getPan())
        },
        set_soundTransform: function(i) {
            if (!this.__isValid) {
                return i
            }
            this.__soundInstance.setVolume(i.volume);
            this.__soundInstance.setPan(i.pan);
            return i
        },
        soundInstance_onComplete: function(i) {
            this.dispatchEvent(new hM("soundComplete"))
        },
        source_onComplete: function() {
            this.__dispose();
            this.dispatchEvent(new hM("soundComplete"))
        },
        __class__: n4,
        __properties__: {
            set_soundTransform: "set_soundTransform",
            get_soundTransform: "get_soundTransform",
            set_position: "set_position",
            get_position: "get_position"
        }
    });
    var hX = function(q, i) {
        if (i == null) {
            i = false
        }
        if (q == null) {
            q = 1000
        }
        this.bufferTime = q;
        this.checkPolicyFile = i
    };
    nt["openfl.media.SoundLoaderContext"] = hX;
    hX.__name__ = ["openfl", "media", "SoundLoaderContext"];
    hX.prototype = {
        bufferTime: null,
        checkPolicyFile: null,
        __class__: hX
    };
    var nr = function(i, q) {
        if (q == null) {
            q = 0
        }
        if (i == null) {
            i = 1
        }
        this.volume = i;
        this.pan = q;
        this.leftToLeft = 0;
        this.leftToRight = 0;
        this.rightToLeft = 0;
        this.rightToRight = 0
    };
    nt["openfl.media.SoundTransform"] = nr;
    nr.__name__ = ["openfl", "media", "SoundTransform"];
    nr.prototype = {
        leftToLeft: null,
        leftToRight: null,
        pan: null,
        rightToLeft: null,
        rightToRight: null,
        volume: null,
        clone: function() {
            return new nr(this.volume, this.pan)
        },
        __class__: nr
    };
    var ni = function() {
        lR.call(this)
    };
    nt["openfl.net.NetConnection"] = ni;
    ni.__name__ = ["openfl", "net", "NetConnection"];
    ni.__super__ = lR;
    ni.prototype = lP(lR.prototype, {
        connect: function(qY, i, js, i2, i1, q) {
            if (qY != null) {
                throw new nM('Error: Can only connect in "HTTP streaming" mode')
            }
            this.dispatchEvent(new kJ("netStatus", false, true, {
                code: "connectSuccess"
            }))
        },
        __class__: ni
    });
    var hP = function() {
        lR.call(this);
        this.client = this;
        this.objectEncoding = 3
    };
    nt["openfl.net.SharedObject"] = hP;
    hP.__name__ = ["openfl", "net", "SharedObject"];
    hP.__sharedObjects = null;
    hP.getLocal = function(q, i2, i) {
        if (i == null) {
            i = false
        }
        if (i2 == null) {
            i2 = window.location.href
        }
        if (hP.__sharedObjects == null) {
            hP.__sharedObjects = new io();
            ns.application.onExit.add(hP.application_onExit)
        }
        var i1 = i2 + "/" + q;
        if (!hP.__sharedObjects.exists(i1)) {
            var js = new hP();
            js.data = {};
            js.__localPath = i2;
            js.__name = q;
            var q2 = null;
            try {
                var qZ = bq.getLocalStorage();
                if (qZ != null) {
                    q2 = qZ.getItem(i2 + ":" + q)
                }
            } catch (q0) {
                lF.lastException = q0;
                if (q0 instanceof nM) {
                    q0 = q0.val
                }
            }
            if (q2 != null && q2 != "") {
                try {
                    var qY = new ln(q2);
                    qY.setResolver({
                        resolveEnum: kX.resolveEnum,
                        resolveClass: hP.__resolveClass
                    });
                    js.data = qY.unserialize()
                } catch (q1) {
                    lF.lastException = q1;
                    if (q1 instanceof nM) {
                        q1 = q1.val
                    }
                }
            }
            hP.__sharedObjects.set(i1, js)
        }
        return hP.__sharedObjects.get(i1)
    };
    hP.getRemote = function(q, i, i1, i2) {
        if (i2 == null) {
            i2 = false
        }
        if (i1 == null) {
            i1 = false
        }
        ns.notImplemented("SharedObject.getRemote");
        return null
    };
    hP.__mkdir = function(i) {};
    hP.__resolveClass = function(i) {
        if (i != null) {
            if (cP.startsWith(i, "neash.")) {
                i = cP.replace(i, "neash.", "openfl.")
            }
            if (cP.startsWith(i, "native.")) {
                i = cP.replace(i, "native.", "openfl.")
            }
            if (cP.startsWith(i, "flash.")) {
                i = cP.replace(i, "flash.", "openfl.")
            }
            if (cP.startsWith(i, "openfl._v2.")) {
                i = cP.replace(i, "openfl._v2.", "openfl.")
            }
            if (cP.startsWith(i, "openfl._legacy.")) {
                i = cP.replace(i, "openfl._legacy.", "openfl.")
            }
            return kX.resolveClass(i)
        }
        return null
    };
    hP.application_onExit = function(q) {
        var i1 = hP.__sharedObjects.iterator();
        while (i1.hasNext()) {
            var i = i1.next();
            i.flush()
        }
    };
    hP.__super__ = lR;
    hP.prototype = lP(lR.prototype, {
        client: null,
        data: null,
        fps: null,
        objectEncoding: null,
        __localPath: null,
        __name: null,
        clear: function() {
            this.data = {};
            try {
                var q = bq.getLocalStorage();
                if (q != null) {
                    q.removeItem(this.__localPath + ":" + this.__name)
                }
            } catch (i) {
                lF.lastException = i;
                if (i instanceof nM) {
                    i = i.val
                }
            }
        },
        close: function() {},
        connect: function(i, q) {
            ns.notImplemented("SharedObject.connect")
        },
        flush: function(i) {
            if (i == null) {
                i = 0
            }
            if (ar.fields(this.data).length == 0) {
                return 0
            }
            var q = ot.run(this.data);
            try {
                var i2 = bq.getLocalStorage();
                if (i2 != null) {
                    i2.removeItem(this.__localPath + ":" + this.__name);
                    i2.setItem(this.__localPath + ":" + this.__name, q)
                }
            } catch (i1) {
                lF.lastException = i1;
                if (i1 instanceof nM) {
                    i1 = i1.val
                }
                return 1
            }
            return 0
        },
        send: function(i) {
            ns.notImplemented("SharedObject.send")
        },
        setDirty: function(i) {},
        setProperty: function(i, q) {
            if (this.data != null) {
                this.data[i] = q
            }
        },
        get_size: function() {
            try {
                var q = ot.run(this.data);
                return eg.ofString(q).length
            } catch (i) {
                lF.lastException = i;
                if (i instanceof nM) {
                    i = i.val
                }
                return 0
            }
        },
        __class__: hP,
        __properties__: {
            get_size: "get_size"
        }
    });
    var hO = {};
    nt["openfl.net._SharedObjectFlushStatus.SharedObjectFlushStatus_Impl_"] = hO;
    hO.__name__ = ["openfl", "net", "_SharedObjectFlushStatus", "SharedObjectFlushStatus_Impl_"];
    hO.fromString = function(i) {
        switch (i) {
            case "flushed":
                return 0;
            case "pending":
                return 1;
            default:
                return null
        }
    };
    hO.toString = function(i) {
        switch (i) {
            case 0:
                return "flushed";
            case 1:
                return "pending";
            default:
                return null
        }
    };
    var ie = function(i) {
        lR.call(this);
        this.bytesLoaded = 0;
        this.bytesTotal = 0;
        this.set_dataFormat(1);
        if (i != null) {
            this.load(i)
        }
    };
    nt["openfl.net.URLLoader"] = ie;
    ie.__name__ = ["openfl", "net", "URLLoader"];
    ie.__super__ = lR;
    ie.prototype = lP(lR.prototype, {
        bytesLoaded: null,
        bytesTotal: null,
        data: null,
        dataFormat: null,
        close: function() {},
        getData: function() {
            return null
        },
        load: function(i) {
            this.requestUrl(i.url, i.method, i.data, i.formatRequestHeaders())
        },
        registerEvents: function(q) {
            var i = this;
            if (typeof XMLHttpRequestProgressEvent != "undefined") {
                q.addEventListener("progress", oT(this, this.onProgress), false)
            }
            q.onreadystatechange = function() {
                if (q.readyState != 4) {
                    return
                }
                var i1;
                try {
                    i1 = q.status
                } catch (i2) {
                    lF.lastException = i2;
                    if (i2 instanceof nM) {
                        i2 = i2.val
                    }
                    i1 = null
                }
                if (i1 == undefined) {
                    i1 = null
                }
                if (i1 != null) {
                    i.onStatus(i1)
                }
                if (i1 != null && i1 >= 200 && i1 < 400) {
                    i.onData(q.response)
                } else {
                    if (i1 == null) {
                        i.onError("Failed to connect or resolve host")
                    } else {
                        if (i1 == 12029) {
                            i.onError("Failed to connect to host")
                        } else {
                            if (i1 == 12007) {
                                i.onError("Unknown host")
                            } else {
                                if (i1 == 0) {
                                    i.onError("Unable to make request (may be blocked due to cross-domain permissions)");
                                    i.onSecurityError("Unable to make request (may be blocked due to cross-domain permissions)")
                                } else {
                                    i.onError("Http Error #" + q.status)
                                }
                            }
                        }
                    }
                }
            }
        },
        requestUrl: function(q, i, q2, q5) {
            var q1 = new XMLHttpRequest();
            this.registerEvents(q1);
            var i2 = "";
            if (n0.__instanceof(q2, ge)) {
                var qZ = q2;
                var q4 = this.dataFormat;
                switch (q4) {
                    case 0:
                        i2 = n0.__cast(qZ, gf);
                        break;
                    default:
                        i2 = qZ.readUTFBytes(qZ.length)
                }
            } else {
                if (n0.__instanceof(q2, p2)) {
                    var js = q2;
                    var q9 = 0;
                    var q0 = ar.fields(js);
                    while (q9 < q0.length) {
                        var i1 = q0[q9];
                        ++q9;
                        if (i2.length != 0) {
                            i2 += "&"
                        }
                        i2 += encodeURIComponent(i1) + "=" + cP.urlEncode(ar.field(js, i1))
                    }
                } else {
                    if (q2 != null) {
                        i2 = q2.toString()
                    }
                }
            }
            try {
                if (i == "GET" && i2 != null && i2 != "") {
                    var qY = q.split("?").length <= 1;
                    q1.open(i, q + (qY ? "?" : "&") + kr.string(i2), true);
                    i2 = ""
                } else {
                    q1.open(i, q, true)
                }
            } catch (q7) {
                lF.lastException = q7;
                if (q7 instanceof nM) {
                    q7 = q7.val
                }
                this.onError(q7.toString());
                return
            }
            var q8 = this.dataFormat;
            switch (q8) {
                case 0:
                    q1.responseType = "arraybuffer";
                    break;
                default:
            }
            var q6 = 0;
            while (q6 < q5.length) {
                var q3 = q5[q6];
                ++q6;
                q1.setRequestHeader(q3.name, q3.value)
            }
            q1.send(i2);
            this.onOpen();
            this.getData = function() {
                if (q1.response != null) {
                    return q1.response
                } else {
                    return q1.responseText
                }
            }
        },
        onData: function(q) {
            var i1 = this.getData();
            var i2 = this.dataFormat;
            switch (i2) {
                case 0:
                    this.data = op.fromArrayBuffer(i1);
                    break;
                default:
                    this.data = kr.string(i1)
            }
            var i = new hM("complete");
            i.currentTarget = this;
            this.dispatchEvent(i)
        },
        onError: function(q) {
            var i = new hx("ioError");
            i.text = q;
            i.currentTarget = this;
            this.dispatchEvent(i)
        },
        onOpen: function() {
            var i = new hM("open");
            i.currentTarget = this;
            this.dispatchEvent(i)
        },
        onProgress: function(q) {
            var i = new l2("progress");
            i.currentTarget = this;
            i.bytesLoaded = q.loaded;
            i.bytesTotal = q.total;
            this.dispatchEvent(i)
        },
        onSecurityError: function(q) {
            var i = new n9("securityError");
            i.text = q;
            i.currentTarget = this;
            this.dispatchEvent(i)
        },
        onStatus: function(q) {
            var i = new iT("httpStatus", false, false, q);
            i.currentTarget = this;
            this.dispatchEvent(i)
        },
        set_dataFormat: function(i) {
            if (i == 0 && !ar.hasField(window, "ArrayBuffer")) {
                this.dataFormat = 1
            } else {
                this.dataFormat = i
            }
            return this.dataFormat
        },
        __class__: ie,
        __properties__: {
            set_dataFormat: "set_dataFormat"
        }
    });
    var jl = {};
    nt["openfl.net._URLLoaderDataFormat.URLLoaderDataFormat_Impl_"] = jl;
    jl.__name__ = ["openfl", "net", "_URLLoaderDataFormat", "URLLoaderDataFormat_Impl_"];
    jl.fromString = function(i) {
        switch (i) {
            case "binary":
                return 0;
            case "text":
                return 1;
            case "variables":
                return 2;
            default:
                return null
        }
    };
    jl.toString = function(i) {
        switch (i) {
            case 0:
                return "binary";
            case 1:
                return "text";
            case 2:
                return "variables";
            default:
                return null
        }
    };
    var nT = function(i) {
        if (i != null) {
            this.url = i
        }
        this.requestHeaders = [];
        this.method = qb.toString(1);
        this.contentType = null
    };
    nt["openfl.net.URLRequest"] = nT;
    nT.__name__ = ["openfl", "net", "URLRequest"];
    nT.prototype = {
        contentType: null,
        data: null,
        method: null,
        requestHeaders: null,
        url: null,
        userAgent: null,
        formatRequestHeaders: function() {
            var i = this.requestHeaders;
            if (i == null) {
                i = []
            }
            if (qb.fromString(this.method) == 1 || this.data == null) {
                return i
            }
            if (typeof(this.data) == "string" || n0.__instanceof(this.data, ge)) {
                i = i.slice();
                i.push(new fg("Content-Type", this.contentType != null ? this.contentType : "application/x-www-form-urlencoded"))
            }
            return i
        },
        __class__: nT
    };
    var fg = function(i, q) {
        if (q == null) {
            q = ""
        }
        if (i == null) {
            i = ""
        }
        this.name = i;
        this.value = q
    };
    nt["openfl.net.URLRequestHeader"] = fg;
    fg.__name__ = ["openfl", "net", "URLRequestHeader"];
    fg.prototype = {
        name: null,
        value: null,
        __class__: fg
    };
    var qb = {};
    nt["openfl.net._URLRequestMethod.URLRequestMethod_Impl_"] = qb;
    qb.__name__ = ["openfl", "net", "_URLRequestMethod", "URLRequestMethod_Impl_"];
    qb.fromString = function(i) {
        switch (i) {
            case "DELETE":
                return 0;
            case "GET":
                return 1;
            case "HEAD":
                return 2;
            case "OPTIONS":
                return 3;
            case "POST":
                return 4;
            case "PUT":
                return 5;
            default:
                return null
        }
    };
    qb.toString = function(i) {
        switch (i) {
            case 0:
                return "DELETE";
            case 1:
                return "GET";
            case 2:
                return "HEAD";
            case 3:
                return "OPTIONS";
            case 4:
                return "POST";
            case 5:
                return "PUT";
            default:
                return null
        }
    };
    var p2 = function(i) {
        if (i != null) {
            this.decode(i)
        }
    };
    nt["openfl.net.URLVariables"] = p2;
    p2.__name__ = ["openfl", "net", "URLVariables"];
    p2.prototype = {
        decode: function(qZ) {
            var i1 = ar.fields(this);
            var q0 = 0;
            while (q0 < i1.length) {
                var qY = i1[q0];
                ++q0;
                ar.deleteField(this, qY)
            }
            var i2 = qZ.split(";").join("&").split("&");
            var js = 0;
            while (js < i2.length) {
                var q = i2[js];
                ++js;
                var i = q.indexOf("=");
                if (i > 0) {
                    ar.setField(this, cP.urlDecode(cj.substr(q, 0, i)), cP.urlDecode(cj.substr(q, i + 1, null)))
                } else {
                    if (i != 0) {
                        ar.setField(this, decodeURIComponent(q.split("+").join(" ")), "")
                    }
                }
            }
        },
        toString: function() {
            var q = [];
            var i = ar.fields(this);
            var i2 = 0;
            while (i2 < i.length) {
                var i1 = i[i2];
                ++i2;
                q.push(encodeURIComponent(i1) + "=" + cP.urlEncode(ar.field(this, i1)))
            }
            return q.join("&")
        },
        __class__: p2
    };
    var ks = function(q, i, i1) {
        if (q == null) {
            q = false
        }
        this.checkPolicyFile = q;
        this.securityDomain = i1;
        this.applicationDomain = i;
        this.allowCodeImport = true;
        this.allowLoadBytesCodeExecution = true
    };
    nt["openfl.system.LoaderContext"] = ks;
    ks.__name__ = ["openfl", "system", "LoaderContext"];
    ks.prototype = {
        allowCodeImport: null,
        allowLoadBytesCodeExecution: null,
        applicationDomain: null,
        checkPolicyFile: null,
        securityDomain: null,
        __class__: ks
    };
    var gO = function() {};
    nt["openfl.system.SecurityDomain"] = gO;
    gO.__name__ = ["openfl", "system", "SecurityDomain"];
    gO.prototype = {
        __class__: gO
    };
    var mQ = {};
    nt["openfl.text._AntiAliasType.AntiAliasType_Impl_"] = mQ;
    mQ.__name__ = ["openfl", "text", "_AntiAliasType", "AntiAliasType_Impl_"];
    mQ.fromString = function(i) {
        switch (i) {
            case "advanced":
                return 0;
            case "normal":
                return 1;
            default:
                return null
        }
    };
    mQ.toString = function(i) {
        switch (i) {
            case 0:
                return "advanced";
            case 1:
                return "normal";
            default:
                return null
        }
    };
    var nJ = function(i) {
        gK.call(this, i)
    };
    nt["openfl.text.Font"] = nJ;
    nJ.__name__ = ["openfl", "text", "Font"];
    nJ.enumerateFonts = function(i) {
        if (i == null) {
            i = false
        }
        return nJ.__registeredFonts
    };
    nJ.fromBytes = function(i) {
        var q = new nJ();
        q.__fromBytes(op.toBytes(i));
        return q
    };
    nJ.fromFile = function(q) {
        var i = new nJ();
        i.__fromFile(q);
        return i
    };
    nJ.registerFont = function(q) {
        var i;
        i = n0.__cast(kX.createInstance(q, []), nJ);
        if (i != null) {
            nJ.__registeredFonts.push(i)
        }
    };
    nJ.__fromLimeFont = function(q) {
        var i = new nJ();
        i.name = q.name;
        i.src = q.src;
        return i
    };
    nJ.__super__ = gK;
    nJ.prototype = lP(gK.prototype, {
        fontStyle: null,
        fontType: null,
        get_fontName: function() {
            return this.name
        },
        set_fontName: function(i) {
            return this.name = i
        },
        __class__: nJ,
        __properties__: lP(gK.prototype.__properties__, {
            set_fontName: "set_fontName",
            get_fontName: "get_fontName"
        })
    });
    var nD = {};
    nt["openfl.text._FontStyle.FontStyle_Impl_"] = nD;
    nD.__name__ = ["openfl", "text", "_FontStyle", "FontStyle_Impl_"];
    nD.fromString = function(i) {
        switch (i) {
            case "bold":
                return 0;
            case "boldItalic":
                return 1;
            case "italic":
                return 2;
            case "regular":
                return 3;
            default:
                return null
        }
    };
    nD.toString = function(i) {
        switch (i) {
            case 0:
                return "bold";
            case 1:
                return "boldItalic";
            case 2:
                return "italic";
            case 3:
                return "regular";
            default:
                return null
        }
    };
    var bU = {};
    nt["openfl.text._FontType.FontType_Impl_"] = bU;
    bU.__name__ = ["openfl", "text", "_FontType", "FontType_Impl_"];
    bU.fromString = function(i) {
        switch (i) {
            case "device":
                return 0;
            case "embedded":
                return 1;
            case "embeddedCFF":
                return 2;
            default:
                return null
        }
    };
    bU.toString = function(i) {
        switch (i) {
            case 0:
                return "device";
            case 1:
                return "embedded";
            case 2:
                return "embeddedCFF";
            default:
                return null
        }
    };
    var fy = {};
    nt["openfl.text._GridFitType.GridFitType_Impl_"] = fy;
    fy.__name__ = ["openfl", "text", "_GridFitType", "GridFitType_Impl_"];
    fy.fromString = function(i) {
        switch (i) {
            case "none":
                return 0;
            case "pixel":
                return 1;
            case "subpixel":
                return 2;
            default:
                return null
        }
    };
    fy.toString = function(i) {
        switch (i) {
            case 0:
                return "none";
            case 1:
                return "pixel";
            case 2:
                return "subpixel";
            default:
                return null
        }
    };
    var b2 = {};
    nt["openfl.text._TextFieldAutoSize.TextFieldAutoSize_Impl_"] = b2;
    b2.__name__ = ["openfl", "text", "_TextFieldAutoSize", "TextFieldAutoSize_Impl_"];
    b2.fromString = function(i) {
        switch (i) {
            case "center":
                return 0;
            case "left":
                return 1;
            case "none":
                return 2;
            case "right":
                return 3;
            default:
                return null
        }
    };
    b2.toString = function(i) {
        switch (i) {
            case 0:
                return "center";
            case 1:
                return "left";
            case 2:
                return "none";
            case 3:
                return "right";
            default:
                return null
        }
    };
    var bM = {};
    nt["openfl.text._TextFieldType.TextFieldType_Impl_"] = bM;
    bM.__name__ = ["openfl", "text", "_TextFieldType", "TextFieldType_Impl_"];
    bM.fromString = function(i) {
        switch (i) {
            case "dynamic":
                return 0;
            case "input":
                return 1;
            default:
                return null
        }
    };
    bM.toString = function(i) {
        switch (i) {
            case 0:
                return "dynamic";
            case 1:
                return "input";
            default:
                return null
        }
    };
    var mC = function(js, q5, qZ, q4, q0, i1, q, q3, q2, i, q1, i2, qY) {
        this.font = js;
        this.size = q5;
        this.color = qZ;
        this.bold = q4;
        this.italic = q0;
        this.underline = i1;
        this.url = q;
        this.target = q3;
        this.align = q2;
        this.leftMargin = i;
        this.rightMargin = q1;
        this.indent = i2;
        this.leading = qY
    };
    nt["openfl.text.TextFormat"] = mC;
    mC.__name__ = ["openfl", "text", "TextFormat"];
    mC.prototype = {
        align: null,
        blockIndent: null,
        bold: null,
        bullet: null,
        color: null,
        font: null,
        indent: null,
        italic: null,
        kerning: null,
        leading: null,
        leftMargin: null,
        letterSpacing: null,
        rightMargin: null,
        size: null,
        tabStops: null,
        target: null,
        underline: null,
        url: null,
        clone: function() {
            var i = new mC(this.font, this.size, this.color, this.bold, this.italic, this.underline, this.url, this.target);
            i.align = this.align;
            i.leftMargin = this.leftMargin;
            i.rightMargin = this.rightMargin;
            i.indent = this.indent;
            i.leading = this.leading;
            i.blockIndent = this.blockIndent;
            i.bullet = this.bullet;
            i.kerning = this.kerning;
            i.letterSpacing = this.letterSpacing;
            i.tabStops = this.tabStops;
            return i
        },
        __merge: function(i) {
            if (i.font != null) {
                this.font = i.font
            }
            if (i.size != null) {
                this.size = i.size
            }
            if (i.color != null) {
                this.color = i.color
            }
            if (i.bold != null) {
                this.bold = i.bold
            }
            if (i.italic != null) {
                this.italic = i.italic
            }
            if (i.underline != null) {
                this.underline = i.underline
            }
            if (i.url != null) {
                this.url = i.url
            }
            if (i.target != null) {
                this.target = i.target
            }
            if (i.align != null) {
                this.align = i.align
            }
            if (i.leftMargin != null) {
                this.leftMargin = i.leftMargin
            }
            if (i.rightMargin != null) {
                this.rightMargin = i.rightMargin
            }
            if (i.indent != null) {
                this.indent = i.indent
            }
            if (i.leading != null) {
                this.leading = i.leading
            }
            if (i.blockIndent != null) {
                this.blockIndent = i.blockIndent
            }
            if (i.bullet != null) {
                this.bullet = i.bullet
            }
            if (i.kerning != null) {
                this.kerning = i.kerning
            }
            if (i.letterSpacing != null) {
                this.letterSpacing = i.letterSpacing
            }
            if (i.tabStops != null) {
                this.tabStops = i.tabStops
            }
        },
        __class__: mC
    };
    var qh = {};
    nt["openfl.text._TextFormatAlign.TextFormatAlign_Impl_"] = qh;
    qh.__name__ = ["openfl", "text", "_TextFormatAlign", "TextFormatAlign_Impl_"];
    qh.fromString = function(i) {
        switch (i) {
            case "center":
                return 0;
            case "end":
                return 1;
            case "justify":
                return 2;
            case "left":
                return 3;
            case "right":
                return 4;
            case "start":
                return 5;
            default:
                return null
        }
    };
    qh.toString = function(i) {
        switch (i) {
            case 0:
                return "center";
            case 1:
                return "end";
            case 2:
                return "justify";
            case 3:
                return "left";
            case 4:
                return "right";
            case 5:
                return "start";
            default:
                return null
        }
    };
    var J = function(i1, i2, q, js, i, qY) {
        this.x = i1;
        this.width = i2;
        this.height = q;
        this.ascent = js;
        this.descent = i;
        this.leading = qY
    };
    nt["openfl.text.TextLineMetrics"] = J;
    J.__name__ = ["openfl", "text", "TextLineMetrics"];
    J.prototype = {
        ascent: null,
        descent: null,
        height: null,
        leading: null,
        width: null,
        x: null,
        __class__: J
    };
    var k3 = function() {
        lR.call(this);
        k3.__instances.push(this)
    };
    nt["openfl.ui.GameInput"] = k3;
    k3.__name__ = ["openfl", "ui", "GameInput"];
    k3.getDeviceAt = function(i) {
        if (i >= 0 && i < k3.__deviceList.length) {
            return k3.__deviceList[i]
        }
        return null
    };
    k3.__getDevice = function(i) {
        if (i == null) {
            return null
        }
        if (!(k3.__devices.h.__keys__[i.__id__] != null)) {
            var q = new nQ(i.get_guid(), i.get_name());
            k3.__deviceList.push(q);
            k3.__devices.set(i, q);
            k3.numDevices = k3.__deviceList.length
        }
        return k3.__devices.h[i.__id__]
    };
    k3.__onGamepadAxisMove = function(q, i1, js) {
        var i2 = k3.__getDevice(q);
        if (i2 == null) {
            return
        }
        if (i2.enabled) {
            if (!i2.__axis.h.hasOwnProperty(i1)) {
                var i = new nG(i2, "AXIS_" + (function(q0) {
                    var qZ;
                    switch (i1) {
                        case 0:
                            qZ = "LEFT_X";
                            break;
                        case 1:
                            qZ = "LEFT_Y";
                            break;
                        case 2:
                            qZ = "RIGHT_X";
                            break;
                        case 3:
                            qZ = "RIGHT_Y";
                            break;
                        case 4:
                            qZ = "TRIGGER_LEFT";
                            break;
                        case 5:
                            qZ = "TRIGGER_RIGHT";
                            break;
                        default:
                            qZ = "UNKNOWN (" + i1 + ")"
                    }
                    return qZ
                }(this)), -1, 1);
                i2.__axis.h[i1] = i;
                i2.__controls.push(i)
            }
            var qY = i2.__axis.h[i1];
            qY.value = js;
            qY.dispatchEvent(new hM("change"))
        }
    };
    k3.__onGamepadButtonDown = function(i1, q) {
        var i2 = k3.__getDevice(i1);
        if (i2 == null) {
            return
        }
        if (i2.enabled) {
            if (!i2.__button.h.hasOwnProperty(q)) {
                var i = new nG(i2, "BUTTON_" + (function(qZ) {
                    var qY;
                    switch (q) {
                        case 0:
                            qY = "A";
                            break;
                        case 1:
                            qY = "B";
                            break;
                        case 2:
                            qY = "X";
                            break;
                        case 3:
                            qY = "Y";
                            break;
                        case 4:
                            qY = "BACK";
                            break;
                        case 5:
                            qY = "GUIDE";
                            break;
                        case 6:
                            qY = "START";
                            break;
                        case 7:
                            qY = "LEFT_STICK";
                            break;
                        case 8:
                            qY = "RIGHT_STICK";
                            break;
                        case 9:
                            qY = "LEFT_SHOULDER";
                            break;
                        case 10:
                            qY = "RIGHT_SHOULDER";
                            break;
                        case 11:
                            qY = "DPAD_UP";
                            break;
                        case 12:
                            qY = "DPAD_DOWN";
                            break;
                        case 13:
                            qY = "DPAD_LEFT";
                            break;
                        case 14:
                            qY = "DPAD_RIGHT";
                            break;
                        default:
                            qY = "UNKNOWN (" + q + ")"
                    }
                    return qY
                }(this)), 0, 1);
                i2.__button.h[q] = i;
                i2.__controls.push(i)
            }
            var js = i2.__button.h[q];
            js.value = 1;
            js.dispatchEvent(new hM("change"))
        }
    };
    k3.__onGamepadButtonUp = function(i1, q) {
        var i2 = k3.__getDevice(i1);
        if (i2 == null) {
            return
        }
        if (i2.enabled) {
            if (!i2.__button.h.hasOwnProperty(q)) {
                var i = new nG(i2, "BUTTON_" + (function(qZ) {
                    var qY;
                    switch (q) {
                        case 0:
                            qY = "A";
                            break;
                        case 1:
                            qY = "B";
                            break;
                        case 2:
                            qY = "X";
                            break;
                        case 3:
                            qY = "Y";
                            break;
                        case 4:
                            qY = "BACK";
                            break;
                        case 5:
                            qY = "GUIDE";
                            break;
                        case 6:
                            qY = "START";
                            break;
                        case 7:
                            qY = "LEFT_STICK";
                            break;
                        case 8:
                            qY = "RIGHT_STICK";
                            break;
                        case 9:
                            qY = "LEFT_SHOULDER";
                            break;
                        case 10:
                            qY = "RIGHT_SHOULDER";
                            break;
                        case 11:
                            qY = "DPAD_UP";
                            break;
                        case 12:
                            qY = "DPAD_DOWN";
                            break;
                        case 13:
                            qY = "DPAD_LEFT";
                            break;
                        case 14:
                            qY = "DPAD_RIGHT";
                            break;
                        default:
                            qY = "UNKNOWN (" + q + ")"
                    }
                    return qY
                }(this)), 0, 1);
                i2.__button.h[q] = i;
                i2.__controls.push(i)
            }
            var js = i2.__button.h[q];
            js.value = 0;
            js.dispatchEvent(new hM("change"))
        }
    };
    k3.__onGamepadConnect = function(q) {
        var i1 = k3.__getDevice(q);
        if (i1 == null) {
            return
        }
        var js = 0;
        var i2 = k3.__instances;
        while (js < i2.length) {
            var i = i2[js];
            ++js;
            i.dispatchEvent(new qj("deviceAdded", null, null, i1))
        }
    };
    k3.__onGamepadDisconnect = function(i1) {
        var i2 = k3.__devices.h[i1.__id__];
        if (i2 != null) {
            if (k3.__devices.h.__keys__[i1.__id__] != null) {
                var q = k3.__devices.h[i1.__id__];
                cj.remove(k3.__deviceList, q);
                k3.__devices.remove(i1)
            }
            k3.numDevices = k3.__deviceList.length;
            var qY = 0;
            var js = k3.__instances;
            while (qY < js.length) {
                var i = js[qY];
                ++qY;
                i.dispatchEvent(new qj("deviceRemoved", null, null, i2))
            }
        }
    };
    k3.__super__ = lR;
    k3.prototype = lP(lR.prototype, {
        __class__: k3
    });
    var nG = function(i, js, i1, i2, q) {
        if (q == null) {
            q = 0
        }
        lR.call(this);
        this.device = i;
        this.id = js;
        this.minValue = i1;
        this.maxValue = i2;
        this.value = q
    };
    nt["openfl.ui.GameInputControl"] = nG;
    nG.__name__ = ["openfl", "ui", "GameInputControl"];
    nG.__super__ = lR;
    nG.prototype = lP(lR.prototype, {
        device: null,
        id: null,
        maxValue: null,
        minValue: null,
        value: null,
        __class__: nG
    });
    var nQ = function(q1, q) {
        this.__controls = [];
        this.__button = new c6();
        this.__axis = new c6();
        this.id = q1;
        this.name = q;
        var qZ;
        var q0 = 0;
        while (q0 < 6) {
            var i2 = q0++;
            qZ = new nG(this, "AXIS_" + i2, -1, 1);
            this.__axis.h[i2] = qZ;
            this.__controls.push(qZ)
        }
        var qY = 0;
        while (qY < 15) {
            var js = qY++;
            qZ = new nG(this, "BUTTON_" + js, 0, 1);
            this.__button.h[js] = qZ;
            this.__controls.push(qZ)
        }
    };
    nt["openfl.ui.GameInputDevice"] = nQ;
    nQ.__name__ = ["openfl", "ui", "GameInputDevice"];
    nQ.prototype = {
        enabled: null,
        id: null,
        name: null,
        sampleInterval: null,
        __axis: null,
        __button: null,
        __controls: null,
        __gamepad: null,
        getCachedSamples: function(q, i) {
            if (i == null) {
                i = false
            }
            return 0
        },
        getControlAt: function(q) {
            if (q >= 0 && q < this.__controls.length) {
                return this.__controls[q]
            }
            return null
        },
        startCachingSamples: function(q, i) {},
        stopCachingSamples: function() {},
        get_numControls: function() {
            return this.__controls.length
        },
        __class__: nQ,
        __properties__: {
            get_numControls: "get_numControls"
        }
    };
    var gG = function() {};
    nt["openfl.ui.Keyboard"] = gG;
    gG.__name__ = ["openfl", "ui", "Keyboard"];
    gG.capsLock = null;
    gG.numLock = null;
    gG.isAccessible = function() {
        return false
    };
    gG.__convertKeyCode = function(i) {
        switch (i) {
            case 8:
                return 8;
            case 9:
                return 9;
            case 13:
                return 13;
            case 27:
                return 27;
            case 32:
                return 32;
            case 33:
                return 49;
            case 34:
                return 222;
            case 35:
                return 51;
            case 36:
                return 52;
            case 37:
                return 53;
            case 38:
                return 55;
            case 39:
                return 222;
            case 40:
                return 57;
            case 41:
                return 48;
            case 42:
                return 56;
            case 44:
                return 188;
            case 45:
                return 189;
            case 46:
                return 190;
            case 47:
                return 191;
            case 48:
                return 48;
            case 49:
                return 49;
            case 50:
                return 50;
            case 51:
                return 51;
            case 52:
                return 52;
            case 53:
                return 53;
            case 54:
                return 54;
            case 55:
                return 55;
            case 56:
                return 56;
            case 57:
                return 57;
            case 58:
                return 186;
            case 59:
                return 186;
            case 60:
                return 60;
            case 61:
                return 187;
            case 62:
                return 190;
            case 63:
                return 191;
            case 64:
                return 50;
            case 91:
                return 219;
            case 92:
                return 220;
            case 93:
                return 221;
            case 94:
                return 54;
            case 95:
                return 189;
            case 96:
                return 192;
            case 97:
                return 65;
            case 98:
                return 66;
            case 99:
                return 67;
            case 100:
                return 68;
            case 101:
                return 69;
            case 102:
                return 70;
            case 103:
                return 71;
            case 104:
                return 72;
            case 105:
                return 73;
            case 106:
                return 74;
            case 107:
                return 75;
            case 108:
                return 76;
            case 109:
                return 77;
            case 110:
                return 78;
            case 111:
                return 79;
            case 112:
                return 80;
            case 113:
                return 81;
            case 114:
                return 82;
            case 115:
                return 83;
            case 116:
                return 84;
            case 117:
                return 85;
            case 118:
                return 86;
            case 119:
                return 87;
            case 120:
                return 88;
            case 121:
                return 89;
            case 122:
                return 90;
            case 127:
                return 46;
            case 1073741881:
                return 20;
            case 1073741882:
                return 112;
            case 1073741883:
                return 113;
            case 1073741884:
                return 114;
            case 1073741885:
                return 115;
            case 1073741886:
                return 116;
            case 1073741887:
                return 117;
            case 1073741888:
                return 118;
            case 1073741889:
                return 119;
            case 1073741890:
                return 120;
            case 1073741891:
                return 121;
            case 1073741892:
                return 122;
            case 1073741893:
                return 123;
            case 1073741894:
                return 301;
            case 1073741895:
                return 145;
            case 1073741896:
                return 19;
            case 1073741897:
                return 45;
            case 1073741898:
                return 36;
            case 1073741899:
                return 33;
            case 1073741901:
                return 35;
            case 1073741902:
                return 34;
            case 1073741903:
                return 39;
            case 1073741904:
                return 37;
            case 1073741905:
                return 40;
            case 1073741906:
                return 38;
            case 1073741907:
                return 144;
            case 1073741908:
                return 111;
            case 1073741909:
                return 106;
            case 1073741910:
                return 109;
            case 1073741911:
                return 107;
            case 1073741912:
                return 108;
            case 1073741913:
                return 97;
            case 1073741914:
                return 98;
            case 1073741915:
                return 99;
            case 1073741916:
                return 100;
            case 1073741917:
                return 101;
            case 1073741918:
                return 102;
            case 1073741919:
                return 103;
            case 1073741920:
                return 104;
            case 1073741921:
                return 105;
            case 1073741922:
                return 96;
            case 1073741923:
                return 110;
            case 1073741925:
                return 302;
            case 1073741928:
                return 124;
            case 1073741929:
                return 125;
            case 1073741930:
                return 126;
            case 1073741982:
                return 13;
            case 1073742044:
                return 110;
            case 1073742048:
                return 17;
            case 1073742049:
                return 16;
            case 1073742050:
                return 18;
            case 1073742051:
                return 15;
            case 1073742052:
                return 17;
            case 1073742053:
                return 16;
            case 1073742054:
                return 18;
            case 1073742055:
                return 15;
            default:
                return i
        }
    };
    gG.__getCharCode = function(q, i) {
        if (i == null) {
            i = false
        }
        if (!i) {
            switch (q) {
                case 8:
                    return 8;
                case 9:
                    return 9;
                case 13:
                    return 13;
                case 27:
                    return 27;
                case 32:
                    return 32;
                case 186:
                    return 59;
                case 187:
                    return 61;
                case 188:
                    return 44;
                case 189:
                    return 45;
                case 190:
                    return 46;
                case 191:
                    return 47;
                case 192:
                    return 96;
                case 219:
                    return 91;
                case 220:
                    return 92;
                case 221:
                    return 93;
                case 222:
                    return 39
            }
            if (q >= 48 && q <= 57) {
                return q - 48 + 48
            }
            if (q >= 65 && q <= 90) {
                return q - 65 + 97
            }
        } else {
            switch (q) {
                case 48:
                    return 41;
                case 49:
                    return 33;
                case 50:
                    return 64;
                case 51:
                    return 35;
                case 52:
                    return 36;
                case 53:
                    return 37;
                case 54:
                    return 94;
                case 55:
                    return 38;
                case 56:
                    return 42;
                case 57:
                    return 40;
                case 186:
                    return 58;
                case 187:
                    return 43;
                case 188:
                    return 60;
                case 189:
                    return 95;
                case 190:
                    return 62;
                case 191:
                    return 63;
                case 192:
                    return 126;
                case 219:
                    return 123;
                case 220:
                    return 124;
                case 221:
                    return 125;
                case 222:
                    return 34
            }
            if (q >= 65 && q <= 90) {
                return q - 65 + 65
            }
        }
        if (q >= 96 && q <= 105) {
            return q - 96 + 48
        }
        switch (q) {
            case 106:
                return 42;
            case 107:
                return 43;
            case 108:
                return 44;
            case 110:
                return 45;
            case 111:
                return 46;
            case 46:
                return 127;
            case 13:
                return 13;
            case 8:
                return 8
        }
        return 0
    };
    gG.__getKeyLocation = function(i) {
        switch (i) {
            case 1073742048:
            case 1073742049:
            case 1073742050:
            case 1073742051:
                return 1;
            case 1073742052:
            case 1073742053:
            case 1073742054:
            case 1073742055:
                return 2;
            case 1073741908:
            case 1073741909:
            case 1073741910:
            case 1073741911:
            case 1073741912:
            case 1073741913:
            case 1073741914:
            case 1073741915:
            case 1073741916:
            case 1073741917:
            case 1073741918:
            case 1073741919:
            case 1073741920:
            case 1073741921:
            case 1073741922:
            case 1073741923:
            case 1073742044:
                return 3;
            default:
                return 0
        }
    };
    var op = {};
    nt["openfl.utils._ByteArray.ByteArray_Impl_"] = op;
    op.__name__ = ["openfl", "utils", "_ByteArray", "ByteArray_Impl_"];
    op.__properties__ = {
        set_length: "set_length",
        get_length: "get_length"
    };
    op.defaultObjectEncoding = null;
    op._new = function(i) {
        if (i == null) {
            i = 0
        }
        return new ge(i)
    };
    op.get = function(i, q) {
        return i.b[q]
    };
    op.set = function(i, q, i1) {
        i.b[q] = i1 & 255;
        return i1
    };
    op.fromArrayBuffer = function(i) {
        return ge.fromBytes(eg.ofData(i))
    };
    op.fromBytes = function(i) {
        if (n0.__instanceof(i, ge)) {
            return i
        } else {
            return ge.fromBytes(i)
        }
    };
    op.fromBytesData = function(i) {
        return ge.fromBytes(eg.ofData(i))
    };
    op.toArrayBuffer = function(i) {
        return i.b.bufferValue
    };
    op.toBytes = function(i) {
        return i
    };
    op.toBytesData = function(i) {
        return i.b.bufferValue
    };
    op.toLimeBytes = function(i) {
        return new r(op.get_length(i), i.b.bufferValue)
    };
    op.get_length = function(i) {
        return i.__length
    };
    op.set_length = function(i, q) {
        if (q > 0) {
            i.__resize(q)
        }
        i.__length = q;
        return q
    };
    var iu = function() {};
    nt["openfl.utils.IDataOutput"] = iu;
    iu.__name__ = ["openfl", "utils", "IDataOutput"];
    iu.prototype = {
        get_endian: null,
        set_endian: null,
        objectEncoding: null,
        writeBoolean: null,
        writeByte: null,
        writeBytes: null,
        writeDouble: null,
        writeFloat: null,
        writeInt: null,
        writeMultiByte: null,
        writeShort: null,
        writeUTF: null,
        writeUTFBytes: null,
        writeUnsignedInt: null,
        __class__: iu,
        __properties__: {
            set_endian: "set_endian",
            get_endian: "get_endian"
        }
    };
    var nw = function() {};
    nt["openfl.utils.IDataInput"] = nw;
    nw.__name__ = ["openfl", "utils", "IDataInput"];
    nw.prototype = {
        get_bytesAvailable: null,
        get_endian: null,
        set_endian: null,
        objectEncoding: null,
        readBoolean: null,
        readByte: null,
        readBytes: null,
        readDouble: null,
        readFloat: null,
        readInt: null,
        readMultiByte: null,
        readShort: null,
        readUnsignedByte: null,
        readUnsignedInt: null,
        readUnsignedShort: null,
        readUTF: null,
        readUTFBytes: null,
        __class__: nw,
        __properties__: {
            set_endian: "set_endian",
            get_endian: "get_endian",
            get_bytesAvailable: "get_bytesAvailable"
        }
    };
	
	
	//AGAR_DECRYPTION
    var ge = function(q) {
        if (q == null) {
            q = 0
        }
        var i = eg.alloc(q);
        eg.call(this, i.b.buffer);
        this.__length = q;
        this.__endian = 0;
        this.position = 0
    };
    nt["openfl.utils.ByteArrayData"] = ge;
    ge.__name__ = ["openfl", "utils", "ByteArrayData"];
    ge.__interfaces__ = [iu, nw];
    ge.fromBytes = function(q) {
        var i = new ge();
        i.__fromBytes(q);
        return i
    };
    ge.__super__ = eg;
    ge.prototype = lP(eg.prototype, {
        objectEncoding: null,
        position: null,
        __endian: null,
        __length: null,
        clear: function() {
            this.__length = 0;
            this.position = 0
        },
        compress: function(i) {
            this.__length = this.length;
            this.position = this.__length
        },
        deflate: function() {
            this.compress(0)
        },
        inflate: function() {
            this.uncompress(0)
        },
        readBoolean: function() {
            if (this.position < this.length) {
                return this.get(this.position++) != 0
            } else {
                throw new nM(new jK());
                return false
            }
        },
        readByte: function() {
            var i = this.readUnsignedByte();
            if ((i & 128) != 0) {
                return i - 256
            } else {
                return i
            }
        },
        readBytes: function(i, i1, q) {
            if (q == null) {
                q = 0
            }
            if (i1 == null) {
                i1 = 0
            }
            if (q == 0) {
                q = this.__length - this.position
            }
            if (this.position + q > this.__length) {
                throw new nM(new jK())
            }
            if (i.__length < i1 + q) {
                i.__resize(i1 + q)
            }
            i.blit(i1, this, this.position, q);
            this.position += q
        },
        readDouble: function() {
            if (this.position + 8 > this.__length) {
                throw new nM(new jK())
            }
            this.position += 8;
            return this.getDouble(this.position - 8)
        },
        readFloat: function() {
            if (this.position + 4 > this.__length) {
                throw new nM(new jK())
            }
            this.position += 4;
            return this.getFloat(this.position - 4)
        },
        readInt: function() {
            var i2 = this.readUnsignedByte();
            var i1 = this.readUnsignedByte();
            var q = this.readUnsignedByte();
            var i = this.readUnsignedByte();
            if (this.__endian == 1) {
                return i << 24 | q << 16 | i1 << 8 | i2
            } else {
                return i2 << 24 | i1 << 16 | q << 8 | i
            }
        },
        readMultiByte: function(q, i) {
            return this.readUTFBytes(q)
        },
        readShort: function() {
            var q = this.readUnsignedByte();
            var i = this.readUnsignedByte();
            var i1;
            if (this.__endian == 1) {
                i1 = i << 8 | q
            } else {
                i1 = q << 8 | i
            }
            if ((i1 & 32768) != 0) {
                return i1 - 65536
            } else {
                return i1
            }
        },
        readUnsignedByte: function() {
            if (this.position < this.__length) {
                return this.get(this.position++)
            } else {
                throw new nM(new jK());
                return 0
            }
        },
        readUnsignedInt: function() {
            var i2 = this.readUnsignedByte();
            var i1 = this.readUnsignedByte();
            var q = this.readUnsignedByte();
            var i = this.readUnsignedByte();
            if (this.__endian == 1) {
                return i << 24 | q << 16 | i1 << 8 | i2
            } else {
                return i2 << 24 | i1 << 16 | q << 8 | i
            }
        },
        readUnsignedShort: function() {
            var q = this.readUnsignedByte();
            var i = this.readUnsignedByte();
            if (this.__endian == 1) {
                return (i << 8) + q
            } else {
                return q << 8 | i
            }
        },
        readUTF: function() {
            var i = this.readUnsignedShort();
            return this.readUTFBytes(i)
        },
        readUTFBytes: function(i) {
            if (this.position + i > this.__length) {
                throw new nM(new jK())
            }
            this.position += i;
            return this.getString(this.position - i, i)
        },
        uncompress: function(i) {
            this.__setData(mv.run(this));
            this.__length = this.length;
            this.position = 0
        },
        writeBoolean: function(i) {
            this.writeByte(i ? 1 : 0)
        },
        writeByte: function(i) {
            this.__resize(this.position + 1);
            this.set(this.position++, i & 255)
        },
        writeBytes: function(q, i2, i1) {
            if (i1 == null) {
                i1 = 0
            }
            if (i2 == null) {
                i2 = 0
            }
            if (op.get_length(q) == 0) {
                return
            }
            if (i1 == 0) {
                var i = op.get_length(q);
                i1 = i - i2
            }
            this.__resize(this.position + i1);
            this.blit(this.position, q, i2, i1);
            this.position = this.position + i1
        },
        writeDouble: function(i) {
            this.__resize(this.position + 8);
            this.setDouble(this.position, i);
            this.position += 8
        },
        writeFloat: function(i) {
            this.__resize(this.position + 4);
            this.setFloat(this.position, i);
            this.position += 4
        },
        writeInt: function(i) {
            this.__resize(this.position + 4);
            if (this.__endian == 1) {
                this.set(this.position++, i);
                this.set(this.position++, i >> 8);
                this.set(this.position++, i >> 16);
                this.set(this.position++, i >> 24)
            } else {
                this.set(this.position++, i >> 24);
                this.set(this.position++, i >> 16);
                this.set(this.position++, i >> 8);
                this.set(this.position++, i)
            }
        },
        writeMultiByte: function(q, i) {
            this.writeUTFBytes(q)
        },
        writeShort: function(i) {
            this.__resize(this.position + 2);
            if (this.__endian == 1) {
                this.set(this.position++, i);
                this.set(this.position++, i >> 8)
            } else {
                this.set(this.position++, i >> 8);
                this.set(this.position++, i)
            }
        },
        writeUnsignedInt: function(i) {
            this.writeInt(i)
        },
        writeUTF: function(q) {
            var i = eg.ofString(q);
            this.writeShort(i.length);
            this.writeBytes(op.fromBytes(i))
        },
        writeUTFBytes: function(q) {
            var i = eg.ofString(q);
            this.writeBytes(op.fromBytes(eg.ofString(q)))
        },
        __fromBytes: function(i) {
            this.b = i.b;
            this.length = i.length;
            this.data = i.data;
            this.__length = i.length
        },
        __resize: function(q) {
            if (q > this.length) {
                var i = eg.alloc((q + 1) * 3 >> 1);
                i.blit(0, this, 0, this.length);
                this.b = i.b;
                this.length = i.length;
                this.data = i.data
            }
            if (this.__length < q) {
                this.__length = q
            }
        },
        __setData: function(i) {
            this.b = i.b;
            this.length = i.length;
            this.data = i.data
        },
        get_bytesAvailable: function() {
            return this.__length - this.position
        },
        get_endian: function() {
            return this.__endian
        },
        set_endian: function(i) {
            return this.__endian = i
        },
        __class__: ge,
        __properties__: {
            set_endian: "set_endian",
            get_endian: "get_endian",
            get_bytesAvailable: "get_bytesAvailable"
        }
    });
    var gp = {};
    nt["openfl.utils._CompressionAlgorithm.CompressionAlgorithm_Impl_"] = gp;
    gp.__name__ = ["openfl", "utils", "_CompressionAlgorithm", "CompressionAlgorithm_Impl_"];
    gp.fromString = function(i) {
        switch (i) {
            case "deflate":
                return 0;
            case "lzma":
                return 1;
            case "zlib":
                return 2;
            default:
                return null
        }
    };
    gp.toString = function(i) {
        switch (i) {
            case 0:
                return "deflate";
            case 1:
                return "lzma";
            case 2:
                return "zlib";
            default:
                return null
        }
    };
    var i3 = {};
    nt["openfl.utils._Endian.Endian_Impl_"] = i3;
    i3.__name__ = ["openfl", "utils", "_Endian", "Endian_Impl_"];
    i3.fromString = function(i) {
        switch (i) {
            case "bigEndian":
                return 0;
            case "littleEndian":
                return 1;
            default:
                return null
        }
    };
    i3.toString = function(i) {
        switch (i) {
            case 0:
                return "bigEndian";
            case 1:
                return "littleEndian";
            default:
                return null
        }
    };
    var hq = {};
    nt["openfl.utils._Object.Object_Impl_"] = hq;
    hq.__name__ = ["openfl", "utils", "_Object", "Object_Impl_"];
    hq._new = function() {
        return {}
    };
    hq.hasOwnProperty = function(i, q) {
        return i != null && Object.prototype.hasOwnProperty.call(i, q)
    };
    hq.isPrototypeOf = function(i, i1) {
        var q;
        if (i == null) {
            q = null
        } else {
            q = n0.getClass(i)
        }
        while (q != null) {
            if (q == i1) {
                return true
            }
            q = kX.getSuperClass(q)
        }
        return false
    };
    hq.iterator = function(q) {
        var i = ar.fields(q);
        if (i == null) {
            i = []
        }
        return cj.iter(i)
    };
    hq.propertyIsEnumerable = function(i, q) {
        return i != null && Object.prototype.hasOwnProperty.call(i, q) && kr.is(ar.field(i, q), j8)
    };
    hq.toLocaleString = function(i) {
        return kr.string(i)
    };
    hq.toString = function(i) {
        return kr.string(i)
    };
    hq.valueOf = function(i) {
        return i
    };
    hq.__get = function(i, q) {
        return ar.field(i, q)
    };
    hq.__set = function(i, q, i1) {
        i[q] = i1;
        return i1
    };
    var ed = function() {};
    nt["haxe.lang.Iterator"] = ed;
    ed.__name__ = ["haxe", "lang", "Iterator"];
    ed.prototype = {
        hasNext: null,
        next: null,
        __class__: ed
    };
    var j8 = function() {};
    nt["haxe.lang.Iterable"] = j8;
    j8.__name__ = ["haxe", "lang", "Iterable"];
    j8.prototype = {
        iterator: null,
        __class__: j8
    };
    var U = function() {
        this.position = {
            x: 0,
            y: 0
        };
        this.direction = {
            x: 0,
            y: 0
        };
        this.startPos = {
            x: 0,
            y: 0
        };
        this.color = {
            r: 0,
            g: 0,
            b: 0,
            a: 0
        };
        this.colorDelta = {
            r: 0,
            g: 0,
            b: 0,
            a: 0
        }
    };
    nt["org.zamedev.particles.Particle"] = U;
    U.__name__ = ["org", "zamedev", "particles", "Particle"];
    U.prototype = {
        startPos: null,
        position: null,
        direction: null,
        color: null,
        colorDelta: null,
        rotation: null,
        rotationDelta: null,
        radius: null,
        radiusDelta: null,
        angle: null,
        angleDelta: null,
        particleSize: null,
        particleSizeDelta: null,
        radialAcceleration: null,
        tangentialAcceleration: null,
        timeToLive: null,
        update: function(qY, q) {
            this.timeToLive -= q;
            if (this.timeToLive <= 0) {
                return false
            }
            if (qY.emitterType == 1) {
                this.angle += this.angleDelta * q;
                this.radius += this.radiusDelta * q;
                this.position.x = this.startPos.x - Math.cos(this.angle) * this.radius;
                this.position.y = this.startPos.y - Math.sin(this.angle) * this.radius * qY.yCoordMultiplier
            } else {
                var js = 0;
                var i1 = 0;
                this.position.x -= this.startPos.x;
                this.position.y = (this.position.y - this.startPos.y) * qY.yCoordMultiplier;
                if (this.position.x != 0 || this.position.y != 0) {
                    var i = Math.sqrt(this.position.x * this.position.x + this.position.y * this.position.y);
                    js = this.position.x / i;
                    i1 = this.position.y / i
                }
                var qZ = -i1;
                var i2 = js;
                js *= this.radialAcceleration;
                i1 *= this.radialAcceleration;
                qZ *= this.tangentialAcceleration;
                i2 *= this.tangentialAcceleration;
                this.direction.x += (js + qZ + qY.gravity.x) * q;
                this.direction.y += (i1 + i2 + qY.gravity.y) * q;
                this.position.x += this.direction.x * q + this.startPos.x;
                this.position.y = (this.position.y + this.direction.y * q) * qY.yCoordMultiplier + this.startPos.y
            }
            this.color.r += this.colorDelta.r * q;
            this.color.g += this.colorDelta.g * q;
            this.color.b += this.colorDelta.b * q;
            this.color.a += this.colorDelta.a * q;
            this.particleSize += this.particleSizeDelta * q;
            this.particleSize = Math.max(0, this.particleSize);
            this.rotation += this.rotationDelta * q;
            return true
        },
        __class__: U
    };
    var hV = function() {
        this.active = false;
        this.restart = false;
        this.particleScaleX = 1;
        this.particleScaleY = 1;
        this.particleScaleSize = 1
    };
    nt["org.zamedev.particles.ParticleSystem"] = hV;
    hV.__name__ = ["org", "zamedev", "particles", "ParticleSystem"];
    hV.prototype = {
        emitterType: null,
        maxParticles: null,
        positionType: null,
        duration: null,
        gravity: null,
        particleLifespan: null,
        particleLifespanVariance: null,
        speed: null,
        speedVariance: null,
        sourcePosition: null,
        sourcePositionVariance: null,
        angle: null,
        angleVariance: null,
        startParticleSize: null,
        startParticleSizeVariance: null,
        finishParticleSize: null,
        finishParticleSizeVariance: null,
        startColor: null,
        startColorVariance: null,
        finishColor: null,
        finishColorVariance: null,
        minRadius: null,
        minRadiusVariance: null,
        maxRadius: null,
        maxRadiusVariance: null,
        rotationStart: null,
        rotationStartVariance: null,
        rotationEnd: null,
        rotationEndVariance: null,
        radialAcceleration: null,
        radialAccelerationVariance: null,
        tangentialAcceleration: null,
        tangentialAccelerationVariance: null,
        rotatePerSecond: null,
        rotatePerSecondVariance: null,
        blendFuncSource: null,
        blendFuncDestination: null,
        textureBitmapData: null,
        active: null,
        restart: null,
        particleScaleX: null,
        particleScaleY: null,
        particleScaleSize: null,
        yCoordMultiplier: null,
        prevTime: null,
        emissionRate: null,
        emitCounter: null,
        elapsedTime: null,
        __particleList: null,
        __particleCount: null,
        __initialize: function() {
            if (this.blendFuncSource == 772) {
                this.blendFuncSource = 1
            }
            if (this.blendFuncDestination == 772) {
                this.blendFuncDestination = 1
            }
            this.prevTime = -1;
            this.emissionRate = this.maxParticles / Math.max(0.0001, this.particleLifespan);
            this.emitCounter = 0;
            this.elapsedTime = 0;
            this.__particleList = [];
            this.__particleCount = 0;
            var i1 = 0;
            var i2 = this.maxParticles;
            while (i1 < i2) {
                var q = i1++;
                this.__particleList[q] = new U()
            }
            return this
        },
        __update: function() {
            var qY = og.stamp();
            if (this.prevTime < 0) {
                this.prevTime = qY;
                return false
            }
            var js = qY - this.prevTime;
            if (js < 0.0001) {
                return false
            }
            this.prevTime = qY;
            if (this.active && this.emissionRate > 0) {
                var i2 = 1 / this.emissionRate;
                this.emitCounter += js;
                while (this.__particleCount < this.maxParticles && this.emitCounter > i2) {
                    this.initParticle(this.__particleList[this.__particleCount]);
                    this.__particleCount++;
                    this.emitCounter -= i2
                }
                if (this.emitCounter > i2) {
                    this.emitCounter = this.emitCounter % i2
                }
                this.elapsedTime += js;
                if (this.duration >= 0 && this.duration < this.elapsedTime) {
                    this.stop()
                }
            }
            var i = false;
            if (this.__particleCount > 0) {
                i = true
            }
            var q = 0;
            while (q < this.__particleCount) {
                var qZ = this.__particleList[q];
                if (qZ.update(this, js)) {
                    q++
                } else {
                    if (q != this.__particleCount - 1) {
                        var i1 = this.__particleList[q];
                        this.__particleList[q] = this.__particleList[this.__particleCount - 1];
                        this.__particleList[this.__particleCount - 1] = i1
                    }
                    this.__particleCount--
                }
            }
            if (this.__particleCount > 0) {
                i = true
            } else {
                if (this.restart) {
                    this.active = true
                }
            }
            return i
        },
        initParticle: function(i1) {
            i1.timeToLive = Math.max(0.0001, this.particleLifespan + this.particleLifespanVariance * (Math.random() * 2 - 1));
            i1.startPos.x = this.sourcePosition.x / this.particleScaleX;
            i1.startPos.y = this.sourcePosition.y / this.particleScaleY;
            i1.color = {
                r: et.clamp(this.startColor.r + this.startColorVariance.r * (Math.random() * 2 - 1)),
                g: et.clamp(this.startColor.g + this.startColorVariance.g * (Math.random() * 2 - 1)),
                b: et.clamp(this.startColor.b + this.startColorVariance.b * (Math.random() * 2 - 1)),
                a: et.clamp(this.startColor.a + this.startColorVariance.a * (Math.random() * 2 - 1))
            };
            i1.colorDelta = {
                r: (et.clamp(this.finishColor.r + this.finishColorVariance.r * (Math.random() * 2 - 1)) - i1.color.r) / i1.timeToLive,
                g: (et.clamp(this.finishColor.g + this.finishColorVariance.g * (Math.random() * 2 - 1)) - i1.color.g) / i1.timeToLive,
                b: (et.clamp(this.finishColor.b + this.finishColorVariance.b * (Math.random() * 2 - 1)) - i1.color.b) / i1.timeToLive,
                a: (et.clamp(this.finishColor.a + this.finishColorVariance.a * (Math.random() * 2 - 1)) - i1.color.a) / i1.timeToLive
            };
            i1.particleSize = Math.max(0, this.startParticleSize + this.startParticleSizeVariance * (Math.random() * 2 - 1));
            i1.particleSizeDelta = (Math.max(0, this.finishParticleSize + this.finishParticleSizeVariance * (Math.random() * 2 - 1)) - i1.particleSize) / i1.timeToLive;
            i1.rotation = this.rotationStart + this.rotationStartVariance * (Math.random() * 2 - 1);
            i1.rotationDelta = (this.rotationEnd + this.rotationEndVariance * (Math.random() * 2 - 1) - i1.rotation) / i1.timeToLive;
            var i = this.angle + this.angleVariance * (Math.random() * 2 - 1);
            var q = this.speed + this.speedVariance * (Math.random() * 2 - 1);
            i1.position.x = i1.startPos.x + this.sourcePositionVariance.x * (Math.random() * 2 - 1);
            i1.position.y = i1.startPos.y + this.sourcePositionVariance.y * (Math.random() * 2 - 1);
            i1.direction.x = Math.cos(i) * q;
            i1.direction.y = Math.sin(i) * q;
            i1.radialAcceleration = this.radialAcceleration + this.radialAccelerationVariance * (Math.random() * 2 - 1);
            i1.tangentialAcceleration = this.tangentialAcceleration + this.tangentialAccelerationVariance * (Math.random() * 2 - 1);
            i1.angle = i;
            i1.angleDelta = (this.rotatePerSecond + this.rotatePerSecondVariance * (Math.random() * 2 - 1)) / i1.timeToLive;
            i1.radius = this.maxRadius + this.maxRadiusVariance * (Math.random() * 2 - 1);
            i1.radiusDelta = (this.minRadius + this.minRadiusVariance * (Math.random() * 2 - 1) - i1.radius) / i1.timeToLive
        },
        emit: function(i, q) {
            if (i != null) {
                this.sourcePosition.x = i
            }
            if (q != null) {
                this.sourcePosition.y = q
            }
            this.active = true
        },
        stop: function() {
            this.active = false;
            this.elapsedTime = 0;
            this.emitCounter = 0
        },
        reset: function() {
            this.stop();
            var i1 = 0;
            var i2 = this.__particleCount;
            while (i1 < i2) {
                var q = i1++;
                this.__particleList[q].timeToLive = 0
            }
        },
        __class__: hV
    };
    var kK = function(i) {
        if (i.length < 8) {
            throw new nM("invalid header: size")
        }
        this.data = i;
        if (i.b[0] == 77 && i.b[1] == 77) {
            this.isBigEndian = true
        } else {
            if (i.b[0] == 73 && i.b[1] == 73) {
                this.isBigEndian = false
            } else {
                throw new nM("invalid header: Identifier")
            }
        }
        if (this.getUShort(2) != 42) {
            throw new nM("invalid header: Version")
        }
        this.ifdOffset = this.getULong(4);
        if (this.ifdOffset >= i.length) {
            throw new nM("invalid header: IFDOffset")
        }
    };
    nt["org.zamedev.particles.internal.tiff.TiffDecoder"] = kK;
    kK.__name__ = ["org", "zamedev", "particles", "internal", "tiff", "TiffDecoder"];
    kK.decode = function(i) {
        var q = new kK(i);
        return q.run()
    };
    kK.prototype = {
        data: null,
        isBigEndian: null,
        ifdOffset: null,
        run: function() {
            return this.parseIfd(this.ifdOffset)
        },
        parseIfd: function(qY) {
            var i1 = this.getUShort(qY);
            qY += 2;
            var js = new c6();
            var i2 = 0;
            while (i2 < i1) {
                var q = i2++;
                this.parseTag(qY, js);
                qY += 12
            }
            return this.parseImage(js)
        },
        parseImage: function(re) {
            if (!re.h.hasOwnProperty(256) || !re.h.hasOwnProperty(257) || !re.h.hasOwnProperty(262) || !re.h.hasOwnProperty(273) || !re.h.hasOwnProperty(279)) {
                throw new nM("required tags are missing: ImageWidth | ImageLength | PhotometricInterpretation | StripOffsets | StripByteCounts")
            }
            if (re.h[262][0] != 2) {
                throw new nM("PhotometricInterpretation must be = RGB")
            }
            if (this.getOrDefault(re, 259, [1])[0] != 1) {
                throw new nM("Compression must be = Uncompressed")
            }
            if (this.getOrDefault(re, 274, [1])[0] != 1) {
                throw new nM("Orientation must be = 1")
            }
            if (this.getOrDefault(re, 284, [1])[0] != 1) {
                throw new nM("PlanarConfiguration must be = Chunky")
            }
            var q7 = re.h[257][0];
            var q0 = this.getOrDefault(re, 278, [-1])[0];
            var rk = (q7 + q0 - 1) / q0 | 0;
            if (this.getOrDefault(re, 277, [1])[0] != 4) {
                throw new nM("SamplesPerPixel must be = 4")
            }
            if (!this.compareArray(this.getOrDefault(re, 258, [1, 1, 1, 1]), [8, 8, 8, 8])) {
                throw new nM("BitsPerSample must be = [8, 8, 8, 8]")
            }
            var i2 = this.getOrDefault(re, 339, [1, 1, 1, 1]);
            var rb = 0;
            var qZ = i2.length;
            while (rb < qZ) {
                var ri = rb++;
                if (i2[ri] == 4) {
                    i2[ri] = 1
                }
            }
            if (!this.compareArray(i2, [1, 1, 1, 1])) {
                throw new nM("unsupported SampleFormat value")
            }
            var qY = this.getOrDefault(re, 338, []);
            if (qY.length != 1) {
                throw new nM("ExtraSamples.length must be = 1")
            }
            var q = qY[0];
            if (q != 1 && q != 2) {
                throw new nM("unsupported ExtraSamples value")
            }
            var q5 = re.h[273];
            if (q5.length != rk) {
                throw new nM("invalid StripOffsets length")
            }
            var rd = re.h[279];
            if (q5.length != rk) {
                throw new nM("invalid StripByteCounts length")
            }
            var q6 = re.h[256][0];
            var js = jN.fold(rd, function(i1, i) {
                return i1 + i
            }, 0);
            if (q6 * q7 * 4 != js) {
                throw new nM("invalid StripByteCounts value")
            }
            var q9 = 0;
            while (q9 < rd.length) {
                var q1 = rd[q9];
                ++q9;
                if (q1 % 4 != 0) {
                    throw new nM("each StripByteCounts element must be dividable by 4")
                }
            }
            var rc = new ge(js);
            rc.position = 0;
            var q2 = op.fromBytes(this.data);
            var q8 = 0;
            while (q8 < rk) {
                var rf = q8++;
                q2.position = q5[rf];
                var q4 = rd[rf] / 4 | 0;
                var rh = 0;
                while (rh < q4) {
                    var rg = rh++;
                    var ra = q2.readUnsignedByte();
                    var rj = q2.readUnsignedByte();
                    var q3 = q2.readUnsignedByte();
                    var rl = q2.readUnsignedByte();
                    rc.writeByte(rl);
                    rc.writeByte(ra);
                    rc.writeByte(rj);
                    rc.writeByte(q3)
                }
            }
            rc.position = 0;
            return {
                width: q6,
                height: q7,
                pixels: rc
            }
        },
        getOrDefault: function(i1, i, q) {
            if (i1.h.hasOwnProperty(i)) {
                return i1.h[i]
            } else {
                return q
            }
        },
        compareArray: function(i1, q) {
            if (i1.length != q.length) {
                return false
            }
            var js = 0;
            var qY = i1.length;
            while (js < qY) {
                var i2 = js++;
                if (i1[i2] != q[i2]) {
                    return false
                }
            }
            return true
        },
        parseTag: function(i2, i1) {
            var q = this.getUShort(i2);
            switch (q) {
                case 256:
                case 257:
                case 258:
                case 259:
                case 262:
                case 273:
                case 274:
                case 277:
                case 278:
                case 279:
                case 284:
                case 338:
                case 339:
                    var i = this.parseTagData(i2);
                    i1.h[q] = i;
                    i;
                    break;
                default:
            }
        },
        parseTagData: function(q1) {
            var i2 = this.getUShort(q1 + 2);
            var qZ = this.getULong(q1 + 4);
            if (qZ == 0) {
                throw new nM("data count is zero")
            }
            var i1;
            i1 = qZ * (function(q2) {
                var i;
                switch (i2) {
                    case 1:
                    case 2:
                    case 6:
                    case 7:
                        i = 1;
                        break;
                    case 3:
                    case 8:
                        i = 2;
                        break;
                    case 4:
                    case 9:
                        i = 4;
                        break;
                    case 11:
                        i = (function(q4) {
                            var q3;
                            throw new nM("unsupported data type: FLOAT");
                            return q3
                        }(q2));
                        break;
                    case 5:
                    case 10:
                    case 12:
                        i = (function(q4) {
                            var q3;
                            throw new nM("unsupported data type: RATIONAL | SRATIONAL | DOUBLE");
                            return q3
                        }(q2));
                        break
                }
                return i
            }(this));
            var qY;
            if (i1 <= 4) {
                qY = q1 + 8
            } else {
                qY = this.getULong(q1 + 8)
            }
            var q = [];
            var q0 = 0;
            while (q0 < qZ) {
                var js = q0++;
                switch (i2) {
                    case 1:
                    case 2:
                    case 7:
                        q.push(this.data.b[qY]);
                        qY++;
                        break;
                    case 6:
                        q.push(this.getSByte(qY));
                        qY++;
                        break;
                    case 3:
                        q.push(this.getUShort(qY));
                        qY += 2;
                        break;
                    case 8:
                        q.push(this.getSShort(qY));
                        qY += 2;
                        break;
                    case 4:
                        q.push(this.getULong(qY));
                        qY += 4;
                        break;
                    case 9:
                        q.push(this.getSLong(qY));
                        qY += 4;
                        break;
                    default:
                }
            }
            return q
        },
        getSByte: function(q) {
            var i = this.data.b[q];
            if (i <= 127) {
                return i
            } else {
                return i - 256
            }
        },
        getUShort: function(i) {
            if (this.isBigEndian) {
                return this.data.b[i] << 8 | this.data.b[i + 1]
            } else {
                return this.data.b[i] | this.data.b[i + 1] << 8
            }
        },
        getSShort: function(q) {
            var i = this.getUShort(q);
            if (i <= 32767) {
                return i
            } else {
                return i - 65536
            }
        },
        getULong: function(i) {
            if (this.isBigEndian) {
                return this.data.b[i] << 24 | this.data.b[i + 1] << 16 | this.data.b[i + 2] << 8 | this.data.b[i + 3]
            } else {
                return this.data.b[i] | this.data.b[i + 1] << 8 | this.data.b[i + 2] << 16 | this.data.b[i + 3] << 24
            }
        },
        getSLong: function(q) {
            var i = this.getULong(q);
            if (i <= 2147483647) {
                return i
            } else {
                return i - 2147483647 - 2147483647 - 2
            }
        },
        __class__: kK
    };
    var gi = function() {};
    nt["org.zamedev.particles.loaders.JsonParticleLoader"] = gi;
    gi.__name__ = ["org", "zamedev", "particles", "loaders", "JsonParticleLoader"];
    gi.load = function(q) {
        var i = cu.parse(k9.getText(q));
        var i1 = new hV();
        i1.emitterType = cU.asInt(i.emitterType);
        i1.maxParticles = cU.asInt(i.maxParticles);
        i1.positionType = 0;
        i1.duration = cU.asFloat(i.duration);
        i1.gravity = gi.asVector(i, "gravity");
        i1.particleLifespan = cU.asFloat(i.particleLifespan);
        i1.particleLifespanVariance = cU.asFloat(i.particleLifespanVariance);
        i1.speed = cU.asFloat(i.speed);
        i1.speedVariance = cU.asFloat(i.speedVariance);
        i1.sourcePosition = {
            x: 0,
            y: 0
        };
        i1.sourcePositionVariance = gi.asVector(i, "sourcePositionVariance");
        i1.angle = et.deg2rad(cU.asFloat(i.angle));
        i1.angleVariance = et.deg2rad(cU.asFloat(i.angleVariance));
        i1.startParticleSize = cU.asFloat(i.startParticleSize);
        i1.startParticleSizeVariance = cU.asFloat(i.startParticleSizeVariance);
        i1.finishParticleSize = cU.asFloat(i.finishParticleSize);
        i1.finishParticleSizeVariance = cU.asFloat(i.finishParticleSizeVariance);
        i1.startColor = gi.asColor(i, "startColor");
        i1.startColorVariance = gi.asColor(i, "startColorVariance");
        i1.finishColor = gi.asColor(i, "finishColor");
        i1.finishColorVariance = gi.asColor(i, "finishColorVariance");
        i1.minRadius = cU.asFloat(i.minRadius);
        i1.minRadiusVariance = cU.asFloat(i.minRadiusVariance);
        i1.maxRadius = cU.asFloat(i.maxRadius);
        i1.maxRadiusVariance = cU.asFloat(i.maxRadiusVariance);
        i1.rotationStart = et.deg2rad(cU.asFloat(i.rotationStart));
        i1.rotationStartVariance = et.deg2rad(cU.asFloat(i.rotationStartVariance));
        i1.rotationEnd = et.deg2rad(cU.asFloat(i.rotationEnd));
        i1.rotationEndVariance = et.deg2rad(cU.asFloat(i.rotationEndVariance));
        i1.rotatePerSecond = et.deg2rad(cU.asFloat(i.rotatePerSecond));
        i1.rotatePerSecondVariance = et.deg2rad(cU.asFloat(i.rotatePerSecondVariance));
        i1.radialAcceleration = cU.asFloat(i.radialAcceleration);
        i1.radialAccelerationVariance = cU.asFloat(i.radialAccelVariance);
        i1.tangentialAcceleration = cU.asFloat(i.tangentialAcceleration);
        i1.tangentialAccelerationVariance = cU.asFloat(i.tangentialAccelVariance);
        i1.blendFuncSource = cU.asInt(i.blendFuncSource);
        i1.blendFuncDestination = cU.asInt(i.blendFuncDestination);
        i1.textureBitmapData = cA.loadTexture(cU.asString(i.textureImageData), cU.asString(i.textureFileName), q);
        if (cU.asInt(i.yCoordFlipped) == 1) {
            i1.yCoordMultiplier = -1
        } else {
            i1.yCoordMultiplier = 1
        }
        return i1
    };
    gi.asVector = function(q, i) {
        return {
            x: cU.asFloat(q["" + i + "x"]),
            y: cU.asFloat(q["" + i + "y"])
        }
    };
    gi.asColor = function(q, i) {
        return {
            r: cU.asFloat(q["" + i + "Red"]),
            g: cU.asFloat(q["" + i + "Green"]),
            b: cU.asFloat(q["" + i + "Blue"]),
            a: cU.asFloat(q["" + i + "Alpha"])
        }
    };
    var cA = function() {};
    nt["org.zamedev.particles.loaders.ParticleLoader"] = cA;
    cA.__name__ = ["org", "zamedev", "particles", "loaders", "ParticleLoader"];
    cA.load = function(q) {
        var i = nu.extension(q).toLowerCase();
        switch (i) {
            case "plist":
                return mV.load(q);
            case "json":
                return gi.load(q);
            case "pex":
            case "lap":
                return lr.load(q);
            default:
                throw new nM(new lY('Unsupported extension "' + i + '"'))
        }
    };
    cA.loadTexture = function(i1, js, qZ) {
        if (i1 == null || i1.length == 0) {
            return k9.getBitmapData(nu.directory(qZ) + "/" + js)
        }
        var qY = bv.decode(i1);
        if (qY.b[0] == 31 && qY.b[1] == 139) {
            var q = new ps(new bB(qY));
            qY = q.read().data
        }
        var i2 = kK.decode(qY);
        var i = new f0(i2.width, i2.height, true, 0);
        i.setPixels(new gn(0, 0, i2.width, i2.height), i2.pixels);
        return i
    };
    var lr = function() {};
    nt["org.zamedev.particles.loaders.PexLapParticleLoader"] = lr;
    lr.__name__ = ["org", "zamedev", "particles", "loaders", "PexLapParticleLoader"];
    lr.load = function(qY) {
        var i = ky.parse(k9.getText(qY)).firstElement();
        if ((function(q1) {
                var q0;
                if (i.nodeType != ky.Element) {
                    throw new nM("Bad node type, expected Element but found " + i.nodeType)
                }
                q0 = i.nodeName;
                return q0
            }(this)) != "particleEmitterConfig" && (function(q1) {
                var q0;
                if (i.nodeType != ky.Element) {
                    throw new nM("Bad node type, expected Element but found " + i.nodeType)
                }
                q0 = i.nodeName;
                return q0
            }(this)) != "lanicaAnimoParticles") {
            throw new nM(new lY('Expecting "particleEmitterConfig" or "lanicaAnimoParticles", but "' + (function(q1) {
                var q0;
                if (i.nodeType != ky.Element) {
                    throw "Bad node type, expected Element but found " + i.nodeType
                }
                q0 = i.nodeName;
                return q0
            }(this)) + '" found'))
        }
        var js = new io();
        var i2 = i.elements();
        while (i2.hasNext()) {
            var i1 = i2.next();
            var q;
            if (i1.nodeType != ky.Element) {
                throw new nM("Bad node type, expected Element but found " + i1.nodeType)
            }
            q = i1.nodeName;
            if (pN[q] != null) {
                js.setReserved(q, i1)
            } else {
                js.h[q] = i1
            }
            i1
        }
        var qZ = new hV();
        qZ.emitterType = lr.parseIntNode(pN.emitterType != null ? js.getReserved("emitterType") : js.h.emitterType);
        qZ.maxParticles = lr.parseIntNode(pN.maxParticles != null ? js.getReserved("maxParticles") : js.h.maxParticles);
        qZ.positionType = 0;
        qZ.duration = lr.parseFloatNode(pN.duration != null ? js.getReserved("duration") : js.h.duration);
        qZ.gravity = lr.parseVectorNode(pN.gravity != null ? js.getReserved("gravity") : js.h.gravity);
        qZ.particleLifespan = lr.parseFloatNode(pN.particleLifeSpan != null ? js.getReserved("particleLifeSpan") : js.h.particleLifeSpan);
        qZ.particleLifespanVariance = lr.parseFloatNode(pN.particleLifespanVariance != null ? js.getReserved("particleLifespanVariance") : js.h.particleLifespanVariance);
        qZ.speed = lr.parseFloatNode(pN.speed != null ? js.getReserved("speed") : js.h.speed);
        qZ.speedVariance = lr.parseFloatNode(pN.speedVariance != null ? js.getReserved("speedVariance") : js.h.speedVariance);
        qZ.sourcePosition = lr.parseVectorNode(pN.sourcePosition != null ? js.getReserved("sourcePosition") : js.h.sourcePosition);
        qZ.sourcePositionVariance = lr.parseVectorNode(pN.sourcePositionVariance != null ? js.getReserved("sourcePositionVariance") : js.h.sourcePositionVariance);
        qZ.angle = et.deg2rad(lr.parseFloatNode(pN.angle != null ? js.getReserved("angle") : js.h.angle));
        qZ.angleVariance = et.deg2rad(lr.parseFloatNode(pN.angleVariance != null ? js.getReserved("angleVariance") : js.h.angleVariance));
        qZ.startParticleSize = lr.parseFloatNode(pN.startParticleSize != null ? js.getReserved("startParticleSize") : js.h.startParticleSize);
        qZ.startParticleSizeVariance = lr.parseFloatNode(pN.startParticleSizeVariance != null ? js.getReserved("startParticleSizeVariance") : js.h.startParticleSizeVariance);
        qZ.finishParticleSize = lr.parseFloatNode(pN.finishParticleSize != null ? js.getReserved("finishParticleSize") : js.h.finishParticleSize);
        qZ.finishParticleSizeVariance = lr.parseFloatNode(pN.finishParticleSizeVariance != null ? js.getReserved("finishParticleSizeVariance") : js.h.finishParticleSizeVariance);
        qZ.startColor = lr.parseColorNode(pN.startColor != null ? js.getReserved("startColor") : js.h.startColor);
        qZ.startColorVariance = lr.parseColorNode(pN.startColorVariance != null ? js.getReserved("startColorVariance") : js.h.startColorVariance);
        qZ.finishColor = lr.parseColorNode(pN.finishColor != null ? js.getReserved("finishColor") : js.h.finishColor);
        qZ.finishColorVariance = lr.parseColorNode(pN.finishColorVariance != null ? js.getReserved("finishColorVariance") : js.h.finishColorVariance);
        qZ.minRadius = lr.parseFloatNode(pN.minRadius != null ? js.getReserved("minRadius") : js.h.minRadius);
        qZ.minRadiusVariance = lr.parseFloatNode(pN.minRadiusVariance != null ? js.getReserved("minRadiusVariance") : js.h.minRadiusVariance);
        qZ.maxRadius = lr.parseFloatNode(pN.maxRadius != null ? js.getReserved("maxRadius") : js.h.maxRadius);
        qZ.maxRadiusVariance = lr.parseFloatNode(pN.maxRadiusVariance != null ? js.getReserved("maxRadiusVariance") : js.h.maxRadiusVariance);
        qZ.rotationStart = et.deg2rad(lr.parseFloatNode(pN.rotationStart != null ? js.getReserved("rotationStart") : js.h.rotationStart));
        qZ.rotationStartVariance = et.deg2rad(lr.parseFloatNode(pN.rotationStartVariance != null ? js.getReserved("rotationStartVariance") : js.h.rotationStartVariance));
        qZ.rotationEnd = et.deg2rad(lr.parseFloatNode(pN.rotationEnd != null ? js.getReserved("rotationEnd") : js.h.rotationEnd));
        qZ.rotationEndVariance = et.deg2rad(lr.parseFloatNode(pN.rotationEndVariance != null ? js.getReserved("rotationEndVariance") : js.h.rotationEndVariance));
        qZ.rotatePerSecond = et.deg2rad(lr.parseFloatNode(pN.rotatePerSecond != null ? js.getReserved("rotatePerSecond") : js.h.rotatePerSecond));
        qZ.rotatePerSecondVariance = et.deg2rad(lr.parseFloatNode(pN.rotatePerSecondVariance != null ? js.getReserved("rotatePerSecondVariance") : js.h.rotatePerSecondVariance));
        qZ.radialAcceleration = lr.parseFloatNode(pN.radialAcceleration != null ? js.getReserved("radialAcceleration") : js.h.radialAcceleration);
        qZ.radialAccelerationVariance = lr.parseFloatNode(pN.radialAccelVariance != null ? js.getReserved("radialAccelVariance") : js.h.radialAccelVariance);
        qZ.tangentialAcceleration = lr.parseFloatNode(pN.tangentialAcceleration != null ? js.getReserved("tangentialAcceleration") : js.h.tangentialAcceleration);
        qZ.tangentialAccelerationVariance = lr.parseFloatNode(pN.tangentialAccelVariance != null ? js.getReserved("tangentialAccelVariance") : js.h.tangentialAccelVariance);
        qZ.blendFuncSource = lr.parseIntNode(pN.blendFuncSource != null ? js.getReserved("blendFuncSource") : js.h.blendFuncSource);
        qZ.blendFuncDestination = lr.parseIntNode(pN.blendFuncDestination != null ? js.getReserved("blendFuncDestination") : js.h.blendFuncDestination);
        qZ.textureBitmapData = cA.loadTexture((pN.texture != null ? js.getReserved("texture") : js.h.texture).get("data"), (pN.texture != null ? js.getReserved("texture") : js.h.texture).get("name"), qY);
        if (lr.parseIntNode(pN.yCoordFlipped != null ? js.getReserved("yCoordFlipped") : js.h.yCoordFlipped) == 1) {
            qZ.yCoordMultiplier = -1
        } else {
            qZ.yCoordMultiplier = 1
        }
        return qZ
    };
    lr.parseIntNode = function(i) {
        if (i == null) {
            return 0
        } else {
            return lr.parseIntString(i.get("value"))
        }
    };
    lr.parseFloatNode = function(i) {
        if (i == null) {
            return 0
        } else {
            return lr.parseFloatString(i.get("value"))
        }
    };
    lr.parseVectorNode = function(i) {
        if (i == null) {
            return {
                x: 0,
                y: 0
            }
        }
        return {
            x: lr.parseFloatString(i.get("x")),
            y: lr.parseFloatString(i.get("y"))
        }
    };
    lr.parseColorNode = function(i) {
        if (i == null) {
            return {
                r: 0,
                g: 0,
                b: 0,
                a: 0
            }
        }
        return {
            r: lr.parseFloatString(i.get("red")),
            g: lr.parseFloatString(i.get("green")),
            b: lr.parseFloatString(i.get("blue")),
            a: lr.parseFloatString(i.get("alpha"))
        }
    };
    lr.parseIntString = function(q) {
        if (q == null) {
            return 0
        }
        var i = kr.parseInt(q);
        if (i == null) {
            return 0
        } else {
            return i
        }
    };
    lr.parseFloatString = function(q) {
        if (q == null) {
            return 0
        }
        var i = parseFloat(q);
        if (isNaN(i)) {
            return 0
        } else {
            return i
        }
    };
    var mV = function() {};
    nt["org.zamedev.particles.loaders.PlistParticleLoader"] = mV;
    mV.__name__ = ["org", "zamedev", "particles", "loaders", "PlistParticleLoader"];
    mV.load = function(q2) {
        var qZ = ky.parse(k9.getText(q2)).firstElement().firstElement();
        if ((function(q5) {
                var q4;
                if (qZ.nodeType != ky.Element) {
                    throw new nM("Bad node type, expected Element but found " + qZ.nodeType)
                }
                q4 = qZ.nodeName;
                return q4
            }(this)) != "dict") {
            throw new nM(new lY('Expecting "dict", but "' + (function(q5) {
                var q4;
                if (qZ.nodeType != ky.Element) {
                    throw "Bad node type, expected Element but found " + qZ.nodeType
                }
                q4 = qZ.nodeName;
                return q4
            }(this)) + '" found'))
        }
        var q1 = null;
        var q = new io();
        var q3 = qZ.elements();
        while (q3.hasNext()) {
            var i1 = q3.next();
            if (q1 == null) {
                if ((function(q5) {
                        var q4;
                        if (i1.nodeType != ky.Element) {
                            throw new nM("Bad node type, expected Element but found " + i1.nodeType)
                        }
                        q4 = i1.nodeName;
                        return q4
                    }(this)) == "key") {
                    q1 = gs.innerText(i1);
                    if (q1 == "") {
                        throw new nM(new lY("Empty key is not supported"))
                    }
                    continue
                }
                throw new nM(new lY('Expecting element "key", but "' + (function(q5) {
                    var q4;
                    if (i1.nodeType != ky.Element) {
                        throw "Bad node type, expected Element but found " + i1.nodeType
                    }
                    q4 = i1.nodeName;
                    return q4
                }(this)) + '" found'))
            }
            var i2 = gs.innerText(i1);
            var js;
            if (i1.nodeType != ky.Element) {
                throw new nM("Bad node type, expected Element but found " + i1.nodeType)
            }
            js = i1.nodeName;
            switch (js) {
                case "false":
                    if (pN[q1] != null) {
                        q.setReserved(q1, false)
                    } else {
                        q.h[q1] = false
                    }
                    false;
                    break;
                case "true":
                    if (pN[q1] != null) {
                        q.setReserved(q1, true)
                    } else {
                        q.h[q1] = true
                    }
                    true;
                    break;
                case "real":
                    var q0 = parseFloat(i2);
                    if (isNaN(q0)) {
                        throw new nM(new lY('Could not parse "' + i2 + '" as real (for key "' + q1 + '")'))
                    }
                    if (pN[q1] != null) {
                        q.setReserved(q1, q0)
                    } else {
                        q.h[q1] = q0
                    }
                    q0;
                    break;
                case "integer":
                    var qY = kr.parseInt(i2);
                    if (qY == null) {
                        throw new nM(new lY('Could not parse "' + i2 + '" as integer (for key "' + q1 + '")'))
                    }
                    if (pN[q1] != null) {
                        q.setReserved(q1, qY)
                    } else {
                        q.h[q1] = qY
                    }
                    qY;
                    break;
                case "string":
                    if (pN[q1] != null) {
                        q.setReserved(q1, i2)
                    } else {
                        q.h[q1] = i2
                    }
                    i2;
                    break;
                default:
                    throw new nM(new lY('Unsupported element "' + (function(q5) {
                        var q4;
                        if (i1.nodeType != ky.Element) {
                            throw "Bad node type, expected Element but found " + i1.nodeType
                        }
                        q4 = i1.nodeName;
                        return q4
                    }(this)) + '"'))
            }
            q1 = null
        }
        var i = new hV();
        i.emitterType = cU.asInt(pN.emitterType != null ? q.getReserved("emitterType") : q.h.emitterType);
        i.maxParticles = cU.asInt(pN.maxParticles != null ? q.getReserved("maxParticles") : q.h.maxParticles);
        i.positionType = cU.asInt(pN.positionType != null ? q.getReserved("positionType") : q.h.positionType);
        i.duration = cU.asFloat(pN.duration != null ? q.getReserved("duration") : q.h.duration);
        i.gravity = mV.asVector(q, "gravity");
        i.particleLifespan = cU.asFloat(pN.particleLifespan != null ? q.getReserved("particleLifespan") : q.h.particleLifespan);
        i.particleLifespanVariance = cU.asFloat(pN.particleLifespanVariance != null ? q.getReserved("particleLifespanVariance") : q.h.particleLifespanVariance);
        i.speed = cU.asFloat(pN.speed != null ? q.getReserved("speed") : q.h.speed);
        i.speedVariance = cU.asFloat(pN.speedVariance != null ? q.getReserved("speedVariance") : q.h.speedVariance);
        i.sourcePosition = mV.asVector(q, "sourcePosition");
        i.sourcePositionVariance = mV.asVector(q, "sourcePositionVariance");
        i.angle = et.deg2rad(cU.asFloat(pN.angle != null ? q.getReserved("angle") : q.h.angle));
        i.angleVariance = et.deg2rad(cU.asFloat(pN.angleVariance != null ? q.getReserved("angleVariance") : q.h.angleVariance));
        i.startParticleSize = cU.asFloat(pN.startParticleSize != null ? q.getReserved("startParticleSize") : q.h.startParticleSize);
        i.startParticleSizeVariance = cU.asFloat(pN.startParticleSizeVariance != null ? q.getReserved("startParticleSizeVariance") : q.h.startParticleSizeVariance);
        i.finishParticleSize = cU.asFloat(pN.finishParticleSize != null ? q.getReserved("finishParticleSize") : q.h.finishParticleSize);
        i.finishParticleSizeVariance = cU.asFloat(pN.finishParticleSizeVariance != null ? q.getReserved("finishParticleSizeVariance") : q.h.finishParticleSizeVariance);
        i.startColor = mV.asColor(q, "startColor");
        i.startColorVariance = mV.asColor(q, "startColorVariance");
        i.finishColor = mV.asColor(q, "finishColor");
        i.finishColorVariance = mV.asColor(q, "finishColorVariance");
        i.minRadius = cU.asFloat(pN.minRadius != null ? q.getReserved("minRadius") : q.h.minRadius);
        i.minRadiusVariance = cU.asFloat(pN.minRadiusVariance != null ? q.getReserved("minRadiusVariance") : q.h.minRadiusVariance);
        i.maxRadius = cU.asFloat(pN.maxRadius != null ? q.getReserved("maxRadius") : q.h.maxRadius);
        i.maxRadiusVariance = cU.asFloat(pN.maxRadiusVariance != null ? q.getReserved("maxRadiusVariance") : q.h.maxRadiusVariance);
        i.rotationStart = et.deg2rad(cU.asFloat(pN.rotationStart != null ? q.getReserved("rotationStart") : q.h.rotationStart));
        i.rotationStartVariance = et.deg2rad(cU.asFloat(pN.rotationStartVariance != null ? q.getReserved("rotationStartVariance") : q.h.rotationStartVariance));
        i.rotationEnd = et.deg2rad(cU.asFloat(pN.rotationEnd != null ? q.getReserved("rotationEnd") : q.h.rotationEnd));
        i.rotationEndVariance = et.deg2rad(cU.asFloat(pN.rotationEndVariance != null ? q.getReserved("rotationEndVariance") : q.h.rotationEndVariance));
        i.rotatePerSecond = et.deg2rad(cU.asFloat(pN.rotatePerSecond != null ? q.getReserved("rotatePerSecond") : q.h.rotatePerSecond));
        i.rotatePerSecondVariance = et.deg2rad(cU.asFloat(pN.rotatePerSecondVariance != null ? q.getReserved("rotatePerSecondVariance") : q.h.rotatePerSecondVariance));
        i.radialAcceleration = cU.asFloat(pN.radialAcceleration != null ? q.getReserved("radialAcceleration") : q.h.radialAcceleration);
        i.radialAccelerationVariance = cU.asFloat(pN.radialAccelVariance != null ? q.getReserved("radialAccelVariance") : q.h.radialAccelVariance);
        i.tangentialAcceleration = cU.asFloat(pN.tangentialAcceleration != null ? q.getReserved("tangentialAcceleration") : q.h.tangentialAcceleration);
        i.tangentialAccelerationVariance = cU.asFloat(pN.tangentialAccelVariance != null ? q.getReserved("tangentialAccelVariance") : q.h.tangentialAccelVariance);
        i.blendFuncSource = cU.asInt(pN.blendFuncSource != null ? q.getReserved("blendFuncSource") : q.h.blendFuncSource);
        i.blendFuncDestination = cU.asInt(pN.blendFuncDestination != null ? q.getReserved("blendFuncDestination") : q.h.blendFuncDestination);
        i.textureBitmapData = cA.loadTexture(cU.asString(pN.textureImageData != null ? q.getReserved("textureImageData") : q.h.textureImageData), cU.asString(pN.textureFileName != null ? q.getReserved("textureFileName") : q.h.textureFileName), q2);
        if (cU.asInt(pN.yCoordFlipped != null ? q.getReserved("yCoordFlipped") : q.h.yCoordFlipped) == 1) {
            i.yCoordMultiplier = -1
        } else {
            i.yCoordMultiplier = 1
        }
        return i
    };
    mV.asVector = function(q, i) {
        return {
            x: cU.asFloat(q.get("" + i + "x")),
            y: cU.asFloat(q.get("" + i + "y"))
        }
    };
    mV.asColor = function(q, i) {
        return {
            r: cU.asFloat(q.get("" + i + "Red")),
            g: cU.asFloat(q.get("" + i + "Green")),
            b: cU.asFloat(q.get("" + i + "Blue")),
            a: cU.asFloat(q.get("" + i + "Alpha"))
        }
    };
    var p3 = function() {};
    nt["org.zamedev.particles.renderers.ParticleSystemRenderer"] = p3;
    p3.__name__ = ["org", "zamedev", "particles", "renderers", "ParticleSystemRenderer"];
    p3.prototype = {
        addParticleSystem: null,
        removeParticleSystem: null,
        __class__: p3
    };
    var oq = function() {
        this.dataList = [];
        cY.call(this)
    };
    nt["org.zamedev.particles.renderers.SpritesParticleRenderer"] = oq;
    oq.__name__ = ["org", "zamedev", "particles", "renderers", "SpritesParticleRenderer"];
    oq.__interfaces__ = [p3];
    oq.__super__ = cY;
    oq.prototype = lP(cY.prototype, {
        dataList: null,
        addParticleSystem: function(q0) {
            if (this.dataList.length == 0) {
                this.addEventListener("enterFrame", oT(this, this.onEnterFrame))
            }
            q0.__initialize();
            var qY = [];
            var js = 0;
            var qZ = q0.maxParticles;
            while (js < qZ) {
                var i1 = js++;
                var q = new cY();
                q.set_visible(false);
                var i2 = new el(q0.textureBitmapData);
                i2.set_x(-q0.textureBitmapData.width / 2);
                i2.set_y(-q0.textureBitmapData.height / 2);
                q.addChild(i2);
                qY.push({
                    sprite: q,
                    colorTransform: new n(),
                    visible: false
                });
                this.addChild(q)
            }
            this.dataList.push({
                ps: q0,
                spriteList: qY,
                updated: false
            });
            return this
        },
        removeParticleSystem: function(js) {
            var i = 0;
            while (i < this.dataList.length) {
                if (this.dataList[i].ps == js) {
                    var i2 = 0;
                    var q = this.dataList[i].spriteList;
                    while (i2 < q.length) {
                        var i1 = q[i2];
                        ++i2;
                        this.removeChild(i1.sprite)
                    }
                    this.dataList.splice(i, 1)
                } else {
                    i++
                }
            }
            if (this.dataList.length == 0) {
                this.removeEventListener("enterFrame", oT(this, this.onEnterFrame))
            }
            return this
        },
        onEnterFrame: function(rg) {
            var rc = false;
            var js = 0;
            var q5 = this.dataList;
            while (js < q5.length) {
                var rh = q5[js];
                ++js;
                if (rh.updated = rh.ps.__update()) {
                    rc = true
                }
            }
            if (!rc) {
                return
            }
            var q4 = 0;
            var ra = this.dataList;
            while (q4 < ra.length) {
                var q0 = ra[q4];
                ++q4;
                if (!q0.updated) {
                    continue
                }
                var q7 = q0.ps;
                var qZ = q0.spriteList;
                var qY = q7.textureBitmapData.width;
                var q3 = 0;
                var i2 = q7.__particleCount;
                while (q3 < i2) {
                    var rb = q3++;
                    var q9 = q7.__particleList[rb];
                    var rd = qZ[rb];
                    var q6 = rd.sprite;
                    q6.set_x(q9.position.x * q7.particleScaleX);
                    q6.set_y(q9.position.y * q7.particleScaleY);
                    var rf = q9.particleSize / qY * q7.particleScaleSize;
                    q6.set_scaleX(rf);
                    q6.set_scaleY(rf);
                    q6.set_rotation(q9.rotation * 180 / Math.PI);
                    var re = rd.colorTransform;
                    re.redMultiplier = q9.color.r;
                    re.greenMultiplier = q9.color.g;
                    re.blueMultiplier = q9.color.b;
                    re.alphaMultiplier = q9.color.a;
                    q6.get_transform().set_colorTransform(re);
                    if (!rd.visible) {
                        rd.visible = true;
                        q6.set_visible(true)
                    }
                }
                var q2 = q7.__particleCount;
                var q = qZ.length;
                while (q2 < q) {
                    var q8 = q2++;
                    var q1 = qZ[q8];
                    if (q1.visible) {
                        q1.visible = false;
                        q1.sprite.set_visible(false)
                    }
                }
            }
        },
        __class__: oq
    });
    var p = {};
    nt["org.zamedev.particles.util._DynamicExt.DynamicExt_Impl_"] = p;
    p.__name__ = ["org", "zamedev", "particles", "util", "_DynamicExt", "DynamicExt_Impl_"];
    p._new = function() {
        return {}
    };
    p.set = function(i, q, i1) {
        i[q] = i1
    };
    p.get = function(i, q) {
        return i[q]
    };
    p.exists = function(i, q) {
        return Object.prototype.hasOwnProperty.call(i, q)
    };
    p.remove = function(i, q) {
        return ar.deleteField(i, q)
    };
    p.keys = function(i) {
        return ar.fields(i)
    };
    var cU = function() {};
    nt["org.zamedev.particles.util.DynamicTools"] = cU;
    cU.__name__ = ["org", "zamedev", "particles", "util", "DynamicTools"];
    cU.asDynamic = function(i) {
        if (i == null) {
            return {}
        } else {
            return i
        }
    };
    cU.asArray = function(i) {
        if ((i instanceof Array) && i.__enum__ == null) {
            return i
        } else {
            return []
        }
    };
    cU.asInt = function(q, i) {
        if (i == null) {
            i = 0
        }
        if (((q | 0) === q)) {
            return q
        } else {
            if (typeof(q) == "number") {
                return kr["int"](q)
            } else {
                return i
            }
        }
    };
    cU.asNullInt = function(i) {
        if (((i | 0) === i)) {
            return i
        } else {
            if (typeof(i) == "number") {
                return kr["int"](i)
            } else {
                return null
            }
        }
    };
    cU.asFloat = function(q, i) {
        if (i == null) {
            i = 0
        }
        if (typeof(q) == "number" || ((q | 0) === q)) {
            return q
        } else {
            return i
        }
    };
    cU.asNullFloat = function(i) {
        if (typeof(i) == "number" || ((i | 0) === i)) {
            return i
        } else {
            return null
        }
    };
    cU.asBool = function(q, i) {
        if (i == null) {
            i = false
        }
        if (typeof(q) == "boolean") {
            return q
        } else {
            return i
        }
    };
    cU.asString = function(q, i) {
        if (i == null) {
            i = ""
        }
        if (q == null) {
            return i
        } else {
            return kr.string(q)
        }
    };
    var et = function() {};
    nt["org.zamedev.particles.util.MathHelper"] = et;
    et.__name__ = ["org", "zamedev", "particles", "util", "MathHelper"];
    et.deg2rad = function(i) {
        return i / 180 * Math.PI
    };
    et.rnd1to1 = function() {
        return Math.random() * 2 - 1
    };
    et.clamp = function(i) {
        if (i < 0) {
            return 0
        } else {
            if (i < 1) {
                return i
            } else {
                return 1
            }
        }
    };
    var gs = function() {};
    nt["org.zamedev.particles.util.XmlExt"] = gs;
    gs.__name__ = ["org", "zamedev", "particles", "util", "XmlExt"];
    gs.innerText = function(i, q) {
        if (q == null) {
            q = ""
        }
        var i1;
        if (i.nodeType != ky.Document && i.nodeType != ky.Element) {
            throw new nM("Bad node type, expected Element or Document but found " + i.nodeType)
        }
        i1 = i.children[0];
        if (i1 != null && (i1.nodeType == ky.PCData || i1.nodeType == ky.CData)) {
            if (i1.nodeType == ky.Document || i1.nodeType == ky.Element) {
                throw new nM("Bad node type, unexpected " + i1.nodeType)
            }
            return i1.nodeValue
        }
        return q
    };
    var o2 = function(i) {
        this._resolved = false;
        this._pending = false;
        this._errorPending = false;
        this._fulfilled = false;
        this._update = [];
        this._error = [];
        this._errored = false;
        if (i != null) {
            o2.link(i, this, function(q) {
                return q
            })
        }
    };
    nt["promhx.base.AsyncBase"] = o2;
    o2.__name__ = ["promhx", "base", "AsyncBase"];
    o2.link = function(i1, i, q) {
        i1._update.push({
            async: i,
            linkf: function(i2) {
                i.handleResolve(q(i2))
            }
        });
        o2.immediateLinkUpdate(i1, i, q)
    };
    o2.immediateLinkUpdate = function(i2, i, q) {
        if (i2._errored && !i2._errorPending && !(i2._error.length > 0)) {
            i.handleError(i2._errorVal)
        }
        if (i2._resolved && !i2._pending) {
            try {
                i.handleResolve(q(i2._val))
            } catch (i1) {
                lF.lastException = i1;
                if (i1 instanceof nM) {
                    i1 = i1.val
                }
                i.handleError(i1)
            }
        }
    };
    o2.linkAll = function(i1, q) {
        var js = function(qY, q3, q0) {
            if (qY.length == 0 || o2.allFulfilled(qY)) {
                var q2;
                var q4 = [];
                var q1 = mH(i1)();
                while (q1.hasNext()) {
                    var qZ = q1.next();
                    q4.push(qZ == q3 ? q0 : qZ._val)
                }
                q2 = q4;
                q.handleResolve(q2)
            }
            null;
            return
        };
        var i2 = mH(i1)();
        while (i2.hasNext()) {
            var i = i2.next();
            i._update.push({
                async: q,
                linkf: (function(q0, qZ, qY) {
                    return function(q1) {
                        q0(qZ, qY, q1);
                        return
                    }
                })(js, (function(q2) {
                    var qY;
                    var q1 = [];
                    var q0 = mH(i1)();
                    while (q0.hasNext()) {
                        var qZ = q0.next();
                        if (qZ != i) {
                            q1.push(qZ)
                        }
                    }
                    qY = q1;
                    return qY
                }(this)), i)
            })
        }
        if (o2.allFulfilled(i1)) {
            q.handleResolve((function(q1) {
                var qY;
                var q0 = [];
                var qZ = mH(i1)();
                while (qZ.hasNext()) {
                    var q2 = qZ.next();
                    q0.push(q2._val)
                }
                qY = q0;
                return qY
            }(this)))
        }
    };
    o2.pipeLink = function(js, i, i1) {
        var qY = false;
        var q = function(qZ) {
            if (!qY) {
                qY = true;
                var q0 = i1(qZ);
                q0._update.push({
                    async: i,
                    linkf: oT(i, i.handleResolve)
                });
                o2.immediateLinkUpdate(q0, i, function(q1) {
                    return q1
                })
            }
        };
        js._update.push({
            async: i,
            linkf: q
        });
        if (js._resolved && !js._pending) {
            try {
                q(js._val)
            } catch (i2) {
                lF.lastException = i2;
                if (i2 instanceof nM) {
                    i2 = i2.val
                }
                i.handleError(i2)
            }
        }
    };
    o2.allResolved = function(i) {
        var i1 = mH(i)();
        while (i1.hasNext()) {
            var q = i1.next();
            if (!q._resolved) {
                return false
            }
        }
        return true
    };
    o2.allFulfilled = function(i) {
        var i1 = mH(i)();
        while (i1.hasNext()) {
            var q = i1.next();
            if (!q._fulfilled) {
                return false
            }
        }
        return true
    };
    o2.prototype = {
        _val: null,
        _resolved: null,
        _fulfilled: null,
        _pending: null,
        _update: null,
        _error: null,
        _errored: null,
        _errorMap: null,
        _errorVal: null,
        _errorPending: null,
        catchError: function(i) {
            this._error.push(i);
            return this
        },
        errorThen: function(i) {
            this._errorMap = i;
            return this
        },
        isResolved: function() {
            return this._resolved
        },
        isErrored: function() {
            return this._errored
        },
        isErrorHandled: function() {
            return this._error.length > 0
        },
        isErrorPending: function() {
            return this._errorPending
        },
        isFulfilled: function() {
            return this._fulfilled
        },
        isPending: function() {
            return this._pending
        },
        handleResolve: function(i) {
            this._resolve(i)
        },
        _resolve: function(q) {
            var i = this;
            if (this._pending) {
                nN.enqueue((function(i2, i1) {
                    return function() {
                        i2(i1)
                    }
                })(oT(this, this._resolve), q))
            } else {
                this._resolved = true;
                this._pending = true;
                nN.queue.add(function() {
                    i._val = q;
                    var js = 0;
                    var i2 = i._update;
                    while (js < i2.length) {
                        var i1 = i2[js];
                        ++js;
                        try {
                            i1.linkf(q)
                        } catch (qY) {
                            lF.lastException = qY;
                            if (qY instanceof nM) {
                                qY = qY.val
                            }
                            i1.async.handleError(qY)
                        }
                    }
                    i._fulfilled = true;
                    i._pending = false
                });
                nN.continueOnNextLoop()
            }
        },
        handleError: function(i) {
            this._handleError(i)
        },
        _handleError: function(i) {
            var i1 = this;
            var q = function(q2) {
                if (i1._error.length > 0) {
                    var q1 = 0;
                    var q0 = i1._error;
                    while (q1 < q0.length) {
                        var qY = q0[q1];
                        ++q1;
                        qY(q2)
                    }
                } else {
                    if (i1._update.length > 0) {
                        var js = 0;
                        var qZ = i1._update;
                        while (js < qZ.length) {
                            var i2 = qZ[js];
                            ++js;
                            i2.async.handleError(q2)
                        }
                    } else {
                        throw new nM(q2)
                    }
                }
                i1._errorPending = false
            };
            if (!this._errorPending) {
                this._errorPending = true;
                this._errored = true;
                this._errorVal = i;
                nN.queue.add(function() {
                    if (i1._errorMap != null) {
                        try {
                            i1._resolve(i1._errorMap(i))
                        } catch (i2) {
                            lF.lastException = i2;
                            if (i2 instanceof nM) {
                                i2 = i2.val
                            }
                            q(i2)
                        }
                    } else {
                        q(i)
                    }
                });
                nN.continueOnNextLoop()
            }
        },
        then: function(q) {
            var i = new o2();
            o2.link(this, i, q);
            return i
        },
        unlink: function(q) {
            var i = this;
            nN.queue.add(function() {
                i._update = i._update.filter(function(i1) {
                    return i1.async != q
                })
            });
            nN.continueOnNextLoop()
        },
        isLinked: function(js) {
            var i = false;
            var i2 = 0;
            var i1 = this._update;
            while (i2 < i1.length) {
                var q = i1[i2];
                ++i2;
                if (q.async == js) {
                    return true
                }
            }
            return i
        },
        __class__: o2
    };
    var eo = bD.promhx.Deferred = function() {
        o2.call(this)
    };
    nt["promhx.Deferred"] = eo;
    eo.__name__ = ["promhx", "Deferred"];
    eo.__super__ = o2;
    eo.prototype = lP(o2.prototype, {
        resolve: function(i) {
            this.handleResolve(i)
        },
        throwError: function(i) {
            this.handleError(i)
        },
        promise: function() {
            return new gR(this)
        },
        stream: function() {
            return new m3(this)
        },
        publicStream: function() {
            return new ek(this)
        },
        __class__: eo
    });
    var gR = bD.promhx.Promise = function(i) {
        o2.call(this, i);
        this._rejected = false
    };
    nt["promhx.Promise"] = gR;
    gR.__name__ = ["promhx", "Promise"];
    gR.whenAll = function(q) {
        var i = new gR();
        o2.linkAll(q, i);
        return i
    };
    gR.promise = function(q) {
        var i = new gR();
        i.handleResolve(q);
        return i
    };
    gR.__super__ = o2;
    gR.prototype = lP(o2.prototype, {
        _rejected: null,
        isRejected: function() {
            return this._rejected
        },
        reject: function(i) {
            this._rejected = true;
            this.handleError(i)
        },
        handleResolve: function(q) {
            if (this._resolved) {
                var i = "Promise has already been resolved";
                throw new nM(av.AlreadyResolved(i))
            }
            this._resolve(q)
        },
        then: function(q) {
            var i = new gR();
            o2.link(this, i, q);
            return i
        },
        unlink: function(q) {
            var i = this;
            nN.queue.add(function() {
                if (!i._fulfilled) {
                    var i1 = "Downstream Promise is not fullfilled";
                    i.handleError(av.DownstreamNotFullfilled(i1))
                } else {
                    i._update = i._update.filter(function(i2) {
                        return i2.async != q
                    })
                }
            });
            nN.continueOnNextLoop()
        },
        handleError: function(i) {
            this._rejected = true;
            this._handleError(i)
        },
        pipe: function(q) {
            var i = new gR();
            o2.pipeLink(this, i, q);
            return i
        },
        errorPipe: function(q) {
            var i = new gR();
            this.catchError(function(i1) {
                var i2 = q(i1);
                i2.then(oT(i, i._resolve))
            });
            this.then(oT(i, i._resolve));
            return i
        },
        __class__: gR
    });
    var m3 = bD.promhx.Stream = function(i) {
        o2.call(this, i);
        this._end_deferred = new eo();
        this._end_promise = this._end_deferred.promise()
    };
    nt["promhx.Stream"] = m3;
    m3.__name__ = ["promhx", "Stream"];
    m3.foreach = function(js) {
        var i1 = new m3();
        var i2 = mH(js)();
        while (i2.hasNext()) {
            var q = i2.next();
            i1.handleResolve(q)
        }
        i1.end();
        return i1
    };
    m3.wheneverAll = function(q) {
        var i = new m3();
        o2.linkAll(q, i);
        return i
    };
    m3.concatAll = function(js) {
        var q = new m3();
        var i2 = mH(js)();
        while (i2.hasNext()) {
            var i1 = i2.next();
            q.concat(i1)
        }
        return q
    };
    m3.mergeAll = function(js) {
        var q = new m3();
        var i2 = mH(js)();
        while (i2.hasNext()) {
            var i1 = i2.next();
            q.merge(i1)
        }
        return q
    };
    m3.stream = function(q) {
        var i = new m3();
        i.handleResolve(q);
        return i
    };
    m3.__super__ = o2;
    m3.prototype = lP(o2.prototype, {
        deferred: null,
        _pause: null,
        _end: null,
        _end_promise: null,
        _end_deferred: null,
        then: function(q) {
            var i = new m3();
            o2.link(this, i, q);
            this._end_promise.then(function(i1) {
                i.end()
            });
            return i
        },
        detachStream: function(qY) {
            var q = [];
            var i2 = false;
            var js = 0;
            var i1 = this._update;
            while (js < i1.length) {
                var i = i1[js];
                ++js;
                if (i.async == qY) {
                    i2 = true
                } else {
                    q.push(i)
                }
            }
            this._update = q;
            return i2
        },
        first: function() {
            var i = new gR();
            this.then(function(q) {
                if (!i._resolved) {
                    i.handleResolve(q)
                }
            });
            return i
        },
        handleResolve: function(i) {
            if (!this._end && !this._pause) {
                this._resolve(i)
            }
        },
        pause: function(i) {
            if (i == null) {
                i = !this._pause
            }
            this._pause = i
        },
        pipe: function(q) {
            var i = new m3();
            o2.pipeLink(this, i, q);
            this._end_promise.then(function(i1) {
                i.end()
            });
            return i
        },
        errorPipe: function(q) {
            var i = new m3();
            this.catchError(function(i1) {
                var i2 = q(i1);
                i2.then(oT(i, i._resolve));
                i2._end_promise.then((c3 = i._end_promise, oT(c3, c3._resolve)))
            });
            this.then(oT(i, i._resolve));
            this._end_promise.then(function(i1) {
                i.end()
            });
            return i
        },
        handleEnd: function() {
            if (this._pending) {
                nN.queue.add(oT(this, this.handleEnd));
                nN.continueOnNextLoop()
            } else {
                if (this._end_promise._resolved) {
                    return
                } else {
                    this._end = true;
                    var i;
                    if (this._resolved) {
                        i = kC.Some(this._val)
                    } else {
                        i = kC.None
                    }
                    this._end_promise.handleResolve(i);
                    this._update = [];
                    this._error = []
                }
            }
        },
        end: function() {
            nN.queue.add(oT(this, this.handleEnd));
            nN.continueOnNextLoop();
            return this
        },
        endThen: function(i) {
            return this._end_promise.then(i)
        },
        filter: function(q) {
            var i = new m3();
            this._update.push({
                async: i,
                linkf: function(i1) {
                    if (q(i1)) {
                        i.handleResolve(i1)
                    }
                }
            });
            o2.immediateLinkUpdate(this, i, function(i1) {
                return i1
            });
            return i
        },
        concat: function(q) {
            var i = new m3();
            this._update.push({
                async: i,
                linkf: oT(i, i.handleResolve)
            });
            o2.immediateLinkUpdate(this, i, function(i1) {
                return i1
            });
            this._end_promise.then(function(i1) {
                q.pipe(function(i2) {
                    i.handleResolve(i2);
                    return i
                });
                q._end_promise.then(function(i2) {
                    i.end()
                })
            });
            return i
        },
        merge: function(q) {
            var i = new m3();
            this._update.push({
                async: i,
                linkf: oT(i, i.handleResolve)
            });
            q._update.push({
                async: i,
                linkf: oT(i, i.handleResolve)
            });
            o2.immediateLinkUpdate(this, i, function(i1) {
                return i1
            });
            o2.immediateLinkUpdate(q, i, function(i1) {
                return i1
            });
            return i
        },
        __class__: m3
    });
    var ek = bD.promhx.PublicStream = function(i) {
        m3.call(this, i)
    };
    nt["promhx.PublicStream"] = ek;
    ek.__name__ = ["promhx", "PublicStream"];
    ek.publicstream = function(q) {
        var i = new ek();
        i.handleResolve(q);
        return i
    };
    ek.__super__ = m3;
    ek.prototype = lP(m3.prototype, {
        resolve: function(i) {
            this.handleResolve(i)
        },
        throwError: function(i) {
            this.handleError(i)
        },
        update: function(i) {
            this.handleResolve(i)
        },
        __class__: ek
    });
    var nN = function() {};
    nt["promhx.base.EventLoop"] = nN;
    nN.__name__ = ["promhx", "base", "EventLoop"];
    nN.nextLoop = null;
    nN.enqueue = function(i) {
        nN.queue.add(i);
        nN.continueOnNextLoop()
    };
    nN.set_nextLoop = function(i) {
        if (nN.nextLoop != null) {
            throw new nM("nextLoop has already been set")
        } else {
            nN.nextLoop = i
        }
        return nN.nextLoop
    };
    nN.queueEmpty = function() {
        return nN.queue.isEmpty()
    };
    nN.finish = function(q) {
        if (q == null) {
            q = 1000
        }
        var i = null;
        while (q-- > 0 && (i = nN.queue.pop()) != null) {
            i()
        }
        return nN.queue.isEmpty()
    };
    nN.clear = function() {
        nN.queue = new oI()
    };
    nN.f = function() {
        var i = nN.queue.pop();
        if (i != null) {
            i()
        }
        if (!nN.queue.isEmpty()) {
            nN.continueOnNextLoop()
        }
    };
    nN.continueOnNextLoop = function() {
        if (nN.nextLoop != null) {
            nN.nextLoop(nN.f)
        } else {
            (typeof setImmediate === "function" ? setImmediate : setTimeout)(nN.f)
        }
    };
    var cN = function() {
        eo.call(this);
        this.boundPromise = new gR(this)
    };
    nt["promhx.deferred.DeferredPromise"] = cN;
    cN.__name__ = ["promhx", "deferred", "DeferredPromise"];
    cN.__super__ = eo;
    cN.prototype = lP(eo.prototype, {
        boundPromise: null,
        __class__: cN
    });
    var av = nt["promhx.error.PromiseError"] = {
        __ename__: ["promhx", "error", "PromiseError"],
        __constructs__: ["AlreadyResolved", "DownstreamNotFullfilled"]
    };
    av.AlreadyResolved = function(q) {
        var i = ["AlreadyResolved", 0, q];
        i.__enum__ = av;
        i.toString = ea;
        return i
    };
    av.DownstreamNotFullfilled = function(q) {
        var i = ["DownstreamNotFullfilled", 1, q];
        i.__enum__ = av;
        i.toString = ea;
        return i
    };
    var lA = function(i) {
        this.msg = i
    };
    nt["protohx.CommonError"] = lA;
    lA.__name__ = ["protohx", "CommonError"];
    lA.prototype = {
        msg: null,
        __class__: lA
    };
    var qq = function() {};
    nt["protohx.Protohx"] = qq;
    qq.__name__ = ["protohx", "Protohx"];
    qq.getLow = function(q) {
        return n0.__cast(q.low, a)
    };
    qq.getHigh = function(q) {
        return n0.__cast(q.high, a)
    };
    qq.newInt64 = function(i1, q) {
        var i = new aJ(i1, q);
        return i
    };
    qq.newUInt64 = function(i1, q) {
        var i = new aJ(i1, q);
        return i
    };
    qq.setOutputEndian = function(i) {
        i.set_bigEndian(false)
    };
    qq.setInputEndian = function(i) {
        i.set_bigEndian(false)
    };
    var fP = function() {};
    nt["protohx.ReadUtils"] = fP;
    fP.__name__ = ["protohx", "ReadUtils"];
    fP.skip = function(i1, q) {
        switch (q) {
            case 0:
                while (i1.buf.readByte() >= 128) {}
                break;
            case 1:
                i1.buf.readInt32();
                i1.buf.readInt32();
                break;
            case 2:
                var i2 = fP.read__TYPE_UINT32(i1);
                while (i2 != 0) {
                    i1.buf.readByte();
                    i2--
                }
                break;
            case 5:
                i1.buf.readInt32();
                break;
            default:
                throw new nM(new lA("Invalid wire type: " + kr.string(fq.toFloat(q))))
        }
    };
    fP.read__TYPE_DOUBLE = function(i) {
        return i.buf.readDouble()
    };
    fP.read__TYPE_FLOAT = function(i) {
        return pW.i32ToFloat(i.buf.readInt32())
    };
    fP.read__TYPE_INT64 = function(i2) {
        var i1 = 0;
        var qY = 0;
        var q = 0;
        var js = 0;
        while (true) {
            q = i2.buf.readByte();
            if (js == 28) {
                break
            } else {
                if (q >= 128) {
                    i1 |= (q & 127) << js
                } else {
                    i1 |= q << js;
                    return qq.newInt64(qY, i1)
                }
            }
            js += 7
        }
        if (q >= 128) {
            q &= 127;
            i1 |= q << js;
            qY = q >>> 4
        } else {
            i1 |= q << js;
            qY = q >>> 4;
            return qq.newInt64(qY, i1)
        }
        js = 3;
        while (true) {
            q = i2.buf.readByte();
            if (js < 32) {
                if (q >= 128) {
                    qY |= (q & 127) << js
                } else {
                    qY |= q << js;
                    break
                }
            }
            js += 7
        }
        return qq.newInt64(qY, i1)
    };
    fP.read__TYPE_UINT64 = function(i) {
        var q = fP.read__TYPE_INT64(i);
        return qq.newUInt64(n0.__cast(q.high, a), n0.__cast(q.low, a))
    };
    fP.read__TYPE_INT32 = function(i) {
        return fP.read__TYPE_UINT32(i)
    };
    fP.read__TYPE_FIXED64 = function(q) {
        var i = q.buf.readInt32();
        var i1 = q.buf.readInt32();
        return qq.newUInt64(i1, i)
    };
    fP.read__TYPE_FIXED32 = function(i) {
        return n0.__cast(i.buf.readInt32(), a)
    };
    fP.read__TYPE_BOOL = function(q) {
        var i = fP.read__TYPE_UINT32(q);
        return i != 0
    };
    fP.read__TYPE_STRING = function(i) {
        var q = fP.read__TYPE_UINT32(i);
        return i.buf.readString(q)
    };
    fP.read__TYPE_BYTES = function(q) {
        var i = null;
        var i1 = fP.read__TYPE_UINT32(q);
        if (fq.gt(i1, 0)) {
            i = q.readBytes(i1)
        }
        return i
    };
    fP.read__TYPE_UINT32 = function(i2) {
        var i1 = 0;
        var js = 0;
        while (true) {
            var q = i2.buf.readByte();
            if (fq.gt(32, js)) {
                if (q >= 128) {
                    i1 |= (q & 127) << js
                } else {
                    i1 |= q << js;
                    break
                }
            } else {
                while (i2.buf.readByte() >= 128) {}
                break
            }
            js = js + 7
        }
        return i1
    };
    fP.read__TYPE_ENUM = function(i) {
        return fP.read__TYPE_INT32(i)
    };
    fP.read__TYPE_SFIXED32 = function(i) {
        return i.buf.readInt32()
    };
    fP.read__TYPE_SFIXED64 = function(q) {
        var i = q.buf.readInt32();
        var i1 = q.buf.readInt32();
        return qq.newInt64(i1, i)
    };
    fP.read__TYPE_SINT32 = function(i) {
        return mz.decode32(fP.read__TYPE_UINT32(i))
    };
    fP.read__TYPE_SINT64 = function(i1) {
        var q = fP.read__TYPE_INT64(i1);
        var i;
        i = n0.__cast(q.low, a);
        var qY;
        qY = n0.__cast(q.high, a);
        var js = mz.decode64low(i, qY);
        var i2 = mz.decode64high(i, qY);
        return qq.newInt64(i2, js)
    };
    fP.read__TYPE_MESSAGE = function(i, i1) {
        var q = fP.read__TYPE_UINT32(i);
        if (i.buf.totlen - i.buf.pos < q) {
            throw new nM(new lA("Invalid message length: " + kr.string(fq.toFloat(q))))
        }
        var i2 = i.buf.totlen - i.buf.pos - q;
        i1.readFromSlice(i, i2);
        if (i.buf.totlen - i.buf.pos != i2) {
            throw new nM(new lA("Invalid nested message"))
        }
        return i1
    };
    fP.readPackedRepeated = function(i, q, i2) {
        var i1 = fP.read__TYPE_UINT32(i);
        if (i.buf.totlen - i.buf.pos < i1) {
            throw new nM(new lA("Invalid message length: " + kr.string(fq.toFloat(i1))))
        }
        var js = i.buf.totlen - i.buf.pos - i1;
        while (i.buf.totlen - i.buf.pos > js) {
            i2.push(q(i))
        }
        if (i.buf.totlen - i.buf.pos != js) {
            throw new nM(new lA("Invalid packed repeated data"))
        }
    };
    var bT = function(i) {
		console.log("ReadingBuffer");
        this.buf = i;
        this.buf.set_bigEndian(false)
    };
    nt["protohx.ReadingBuffer"] = bT;
    bT.__name__ = ["protohx", "ReadingBuffer"];
    bT.fromBytes = function(q, i1, i) {
        return new bT(new bB(q, i1, i))
    };
    bT.prototype = {
        length: null,
        bytesAvailable: null,
        buf: null,
        get_length: function() {
            return this.buf.totlen
        },
        get_bytesAvailable: function() {
            return this.buf.totlen - this.buf.pos
        },
        readBytes: function(q) {
            var i = eg.alloc(q);
            this.buf.readBytes(i, 0, q);
            return i
        },
        readUTFBytes: function(i) {
            return this.buf.readString(i)
        },
        readInt32: function() {
            return this.buf.readInt32()
        },
        readUnsignedByte: function() {
            return this.buf.readByte()
        },
        readDouble: function() {
            return this.buf.readDouble()
        },
        readFloat: function() {
            return pW.i32ToFloat(this.buf.readInt32())
        },
        __class__: bT,
        __properties__: {
            get_bytesAvailable: "get_bytesAvailable",
            get_length: "get_length"
        }
    };
    var gd = function() {};
    nt["protohx.WireType"] = gd;
    gd.__name__ = ["protohx", "WireType"];
    var kD = function() {};
    nt["protohx.WriteUtils"] = kD;
    kD.__name__ = ["protohx", "WriteUtils"];
    kD.writeSingleUnknown = function(q, i, i1) {
        kD.write__TYPE_UINT32(q, i);
        var i2 = i & 7;
        switch (i2) {
            case 0:
                kD.write__TYPE_UINT64(q, i1);
                break;
            case 1:
                kD.write__TYPE_FIXED64(q, i1);
                break;
            case 2:
                kD.write__TYPE_BYTES(q, i1);
                break;
            case 5:
                kD.write__TYPE_FIXED32(q, i1);
                break;
            default:
                throw new nM(new lA("Invalid wire type: " + kr.string(fq.toFloat(i & 7))))
        }
    };
    kD.writeUnknownPair = function(q, i, js) {
        var i2;
        if ((js instanceof Array) && js.__enum__ == null) {
            i2 = n0.__cast(js, Array)
        } else {
            i2 = null
        }
        if (i2 != null) {
            var qY = 0;
            while (qY < i2.length) {
                var i1 = i2[qY];
                ++qY;
                kD.writeSingleUnknown(q, i, i1)
            }
        } else {
            kD.writeSingleUnknown(q, i, js)
        }
    };
    kD.writeVarint64 = function(i1, q, js) {
        if (js == 0) {
            kD.write__TYPE_UINT32(i1, q)
        } else {
            var qY = 0;
            while (qY < 4) {
                var i2 = qY++;
                i1.writeByte(q & 127 | 128);
                q >>>= 7
            }
            if ((js & -8) == 0) {
                i1.writeByte(js << 4 | q)
            } else {
                i1.writeByte((js << 4 | q) & 127 | 128);
                kD.write__TYPE_UINT32(i1, js >>> 3)
            }
        }
    };
    kD.writeTag = function(q, i, i1) {
        kD.write__TYPE_UINT32(q, i1 << 3 | i)
    };
    kD.write__TYPE_DOUBLE = function(i, q) {
        i.writeDouble(q)
    };
    kD.write__TYPE_FLOAT = function(i, q) {
        i.writeFloat(q)
    };
    kD.write__TYPE_INT64 = function(i, q) {
        kD.writeVarint64(i, n0.__cast(q.low, a), n0.__cast(q.high, a))
    };
    kD.write__TYPE_UINT64 = function(i, q) {
        kD.writeVarint64(i, n0.__cast(q.low, a), n0.__cast(q.high, a))
    };
    kD.write__TYPE_INT32 = function(i, q) {
        if (q < 0) {
            kD.writeVarint64(i, q, -1)
        } else {
            kD.write__TYPE_UINT32(i, q)
        }
    };
    kD.write__TYPE_FIXED64 = function(i, q) {
        i.writeInt32(n0.__cast(q.low, a));
        i.writeInt32(n0.__cast(q.high, a))
    };
    kD.write__TYPE_FIXED32 = function(i, q) {
        i.writeInt32(q)
    };
    kD.write__TYPE_BOOL = function(i, q) {
        i.writeByte(q ? 1 : 0)
    };
    kD.write__TYPE_STRING = function(q, i2) {
        var i1 = q.beginBlock();
        if (i2 != null) {
            q.writeUTFBytes(i2)
        }
        q.endBlock(i1)
    };
    kD.write__TYPE_BYTES = function(i, q) {
        if (q != null) {
            kD.write__TYPE_UINT32(i, q.length);
            i.writeBytes(q)
        } else {
            kD.write__TYPE_UINT32(i, 0)
        }
    };
    kD.write__TYPE_UINT32 = function(i, q) {
        while (true) {
            if ((q & -128) == 0) {
                i.writeByte(q);
                return
            } else {
                i.writeByte(q & 127 | 128);
                q = q >>> 7
            }
        }
    };
    kD.write__TYPE_ENUM = function(i, q) {
        kD.write__TYPE_INT32(i, q)
    };
    kD.write__TYPE_SFIXED32 = function(i, q) {
        i.writeInt32(q)
    };
    kD.write__TYPE_SFIXED64 = function(i, q) {
        i.writeInt32(n0.__cast(q.low, a));
        i.writeInt32(n0.__cast(q.high, a))
    };
    kD.write__TYPE_SINT32 = function(i, q) {
        kD.write__TYPE_UINT32(i, mz.encode32(q))
    };
    kD.write__TYPE_SINT64 = function(i, q) {
        kD.writeVarint64(i, mz.encode64low(n0.__cast(q.low, a), n0.__cast(q.high, a)), mz.encode64high(n0.__cast(q.low, a), n0.__cast(q.high, a)))
    };
    kD.write__TYPE_MESSAGE = function(q, i2) {
        var i1 = q.beginBlock();
        i2.writeToBuffer(q);
        q.endBlock(i1)
    };
    kD.writePackedRepeated = function(q, qZ, qY) {
        var i2 = q.beginBlock();
        var js = 0;
        var q0 = qY.length;
        while (js < q0) {
            var i1 = js++;
            qZ.apply(null, [q, qY[i1]])
        }
        q.endBlock(i2)
    };
    var gH = function() {
        this.slices = [];
        this.buf = new eu();
        this.buf.set_bigEndian(false);
        this.position = 0
    };
    nt["protohx.WritingBuffer"] = gH;
    gH.__name__ = ["protohx", "WritingBuffer"];
    gH.prototype = {
        slices: null,
        buf: null,
        position: null,
        writeDouble: function(i) {
            this.buf.writeDouble(i);
            this.position += 8
        },
        writeFloat: function(i) {
            this.buf.writeInt32(pW.floatToI32(i));
            this.position += 4
        },
        writeBytes: function(i) {
            this.buf.write(i);
            this.position += i.length
        },
        writeUTFBytes: function(q) {
            var i = eg.ofString(q);
            this.buf.write(i);
            this.position += i.length
        },
        writeInt32: function(i) {
            this.buf.writeInt32(i);
            this.position += 4
        },
        writeByte: function(i) {
            this.buf.writeByte(i);
            this.position += 1
        },
        beginBlock: function() {
            this.slices.push(this.position);
            var i = this.slices.length;
            this.slices.push(0);
            this.slices.push(0);
            this.slices.push(this.position);
            return i
        },
        endBlock: function(i) {
            this.slices.push(this.position);
            var q = this.slices[i + 2];
            this.slices[i] = this.position;
            kD.write__TYPE_UINT32(this, this.position - q);
            this.slices[i + 1] = this.position;
            this.slices.push(this.position)
        },
        toNormal: function(i2) {
            var js = 0;
            var qY = 0;
            var i1 = this.buf.getBytes();
            while (js < this.slices.length) {
                var q = this.slices[js];
                ++js;
                if (fq.gt(q, qY)) {
                    i2.writeFullBytes(i1, qY, q - qY)
                } else {
                    if (fq.gt(qY, q)) {
                        throw new nM(new lA(""))
                    }
                }
                qY = this.slices[js];
                ++js
            }
            i2.writeFullBytes(i1, qY, i1.length - qY)
        },
        __class__: gH
    };
    var mz = function() {};
    nt["protohx.ZigZag"] = mz;
    mz.__name__ = ["protohx", "ZigZag"];
    mz.encode32 = function(i) {
        return i << 1 ^ i >> 31
    };
    mz.decode32 = function(i) {
        return i >>> 1 ^ -(i & 1)
    };
    mz.encode64low = function(i, q) {
        return i << 1 ^ q >> 31
    };
    mz.encode64high = function(i, q) {
        return i >>> 31 ^ q << 1 ^ q >> 31
    };
    mz.decode64low = function(i, q) {
        return q << 31 ^ i >>> 1 ^ -(i & 1)
    };
    mz.decode64high = function(i, q) {
        return q >>> 1 ^ -(i & 1)
    };

    function mH(i) {
        if (i instanceof Array) {
            return function() {
                return cj.iter(i)
            }
        }
        return typeof(i.iterator) == "function" ? oT(i, i.iterator) : i.iterator
    }
    var c3, ee = 0;

    function oT(i1, i) {
        if (i == null) {
            return null
        }
        if (i.__id__ == null) {
            i.__id__ = ee++
        }
        var q;
        if (i1.hx__closures__ == null) {
            i1.hx__closures__ = {}
        } else {
            q = i1.hx__closures__[i.__id__]
        }
        if (q == null) {
            q = function() {
                return q.method.apply(q.scope, arguments)
            };
            q.scope = i1;
            q.method = i;
            i1.hx__closures__[i.__id__] = q
        }
        return q
    }
    ox.NIL = new ox(null, null);
    if (Array.prototype.indexOf) {
        cj.indexOf = function(q, i2, i1) {
            return Array.prototype.indexOf.call(q, i2, i1)
        }
    }
    if (Array.prototype.lastIndexOf) {
        cj.lastIndexOf = function(i, i1, q) {
            return Array.prototype.lastIndexOf.call(i, i1, q)
        }
    }
    nt.Math = Math;
    String.prototype.__class__ = nt.String = String;
    String.__name__ = ["String"];
    nt.Array = Array;
    Array.__name__ = ["Array"];
    Date.prototype.__class__ = nt.Date = Date;
    Date.__name__ = ["Date"];
    var a = nt.Int = {
        __name__: ["Int"]
    };
    var dK = nt.Dynamic = {
        __name__: ["Dynamic"]
    };
    var ht = nt.Float = Number;
    ht.__name__ = ["Float"];
    var em = nt.Bool = Boolean;
    em.__ename__ = ["Bool"];
    var nq = nt.Class = {
        __name__: ["Class"]
    };
    var jo = {};
    if (Array.prototype.filter == null) {
        Array.prototype.filter = function(q) {
            var i2 = [];
            var i = 0;
            var qY = this.length;
            while (i < qY) {
                var js = i++;
                var qZ = this[js];
                if (q(qZ)) {
                    i2.push(qZ)
                }
            }
            return i2
        }
    }
    var pN = {};
    var pC = window.jQuery;
    var ne = ne || {};
    ne.JQuery = pC;
    var gf = mL.ArrayBuffer || ng;
    if (gf.prototype.slice == null) {
        gf.prototype.slice = ng.sliceImpl
    }
    var ip = mL.DataView || bW;
    var qw = mL.Uint8Array || pM._new;
    var qF;
    qF = new Uint32Array(256);
    pL.__alpha16 = qF;
    var v = 0;
    while (v < 256) {
        var pI = v++;
        var bd = Math.ceil(pI * 257.00392156862745);
        pL.__alpha16[pI] = bd
    }
    var qD;
    qD = new qw(510);
    pL.__clamp = qD;
    var gv = 0;
    while (gv < 255) {
        var oi = gv++;
        pL.__clamp[oi] = oi
    }
    var mq = 255;
    var gu = 511;
    while (mq < gu) {
        var oh = mq++;
        pL.__clamp[oh] = 255
    }
    mW.available = false;
    mW.enabled = false;
    j7.level = 3;
    if (typeof jb == "undefined") {
        jb = {}
    }
    if (jb.log == null) {
        jb.log = function() {}
    }
    if (window.createjs != null) {
        createjs.Sound.alternateExtensions = ["ogg", "mp3", "wav"]
    }
    eH.__instanceCount = 0;
    eH.__worldRenderDirty = 0;
    eH.__worldTransformDirty = 0;
    eH.__cacheAsBitmapMode = false;
    ef.MAX_SCHEDULED_TASKS = 2147483647;
    ef._scheduleCount = 0;
    nK.initialized = false;
    nK.onReady = new qv();
    nK.progressLabel = "";
    nK.onProgressRequest = new qt();
    iS.DAYS_OF_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
    ky.Element = 0;
    ky.PCData = 1;
    ky.CData = 2;
    ky.Comment = 3;
    ky.DocType = 4;
    ky.ProcessingInstruction = 5;
    ky.Document = 6;
    m0.OPEN_VIEW = "event_open_view";
    m0.START_GAME = "event_start_game";
    c9.ATLAS = "main_shop";
    c9.avatar = "Avatar";
    c9.close = "Close";
    c9.close_disabled = "Close_disabled";
    c9.coins_l = "Coins_L";
    c9.election_icon_democratic = "Election_Icon_Democratic";
    c9.election_icon_republican = "Election_Icon_Republican";
    c9.exp_star = "Exp_Star";
    c9.google_play = "Google_Play";
    c9.alert_icon = "alert_icon";
    c9.appstore = "appstore";
    c9.arrow = "arrow";
    c9.back_button = "back_button";
    c9.check = "check";
    c9.checkbox = "checkbox";
    c9.chest_bottom = "chest_bottom";
    c9.chest_top = "chest_top";
    c9.coin_pack = "coin_pack";
    c9.coins_button = "coins_button";
    c9.currency_icon = "currency_icon";
    c9.dailyquest_chest = "dailyquest_chest";
    c9.dailyquest_chest_icon = "dailyquest_chest_icon";
    c9.dailyquest_chestbudle = "dailyquest_chestbudle";
    c9.fast_play = "fast_play";
    c9.fb_icon = "fb_icon";
    c9.freecoins_video = "freecoins_video";
    c9.giant_coin = "giant_coin";
    c9.gift_big_icons = "gift_big_icons";
    c9.gift_mini_icon = "gift_mini_icon";
    c9.gifting_button = "gifting_button";
    c9.gifts_icon = "gifts_icon";
    c9.gplus_icon = "gplus_icon";
    c9.gplus_icon2 = "gplus_icon2";
    c9.hint = "hint";
    c9.locket = "locket";
    c9.mass_button = "mass_button";
    c9.massboost_2x_shop = "massboost_2x_shop";
    c9.massboost_3x_shop = "massboost_3x_shop";
    c9.multiplier_stamp = "multiplier_stamp";
    c9.not_for_guests = "not_for_guests";
    c9.play = "play";
    c9.progress_striped = "progress_striped";
    c9.purchase_plus = "purchase_plus";
    c9.search_mini_icon = "search_mini_icon";
    c9.skins_button = "skins_button";
    c9.sticker = "sticker";
    c9.sticker_green = "sticker_green";
    c9.survey_icon = "survey_icon";
    c9.twitter_icon = "twitter_icon";
    c9.xp_button = "xp_button";
    c9.xpboost_2x_shop = "xpboost_2x_shop";
    c9.xpboost_3x_shop = "xpboost_3x_shop";
    kM.ATLAS = "menusCommonUI";
    kM.coins_l = "Coins_L";
    kM.coins_m = "Coins_M";
    kM.coins_s = "Coins_S";
    kM.coins_xl = "Coins_XL";
    kM.coins_xs = "Coins_XS";
    kM.coins_xxl = "Coins_XXL";
    kM.back_button = "back_button";
    kM.currency_icon = "currency_icon";
    kM.currency_plusbox = "currency_plusbox";
    kM.divider = "divider";
    kM.exit_button = "exit_button";
    kM.fb_icon = "fb_icon";
    kM.freecoins_icon = "freecoins_icon";
    kM.g__icon = "g+_icon";
    kM.icon_home = "icon_home";
    kM.icon_no = "icon_no";
    kM.icon_no_white = "icon_no_white";
    kM.icon_reconnect = "icon_reconnect";
    kM.icon_reconnect_white = "icon_reconnect_white";
    kM.icon_yes = "icon_yes";
    kM.icon_yes_white = "icon_yes_white";
    kM.loading_inside = "loading_inside";
    kM.loading_outside = "loading_outside";
    kM.logo = "logo";
    kM.plus = "plus";
    kM.profilepic_guest = "profilepic_guest";
    kM.progression_empty = "progression_empty";
    kM.progression_full = "progression_full";
    kM.progression_white = "progression_white";
    kM.scroller = "scroller";
    kM.scroller_transparent = "scroller_transparent";
    kM.scroller_white = "scroller_white";
    kM.spinning_ball = "spinning_ball";
    kM.spinning_ball_effect = "spinning_ball_effect";
    kM.sticker = "sticker";
    kM.stretch_darkblue_frame = "stretch_darkblue_frame";
    kM.stretch_g_red_frame = "stretch_g+red_frame";
    kM.stretch_green_frame = "stretch_green_frame";
    kM.stretch_lightgrey_frame = "stretch_lightgrey_frame";
    kM.stretch_orange_frame = "stretch_orange_frame";
    kM.stretch_red_frame = "stretch_red_frame";
    kM.stretch_trans_green_frame = "stretch_trans_green_frame";
    kM.stretch_white_frame = "stretch_white_frame";
    kM.stretch_white_green_frame = "stretch_white_green_frame";
    kM.stretch_whitegrey_frame = "stretch_whitegrey_frame";
    kM.stretch_whitegrey_tab = "stretch_whitegrey_tab";
    kM.tapjoy_icon = "tapjoy_icon";
    kM.twitter_icon = "twitter_icon";
    kM.twitter_login_icon = "twitter_login_icon";
    kM.whitegrey_tab = "whitegrey_tab";
    pJ.ATLAS = "menusShopUI";
    pJ.mass20_icon = "mass20_icon";
    pJ.mass40_icon = "mass40_icon";
    pJ.massboost_2x_shop = "massboost_2x_shop";
    pJ.massboost_3x_shop = "massboost_3x_shop";
    pJ.xpboost_2x_shop = "xpboost_2x_shop";
    pJ.xpboost_3x_shop = "xpboost_3x_shop";
    kc.lookupPackages = ["agario.views", "agario.module.shop.view"];
    hy.INGAME_ATLAS = [{
        id: "main_shop",
        src: "atlas/main_shop.xml"
    }];
    ol.DISABLE_CLOSED = "ShopEvent::DISABLE_CLOSED";
    ol.CLOSE = "close";
    bk.OPEN = "LoginElsewhereDialog::openLoginElsewhereDialog";
    ag.list = [new nP("echo", pD), new nP(bk.OPEN, bj), new nP(m0.OPEN_VIEW, kc), new nP("debug", bQ)];
    d5.NOT_FOUND = "__NOT__FOUND__";
    d5.properties = (function(q) {
        var i;
        var i1 = new io();
        if (pN.xsolla_endpoint != null) {
            i1.setReserved("xsolla_endpoint", "https://payments-dev.agario.miniclippt.com")
        } else {
            i1.h.xsolla_endpoint = "https://payments-dev.agario.miniclippt.com"
        }
        if (pN.root_url != null) {
            i1.setReserved("root_url", "https://agar.io/")
        } else {
            i1.h.root_url = "https://agar.io/"
        }
        if (pN.config_url != null) {
            i1.setReserved("config_url", "https://agario-configurations-web.s3.amazonaws.com/live")
        } else {
            i1.h.config_url = "https://agario-configurations-web.s3.amazonaws.com/live"
        }
        if (pN.gift_object_id != null) {
            i1.setReserved("gift_object_id", "1666759370208394")
        } else {
            i1.h.gift_object_id = "1666759370208394"
        }
        if (pN.load_local_configuration != null) {
            i1.setReserved("load_local_configuration", "false")
        } else {
            i1.h.load_local_configuration = "false"
        }
        i = i1;
        return i
    }(this));
    ob.STATE_MAIN_SCREEN = "state_main_screen";
    ob.STATE_SHOP_DIALOG = "state_shop_dialog";
    ob.STATE_PAYMENT_WINDOW = "state_xsolla_iframe";
    ob.STATE_OFFERWALL_WINDOW = "state_offerwall_window";
    ob.STATE_VIDEO_WINDOW = "state_video_window";
    ob.STATE_FREE_COINS_DIALOG = "state_free_coins_dialog";
    ob.STATE_PROFILE_DIALOG = "state_profile_dialog";
    ob.STATE_GUEST_LOGIN_DIALOG = "state_guest_login_dialog";
    ob.STATE_FREE_COINS_COLLECT_DIALOG = "stateFreeCoinsCollect";
    ob.PURCHASE_COMPLETE_DIALOG = "purchaseCompleteDialog";
    ob.LEVEL_UP_DIALOG = "levelUpDialog";
    ob.CONNECTION_LOST_DIALOG = "connectionLostDialog";
    ob.GIFT_UNAVAILABLE_DIALOG = "giftUnavailableDialog";
    ob.PRODUCT_USE_DIALOG = "productUseDialog";
    ob.USER_BANNED_DIALOG = "userBannedDialog";
    ob.DEBUG_PROMO_VIEW = "debugPromoView";
    ob.PROMO_DIALOG = "promoDialog";
    ob.DEBUG_VIEW = "debugView";
    ob.LOGIN_ELSEWHERE_DIALOG = "loginElsewhereDialog";
    ob.ELECTION_DIALOG = "electionDialog";
    ob.GIFT_CENTER_DIALOG = "giftCenterDialog";
    ob.STATE_FULLSCREEN_AD = "state_fullscreen_ad";
    ob.QUESTS_DIALOG = "quests_dialog";
    m1._textGroups = new io();
    o7.BONUS_WEBINCENTIVE = "webIncentive";
    aQ.MAJOR = "2";
    aQ.MINOR = "5";
    aQ.PATCH = "1";
    aQ.BUILD_NUMBER = "845";
    aQ.VERSION = "2.5.1";
    aQ.SERVER_VERSION = "";
    aQ.SERVERS_VERSION = "";
    aQ.CONFIG_NUMBER = "0";
    ft.FFA = "";
    ft.TEAM = ":team";
    ft.EXPERIMENTAL = ":experimental";
    ft.PARTY = ":party";
    kO.__meta__ = {
        fields: {
            connected: {
                isVar: null
            }
        }
    };
    kO.INITIAL_DELAY = 5000;
    pX.SHOW_MASS = "showMass";
    pX.SHOW_QUEST = "showQuest";
    pX.NO_SKINS = "noSkins";
    pX.SKIP_STATS = "skipStats";
    pX.NO_COLORS = "noColors";
    pX.NO_NAMES = "noNames";
    pX.DARK_THEME = "darkTheme";
    pX.SHOW_ONLINE_STATUS = "showOnlineStatus";
    hM.ACTIVATE = "activate";
    hM.ADDED = "added";
    hM.ADDED_TO_STAGE = "addedToStage";
    hM.CANCEL = "cancel";
    hM.CHANGE = "change";
    hM.CLOSE = "close";
    hM.COMPLETE = "complete";
    hM.CONNECT = "connect";
    hM.CONTEXT3D_CREATE = "context3DCreate";
    hM.DEACTIVATE = "deactivate";
    hM.ENTER_FRAME = "enterFrame";
    hM.ID3 = "id3";
    hM.INIT = "init";
    hM.MOUSE_LEAVE = "mouseLeave";
    hM.OPEN = "open";
    hM.REMOVED = "removed";
    hM.REMOVED_FROM_STAGE = "removedFromStage";
    hM.RENDER = "render";
    hM.RESIZE = "resize";
    hM.SCROLL = "scroll";
    hM.SELECT = "select";
    hM.SOUND_COMPLETE = "soundComplete";
    hM.TAB_CHILDREN_CHANGE = "tabChildrenChange";
    hM.TAB_ENABLED_CHANGE = "tabEnabledChange";
    hM.TAB_INDEX_CHANGE = "tabIndexChange";
    hM.UNLOAD = "unload";
    dr.SHOW_GIFT_REQUESTS = "agario.module.gift.events.ViewEvent.open_gift_requests";
    dr.SHOW_GIFT_INBOX = "agario.module.gift.events.ViewEvent.open_gift_inbox";
    dr.REQUEST_GIFTS = "agario.module.gift.events.ViewEvent.request_gifts";
    dr.REQUEST_FRIENDS = "agario.module.gift.events.ViewEvent.request_friends";
    dr.REQUEST_FRIENDS_TO_SEND = "agario.module.gift.events.ViewEvent.request_friends_to-send";
    dr.ON_FRIEND_SELECTED = "agario.module.gift.events.ViewEvent.on_friend_selected";
    dr.ACCEPT_GIFTS = "agario.module.gift.events.ViewEvent.accept_gifts";
    dr.ACCEPT_GIFTS_REQUEST = "agario.module.gift.events.ViewEvent.accept_gifts_request";
    dr.SEND_GIFTS = "agario.module.gift.events.ViewEvent.send_gifts";
    dr.INBOX_ELEMENT_DISPOSED = "agario.module.gift.events.ViewEvent.post_dispose_inbox";
    dr.FRIEND_ELEMENT_DISPOSED = "agario.module.gift.events.ViewEvent.post_dispose";
    dr.ANIMATE_SPLASH = "agario.module.gift.events.ViewEvent.animate_splash";
    dr.ANIMATE_SHOWER = "agario.module.gift.events.ViewEvent.animate_shower";
    no.ACTION_SEND = "send";
    no.ACTION_ASKFOR = "askfor";
    no.ACTION_TURN = "turn";
    no.ACTION_RECOMMEND = "recommend";
    d4.OPEN = "GiftCenterDialog::openGiftCenterDialog";
    m7.COIN_WIDTH = 19;
    m7.COIN_HEIGHT = 19;
    ku.WIDTH = 200;
    ku.HEIGHT = 70;
    Y.WIDTH = 350;
    Y.HEIGHT = 70;
    jq.ON_PLAY_QUEST = "agario.module.quests.events.QuestsEvent.on_play_quest";
    jq.ON_SHOW_REWARD = "agario.module.quests.events.QuestsEvent.on_show_reward";
    jq.ON_COLLECT_REWARD = "agario.module.quests.events.QuestsEvent.on_collect_reward";
    jq.ON_PURCHASE_QUEST = "agario.module.quests.events.QuestsEvent.on_purchase_quest";
    jq.UPDATE_REQUEST = "agario.module.quests.events.QuestsEvent.update_request";
    fM.EVENT_ID = "dailyQuest";
    f1.__rtti = '<class path="oaktree.core.VO" params="">\n\t<classCache expr="&apos;???&apos;" line="16" static="1">\n\t\t<x path="Map">\n\t\t\t<c path="String"/>\n\t\t\t<x path="Map">\n\t\t\t\t<c path="String"/>\n\t\t\t\t<e path="oaktree.core.VOTypes"/>\n\t\t\t</x>\n\t\t</x>\n\t\t<meta><m n=":value"><e>\'???\'</e></m></meta>\n\t</classCache>\n\t<addFieldDeclaration public="1" set="method" line="204" static="1"><f a="className:fieldName:fieldType">\n\t<c path="String"/>\n\t<c path="String"/>\n\t<e path="oaktree.core.VOTypes"/>\n\t<x path="Void"/>\n</f></addFieldDeclaration>\n\t<classHasField public="1" set="method" line="212" static="1"><f a="className:fieldName">\n\t<c path="String"/>\n\t<c path="String"/>\n\t<x path="Bool"/>\n</f></classHasField>\n\t<handleSpecialTypes set="method" line="26"><f a="key:obj">\n\t<c path="String"/>\n\t<d/>\n\t<x path="Bool"/>\n</f></handleSpecialTypes>\n\t<hasField set="method" line="31"><f a="fieldToFind">\n\t<c path="String"/>\n\t<x path="Bool"/>\n</f></hasField>\n\t<setValues public="1" set="method" line="40"><f a="obj">\n\t<d/>\n\t<x path="Void"/>\n</f></setValues>\n\t<_parse set="method" line="84"><f a="type:v">\n\t<e path="oaktree.core.VOTypes"/>\n\t<d/>\n\t<d/>\n</f></_parse>\n\t<_parseClass set="method" line="104"><f a="name:v">\n\t<c path="String"/>\n\t<d/>\n\t<d/>\n</f></_parseClass>\n\t<resolveVOType set="method" line="130"><f a="type">\n\t<e path="oaktree.core.VOTypes"/>\n\t<x path="Class"><d/></x>\n</f></resolveVOType>\n\t<_parseArray params="T" set="method" line="141">\n\t\t<f a="valueClass:valueType:v">\n\t\t\t<c path="_parseArray.T"/>\n\t\t\t<e path="oaktree.core.VOTypes"/>\n\t\t\t<d/>\n\t\t\t<c path="Array"><c path="_parseArray.T"/></c>\n\t\t</f>\n\t\t<meta><m n=":has_untyped"/></meta>\n\t</_parseArray>\n\t<parseRTTIFields set="method" line="153"><f a="type">\n\t<e path="haxe.rtti.CType"/>\n\t<e path="oaktree.core.VOTypes"/>\n</f></parseRTTIFields>\n\t<parseFieldType set="method" line="164"><f a="name:params">\n\t<c path="String"/>\n\t<c path="List"><e path="haxe.rtti.CType"/></c>\n\t<e path="oaktree.core.VOTypes"/>\n</f></parseFieldType>\n\t<loadFieldInfo set="method" line="181">\n\t\t<f a="?rootCall:className:classObj" v="false::">\n\t\t\t<x path="Bool"/>\n\t\t\t<c path="String"/>\n\t\t\t<x path="Class"><d/></x>\n\t\t\t<x path="Void"/>\n\t\t</f>\n\t\t<meta><m n=":value"><e>{rootCall:false}</e></m></meta>\n\t</loadFieldInfo>\n\t<getDeclaredTypeOfField public="1" set="method" line="223"><f a="className:field">\n\t<c path="String"/>\n\t<c path="String"/>\n\t<e path="oaktree.core.VOTypes"/>\n</f></getDeclaredTypeOfField>\n\t<DEBUG public="1" get="accessor" set="null"><x path="Bool"/></DEBUG>\n\t<get_DEBUG set="method" line="236"><f a=""><x path="Bool"/></f></get_DEBUG>\n\t<new public="1" set="method" line="18">\n\t\t<f a="?obj" v="null">\n\t\t\t<d/>\n\t\t\t<x path="Void"/>\n\t\t</f>\n\t\t<meta><m n=":value"><e>{obj:null}</e></m></meta>\n\t</new>\n\t<meta>\n\t\t<m n=":directlyUsed"/>\n\t\t<m n=":rtti"/>\n\t</meta>\n</class>';
    f1.classCache = new io();
    aT.__rtti = '<class path="agario.module.quests.model.vo.VisualQuestVO" params="">\n\t<extends path="oaktree.core.VO"/>\n\t<TYPE_TIME_TOTAL public="1" get="inline" set="null" line="11" static="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</TYPE_TIME_TOTAL>\n\t<TYPE_TOP_POSITION public="1" get="inline" set="null" line="12" static="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</TYPE_TOP_POSITION>\n\t<TYPE_EAT_CELLS public="1" get="inline" set="null" line="13" static="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</TYPE_EAT_CELLS>\n\t<TYPE_FINAL_LEVEL public="1" get="inline" set="null" line="14" static="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</TYPE_FINAL_LEVEL>\n\t<originId public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</originId>\n\t<productIdToQuantify public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</productIdToQuantify>\n\t<questType public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</questType>\n\t<questTypeDescriptionSingularTag public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</questTypeDescriptionSingularTag>\n\t<questTypeDescriptionPluralTag public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</questTypeDescriptionPluralTag>\n\t<questActiveImage public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</questActiveImage>\n\t<serverConversionDivisor public="1">\n\t\t<x path="Int"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</serverConversionDivisor>\n\t<questProgressDescriptionTag public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</questProgressDescriptionTag>\n\t<getProgressByGoal public="1" set="method" line="30">\n\t\t<f a="goal:progress">\n\t\t\t<x path="Int"/>\n\t\t\t<x path="Int"/>\n\t\t\t<c path="String"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</getProgressByGoal>\n\t<getDescriptionByGoal public="1" set="method" line="65">\n\t\t<f a="goal">\n\t\t\t<x path="Int"/>\n\t\t\t<c path="String"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</getDescriptionByGoal>\n\t<new public="1" set="method" line="25">\n\t\t<f a="?obj">\n\t\t\t<d/>\n\t\t\t<x path="Void"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</new>\n\t<meta><m n=":keep"/></meta>\n</class>';
    aT.TYPE_TIME_TOTAL = "time_total";
    aT.TYPE_TOP_POSITION = "top_position";
    aT.TYPE_EAT_CELLS = "normal_cells_eaten";
    aT.TYPE_FINAL_LEVEL = "final_level";
    A.WIDTH = 150;
    A.HEIGHT = 360;
    f3.WIDTH = 150;
    f3.HEIGHT = 360;
    a9.OPENED = "HintTooltipEvent::OPENED";
    a9.CLOSED = "HintTooltipEvent::CLOSED";
    jG.READY = "ShopEvent::Ready";
    jG.BUY = "ShopEvent::BUY";
    jG.USE = "ShopEvent::USE";
    jG.UNEQUIP = "ShopEvent::UNEQUIP";
    jG.DISABLE_SHOP = "ShopEvent::DISABLE_SHOP";
    jG.ENABLE_SHOP = "ShopEvent::ENABLE_SHOP";
    jG.SHOP_ENABLED = "ShopEvent::SHOP_ENABLED";
    jG.CONFIGURATION_LOADED = "ShopEvent::CONFIGURATION_LOADED";
    jG.CONNECTION_LOST = "ShopEvent::connectionLost";
    jG.SHOW_GUEST_CONVERSION_POPUP = "ShopEvent::show_guest_conversion";
    jG.USE_PRODUCT_RESPONSE = "ShopEvent::useProductResponse";
    jG.SOFT_PURCHASE_COMPLETE = "ShopEvent::softPurchaseComplete";
    jG.SOFT_PURCHASE_FAILED = "shopevent::soft_purchase_failed";
    jG.INAPP_PURCHASE_COMPLETE = "ShopEvent::INAPP_PURCHASE_COMPLETE";
    jG.FREE_COINS_RESPONSE = "ShopEvent::freeCoinsResponse";
    jG.CHECK_VIDEOS = "ShopEvent::checkVideos";
    jG.USE_PRODUCT_FAILED = "ShopEvent::useProductFailed";
    jG.ALLOW_DISABLE_CLOSE = "shop_event::allow_disable_close";
    jG.NEW_CONFIG_LOADED = "shop_event::newConfigLoaded";
    jG.CONFIG_COMPLETE = "shop_event::configComplete";
    jG.SHOW_GIFT_CENTER = "shop_event::showGiftCenter";
    jG.SHOW_GIFT_UNAVAILABLE = "shop_event::showGiftUnavailable";
    jG.OPEN_QUESTS_DIALOG = "shop_event::openQuestsDialog";
    jG.ON_QUEST_PROGRESS_LABEL_UPDATE = "shop_event::on_quest_progress_label_update";
    o1.WALLET_UPDATED = "WalletEvent::UPDATED";
    oC.__meta__ = {
        fields: {
            isConnecting: {
                isVar: null
            }
        }
    };
    oC.GUEST_USER_COIN_VALUE = 100;
    fn.__meta__ = {
        fields: {
            achievements: {
                name: ["Achievements"]
            },
            userSettings: {
                name: ["Default Settings - User"]
            },
            localizationSettings: {
                name: ["Default Settings - Localization"]
            },
            defaultCommunicationSettings: {
                name: ["Default Settings - Comm."]
            },
            defaultGiftingSettings: {
                name: ["Default Settings - Gifting"]
            },
            defaultPromoSettings: {
                name: ["Default Settings - Promos"]
            },
            shopCoins: {
                name: ["Shop - Coins"]
            },
            shopBoostCategories: {
                name: ["Shop - Boost Categories"]
            },
            shopBoostItems: {
                name: ["Shop - Boost Items"]
            },
            shopSkins: {
                name: ["Shop - Skins"]
            },
            shopPriceCurrency: {
                name: ["Prices - Currencies"]
            },
            shopPriceMatrix: {
                name: ["Prices - Matrix"]
            },
            visualBundles: {
                name: ["Visual - Bundles"]
            },
            visualProducts: {
                name: ["Visual - Products"]
            },
            visualQuests: {
                name: ["Visual - Quests"]
            },
            shopSkinTabs: {
                name: ["Visual - Shop Skins Tabs"]
            },
            tabsAssociation: {
                name: ["Visual - Tabs Associations"]
            },
            walletBonusRewards: {
                name: ["Wallet - Bonuses and Rewards"]
            },
            walletInappPurchases: {
                name: ["Wallet - In-App Purchases"]
            },
            walletSoftPurchases: {
                name: ["Wallet - Soft Purchases"]
            },
            walletOfferableBundles: {
                name: ["Wallet - Offerable Bundles"]
            },
            walletProductBundles: {
                name: ["Wallet - Product Bundles"]
            },
            walletProducts: {
                name: ["Wallet - Products"]
            },
            walletTimeVariablePrices: {
                name: ["Wallet - Time-Variable Prices"]
            },
            externalSocialStories: {
                name: ["External - Social Stories"]
            },
            gamePlayBoosts: {
                name: ["Gameplay - Boosts"]
            },
            gamePlaySkins: {
                name: ["Gameplay - Equippable Skins"]
            },
            freeSkins: {
                name: ["Gameplay - Free Skins"]
            },
            xpList: {
                name: ["Gameplay - XP to Level"]
            },
            giftingFakeUser: {
                name: ["Gifting - Fake User"]
            }
        }
    };
    fn.__rtti = '<class path="agario.module.shop.models.ShopModel" params="">\n\t<extends path="oaktree.core.VO"/>\n\t<countr_code public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</countr_code>\n\t<currency public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</currency>\n\t<achievements public="1">\n\t\t<c path="Array"><c path="agario.module.shop.models.vo.AchievementVO"/></c>\n\t\t<meta>\n\t\t\t<m n=":keep"/>\n\t\t\t<m n="name"><e>"Achievements"</e></m>\n\t\t</meta>\n\t</achievements>\n\t<userSettings public="1">\n\t\t<c path="Array"><c path="agario.module.shop.models.vo.UserSettingVO"/></c>\n\t\t<meta>\n\t\t\t<m n=":keep"/>\n\t\t\t<m n="name"><e>"Default Settings - User"</e></m>\n\t\t</meta>\n\t</userSettings>\n\t<localizationSettings public="1">\n\t\t<c path="Array"><c path="agario.module.shop.models.vo.UserSettingVO"/></c>\n\t\t<meta>\n\t\t\t<m n=":keep"/>\n\t\t\t<m n="name"><e>"Default Settings - Localization"</e></m>\n\t\t</meta>\n\t</localizationSettings>\n\t<defaultCommunicationSettings public="1">\n\t\t<c path="Array"><c path="agario.module.shop.models.vo.UserSettingVO"/></c>\n\t\t<meta>\n\t\t\t<m n=":keep"/>\n\t\t\t<m n="name"><e>"Default Settings - Comm."</e></m>\n\t\t</meta>\n\t</defaultCommunicationSettings>\n\t<defaultGiftingSettings public="1">\n\t\t<c path="Array"><c path="agario.module.shop.models.vo.UserSettingVO"/></c>\n\t\t<meta>\n\t\t\t<m n=":keep"/>\n\t\t\t<m n="name"><e>"Default Settings - Gifting"</e></m>\n\t\t</meta>\n\t</defaultGiftingSettings>\n\t<defaultPromoSettings public="1">\n\t\t<c path="Array"><c path="agario.module.shop.models.vo.UserSettingVO"/></c>\n\t\t<meta>\n\t\t\t<m n=":keep"/>\n\t\t\t<m n="name"><e>"Default Settings - Promos"</e></m>\n\t\t</meta>\n\t</defaultPromoSettings>\n\t<shopCoins public="1">\n\t\t<c path="Array"><c path="agario.module.shop.models.vo.CurrencyItemVO"/></c>\n\t\t<meta>\n\t\t\t<m n=":keep"/>\n\t\t\t<m n="name"><e>"Shop - Coins"</e></m>\n\t\t</meta>\n\t</shopCoins>\n\t<shopBoostCategories public="1">\n\t\t<c path="Array"><c path="agario.module.shop.models.vo.ShopBoostCategoryVO"/></c>\n\t\t<meta>\n\t\t\t<m n=":keep"/>\n\t\t\t<m n="name"><e>"Shop - Boost Categories"</e></m>\n\t\t</meta>\n\t</shopBoostCategories>\n\t<shopBoostItems public="1">\n\t\t<c path="Array"><c path="agario.module.shop.models.vo.ShopBoostItemVO"/></c>\n\t\t<meta>\n\t\t\t<m n=":keep"/>\n\t\t\t<m n="name"><e>"Shop - Boost Items"</e></m>\n\t\t</meta>\n\t</shopBoostItems>\n\t<shopSkins public="1">\n\t\t<c path="Array"><c path="agario.module.shop.models.vo.ShopSkinItemVO"/></c>\n\t\t<meta>\n\t\t\t<m n=":keep"/>\n\t\t\t<m n="name"><e>"Shop - Skins"</e></m>\n\t\t</meta>\n\t</shopSkins>\n\t<shopPriceCurrency public="1">\n\t\t<c path="Array"><c path="agario.module.shop.models.vo.PriceCurrencyVO"/></c>\n\t\t<meta>\n\t\t\t<m n=":keep"/>\n\t\t\t<m n="name"><e>"Prices - Currencies"</e></m>\n\t\t</meta>\n\t</shopPriceCurrency>\n\t<shopPriceMatrix public="1">\n\t\t<c path="Array"><c path="agario.module.shop.models.vo.PriceTierVO"/></c>\n\t\t<meta>\n\t\t\t<m n=":keep"/>\n\t\t\t<m n="name"><e>"Prices - Matrix"</e></m>\n\t\t</meta>\n\t</shopPriceMatrix>\n\t<visualBundles public="1">\n\t\t<c path="Array"><c path="agario.module.shop.models.vo.VisualBundleVO"/></c>\n\t\t<meta>\n\t\t\t<m n=":keep"/>\n\t\t\t<m n="name"><e>"Visual - Bundles"</e></m>\n\t\t</meta>\n\t</visualBundles>\n\t<visualProducts public="1">\n\t\t<c path="Array"><c path="agario.module.shop.models.vo.VisualProductVO"/></c>\n\t\t<meta>\n\t\t\t<m n=":keep"/>\n\t\t\t<m n="name"><e>"Visual - Products"</e></m>\n\t\t</meta>\n\t</visualProducts>\n\t<visualQuests public="1">\n\t\t<c path="Array"><c path="agario.module.quests.model.vo.VisualQuestVO"/></c>\n\t\t<meta>\n\t\t\t<m n=":keep"/>\n\t\t\t<m n="name"><e>"Visual - Quests"</e></m>\n\t\t</meta>\n\t</visualQuests>\n\t<shopSkinTabs public="1">\n\t\t<c path="Array"><c path="agario.module.shop.models.vo.ShopSkinTabVO"/></c>\n\t\t<meta>\n\t\t\t<m n=":keep"/>\n\t\t\t<m n="name"><e>"Visual - Shop Skins Tabs"</e></m>\n\t\t</meta>\n\t</shopSkinTabs>\n\t<tabsAssociation public="1">\n\t\t<c path="Array"><c path="agario.module.shop.models.vo.VisualTabsAssociationVO"/></c>\n\t\t<meta>\n\t\t\t<m n=":keep"/>\n\t\t\t<m n="name"><e>"Visual - Tabs Associations"</e></m>\n\t\t</meta>\n\t</tabsAssociation>\n\t<walletBonusRewards public="1">\n\t\t<c path="Array"><c path="agario.module.shop.models.vo.BonusRewardVO"/></c>\n\t\t<meta>\n\t\t\t<m n=":keep"/>\n\t\t\t<m n="name"><e>"Wallet - Bonuses and Rewards"</e></m>\n\t\t</meta>\n\t</walletBonusRewards>\n\t<walletInappPurchases public="1">\n\t\t<c path="Array"><c path="agario.module.shop.models.vo.WalletInappPurchaseVO"/></c>\n\t\t<meta>\n\t\t\t<m n=":keep"/>\n\t\t\t<m n="name"><e>"Wallet - In-App Purchases"</e></m>\n\t\t</meta>\n\t</walletInappPurchases>\n\t<walletSoftPurchases public="1">\n\t\t<c path="Array"><c path="agario.module.shop.models.vo.WalletSoftPurchaseVO"/></c>\n\t\t<meta>\n\t\t\t<m n=":keep"/>\n\t\t\t<m n="name"><e>"Wallet - Soft Purchases"</e></m>\n\t\t</meta>\n\t</walletSoftPurchases>\n\t<walletOfferableBundles public="1">\n\t\t<c path="Array"><c path="agario.module.shop.models.vo.WalletOfferableBundlesVO"/></c>\n\t\t<meta>\n\t\t\t<m n=":keep"/>\n\t\t\t<m n="name"><e>"Wallet - Offerable Bundles"</e></m>\n\t\t</meta>\n\t</walletOfferableBundles>\n\t<walletProductBundles public="1">\n\t\t<c path="Array"><c path="agario.module.shop.models.vo.WalletProductBundleVO"/></c>\n\t\t<meta>\n\t\t\t<m n=":keep"/>\n\t\t\t<m n="name"><e>"Wallet - Product Bundles"</e></m>\n\t\t</meta>\n\t</walletProductBundles>\n\t<walletProducts public="1">\n\t\t<c path="Array"><c path="agario.module.shop.models.vo.WalletProductVO"/></c>\n\t\t<meta>\n\t\t\t<m n=":keep"/>\n\t\t\t<m n="name"><e>"Wallet - Products"</e></m>\n\t\t</meta>\n\t</walletProducts>\n\t<walletTimeVariablePrices public="1">\n\t\t<c path="Array"><c path="agario.module.shop.models.vo.WalletTimeVariablePricesVO"/></c>\n\t\t<meta>\n\t\t\t<m n=":keep"/>\n\t\t\t<m n="name"><e>"Wallet - Time-Variable Prices"</e></m>\n\t\t</meta>\n\t</walletTimeVariablePrices>\n\t<externalSocialStories public="1">\n\t\t<c path="Array"><c path="agario.module.shop.models.vo.SocialStoryVO"/></c>\n\t\t<meta>\n\t\t\t<m n=":keep"/>\n\t\t\t<m n="name"><e>"External - Social Stories"</e></m>\n\t\t</meta>\n\t</externalSocialStories>\n\t<gamePlayBoosts public="1">\n\t\t<c path="Array"><c path="agario.module.shop.models.vo.GamePlayBoostVO"/></c>\n\t\t<meta>\n\t\t\t<m n=":keep"/>\n\t\t\t<m n="name"><e>"Gameplay - Boosts"</e></m>\n\t\t</meta>\n\t</gamePlayBoosts>\n\t<gamePlaySkins public="1">\n\t\t<c path="Array"><c path="agario.module.shop.models.vo.GamePlaySkinVO"/></c>\n\t\t<meta>\n\t\t\t<m n=":keep"/>\n\t\t\t<m n="name"><e>"Gameplay - Equippable Skins"</e></m>\n\t\t</meta>\n\t</gamePlaySkins>\n\t<freeSkins public="1">\n\t\t<c path="Array"><c path="agario.module.shop.models.vo.FreeSkinVO"/></c>\n\t\t<meta>\n\t\t\t<m n=":keep"/>\n\t\t\t<m n="name"><e>"Gameplay - Free Skins"</e></m>\n\t\t</meta>\n\t</freeSkins>\n\t<xpList public="1">\n\t\t<c path="Array"><c path="agario.module.shop.models.vo.XPItemVO"/></c>\n\t\t<meta>\n\t\t\t<m n=":keep"/>\n\t\t\t<m n="name"><e>"Gameplay - XP to Level"</e></m>\n\t\t</meta>\n\t</xpList>\n\t<giftingFakeUser public="1">\n\t\t<c path="Array"><c path="agario.module.shop.models.vo.UserSettingVO"/></c>\n\t\t<meta>\n\t\t\t<m n=":keep"/>\n\t\t\t<m n="name"><e>"Gifting - Fake User"</e></m>\n\t\t</meta>\n\t</giftingFakeUser>\n\t<new public="1" set="method" line="128">\n\t\t<f a="?obj">\n\t\t\t<d/>\n\t\t\t<x path="Void"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</new>\n\t<meta>\n\t\t<m n=":directlyUsed"/>\n\t\t<m n=":keep"/>\n\t</meta>\n</class>';
    bF.XP_BOOST = "xp_boost";
    bF.MASS_BOOST = "mass_boost";
    ao.NONE = "none";
    ao.COIN = "coin";
    ao.DNA = "dna";
    iL.NONE = "none";
    iL.CURRENCY = "currency";
    iL.BOOST = "boost";
    iL.SKIN = "skin";
    iL.RUSHMODE = "rush_boost";
    iL.QUEST = "quest";
    iL.SKIN_PIECE = "skin_piece";
    iL.POTION = "potion";
    iL.POTION_SKIP_BREW_TOKEN = "PotionSkipBrewToken";
    iL.TROPHY = "trophy";
    ap.INAPP = "INAPP";
    ap.SOFT = "SOFT";
    ap.REWARD = "REWARD";
    ap.WALLET = "WALLET";
    ap.VETERAN = "VETERAN";
    iy.NONE = "none";
    iy.WALLET_SOFT_PURCHASES = "Wallet - Soft Purchases";
    iy.WALLET_OFFERABLE_BUNDLES = "Wallet - Offerable Bundles";
    iy.GAMEPLAY_XP_TO_LEVEL = "Gameplay - XP to Level";
    km.COINS = "coins";
    km.GENERIC = "generic";
    km.SKIN = "skin";
    km.PROMO = "promo";
    km.DNA = "dna";
    pt.__rtti = '<class path="agario.module.shop.models.vo.AchievementVO" params="">\n\t<extends path="oaktree.core.VO"/>\n\t<playGamesId public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</playGamesId>\n\t<goal public="1">\n\t\t<x path="Int"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</goal>\n\t<conversion public="1">\n\t\t<x path="Int"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</conversion>\n\t<type public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</type>\n\t<new public="1" set="method" line="16">\n\t\t<f a="?obj">\n\t\t\t<d/>\n\t\t\t<x path="Void"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</new>\n\t<meta><m n=":keep"/></meta>\n</class>';
    lb.__rtti = '<class path="agario.module.shop.models.vo.BonusRewardVO" params="">\n\t<extends path="oaktree.core.VO"/>\n\t<bonusId public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</bonusId>\n\t<bonusQty public="1" line="8">\n\t\t<x path="Int"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</bonusQty>\n\t<bonusProductId public="1">\n\t\t<x path="Int"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</bonusProductId>\n\t<bundleId public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</bundleId>\n\t<productUpdateOrigin public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</productUpdateOrigin>\n\t<new set="method" line="14">\n\t\t<f a="?obj">\n\t\t\t<d/>\n\t\t\t<x path="Void"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</new>\n\t<meta><m n=":keep"/></meta>\n</class>';
    cI.__rtti = '<class path="agario.module.shop.models.vo.ShopItemVO" params="">\n\t<extends path="oaktree.core.VO"/>\n\t<purchaseId public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</purchaseId>\n\t<price public="1">\n\t\t<x path="Float"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</price>\n\t<purchaseType public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</purchaseType>\n\t<type public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</type>\n\t<isReward public="1" line="15">\n\t\t<x path="Bool"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</isReward>\n\t<purchaseInfo public="1">\n\t\t<d/>\n\t\t<meta><m n=":keep"/></meta>\n\t</purchaseInfo>\n\t<owned public="1" get="accessor" set="accessor" line="20">\n\t\t<x path="Bool"/>\n\t\t<meta>\n\t\t\t<m n=":keep"/>\n\t\t\t<m n=":isVar"/>\n\t\t</meta>\n\t</owned>\n\t<get_owned set="method" line="21">\n\t\t<f a=""><x path="Bool"/></f>\n\t\t<meta><m n=":keep"/></meta>\n\t</get_owned>\n\t<set_owned set="method" line="22">\n\t\t<f a="value">\n\t\t\t<x path="Bool"/>\n\t\t\t<x path="Bool"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</set_owned>\n\t<inUse public="1" get="accessor" set="accessor" line="24">\n\t\t<x path="Bool"/>\n\t\t<meta>\n\t\t\t<m n=":keep"/>\n\t\t\t<m n=":isVar"/>\n\t\t</meta>\n\t</inUse>\n\t<get_inUse set="method" line="25">\n\t\t<f a=""><x path="Bool"/></f>\n\t\t<meta><m n=":keep"/></meta>\n\t</get_inUse>\n\t<set_inUse set="method" line="26">\n\t\t<f a="value">\n\t\t\t<x path="Bool"/>\n\t\t\t<x path="Bool"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</set_inUse>\n\t<name public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</name>\n\t<description public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</description>\n\t<new public="1" set="method" line="33">\n\t\t<f a="?obj">\n\t\t\t<d/>\n\t\t\t<x path="Void"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</new>\n\t<meta>\n\t\t<m n=":directlyUsed"/>\n\t\t<m n=":keep"/>\n\t</meta>\n</class>';
    fK.__rtti = '<class path="agario.module.shop.models.vo.CurrencyItemVO" params="">\n\t<extends path="agario.module.shop.models.vo.ShopItemVO"/>\n\t<preAmount public="1">\n\t\t<x path="Int"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</preAmount>\n\t<finalAmount public="1">\n\t\t<x path="Int"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</finalAmount>\n\t<banner public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</banner>\n\t<visibility public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</visibility>\n\t<orderInShop public="1">\n\t\t<x path="Int"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</orderInShop>\n\t<currency_code public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</currency_code>\n\t<percentage public="1">\n\t\t<x path="Int"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</percentage>\n\t<new public="1" set="method" line="19">\n\t\t<f a="?obj">\n\t\t\t<d/>\n\t\t\t<x path="Void"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</new>\n\t<meta>\n\t\t<m n=":directlyUsed"/>\n\t\t<m n=":keep"/>\n\t</meta>\n</class>';
    fd.__rtti = '<class path="agario.module.shop.models.vo.ExchangeRateVO" params="">\n\t<extends path="oaktree.core.VO"/>\n\t<currency_offset public="1">\n\t\t<x path="Int"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</currency_offset>\n\t<usd_exchange public="1">\n\t\t<x path="Float"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</usd_exchange>\n\t<usd_exchange_inverse public="1">\n\t\t<x path="Float"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</usd_exchange_inverse>\n\t<user_currency public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</user_currency>\n\t<new public="1" set="method" line="14">\n\t\t<f a="obj">\n\t\t\t<d/>\n\t\t\t<x path="Void"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</new>\n\t<meta>\n\t\t<m n=":directlyUsed"/>\n\t\t<m n=":keep"/>\n\t</meta>\n</class>';
    li.__rtti = '<class path="agario.module.shop.models.vo.GamePlayBoostVO" params="">\n\t<extends path="oaktree.core.VO"/>\n\t<productId public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</productId>\n\t<type public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</type>\n\t<multiplier public="1">\n\t\t<x path="Int"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</multiplier>\n\t<durationMins public="1">\n\t\t<x path="Int"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</durationMins>\n\t<new public="1" set="method" line="15">\n\t\t<f a="?obj">\n\t\t\t<d/>\n\t\t\t<x path="Void"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</new>\n\t<meta><m n=":keep"/></meta>\n</class>';
    cQ.__rtti = '<class path="agario.module.shop.models.vo.GamePlaySkinVO" params="">\n\t<extends path="oaktree.core.VO"/>\n\t<gameplayId public="1">\n\t\t<x path="Int"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</gameplayId>\n\t<image public="1">\n\t\t<c path="agario.module.shop.models.vo.ImageSourceVO"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</image>\n\t<shopImage public="1" get="accessor" set="accessor">\n\t\t<c path="String"/>\n\t\t<meta>\n\t\t\t<m n=":keep"/>\n\t\t\t<m n=":isVar"/>\n\t\t</meta>\n\t</shopImage>\n\t<get_shopImage set="method" line="17">\n\t\t<f a=""><c path="String"/></f>\n\t\t<meta><m n=":keep"/></meta>\n\t</get_shopImage>\n\t<set_shopImage set="method" line="22">\n\t\t<f a="value">\n\t\t\t<c path="String"/>\n\t\t\t<c path="String"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</set_shopImage>\n\t<gamePlayImage public="1" get="accessor" set="accessor">\n\t\t<c path="String"/>\n\t\t<meta>\n\t\t\t<m n=":keep"/>\n\t\t\t<m n=":isVar"/>\n\t\t</meta>\n\t</gamePlayImage>\n\t<get_gamePlayImage set="method" line="25">\n\t\t<f a=""><c path="String"/></f>\n\t\t<meta><m n=":keep"/></meta>\n\t</get_gamePlayImage>\n\t<set_gamePlayImage set="method" line="31">\n\t\t<f a="value">\n\t\t\t<c path="String"/>\n\t\t\t<c path="String"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</set_gamePlayImage>\n\t<cellColor public="1" get="accessor" set="accessor">\n\t\t<c path="String"/>\n\t\t<meta>\n\t\t\t<m n=":keep"/>\n\t\t\t<m n=":isVar"/>\n\t\t</meta>\n\t</cellColor>\n\t<get_cellColor set="method" line="34">\n\t\t<f a=""><c path="String"/></f>\n\t\t<meta><m n=":keep"/></meta>\n\t</get_cellColor>\n\t<set_cellColor set="method" line="35">\n\t\t<f a="value">\n\t\t\t<c path="String"/>\n\t\t\t<c path="String"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</set_cellColor>\n\t<productId public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</productId>\n\t<skinName public="1" get="accessor" set="null">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</skinName>\n\t<get_skinName set="method" line="43">\n\t\t<f a=""><c path="String"/></f>\n\t\t<meta><m n=":keep"/></meta>\n\t</get_skinName>\n\t<new public="1" set="method" line="55">\n\t\t<f a="?obj">\n\t\t\t<d/>\n\t\t\t<x path="Void"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</new>\n\t<meta>\n\t\t<m n=":directlyUsed"/>\n\t\t<m n=":keep"/>\n\t</meta>\n</class>';
    bV.__rtti = '<class path="agario.module.shop.models.vo.FreeSkinVO" params="" module="agario.module.shop.models.vo.GamePlaySkinVO">\n\t<extends path="oaktree.core.VO"/>\n\t<id public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</id>\n\t<image public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</image>\n\t<showName public="1" line="70">\n\t\t<x path="Bool"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</showName>\n\t<gamePlayImage public="1" get="accessor" set="null">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</gamePlayImage>\n\t<get_gamePlayImage set="method" line="73">\n\t\t<f a=""><c path="String"/></f>\n\t\t<meta><m n=":keep"/></meta>\n\t</get_gamePlayImage>\n\t<new public="1" set="method" line="65"><f a="?obj">\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n\t<meta><m n=":keep"/></meta>\n</class>';
    au.__rtti = '<class path="agario.module.shop.models.vo.GiftingFakeUser" params="">\n\t<extends path="oaktree.core.VO"/>\n\t<key public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</key>\n\t<value public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</value>\n\t<new public="1" set="method" line="14">\n\t\t<f a="?obj">\n\t\t\t<d/>\n\t\t\t<x path="Void"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</new>\n\t<meta><m n=":keep"/></meta>\n</class>';
    dF.__rtti = '<class path="agario.module.shop.models.vo.ImageSourceVO" params="">\n\t<extends path="oaktree.core.VO"/>\n\t<id public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</id>\n\t<spriteFilename public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</spriteFilename>\n\t<plistFilename public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</plistFilename>\n\t<frameName public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</frameName>\n\t<source public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</source>\n\t<sourceHigh public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</sourceHigh>\n\t<textureName public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</textureName>\n\t<isTextureAtlas public="1" set="method" line="46">\n\t\t<f a=""><x path="Bool"/></f>\n\t\t<meta><m n=":keep"/></meta>\n\t</isTextureAtlas>\n\t<new public="1" set="method" line="22">\n\t\t<f a="?obj">\n\t\t\t<d/>\n\t\t\t<x path="Void"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</new>\n\t<meta><m n=":keep"/></meta>\n</class>';
    k1.__rtti = '<class path="agario.module.shop.models.vo.PlayerInfoVO" params="">\n\t<extends path="oaktree.core.VO"/>\n\t<currentSkin public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</currentSkin>\n\t<wallet public="1">\n\t\t<c path="Array"><c path="agario.module.shop.models.vo.WalletItemVO"/></c>\n\t\t<meta><m n=":keep"/></meta>\n\t</wallet>\n\t<coinAmount public="1">\n\t\t<x path="Int"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</coinAmount>\n\t<getWalletItemById public="1" set="method" line="19">\n\t\t<f a="id">\n\t\t\t<c path="String"/>\n\t\t\t<c path="agario.module.shop.models.vo.WalletItemVO"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</getWalletItemById>\n\t<new public="1" set="method" line="14">\n\t\t<f a="?obj">\n\t\t\t<d/>\n\t\t\t<x path="Void"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</new>\n\t<meta><m n=":keep"/></meta>\n</class>';
    cn.__rtti = '<class path="agario.module.shop.models.vo.PriceCurrencyVO" params="">\n\t<extends path="oaktree.core.VO"/>\n\t<id public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</id>\n\t<new public="1" set="method" line="14">\n\t\t<f a="obj">\n\t\t\t<d/>\n\t\t\t<x path="Void"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</new>\n\t<meta><m n=":keep"/></meta>\n</class>';
    aq.__rtti = '<class path="agario.module.shop.models.vo.PriceTierVO" params="">\n\t<extends path="oaktree.core.VO"/>\n\t<tier public="1">\n\t\t<x path="Int"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</tier>\n\t<currencies public="1">\n\t\t<x path="Map">\n\t\t\t<c path="String"/>\n\t\t\t<x path="Float"/>\n\t\t</x>\n\t\t<meta><m n=":keep"/></meta>\n\t</currencies>\n\t<getPriceByCurrency public="1" set="method" line="27">\n\t\t<f a="currency">\n\t\t\t<c path="String"/>\n\t\t\t<x path="Float"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</getPriceByCurrency>\n\t<new public="1" set="method" line="15">\n\t\t<f a="obj">\n\t\t\t<d/>\n\t\t\t<x path="Void"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</new>\n\t<meta><m n=":keep"/></meta>\n</class>';
    bc.__rtti = '<class path="agario.module.shop.models.vo.ServerInfoVO" params="">\n\t<extends path="oaktree.core.VO"/>\n\t<host public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</host>\n\t<tcpPort public="1">\n\t\t<x path="Int"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</tcpPort>\n\t<udpPort public="1">\n\t\t<x path="Int"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</udpPort>\n\t<new public="1" set="method" line="15">\n\t\t<f a="obj">\n\t\t\t<d/>\n\t\t\t<x path="Void"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</new>\n\t<meta>\n\t\t<m n=":directlyUsed"/>\n\t\t<m n=":keep"/>\n\t</meta>\n</class>';
    bx.__rtti = '<class path="agario.module.shop.models.vo.ShopBoostCategoryVO" params="">\n\t<extends path="oaktree.core.VO"/>\n\t<shopId public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</shopId>\n\t<position public="1">\n\t\t<x path="Int"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</position>\n\t<title public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</title>\n\t<description public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</description>\n\t<image public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</image>\n\t<spritesheet public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</spritesheet>\n\t<new public="1" set="method" line="17">\n\t\t<f a="?obj">\n\t\t\t<d/>\n\t\t\t<x path="Void"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</new>\n\t<meta>\n\t\t<m n=":directlyUsed"/>\n\t\t<m n=":keep"/>\n\t</meta>\n</class>';
    bt.__rtti = '<class path="agario.module.shop.models.vo.ShopBoostItemVO" params="">\n\t<extends path="agario.module.shop.models.vo.ShopItemVO"/>\n\t<categoryShopId public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</categoryShopId>\n\t<title public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</title>\n\t<bestDealSticker public="1">\n\t\t<x path="Bool"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</bestDealSticker>\n\t<position public="1">\n\t\t<x path="Int"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</position>\n\t<categoryPosition public="1">\n\t\t<x path="Int"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</categoryPosition>\n\t<productIdToQuantify public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</productIdToQuantify>\n\t<category public="1">\n\t\t<c path="agario.module.shop.models.vo.ShopBoostCategoryVO"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</category>\n\t<gameplayInfo public="1">\n\t\t<c path="agario.module.shop.models.vo.GamePlayBoostVO"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</gameplayInfo>\n\t<new public="1" set="method" line="21">\n\t\t<f a="?obj">\n\t\t\t<d/>\n\t\t\t<x path="Void"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</new>\n\t<meta>\n\t\t<m n=":directlyUsed"/>\n\t\t<m n=":keep"/>\n\t</meta>\n</class>';
    gM.__rtti = '<class path="agario.module.shop.models.vo.ShopSkinItemVO" params="">\n\t<extends path="agario.module.shop.models.vo.ShopItemVO"/>\n\t<referenceSheet public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</referenceSheet>\n\t<referenceKey public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</referenceKey>\n\t<referenceValue public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</referenceValue>\n\t<productIdToQuantify public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</productIdToQuantify>\n\t<skinType public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</skinType>\n\t<image public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</image>\n\t<visibility public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</visibility>\n\t<orderInShop public="1" line="21">\n\t\t<x path="Int"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</orderInShop>\n\t<orderInOwnedTab public="1" line="22">\n\t\t<x path="Int"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</orderInOwnedTab>\n\t<title public="1" get="accessor" set="accessor">\n\t\t<c path="String"/>\n\t\t<meta>\n\t\t\t<m n=":keep"/>\n\t\t\t<m n=":isVar"/>\n\t\t</meta>\n\t</title>\n\t<get_title set="method" line="25">\n\t\t<f a=""><c path="String"/></f>\n\t\t<meta><m n=":keep"/></meta>\n\t</get_title>\n\t<set_title set="method" line="28">\n\t\t<f a="value">\n\t\t\t<c path="String"/>\n\t\t\t<c path="String"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</set_title>\n\t<gamePlayInfo public="1">\n\t\t<c path="agario.module.shop.models.vo.GamePlaySkinVO"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</gamePlayInfo>\n\t<availableAtLevel public="1" line="31">\n\t\t<x path="Int"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</availableAtLevel>\n\t<isOfferable public="1" set="method" line="51">\n\t\t<f a=""><x path="Bool"/></f>\n\t\t<meta><m n=":keep"/></meta>\n\t</isOfferable>\n\t<new public="1" set="method" line="34">\n\t\t<f a="obj">\n\t\t\t<d/>\n\t\t\t<x path="Void"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</new>\n\t<meta>\n\t\t<m n=":directlyUsed"/>\n\t\t<m n=":keep"/>\n\t</meta>\n</class>';
    pY.__rtti = '<class path="agario.module.shop.models.vo.ShopSkinTabVO" params="">\n\t<extends path="agario.module.shop.models.vo.ShopItemVO"/>\n\t<tabName public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</tabName>\n\t<tabDescription public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</tabDescription>\n\t<tabOrder public="1">\n\t\t<x path="Int"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</tabOrder>\n\t<skinType public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</skinType>\n\t<skins public="1">\n\t\t<c path="Array"><c path="agario.module.shop.models.vo.ShopSkinItemVO"/></c>\n\t\t<meta><m n=":keep"/></meta>\n\t</skins>\n\t<new public="1" set="method" line="19">\n\t\t<f a="obj">\n\t\t\t<d/>\n\t\t\t<x path="Void"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</new>\n\t<meta><m n=":keep"/></meta>\n</class>';
    hi.__rtti = '<class path="agario.module.shop.models.vo.SocialStoryVO" params="">\n\t<extends path="oaktree.core.VO"/>\n\t<id public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</id>\n\t<icon public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</icon>\n\t<iconURL public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</iconURL>\n\t<titleTag public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</titleTag>\n\t<subtitleTag public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</subtitleTag>\n\t<descriptionTag public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</descriptionTag>\n\t<twitterTag public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</twitterTag>\n\t<googleTag public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</googleTag>\n\t<new public="1" set="method" line="20">\n\t\t<f a="obj">\n\t\t\t<d/>\n\t\t\t<x path="Void"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</new>\n\t<meta><m n=":keep"/></meta>\n</class>';
    md.__rtti = '<class path="agario.module.shop.models.vo.UserInfoVO" params="">\n\t<extends path="oaktree.core.VO"/>\n\t<id public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</id>\n\t<displayName public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</displayName>\n\t<xp public="1">\n\t\t<x path="Int"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</xp>\n\t<level public="1">\n\t\t<x path="Int"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</level>\n\t<hasLoggedIntoMobile public="1">\n\t\t<x path="Bool"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</hasLoggedIntoMobile>\n\t<isPayingUser public="1">\n\t\t<x path="Bool"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</isPayingUser>\n\t<isNewUser public="1">\n\t\t<x path="Bool"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</isNewUser>\n\t<xpNeeded public="1">\n\t\t<x path="Int"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</xpNeeded>\n\t<userTimedEvents public="1">\n\t\t<c path="Array"><c path="agario.module.shop.models.vo.TimedEventVO"/></c>\n\t\t<meta><m n=":keep"/></meta>\n\t</userTimedEvents>\n\t<userGifts public="1">\n\t\t<c path="agario.proto.User_gifts"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</userGifts>\n\t<quest public="1">\n\t\t<c path="agario.proto.User_quest"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</quest>\n\t<setTimedEvent public="1" set="method" line="29">\n\t\t<f a="te">\n\t\t\t<c path="agario.module.shop.models.vo.TimedEventVO"/>\n\t\t\t<x path="Void"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</setTimedEvent>\n\t<getTimedEvent public="1" set="method" line="39">\n\t\t<f a="eventId">\n\t\t\t<c path="String"/>\n\t\t\t<c path="agario.module.shop.models.vo.TimedEventVO"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</getTimedEvent>\n\t<new public="1" set="method" line="24">\n\t\t<f a="?obj">\n\t\t\t<d/>\n\t\t\t<x path="Void"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</new>\n\t<meta>\n\t\t<m n=":directlyUsed"/>\n\t\t<m n=":keep"/>\n\t</meta>\n</class>';
    po.__rtti = '<class path="agario.module.shop.models.vo.UserSettingVO" params="">\n\t<extends path="oaktree.core.VO"/>\n\t<key public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</key>\n\t<value public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</value>\n\t<new public="1" set="method" line="13">\n\t\t<f a="obj">\n\t\t\t<d/>\n\t\t\t<x path="Void"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</new>\n\t<meta><m n=":keep"/></meta>\n</class>';
    pq.__rtti = '<class path="agario.module.shop.models.vo.UserStatsVO" params="">\n\t<extends path="oaktree.core.VO"/>\n\t<gamesPlayed public="1">\n\t\t<x path="Int"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</gamesPlayed>\n\t<massConsumed public="1">\n\t\t<x path="Int"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</massConsumed>\n\t<averageScore public="1">\n\t\t<x path="Int"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</averageScore>\n\t<highestMass public="1">\n\t\t<x path="Int"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</highestMass>\n\t<longestTimeAlive public="1">\n\t\t<x path="Int"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</longestTimeAlive>\n\t<mostCellsEaten public="1">\n\t\t<x path="Int"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</mostCellsEaten>\n\t<new public="1" set="method" line="19">\n\t\t<f a="?obj">\n\t\t\t<d/>\n\t\t\t<x path="Void"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</new>\n\t<meta>\n\t\t<m n=":directlyUsed"/>\n\t\t<m n=":keep"/>\n\t</meta>\n</class>';
    c5.__rtti = '<class path="agario.module.shop.models.vo.VisualBundleVO" params="">\n\t<extends path="oaktree.core.VO"/>\n\t<bundleId public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</bundleId>\n\t<description public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</description>\n\t<visualSource public="1">\n\t\t<c path="agario.module.shop.models.vo.ImageSourceVO"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</visualSource>\n\t<imageType public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</imageType>\n\t<popupType public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</popupType>\n\t<getBitmap public="1" set="method" line="22">\n\t\t<f a=""><c path="promhx.Promise"><c path="openfl.display.Bitmap"/></c></f>\n\t\t<meta><m n=":keep"/></meta>\n\t</getBitmap>\n\t<new public="1" set="method" line="17">\n\t\t<f a="?obj">\n\t\t\t<d/>\n\t\t\t<x path="Void"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</new>\n\t<meta><m n=":keep"/></meta>\n</class>';
    nF.__rtti = '<class path="agario.module.shop.models.vo.VisualProductVO" params="">\n\t<extends path="oaktree.core.VO"/>\n\t<productId public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</productId>\n\t<description public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</description>\n\t<visualSource public="1">\n\t\t<c path="agario.module.shop.models.vo.ImageSourceVO"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</visualSource>\n\t<imageType public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</imageType>\n\t<getBitmap public="1" set="method" line="21">\n\t\t<f a=""><c path="promhx.Promise"><c path="openfl.display.Bitmap"/></c></f>\n\t\t<meta><m n=":keep"/></meta>\n\t</getBitmap>\n\t<new public="1" set="method" line="16">\n\t\t<f a="?obj">\n\t\t\t<d/>\n\t\t\t<x path="Void"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</new>\n\t<meta><m n=":keep"/></meta>\n</class>';
    ax.__rtti = '<class path="agario.module.shop.models.vo.VisualTabsAssociationVO" params="">\n\t<extends path="oaktree.core.VO"/>\n\t<skinType public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</skinType>\n\t<tabDescription public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</tabDescription>\n\t<new public="1" set="method" line="14">\n\t\t<f a="?obj">\n\t\t\t<d/>\n\t\t\t<x path="Void"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</new>\n\t<meta><m n=":keep"/></meta>\n</class>';
    z.__rtti = '<class path="agario.module.shop.models.vo.WalletPurchaseVO" params="">\n\t<extends path="oaktree.core.VO"/>\n\t<bundleId public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</bundleId>\n\t<id public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</id>\n\t<type public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</type>\n\t<new public="1" set="method" line="10">\n\t\t<f a="obj">\n\t\t\t<d/>\n\t\t\t<x path="Void"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</new>\n\t<meta><m n=":keep"/></meta>\n</class>';
    mO.__rtti = '<class path="agario.module.shop.models.vo.WalletInappPurchaseVO" params="">\n\t<extends path="agario.module.shop.models.vo.WalletPurchaseVO"/>\n\t<priceTier public="1">\n\t\t<x path="Int"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</priceTier>\n\t<localizedName public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</localizedName>\n\t<localizedDescription public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</localizedDescription>\n\t<new public="1" set="method" line="16">\n\t\t<f a="obj">\n\t\t\t<d/>\n\t\t\t<x path="Void"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</new>\n\t<meta><m n=":keep"/></meta>\n</class>';
    hH.__rtti = '<class path="agario.module.shop.models.vo.WalletItemVO" params="">\n\t<extends path="oaktree.core.VO"/>\n\t<productId public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</productId>\n\t<_balance>\n\t\t<x path="Int"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</_balance>\n\t<balance public="1" get="accessor" set="accessor">\n\t\t<x path="Int"/>\n\t\t<meta>\n\t\t\t<m n=":keep"/>\n\t\t\t<m n=":isVar"/>\n\t\t</meta>\n\t</balance>\n\t<get_balance set="method" line="16">\n\t\t<f a=""><x path="Int"/></f>\n\t\t<meta><m n=":keep"/></meta>\n\t</get_balance>\n\t<set_balance set="method" line="17">\n\t\t<f a="value">\n\t\t\t<x path="Int"/>\n\t\t\t<x path="Int"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</set_balance>\n\t<inUse public="1" line="26">\n\t\t<x path="Bool"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</inUse>\n\t<new public="1" set="method" line="28">\n\t\t<f a="obj">\n\t\t\t<d/>\n\t\t\t<x path="Void"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</new>\n\t<meta>\n\t\t<m n=":directlyUsed"/>\n\t\t<m n=":keep"/>\n\t</meta>\n</class>';
    pR.__rtti = '<class path="agario.module.shop.models.vo.WalletOfferableBundlesVO" params="">\n\t<extends path="oaktree.core.VO"/>\n\t<bundleId public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</bundleId>\n\t<availableFrom public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</availableFrom>\n\t<availableTo public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</availableTo>\n\t<new public="1" set="method" line="15">\n\t\t<f a="?obj">\n\t\t\t<d/>\n\t\t\t<x path="Void"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</new>\n\t<meta><m n=":keep"/></meta>\n</class>';
    kN.__rtti = '<class path="agario.module.shop.models.vo.WalletProductBundleVO" params="">\n\t<extends path="oaktree.core.VO"/>\n\t<id public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</id>\n\t<productId public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</productId>\n\t<quantity public="1">\n\t\t<x path="Int"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</quantity>\n\t<visual public="1">\n\t\t<c path="agario.module.shop.models.vo.VisualBundleVO"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</visual>\n\t<new public="1" set="method" line="16">\n\t\t<f a="obj">\n\t\t\t<d/>\n\t\t\t<x path="Void"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</new>\n\t<meta><m n=":keep"/></meta>\n</class>';
    hY.__rtti = '<class path="agario.module.shop.models.vo.WalletProductVO" params="">\n\t<extends path="oaktree.core.VO"/>\n\t<id public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</id>\n\t<type public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</type>\n\t<consumable public="1">\n\t\t<x path="Bool"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</consumable>\n\t<visual public="1">\n\t\t<c path="agario.module.shop.models.vo.VisualProductVO"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</visual>\n\t<new public="1" set="method" line="17">\n\t\t<f a="obj">\n\t\t\t<d/>\n\t\t\t<x path="Void"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</new>\n\t<meta><m n=":keep"/></meta>\n</class>';
    iF.__rtti = '<class path="agario.module.shop.models.vo.WalletSoftPurchaseVO" params="">\n\t<extends path="agario.module.shop.models.vo.WalletPurchaseVO"/>\n\t<currencyAmount public="1">\n\t\t<x path="Int"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</currencyAmount>\n\t<currencyProductId public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</currencyProductId>\n\t<new public="1" set="method" line="12">\n\t\t<f a="obj">\n\t\t\t<d/>\n\t\t\t<x path="Void"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</new>\n\t<meta><m n=":keep"/></meta>\n</class>';
    by.__rtti = '<class path="agario.module.shop.models.vo.WalletTimeVariablePricesVO" params="">\n\t<extends path="oaktree.core.VO"/>\n\t<purchaseIdForTimedEvent public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</purchaseIdForTimedEvent>\n\t<timedEventId public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</timedEventId>\n\t<everyXMins public="1">\n\t\t<x path="Int"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</everyXMins>\n\t<decreaseCurrencyAmountBy public="1">\n\t\t<x path="Int"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</decreaseCurrencyAmountBy>\n\t<new public="1" set="method" line="17">\n\t\t<f a="obj">\n\t\t\t<d/>\n\t\t\t<x path="Void"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</new>\n\t<meta><m n=":keep"/></meta>\n</class>';
    pP.__rtti = '<class path="agario.module.shop.models.vo.XPItemVO" params="">\n\t<extends path="oaktree.core.VO"/>\n\t<level public="1">\n\t\t<x path="Int"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</level>\n\t<xpToNextLevel public="1">\n\t\t<x path="Int"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</xpToNextLevel>\n\t<levelUpBonusId public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</levelUpBonusId>\n\t<new public="1" set="method" line="15">\n\t\t<f a="obj">\n\t\t\t<d/>\n\t\t\t<x path="Void"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</new>\n\t<meta><m n=":keep"/></meta>\n</class>';
    om.__rtti = '<class path="agario.module.shop.models.vo.XsollaShopItemsVO" params="">\n\t<extends path="oaktree.core.VO"/>\n\t<items public="1">\n\t\t<c path="Array"><c path="agario.module.shop.models.vo.XsollaShopItemVO"/></c>\n\t\t<meta><m n=":keep"/></meta>\n\t</items>\n\t<currency_code public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</currency_code>\n\t<new public="1" set="method" line="10">\n\t\t<f a="obj">\n\t\t\t<d/>\n\t\t\t<x path="Void"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</new>\n\t<meta>\n\t\t<m n=":directlyUsed"/>\n\t\t<m n=":keep"/>\n\t</meta>\n</class>';
    b9.__rtti = '<class path="agario.module.shop.models.vo.XsollaShopItemVO" params="" module="agario.module.shop.models.vo.XsollaShopItemsVO">\n\t<extends path="oaktree.core.VO"/>\n\t<sku public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</sku>\n\t<description public="1">\n\t\t<c path="String"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</description>\n\t<price public="1">\n\t\t<x path="Float"/>\n\t\t<meta><m n=":keep"/></meta>\n\t</price>\n\t<new public="1" set="method" line="23">\n\t\t<f a="obj">\n\t\t\t<d/>\n\t\t\t<x path="Void"/>\n\t\t</f>\n\t\t<meta><m n=":keep"/></meta>\n\t</new>\n\t<meta><m n=":keep"/></meta>\n</class>';
    f7.MULTIPLIER_LABEL_TEXTGROUP = "currency_shop_item_multiplayer_group";
    me.ITEM_WIDTH = 130;
    me.ITEM_HEIGHT = 130;
    me.SPRITE_SPACING = 24;
    me.SOCIAL_STORY_SKIN_PURCHASE = "ss_skinpurchase";
    je.SKIN_TYPE_MISTERY = "MYSTERY";
    je.SKIN_TYPE_VETERAN = "VETERAN";
    je.SKIN_TYPE_OWNED = "OWNED";
    a0.LEVELS_PER_SKIN_REWARD = 5;
    a0.FB_LEVEL_UP_STORY = "ss_levelup";
    a0.FB_SKIN_UNLOCK_STORY = "ss_skinunlock";
    e7.success = 1;
    e7.potion_not_collected = 2;
    e7.potion_being_brewed = 3;
    hj.normal_cell = 1;
    hj.virus = 2;
    hj.food = 3;
    eN.ios = 1;
    eN.android = 2;
    eN.web_facebook = 3;
    eN.web_miniclip = 4;
    eN.web_agario = 5;
    nY.incompatible_client = 1;
    nY.not_authorized = 2;
    nY.invalid_login = 3;
    nY.login_elsewhere = 4;
    nY.server_offline = 5;
    qA.rush_mode = 1;
    cq.uncompressed = 1;
    cq.compressed = 2;
    jJ.disconnected_by_inactivity = 1;
    jJ.left = 2;
    jJ.eaten = 3;
    jJ.game_ended = 4;
    jJ.server_going_offline = 5;
    jJ.arena_is_offline = 6;
    kZ.free_for_all = 1;
    kZ.rush_mode = 2;
    kZ.party = 3;
    kZ.experimental = 4;
    kZ.teams = 5;
    lN.success = 1;
    lN.try_again_later = 2;
    lN.invalid_receipt = 3;
    lN.unknown_purchase_id = 4;
    u.guest = 1;
    u.facebook = 2;
    u.googleplus = 3;
    h5.not_playing = 1;
    h5.playing = 2;
    g4.success = 1;
    g4.unknown_bundle_id = 2;
    g4.offer_not_active = 3;
    g4.preconditions_failed = 4;
    fO.success = 1;
    fO.insufficient_funds = 2;
    fO.unknown_product_id = 3;
    f2.success = 1;
    f2.potion_not_ready = 2;
    qf.new_account = 0;
    qf.xp_level_up = 1;
    qf.soft_purchase = 2;
    qf.inapp_purchase = 3;
    qf.xp_boost_activation = 4;
    qf.mass_boost_activation = 5;
    qf.hourly_bonus = 6;
    qf.reward_platform = 7;
    qf.payment_platform = 8;
    qf.retro_veteran_skin = 9;
    qf.gifting = 10;
    qf.rush_mass_boost_activation = 11;
    qf.quest_activation = 12;
    qf.quest_reward = 13;
    qf.soft_purchase_refund = 14;
    qf.potion_opened = 15;
    qf.potion_obtained = 16;
    qf.bundle_offer = 17;
    b4.currency = 1;
    b4.boost = 2;
    b4.skin = 3;
    b4.quest = 4;
    b4.rush_boost = 5;
    b4.potion = 6;
    b4.trophy = 7;
    b4.skin_piece = 8;
    b4.potion_skip_brew_token = 9;
    jg.login_request = 1;
    jg.connect_request = 2;
    eU.login_request = 10;
    eU.login_response = 11;
    eU.realm_upgrade_request = 12;
    eU.realm_upgrade_response = 13;
    eU.connect_request = 14;
    eU.connect_response = 15;
    eU.disconnect = 20;
    eU.reconnect = 21;
    eU.ping = 30;
    eU.pong = 31;
    eU.udp_handshake = 32;
    eU.configuration_change = 33;
    eU.server_going_offline = 34;
    eU.enter_game = 40;
    eU.game_joined = 41;
    eU.leave_game = 42;
    eU.enter_lobby = 43;
    eU.leave_lobby = 44;
    eU.direction_vector = 50;
    eU.player_split = 51;
    eU.player_shoot_mass = 52;
    eU.player_respawn = 53;
    eU.leaderboard = 60;
    eU.arena_state = 61;
    eU.game_over = 62;
    eU.soft_purchase_request = 70;
    eU.soft_purchase_response = 71;
    eU.apple_inapp_purchase_request = 72;
    eU.google_inapp_purchase_request = 73;
    eU.inapp_purchase_response = 74;
    eU.wallet_updates = 75;
    eU.purchase_wallet_updates = 76;
    eU.offer_bundle_request = 77;
    eU.offer_bundle_response = 78;
    eU.update_user_settings_request = 80;
    eU.update_user_settings_response = 81;
    eU.server_to_server_game_over_wrapper = 90;
    eU.claim_gifts_request = 100;
    eU.claim_gifts_response = 101;
    eU.send_gifts = 102;
    eU.consume_requests = 103;
    eU.request_gifts = 104;
    eU.activate_timed_event_request = 110;
    eU.activate_timed_event_response = 111;
    eU.activate_boost_request = 112;
    eU.activate_boost_response = 113;
    eU.activate_quest_request = 114;
    eU.activate_quest_response = 115;
    eU.user_timed_event_updates = 116;
    eU.open_potion_for_product_request = 120;
    eU.open_potion_for_product_response = 121;
    eU.brew_potion_for_slot_request = 122;
    eU.brew_potion_for_slot_response = 123;
    eU.open_potion_for_slot_request = 124;
    eU.open_potion_for_slot_response = 125;
    kx.success = 1;
    kx.insufficient_funds = 2;
    kx.unknown_purchase_id = 3;
    kx.preconditions_failed = 4;
    qR.facebook = 1;
    qR.googleplus = 2;
    nm.xp_level = 10;
    nm.product = 20;
    cv.collected = 1;
    cv.brewing = 2;
    cv.ready = 3;
    kY.slot_1 = 1;
    kY.slot_2 = 2;
    kY.slot_3 = 3;
    fV.selected_skin_id = 1;
    fV.stop_on_release = 2;
    fV.direction_on_touch = 3;
    fV.button_positions = 4;
    fV.show_mass = 5;
    fV.show_arrow = 6;
    fV.dark_background = 7;
    fV.show_level = 8;
    fV.localization_language = 9;
    fV.sounds_on_arena = 10;
    fV.sounds_on_menu = 11;
    fV.ingame_quest_progress = 12;
    fV.show_online_status_to_friends = 13;
    cV.is_string = 1;
    cV.is_int32 = 2;
    g0.GAME_TIME_KEY = "GAME_TIME_KEY";
    g0.CONFIG_TAG_PROMO_BUTTON_MIN_CYCLE_DURATION = "promoButtonMinCycleDuration";
    g0.CONFIG_TAG_CROSS_PROMO_BADGE_MIN_CYCLE_DURATION = "crossPromoBadgeMinCycleDuration";
    g0.CONFIG_TAG_PROMO_POPUP_COOLDOWN_PERIOD = "promoPopupCooldownPeriod";
    g0.CONFIG_TAG_PROMO_STARTER_PACK_TIME = "promoStarterPackTime";
    g0.CONFIG_TAG_DYNAMIC_PURCHASE_COMPLETE_THRESHOLD = "dynamicPurchaseCompleteThreshold";
    kd.configID = "-";
    fF.GOT_CURRENCY_CODE = "payment_event::got_currency_code";
    qW.HTML_GIFT_BUTTON = "giftButton";
    qW.HTML_QUESTS_BUTTON = "dailyQuestsButton";
    an.WEB_DEFAULT = "web";
    an.LOGIN_FACEBOOK = "USER_LOGGED_IN_FACEBOOK";
    an.LOGIN_MINICLIP = "USER_LOGGED_IN_MINICLIP";
    an.LOGIN_GOOGLE = "USER_LOGGED_IN_GOOGLEPLUS";
    an.IS_PAYING_USER = "PROMO_IS_PAYING_USER";
    an.IS_NONPAYING_USER = "PROMO_IS_NONPAYING_USER";
    dI.PROMO_PARAM_SKIN_SHOP_TAB_NAME = "promoParamSkinShopTabName";
    dI.PROMO_PARAM_USER_ID = "promoParamUserId";
    fJ.SYSTEM_ID_PROMOTIONS = "promotionSystem";
    fJ.SYSTEM_ID_FEATURES = "featuresSystem";
    fJ.BASE_URL = "../../../assets/configuration";
    fJ.RESOURCE_URL = fJ.BASE_URL + "/{config_id}/{resource_name}";
    k2.EVENT_PROMO_STARTER_PACK = "STARTER_PACK";
    k2.EVENT_PROMO_FINISHED_MATCH_GENERIC = "PROMO_FINISHED_MATCH";
    k2.EVENT_PROMO_FINISHED_MATCH_POS = "PROMO_FINISHED_MATCH_LEADERBOARD_POS_%@";
    k2.EVENT_PROMO_ACTIVATE_BOOST_GENERIC = "PROMO_ACTIVATE_BOOST";
    k2.EVENT_PROMO_ACTIVATE_BOOST_SPECIFIC = "PROMO_ACTIVATE_BOOST_%@";
    k2.EVENT_PROMO_SOFT_PURCHASE_GENERIC = "PROMO_SOFT_PURCHASE";
    k2.EVENT_PROMO_SOFT_PURCHASE_SPECIFIC = "PROMO_SOFT_PURCHASE_%@";
    k2.EVENT_PROMO_IN_APP_GENERIC = "PROMO_IN_APP";
    k2.EVENT_PROMO_IN_APP_SPECIFIC = "PROMO_IN_APP_%@";
    k2.EVENT_PROMO_LEVEL_UP_GENERIC = "PROMO_LEVEL_UP";
    k2.EVENT_PROMO_LEVEL_UP_SPECIFIC = "PROMO_LEVEL_UP_%@";
    k2.EVENT_PROMO_SESSION_STARTED = "PROMO_SESSION_STARTED";
    k2.EVENT_PROMO_IS_PAYING_USER = "PROMO_IS_PAYING_USER";
    k2.EVENT_PROMO_IS_NONPAYING_USER = "PROMO_IS_NONPAYING_USER";
    k2.EVENT_PROMO_USER_LOGGED_IN_NONE = "PROMO_USER_LOGGED_IN_NONE";
    k2.EVENT_PROMO_USER_LOGGED_IN_GUEST = "PROMO_USER_LOGGED_IN_GUEST";
    k2.EVENT_PROMO_USER_LOGGED_IN_FACEBOOK = "PROMO_USER_LOGGED_IN_FACEBOOK";
    k2.EVENT_PROMO_USER_LOGGED_IN_GOOGLE = "PROMO_USER_LOGGED_IN_GOOGLE";
    qm.SHOP_MAIN = "shopMain";
    qm.SHOP_CURRENCY = "shopCurrency";
    qm.SHOP_SKINS = "shopSkins";
    qm.SHOP_MASS = "shopMass";
    qm.SHOP_BOOST = "shopBoost";
    bA.IPAD_CONVERSION_RATIO = 0.732421875;
    bA.BASE_PACK_RATIO = 1.6;
    e6.MAX_WIDTH = 596;
    e6.MAX_HEIGHT = 396;
    ib.EVT_FILE_LOAD_COMPLETE = "evtFileLoadComplete";
    hf.SIZE = 32768;
    hf.BUFSIZE = 65536;
    iq.LEN_EXTRA_BITS_TBL = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, -1, -1];
    iq.LEN_BASE_VAL_TBL = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258];
    iq.DIST_EXTRA_BITS_TBL = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, -1, -1];
    iq.DIST_BASE_VAL_TBL = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577];
    iq.CODE_LENGTHS_POS = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
    iq.FIXED_HUFFMAN = null;
    im.epsilon = 0.00002;
    ot.USE_CACHE = false;
    ot.USE_ENUM_INDEX = false;
    ot.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
    ln.DEFAULT_RESOLVER = kX;
    ln.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
    ln.CODES = null;
    bv.CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
    bv.BYTES = eg.ofString(bv.CHARS);
    qS.count = 0;
    pW.i64tmp = (function(i1) {
        var q;
        var i = new aJ(0, 0);
        q = i;
        return q
    }(this));
    nx.escapes = (function(i1) {
        var i;
        var q = new io();
        if (pN.lt != null) {
            q.setReserved("lt", "<")
        } else {
            q.h.lt = "<"
        }
        if (pN.gt != null) {
            q.setReserved("gt", ">")
        } else {
            q.h.gt = ">"
        }
        if (pN.amp != null) {
            q.setReserved("amp", "&")
        } else {
            q.h.amp = "&"
        }
        if (pN.quot != null) {
            q.setReserved("quot", '"')
        } else {
            q.h.quot = '"'
        }
        if (pN.apos != null) {
            q.setReserved("apos", "'")
        } else {
            q.h.apos = "'"
        }
        i = q;
        return i
    }(this));
    qV.LEN_EXTRA_BITS_TBL = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, -1, -1];
    qV.LEN_BASE_VAL_TBL = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258];
    qV.DIST_EXTRA_BITS_TBL = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, -1, -1];
    qV.DIST_BASE_VAL_TBL = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577];
    qV.CODE_LENGTHS_POS = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
    qV.FIXED_HUFFMAN = null;
    n0.__toStr = {}.toString;
    pM.BYTES_PER_ELEMENT = 1;
    bY.cache = new qp();
    bY.libraries = new io();
    bY.onChange = new nO();
    bY.initialized = false;
    C.windowID = 0;
    p5.images = new io();
    p5.loaders = new io();
    iY.NONE = 0;
    iY.FALSE = 0;
    iY.TRUE = 1;
    iY.SOURCE_RELATIVE = 514;
    iY.CONE_INNER_ANGLE = 4097;
    iY.CONE_OUTER_ANGLE = 4098;
    iY.PITCH = 4099;
    iY.POSITION = 4100;
    iY.DIRECTION = 4101;
    iY.VELOCITY = 4102;
    iY.LOOPING = 4103;
    iY.BUFFER = 4105;
    iY.GAIN = 4106;
    iY.MIN_GAIN = 4109;
    iY.MAX_GAIN = 4110;
    iY.ORIENTATION = 4111;
    iY.SOURCE_STATE = 4112;
    iY.INITIAL = 4113;
    iY.PLAYING = 4114;
    iY.PAUSED = 4115;
    iY.STOPPED = 4116;
    iY.BUFFERS_QUEUED = 4117;
    iY.BUFFERS_PROCESSED = 4118;
    iY.REFERENCE_DISTANCE = 4128;
    iY.ROLLOFF_FACTOR = 4129;
    iY.CONE_OUTER_GAIN = 4130;
    iY.MAX_DISTANCE = 4131;
    iY.SEC_OFFSET = 4132;
    iY.SAMPLE_OFFSET = 4133;
    iY.BYTE_OFFSET = 4134;
    iY.SOURCE_TYPE = 4135;
    iY.STATIC = 4136;
    iY.STREAMING = 4137;
    iY.UNDETERMINED = 4144;
    iY.FORMAT_MONO8 = 4352;
    iY.FORMAT_MONO16 = 4353;
    iY.FORMAT_STEREO8 = 4354;
    iY.FORMAT_STEREO16 = 4355;
    iY.FREQUENCY = 8193;
    iY.BITS = 8194;
    iY.CHANNELS = 8195;
    iY.SIZE = 8196;
    iY.NO_ERROR = 0;
    iY.INVALID_NAME = 40961;
    iY.INVALID_ENUM = 40962;
    iY.INVALID_VALUE = 40963;
    iY.INVALID_OPERATION = 40964;
    iY.OUT_OF_MEMORY = 40965;
    iY.VENDOR = 45057;
    iY.VERSION = 45058;
    iY.RENDERER = 45059;
    iY.EXTENSIONS = 45060;
    iY.DOPPLER_FACTOR = 49152;
    iY.SPEED_OF_SOUND = 49155;
    iY.DOPPLER_VELOCITY = 49153;
    iY.DISTANCE_MODEL = 53248;
    iY.INVERSE_DISTANCE = 53249;
    iY.INVERSE_DISTANCE_CLAMPED = 53250;
    iY.LINEAR_DISTANCE = 53251;
    iY.LINEAR_DISTANCE_CLAMPED = 53252;
    iY.EXPONENT_DISTANCE = 53253;
    iY.EXPONENT_DISTANCE_CLAMPED = 53254;
    oB.FALSE = 0;
    oB.TRUE = 1;
    oB.FREQUENCY = 4103;
    oB.REFRESH = 4104;
    oB.SYNC = 4105;
    oB.MONO_SOURCES = 4112;
    oB.STEREO_SOURCES = 4113;
    oB.NO_ERROR = 0;
    oB.INVALID_DEVICE = 40961;
    oB.INVALID_CONTEXT = 40962;
    oB.INVALID_ENUM = 40963;
    oB.INVALID_VALUE = 40964;
    oB.OUT_OF_MEMORY = 40965;
    oB.ATTRIBUTES_SIZE = 4098;
    oB.ALL_ATTRIBUTES = 4099;
    oB.DEFAULT_DEVICE_SPECIFIER = 4100;
    oB.DEVICE_SPECIFIER = 4101;
    oB.EXTENSIONS = 4102;
    oB.ENUMERATE_ALL_EXT = 1;
    oB.DEFAULT_ALL_DEVICES_SPECIFIER = 4114;
    oB.ALL_DEVICES_SPECIFIER = 4115;
    nv.__base64Chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
    hd.FT_LOAD_FORCE_AUTOHINT = 32;
    mU.DEPTH_BUFFER_BIT = 256;
    mU.STENCIL_BUFFER_BIT = 1024;
    mU.COLOR_BUFFER_BIT = 16384;
    mU.POINTS = 0;
    mU.LINES = 1;
    mU.LINE_LOOP = 2;
    mU.LINE_STRIP = 3;
    mU.TRIANGLES = 4;
    mU.TRIANGLE_STRIP = 5;
    mU.TRIANGLE_FAN = 6;
    mU.ZERO = 0;
    mU.ONE = 1;
    mU.SRC_COLOR = 768;
    mU.ONE_MINUS_SRC_COLOR = 769;
    mU.SRC_ALPHA = 770;
    mU.ONE_MINUS_SRC_ALPHA = 771;
    mU.DST_ALPHA = 772;
    mU.ONE_MINUS_DST_ALPHA = 773;
    mU.DST_COLOR = 774;
    mU.ONE_MINUS_DST_COLOR = 775;
    mU.SRC_ALPHA_SATURATE = 776;
    mU.FUNC_ADD = 32774;
    mU.BLEND_EQUATION = 32777;
    mU.BLEND_EQUATION_RGB = 32777;
    mU.BLEND_EQUATION_ALPHA = 34877;
    mU.FUNC_SUBTRACT = 32778;
    mU.FUNC_REVERSE_SUBTRACT = 32779;
    mU.BLEND_DST_RGB = 32968;
    mU.BLEND_SRC_RGB = 32969;
    mU.BLEND_DST_ALPHA = 32970;
    mU.BLEND_SRC_ALPHA = 32971;
    mU.CONSTANT_COLOR = 32769;
    mU.ONE_MINUS_CONSTANT_COLOR = 32770;
    mU.CONSTANT_ALPHA = 32771;
    mU.ONE_MINUS_CONSTANT_ALPHA = 32772;
    mU.BLEND_COLOR = 32773;
    mU.ARRAY_BUFFER = 34962;
    mU.ELEMENT_ARRAY_BUFFER = 34963;
    mU.ARRAY_BUFFER_BINDING = 34964;
    mU.ELEMENT_ARRAY_BUFFER_BINDING = 34965;
    mU.STREAM_DRAW = 35040;
    mU.STATIC_DRAW = 35044;
    mU.DYNAMIC_DRAW = 35048;
    mU.BUFFER_SIZE = 34660;
    mU.BUFFER_USAGE = 34661;
    mU.CURRENT_VERTEX_ATTRIB = 34342;
    mU.FRONT = 1028;
    mU.BACK = 1029;
    mU.FRONT_AND_BACK = 1032;
    mU.CULL_FACE = 2884;
    mU.BLEND = 3042;
    mU.DITHER = 3024;
    mU.STENCIL_TEST = 2960;
    mU.DEPTH_TEST = 2929;
    mU.SCISSOR_TEST = 3089;
    mU.POLYGON_OFFSET_FILL = 32823;
    mU.SAMPLE_ALPHA_TO_COVERAGE = 32926;
    mU.SAMPLE_COVERAGE = 32928;
    mU.NO_ERROR = 0;
    mU.INVALID_ENUM = 1280;
    mU.INVALID_VALUE = 1281;
    mU.INVALID_OPERATION = 1282;
    mU.OUT_OF_MEMORY = 1285;
    mU.CW = 2304;
    mU.CCW = 2305;
    mU.LINE_WIDTH = 2849;
    mU.ALIASED_POINT_SIZE_RANGE = 33901;
    mU.ALIASED_LINE_WIDTH_RANGE = 33902;
    mU.CULL_FACE_MODE = 2885;
    mU.FRONT_FACE = 2886;
    mU.DEPTH_RANGE = 2928;
    mU.DEPTH_WRITEMASK = 2930;
    mU.DEPTH_CLEAR_VALUE = 2931;
    mU.DEPTH_FUNC = 2932;
    mU.STENCIL_CLEAR_VALUE = 2961;
    mU.STENCIL_FUNC = 2962;
    mU.STENCIL_FAIL = 2964;
    mU.STENCIL_PASS_DEPTH_FAIL = 2965;
    mU.STENCIL_PASS_DEPTH_PASS = 2966;
    mU.STENCIL_REF = 2967;
    mU.STENCIL_VALUE_MASK = 2963;
    mU.STENCIL_WRITEMASK = 2968;
    mU.STENCIL_BACK_FUNC = 34816;
    mU.STENCIL_BACK_FAIL = 34817;
    mU.STENCIL_BACK_PASS_DEPTH_FAIL = 34818;
    mU.STENCIL_BACK_PASS_DEPTH_PASS = 34819;
    mU.STENCIL_BACK_REF = 36003;
    mU.STENCIL_BACK_VALUE_MASK = 36004;
    mU.STENCIL_BACK_WRITEMASK = 36005;
    mU.VIEWPORT = 2978;
    mU.SCISSOR_BOX = 3088;
    mU.COLOR_CLEAR_VALUE = 3106;
    mU.COLOR_WRITEMASK = 3107;
    mU.UNPACK_ALIGNMENT = 3317;
    mU.PACK_ALIGNMENT = 3333;
    mU.MAX_TEXTURE_SIZE = 3379;
    mU.MAX_VIEWPORT_DIMS = 3386;
    mU.SUBPIXEL_BITS = 3408;
    mU.RED_BITS = 3410;
    mU.GREEN_BITS = 3411;
    mU.BLUE_BITS = 3412;
    mU.ALPHA_BITS = 3413;
    mU.DEPTH_BITS = 3414;
    mU.STENCIL_BITS = 3415;
    mU.POLYGON_OFFSET_UNITS = 10752;
    mU.POLYGON_OFFSET_FACTOR = 32824;
    mU.TEXTURE_BINDING_2D = 32873;
    mU.SAMPLE_BUFFERS = 32936;
    mU.SAMPLES = 32937;
    mU.SAMPLE_COVERAGE_VALUE = 32938;
    mU.SAMPLE_COVERAGE_INVERT = 32939;
    mU.COMPRESSED_TEXTURE_FORMATS = 34467;
    mU.DONT_CARE = 4352;
    mU.FASTEST = 4353;
    mU.NICEST = 4354;
    mU.GENERATE_MIPMAP_HINT = 33170;
    mU.BYTE = 5120;
    mU.UNSIGNED_BYTE = 5121;
    mU.SHORT = 5122;
    mU.UNSIGNED_SHORT = 5123;
    mU.INT = 5124;
    mU.UNSIGNED_INT = 5125;
    mU.FLOAT = 5126;
    mU.DEPTH_COMPONENT = 6402;
    mU.ALPHA = 6406;
    mU.RGB = 6407;
    mU.RGBA = 6408;
    mU.BGR_EXT = 32992;
    mU.BGRA_EXT = 32993;
    mU.LUMINANCE = 6409;
    mU.LUMINANCE_ALPHA = 6410;
    mU.UNSIGNED_SHORT_4_4_4_4 = 32819;
    mU.UNSIGNED_SHORT_5_5_5_1 = 32820;
    mU.UNSIGNED_SHORT_5_6_5 = 33635;
    mU.FRAGMENT_SHADER = 35632;
    mU.VERTEX_SHADER = 35633;
    mU.MAX_VERTEX_ATTRIBS = 34921;
    mU.MAX_VERTEX_UNIFORM_VECTORS = 36347;
    mU.MAX_VARYING_VECTORS = 36348;
    mU.MAX_COMBINED_TEXTURE_IMAGE_UNITS = 35661;
    mU.MAX_VERTEX_TEXTURE_IMAGE_UNITS = 35660;
    mU.MAX_TEXTURE_IMAGE_UNITS = 34930;
    mU.MAX_FRAGMENT_UNIFORM_VECTORS = 36349;
    mU.SHADER_TYPE = 35663;
    mU.DELETE_STATUS = 35712;
    mU.LINK_STATUS = 35714;
    mU.VALIDATE_STATUS = 35715;
    mU.ATTACHED_SHADERS = 35717;
    mU.ACTIVE_UNIFORMS = 35718;
    mU.ACTIVE_ATTRIBUTES = 35721;
    mU.SHADING_LANGUAGE_VERSION = 35724;
    mU.CURRENT_PROGRAM = 35725;
    mU.NEVER = 512;
    mU.LESS = 513;
    mU.EQUAL = 514;
    mU.LEQUAL = 515;
    mU.GREATER = 516;
    mU.NOTEQUAL = 517;
    mU.GEQUAL = 518;
    mU.ALWAYS = 519;
    mU.KEEP = 7680;
    mU.REPLACE = 7681;
    mU.INCR = 7682;
    mU.DECR = 7683;
    mU.INVERT = 5386;
    mU.INCR_WRAP = 34055;
    mU.DECR_WRAP = 34056;
    mU.VENDOR = 7936;
    mU.RENDERER = 7937;
    mU.VERSION = 7938;
    mU.NEAREST = 9728;
    mU.LINEAR = 9729;
    mU.NEAREST_MIPMAP_NEAREST = 9984;
    mU.LINEAR_MIPMAP_NEAREST = 9985;
    mU.NEAREST_MIPMAP_LINEAR = 9986;
    mU.LINEAR_MIPMAP_LINEAR = 9987;
    mU.TEXTURE_MAG_FILTER = 10240;
    mU.TEXTURE_MIN_FILTER = 10241;
    mU.TEXTURE_WRAP_S = 10242;
    mU.TEXTURE_WRAP_T = 10243;
    mU.TEXTURE_2D = 3553;
    mU.TEXTURE = 5890;
    mU.TEXTURE_CUBE_MAP = 34067;
    mU.TEXTURE_BINDING_CUBE_MAP = 34068;
    mU.TEXTURE_CUBE_MAP_POSITIVE_X = 34069;
    mU.TEXTURE_CUBE_MAP_NEGATIVE_X = 34070;
    mU.TEXTURE_CUBE_MAP_POSITIVE_Y = 34071;
    mU.TEXTURE_CUBE_MAP_NEGATIVE_Y = 34072;
    mU.TEXTURE_CUBE_MAP_POSITIVE_Z = 34073;
    mU.TEXTURE_CUBE_MAP_NEGATIVE_Z = 34074;
    mU.MAX_CUBE_MAP_TEXTURE_SIZE = 34076;
    mU.TEXTURE0 = 33984;
    mU.TEXTURE1 = 33985;
    mU.TEXTURE2 = 33986;
    mU.TEXTURE3 = 33987;
    mU.TEXTURE4 = 33988;
    mU.TEXTURE5 = 33989;
    mU.TEXTURE6 = 33990;
    mU.TEXTURE7 = 33991;
    mU.TEXTURE8 = 33992;
    mU.TEXTURE9 = 33993;
    mU.TEXTURE10 = 33994;
    mU.TEXTURE11 = 33995;
    mU.TEXTURE12 = 33996;
    mU.TEXTURE13 = 33997;
    mU.TEXTURE14 = 33998;
    mU.TEXTURE15 = 33999;
    mU.TEXTURE16 = 34000;
    mU.TEXTURE17 = 34001;
    mU.TEXTURE18 = 34002;
    mU.TEXTURE19 = 34003;
    mU.TEXTURE20 = 34004;
    mU.TEXTURE21 = 34005;
    mU.TEXTURE22 = 34006;
    mU.TEXTURE23 = 34007;
    mU.TEXTURE24 = 34008;
    mU.TEXTURE25 = 34009;
    mU.TEXTURE26 = 34010;
    mU.TEXTURE27 = 34011;
    mU.TEXTURE28 = 34012;
    mU.TEXTURE29 = 34013;
    mU.TEXTURE30 = 34014;
    mU.TEXTURE31 = 34015;
    mU.ACTIVE_TEXTURE = 34016;
    mU.REPEAT = 10497;
    mU.CLAMP_TO_EDGE = 33071;
    mU.MIRRORED_REPEAT = 33648;
    mU.FLOAT_VEC2 = 35664;
    mU.FLOAT_VEC3 = 35665;
    mU.FLOAT_VEC4 = 35666;
    mU.INT_VEC2 = 35667;
    mU.INT_VEC3 = 35668;
    mU.INT_VEC4 = 35669;
    mU.BOOL = 35670;
    mU.BOOL_VEC2 = 35671;
    mU.BOOL_VEC3 = 35672;
    mU.BOOL_VEC4 = 35673;
    mU.FLOAT_MAT2 = 35674;
    mU.FLOAT_MAT3 = 35675;
    mU.FLOAT_MAT4 = 35676;
    mU.SAMPLER_2D = 35678;
    mU.SAMPLER_CUBE = 35680;
    mU.VERTEX_ATTRIB_ARRAY_ENABLED = 34338;
    mU.VERTEX_ATTRIB_ARRAY_SIZE = 34339;
    mU.VERTEX_ATTRIB_ARRAY_STRIDE = 34340;
    mU.VERTEX_ATTRIB_ARRAY_TYPE = 34341;
    mU.VERTEX_ATTRIB_ARRAY_NORMALIZED = 34922;
    mU.VERTEX_ATTRIB_ARRAY_POINTER = 34373;
    mU.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 34975;
    mU.VERTEX_PROGRAM_POINT_SIZE = 34370;
    mU.POINT_SPRITE = 34913;
    mU.COMPILE_STATUS = 35713;
    mU.LOW_FLOAT = 36336;
    mU.MEDIUM_FLOAT = 36337;
    mU.HIGH_FLOAT = 36338;
    mU.LOW_INT = 36339;
    mU.MEDIUM_INT = 36340;
    mU.HIGH_INT = 36341;
    mU.FRAMEBUFFER = 36160;
    mU.RENDERBUFFER = 36161;
    mU.RGBA4 = 32854;
    mU.RGB5_A1 = 32855;
    mU.RGB565 = 36194;
    mU.DEPTH_COMPONENT16 = 33189;
    mU.STENCIL_INDEX = 6401;
    mU.STENCIL_INDEX8 = 36168;
    mU.DEPTH_STENCIL = 34041;
    mU.RENDERBUFFER_WIDTH = 36162;
    mU.RENDERBUFFER_HEIGHT = 36163;
    mU.RENDERBUFFER_INTERNAL_FORMAT = 36164;
    mU.RENDERBUFFER_RED_SIZE = 36176;
    mU.RENDERBUFFER_GREEN_SIZE = 36177;
    mU.RENDERBUFFER_BLUE_SIZE = 36178;
    mU.RENDERBUFFER_ALPHA_SIZE = 36179;
    mU.RENDERBUFFER_DEPTH_SIZE = 36180;
    mU.RENDERBUFFER_STENCIL_SIZE = 36181;
    mU.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 36048;
    mU.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 36049;
    mU.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 36050;
    mU.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 36051;
    mU.COLOR_ATTACHMENT0 = 36064;
    mU.DEPTH_ATTACHMENT = 36096;
    mU.STENCIL_ATTACHMENT = 36128;
    mU.DEPTH_STENCIL_ATTACHMENT = 33306;
    mU.NONE = 0;
    mU.FRAMEBUFFER_COMPLETE = 36053;
    mU.FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 36054;
    mU.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 36055;
    mU.FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 36057;
    mU.FRAMEBUFFER_UNSUPPORTED = 36061;
    mU.FRAMEBUFFER_BINDING = 36006;
    mU.RENDERBUFFER_BINDING = 36007;
    mU.MAX_RENDERBUFFER_SIZE = 34024;
    mU.INVALID_FRAMEBUFFER_OPERATION = 1286;
    mU.UNPACK_FLIP_Y_WEBGL = 37440;
    mU.UNPACK_PREMULTIPLY_ALPHA_WEBGL = 37441;
    mU.CONTEXT_LOST_WEBGL = 37442;
    mU.UNPACK_COLORSPACE_CONVERSION_WEBGL = 37443;
    mU.BROWSER_DEFAULT_WEBGL = 37444;
    qQ.__identity = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0];
    iP.__identity = new iP();
    d1.__identity = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
    eQ.GLOBAL_SSL = 1;
    eQ.GLOBAL_WIN32 = 2;
    eQ.GLOBAL_ALL = 3;
    eQ.GLOBAL_NOTHING = 0;
    eQ.GLOBAL_DEFAULT = 3;
    eQ.GLOBAL_ACK_EINTR = 4;
    c2.MESSAGE_COMPLETE = "__COMPLETE__";
    c2.MESSAGE_ERROR = "__ERROR__";
    mW.__moduleNames = null;
    iU.INVALID = 0;
    iU.LEFT_TO_RIGHT = 4;
    iU.RIGHT_TO_LEFT = 5;
    iU.TOP_TO_BOTTOM = 6;
    iU.BOTTOM_TO_TOP = 7;
    hW.COMMON = "Zyyy";
    hW.INHERITED = "Zinh";
    hW.UNKNOWN = "Zzzz";
    hW.ARABIC = "Arab";
    hW.ARMENIAN = "Armn";
    hW.BENGALI = "Beng";
    hW.CYRILLIC = "Cyrl";
    hW.DEVANAGARI = "Deva";
    hW.GEORGIAN = "Geor";
    hW.GREEK = "Grek";
    hW.GUJARATI = "Gujr";
    hW.GURMUKHI = "Guru";
    hW.HANGUL = "Hang";
    hW.HAN = "Hani";
    hW.HEBREW = "Hebr";
    hW.HIRAGANA = "Hira";
    hW.KANNADA = "Knda";
    hW.KATAKANA = "Kana";
    hW.LAO = "Laoo";
    hW.LATIN = "Latn";
    hW.MALAYALAM = "Mlym";
    hW.ORIYA = "Orya";
    hW.TAMIL = "Taml";
    hW.TELUGA = "Telu";
    hW.THAI = "Thai";
    hW.TIBETAN = "Tibt";
    hW.BOPOMOFO = "Bopo";
    hW.BRAILLE = "Brai";
    hW.CANADIAN_SYLLABICS = "Cans";
    hW.CHEROKEE = "Cher";
    hW.ETHIOPIC = "Ethi";
    hW.KHMER = "Khmr";
    hW.MONGOLIAN = "Mong";
    hW.MYANMAR = "Mymr";
    hW.OGHAM = "Ogam";
    hW.RUNIC = "Runr";
    hW.SINHALA = "Sinh";
    hW.SYRIAC = "Syrc";
    hW.THAANA = "Thaa";
    hW.YI = "Yiii";
    hW.DESERET = "Dsrt";
    hW.GOTHIC = "Goth";
    hW.OLD_ITALIC = "Ital";
    hW.BUHID = "Buhd";
    hW.HANUNOO = "Hano";
    hW.TAGALOG = "Tglg";
    hW.TAGBANWA = "Tagb";
    hW.CYPRIOT = "Cprt";
    hW.LIMBU = "Limb";
    hW.LINEAR_B = "Linb";
    hW.OSMANYA = "Osma";
    hW.SHAVIAN = "Shaw";
    hW.TAI_LE = "Tale";
    hW.UGARITIC = "Ugar";
    hW.BUGINESE = "Bugi";
    hW.COPTIC = "Copt";
    hW.GLAGOLITIC = "Glag";
    hW.KHAROSHTHI = "Khar";
    hW.NEW_TAI_LUE = "Talu";
    hW.OLD_PERSIAN = "Xpeo";
    hW.SYLOTI_NAGRI = "Sylo";
    hW.TIFINAGH = "Tfng";
    hW.BALINESE = "Bali";
    hW.CUNEIFORM = "Xsux";
    hW.NKO = "Nkoo";
    hW.PHAGS_PA = "Phag";
    hW.PHOENICIAN = "Phnx";
    hW.CARIAN = "Cari";
    hW.CHAM = "Cham";
    hW.KAYAH_LI = "Kali";
    hW.LEPCHA = "Lepc";
    hW.LYCIAN = "Lyci";
    hW.LYDIAN = "Lydi";
    hW.OL_CHIKI = "Olck";
    hW.REJANG = "Rjng";
    hW.SAURASHTRA = "Saur";
    hW.SUNDANESE = "Sund";
    hW.VAI = "Vaii";
    hW.AVESTAN = "Avst";
    hW.BAMUM = "Bamu";
    hW.EGYPTIAN_HIEROGLYPHS = "Egyp";
    hW.IMPERIAL_ARAMAIC = "Armi";
    hW.INSCRIPTIONAL_PAHLAVI = "Phli";
    hW.INSCRIPTIONAL_PARTHIAN = "Prti";
    hW.JAVANESE = "Java";
    hW.KAITHI = "Kthi";
    hW.LISU = "Lisu";
    hW.MEETEI_MAYEK = "Mtei";
    hW.OLD_SOUTH_ARABIAN = "Sarb";
    hW.OLD_TURKIC = "Orkh";
    hW.SAMARITAN = "Samr";
    hW.TAI_THAM = "Lana";
    hW.TAI_VIET = "Tavt";
    hW.BATAK = "Batk";
    hW.BRAHMI = "Brah";
    hW.MANDAIC = "Mand";
    hW.CHAKMA = "Cakm";
    hW.MEROITIC_CURSIVE = "Merc";
    hW.MEROITIC_HIEROGLYPHS = "Mero";
    hW.MIAO = "Plrd";
    hW.SHARADA = "Shrd";
    hW.SORA_SOMPENG = "Sora";
    hW.TAKRI = "Takr";
    hW.BASSA_VAH = "Bass";
    hW.CAUCASIAN_ALBANIAN = "Aghb";
    hW.DUPLOYAN = "Dupl";
    hW.ELBASAN = "Elba";
    hW.GRANTHA = "Gran";
    hW.KHOJKI = "Khoj";
    hW.KHUDAWADI = "Sind";
    hW.LINEAR_A = "Lina";
    hW.MAHAJANI = "Mahj";
    hW.MANICHAEAN = "Mani";
    hW.MENDE_KIKAKUI = "Mend";
    hW.MODI = "Modi";
    hW.MRO = "Mroo";
    hW.NABATAEAN = "Nbat";
    hW.OLD_NORTH_ARABIAN = "Narb";
    hW.OLD_PERMIC = "Perm";
    hW.PAHAWH_HMONG = "Hmng";
    hW.PALMYRENE = "Palm";
    hW.PAU_CIN_HAU = "Pauc";
    hW.PSALTER_PAHLAVI = "Phlp";
    hW.SIDDHAM = "Sidd";
    hW.TIRHUTA = "Tirh";
    hW.WARANG_CITI = "Wara";
    mF.seedNumber = 0;
    mF.base64Chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
    mF.usedFlatNames = new io();
    mF.uuidChars = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
    lE.devices = new c6();
    lE.onConnect = new ds();
    pT.LEFT_X = 0;
    pT.LEFT_Y = 1;
    pT.RIGHT_X = 2;
    pT.RIGHT_Y = 3;
    pT.TRIGGER_LEFT = 4;
    pT.TRIGGER_RIGHT = 5;
    lo.A = 0;
    lo.B = 1;
    lo.X = 2;
    lo.Y = 3;
    lo.BACK = 4;
    lo.GUIDE = 5;
    lo.START = 6;
    lo.LEFT_STICK = 7;
    lo.RIGHT_STICK = 8;
    lo.LEFT_SHOULDER = 9;
    lo.RIGHT_SHOULDER = 10;
    lo.DPAD_UP = 11;
    lo.DPAD_DOWN = 12;
    lo.DPAD_LEFT = 13;
    lo.DPAD_RIGHT = 14;
    hr.devices = new c6();
    hr.onConnect = new hb();
    dD.CENTER = 0;
    dD.DOWN = 4;
    dD.LEFT = 8;
    dD.RIGHT = 2;
    dD.UP = 1;
    dD.DOWN_LEFT = 12;
    dD.DOWN_RIGHT = 6;
    dD.UP_LEFT = 9;
    dD.UP_RIGHT = 3;
    O.UNKNOWN = 0;
    O.BACKSPACE = 8;
    O.TAB = 9;
    O.RETURN = 13;
    O.ESCAPE = 27;
    O.SPACE = 32;
    O.EXCLAMATION = 33;
    O.QUOTE = 34;
    O.HASH = 35;
    O.DOLLAR = 36;
    O.PERCENT = 37;
    O.AMPERSAND = 38;
    O.SINGLE_QUOTE = 39;
    O.LEFT_PARENTHESIS = 40;
    O.RIGHT_PARENTHESIS = 41;
    O.ASTERISK = 42;
    O.PLUS = 43;
    O.COMMA = 44;
    O.MINUS = 45;
    O.PERIOD = 46;
    O.SLASH = 47;
    O.NUMBER_0 = 48;
    O.NUMBER_1 = 49;
    O.NUMBER_2 = 50;
    O.NUMBER_3 = 51;
    O.NUMBER_4 = 52;
    O.NUMBER_5 = 53;
    O.NUMBER_6 = 54;
    O.NUMBER_7 = 55;
    O.NUMBER_8 = 56;
    O.NUMBER_9 = 57;
    O.COLON = 58;
    O.SEMICOLON = 59;
    O.LESS_THAN = 60;
    O.EQUALS = 61;
    O.GREATER_THAN = 62;
    O.QUESTION = 63;
    O.AT = 64;
    O.LEFT_BRACKET = 91;
    O.BACKSLASH = 92;
    O.RIGHT_BRACKET = 93;
    O.CARET = 94;
    O.UNDERSCORE = 95;
    O.GRAVE = 96;
    O.A = 97;
    O.B = 98;
    O.C = 99;
    O.D = 100;
    O.E = 101;
    O.F = 102;
    O.G = 103;
    O.H = 104;
    O.I = 105;
    O.J = 106;
    O.K = 107;
    O.L = 108;
    O.M = 109;
    O.N = 110;
    O.O = 111;
    O.P = 112;
    O.Q = 113;
    O.R = 114;
    O.S = 115;
    O.T = 116;
    O.U = 117;
    O.V = 118;
    O.W = 119;
    O.X = 120;
    O.Y = 121;
    O.Z = 122;
    O.DELETE = 127;
    O.CAPS_LOCK = 1073741881;
    O.F1 = 1073741882;
    O.F2 = 1073741883;
    O.F3 = 1073741884;
    O.F4 = 1073741885;
    O.F5 = 1073741886;
    O.F6 = 1073741887;
    O.F7 = 1073741888;
    O.F8 = 1073741889;
    O.F9 = 1073741890;
    O.F10 = 1073741891;
    O.F11 = 1073741892;
    O.F12 = 1073741893;
    O.PRINT_SCREEN = 1073741894;
    O.SCROLL_LOCK = 1073741895;
    O.PAUSE = 1073741896;
    O.INSERT = 1073741897;
    O.HOME = 1073741898;
    O.PAGE_UP = 1073741899;
    O.END = 1073741901;
    O.PAGE_DOWN = 1073741902;
    O.RIGHT = 1073741903;
    O.LEFT = 1073741904;
    O.DOWN = 1073741905;
    O.UP = 1073741906;
    O.NUM_LOCK = 1073741907;
    O.NUMPAD_DIVIDE = 1073741908;
    O.NUMPAD_MULTIPLY = 1073741909;
    O.NUMPAD_MINUS = 1073741910;
    O.NUMPAD_PLUS = 1073741911;
    O.NUMPAD_ENTER = 1073741912;
    O.NUMPAD_1 = 1073741913;
    O.NUMPAD_2 = 1073741914;
    O.NUMPAD_3 = 1073741915;
    O.NUMPAD_4 = 1073741916;
    O.NUMPAD_5 = 1073741917;
    O.NUMPAD_6 = 1073741918;
    O.NUMPAD_7 = 1073741919;
    O.NUMPAD_8 = 1073741920;
    O.NUMPAD_9 = 1073741921;
    O.NUMPAD_0 = 1073741922;
    O.NUMPAD_PERIOD = 1073741923;
    O.APPLICATION = 1073741925;
    O.POWER = 1073741926;
    O.NUMPAD_EQUALS = 1073741927;
    O.F13 = 1073741928;
    O.F14 = 1073741929;
    O.F15 = 1073741930;
    O.F16 = 1073741931;
    O.F17 = 1073741932;
    O.F18 = 1073741933;
    O.F19 = 1073741934;
    O.F20 = 1073741935;
    O.F21 = 1073741936;
    O.F22 = 1073741937;
    O.F23 = 1073741938;
    O.F24 = 1073741939;
    O.EXECUTE = 1073741940;
    O.HELP = 1073741941;
    O.MENU = 1073741942;
    O.SELECT = 1073741943;
    O.STOP = 1073741944;
    O.AGAIN = 1073741945;
    O.UNDO = 1073741946;
    O.CUT = 1073741947;
    O.COPY = 1073741948;
    O.PASTE = 1073741949;
    O.FIND = 1073741950;
    O.MUTE = 1073741951;
    O.VOLUME_UP = 1073741952;
    O.VOLUME_DOWN = 1073741953;
    O.NUMPAD_COMMA = 1073741957;
    O.ALT_ERASE = 1073741977;
    O.SYSTEM_REQUEST = 1073741978;
    O.CANCEL = 1073741979;
    O.CLEAR = 1073741980;
    O.PRIOR = 1073741981;
    O.RETURN2 = 1073741982;
    O.SEPARATOR = 1073741983;
    O.OUT = 1073741984;
    O.OPER = 1073741985;
    O.CLEAR_AGAIN = 1073741986;
    O.CRSEL = 1073741987;
    O.EXSEL = 1073741988;
    O.NUMPAD_00 = 1073742000;
    O.NUMPAD_000 = 1073742001;
    O.THOUSAND_SEPARATOR = 1073742002;
    O.DECIMAL_SEPARATOR = 1073742003;
    O.CURRENCY_UNIT = 1073742004;
    O.CURRENCY_SUBUNIT = 1073742005;
    O.NUMPAD_LEFT_PARENTHESIS = 1073742006;
    O.NUMPAD_RIGHT_PARENTHESIS = 1073742007;
    O.NUMPAD_LEFT_BRACE = 1073742008;
    O.NUMPAD_RIGHT_BRACE = 1073742009;
    O.NUMPAD_TAB = 1073742010;
    O.NUMPAD_BACKSPACE = 1073742011;
    O.NUMPAD_A = 1073742012;
    O.NUMPAD_B = 1073742013;
    O.NUMPAD_C = 1073742014;
    O.NUMPAD_D = 1073742015;
    O.NUMPAD_E = 1073742016;
    O.NUMPAD_F = 1073742017;
    O.NUMPAD_XOR = 1073742018;
    O.NUMPAD_POWER = 1073742019;
    O.NUMPAD_PERCENT = 1073742020;
    O.NUMPAD_LESS_THAN = 1073742021;
    O.NUMPAD_GREATER_THAN = 1073742022;
    O.NUMPAD_AMPERSAND = 1073742023;
    O.NUMPAD_DOUBLE_AMPERSAND = 1073742024;
    O.NUMPAD_VERTICAL_BAR = 1073742025;
    O.NUMPAD_DOUBLE_VERTICAL_BAR = 1073742026;
    O.NUMPAD_COLON = 1073742027;
    O.NUMPAD_HASH = 1073742028;
    O.NUMPAD_SPACE = 1073742029;
    O.NUMPAD_AT = 1073742030;
    O.NUMPAD_EXCLAMATION = 1073742031;
    O.NUMPAD_MEM_STORE = 1073742032;
    O.NUMPAD_MEM_RECALL = 1073742033;
    O.NUMPAD_MEM_CLEAR = 1073742034;
    O.NUMPAD_MEM_ADD = 1073742035;
    O.NUMPAD_MEM_SUBTRACT = 1073742036;
    O.NUMPAD_MEM_MULTIPLY = 1073742037;
    O.NUMPAD_MEM_DIVIDE = 1073742038;
    O.NUMPAD_PLUS_MINUS = 1073742039;
    O.NUMPAD_CLEAR = 1073742040;
    O.NUMPAD_CLEAR_ENTRY = 1073742041;
    O.NUMPAD_BINARY = 1073742042;
    O.NUMPAD_OCTAL = 1073742043;
    O.NUMPAD_DECIMAL = 1073742044;
    O.NUMPAD_HEXADECIMAL = 1073742045;
    O.LEFT_CTRL = 1073742048;
    O.LEFT_SHIFT = 1073742049;
    O.LEFT_ALT = 1073742050;
    O.LEFT_META = 1073742051;
    O.RIGHT_CTRL = 1073742052;
    O.RIGHT_SHIFT = 1073742053;
    O.RIGHT_ALT = 1073742054;
    O.RIGHT_META = 1073742055;
    O.MODE = 1073742081;
    O.AUDIO_NEXT = 1073742082;
    O.AUDIO_PREVIOUS = 1073742083;
    O.AUDIO_STOP = 1073742084;
    O.AUDIO_PLAY = 1073742085;
    O.AUDIO_MUTE = 1073742086;
    O.MEDIA_SELECT = 1073742087;
    O.WWW = 1073742088;
    O.MAIL = 1073742089;
    O.CALCULATOR = 1073742090;
    O.COMPUTER = 1073742091;
    O.APP_CONTROL_SEARCH = 1073742092;
    O.APP_CONTROL_HOME = 1073742093;
    O.APP_CONTROL_BACK = 1073742094;
    O.APP_CONTROL_FORWARD = 1073742095;
    O.APP_CONTROL_STOP = 1073742096;
    O.APP_CONTROL_REFRESH = 1073742097;
    O.APP_CONTROL_BOOKMARKS = 1073742098;
    O.BRIGHTNESS_DOWN = 1073742099;
    O.BRIGHTNESS_UP = 1073742100;
    O.DISPLAY_SWITCH = 1073742101;
    O.BACKLIGHT_TOGGLE = 1073742102;
    O.BACKLIGHT_DOWN = 1073742103;
    O.BACKLIGHT_UP = 1073742104;
    O.EJECT = 1073742105;
    O.SLEEP = 1073742106;
    dW.NONE = 0;
    dW.LEFT_SHIFT = 1;
    dW.RIGHT_SHIFT = 2;
    dW.LEFT_CTRL = 64;
    dW.RIGHT_CTRL = 128;
    dW.LEFT_ALT = 256;
    dW.RIGHT_ALT = 512;
    dW.LEFT_META = 1024;
    dW.RIGHT_META = 2048;
    dW.NUM_LOCK = 4096;
    dW.CAPS_LOCK = 8192;
    dW.MODE = 16384;
    dW.CTRL = 192;
    dW.SHIFT = 3;
    dW.ALT = 768;
    dW.META = 3072;
    oA.onEnd = new pE();
    oA.onMove = new pE();
    oA.onStart = new pE();
    r.cffi_lime_bytes_from_data_pointer = (function(i1) {
        var i;
        var q = mW.load("lime", "lime_bytes_from_data_pointer", 2, false);
        i = q;
        return i
    }(this));
    r.cffi_lime_bytes_get_data_pointer = (function(i1) {
        var i;
        var q = mW.load("lime", "lime_bytes_get_data_pointer", 1, false);
        i = q;
        return i
    }(this));
    r.cffi_lime_bytes_read_file = (function(i1) {
        var i;
        var q = mW.load("lime", "lime_bytes_read_file", 1, false);
        i = q;
        return i
    }(this));
    nV.BYTES_PER_ELEMENT = 4;
    dY.BYTES_PER_ELEMENT = 2;
    jX.BYTES_PER_ELEMENT = 4;
    aV.NONE = 0;
    aV.ERROR = 1;
    aV.WARN = 2;
    aV.INFO = 3;
    aV.DEBUG = 4;
    aV.VERBOSE = 5;
    qP.BYTES_PER_ELEMENT = 2;
    M.BYTES_PER_ELEMENT = 4;
    ev.BYTES_PER_ELEMENT = 1;
    du.debug = false;
    lT.__rtti = '<class path="miniclip.core.PromoVO" params="">\n\t<classCache expr="&apos;???&apos;" line="12" static="1">\n\t\t<x path="Map">\n\t\t\t<c path="String"/>\n\t\t\t<x path="Map">\n\t\t\t\t<c path="String"/>\n\t\t\t\t<e path="miniclip.core.VOTypes"/>\n\t\t\t</x>\n\t\t</x>\n\t\t<meta><m n=":value"><e>\'???\'</e></m></meta>\n\t</classCache>\n\t<addFieldDeclaration public="1" set="method" line="321" static="1"><f a="className:fieldName:fieldType">\n\t<c path="String"/>\n\t<c path="String"/>\n\t<e path="miniclip.core.VOTypes"/>\n\t<x path="Void"/>\n</f></addFieldDeclaration>\n\t<classHasField public="1" set="method" line="330" static="1"><f a="className:fieldName">\n\t<c path="String"/>\n\t<c path="String"/>\n\t<x path="Bool"/>\n</f></classHasField>\n\t<getClassFields public="1" set="method" line="341" static="1"><f a="className">\n\t<c path="String"/>\n\t<x path="Map">\n\t\t<c path="String"/>\n\t\t<e path="miniclip.core.VOTypes"/>\n\t</x>\n</f></getClassFields>\n\t<_promoSystem><c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/></_promoSystem>\n\t<dataAccess public="1"><c path="miniclip.promotionsystem.core.model.vo.dataAccess.DataAccessBaseVO"/></dataAccess>\n\t<_dataAccessList><x path="Map">\n\t<c path="String"/>\n\t<c path="miniclip.promotionsystem.core.model.vo.dataAccess.DataAccessBaseVO"/>\n</x></_dataAccessList>\n\t<_className><c path="String"/></_className>\n\t<handleSpecialTypes set="method" line="42"><f a="fieldName:fieldValue">\n\t<c path="String"/>\n\t<d/>\n\t<x path="Bool"/>\n</f></handleSpecialTypes>\n\t<hasField set="method" line="47"><f a="fieldToFind">\n\t<c path="String"/>\n\t<x path="Bool"/>\n</f></hasField>\n\t<initializeField set="method" line="56">\n\t\t<f a="className:fieldName:fieldValue:?avoidAllocations" v=":::false">\n\t\t\t<c path="String"/>\n\t\t\t<c path="String"/>\n\t\t\t<d/>\n\t\t\t<x path="Bool"/>\n\t\t\t<x path="Void"/>\n\t\t</f>\n\t\t<meta><m n=":value"><e>{avoidAllocations:false}</e></m></meta>\n\t</initializeField>\n\t<handleDataAccessFields get="inline" set="null" line="87"><f a="fieldName:fieldData">\n\t<c path="String"/>\n\t<d/>\n\t<x path="Bool"/>\n</f></handleDataAccessFields>\n\t<setValues set="method" line="98"><f a="obj">\n\t<d/>\n\t<x path="Void"/>\n</f></setValues>\n\t<isDataAccessClass set="method" line="138"><f a="type">\n\t<e path="miniclip.core.VOTypes"/>\n\t<x path="Bool"/>\n</f></isDataAccessClass>\n\t<isVT_Array set="method" line="148"><f a="type">\n\t<e path="miniclip.core.VOTypes"/>\n\t<x path="Bool"/>\n</f></isVT_Array>\n\t<_parse set="method" line="157"><f a="type:v">\n\t<e path="miniclip.core.VOTypes"/>\n\t<d/>\n\t<d/>\n</f></_parse>\n\t<_parseClass set="method" line="184"><f a="name:v">\n\t<c path="String"/>\n\t<d/>\n\t<d/>\n</f></_parseClass>\n\t<resolveVOType set="method" line="195"><f a="type">\n\t<e path="miniclip.core.VOTypes"/>\n\t<x path="Class"><d/></x>\n</f></resolveVOType>\n\t<_parseArray params="T" set="method" line="206"><f a="valueClass:valueType:arrayValue">\n\t<c path="_parseArray.T"/>\n\t<e path="miniclip.core.VOTypes"/>\n\t<d/>\n\t<c path="Array"><c path="_parseArray.T"/></c>\n</f></_parseArray>\n\t<_parseMap params="K:V" set="method" line="228"><f a="keyClass:keyType:valueClass:valueType:mapValue">\n\t<c path="_parseMap.K"/>\n\t<e path="miniclip.core.VOTypes"/>\n\t<c path="_parseMap.V"/>\n\t<e path="miniclip.core.VOTypes"/>\n\t<d/>\n\t<x path="Map">\n\t\t<c path="String"/>\n\t\t<c path="_parseMap.V"/>\n\t</x>\n</f></_parseMap>\n\t<parseRTTIFields set="method" line="248"><f a="type">\n\t<e path="haxe.rtti.CType"/>\n\t<e path="miniclip.core.VOTypes"/>\n</f></parseRTTIFields>\n\t<parseFieldType set="method" line="258"><f a="name:params">\n\t<c path="String"/>\n\t<c path="List"><e path="haxe.rtti.CType"/></c>\n\t<e path="miniclip.core.VOTypes"/>\n</f></parseFieldType>\n\t<loadFieldInfo set="method" line="291">\n\t\t<f a="className:classObj:?rootCall" v="::false">\n\t\t\t<c path="String"/>\n\t\t\t<x path="Class"><d/></x>\n\t\t\t<x path="Bool"/>\n\t\t\t<x path="Void"/>\n\t\t</f>\n\t\t<meta><m n=":value"><e>{rootCall:false}</e></m></meta>\n\t</loadFieldInfo>\n\t<getDeclaredTypeOfField public="1" set="method" line="349"><f a="className:field">\n\t<c path="String"/>\n\t<c path="String"/>\n\t<e path="miniclip.core.VOTypes"/>\n</f></getDeclaredTypeOfField>\n\t<isDataAccess set="method" line="362"><f a="field">\n\t<d/>\n\t<x path="Bool"/>\n</f></isDataAccess>\n\t<getClassName get="inline" set="null" line="372"><f a=""><c path="String"/></f></getClassName>\n\t<resolveField public="1" set="method" line="384"><f a="fieldName">\n\t<c path="String"/>\n\t<x path="Void"/>\n</f></resolveField>\n\t<resolve public="1" set="method" line="400">\n\t\t<f a="?recursive:?depth" v="false:0">\n\t\t\t<x path="Bool"/>\n\t\t\t<x path="Int"/>\n\t\t\t<x path="Void"/>\n\t\t</f>\n\t\t<meta><m n=":value"><e>{depth:0,recursive:false}</e></m></meta>\n\t</resolve>\n\t<getFields public="1" set="method" line="466"><f a=""><x path="Map">\n\t<c path="String"/>\n\t<e path="miniclip.core.VOTypes"/>\n</x></f></getFields>\n\t<new public="1" set="method" line="22"><f a="promoSystem:obj">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n\t<meta>\n\t\t<m n=":directlyUsed"/>\n\t\t<m n=":rtti"/>\n\t</meta>\n</class>';
    lT.classCache = new io();
    iK.PROMOTION_DATA_ACCESS_DEFAULT = "default";
    ij.CURRENT_TIMESTAMP_STATE = "currentTimestampState";
    ij.OFFERS_STATE = "offersState";
    ij.ACTIVE_OFFERS_STATE = "activeOffersState";
    ij.OFFER_POP_UP_PRIORITTIZED_QUEUE_STATE = "OfferPopUpPrioritizedQueueState";
    ij.OFFER_POP_UP_QUEUE_STATE = "OfferPopUpQueueState";
    ij.PROMOTION_SYSTEM_BASE_DEFAULT_SAVE_DATA_KEY = "promotionSystemBaseSaveData";
    ak.TYPE_DISMISS = "dismiss";
    ak.TYPE_REDIRECT = "redirect";
    ak.TYPE_PURCHASE = "transaction";
    ak.TYPE_STORE = "store";
    ak.TYPE_URL = "url";
    le.PARAM_TARGET = "target";
    le.PARAM_ITEM_ID = "itemId";
    le.PARAM_TRANSACTION_ID = "transactionId";
    le.PARAM_APPID = "appId";
    le.PARAM_URL = "url";
    kH.indirections = {};
    di.__rtti = '<class path="miniclip.promotionsystem.core.model.TimeVO" params="">\n\t<extends path="miniclip.core.PromoVO"/>\n\t<MINUTE_IN_SECONDS public="1" get="inline" set="null" line="11" static="1"><x path="Int"/></MINUTE_IN_SECONDS>\n\t<HOUR_IN_SECONDS public="1" get="inline" set="null" line="12" static="1"><x path="Int"/></HOUR_IN_SECONDS>\n\t<DAY_IN_SECONDS public="1" get="inline" set="null" line="13" static="1"><x path="Int"/></DAY_IN_SECONDS>\n\t<WEEK_IN_SECONDS public="1" get="inline" set="null" line="14" static="1"><x path="Int"/></WEEK_IN_SECONDS>\n\t<MONTH_IN_SECONDS public="1" get="inline" set="null" line="15" static="1"><x path="Int"/></MONTH_IN_SECONDS>\n\t<YEAR_IN_SECONDS public="1" get="inline" set="null" line="16" static="1"><x path="Int"/></YEAR_IN_SECONDS>\n\t<years public="1" line="18"><x path="Int"/></years>\n\t<months public="1" line="19"><x path="Int"/></months>\n\t<weeks public="1" line="20"><x path="Int"/></weeks>\n\t<days public="1" line="21"><x path="Int"/></days>\n\t<hours public="1" line="22"><x path="Int"/></hours>\n\t<minutes public="1" line="23"><x path="Int"/></minutes>\n\t<seconds public="1" line="24"><x path="Int"/></seconds>\n\t<toMiliseconds public="1" set="method" line="31"><f a=""><x path="Int"/></f></toMiliseconds>\n\t<new public="1" set="method" line="26"><f a="promoSystem:?obj">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n\t<meta><m n=":directlyUsed"/></meta>\n</class>';
    di.MINUTE_IN_SECONDS = 60;
    di.HOUR_IN_SECONDS = 3600;
    di.DAY_IN_SECONDS = 86400;
    di.WEEK_IN_SECONDS = 604800;
    di.MONTH_IN_SECONDS = 2678400;
    di.YEAR_IN_SECONDS = 31536000;
    lu.__rtti = '<class path="miniclip.promotionsystem.core.model.vo.AssetConfigVO" params="">\n\t<extends path="miniclip.core.PromoVO"/>\n\t<useBasePack public="1"><c path="String"/></useBasePack>\n\t<rotation public="1" line="15"><x path="Float"/></rotation>\n\t<maxWidth public="1" line="17"><x path="Float"/></maxWidth>\n\t<maxHeight public="1" line="18"><x path="Float"/></maxHeight>\n\t<minimumScale public="1" line="19"><x path="Float"/></minimumScale>\n\t<maximumScale public="1" line="20"><x path="Float"/></maximumScale>\n\t<colorData public="1"><c path="miniclip.promotionsystem.core.model.vo.ColorDataVO"/></colorData>\n\t<leftX public="1" line="24"><x path="Float"/></leftX>\n\t<rightX public="1" line="25"><x path="Float"/></rightX>\n\t<offsetX public="1" line="27"><x path="Float"/></offsetX>\n\t<offsetY public="1" line="28"><x path="Float"/></offsetY>\n\t<zOrder public="1" line="30"><x path="Int"/></zOrder>\n\t<anchorX public="1" line="32"><x path="Float"/></anchorX>\n\t<anchorY public="1" line="33"><x path="Float"/></anchorY>\n\t<imageEntries public="1"><c path="Array"><c path="miniclip.promotionsystem.core.model.vo.ImageEntryVO"/></c></imageEntries>\n\t<textEntries public="1"><c path="Array"><c path="miniclip.promotionsystem.core.model.vo.TextEntryVO"/></c></textEntries>\n\t<new public="1" set="method" line="38"><f a="promoSystem:?obj">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n</class>';
    fS.__rtti = '<class path="miniclip.promotionsystem.core.model.vo.ButtonConfigurationVO" params="">\n\t<extends path="miniclip.core.PromoVO"/>\n\t<implements path="miniclip.promotionsystem.core.interfaces.IListableResources"/>\n\t<timerConfiguration public="1"><c path="miniclip.promotionsystem.core.model.vo.TextEntryVO"/></timerConfiguration>\n\t<buttonIconImages public="1"><c path="Array"><c path="miniclip.promotionsystem.core.model.vo.ImageEntryVO"/></c></buttonIconImages>\n\t<buttonTextLabels public="1"><c path="Array"><c path="miniclip.promotionsystem.core.model.vo.TextEntryVO"/></c></buttonTextLabels>\n\t<buttonBackgroundImage public="1"><c path="miniclip.promotionsystem.core.model.vo.ImageEntryVO"/></buttonBackgroundImage>\n\t<buttonAction public="1" line="16"><c path="String"/></buttonAction>\n\t<displayRemainingTimeOnBadge public="1" line="17"><x path="Bool"/></displayRemainingTimeOnBadge>\n\t<darkenOnPress public="1" line="18"><x path="Bool"/></darkenOnPress>\n\t<isButtonDisabled public="1" line="19"><x path="Bool"/></isButtonDisabled>\n\t<darkenIfDisabled public="1" line="20"><x path="Bool"/></darkenIfDisabled>\n\t<enabledButton public="1"><c path="miniclip.promotionsystem.core.model.vo.ButtonConfigurationVO"/></enabledButton>\n\t<disabledButton public="1"><c path="miniclip.promotionsystem.core.model.vo.ButtonConfigurationVO"/></disabledButton>\n\t<colorData public="1"><c path="miniclip.promotionsystem.core.model.vo.ColorDataVO"/></colorData>\n\t<getResourceList public="1" set="method" line="30"><f a="outputList">\n\t<c path="Array"><c path="miniclip.promotionsystem.core.model.vo.AssetDefinition"/></c>\n\t<c path="Array"><c path="miniclip.promotionsystem.core.model.vo.AssetDefinition"/></c>\n</f></getResourceList>\n\t<new public="1" set="method" line="25"><f a="promoSystem:?obj">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n</class>';
    H.__rtti = '<class path="miniclip.promotionsystem.core.model.vo.ColorDataVO" params="">\n\t<extends path="miniclip.core.PromoVO"/>\n\t<r public="1"><x path="Int"/></r>\n\t<g public="1"><x path="Int"/></g>\n\t<b public="1"><x path="Int"/></b>\n\t<a public="1"><x path="Int"/></a>\n\t<hex public="1" get="accessor" set="null"><x path="Int"/></hex>\n\t<get_hex set="method" line="21"><f a=""><x path="Int"/></f></get_hex>\n\t<_r><x path="Int"/></_r>\n\t<_g><x path="Int"/></_g>\n\t<_b><x path="Int"/></_b>\n\t<_a><x path="Int"/></_a>\n\t<new public="1" set="method" line="28"><f a="promoSystem:?obj">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n</class>';
    gJ.__rtti = '<class path="miniclip.promotionsystem.core.model.vo.DateVO" params="">\n\t<extends path="miniclip.core.PromoVO"/>\n\t<year public="1" line="11"><x path="Int"/></year>\n\t<month public="1" line="12"><x path="Int"/></month>\n\t<day public="1" line="13"><x path="Int"/></day>\n\t<hour public="1" line="14"><x path="Int"/></hour>\n\t<minute public="1" line="15"><x path="Int"/></minute>\n\t<second public="1" line="16"><x path="Int"/></second>\n\t<new public="1" set="method" line="18"><f a="promoSystem:?obj">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n\t<meta><m n=":directlyUsed"/></meta>\n</class>';
    eO.__rtti = '<class path="miniclip.promotionsystem.core.model.vo.ImageDataVO" params="">\n\t<extends path="miniclip.core.PromoVO"/>\n\t<frameName public="1"><c path="String"/></frameName>\n\t<plistFilename public="1" line="14"><c path="String"/></plistFilename>\n\t<spriteFilename public="1" line="15"><c path="String"/></spriteFilename>\n\t<new public="1" set="method" line="18"><f a="promoSystem:?obj">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n</class>';
    nn.__rtti = '<class path="miniclip.promotionsystem.core.model.vo.ImageEntryVO" params="">\n\t<extends path="miniclip.promotionsystem.core.model.vo.AssetConfigVO"/>\n\t<implements path="miniclip.promotionsystem.core.interfaces.IListableResources"/>\n\t<CONFIG_IMAGE_TYPE_SPRITE public="1" get="inline" set="null" line="12" static="1"><c path="String"/></CONFIG_IMAGE_TYPE_SPRITE>\n\t<CONFIG_IMAGE_TYPE_FRAMED_SPRITE public="1" get="inline" set="null" line="13" static="1"><c path="String"/></CONFIG_IMAGE_TYPE_FRAMED_SPRITE>\n\t<CONFIG_IMAGE_TYPE_HORIZONTAL_STRETCH_FRAME public="1" get="inline" set="null" line="14" static="1"><c path="String"/></CONFIG_IMAGE_TYPE_HORIZONTAL_STRETCH_FRAME>\n\t<CONFIG_IMAGE_TYPE_SPECIAL public="1" get="inline" set="null" line="15" static="1"><c path="String"/></CONFIG_IMAGE_TYPE_SPECIAL>\n\t<type public="1"><c path="String"/></type>\n\t<params public="1"><d/></params>\n\t<isAtlas public="1" get="accessor" set="null"><x path="Bool"/></isAtlas>\n\t<get_isAtlas set="method" line="23"><f a=""><x path="Bool"/></f></get_isAtlas>\n\t<isSpecialImage public="1" get="accessor" set="null"><x path="Bool"/></isSpecialImage>\n\t<get_isSpecialImage set="method" line="31"><f a=""><x path="Bool"/></f></get_isSpecialImage>\n\t<frameName public="1"><c path="String"/></frameName>\n\t<frameDescription public="1"><c path="String"/></frameDescription>\n\t<plistFilename public="1" line="38"><c path="String"/></plistFilename>\n\t<spriteFilename public="1" line="39"><c path="String"/></spriteFilename>\n\t<actionKey public="1"><c path="String"/></actionKey>\n\t<imageData public="1"><c path="miniclip.promotionsystem.core.model.vo.ImageDataVO"/></imageData>\n\t<removeExtension set="method" line="51"><f a="frameName">\n\t<c path="String"/>\n\t<c path="String"/>\n</f></removeExtension>\n\t<getResourceList public="1" set="method" line="57"><f a="outputList">\n\t<c path="Array"><c path="miniclip.promotionsystem.core.model.vo.AssetDefinition"/></c>\n\t<c path="Array"><c path="miniclip.promotionsystem.core.model.vo.AssetDefinition"/></c>\n</f></getResourceList>\n\t<new public="1" set="method" line="44"><f a="promoSystem:?obj">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n</class>';
    nn.CONFIG_IMAGE_TYPE_SPRITE = "Sprite";
    nn.CONFIG_IMAGE_TYPE_FRAMED_SPRITE = "FramedSprite";
    nn.CONFIG_IMAGE_TYPE_HORIZONTAL_STRETCH_FRAME = "HorizontalStretchFrame";
    nn.CONFIG_IMAGE_TYPE_SPECIAL = "Special";
    ly.__rtti = '<class path="miniclip.promotionsystem.core.model.vo.NotificationDataVO" params="">\n\t<extends path="miniclip.core.PromoVO"/>\n\t<deltaTime public="1" line="12"><x path="Int"/></deltaTime>\n\t<time public="1"><c path="miniclip.promotionsystem.core.model.TimeVO"/></time>\n\t<text public="1"><c path="String"/></text>\n\t<handleSpecialTypes set="method" line="21" override="1"><f a="fieldName:fieldValue">\n\t<c path="String"/>\n\t<d/>\n\t<x path="Bool"/>\n</f></handleSpecialTypes>\n\t<new public="1" set="method" line="16"><f a="promoSystem:?obj">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n</class>';
    gT.__rtti = '<class path="miniclip.promotionsystem.core.model.vo.PopupActionParametersVO" params="">\n\t<extends path="miniclip.core.PromoVO"/>\n\t<TARGET_COIN_SHOP public="1" get="inline" set="null" line="22" static="1"><c path="String"/></TARGET_COIN_SHOP>\n\t<TARGET_CASH_SHOP public="1" get="inline" set="null" line="23" static="1"><c path="String"/></TARGET_CASH_SHOP>\n\t<TARGET_CUE_SHOP public="1" get="inline" set="null" line="24" static="1"><c path="String"/></TARGET_CUE_SHOP>\n\t<TARGET_POWER_SHOP public="1" get="inline" set="null" line="25" static="1"><c path="String"/></TARGET_POWER_SHOP>\n\t<TARGET_MINIGAMES_SHOP public="1" get="inline" set="null" line="26" static="1"><c path="String"/></TARGET_MINIGAMES_SHOP>\n\t<TARGET_MATCH_TIERS public="1" get="inline" set="null" line="27" static="1"><c path="String"/></TARGET_MATCH_TIERS>\n\t<TARGET_TOURNAMENT_TIERS public="1" get="inline" set="null" line="28" static="1"><c path="String"/></TARGET_TOURNAMENT_TIERS>\n\t<target public="1"><c path="String"/></target>\n\t<tier public="1" line="13"><x path="Int"/></tier>\n\t<productId public="1" line="14"><x path="Float"/></productId>\n\t<transactionId public="1"><c path="String"/></transactionId>\n\t<appId public="1"><c path="String"/></appId>\n\t<url public="1"><c path="String"/></url>\n\t<urlAndroid public="1"><c path="String"/></urlAndroid>\n\t<actionToken public="1"><c path="String"/></actionToken>\n\t<promoParamSkinShopTabName public="1"><c path="String"/></promoParamSkinShopTabName>\n\t<new public="1" set="method" line="31"><f a="promoSystem:?obj">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n</class>';
    gT.TARGET_COIN_SHOP = "coinShop";
    gT.TARGET_CASH_SHOP = "cashShop";
    gT.TARGET_CUE_SHOP = "cueShop";
    gT.TARGET_POWER_SHOP = "powerShop";
    gT.TARGET_MINIGAMES_SHOP = "miniGameShop";
    gT.TARGET_MATCH_TIERS = "matchTiers";
    gT.TARGET_TOURNAMENT_TIERS = "tournamentTiers";
    g2.__rtti = '<class path="miniclip.promotionsystem.core.model.vo.PopupActionVO" params="">\n\t<extends path="miniclip.core.PromoVO"/>\n\t<implements path="miniclip.promotionsystem.core.interfaces.IPromotionAction"/>\n\t<ACTION_REDIRECT public="1" get="inline" set="null" line="31" static="1"><c path="String"/></ACTION_REDIRECT>\n\t<ACTION_TRANSACTION public="1" get="inline" set="null" line="32" static="1"><c path="String"/></ACTION_TRANSACTION>\n\t<ACTION_DISMISS public="1" get="inline" set="null" line="33" static="1"><c path="String"/></ACTION_DISMISS>\n\t<ACTION_STORE public="1" get="inline" set="null" line="34" static="1"><c path="String"/></ACTION_STORE>\n\t<ACTION_URL public="1" get="inline" set="null" line="35" static="1"><c path="String"/></ACTION_URL>\n\t<SUCCESS_TRIGGER_STATE get="inline" set="null" line="37" static="1"><c path="String"/></SUCCESS_TRIGGER_STATE>\n\t<FAILURE_TRIGGER_STATE get="inline" set="null" line="38" static="1"><c path="String"/></FAILURE_TRIGGER_STATE>\n\t<type public="1" set="null"><c path="String"/></type>\n\t<actionType public="1"><c path="String"/></actionType>\n\t<successTrigger public="1"><c path="miniclip.promotionsystem.core.model.vo.triggers.WaitForEventTrigger"/></successTrigger>\n\t<failureTrigger public="1"><c path="miniclip.promotionsystem.core.model.vo.triggers.WaitForEventTrigger"/></failureTrigger>\n\t<parameters public="1"><c path="miniclip.promotionsystem.core.model.vo.PopupActionParametersVO"/></parameters>\n\t<successDelegateSelector public="1"><f a="">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionAction"/>\n\t<x path="Void"/>\n</f></successDelegateSelector>\n\t<failureDelegateSelector public="1"><f a="">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionAction"/>\n\t<x path="Void"/>\n</f></failureDelegateSelector>\n\t<popUpActionDismissesPopup public="1" set="null"><x path="Bool"/></popUpActionDismissesPopup>\n\t<popUpActionDeactivatesOffer public="1" set="null"><x path="Bool"/></popUpActionDeactivatesOffer>\n\t<popUpActionKillsOffer public="1" set="null"><x path="Bool"/></popUpActionKillsOffer>\n\t<createDefaultWaitForEventTrigger set="method" line="59"><f a="promoSystem:triggerName:activationEvent:onActivationEvent">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<c path="String"/>\n\t<c path="Array"><c path="String"/></c>\n\t<c path="Array"><c path="String"/></c>\n\t<c path="miniclip.promotionsystem.core.model.vo.triggers.WaitForEventTrigger"/>\n</f></createDefaultWaitForEventTrigger>\n\t<initWithConfiguration public="1" set="method" line="76"><f a="configuration">\n\t<d/>\n\t<x path="Void"/>\n</f></initWithConfiguration>\n\t<getData public="1" set="method" line="81"><f a="delegate">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionActionDelegate"/>\n\t<x path="Void"/>\n</f></getData>\n\t<getActionFromConfiguration public="1" set="method" line="86"><f a="configuration">\n\t<d/>\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionAction"/>\n</f></getActionFromConfiguration>\n\t<reset public="1" set="method" line="93"><f a=""><x path="Void"/></f></reset>\n\t<success public="1" set="method" line="108"><f a=""><x path="Void"/></f></success>\n\t<failure public="1" set="method" line="115"><f a=""><x path="Void"/></f></failure>\n\t<getState public="1" set="method" line="122"><f a=""><d/></f></getState>\n\t<setState public="1" set="method" line="141"><f a="state">\n\t<d/>\n\t<x path="Void"/>\n</f></setState>\n\t<run public="1" set="method" line="152"><f a="delegate">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionActionDelegate"/>\n\t<x path="Void"/>\n</f></run>\n\t<new public="1" set="method" line="40"><f a="promoSystem:offerName:actionName:?obj">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<c path="String"/>\n\t<c path="String"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n\t<meta><m n=":directlyUsed"/></meta>\n</class>';
    g2.ACTION_REDIRECT = "redirect";
    g2.ACTION_TRANSACTION = "transaction";
    g2.ACTION_DISMISS = "dismiss";
    g2.ACTION_STORE = "store";
    g2.ACTION_URL = "url";
    g2.SUCCESS_TRIGGER_STATE = "successTriggerState";
    g2.FAILURE_TRIGGER_STATE = "failureTriggerState";
    qo.__rtti = '<class path="miniclip.promotionsystem.core.model.vo.PopupCustomData" params="">\n\t<extends path="miniclip.core.PromoVO"/>\n\t<implements path="miniclip.promotionsystem.core.interfaces.IListableResources"/>\n\t<timerConfiguration public="1"><c path="miniclip.promotionsystem.core.model.vo.TextEntryVO"/></timerConfiguration>\n\t<textEntries public="1"><c path="Array"><c path="miniclip.promotionsystem.core.model.vo.TextEntryVO"/></c></textEntries>\n\t<imageEntries public="1"><c path="Array"><c path="miniclip.promotionsystem.core.model.vo.ImageEntryVO"/></c></imageEntries>\n\t<popUpImage public="1"><c path="String"/></popUpImage>\n\t<buttonConfiguration public="1"><c path="miniclip.promotionsystem.core.model.vo.ButtonConfigurationVO"/></buttonConfiguration>\n\t<buttonsConfiguration public="1"><c path="Array"><c path="miniclip.promotionsystem.core.model.vo.ButtonConfigurationVO"/></c></buttonsConfiguration>\n\t<productsThatKill public="1"><c path="Array"><c path="String"/></c></productsThatKill>\n\t<needAllProductsToKill public="1"><x path="Bool"/></needAllProductsToKill>\n\t<doNotShowIfUsingBundleConfiguration public="1"><x path="Bool"/></doNotShowIfUsingBundleConfiguration>\n\t<shouldHaveFrame public="1"><x path="Bool"/></shouldHaveFrame>\n\t<hideVIPBadge public="1"><x path="Bool"/></hideVIPBadge>\n\t<uniqueId public="1"><c path="String"/></uniqueId>\n\t<shouldHaveExitButton public="1"><x path="Bool"/></shouldHaveExitButton>\n\t<allowedStates public="1"><c path="String"/></allowedStates>\n\t<appsThatKill public="1"><c path="Array"><c path="String"/></c></appsThatKill>\n\t<hideIfAppInstalledIOS public="1"><x path="Bool"/></hideIfAppInstalledIOS>\n\t<hideIfAppInstalledAndroid public="1"><x path="Bool"/></hideIfAppInstalledAndroid>\n\t<getResourceList public="1" set="method" line="39"><f a="outputList">\n\t<c path="Array"><c path="miniclip.promotionsystem.core.model.vo.AssetDefinition"/></c>\n\t<c path="Array"><c path="miniclip.promotionsystem.core.model.vo.AssetDefinition"/></c>\n</f></getResourceList>\n\t<new public="1" set="method" line="32"><f a="promoSystem:?obj">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n</class>';
    kf.__rtti = '<class path="miniclip.promotionsystem.core.model.vo.PromotionOffer" params="">\n\t<extends path="miniclip.core.PromoVO"/>\n\t<implements path="miniclip.promotionsystem.core.interfaces.IListableResources"/>\n\t<implements path="partials.Partial"/>\n\t<TRIGGER_WaitForEventTrigger public="1" get="inline" set="null" line="30" static="1"><c path="String"/></TRIGGER_WaitForEventTrigger>\n\t<TRIGGER_WaitForTimeTrigger public="1" get="inline" set="null" line="31" static="1"><c path="String"/></TRIGGER_WaitForTimeTrigger>\n\t<TRIGGER_WaitForDeltaTimeTrigger public="1" get="inline" set="null" line="32" static="1"><c path="String"/></TRIGGER_WaitForDeltaTimeTrigger>\n\t<TRIGGER_WaitForNestedTriggersTrigger public="1" get="inline" set="null" line="33" static="1"><c path="String"/></TRIGGER_WaitForNestedTriggersTrigger>\n\t<TRIGGER_WaitForSequenceNestedTriggersTrigger public="1" get="inline" set="null" line="34" static="1"><c path="String"/></TRIGGER_WaitForSequenceNestedTriggersTrigger>\n\t<START_TRIGGER_STATE get="inline" set="null" line="36" static="1"><c path="String"/></START_TRIGGER_STATE>\n\t<WAKE_UP_TRIGGER_STATE get="inline" set="null" line="37" static="1"><c path="String"/></WAKE_UP_TRIGGER_STATE>\n\t<BADGE_END_TRIGGER_STATE get="inline" set="null" line="38" static="1"><c path="String"/></BADGE_END_TRIGGER_STATE>\n\t<POP_UP_TRIGGER_STATE get="inline" set="null" line="39" static="1"><c path="String"/></POP_UP_TRIGGER_STATE>\n\t<POP_UP_DISSMISSED_TRIGGER_STATE get="inline" set="null" line="40" static="1"><c path="String"/></POP_UP_DISSMISSED_TRIGGER_STATE>\n\t<KILL_TRIGGER_STATE get="inline" set="null" line="41" static="1"><c path="String"/></KILL_TRIGGER_STATE>\n\t<RESET_TRIGGER_STATE get="inline" set="null" line="42" static="1"><c path="String"/></RESET_TRIGGER_STATE>\n\t<INTERRUPT_TRIGGER_STATE get="inline" set="null" line="43" static="1"><c path="String"/></INTERRUPT_TRIGGER_STATE>\n\t<RESUME_TRIGGER_STATE get="inline" set="null" line="44" static="1"><c path="String"/></RESUME_TRIGGER_STATE>\n\t<LAST_ACTIVATION_TIMESTAMP_STATE get="inline" set="null" line="45" static="1"><c path="String"/></LAST_ACTIVATION_TIMESTAMP_STATE>\n\t<PROMOTION_ACTIONS_STATE get="inline" set="null" line="46" static="1"><c path="String"/></PROMOTION_ACTIONS_STATE>\n\t<PROMOTION_OFFER_POP_UP_DISMISS_TRIGGER_NAME get="inline" set="null" line="48" static="1"><c path="String"/></PROMOTION_OFFER_POP_UP_DISMISS_TRIGGER_NAME>\n\t<PROMOTION_OFFER_POP_UP_DISMISS_EVENT get="inline" set="null" line="49" static="1"><c path="String"/></PROMOTION_OFFER_POP_UP_DISMISS_EVENT>\n\t<PROMOTION_OFFER_POP_UP_DISMISSED_EVENT get="inline" set="null" line="50" static="1"><c path="String"/></PROMOTION_OFFER_POP_UP_DISMISSED_EVENT>\n\t<PROMOTION_OFFER_ACTION_SUCCESS_EVENT get="inline" set="null" line="52" static="1"><c path="String"/></PROMOTION_OFFER_ACTION_SUCCESS_EVENT>\n\t<PROMOTION_OFFER_ACTION_FAILURE_EVENT get="inline" set="null" line="53" static="1"><c path="String"/></PROMOTION_OFFER_ACTION_FAILURE_EVENT>\n\t<CURRENT_TIMESTAMP_STATE get="inline" set="null" line="55" static="1"><c path="String"/></CURRENT_TIMESTAMP_STATE>\n\t<PROMOTION_OFFER_STATE get="inline" set="null" line="56" static="1"><c path="String"/></PROMOTION_OFFER_STATE>\n\t<POP_UP_ACTIVE_STATE get="inline" set="null" line="57" static="1"><c path="String"/></POP_UP_ACTIVE_STATE>\n\t<INTERRUPT_PROMOTION_STATE get="inline" set="null" line="58" static="1"><c path="String"/></INTERRUPT_PROMOTION_STATE>\n\t<uniqueId public="1"><c path="String"/></uniqueId>\n\t<offerName public="1"><c path="String"/></offerName>\n\t<startDate public="1"><c path="Date"/></startDate>\n\t<endDate public="1"><c path="Date"/></endDate>\n\t<endOfActivationDate public="1"><c path="Date"/></endOfActivationDate>\n\t<startTrigger public="1"><c path="miniclip.promotionsystem.core.model.vo.triggers.TriggerEventVO"/></startTrigger>\n\t<promoToken public="1"><c path="String"/></promoToken>\n\t<promoTokenParameter public="1"><x path="Map">\n\t<c path="String"/>\n\t<d/>\n</x></promoTokenParameter>\n\t<wakeUpTrigger public="1"><c path="miniclip.promotionsystem.core.model.vo.triggers.TriggerEventVO"/></wakeUpTrigger>\n\t<killTrigger public="1"><c path="miniclip.promotionsystem.core.model.vo.triggers.TriggerEventVO"/></killTrigger>\n\t<resetTrigger public="1"><c path="miniclip.promotionsystem.core.model.vo.triggers.TriggerEventVO"/></resetTrigger>\n\t<interruptTrigger public="1"><c path="miniclip.promotionsystem.core.model.vo.triggers.TriggerEventVO"/></interruptTrigger>\n\t<resumeTrigger public="1"><c path="miniclip.promotionsystem.core.model.vo.triggers.TriggerEventVO"/></resumeTrigger>\n\t<storeChanges public="1"><c path="Array"><c path="miniclip.promotionsystem.core.model.vo.StoreChangeVO"/></c></storeChanges>\n\t<badgePriority public="1"><x path="Float"/></badgePriority>\n\t<badgeText public="1"><c path="String"/></badgeText>\n\t<badgeImage public="1"><c path="String"/></badgeImage>\n\t<badgeEndTrigger public="1"><c path="miniclip.promotionsystem.core.model.vo.triggers.TriggerEventVO"/></badgeEndTrigger>\n\t<popupImage public="1"><c path="String"/></popupImage>\n\t<popUpButtonText public="1"><c path="String"/></popUpButtonText>\n\t<popUpAction public="1"><c path="miniclip.promotionsystem.core.model.vo.PopupActionVO"/></popUpAction>\n\t<popUpActions public="1"><c path="haxe.ds.StringMap"><c path="miniclip.promotionsystem.core.model.vo.PopupActionVO"/></c></popUpActions>\n\t<popUpActionKillsOffer public="1"><x path="Bool"/></popUpActionKillsOffer>\n\t<popUpActionDeactivatesOffer public="1"><x path="Bool"/></popUpActionDeactivatesOffer>\n\t<popUpActionDismissesPopUp public="1"><x path="Bool"/></popUpActionDismissesPopUp>\n\t<popUpTrigger public="1"><c path="miniclip.promotionsystem.core.model.vo.triggers.TriggerEventVO"/></popUpTrigger>\n\t<popUpCustomData public="1"><c path="miniclip.promotionsystem.core.model.vo.PopupCustomData"/></popUpCustomData>\n\t<shouldInstanceOffer public="1" line="87"><x path="Bool"/></shouldInstanceOffer>\n\t<disableOffer public="1" line="88"><x path="Bool"/></disableOffer>\n\t<beforeBeginNotification public="1"><c path="miniclip.promotionsystem.core.model.vo.NotificationDataVO"/></beforeBeginNotification>\n\t<activeNotification public="1"><c path="miniclip.promotionsystem.core.model.vo.NotificationDataVO"/></activeNotification>\n\t<beforeEndNotification public="1"><c path="miniclip.promotionsystem.core.model.vo.NotificationDataVO"/></beforeEndNotification>\n\t<afterStartDateNotification public="1"><c path="miniclip.promotionsystem.core.model.vo.NotificationDataVO"/></afterStartDateNotification>\n\t<beforeEndDateNotification public="1"><c path="miniclip.promotionsystem.core.model.vo.NotificationDataVO"/></beforeEndDateNotification>\n\t<badgeConfiguration public="1"><c path="miniclip.promotionsystem.core.model.vo.ButtonConfigurationVO"/></badgeConfiguration>\n\t<badgeConfigurationWeb public="1"><c path="miniclip.promotionsystem.core.model.vo.ButtonConfigurationVO"/></badgeConfigurationWeb>\n\t<badgeCycleCooldown public="1"><x path="Float"/></badgeCycleCooldown>\n\t<hidePromotion public="1" get="accessor" set="accessor">\n\t\t<x path="Bool"/>\n\t\t<meta><m n=":isVar"/></meta>\n\t</hidePromotion>\n\t<get_hidePromotion set="method" line="105"><f a=""><x path="Bool"/></f></get_hidePromotion>\n\t<set_hidePromotion set="method" line="107"><f a="value">\n\t<x path="Bool"/>\n\t<x path="Bool"/>\n</f></set_hidePromotion>\n\t<hidePromotionMobile public="1"><x path="Bool"/></hidePromotionMobile>\n\t<hidePromotionIOS public="1"><x path="Bool"/></hidePromotionIOS>\n\t<hidePromotionAmazon public="1"><x path="Bool"/></hidePromotionAmazon>\n\t<hidePromotionAndroid public="1"><x path="Bool"/></hidePromotionAndroid>\n\t<hidePromotionWeb public="1" get="accessor" set="accessor">\n\t\t<x path="Bool"/>\n\t\t<meta><m n=":isVar"/></meta>\n\t</hidePromotionWeb>\n\t<get_hidePromotionWeb set="method" line="125"><f a=""><x path="Bool"/></f></get_hidePromotionWeb>\n\t<set_hidePromotionWeb set="method" line="127"><f a="value">\n\t<x path="Bool"/>\n\t<x path="Bool"/>\n</f></set_hidePromotionWeb>\n\t<hidePromotionMiniclip public="1"><x path="Bool"/></hidePromotionMiniclip>\n\t<hidePromotionFacebook public="1"><x path="Bool"/></hidePromotionFacebook>\n\t<activatePopUpOnOfferActivation public="1" line="146"><x path="Bool"/></activatePopUpOnOfferActivation>\n\t<lastActivationTimestamp public="1"><x path="Float"/></lastActivationTimestamp>\n\t<badgeRemainingTime public="1" get="accessor" set="null"><x path="Float"/></badgeRemainingTime>\n\t<get_badgeRemainingTime set="method" line="153"><f a=""><x path="Float"/></f></get_badgeRemainingTime>\n\t<popUpActive line="174"><x path="Bool"/></popUpActive>\n\t<popUpDismissedTrigger public="1"><c path="miniclip.promotionsystem.core.model.vo.triggers.WaitForEventTrigger"/></popUpDismissedTrigger>\n\t<_initialized><x path="Bool"/></_initialized>\n\t<interruptPromotion><x path="Bool"/></interruptPromotion>\n\t<currentTimestamp public="1" set="accessor"><x path="Float"/></currentTimestamp>\n\t<set_currentTimestamp set="method" line="184"><f a="currentTime">\n\t<x path="Float"/>\n\t<x path="Float"/>\n</f></set_currentTimestamp>\n\t<_startTimestamp><x path="Float"/></_startTimestamp>\n\t<_endTimestamp><x path="Float"/></_endTimestamp>\n\t<_endOfActivationTimestamp><x path="Float"/></_endOfActivationTimestamp>\n\t<_state><e path="miniclip.promotionsystem.core.model.vo.StateOffer"/></_state>\n\t<offerState public="1" get="accessor" set="null"><e path="miniclip.promotionsystem.core.model.vo.StateOffer"/></offerState>\n\t<get_offerState set="method" line="251"><f a=""><e path="miniclip.promotionsystem.core.model.vo.StateOffer"/></f></get_offerState>\n\t<delegate public="1"><c path="miniclip.promotionsystem.core.interfaces.IPromotionOfferDelegate"/></delegate>\n\t<handleSpecialTypes set="method" line="342" override="1"><f a="key:obj">\n\t<c path="String"/>\n\t<d/>\n\t<x path="Bool"/>\n</f></handleSpecialTypes>\n\t<isOfferActive public="1" set="method" line="374"><f a=""><x path="Bool"/></f></isOfferActive>\n\t<processTime public="1" set="method" line="385"><f a="currentTime">\n\t<x path="Float"/>\n\t<x path="Void"/>\n</f></processTime>\n\t<updateDisableOffer public="1" set="method" line="455"><f a=""><x path="Void"/></f></updateDisableOffer>\n\t<getOfferState public="1" set="method" line="461"><f a=""><e path="miniclip.promotionsystem.core.model.vo.StateOffer"/></f></getOfferState>\n\t<setOfferState public="1" set="method" line="466"><f a="state:?timestamp">\n\t<e path="miniclip.promotionsystem.core.model.vo.StateOffer"/>\n\t<x path="Float"/>\n\t<x path="Void"/>\n</f></setOfferState>\n\t<getResourceList public="1" set="method" line="488"><f a="outputList">\n\t<c path="Array"><c path="miniclip.promotionsystem.core.model.vo.AssetDefinition"/></c>\n\t<c path="Array"><c path="miniclip.promotionsystem.core.model.vo.AssetDefinition"/></c>\n</f></getResourceList>\n\t<set_offer_state_not_started set="method" line="502"><f a="timestamp">\n\t<x path="Float"/>\n\t<x path="Void"/>\n</f></set_offer_state_not_started>\n\t<set_offer_wait_start_trigger set="method" line="570"><f a="timestamp">\n\t<x path="Float"/>\n\t<x path="Void"/>\n</f></set_offer_wait_start_trigger>\n\t<set_offer_state_active set="method" line="615"><f a="timestamp">\n\t<x path="Float"/>\n\t<x path="Void"/>\n</f></set_offer_state_active>\n\t<set_offer_wait_wake_up_trigger set="method" line="654"><f a="timestamp">\n\t<x path="Float"/>\n\t<x path="Void"/>\n</f></set_offer_wait_wake_up_trigger>\n\t<set_offer_state_killed set="method" line="683"><f a="timestamp">\n\t<x path="Float"/>\n\t<x path="Void"/>\n</f></set_offer_state_killed>\n\t<setPopupActiveState public="1" set="method" line="725"><f a="active">\n\t<x path="Bool"/>\n\t<x path="Void"/>\n</f></setPopupActiveState>\n\t<isOfferCloseToBegin public="1" set="method" line="744"><f a=""><x path="Bool"/></f></isOfferCloseToBegin>\n\t<isOfferCloseToEnd public="1" set="method" line="803"><f a=""><x path="Bool"/></f></isOfferCloseToEnd>\n\t<getDeltaToDisplayCloseToBeginNotification public="1" set="method" line="820"><f a=""><x path="Float"/></f></getDeltaToDisplayCloseToBeginNotification>\n\t<getDeltaToDisplayActiveNotification public="1" set="method" line="906"><f a=""><x path="Float"/></f></getDeltaToDisplayActiveNotification>\n\t<getDeltaToDisplayCloseToEndNotification public="1" set="method" line="977"><f a=""><x path="Float"/></f></getDeltaToDisplayCloseToEndNotification>\n\t<getDeltaToDisplayAfterStartDateNotification public="1" set="method" line="998"><f a=""><x path="Float"/></f></getDeltaToDisplayAfterStartDateNotification>\n\t<getDeltaToDisplayBeforeEndDateNotification public="1" set="method" line="1028"><f a=""><x path="Float"/></f></getDeltaToDisplayBeforeEndDateNotification>\n\t<isPopUpActive public="1" set="method" line="1055"><f a=""><x path="Bool"/></f></isPopUpActive>\n\t<actionSuccess public="1" set="method" line="1065"><f a="action">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionAction"/>\n\t<x path="Void"/>\n</f></actionSuccess>\n\t<actionFailure public="1" set="method" line="1147"><f a="action">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionAction"/>\n\t<x path="Void"/>\n</f></actionFailure>\n\t<getState public="1" set="method" line="1159"><f a=""><d/></f></getState>\n\t<setState public="1" set="method" line="1227"><f a="state">\n\t<d/>\n\t<x path="Void"/>\n</f></setState>\n\t<getPopupDismissedEvent public="1" set="method" line="1300"><f a=""><c path="String"/></f></getPopupDismissedEvent>\n\t<getKillEvent public="1" set="method" line="1308"><f a=""><c path="String"/></f></getKillEvent>\n\t<onStartTriggerActivated set="method" line="1316"><f a="triggerName">\n\t<c path="String"/>\n\t<x path="Void"/>\n</f></onStartTriggerActivated>\n\t<onPopUpTriggerActivated set="method" line="1356"><f a="triggerName">\n\t<c path="String"/>\n\t<x path="Void"/>\n</f></onPopUpTriggerActivated>\n\t<onPopupDismissedTriggerActivated set="method" line="1398"><f a="?triggerName">\n\t<c path="String"/>\n\t<x path="Void"/>\n</f></onPopupDismissedTriggerActivated>\n\t<onBadgeEndTriggerActivated set="method" line="1455"><f a="?triggerName">\n\t<c path="String"/>\n\t<x path="Void"/>\n</f></onBadgeEndTriggerActivated>\n\t<onWakeUpTriggerActivated set="method" line="1515"><f a="triggerName">\n\t<c path="String"/>\n\t<x path="Void"/>\n</f></onWakeUpTriggerActivated>\n\t<onKillTriggerActivated set="method" line="1544"><f a="triggerName">\n\t<c path="String"/>\n\t<x path="Void"/>\n</f></onKillTriggerActivated>\n\t<onResetTriggerActivated set="method" line="1570"><f a="triggerName">\n\t<c path="String"/>\n\t<x path="Void"/>\n</f></onResetTriggerActivated>\n\t<onInterruptTriggerActivated set="method" line="1611"><f a="triggerName">\n\t<c path="String"/>\n\t<x path="Void"/>\n</f></onInterruptTriggerActivated>\n\t<onResumeTriggerActivated set="method" line="1637"><f a="triggerName">\n\t<c path="String"/>\n\t<x path="Void"/>\n</f></onResumeTriggerActivated>\n\t<onSuccessTriggerActivated_Popup set="method" line="1662"><f a="triggerName">\n\t<c path="String"/>\n\t<x path="Void"/>\n</f></onSuccessTriggerActivated_Popup>\n\t<onFailureTriggerActivated_Popup set="method" line="1679"><f a="triggerName">\n\t<c path="String"/>\n\t<x path="Void"/>\n</f></onFailureTriggerActivated_Popup>\n\t<kill public="1" set="method" line="1684"><f a=""><x path="Void"/></f></kill>\n\t<toString public="1" set="method" line="1704"><f a=""><c path="String"/></f></toString>\n\t<reset public="1" set="method" line="1712"><f a=""><x path="Void"/></f></reset>\n\t<new public="1" set="method" line="257"><f a="promoSystem:configuration">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n\t<meta>\n\t\t<m n=":directlyUsed"/>\n\t\t<m n=":build"><e>partials.Partials.process()</e></m>\n\t\t<m n=":autoBuild"><e>partials.Partials.process()</e></m>\n\t\t<m n=":partials"/>\n\t</meta>\n</class>';
    kf.TRIGGER_WaitForEventTrigger = "MCPromoWaitForEventTrigger";
    kf.TRIGGER_WaitForTimeTrigger = "MCPromoWaitForTimeTrigger";
    kf.TRIGGER_WaitForDeltaTimeTrigger = "MCPromoWaitForDeltaTimeTrigger";
    kf.TRIGGER_WaitForNestedTriggersTrigger = "MCPromoWaitForNestedTriggersTrigger";
    kf.TRIGGER_WaitForSequenceNestedTriggersTrigger = "MCPromoWaitForSequencedNestedTriggersTrigger";
    kf.START_TRIGGER_STATE = "startTriggerState";
    kf.WAKE_UP_TRIGGER_STATE = "wakeupTriggerState";
    kf.BADGE_END_TRIGGER_STATE = "badgeEndTriggerState";
    kf.POP_UP_TRIGGER_STATE = "popUpTriggerState";
    kf.POP_UP_DISSMISSED_TRIGGER_STATE = "popUpDismissedTriggerState";
    kf.KILL_TRIGGER_STATE = "killTriggerState";
    kf.RESET_TRIGGER_STATE = "resetTriggerState";
    kf.INTERRUPT_TRIGGER_STATE = "interruptTriggerState";
    kf.RESUME_TRIGGER_STATE = "resumeTriggerState";
    kf.LAST_ACTIVATION_TIMESTAMP_STATE = "lastActivation";
    kf.PROMOTION_ACTIONS_STATE = "promotionActionsState";
    kf.PROMOTION_OFFER_POP_UP_DISMISS_TRIGGER_NAME = "PROMO_OFFER_POP_UP_TRIGGER";
    kf.PROMOTION_OFFER_POP_UP_DISMISS_EVENT = "PROMO_OFFER_POP_UP_DISMISS_";
    kf.PROMOTION_OFFER_POP_UP_DISMISSED_EVENT = "PROMO_OFFER_POP_UP_DISMISSED_";
    kf.PROMOTION_OFFER_ACTION_SUCCESS_EVENT = "PROMO_OFFER_ACTION_SUCCESS_";
    kf.PROMOTION_OFFER_ACTION_FAILURE_EVENT = "PROMO_OFFER_ACITON_FAILURE_";
    kf.CURRENT_TIMESTAMP_STATE = "currentTimestampState";
    kf.PROMOTION_OFFER_STATE = "promotionOfferState";
    kf.POP_UP_ACTIVE_STATE = "popupActiveState";
    kf.INTERRUPT_PROMOTION_STATE = "interrumptPromotionState";
    eA.__rtti = '<class path="miniclip.promotionsystem.core.model.vo.ReplaceProductVO" params="">\n\t<extends path="miniclip.core.PromoVO"/>\n\t<activate public="1"><c path="String"/></activate>\n\t<deactivate public="1"><c path="String"/></deactivate>\n\t<new public="1" set="method" line="15"><f a="promoSystem:?obj">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n</class>';
    dq.__rtti = '<class path="miniclip.promotionsystem.core.model.vo.StoreChangeVO" params="">\n\t<extends path="miniclip.core.PromoVO"/>\n\t<activateProduct public="1"><c path="String"/></activateProduct>\n\t<deactivateProduct public="1"><c path="String"/></deactivateProduct>\n\t<replaceProduct public="1"><c path="miniclip.promotionsystem.core.model.vo.ReplaceProductVO"/></replaceProduct>\n\t<replacementProductToActivate public="1" get="accessor" set="null"><c path="String"/></replacementProductToActivate>\n\t<get_replacementProductToActivate set="method" line="23"><f a=""><c path="String"/></f></get_replacementProductToActivate>\n\t<replacementProductToDeactivate public="1" get="accessor" set="null"><c path="String"/></replacementProductToDeactivate>\n\t<get_replacementProductToDeactivate set="method" line="32"><f a=""><c path="String"/></f></get_replacementProductToDeactivate>\n\t<new public="1" set="method" line="38"><f a="promoSystem:?obj">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n</class>';
    dy.__rtti = '<class path="miniclip.promotionsystem.core.model.vo.TextEntryVO" params="">\n\t<extends path="miniclip.promotionsystem.core.model.vo.AssetConfigVO"/>\n\t<implements path="miniclip.promotionsystem.core.interfaces.IListableResources"/>\n\t<TEXT_DATA_TYPE_TEXT public="1" line="9" static="1"><c path="String"/></TEXT_DATA_TYPE_TEXT>\n\t<TEXT_DATA_TYPE_OLD_PRICE public="1" line="10" static="1"><c path="String"/></TEXT_DATA_TYPE_OLD_PRICE>\n\t<TEXT_DATA_TYPE_NEW_PRICE public="1" line="11" static="1"><c path="String"/></TEXT_DATA_TYPE_NEW_PRICE>\n\t<TEXT_DATA_TYPE_OLD_AMOUNT public="1" line="12" static="1"><c path="String"/></TEXT_DATA_TYPE_OLD_AMOUNT>\n\t<TEXT_DATA_TYPE_NEW_AMOUNT public="1" line="13" static="1"><c path="String"/></TEXT_DATA_TYPE_NEW_AMOUNT>\n\t<TEXT_DATA_TYPE_DESCRIPTION public="1" line="14" static="1"><c path="String"/></TEXT_DATA_TYPE_DESCRIPTION>\n\t<TEXT_DATA_TYPE_JSON_QUERY public="1" line="15" static="1"><c path="String"/></TEXT_DATA_TYPE_JSON_QUERY>\n\t<dataType public="1"><c path="String"/></dataType>\n\t<tag public="1" line="18"><c path="String"/></tag>\n\t<transactionId public="1" line="19"><c path="String"/></transactionId>\n\t<jsonQuery public="1" line="20"><c path="String"/></jsonQuery>\n\t<bitmapFontName public="1"><c path="String"/></bitmapFontName>\n\t<ttfFontName public="1" line="23"><c path="String"/></ttfFontName>\n\t<ttfFontSize public="1" line="24"><x path="Float"/></ttfFontSize>\n\t<ttfFontOutline public="1"><x path="Bool"/></ttfFontOutline>\n\t<ttfFontOutlineSize public="1"><x path="Int"/></ttfFontOutlineSize>\n\t<ttfFontOutlineColor public="1"><c path="miniclip.promotionsystem.core.model.vo.ColorDataVO"/></ttfFontOutlineColor>\n\t<productId public="1" line="29"><c path="String"/></productId>\n\t<productIndex public="1" line="30"><x path="Int"/></productIndex>\n\t<productMultiplier public="1" line="31"><x path="Int"/></productMultiplier>\n\t<shouldGetSum public="1"><x path="Bool"/></shouldGetSum>\n\t<shouldFormatValue public="1"><x path="Bool"/></shouldFormatValue>\n\t<shouldLocalizeValue public="1"><x path="Bool"/></shouldLocalizeValue>\n\t<shouldDisplayCurrencyIcon public="1"><x path="Bool"/></shouldDisplayCurrencyIcon>\n\t<shouldDisplayCoinIcon public="1"><x path="Bool"/></shouldDisplayCoinIcon>\n\t<shouldDisplayCashIcon public="1"><x path="Bool"/></shouldDisplayCashIcon>\n\t<multiline public="1"><x path="Bool"/></multiline>\n\t<horizontalStrikethrough public="1"><x path="Bool"/></horizontalStrikethrough>\n\t<diagonalStrikethrough public="1"><x path="Bool"/></diagonalStrikethrough>\n\t<actionKey public="1"><c path="String"/></actionKey>\n\t<productIdMultiplier public="1" line="46"><x path="Int"/></productIdMultiplier>\n\t<getResourceList public="1" set="method" line="54"><f a="outputList">\n\t<c path="Array"><c path="miniclip.promotionsystem.core.model.vo.AssetDefinition"/></c>\n\t<c path="Array"><c path="miniclip.promotionsystem.core.model.vo.AssetDefinition"/></c>\n</f></getResourceList>\n\t<new public="1" set="method" line="49"><f a="promoSystem:?obj">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n\t<meta><m n=":directlyUsed"/></meta>\n</class>';
    dy.TEXT_DATA_TYPE_TEXT = "text";
    dy.TEXT_DATA_TYPE_OLD_PRICE = "oldPrice";
    dy.TEXT_DATA_TYPE_NEW_PRICE = "newPrice";
    dy.TEXT_DATA_TYPE_OLD_AMOUNT = "oldAmount";
    dy.TEXT_DATA_TYPE_NEW_AMOUNT = "newAmount";
    dy.TEXT_DATA_TYPE_DESCRIPTION = "description";
    dy.TEXT_DATA_TYPE_JSON_QUERY = "jsonQuery";
    e4.__rtti = '<class path="miniclip.promotionsystem.core.model.vo.dataAccess.DataAccessBaseVO" params="">\n\t<extends path="miniclip.core.PromoVO"/>\n\t<type public="1"><c path="String"/></type>\n\t<execute public="1" set="method" line="15"><f a=""><d/></f></execute>\n\t<new public="1" set="method" line="10"><f a="promoSystem:obj">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n\t<meta><m n=":directlyUsed"/></meta>\n</class>';
    aH.__rtti = '<class path="miniclip.promotionsystem.core.model.vo.dataAccess.DataAccessABTestVO" params="">\n\t<extends path="miniclip.promotionsystem.core.model.vo.dataAccess.DataAccessBaseVO"/>\n\t<TYPE public="1" get="inline" set="null" line="10" static="1"><c path="String"/></TYPE>\n\t<valueForGroup public="1"><c path="Array"><c path="miniclip.promotionsystem.core.model.vo.dataAccess.ABTestVO"/></c></valueForGroup>\n\t<testId public="1"><c path="String"/></testId>\n\t<execute public="1" set="method" line="15" override="1"><f a=""><d/></f></execute>\n\t<new public="1" set="method" line="8"><f a="promoSystem:obj">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n\t<meta><m n=":directlyUsed"/></meta>\n</class>';
    aH.TYPE = "MCPromoDataAccessABtest";
    oV.__rtti = '<class path="miniclip.promotionsystem.core.model.vo.dataAccess.DataAccessEntryVO" params="" module="miniclip.promotionsystem.core.model.vo.dataAccess.DataAccessBaseVO">\n\t<extends path="miniclip.core.PromoVO"/>\n\t<value public="1"><d/></value>\n\t<handleSpecialTypes set="method" line="25" override="1"><f a="fieldName:obj">\n\t<c path="String"/>\n\t<d/>\n\t<x path="Bool"/>\n</f></handleSpecialTypes>\n\t<new public="1" set="method" line="21"><f a="promoSystem:obj">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n</class>';
    G.__rtti = '<class path="miniclip.promotionsystem.core.model.vo.dataAccess.ABTestVO" params="" module="miniclip.promotionsystem.core.model.vo.dataAccess.DataAccessABTestVO">\n\t<extends path="miniclip.promotionsystem.core.model.vo.dataAccess.DataAccessEntryVO"/>\n\t<groups public="1"><c path="Array"><c path="String"/></c></groups>\n\t<hasGroup public="1" set="method" line="47"><f a="group">\n\t<c path="String"/>\n\t<x path="Bool"/>\n</f></hasGroup>\n\t<new public="1" set="method" line="43"><f a="promoSystem:obj">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n</class>';
    h0.__rtti = '<class path="miniclip.promotionsystem.core.model.vo.dataAccess.DataAccessIndirectTemplateVO" params="">\n\t<extends path="miniclip.promotionsystem.core.model.vo.dataAccess.DataAccessBaseVO"/>\n\t<TYPE public="1" get="inline" set="null" line="11" static="1"><c path="String"/></TYPE>\n\t<target public="1"><d/></target>\n\t<replacements public="1"><c path="Array"><c path="miniclip.promotionsystem.core.model.vo.dataAccess.ReplacementVO"/></c></replacements>\n\t<execute public="1" set="method" line="16" override="1"><f a=""><d/></f></execute>\n\t<handleSpecialTypes set="method" line="40" override="1"><f a="fieldName:fieldValue">\n\t<c path="String"/>\n\t<d/>\n\t<x path="Bool"/>\n</f></handleSpecialTypes>\n\t<new public="1" set="method" line="9"><f a="promoSystem:obj">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n\t<meta><m n=":directlyUsed"/></meta>\n</class>';
    h0.TYPE = "MCPromoDataAccessIndirectTemplate";
    c1.__rtti = '<class path="miniclip.promotionsystem.core.model.vo.dataAccess.ReplacementVO" params="" module="miniclip.promotionsystem.core.model.vo.dataAccess.DataAccessIndirectTemplateVO">\n\t<extends path="miniclip.core.PromoVO"/>\n\t<replaceTag public="1"><c path="String"/></replaceTag>\n\t<replaceValue public="1"><d/></replaceValue>\n\t<handleSpecialTypes set="method" line="57" override="1"><f a="fieldName:obj">\n\t<c path="String"/>\n\t<d/>\n\t<x path="Bool"/>\n</f></handleSpecialTypes>\n\t<new public="1" set="method" line="52"><f a="promoSystem:obj">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n</class>';
    kI.__rtti = '<class path="miniclip.promotionsystem.core.model.vo.dataAccess.DataAccessIndirectVO" params="">\n\t<extends path="miniclip.promotionsystem.core.model.vo.dataAccess.DataAccessBaseVO"/>\n\t<TYPE public="1" get="inline" set="null" line="9" static="1"><c path="String"/></TYPE>\n\t<target public="1"><d/></target>\n\t<execute public="1" set="method" line="13" override="1"><f a=""><d/></f></execute>\n\t<handleSpecialTypes set="method" line="21" override="1"><f a="fieldName:fieldValue">\n\t<c path="String"/>\n\t<d/>\n\t<x path="Bool"/>\n</f></handleSpecialTypes>\n\t<new public="1" set="method" line="7"><f a="promoSystem:obj">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n\t<meta><m n=":directlyUsed"/></meta>\n</class>';
    kI.TYPE = "MCPromoDataAccessIndirect";
    gk.__rtti = '<class path="miniclip.promotionsystem.core.model.vo.dataAccess.DataAccessLocalizationVO" params="">\n\t<extends path="miniclip.promotionsystem.core.model.vo.dataAccess.DataAccessBaseVO"/>\n\t<TYPE public="1" get="inline" set="null" line="10" static="1"><c path="String"/></TYPE>\n\t<valueForLanguage public="1"><c path="Array"><c path="miniclip.promotionsystem.core.model.vo.dataAccess.LanguageVO"/></c></valueForLanguage>\n\t<execute public="1" set="method" line="14" override="1"><f a=""><d/></f></execute>\n\t<new public="1" set="method" line="8"><f a="promoSystem:obj">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n\t<meta><m n=":directlyUsed"/></meta>\n</class>';
    gk.TYPE = "MCPromoDataAccessLocalization";
    he.__rtti = '<class path="miniclip.promotionsystem.core.model.vo.dataAccess.LanguageVO" params="" module="miniclip.promotionsystem.core.model.vo.dataAccess.DataAccessLocalizationVO">\n\t<extends path="miniclip.promotionsystem.core.model.vo.dataAccess.DataAccessEntryVO"/>\n\t<languages public="1"><c path="Array"><c path="String"/></c></languages>\n\t<hasLanguage public="1" set="method" line="46"><f a="language">\n\t<c path="String"/>\n\t<x path="Bool"/>\n</f></hasLanguage>\n\t<new public="1" set="method" line="42"><f a="promoSystem:obj">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n</class>';
    fX.__rtti = '<class path="miniclip.promotionsystem.core.model.vo.dataAccess.DataAccessNumberPropertyVO" params="">\n\t<extends path="miniclip.promotionsystem.core.model.vo.dataAccess.DataAccessBaseVO"/>\n\t<TYPE public="1" get="inline" set="null" line="12" static="1"><c path="String"/></TYPE>\n\t<valueForRange public="1"><c path="Array"><c path="miniclip.promotionsystem.core.model.vo.dataAccess.NumberVO"/></c></valueForRange>\n\t<propertyType public="1"><c path="String"/></propertyType>\n\t<execute public="1" set="method" line="17" override="1"><f a=""><d/></f></execute>\n\t<new public="1" set="method" line="10"><f a="promoSystem:obj">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n\t<meta><m n=":directlyUsed"/></meta>\n</class>';
    fX.TYPE = "MCPromoDataAccessNumberProperty";
    kp.__rtti = '<class path="miniclip.promotionsystem.core.model.vo.dataAccess.NumberVO" params="" module="miniclip.promotionsystem.core.model.vo.dataAccess.DataAccessNumberPropertyVO">\n\t<extends path="miniclip.promotionsystem.core.model.vo.dataAccess.DataAccessEntryVO"/>\n\t<ranges public="1"><c path="Array"><c path="miniclip.promotionsystem.core.model.vo.dataAccess.RangeVO"/></c></ranges>\n\t<hasNumber public="1" set="method" line="49"><f a="number">\n\t<x path="Float"/>\n\t<x path="Bool"/>\n</f></hasNumber>\n\t<isDefault public="1" set="method" line="60"><f a=""><x path="Bool"/></f></isDefault>\n\t<new public="1" set="method" line="45"><f a="promoSystem:obj">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n</class>';
    P.__rtti = '<class path="miniclip.promotionsystem.core.model.vo.dataAccess.RangeVO" params="" module="miniclip.promotionsystem.core.model.vo.dataAccess.DataAccessNumberPropertyVO">\n\t<extends path="miniclip.core.PromoVO"/>\n\t<DEFAULT get="inline" set="null" line="74" static="1"><c path="String"/></DEFAULT>\n\t<inferior public="1" line="76"><x path="Float"/></inferior>\n\t<superior public="1" line="77"><x path="Float"/></superior>\n\t<excludeInferior public="1"><x path="Bool"/></excludeInferior>\n\t<excludeSuperior public="1"><x path="Bool"/></excludeSuperior>\n\t<isDefault public="1"><x path="Bool"/></isDefault>\n\t<onRange public="1" set="method" line="89"><f a="number">\n\t<x path="Float"/>\n\t<x path="Bool"/>\n</f></onRange>\n\t<new public="1" set="method" line="82"><f a="promoSystem:configuration">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n</class>';
    P.DEFAULT = "default";
    o6.__rtti = '<class path="miniclip.promotionsystem.core.model.vo.dataAccess.DataAccessPlatformVO" params="">\n\t<extends path="miniclip.promotionsystem.core.model.vo.dataAccess.DataAccessBaseVO"/>\n\t<TYPE public="1" get="inline" set="null" line="10" static="1"><c path="String"/></TYPE>\n\t<valueForPlatform public="1"><c path="Array"><c path="miniclip.promotionsystem.core.model.vo.dataAccess.PlatformVO"/></c></valueForPlatform>\n\t<execute public="1" set="method" line="14" override="1"><f a=""><d/></f></execute>\n\t<new public="1" set="method" line="8"><f a="promoSystem:obj">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n\t<meta><m n=":directlyUsed"/></meta>\n</class>';
    o6.TYPE = "MCPromoDataAccessPlatform";
    jn.__rtti = '<class path="miniclip.promotionsystem.core.model.vo.dataAccess.PlatformVO" params="" module="miniclip.promotionsystem.core.model.vo.dataAccess.DataAccessPlatformVO">\n\t<extends path="miniclip.promotionsystem.core.model.vo.dataAccess.DataAccessEntryVO"/>\n\t<platforms public="1"><c path="Array"><c path="String"/></c></platforms>\n\t<hasPlatform public="1" set="method" line="46"><f a="platform">\n\t<c path="String"/>\n\t<x path="Bool"/>\n</f></hasPlatform>\n\t<new public="1" set="method" line="42"><f a="promoSystem:obj">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n</class>';
    cR.__rtti = '<class path="miniclip.promotionsystem.core.model.vo.dataAccess.DataAccessUserPropertyVO" params="">\n\t<extends path="miniclip.promotionsystem.core.model.vo.dataAccess.DataAccessBaseVO"/>\n\t<TYPE public="1" get="inline" set="null" line="10" static="1"><c path="String"/></TYPE>\n\t<valueForProperty public="1"><c path="Array"><c path="miniclip.promotionsystem.core.model.vo.dataAccess.UserPropertiesVO"/></c></valueForProperty>\n\t<propertyType public="1"><c path="String"/></propertyType>\n\t<propertyInfo public="1"><x path="Map">\n\t<c path="String"/>\n\t<d/>\n</x></propertyInfo>\n\t<execute public="1" set="method" line="16" override="1"><f a=""><d/></f></execute>\n\t<new public="1" set="method" line="8"><f a="promoSystem:obj">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n\t<meta><m n=":directlyUsed"/></meta>\n</class>';
    cR.TYPE = "MCPromoDataAccessUserProperty";
    hF.__rtti = '<class path="miniclip.promotionsystem.core.model.vo.dataAccess.UserPropertiesVO" params="" module="miniclip.promotionsystem.core.model.vo.dataAccess.DataAccessUserPropertyVO">\n\t<extends path="miniclip.promotionsystem.core.model.vo.dataAccess.DataAccessEntryVO"/>\n\t<properties public="1"><c path="Array"><c path="String"/></c></properties>\n\t<hasProperty public="1" set="method" line="48"><f a="property">\n\t<c path="String"/>\n\t<x path="Bool"/>\n</f></hasProperty>\n\t<new public="1" set="method" line="44"><f a="promoSystem:obj">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n</class>';
    cG.__rtti = '<class path="miniclip.promotionsystem.core.model.vo.triggers.PromotionMultiEventVO" params="">\n\t<extends path="miniclip.core.PromoVO"/>\n\t<implements path="miniclip.promotionsystem.core.interfaces.IMultiTriggerEvent"/>\n\t<SEPARATOR public="1" get="inline" set="null" line="15" static="1"><c path="String"/></SEPARATOR>\n\t<ENABLED_STATE get="inline" set="null" line="17" static="1"><c path="String"/></ENABLED_STATE>\n\t<TRIGGER_EVENTS_STATE get="inline" set="null" line="18" static="1"><c path="String"/></TRIGGER_EVENTS_STATE>\n\t<activateOnFirstEvent public="1"><x path="Bool"/></activateOnFirstEvent>\n\t<events public="1"><c path="Array"><c path="Array"><c path="String"/></c></c></events>\n\t<triggerEvents public="1"><x path="Map">\n\t<c path="String"/>\n\t<c path="miniclip.promotionsystem.core.model.vo.triggers.TriggerEventVO"/>\n</x></triggerEvents>\n\t<S_TriggerActivated public="1" line="23"><c path="hxsignal.impl.Signal0"/></S_TriggerActivated>\n\t<enabled public="1" set="accessor">\n\t\t<x path="Bool"/>\n\t\t<meta><m n=":isVar"/></meta>\n\t</enabled>\n\t<set_enabled public="1" set="method" line="26"><f a="enabled">\n\t<x path="Bool"/>\n\t<x path="Bool"/>\n</f></set_enabled>\n\t<reset public="1" set="method" line="57"><f a=""><x path="Void"/></f></reset>\n\t<getEvents public="1" set="method" line="65"><f a=""><c path="Array"><c path="String"/></c></f></getEvents>\n\t<addEvent public="1" set="method" line="76"><f a="eventLevels">\n\t<c path="Array"><c path="String"/></c>\n\t<x path="Void"/>\n</f></addEvent>\n\t<disableEvents set="method" line="99"><f a=""><x path="Void"/></f></disableEvents>\n\t<enableEvents set="method" line="105"><f a=""><x path="Void"/></f></enableEvents>\n\t<eventReceived set="method" line="111"><f a="triggerEvent">\n\t<t path="miniclip.promotionsystem.core.model.PromoEvent"/>\n\t<x path="Void"/>\n</f></eventReceived>\n\t<activate public="1" set="method" line="145"><f a=""><x path="Void"/></f></activate>\n\t<getState public="1" set="method" line="151"><f a=""><d/></f></getState>\n\t<setState public="1" set="method" line="173"><f a="state">\n\t<d/>\n\t<x path="Void"/>\n</f></setState>\n\t<new public="1" set="method" line="44"><f a="promoSystem:?obj">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n\t<meta><m n=":directlyUsed"/></meta>\n</class>';
    cG.SEPARATOR = "_";
    cG.ENABLED_STATE = "enabledState";
    cG.TRIGGER_EVENTS_STATE = "triggerEventsState";
    c0.__rtti = '<class path="miniclip.promotionsystem.core.model.vo.triggers.TriggerEventVO" params="">\n\t<extends path="miniclip.core.PromoVO"/>\n\t<TRIGGER_WaitForEventTrigger public="1" get="inline" set="null" line="15" static="1"><c path="String"/></TRIGGER_WaitForEventTrigger>\n\t<TRIGGER_WaitForTimeTrigger public="1" get="inline" set="null" line="16" static="1"><c path="String"/></TRIGGER_WaitForTimeTrigger>\n\t<TRIGGER_WaitForMultiTimeTrigger public="1" get="inline" set="null" line="17" static="1"><c path="String"/></TRIGGER_WaitForMultiTimeTrigger>\n\t<TRIGGER_WaitForDeltaTimeTrigger public="1" get="inline" set="null" line="18" static="1"><c path="String"/></TRIGGER_WaitForDeltaTimeTrigger>\n\t<TRIGGER_WaitForNestedTriggersTrigger public="1" get="inline" set="null" line="19" static="1"><c path="String"/></TRIGGER_WaitForNestedTriggersTrigger>\n\t<TRIGGER_WaitForSequenceNestedTriggersTrigger public="1" get="inline" set="null" line="20" static="1"><c path="String"/></TRIGGER_WaitForSequenceNestedTriggersTrigger>\n\t<RESET_EVENT_STATE get="inline" set="null" line="22" static="1"><c path="String"/></RESET_EVENT_STATE>\n\t<ENABLE_EVENT_STATE get="inline" set="null" line="23" static="1"><c path="String"/></ENABLE_EVENT_STATE>\n\t<DISABLE_EVENT_STATE get="inline" set="null" line="24" static="1"><c path="String"/></DISABLE_EVENT_STATE>\n\t<RESET_ON_DISABLE_STATE get="inline" set="null" line="25" static="1"><c path="String"/></RESET_ON_DISABLE_STATE>\n\t<NUM_ACTIVATIONS_STATE get="inline" set="null" line="26" static="1"><c path="String"/></NUM_ACTIVATIONS_STATE>\n\t<MAX_ACTIVATIONS_STATE get="inline" set="null" line="27" static="1"><c path="String"/></MAX_ACTIVATIONS_STATE>\n\t<SUPER_CLASS_STATE get="inline" set="null" line="28" static="1"><c path="String"/></SUPER_CLASS_STATE>\n\t<RECEIVED_EVENT get="inline" set="null" line="29" static="1"><c path="String"/></RECEIVED_EVENT>\n\t<ENABLED_STATE get="inline" set="null" line="31" static="1"><c path="String"/></ENABLED_STATE>\n\t<TRIGGER_EVENTS_STATE get="inline" set="null" line="32" static="1"><c path="String"/></TRIGGER_EVENTS_STATE>\n\t<_enabled line="34"><x path="Bool"/></_enabled>\n\t<enabled public="1" get="accessor" set="accessor"><x path="Bool"/></enabled>\n\t<get_enabled set="method" line="36"><f a=""><x path="Bool"/></f></get_enabled>\n\t<set_enabled set="method" line="37"><f a="value">\n\t<x path="Bool"/>\n\t<x path="Bool"/>\n</f></set_enabled>\n\t<numActivations public="1" line="62"><x path="Int"/></numActivations>\n\t<triggerName public="1"><c path="String"/></triggerName>\n\t<triggerType public="1"><c path="String"/></triggerType>\n\t<parameters public="1"><c path="miniclip.promotionsystem.core.model.vo.triggers.TriggerParametersVO"/></parameters>\n\t<currentTimestamp line="68"><x path="Float"/></currentTimestamp>\n\t<set_currentTimestamp public="1" set="method" line="70"><f a="value">\n\t<x path="Float"/>\n\t<x path="Float"/>\n</f></set_currentTimestamp>\n\t<eventLevels public="1"><c path="Array"><c path="String"/></c></eventLevels>\n\t<receivedEvent public="1"><x path="Bool"/></receivedEvent>\n\t<S_TriggerActivated public="1"><c path="hxsignal.impl.Signal1"><c path="String"/></c></S_TriggerActivated>\n\t<handleSpecialTypes set="method" line="105" override="1"><f a="key:obj">\n\t<c path="String"/>\n\t<d/>\n\t<x path="Bool"/>\n</f></handleSpecialTypes>\n\t<reset public="1" set="method" line="116"><f a="?soft">\n\t<x path="Bool"/>\n\t<x path="Void"/>\n</f></reset>\n\t<trigger public="1" set="method" line="127"><f a=""><x path="Bool"/></f></trigger>\n\t<canActivate get="accessor" set="null"><x path="Bool"/></canActivate>\n\t<get_canActivate set="method" line="158"><f a=""><x path="Bool"/></f></get_canActivate>\n\t<description public="1" set="method" line="163"><f a=""><c path="String"/></f></description>\n\t<getState public="1" set="method" line="173"><f a=""><d/></f></getState>\n\t<setState public="1" set="method" line="196"><f a="state">\n\t<d/>\n\t<x path="Void"/>\n</f></setState>\n\t<reachedMaxActivations public="1" set="method" line="228"><f a=""><x path="Bool"/></f></reachedMaxActivations>\n\t<new public="1" set="method" line="84"><f a="promoSystem:?obj">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n\t<meta><m n=":directlyUsed"/></meta>\n</class>';
    c0.TRIGGER_WaitForEventTrigger = "MCPromoWaitForEventTrigger";
    c0.TRIGGER_WaitForTimeTrigger = "MCPromoWaitForTimeTrigger";
    c0.TRIGGER_WaitForMultiTimeTrigger = "MCPromoWaitForMultiTimeTrigger";
    c0.TRIGGER_WaitForDeltaTimeTrigger = "MCPromoWaitForDeltaTimeTrigger";
    c0.TRIGGER_WaitForNestedTriggersTrigger = "MCPromoWaitForNestedTriggersTrigger";
    c0.TRIGGER_WaitForSequenceNestedTriggersTrigger = "MCPromoWaitForSequencedNestedTriggersTrigger";
    c0.RESET_EVENT_STATE = "resetEventState";
    c0.ENABLE_EVENT_STATE = "enableEventState";
    c0.DISABLE_EVENT_STATE = "disableEventState";
    c0.RESET_ON_DISABLE_STATE = "resetOnDisableState";
    c0.NUM_ACTIVATIONS_STATE = "numActivationsState";
    c0.MAX_ACTIVATIONS_STATE = "maxActivations";
    c0.SUPER_CLASS_STATE = "superClassState";
    c0.RECEIVED_EVENT = "receivedEvent";
    c0.ENABLED_STATE = "enabledState";
    c0.TRIGGER_EVENTS_STATE = "triggerEventsState";
    nU.__rtti = '<class path="miniclip.promotionsystem.core.model.vo.triggers.TriggerParametersVO" params="">\n\t<extends path="miniclip.core.PromoVO"/>\n\t<resetOnDisable public="1" line="13"><x path="Bool"/></resetOnDisable>\n\t<maxActivations public="1"><x path="Int"/></maxActivations>\n\t<onActivationEvents public="1"><c path="Array"><c path="String"/></c></onActivationEvents>\n\t<resetEvent public="1"><c path="miniclip.promotionsystem.core.model.vo.triggers.PromotionMultiEventVO"/></resetEvent>\n\t<enableEvent public="1"><c path="miniclip.promotionsystem.core.model.vo.triggers.PromotionMultiEventVO"/></enableEvent>\n\t<disableEvent public="1"><c path="miniclip.promotionsystem.core.model.vo.triggers.PromotionMultiEventVO"/></disableEvent>\n\t<dispatchEvents public="1" set="method" line="26"><f a=""><x path="Void"/></f></dispatchEvents>\n\t<reset public="1" set="method" line="37"><f a="soft">\n\t<x path="Bool"/>\n\t<x path="Void"/>\n</f></reset>\n\t<new public="1" set="method" line="20"><f a="promoSystem:?obj">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n\t<meta><m n=":directlyUsed"/></meta>\n</class>';
    fZ.__rtti = '<class path="miniclip.promotionsystem.core.model.vo.triggers.WaitForTimeBaseTrigger" params="">\n\t<extends path="miniclip.promotionsystem.core.model.vo.triggers.TriggerEventVO"/>\n\t<LAST_ACTIVATION_STATE get="inline" set="null" line="13" static="1"><c path="String"/></LAST_ACTIVATION_STATE>\n\t<START_TIMESTAMP_STATE get="inline" set="null" line="14" static="1"><c path="String"/></START_TIMESTAMP_STATE>\n\t<CURRENT_TIMESTAMP_STATE get="inline" set="null" line="15" static="1"><c path="String"/></CURRENT_TIMESTAMP_STATE>\n\t<lastActivationTimestamp public="1" line="17"><x path="Float"/></lastActivationTimestamp>\n\t<startTimestamp public="1" line="18"><x path="Float"/></startTimestamp>\n\t<timeToNextActivation public="1" get="accessor" set="null"><x path="Float"/></timeToNextActivation>\n\t<get_timeToNextActivation set="method" line="23"><f a=""><x path="Float"/></f></get_timeToNextActivation>\n\t<reset public="1" set="method" line="33" override="1"><f a="?soft">\n\t<x path="Bool"/>\n\t<x path="Void"/>\n</f></reset>\n\t<getState public="1" set="method" line="44" override="1"><f a=""><d/></f></getState>\n\t<setState public="1" set="method" line="53" override="1"><f a="state">\n\t<d/>\n\t<x path="Void"/>\n</f></setState>\n\t<new public="1" set="method" line="28"><f a="promoSystem:?obj">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n\t<meta><m n=":directlyUsed"/></meta>\n</class>';
    fZ.LAST_ACTIVATION_STATE = "lastActivationState";
    fZ.START_TIMESTAMP_STATE = "startTimestampState";
    fZ.CURRENT_TIMESTAMP_STATE = "currentTimestampState";
    hQ.__rtti = '<class path="miniclip.promotionsystem.core.model.vo.triggers.WaitForDeltaTimeTrigger" params="">\n\t<extends path="miniclip.promotionsystem.core.model.vo.triggers.WaitForTimeBaseTrigger"/>\n\t<MINUTE_IN_SECONDS public="1" get="inline" set="null" line="13" static="1"><x path="Int"/></MINUTE_IN_SECONDS>\n\t<HOUR_IN_SECONDS public="1" get="inline" set="null" line="14" static="1"><x path="Int"/></HOUR_IN_SECONDS>\n\t<DAY_IN_SECONDS public="1" get="inline" set="null" line="15" static="1"><x path="Int"/></DAY_IN_SECONDS>\n\t<WEEK_IN_SECONDS public="1" get="inline" set="null" line="16" static="1"><x path="Int"/></WEEK_IN_SECONDS>\n\t<MONTH_IN_SECONDS public="1" get="inline" set="null" line="17" static="1"><x path="Int"/></MONTH_IN_SECONDS>\n\t<YEAR_IN_SECONDS public="1" get="inline" set="null" line="18" static="1"><x path="Int"/></YEAR_IN_SECONDS>\n\t<deltaTime public="1"><x path="Float"/></deltaTime>\n\t<initialize set="method" line="29"><f a=""><x path="Void"/></f></initialize>\n\t<get_timeToNextActivation set="method" line="50" override="1"><f a=""><x path="Float"/></f></get_timeToNextActivation>\n\t<set_currentTimestamp public="1" set="method" line="65" override="1"><f a="currentTime">\n\t<x path="Float"/>\n\t<x path="Float"/>\n</f></set_currentTimestamp>\n\t<handleSpecialTypes set="method" line="110" override="1"><f a="key:obj">\n\t<c path="String"/>\n\t<d/>\n\t<x path="Bool"/>\n</f></handleSpecialTypes>\n\t<new public="1" set="method" line="22"><f a="promoSystem:?obj">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n\t<meta><m n=":directlyUsed"/></meta>\n</class>';
    hQ.MINUTE_IN_SECONDS = 60;
    hQ.HOUR_IN_SECONDS = 3600;
    hQ.DAY_IN_SECONDS = 86400;
    hQ.WEEK_IN_SECONDS = 604800;
    hQ.MONTH_IN_SECONDS = 2678400;
    hQ.YEAR_IN_SECONDS = 31536000;
    dA.__rtti = '<class path="miniclip.promotionsystem.core.model.vo.triggers.WaitForDeltaTimeTriggerParameters" params="">\n\t<extends path="miniclip.promotionsystem.core.model.vo.triggers.TriggerParametersVO"/>\n\t<years public="1"><x path="Int"/></years>\n\t<months public="1"><x path="Int"/></months>\n\t<weeks public="1"><x path="Int"/></weeks>\n\t<days public="1"><x path="Int"/></days>\n\t<hours public="1"><x path="Int"/></hours>\n\t<minutes public="1"><x path="Int"/></minutes>\n\t<seconds public="1"><x path="Int"/></seconds>\n\t<allowTriggerMoreThanOnceOnUpdate public="1"><x path="Bool"/></allowTriggerMoreThanOnceOnUpdate>\n\t<new public="1" set="method" line="24"><f a="promoSystem:?obj">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n\t<meta><m n=":directlyUsed"/></meta>\n</class>';
    ae.__rtti = '<class path="miniclip.promotionsystem.core.model.vo.triggers.WaitForEventTrigger" params="">\n\t<extends path="miniclip.promotionsystem.core.model.vo.triggers.TriggerEventVO"/>\n\t<nCount line="12"><x path="Int"/></nCount>\n\t<set_enabled set="method" line="14" override="1"><f a="value">\n\t<x path="Bool"/>\n\t<x path="Bool"/>\n</f></set_enabled>\n\t<handleSpecialTypes set="method" line="37" override="1"><f a="key:obj">\n\t<c path="String"/>\n\t<d/>\n\t<x path="Bool"/>\n</f></handleSpecialTypes>\n\t<initialize set="method" line="48"><f a=""><x path="Void"/></f></initialize>\n\t<trigger public="1" set="method" line="55" override="1"><f a=""><x path="Bool"/></f></trigger>\n\t<reset public="1" set="method" line="64" override="1"><f a="?soft">\n\t<x path="Bool"/>\n\t<x path="Void"/>\n</f></reset>\n\t<getActivationEvents public="1" set="method" line="70"><f a=""><c path="Array"><c path="String"/></c></f></getActivationEvents>\n\t<new public="1" set="method" line="29"><f a="promoSystem:?obj">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n\t<meta><m n=":directlyUsed"/></meta>\n</class>';
    kA.__rtti = '<class path="miniclip.promotionsystem.core.model.vo.triggers.WaitForEventTriggerParameters" params="">\n\t<extends path="miniclip.promotionsystem.core.model.vo.triggers.TriggerParametersVO"/>\n\t<activationEvent public="1"><c path="miniclip.promotionsystem.core.model.vo.triggers.PromotionMultiEventVO"/></activationEvent>\n\t<count public="1" line="12"><x path="Int"/></count>\n\t<reset public="1" set="method" line="19" override="1"><f a="soft">\n\t<x path="Bool"/>\n\t<x path="Void"/>\n</f></reset>\n\t<new public="1" set="method" line="14"><f a="promoSystem:?obj">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n\t<meta><m n=":directlyUsed"/></meta>\n</class>';
    aR.__rtti = '<class path="miniclip.promotionsystem.core.model.vo.triggers.WaitForMultiTimeTrigger" params="">\n\t<extends path="miniclip.promotionsystem.core.model.vo.triggers.WaitForTimeBaseTrigger"/>\n\t<handleSpecialTypes set="method" line="18" override="1"><f a="key:obj">\n\t<c path="String"/>\n\t<d/>\n\t<x path="Bool"/>\n</f></handleSpecialTypes>\n\t<set_currentTimestamp public="1" set="method" line="31" override="1"><f a="_time">\n\t<x path="Float"/>\n\t<x path="Float"/>\n</f></set_currentTimestamp>\n\t<get_timeToNextActivation set="method" line="62" override="1"><f a=""><x path="Float"/></f></get_timeToNextActivation>\n\t<reachedMaxActivations public="1" set="method" line="80" override="1"><f a=""><x path="Bool"/></f></reachedMaxActivations>\n\t<new public="1" set="method" line="12"><f a="promoSystem:?obj">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n\t<meta><m n=":directlyUsed"/></meta>\n</class>';
    pU.__rtti = '<class path="miniclip.promotionsystem.core.model.vo.triggers.WaitForMultiTimeTriggerParameters" params="">\n\t<extends path="miniclip.promotionsystem.core.model.vo.triggers.TriggerParametersVO"/>\n\t<activationDates public="1"><c path="Array"><c path="miniclip.promotionsystem.core.model.vo.DateVO"/></c></activationDates>\n\t<new public="1" set="method" line="12"><f a="promoSystem:?obj">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n\t<meta><m n=":directlyUsed"/></meta>\n</class>';
    nW.__rtti = '<class path="miniclip.promotionsystem.core.model.vo.triggers.WaitForSequencedNestedTriggersTrigger" params="">\n\t<extends path="miniclip.promotionsystem.core.model.vo.triggers.TriggerEventVO"/>\n\t<TRIGGERS_MAP get="inline" set="null" line="11" static="1"><c path="String"/></TRIGGERS_MAP>\n\t<triggersMap><x path="Map">\n\t<c path="String"/>\n\t<x path="Int"/>\n</x></triggersMap>\n\t<handleSpecialTypes set="method" line="23" override="1"><f a="key:obj">\n\t<c path="String"/>\n\t<d/>\n\t<x path="Bool"/>\n</f></handleSpecialTypes>\n\t<set_enabled set="method" line="36" override="1"><f a="value">\n\t<x path="Bool"/>\n\t<x path="Bool"/>\n</f></set_enabled>\n\t<enableTriggers set="method" line="46"><f a="value">\n\t<x path="Bool"/>\n\t<x path="Void"/>\n</f></enableTriggers>\n\t<set_currentTimestamp public="1" set="method" line="58" override="1"><f a="value">\n\t<x path="Float"/>\n\t<x path="Float"/>\n</f></set_currentTimestamp>\n\t<initialize set="method" line="73"><f a=""><x path="Void"/></f></initialize>\n\t<onTriggerActivated set="method" line="88"><f a="triggerName">\n\t<c path="String"/>\n\t<x path="Void"/>\n</f></onTriggerActivated>\n\t<trigger public="1" set="method" line="106" override="1"><f a=""><x path="Bool"/></f></trigger>\n\t<getState public="1" set="method" line="122" override="1"><f a=""><d/></f></getState>\n\t<setState public="1" set="method" line="141" override="1"><f a="state">\n\t<d/>\n\t<x path="Void"/>\n</f></setState>\n\t<new public="1" set="method" line="15"><f a="promoSystem:?obj">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n\t<meta><m n=":directlyUsed"/></meta>\n</class>';
    nW.TRIGGERS_MAP = "triggersMapState";
    or.__rtti = '<class path="miniclip.promotionsystem.core.model.vo.triggers.WaitForNestedTriggersTrigger" params="">\n\t<extends path="miniclip.promotionsystem.core.model.vo.triggers.WaitForSequencedNestedTriggersTrigger"/>\n\t<handleSpecialTypes set="method" line="16" override="1"><f a="key:obj">\n\t<c path="String"/>\n\t<d/>\n\t<x path="Bool"/>\n</f></handleSpecialTypes>\n\t<enableTriggers set="method" line="27" override="1"><f a="value">\n\t<x path="Bool"/>\n\t<x path="Void"/>\n</f></enableTriggers>\n\t<onTriggerActivated set="method" line="37" override="1"><f a="triggerName">\n\t<c path="String"/>\n\t<x path="Void"/>\n</f></onTriggerActivated>\n\t<new public="1" set="method" line="10"><f a="promoSystem:?obj">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n\t<meta><m n=":directlyUsed"/></meta>\n</class>';
    pF.__rtti = '<class path="miniclip.promotionsystem.core.model.vo.triggers.WaitForSequencedNestedTriggersTriggerParameters" params="">\n\t<extends path="miniclip.promotionsystem.core.model.vo.triggers.TriggerParametersVO"/>\n\t<activationTriggers public="1"><c path="Array"><c path="miniclip.promotionsystem.core.model.vo.triggers.TriggerEventVO"/></c></activationTriggers>\n\t<activateOnFirstTrigger public="1"><x path="Bool"/></activateOnFirstTrigger>\n\t<reset public="1" set="method" line="20" override="1"><f a="soft">\n\t<x path="Bool"/>\n\t<x path="Void"/>\n</f></reset>\n\t<handleSpecialTypes set="method" line="29" override="1"><f a="key:obj">\n\t<c path="String"/>\n\t<d/>\n\t<x path="Bool"/>\n</f></handleSpecialTypes>\n\t<new public="1" set="method" line="15"><f a="promoSystem:?obj">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n\t<meta><m n=":directlyUsed"/></meta>\n</class>';
    on.__rtti = '<class path="miniclip.promotionsystem.core.model.vo.triggers.WaitForNestedTriggersTriggerParameters" params="">\n\t<extends path="miniclip.promotionsystem.core.model.vo.triggers.WaitForSequencedNestedTriggersTriggerParameters"/>\n\t<new public="1" set="method" line="11"><f a="promoSystem:?obj">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n\t<meta><m n=":directlyUsed"/></meta>\n</class>';
    mJ.__rtti = '<class path="miniclip.promotionsystem.core.model.vo.triggers.WaitForTimeTrigger" params="">\n\t<extends path="miniclip.promotionsystem.core.model.vo.triggers.WaitForMultiTimeTrigger"/>\n\t<handleSpecialTypes set="method" line="17" override="1"><f a="key:obj">\n\t<c path="String"/>\n\t<d/>\n\t<x path="Bool"/>\n</f></handleSpecialTypes>\n\t<new public="1" set="method" line="11"><f a="promoSystem:?obj">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n\t<meta><m n=":directlyUsed"/></meta>\n</class>';
    qU.__rtti = '<class path="miniclip.promotionsystem.core.model.vo.triggers.WaitForTimeTriggerParameters" params="">\n\t<extends path="miniclip.promotionsystem.core.model.vo.triggers.WaitForMultiTimeTriggerParameters"/>\n\t<year public="1" line="12"><x path="Int"/></year>\n\t<month public="1" line="13"><x path="Int"/></month>\n\t<day public="1" line="14"><x path="Int"/></day>\n\t<hour public="1" line="15"><x path="Int"/></hour>\n\t<minute public="1" line="16"><x path="Int"/></minute>\n\t<second public="1" line="17"><x path="Int"/></second>\n\t<new public="1" set="method" line="19"><f a="promoSystem:?obj">\n\t<c path="miniclip.promotionsystem.core.interfaces.IPromotionSystemBase"/>\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n\t<meta><m n=":directlyUsed"/></meta>\n</class>';
    cy.actuators = [];
    cy.actuatorsLength = 0;
    cy.addedEvent = false;
    d3.defaultActuator = cy;
    d3.defaultEase = gB.get_easeOut();
    d3.targetLibraries = new qS();
    px.events = new hI();
    px.commands = new hA();
    px._isInitialized = false;
    oa._idCounter = 0;
    bI.DEFAULT_TIME_PER_UPDATE = 8.333333333333334;
    ql.ALL = 0;
    ql.TRACE = 1;
    ql.DEBUG = 2;
    ql.INFO = 3;
    ql.WARN = 4;
    ql.ERROR = 5;
    ql.FATAL = 6;
    ql.OFF = 7;
    ql._level = 5;
    ql._log_width = 20;
    ny.RETRY_ATTEMPTS_ENDED = "retryAttemptsEnded";
    W.USER_LOGGED_IN = "UserEvent::USER_LOGGED";
    W.USER_LOGGED_OUT = "userLoggedOut";
    bm._ftypeMapping = new io();
    fx.webRegex = new gF("(\\-web\\b)|(-web)$", "g");
    eK.sOrigin = new pp();
    qd.__identity = new qd();
    qd.__temp = new qd();
    ep._tTexCoords = new pp();
    ep._tMatrix = new qd();
    dk.onInit = new qv();
    dk.initialized = false;
    aN.__rtti = '<class path="oaktree.objects.FramedSpriteVO" params="">\n\t<extends path="oaktree.core.VO"/>\n\t<scaleHorizontal public="1"><x path="Bool"/></scaleHorizontal>\n\t<scaleVertical public="1"><x path="Bool"/></scaleVertical>\n\t<texture public="1"><c path="String"/></texture>\n\t<imageFrameName public="1"><c path="String"/></imageFrameName>\n\t<leftX public="1" line="14"><x path="Int"/></leftX>\n\t<rightX public="1" line="15"><x path="Int"/></rightX>\n\t<bottomY public="1" line="16"><x path="Int"/></bottomY>\n\t<topY public="1" line="17"><x path="Int"/></topY>\n\t<handleSpecialTypes set="method" line="27" override="1"><f a="key:obj">\n\t<c path="String"/>\n\t<d/>\n\t<x path="Bool"/>\n</f></handleSpecialTypes>\n\t<removeExtension set="method" line="58"><f a="frameName">\n\t<c path="String"/>\n\t<c path="String"/>\n</f></removeExtension>\n\t<asRectangle public="1" set="method" line="64"><f a=""><c path="openfl.geom.Rectangle"/></f></asRectangle>\n\t<clone public="1" set="method" line="69"><f a=""><c path="oaktree.objects.FramedSpriteVO"/></f></clone>\n\t<getResourceList public="1" set="method" line="86"><f a="outputList">\n\t<c path="Array"><t path="oaktree.objects.FramedSpriteAssetDef"/></c>\n\t<c path="Array"><t path="oaktree.objects.FramedSpriteAssetDef"/></c>\n</f></getResourceList>\n\t<new public="1" set="method" line="19"><f a="?obj">\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n\t<meta><m n=":directlyUsed"/></meta>\n</class>';
    gt.__rtti = '<class path="oaktree.objects.ManifestVO" params="">\n\t<extends path="oaktree.core.VO"/>\n\t<build public="1"><x path="Int"/></build>\n\t<assets public="1" line="11"><c path="Array"><c path="oaktree.objects.AssetVO"/></c></assets>\n\t<new public="1" set="method" line="13"><f a="obj">\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n\t<meta><m n=":directlyUsed"/></meta>\n</class>';
    lZ.__rtti = '<class path="oaktree.objects.AssetVO" params="" module="oaktree.objects.ManifestVO">\n\t<extends path="oaktree.core.VO"/>\n\t<id public="1"><c path="String"/></id>\n\t<src public="1"><c path="String"/></src>\n\t<type public="1"><c path="String"/></type>\n\t<base public="1"><c path="String"/></base>\n\t<texture public="1"><c path="String"/></texture>\n\t<metafile public="1"><c path="String"/></metafile>\n\t<new public="1" set="method" line="30"><f a="obj">\n\t<d/>\n\t<x path="Void"/>\n</f></new>\n\t<meta><m n=":directlyUsed"/></meta>\n</class>';
    oO.UTF8_TAB = 9;
    oO.UTF8_ENDLINE = 10;
    oO.UTF8_SPACE = 32;
    oO.UTF8_HYPHEN = 45;
    oO.__defaultFonts = new io();
    fH.codeToSymbolMap = (function(q) {
        var i;
        var i1 = new io();
        if (pN.USD != null) {
            i1.setReserved("USD", "$")
        } else {
            i1.h.USD = "$"
        }
        if (pN.EUR != null) {
            i1.setReserved("EUR", "â‚¬")
        } else {
            i1.h.EUR = "â‚¬"
        }
        if (pN.GBP != null) {
            i1.setReserved("GBP", "Â£")
        } else {
            i1.h.GBP = "Â£"
        }
        i = i1;
        return i
    }(this));
    fH.settings = {
        currency: {
            symbol: "$",
            format: "%s%v",
            decimal: ".",
            thousand: ",",
            precision: 2,
            grouping: 3
        },
        number: {
            precision: 0,
            grouping: 3,
            thousand: ",",
            decimal: "."
        }
    };
    ay.POINT_ZERO = new pp();
    ay.SLICES = 9;
    j5.NUMBER_FORMAT_NUMBER = "#";
    j5.NUMBER_FORMAT_ZERO = "0";
    j5.NUMBER_DECIMAL = ".";
    j5.FORMAT_REGEXP = new gF("{(\\d+)(:([^}]+))?}", "g");
    j5.arrayParamsReg = new gF("%@", "");
    ih._store = new cZ();
    k9.cache = new nH();
    k9.dispatcher = new lR();
    iN.__rootURL = window.document.URL;
    ld.currentDomain = new ld(null);
    ns.current = new i4();
    ns.__sentWarnings = new io();
    aD.SIN45 = 0.7071067811865476;
    aD.TAN22 = 0.41421356237309503;
    qy.SIN45 = 0.7071067811865476;
    qy.TAN22 = 0.41421356237309503;
    qy.fillCommands = new lS();
    qy.strokeCommands = new lS();
    aB.SIN45 = 0.7071067811865476;
    aB.TAN22 = 0.41421356237309503;
    aB.fillCommands = new lS();
    aB.strokeCommands = new lS();
    qX.fbData = [];
    mA.glContextId = 0;
    mA.glContexts = [];
    g5.UID = 0;
    nC.VERTEX_SRC = ["attribute vec2 openfl_aPosition;", "attribute vec2 openfl_aTexCoord0;", "attribute vec4 openfl_aColor;", "uniform mat3 openfl_uProjectionMatrix;", "uniform bool openfl_uUseColorTransform;", "varying vec2 openfl_vTexCoord;", "varying vec4 openfl_vColor;", "void main(void) {", "   gl_Position = vec4((openfl_uProjectionMatrix * vec3(openfl_aPosition, 1.0)).xy, 0.0, 1.0);", "   openfl_vTexCoord = openfl_aTexCoord0;", "   if(openfl_uUseColorTransform)", "   \topenfl_vColor = openfl_aColor;", "   else", "   \topenfl_vColor = vec4(openfl_aColor.rgb * openfl_aColor.a, openfl_aColor.a);", "}"];
    dX.__currentWinding = 0;
    dX.__fillIndex = 0;
    gn.__temp = new gn();
    fW.fillVertexAttributes = [new bo(2, 5126, false, "openfl_aPosition")];
    fW.drawTrianglesVertexAttributes = [new bo(2, 5126, false, "openfl_aPosition"), new bo(2, 5126, false, "openfl_aTexCoord0"), new bo(4, 5121, true, "openfl_aColor")];
    fW.primitiveVertexAttributes = [new bo(2, 5126, false, "openfl_aPosition"), new bo(4, 5126, false, "openfl_aColor")];
    fW.graphicsDataPool = [];
    fW.bucketPool = [];
    fW.SIN45 = 0.7071067811865476;
    fW.TAN22 = 0.41421356237309503;
    fW.objectPosition = new pp();
    fW.objectBounds = new gn();
    aU.compiledShadersCache = new io();
    nz.VERTS_PER_SPRITE = 4;
    f0.__isGLES = null;
    kQ.ADD = 0;
    kQ.ALPHA = 1;
    kQ.DARKEN = 2;
    kQ.DIFFERENCE = 3;
    kQ.ERASE = 4;
    kQ.HARDLIGHT = 5;
    kQ.INVERT = 6;
    kQ.LAYER = 7;
    kQ.LIGHTEN = 8;
    kQ.MULTIPLY = 9;
    kQ.NORMAL = 10;
    kQ.OVERLAY = 11;
    kQ.SCREEN = 12;
    kQ.SHADER = 13;
    kQ.SUBTRACT = 14;
    oH.NONE = 0;
    oH.ROUND = 1;
    oH.SQUARE = 2;
    pb.LINEAR = 0;
    pb.RADIAL = 1;
    e3.TILE_SCALE = 1;
    e3.TILE_ROTATION = 2;
    e3.TILE_RGB = 4;
    e3.TILE_ALPHA = 8;
    e3.TILE_TRANS_2x2 = 16;
    e3.TILE_RECT = 32;
    e3.TILE_ORIGIN = 64;
    e3.TILE_BLEND_NORMAL = 0;
    e3.TILE_BLEND_ADD = 65536;
    e3.TILE_BLEND_MULTIPLY = 131072;
    e3.TILE_BLEND_SCREEN = 262144;
    e3.TILE_BLEND_SUBTRACT = 524288;
    e3.TILE_BLEND_DARKEN = 1048576;
    e3.TILE_BLEND_LIGHTEN = 2097152;
    e3.TILE_BLEND_OVERLAY = 4194304;
    e3.TILE_BLEND_HARDLIGHT = 8388608;
    e3.TILE_BLEND_DIFFERENCE = 16777216;
    e3.TILE_BLEND_INVERT = 33554432;
    nd.LINEAR_RGB = 0;
    nd.RGB = 1;
    o8.BEVEL = 0;
    o8.MITER = 1;
    o8.ROUND = 2;
    eB.HORIZONTAL = 0;
    eB.NONE = 1;
    eB.NORMAL = 2;
    eB.VERTICAL = 3;
    aw.CONTEXT_LOST = "glcontextlost";
    aw.CONTEXT_RESTORED = "glcontextrestored";
    lz.ALWAYS = 0;
    lz.AUTO = 1;
    lz.NEVER = 2;
    lK.uniformRegex = new gF("^\\s*uniform\\s+(sampler(?:2D|Cube)|[bi]?vec[234]|float|int|bool|mat[234])\\s+(\\w+)\\s*(?:\\[(\\d+)\\])?\\s*;.*$", "gmi");
    lK.aPosition = "openfl_aPosition";
    lK.aTexCoord = "openfl_aTexCoord0";
    lK.aColor = "openfl_aColor";
    lK.uSampler = "openfl_uSampler0";
    lK.uProjectionMatrix = "openfl_uProjectionMatrix";
    lK.uColorMultiplier = "openfl_uColorMultiplier";
    lK.uColorOffset = "openfl_uColorOffset";
    lK.uObjectSize = "openfl_uObjectSize";
    lK.uTextureSize = "openfl_uTextureSize";
    lK.vTexCoord = "openfl_vTexCoord";
    lK.vColor = "openfl_vColor";
    lK.vertexHeader = ["attribute vec2 " + lK.aPosition + ";", "attribute vec2 " + lK.aTexCoord + ";", "attribute vec4 " + lK.aColor + ";", "uniform mat3 " + lK.uProjectionMatrix + ";", "uniform vec2 " + lK.uObjectSize + ";", "uniform vec2 " + lK.uTextureSize + ";", "varying vec2 " + lK.vTexCoord + ";", "varying vec4 " + lK.vColor + ";"];
    lK.fragmentHeader = ["uniform sampler2D " + lK.uSampler + ";", "uniform vec4 " + lK.uColorMultiplier + ";", "uniform vec4 " + lK.uColorOffset + ";", "uniform vec2 " + lK.uObjectSize + ";", "uniform vec2 " + lK.uTextureSize + ";", "varying vec2 " + lK.vTexCoord + ";", "varying vec4 " + lK.vColor + ";", "vec4 colorTransform(const vec4 color, const vec4 tint, const vec4 multiplier, const vec4 offset) {", "   vec4 unmultiply = vec4(color.rgb / color.a, color.a);", "   vec4 result = unmultiply * tint * multiplier;", "   result = result + offset;", "   result = clamp(result, 0., 1.);", "   result = vec4(result.rgb * result.a, result.a);", "   return result;", "}"];
    iG.PAD = 0;
    iG.REFLECT = 1;
    iG.REPEAT = 2;
    dT.BOTTOM = 0;
    dT.BOTTOM_LEFT = 1;
    dT.BOTTOM_RIGHT = 2;
    dT.LEFT = 3;
    dT.RIGHT = 4;
    dT.TOP = 5;
    dT.TOP_LEFT = 6;
    dT.TOP_RIGHT = 7;
    qx.FULL_SCREEN = 0;
    qx.FULL_SCREEN_INTERACTIVE = 1;
    qx.NORMAL = 2;
    pr.BEST = 0;
    pr.HIGH = 1;
    pr.LOW = 2;
    pr.MEDIUM = 3;
    oS.EXACT_FIT = 0;
    oS.NO_BORDER = 1;
    oS.NO_SCALE = 2;
    oS.SHOW_ALL = 3;
    jL.TILE_SCALE = 1;
    jL.TILE_ROTATION = 2;
    jL.TILE_RGB = 4;
    jL.TILE_ALPHA = 8;
    jL.TILE_TRANS_2x2 = 16;
    jL.TILE_RECT = 32;
    jL.TILE_ORIGIN = 64;
    jL.TILE_TRANS_COLOR = 128;
    jL.TILE_BLEND_NORMAL = 0;
    jL.TILE_BLEND_ADD = 65536;
    jL.TILE_BLEND_MULTIPLY = 131072;
    jL.TILE_BLEND_SCREEN = 262144;
    jL.TILE_BLEND_SUBTRACT = 524288;
    jL.TILE_BLEND_DARKEN = 1048576;
    jL.TILE_BLEND_LIGHTEN = 2097152;
    jL.TILE_BLEND_OVERLAY = 4194304;
    jL.TILE_BLEND_HARDLIGHT = 8388608;
    jL.TILE_BLEND_DIFFERENCE = 16777216;
    jL.TILE_BLEND_INVERT = 33554432;
    jL.__defaultPoint = new pp(0, 0);
    kn.NEGATIVE = 0;
    kn.NONE = 1;
    kn.POSITIVE = 2;
    l5.TEXTURE_MAX_ANISOTROPY_EXT = 34046;
    l5.MAX_SAMPLERS = 8;
    l5.MAX_TEXTURE_MAX_ANISOTROPY_EXT = 34047;
    l5.anisotropySupportTested = false;
    l5.supportsAnisotropy = false;
    l5.maxSupportedAnisotropy = 256;
    ir.ALL = 17664;
    ir.COLOR = 16384;
    ir.DEPTH = 256;
    ir.STENCIL = 1024;
    lH.ALWAYS = 519;
    lH.EQUAL = 514;
    lH.GREATER = 516;
    lH.GREATER_EQUAL = 518;
    lH.LESS = 513;
    lH.LESS_EQUAL = 515;
    lH.NEVER = 512;
    lH.NOT_EQUAL = 517;
    eL.BACK = 1028;
    eL.FRONT = 1029;
    eL.FRONT_AND_BACK = 1032;
    eL.NONE = 0;
    eG.internalFormat = -1;
    lY.DEFAULT_TO_STRING = "Error";
    qa.ACTIVITY = "activity";
    fi.LINK = "link";
    fi.TEXT_INPUT = "textInput";
    qJ.ERROR = "error";
    ls.FOCUS_IN = "focusIn";
    ls.FOCUS_OUT = "focusOut";
    ls.KEY_FOCUS_CHANGE = "keyFocusChange";
    ls.MOUSE_FOCUS_CHANGE = "mouseFocusChange";
    f8.FULL_SCREEN = "fullScreen";
    f8.FULL_SCREEN_INTERACTIVE_ACCEPTED = "fullScreenInteractiveAccepted";
    qj.DEVICE_ADDED = "deviceAdded";
    qj.DEVICE_REMOVED = "deviceRemoved";
    qj.DEVICE_UNUSABLE = "deviceUnusable";
    iT.HTTP_RESPONSE_STATUS = "httpResponseStatus";
    iT.HTTP_STATUS = "httpStatus";
    hx.IO_ERROR = "ioError";
    fa.KEY_DOWN = "keyDown";
    fa.KEY_UP = "keyUp";
    mN.CLICK = "click";
    mN.DOUBLE_CLICK = "doubleClick";
    mN.MIDDLE_CLICK = "middleClick";
    mN.MIDDLE_MOUSE_DOWN = "middleMouseDown";
    mN.MIDDLE_MOUSE_UP = "middleMouseUp";
    mN.MOUSE_DOWN = "mouseDown";
    mN.MOUSE_MOVE = "mouseMove";
    mN.MOUSE_OUT = "mouseOut";
    mN.MOUSE_OVER = "mouseOver";
    mN.MOUSE_UP = "mouseUp";
    mN.MOUSE_WHEEL = "mouseWheel";
    mN.RIGHT_CLICK = "rightClick";
    mN.RIGHT_MOUSE_DOWN = "rightMouseDown";
    mN.RIGHT_MOUSE_UP = "rightMouseUp";
    mN.ROLL_OUT = "rollOut";
    mN.ROLL_OVER = "rollOver";
    kJ.NET_STATUS = "netStatus";
    l2.PROGRESS = "progress";
    l2.SOCKET_DATA = "socketData";
    n9.SECURITY_ERROR = "securityError";
    nj.TIMER = "timer";
    nj.TIMER_COMPLETE = "timerComplete";
    hR.TOUCH_BEGIN = "touchBegin";
    hR.TOUCH_END = "touchEnd";
    hR.TOUCH_MOVE = "touchMove";
    hR.TOUCH_OUT = "touchOut";
    hR.TOUCH_OVER = "touchOver";
    hR.TOUCH_ROLL_OUT = "touchRollOut";
    hR.TOUCH_ROLL_OVER = "touchRollOver";
    hR.TOUCH_TAP = "touchTap";
    eP.__meta__ = {
        fields: {
            fragment: {
                fragment: null
            },
            get_uMultipliers: {
                noCompletion: null
            },
            set_uMultipliers: {
                noCompletion: null
            },
            get_uOffsets: {
                noCompletion: null
            },
            set_uOffsets: {
                noCompletion: null
            }
        }
    };
    qL.AXIS_ANGLE = 0;
    qL.EULER_ANGLES = 1;
    qL.QUATERNION = 2;
    eR.__registeredSounds = new io();
    ni.CONNECT_SUCCESS = "connectSuccess";
    hP.defaultObjectEncoding = 3;
    hO.FLUSHED = 0;
    hO.PENDING = 1;
    jl.BINARY = 0;
    jl.TEXT = 1;
    jl.VARIABLES = 2;
    qb.DELETE = 0;
    qb.GET = 1;
    qb.HEAD = 2;
    qb.OPTIONS = 3;
    qb.POST = 4;
    qb.PUT = 5;
    gO.currentDomain = new gO();
    mQ.ADVANCED = 0;
    mQ.NORMAL = 1;
    nJ.__registeredFonts = [];
    nD.BOLD = 0;
    nD.BOLD_ITALIC = 1;
    nD.ITALIC = 2;
    nD.REGULAR = 3;
    bU.DEVICE = 0;
    bU.EMBEDDED = 1;
    bU.EMBEDDED_CFF = 2;
    fy.NONE = 0;
    fy.PIXEL = 1;
    fy.SUBPIXEL = 2;
    b2.CENTER = 0;
    b2.LEFT = 1;
    b2.NONE = 2;
    b2.RIGHT = 3;
    bM.DYNAMIC = 0;
    bM.INPUT = 1;
    qh.CENTER = 0;
    qh.END = 1;
    qh.JUSTIFY = 2;
    qh.LEFT = 3;
    qh.RIGHT = 4;
    qh.START = 5;
    k3.isSupported = true;
    k3.numDevices = 0;
    k3.__deviceList = [];
    k3.__devices = new qS();
    k3.__instances = [];
    nQ.MAX_BUFFER_SIZE = 32000;
    gG.NUMBER_0 = 48;
    gG.NUMBER_1 = 49;
    gG.NUMBER_2 = 50;
    gG.NUMBER_3 = 51;
    gG.NUMBER_4 = 52;
    gG.NUMBER_5 = 53;
    gG.NUMBER_6 = 54;
    gG.NUMBER_7 = 55;
    gG.NUMBER_8 = 56;
    gG.NUMBER_9 = 57;
    gG.A = 65;
    gG.B = 66;
    gG.C = 67;
    gG.D = 68;
    gG.E = 69;
    gG.F = 70;
    gG.G = 71;
    gG.H = 72;
    gG.I = 73;
    gG.J = 74;
    gG.K = 75;
    gG.L = 76;
    gG.M = 77;
    gG.N = 78;
    gG.O = 79;
    gG.P = 80;
    gG.Q = 81;
    gG.R = 82;
    gG.S = 83;
    gG.T = 84;
    gG.U = 85;
    gG.V = 86;
    gG.W = 87;
    gG.X = 88;
    gG.Y = 89;
    gG.Z = 90;
    gG.NUMPAD_0 = 96;
    gG.NUMPAD_1 = 97;
    gG.NUMPAD_2 = 98;
    gG.NUMPAD_3 = 99;
    gG.NUMPAD_4 = 100;
    gG.NUMPAD_5 = 101;
    gG.NUMPAD_6 = 102;
    gG.NUMPAD_7 = 103;
    gG.NUMPAD_8 = 104;
    gG.NUMPAD_9 = 105;
    gG.NUMPAD_MULTIPLY = 106;
    gG.NUMPAD_ADD = 107;
    gG.NUMPAD_ENTER = 108;
    gG.NUMPAD_SUBTRACT = 109;
    gG.NUMPAD_DECIMAL = 110;
    gG.NUMPAD_DIVIDE = 111;
    gG.F1 = 112;
    gG.F2 = 113;
    gG.F3 = 114;
    gG.F4 = 115;
    gG.F5 = 116;
    gG.F6 = 117;
    gG.F7 = 118;
    gG.F8 = 119;
    gG.F9 = 120;
    gG.F10 = 121;
    gG.F11 = 122;
    gG.F12 = 123;
    gG.F13 = 124;
    gG.F14 = 125;
    gG.F15 = 126;
    gG.BACKSPACE = 8;
    gG.TAB = 9;
    gG.ALTERNATE = 18;
    gG.ENTER = 13;
    gG.COMMAND = 15;
    gG.SHIFT = 16;
    gG.CONTROL = 17;
    gG.BREAK = 19;
    gG.CAPS_LOCK = 20;
    gG.NUMPAD = 21;
    gG.ESCAPE = 27;
    gG.SPACE = 32;
    gG.PAGE_UP = 33;
    gG.PAGE_DOWN = 34;
    gG.END = 35;
    gG.HOME = 36;
    gG.LEFT = 37;
    gG.RIGHT = 39;
    gG.UP = 38;
    gG.DOWN = 40;
    gG.INSERT = 45;
    gG.DELETE = 46;
    gG.NUMLOCK = 144;
    gG.SEMICOLON = 186;
    gG.EQUAL = 187;
    gG.COMMA = 188;
    gG.MINUS = 189;
    gG.PERIOD = 190;
    gG.SLASH = 191;
    gG.BACKQUOTE = 192;
    gG.LEFTBRACKET = 219;
    gG.BACKSLASH = 220;
    gG.RIGHTBRACKET = 221;
    gG.QUOTE = 222;
    gp.DEFLATE = 0;
    gp.LZMA = 1;
    gp.ZLIB = 2;
    i3.BIG_ENDIAN = 0;
    i3.LITTLE_ENDIAN = 1;
    hV.EMITTER_TYPE_GRAVITY = 0;
    hV.EMITTER_TYPE_RADIAL = 1;
    hV.POSITION_TYPE_FREE = 0;
    hV.POSITION_TYPE_RELATIVE = 1;
    hV.POSITION_TYPE_GROUPED = 2;
    nN.queue = new oI();
    gd.VARINT = 0;
    gd.FIXED_64_BIT = 1;
    gd.LENGTH_DELIMITED = 2;
    gd.FIXED_32_BIT = 5;
    cb.main()
})(typeof console != "undefined" ? console : {
    log: function() {}
}, typeof window != "undefined" ? window : exports, typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);